; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x4c37e0_type = type <{ [8 x i8] }>
%G_0x4c37e8_type = type <{ [8 x i8] }>
%G_0x4c37f0_type = type <{ [8 x i8] }>
%G_0x4c37f8_type = type <{ [8 x i8] }>
%G_0x723694_type = type <{ [1 x i8] }>
%G__0x6cb9c0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x4c37e0 = global %G_0x4c37e0_type zeroinitializer
@G_0x4c37e8 = global %G_0x4c37e8_type zeroinitializer
@G_0x4c37f0 = global %G_0x4c37f0_type zeroinitializer
@G_0x4c37f8 = global %G_0x4c37f8_type zeroinitializer
@G_0x723694 = global %G_0x723694_type zeroinitializer
@G__0x6cb9c0 = global %G__0x6cb9c0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_44b1b0.getNeighbour(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @EdgeLoop(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_43a2b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_43a2b0, %struct.Memory** %MEMORY
  %loadMem_43a2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1132 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1133 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1132
  %27 = load i64, i64* %PC.i1131
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1131
  store i64 %26, i64* %RBP.i1133, align 8
  store %struct.Memory* %loadMem_43a2b1, %struct.Memory** %MEMORY
  %loadMem_43a2b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 29
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %R14.i1160 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %R14.i1160
  %36 = load i64, i64* %PC.i1159
  %37 = add i64 %36, 2
  store i64 %37, i64* %PC.i1159
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, -8
  %41 = inttoptr i64 %40 to i64*
  store i64 %35, i64* %41
  store i64 %40, i64* %38, align 8
  store %struct.Memory* %loadMem_43a2b4, %struct.Memory** %MEMORY
  %loadMem_43a2b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 33
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 3
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %RBX.i1187 = bitcast %union.anon* %47 to i64*
  %48 = load i64, i64* %RBX.i1187
  %49 = load i64, i64* %PC.i1186
  %50 = add i64 %49, 1
  store i64 %50, i64* %PC.i1186
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, -8
  %54 = inttoptr i64 %53 to i64*
  store i64 %48, i64* %54
  store i64 %53, i64* %51, align 8
  store %struct.Memory* %loadMem_43a2b6, %struct.Memory** %MEMORY
  %loadMem_43a2b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 33
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %57 to i64*
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %59 = getelementptr inbounds %struct.GPR, %struct.GPR* %58, i32 0, i32 13
  %60 = getelementptr inbounds %struct.Reg, %struct.Reg* %59, i32 0, i32 0
  %RSP.i1205 = bitcast %union.anon* %60 to i64*
  %61 = load i64, i64* %RSP.i1205
  %62 = load i64, i64* %PC.i1204
  %63 = add i64 %62, 7
  store i64 %63, i64* %PC.i1204
  %64 = sub i64 %61, 496
  store i64 %64, i64* %RSP.i1205, align 8
  %65 = icmp ult i64 %61, 496
  %66 = zext i1 %65 to i8
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %66, i8* %67, align 1
  %68 = trunc i64 %64 to i32
  %69 = and i32 %68, 255
  %70 = call i32 @llvm.ctpop.i32(i32 %69)
  %71 = trunc i32 %70 to i8
  %72 = and i8 %71, 1
  %73 = xor i8 %72, 1
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %73, i8* %74, align 1
  %75 = xor i64 496, %61
  %76 = xor i64 %75, %64
  %77 = lshr i64 %76, 4
  %78 = trunc i64 %77 to i8
  %79 = and i8 %78, 1
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %79, i8* %80, align 1
  %81 = icmp eq i64 %64, 0
  %82 = zext i1 %81 to i8
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %82, i8* %83, align 1
  %84 = lshr i64 %64, 63
  %85 = trunc i64 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %85, i8* %86, align 1
  %87 = lshr i64 %61, 63
  %88 = xor i64 %84, %87
  %89 = add i64 %88, %87
  %90 = icmp eq i64 %89, 2
  %91 = zext i1 %90 to i8
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %91, i8* %92, align 1
  store %struct.Memory* %loadMem_43a2b7, %struct.Memory** %MEMORY
  %loadMem_43a2be = load %struct.Memory*, %struct.Memory** %MEMORY
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 33
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %95 to i64*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 1
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %RAX.i1243 = bitcast %union.anon* %98 to i64*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 15
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %RBP.i1244 = bitcast %union.anon* %101 to i64*
  %102 = load i64, i64* %RBP.i1244
  %103 = add i64 %102, 48
  %104 = load i64, i64* %PC.i1242
  %105 = add i64 %104, 3
  store i64 %105, i64* %PC.i1242
  %106 = inttoptr i64 %103 to i32*
  %107 = load i32, i32* %106
  %108 = zext i32 %107 to i64
  store i64 %108, i64* %RAX.i1243, align 8
  store %struct.Memory* %loadMem_43a2be, %struct.Memory** %MEMORY
  %loadMem_43a2c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 33
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %PC.i1928 = bitcast %union.anon* %111 to i64*
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %113 = getelementptr inbounds %struct.GPR, %struct.GPR* %112, i32 0, i32 21
  %114 = getelementptr inbounds %struct.Reg, %struct.Reg* %113, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %114 to i32*
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %116 = getelementptr inbounds %struct.GPR, %struct.GPR* %115, i32 0, i32 15
  %117 = getelementptr inbounds %struct.Reg, %struct.Reg* %116, i32 0, i32 0
  %RBP.i1929 = bitcast %union.anon* %117 to i64*
  %118 = bitcast i32* %R10D.i to i64*
  %119 = load i64, i64* %RBP.i1929
  %120 = add i64 %119, 40
  %121 = load i64, i64* %PC.i1928
  %122 = add i64 %121, 4
  store i64 %122, i64* %PC.i1928
  %123 = inttoptr i64 %120 to i32*
  %124 = load i32, i32* %123
  %125 = zext i32 %124 to i64
  store i64 %125, i64* %118, align 8
  store %struct.Memory* %loadMem_43a2c1, %struct.Memory** %MEMORY
  %loadMem_43a2c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 33
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %PC.i2330 = bitcast %union.anon* %128 to i64*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 23
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R11D.i2331 = bitcast %union.anon* %131 to i32*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 15
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %RBP.i2332 = bitcast %union.anon* %134 to i64*
  %135 = bitcast i32* %R11D.i2331 to i64*
  %136 = load i64, i64* %RBP.i2332
  %137 = add i64 %136, 32
  %138 = load i64, i64* %PC.i2330
  %139 = add i64 %138, 4
  store i64 %139, i64* %PC.i2330
  %140 = inttoptr i64 %137 to i32*
  %141 = load i32, i32* %140
  %142 = zext i32 %141 to i64
  store i64 %142, i64* %135, align 8
  store %struct.Memory* %loadMem_43a2c5, %struct.Memory** %MEMORY
  %loadMem_43a2c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %144 = getelementptr inbounds %struct.GPR, %struct.GPR* %143, i32 0, i32 33
  %145 = getelementptr inbounds %struct.Reg, %struct.Reg* %144, i32 0, i32 0
  %PC.i2327 = bitcast %union.anon* %145 to i64*
  %146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %147 = getelementptr inbounds %struct.GPR, %struct.GPR* %146, i32 0, i32 3
  %148 = getelementptr inbounds %struct.Reg, %struct.Reg* %147, i32 0, i32 0
  %RBX.i2328 = bitcast %union.anon* %148 to i64*
  %149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %150 = getelementptr inbounds %struct.GPR, %struct.GPR* %149, i32 0, i32 15
  %151 = getelementptr inbounds %struct.Reg, %struct.Reg* %150, i32 0, i32 0
  %RBP.i2329 = bitcast %union.anon* %151 to i64*
  %152 = load i64, i64* %RBP.i2329
  %153 = add i64 %152, 24
  %154 = load i64, i64* %PC.i2327
  %155 = add i64 %154, 3
  store i64 %155, i64* %PC.i2327
  %156 = inttoptr i64 %153 to i32*
  %157 = load i32, i32* %156
  %158 = zext i32 %157 to i64
  store i64 %158, i64* %RBX.i2328, align 8
  store %struct.Memory* %loadMem_43a2c9, %struct.Memory** %MEMORY
  %loadMem_43a2cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 33
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %PC.i2324 = bitcast %union.anon* %161 to i64*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 29
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %R14D.i2325 = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 15
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %RBP.i2326 = bitcast %union.anon* %167 to i64*
  %168 = bitcast i32* %R14D.i2325 to i64*
  %169 = load i64, i64* %RBP.i2326
  %170 = add i64 %169, 16
  %171 = load i64, i64* %PC.i2324
  %172 = add i64 %171, 4
  store i64 %172, i64* %PC.i2324
  %173 = inttoptr i64 %170 to i32*
  %174 = load i32, i32* %173
  %175 = zext i32 %174 to i64
  store i64 %175, i64* %168, align 8
  store %struct.Memory* %loadMem_43a2cc, %struct.Memory** %MEMORY
  %loadMem_43a2d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %177 = getelementptr inbounds %struct.GPR, %struct.GPR* %176, i32 0, i32 33
  %178 = getelementptr inbounds %struct.Reg, %struct.Reg* %177, i32 0, i32 0
  %PC.i2321 = bitcast %union.anon* %178 to i64*
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %180 = getelementptr inbounds %struct.GPR, %struct.GPR* %179, i32 0, i32 11
  %181 = getelementptr inbounds %struct.Reg, %struct.Reg* %180, i32 0, i32 0
  %RDI.i2322 = bitcast %union.anon* %181 to i64*
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %183 = getelementptr inbounds %struct.GPR, %struct.GPR* %182, i32 0, i32 15
  %184 = getelementptr inbounds %struct.Reg, %struct.Reg* %183, i32 0, i32 0
  %RBP.i2323 = bitcast %union.anon* %184 to i64*
  %185 = load i64, i64* %RBP.i2323
  %186 = sub i64 %185, 24
  %187 = load i64, i64* %RDI.i2322
  %188 = load i64, i64* %PC.i2321
  %189 = add i64 %188, 4
  store i64 %189, i64* %PC.i2321
  %190 = inttoptr i64 %186 to i64*
  store i64 %187, i64* %190
  store %struct.Memory* %loadMem_43a2d0, %struct.Memory** %MEMORY
  %loadMem_43a2d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %192 = getelementptr inbounds %struct.GPR, %struct.GPR* %191, i32 0, i32 33
  %193 = getelementptr inbounds %struct.Reg, %struct.Reg* %192, i32 0, i32 0
  %PC.i2318 = bitcast %union.anon* %193 to i64*
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %195 = getelementptr inbounds %struct.GPR, %struct.GPR* %194, i32 0, i32 9
  %196 = getelementptr inbounds %struct.Reg, %struct.Reg* %195, i32 0, i32 0
  %RSI.i2319 = bitcast %union.anon* %196 to i64*
  %197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %198 = getelementptr inbounds %struct.GPR, %struct.GPR* %197, i32 0, i32 15
  %199 = getelementptr inbounds %struct.Reg, %struct.Reg* %198, i32 0, i32 0
  %RBP.i2320 = bitcast %union.anon* %199 to i64*
  %200 = load i64, i64* %RBP.i2320
  %201 = sub i64 %200, 32
  %202 = load i64, i64* %RSI.i2319
  %203 = load i64, i64* %PC.i2318
  %204 = add i64 %203, 4
  store i64 %204, i64* %PC.i2318
  %205 = inttoptr i64 %201 to i64*
  store i64 %202, i64* %205
  store %struct.Memory* %loadMem_43a2d4, %struct.Memory** %MEMORY
  %loadMem_43a2d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %207 = getelementptr inbounds %struct.GPR, %struct.GPR* %206, i32 0, i32 33
  %208 = getelementptr inbounds %struct.Reg, %struct.Reg* %207, i32 0, i32 0
  %PC.i2315 = bitcast %union.anon* %208 to i64*
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %210 = getelementptr inbounds %struct.GPR, %struct.GPR* %209, i32 0, i32 7
  %211 = getelementptr inbounds %struct.Reg, %struct.Reg* %210, i32 0, i32 0
  %RDX.i2316 = bitcast %union.anon* %211 to i64*
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %213 = getelementptr inbounds %struct.GPR, %struct.GPR* %212, i32 0, i32 15
  %214 = getelementptr inbounds %struct.Reg, %struct.Reg* %213, i32 0, i32 0
  %RBP.i2317 = bitcast %union.anon* %214 to i64*
  %215 = load i64, i64* %RBP.i2317
  %216 = sub i64 %215, 40
  %217 = load i64, i64* %RDX.i2316
  %218 = load i64, i64* %PC.i2315
  %219 = add i64 %218, 4
  store i64 %219, i64* %PC.i2315
  %220 = inttoptr i64 %216 to i64*
  store i64 %217, i64* %220
  store %struct.Memory* %loadMem_43a2d8, %struct.Memory** %MEMORY
  %loadMem_43a2dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 33
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %PC.i2312 = bitcast %union.anon* %223 to i64*
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %225 = getelementptr inbounds %struct.GPR, %struct.GPR* %224, i32 0, i32 5
  %226 = getelementptr inbounds %struct.Reg, %struct.Reg* %225, i32 0, i32 0
  %ECX.i2313 = bitcast %union.anon* %226 to i32*
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %228 = getelementptr inbounds %struct.GPR, %struct.GPR* %227, i32 0, i32 15
  %229 = getelementptr inbounds %struct.Reg, %struct.Reg* %228, i32 0, i32 0
  %RBP.i2314 = bitcast %union.anon* %229 to i64*
  %230 = load i64, i64* %RBP.i2314
  %231 = sub i64 %230, 44
  %232 = load i32, i32* %ECX.i2313
  %233 = zext i32 %232 to i64
  %234 = load i64, i64* %PC.i2312
  %235 = add i64 %234, 3
  store i64 %235, i64* %PC.i2312
  %236 = inttoptr i64 %231 to i32*
  store i32 %232, i32* %236
  store %struct.Memory* %loadMem_43a2dc, %struct.Memory** %MEMORY
  %loadMem_43a2df = load %struct.Memory*, %struct.Memory** %MEMORY
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %PC.i2310 = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %241 = getelementptr inbounds %struct.GPR, %struct.GPR* %240, i32 0, i32 17
  %242 = getelementptr inbounds %struct.Reg, %struct.Reg* %241, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %242 to i32*
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %244 = getelementptr inbounds %struct.GPR, %struct.GPR* %243, i32 0, i32 15
  %245 = getelementptr inbounds %struct.Reg, %struct.Reg* %244, i32 0, i32 0
  %RBP.i2311 = bitcast %union.anon* %245 to i64*
  %246 = load i64, i64* %RBP.i2311
  %247 = sub i64 %246, 48
  %248 = load i32, i32* %R8D.i
  %249 = zext i32 %248 to i64
  %250 = load i64, i64* %PC.i2310
  %251 = add i64 %250, 4
  store i64 %251, i64* %PC.i2310
  %252 = inttoptr i64 %247 to i32*
  store i32 %248, i32* %252
  store %struct.Memory* %loadMem_43a2df, %struct.Memory** %MEMORY
  %loadMem_43a2e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %254 = getelementptr inbounds %struct.GPR, %struct.GPR* %253, i32 0, i32 33
  %255 = getelementptr inbounds %struct.Reg, %struct.Reg* %254, i32 0, i32 0
  %PC.i2308 = bitcast %union.anon* %255 to i64*
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %257 = getelementptr inbounds %struct.GPR, %struct.GPR* %256, i32 0, i32 19
  %258 = getelementptr inbounds %struct.Reg, %struct.Reg* %257, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %258 to i32*
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %260 = getelementptr inbounds %struct.GPR, %struct.GPR* %259, i32 0, i32 15
  %261 = getelementptr inbounds %struct.Reg, %struct.Reg* %260, i32 0, i32 0
  %RBP.i2309 = bitcast %union.anon* %261 to i64*
  %262 = load i64, i64* %RBP.i2309
  %263 = sub i64 %262, 52
  %264 = load i32, i32* %R9D.i
  %265 = zext i32 %264 to i64
  %266 = load i64, i64* %PC.i2308
  %267 = add i64 %266, 4
  store i64 %267, i64* %PC.i2308
  %268 = inttoptr i64 %263 to i32*
  store i32 %264, i32* %268
  store %struct.Memory* %loadMem_43a2e3, %struct.Memory** %MEMORY
  %loadMem_43a2e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %270 = getelementptr inbounds %struct.GPR, %struct.GPR* %269, i32 0, i32 33
  %271 = getelementptr inbounds %struct.Reg, %struct.Reg* %270, i32 0, i32 0
  %PC.i2306 = bitcast %union.anon* %271 to i64*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %273 = getelementptr inbounds %struct.GPR, %struct.GPR* %272, i32 0, i32 29
  %274 = getelementptr inbounds %struct.Reg, %struct.Reg* %273, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %274 to i32*
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 15
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %RBP.i2307 = bitcast %union.anon* %277 to i64*
  %278 = load i64, i64* %RBP.i2307
  %279 = sub i64 %278, 56
  %280 = load i32, i32* %R14D.i
  %281 = zext i32 %280 to i64
  %282 = load i64, i64* %PC.i2306
  %283 = add i64 %282, 4
  store i64 %283, i64* %PC.i2306
  %284 = inttoptr i64 %279 to i32*
  store i32 %280, i32* %284
  store %struct.Memory* %loadMem_43a2e7, %struct.Memory** %MEMORY
  %loadMem_43a2eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %286 = getelementptr inbounds %struct.GPR, %struct.GPR* %285, i32 0, i32 33
  %287 = getelementptr inbounds %struct.Reg, %struct.Reg* %286, i32 0, i32 0
  %PC.i2304 = bitcast %union.anon* %287 to i64*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %289 = getelementptr inbounds %struct.GPR, %struct.GPR* %288, i32 0, i32 3
  %290 = getelementptr inbounds %struct.Reg, %struct.Reg* %289, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %290 to i32*
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %292 = getelementptr inbounds %struct.GPR, %struct.GPR* %291, i32 0, i32 15
  %293 = getelementptr inbounds %struct.Reg, %struct.Reg* %292, i32 0, i32 0
  %RBP.i2305 = bitcast %union.anon* %293 to i64*
  %294 = load i64, i64* %RBP.i2305
  %295 = sub i64 %294, 60
  %296 = load i32, i32* %EBX.i
  %297 = zext i32 %296 to i64
  %298 = load i64, i64* %PC.i2304
  %299 = add i64 %298, 3
  store i64 %299, i64* %PC.i2304
  %300 = inttoptr i64 %295 to i32*
  store i32 %296, i32* %300
  store %struct.Memory* %loadMem_43a2eb, %struct.Memory** %MEMORY
  %loadMem_43a2ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %302 = getelementptr inbounds %struct.GPR, %struct.GPR* %301, i32 0, i32 33
  %303 = getelementptr inbounds %struct.Reg, %struct.Reg* %302, i32 0, i32 0
  %PC.i2302 = bitcast %union.anon* %303 to i64*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %305 = getelementptr inbounds %struct.GPR, %struct.GPR* %304, i32 0, i32 23
  %306 = getelementptr inbounds %struct.Reg, %struct.Reg* %305, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %306 to i32*
  %307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %308 = getelementptr inbounds %struct.GPR, %struct.GPR* %307, i32 0, i32 15
  %309 = getelementptr inbounds %struct.Reg, %struct.Reg* %308, i32 0, i32 0
  %RBP.i2303 = bitcast %union.anon* %309 to i64*
  %310 = load i64, i64* %RBP.i2303
  %311 = sub i64 %310, 64
  %312 = load i32, i32* %R11D.i
  %313 = zext i32 %312 to i64
  %314 = load i64, i64* %PC.i2302
  %315 = add i64 %314, 4
  store i64 %315, i64* %PC.i2302
  %316 = inttoptr i64 %311 to i32*
  store i32 %312, i32* %316
  store %struct.Memory* %loadMem_43a2ee, %struct.Memory** %MEMORY
  %loadMem_43a2f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %318 = getelementptr inbounds %struct.GPR, %struct.GPR* %317, i32 0, i32 33
  %319 = getelementptr inbounds %struct.Reg, %struct.Reg* %318, i32 0, i32 0
  %PC.i2299 = bitcast %union.anon* %319 to i64*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %321 = getelementptr inbounds %struct.GPR, %struct.GPR* %320, i32 0, i32 21
  %322 = getelementptr inbounds %struct.Reg, %struct.Reg* %321, i32 0, i32 0
  %R10D.i2300 = bitcast %union.anon* %322 to i32*
  %323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %324 = getelementptr inbounds %struct.GPR, %struct.GPR* %323, i32 0, i32 15
  %325 = getelementptr inbounds %struct.Reg, %struct.Reg* %324, i32 0, i32 0
  %RBP.i2301 = bitcast %union.anon* %325 to i64*
  %326 = load i64, i64* %RBP.i2301
  %327 = sub i64 %326, 68
  %328 = load i32, i32* %R10D.i2300
  %329 = zext i32 %328 to i64
  %330 = load i64, i64* %PC.i2299
  %331 = add i64 %330, 4
  store i64 %331, i64* %PC.i2299
  %332 = inttoptr i64 %327 to i32*
  store i32 %328, i32* %332
  store %struct.Memory* %loadMem_43a2f2, %struct.Memory** %MEMORY
  %loadMem_43a2f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %334 = getelementptr inbounds %struct.GPR, %struct.GPR* %333, i32 0, i32 33
  %335 = getelementptr inbounds %struct.Reg, %struct.Reg* %334, i32 0, i32 0
  %PC.i2296 = bitcast %union.anon* %335 to i64*
  %336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %337 = getelementptr inbounds %struct.GPR, %struct.GPR* %336, i32 0, i32 1
  %338 = getelementptr inbounds %struct.Reg, %struct.Reg* %337, i32 0, i32 0
  %EAX.i2297 = bitcast %union.anon* %338 to i32*
  %339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %340 = getelementptr inbounds %struct.GPR, %struct.GPR* %339, i32 0, i32 15
  %341 = getelementptr inbounds %struct.Reg, %struct.Reg* %340, i32 0, i32 0
  %RBP.i2298 = bitcast %union.anon* %341 to i64*
  %342 = load i64, i64* %RBP.i2298
  %343 = sub i64 %342, 72
  %344 = load i32, i32* %EAX.i2297
  %345 = zext i32 %344 to i64
  %346 = load i64, i64* %PC.i2296
  %347 = add i64 %346, 3
  store i64 %347, i64* %PC.i2296
  %348 = inttoptr i64 %343 to i32*
  store i32 %344, i32* %348
  store %struct.Memory* %loadMem_43a2f6, %struct.Memory** %MEMORY
  %loadMem_43a2f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %350 = getelementptr inbounds %struct.GPR, %struct.GPR* %349, i32 0, i32 33
  %351 = getelementptr inbounds %struct.Reg, %struct.Reg* %350, i32 0, i32 0
  %PC.i2294 = bitcast %union.anon* %351 to i64*
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %353 = getelementptr inbounds %struct.GPR, %struct.GPR* %352, i32 0, i32 15
  %354 = getelementptr inbounds %struct.Reg, %struct.Reg* %353, i32 0, i32 0
  %RBP.i2295 = bitcast %union.anon* %354 to i64*
  %355 = load i64, i64* %RBP.i2295
  %356 = sub i64 %355, 80
  %357 = load i64, i64* %PC.i2294
  %358 = add i64 %357, 7
  store i64 %358, i64* %PC.i2294
  %359 = inttoptr i64 %356 to i32*
  store i32 0, i32* %359
  store %struct.Memory* %loadMem_43a2f9, %struct.Memory** %MEMORY
  %loadMem_43a300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %361 = getelementptr inbounds %struct.GPR, %struct.GPR* %360, i32 0, i32 33
  %362 = getelementptr inbounds %struct.Reg, %struct.Reg* %361, i32 0, i32 0
  %PC.i2292 = bitcast %union.anon* %362 to i64*
  %363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %364 = getelementptr inbounds %struct.GPR, %struct.GPR* %363, i32 0, i32 15
  %365 = getelementptr inbounds %struct.Reg, %struct.Reg* %364, i32 0, i32 0
  %RBP.i2293 = bitcast %union.anon* %365 to i64*
  %366 = load i64, i64* %RBP.i2293
  %367 = sub i64 %366, 84
  %368 = load i64, i64* %PC.i2292
  %369 = add i64 %368, 7
  store i64 %369, i64* %PC.i2292
  %370 = inttoptr i64 %367 to i32*
  store i32 0, i32* %370
  store %struct.Memory* %loadMem_43a300, %struct.Memory** %MEMORY
  %loadMem_43a307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %372 = getelementptr inbounds %struct.GPR, %struct.GPR* %371, i32 0, i32 33
  %373 = getelementptr inbounds %struct.Reg, %struct.Reg* %372, i32 0, i32 0
  %PC.i2290 = bitcast %union.anon* %373 to i64*
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %375 = getelementptr inbounds %struct.GPR, %struct.GPR* %374, i32 0, i32 15
  %376 = getelementptr inbounds %struct.Reg, %struct.Reg* %375, i32 0, i32 0
  %RBP.i2291 = bitcast %union.anon* %376 to i64*
  %377 = load i64, i64* %RBP.i2291
  %378 = sub i64 %377, 120
  %379 = load i64, i64* %PC.i2290
  %380 = add i64 %379, 7
  store i64 %380, i64* %PC.i2290
  %381 = inttoptr i64 %378 to i32*
  store i32 0, i32* %381
  store %struct.Memory* %loadMem_43a307, %struct.Memory** %MEMORY
  %loadMem_43a30e = load %struct.Memory*, %struct.Memory** %MEMORY
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %383 = getelementptr inbounds %struct.GPR, %struct.GPR* %382, i32 0, i32 33
  %384 = getelementptr inbounds %struct.Reg, %struct.Reg* %383, i32 0, i32 0
  %PC.i2288 = bitcast %union.anon* %384 to i64*
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %386 = getelementptr inbounds %struct.GPR, %struct.GPR* %385, i32 0, i32 15
  %387 = getelementptr inbounds %struct.Reg, %struct.Reg* %386, i32 0, i32 0
  %RBP.i2289 = bitcast %union.anon* %387 to i64*
  %388 = load i64, i64* %RBP.i2289
  %389 = sub i64 %388, 140
  %390 = load i64, i64* %PC.i2288
  %391 = add i64 %390, 10
  store i64 %391, i64* %PC.i2288
  %392 = inttoptr i64 %389 to i32*
  store i32 0, i32* %392
  store %struct.Memory* %loadMem_43a30e, %struct.Memory** %MEMORY
  %loadMem_43a318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %394 = getelementptr inbounds %struct.GPR, %struct.GPR* %393, i32 0, i32 33
  %395 = getelementptr inbounds %struct.Reg, %struct.Reg* %394, i32 0, i32 0
  %PC.i2286 = bitcast %union.anon* %395 to i64*
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %397 = getelementptr inbounds %struct.GPR, %struct.GPR* %396, i32 0, i32 15
  %398 = getelementptr inbounds %struct.Reg, %struct.Reg* %397, i32 0, i32 0
  %RBP.i2287 = bitcast %union.anon* %398 to i64*
  %399 = load i64, i64* %RBP.i2287
  %400 = sub i64 %399, 156
  %401 = load i64, i64* %PC.i2286
  %402 = add i64 %401, 10
  store i64 %402, i64* %PC.i2286
  %403 = inttoptr i64 %400 to i32*
  store i32 0, i32* %403
  store %struct.Memory* %loadMem_43a318, %struct.Memory** %MEMORY
  %loadMem_43a322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %405 = getelementptr inbounds %struct.GPR, %struct.GPR* %404, i32 0, i32 33
  %406 = getelementptr inbounds %struct.Reg, %struct.Reg* %405, i32 0, i32 0
  %PC.i2284 = bitcast %union.anon* %406 to i64*
  %407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %408 = getelementptr inbounds %struct.GPR, %struct.GPR* %407, i32 0, i32 15
  %409 = getelementptr inbounds %struct.Reg, %struct.Reg* %408, i32 0, i32 0
  %RBP.i2285 = bitcast %union.anon* %409 to i64*
  %410 = load i64, i64* %RBP.i2285
  %411 = sub i64 %410, 160
  %412 = load i64, i64* %PC.i2284
  %413 = add i64 %412, 10
  store i64 %413, i64* %PC.i2284
  %414 = inttoptr i64 %411 to i32*
  store i32 0, i32* %414
  store %struct.Memory* %loadMem_43a322, %struct.Memory** %MEMORY
  %loadMem_43a32c = load %struct.Memory*, %struct.Memory** %MEMORY
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %416 = getelementptr inbounds %struct.GPR, %struct.GPR* %415, i32 0, i32 33
  %417 = getelementptr inbounds %struct.Reg, %struct.Reg* %416, i32 0, i32 0
  %PC.i2282 = bitcast %union.anon* %417 to i64*
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %419 = getelementptr inbounds %struct.GPR, %struct.GPR* %418, i32 0, i32 15
  %420 = getelementptr inbounds %struct.Reg, %struct.Reg* %419, i32 0, i32 0
  %RBP.i2283 = bitcast %union.anon* %420 to i64*
  %421 = load i64, i64* %RBP.i2283
  %422 = sub i64 %421, 168
  %423 = load i64, i64* %PC.i2282
  %424 = add i64 %423, 11
  store i64 %424, i64* %PC.i2282
  %425 = inttoptr i64 %422 to i64*
  store i64 0, i64* %425
  store %struct.Memory* %loadMem_43a32c, %struct.Memory** %MEMORY
  %loadMem_43a337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %427 = getelementptr inbounds %struct.GPR, %struct.GPR* %426, i32 0, i32 33
  %428 = getelementptr inbounds %struct.Reg, %struct.Reg* %427, i32 0, i32 0
  %PC.i2280 = bitcast %union.anon* %428 to i64*
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %430 = getelementptr inbounds %struct.GPR, %struct.GPR* %429, i32 0, i32 7
  %431 = getelementptr inbounds %struct.Reg, %struct.Reg* %430, i32 0, i32 0
  %RDX.i2281 = bitcast %union.anon* %431 to i64*
  %432 = load i64, i64* %PC.i2280
  %433 = add i64 %432, 8
  store i64 %433, i64* %PC.i2280
  %434 = load i64, i64* bitcast (%G_0x4c37e0_type* @G_0x4c37e0 to i64*)
  store i64 %434, i64* %RDX.i2281, align 8
  store %struct.Memory* %loadMem_43a337, %struct.Memory** %MEMORY
  %loadMem_43a33f = load %struct.Memory*, %struct.Memory** %MEMORY
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %436 = getelementptr inbounds %struct.GPR, %struct.GPR* %435, i32 0, i32 33
  %437 = getelementptr inbounds %struct.Reg, %struct.Reg* %436, i32 0, i32 0
  %PC.i2277 = bitcast %union.anon* %437 to i64*
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %439 = getelementptr inbounds %struct.GPR, %struct.GPR* %438, i32 0, i32 7
  %440 = getelementptr inbounds %struct.Reg, %struct.Reg* %439, i32 0, i32 0
  %RDX.i2278 = bitcast %union.anon* %440 to i64*
  %441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %442 = getelementptr inbounds %struct.GPR, %struct.GPR* %441, i32 0, i32 15
  %443 = getelementptr inbounds %struct.Reg, %struct.Reg* %442, i32 0, i32 0
  %RBP.i2279 = bitcast %union.anon* %443 to i64*
  %444 = load i64, i64* %RBP.i2279
  %445 = sub i64 %444, 336
  %446 = load i64, i64* %RDX.i2278
  %447 = load i64, i64* %PC.i2277
  %448 = add i64 %447, 7
  store i64 %448, i64* %PC.i2277
  %449 = inttoptr i64 %445 to i64*
  store i64 %446, i64* %449
  store %struct.Memory* %loadMem_43a33f, %struct.Memory** %MEMORY
  %loadMem_43a346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %451 = getelementptr inbounds %struct.GPR, %struct.GPR* %450, i32 0, i32 33
  %452 = getelementptr inbounds %struct.Reg, %struct.Reg* %451, i32 0, i32 0
  %PC.i2275 = bitcast %union.anon* %452 to i64*
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %454 = getelementptr inbounds %struct.GPR, %struct.GPR* %453, i32 0, i32 7
  %455 = getelementptr inbounds %struct.Reg, %struct.Reg* %454, i32 0, i32 0
  %RDX.i2276 = bitcast %union.anon* %455 to i64*
  %456 = load i64, i64* %PC.i2275
  %457 = add i64 %456, 8
  store i64 %457, i64* %PC.i2275
  %458 = load i64, i64* bitcast (%G_0x4c37e8_type* @G_0x4c37e8 to i64*)
  store i64 %458, i64* %RDX.i2276, align 8
  store %struct.Memory* %loadMem_43a346, %struct.Memory** %MEMORY
  %loadMem_43a34e = load %struct.Memory*, %struct.Memory** %MEMORY
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %460 = getelementptr inbounds %struct.GPR, %struct.GPR* %459, i32 0, i32 33
  %461 = getelementptr inbounds %struct.Reg, %struct.Reg* %460, i32 0, i32 0
  %PC.i2272 = bitcast %union.anon* %461 to i64*
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %463 = getelementptr inbounds %struct.GPR, %struct.GPR* %462, i32 0, i32 7
  %464 = getelementptr inbounds %struct.Reg, %struct.Reg* %463, i32 0, i32 0
  %RDX.i2273 = bitcast %union.anon* %464 to i64*
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %466 = getelementptr inbounds %struct.GPR, %struct.GPR* %465, i32 0, i32 15
  %467 = getelementptr inbounds %struct.Reg, %struct.Reg* %466, i32 0, i32 0
  %RBP.i2274 = bitcast %union.anon* %467 to i64*
  %468 = load i64, i64* %RBP.i2274
  %469 = sub i64 %468, 328
  %470 = load i64, i64* %RDX.i2273
  %471 = load i64, i64* %PC.i2272
  %472 = add i64 %471, 7
  store i64 %472, i64* %PC.i2272
  %473 = inttoptr i64 %469 to i64*
  store i64 %470, i64* %473
  store %struct.Memory* %loadMem_43a34e, %struct.Memory** %MEMORY
  %loadMem_43a355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %475 = getelementptr inbounds %struct.GPR, %struct.GPR* %474, i32 0, i32 33
  %476 = getelementptr inbounds %struct.Reg, %struct.Reg* %475, i32 0, i32 0
  %PC.i2270 = bitcast %union.anon* %476 to i64*
  %477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %478 = getelementptr inbounds %struct.GPR, %struct.GPR* %477, i32 0, i32 7
  %479 = getelementptr inbounds %struct.Reg, %struct.Reg* %478, i32 0, i32 0
  %RDX.i2271 = bitcast %union.anon* %479 to i64*
  %480 = load i64, i64* %PC.i2270
  %481 = add i64 %480, 8
  store i64 %481, i64* %PC.i2270
  %482 = load i64, i64* bitcast (%G_0x4c37f0_type* @G_0x4c37f0 to i64*)
  store i64 %482, i64* %RDX.i2271, align 8
  store %struct.Memory* %loadMem_43a355, %struct.Memory** %MEMORY
  %loadMem_43a35d = load %struct.Memory*, %struct.Memory** %MEMORY
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %484 = getelementptr inbounds %struct.GPR, %struct.GPR* %483, i32 0, i32 33
  %485 = getelementptr inbounds %struct.Reg, %struct.Reg* %484, i32 0, i32 0
  %PC.i2267 = bitcast %union.anon* %485 to i64*
  %486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %487 = getelementptr inbounds %struct.GPR, %struct.GPR* %486, i32 0, i32 7
  %488 = getelementptr inbounds %struct.Reg, %struct.Reg* %487, i32 0, i32 0
  %RDX.i2268 = bitcast %union.anon* %488 to i64*
  %489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %490 = getelementptr inbounds %struct.GPR, %struct.GPR* %489, i32 0, i32 15
  %491 = getelementptr inbounds %struct.Reg, %struct.Reg* %490, i32 0, i32 0
  %RBP.i2269 = bitcast %union.anon* %491 to i64*
  %492 = load i64, i64* %RBP.i2269
  %493 = sub i64 %492, 320
  %494 = load i64, i64* %RDX.i2268
  %495 = load i64, i64* %PC.i2267
  %496 = add i64 %495, 7
  store i64 %496, i64* %PC.i2267
  %497 = inttoptr i64 %493 to i64*
  store i64 %494, i64* %497
  store %struct.Memory* %loadMem_43a35d, %struct.Memory** %MEMORY
  %loadMem_43a364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %499 = getelementptr inbounds %struct.GPR, %struct.GPR* %498, i32 0, i32 33
  %500 = getelementptr inbounds %struct.Reg, %struct.Reg* %499, i32 0, i32 0
  %PC.i2265 = bitcast %union.anon* %500 to i64*
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %502 = getelementptr inbounds %struct.GPR, %struct.GPR* %501, i32 0, i32 7
  %503 = getelementptr inbounds %struct.Reg, %struct.Reg* %502, i32 0, i32 0
  %RDX.i2266 = bitcast %union.anon* %503 to i64*
  %504 = load i64, i64* %PC.i2265
  %505 = add i64 %504, 8
  store i64 %505, i64* %PC.i2265
  %506 = load i64, i64* bitcast (%G_0x4c37f8_type* @G_0x4c37f8 to i64*)
  store i64 %506, i64* %RDX.i2266, align 8
  store %struct.Memory* %loadMem_43a364, %struct.Memory** %MEMORY
  %loadMem_43a36c = load %struct.Memory*, %struct.Memory** %MEMORY
  %507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %508 = getelementptr inbounds %struct.GPR, %struct.GPR* %507, i32 0, i32 33
  %509 = getelementptr inbounds %struct.Reg, %struct.Reg* %508, i32 0, i32 0
  %PC.i2262 = bitcast %union.anon* %509 to i64*
  %510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %511 = getelementptr inbounds %struct.GPR, %struct.GPR* %510, i32 0, i32 7
  %512 = getelementptr inbounds %struct.Reg, %struct.Reg* %511, i32 0, i32 0
  %RDX.i2263 = bitcast %union.anon* %512 to i64*
  %513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %514 = getelementptr inbounds %struct.GPR, %struct.GPR* %513, i32 0, i32 15
  %515 = getelementptr inbounds %struct.Reg, %struct.Reg* %514, i32 0, i32 0
  %RBP.i2264 = bitcast %union.anon* %515 to i64*
  %516 = load i64, i64* %RBP.i2264
  %517 = sub i64 %516, 312
  %518 = load i64, i64* %RDX.i2263
  %519 = load i64, i64* %PC.i2262
  %520 = add i64 %519, 7
  store i64 %520, i64* %PC.i2262
  %521 = inttoptr i64 %517 to i64*
  store i64 %518, i64* %521
  store %struct.Memory* %loadMem_43a36c, %struct.Memory** %MEMORY
  %loadMem_43a373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %523 = getelementptr inbounds %struct.GPR, %struct.GPR* %522, i32 0, i32 33
  %524 = getelementptr inbounds %struct.Reg, %struct.Reg* %523, i32 0, i32 0
  %PC.i2260 = bitcast %union.anon* %524 to i64*
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %526 = getelementptr inbounds %struct.GPR, %struct.GPR* %525, i32 0, i32 15
  %527 = getelementptr inbounds %struct.Reg, %struct.Reg* %526, i32 0, i32 0
  %RBP.i2261 = bitcast %union.anon* %527 to i64*
  %528 = load i64, i64* %RBP.i2261
  %529 = sub i64 %528, 68
  %530 = load i64, i64* %PC.i2260
  %531 = add i64 %530, 4
  store i64 %531, i64* %PC.i2260
  %532 = inttoptr i64 %529 to i32*
  %533 = load i32, i32* %532
  %534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %534, align 1
  %535 = and i32 %533, 255
  %536 = call i32 @llvm.ctpop.i32(i32 %535)
  %537 = trunc i32 %536 to i8
  %538 = and i8 %537, 1
  %539 = xor i8 %538, 1
  %540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %539, i8* %540, align 1
  %541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %541, align 1
  %542 = icmp eq i32 %533, 0
  %543 = zext i1 %542 to i8
  %544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %543, i8* %544, align 1
  %545 = lshr i32 %533, 31
  %546 = trunc i32 %545 to i8
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %546, i8* %547, align 1
  %548 = lshr i32 %533, 31
  %549 = xor i32 %545, %548
  %550 = add i32 %549, %548
  %551 = icmp eq i32 %550, 2
  %552 = zext i1 %551 to i8
  %553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %552, i8* %553, align 1
  store %struct.Memory* %loadMem_43a373, %struct.Memory** %MEMORY
  %loadMem_43a377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %555 = getelementptr inbounds %struct.GPR, %struct.GPR* %554, i32 0, i32 33
  %556 = getelementptr inbounds %struct.Reg, %struct.Reg* %555, i32 0, i32 0
  %PC.i2259 = bitcast %union.anon* %556 to i64*
  %557 = load i64, i64* %PC.i2259
  %558 = add i64 %557, 39
  %559 = load i64, i64* %PC.i2259
  %560 = add i64 %559, 6
  %561 = load i64, i64* %PC.i2259
  %562 = add i64 %561, 6
  store i64 %562, i64* %PC.i2259
  %563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %564 = load i8, i8* %563, align 1
  %565 = icmp eq i8 %564, 0
  %566 = zext i1 %565 to i8
  store i8 %566, i8* %BRANCH_TAKEN, align 1
  %567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %568 = select i1 %565, i64 %558, i64 %560
  store i64 %568, i64* %567, align 8
  store %struct.Memory* %loadMem_43a377, %struct.Memory** %MEMORY
  %loadBr_43a377 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a377 = icmp eq i8 %loadBr_43a377, 1
  br i1 %cmpBr_43a377, label %block_.L_43a39e, label %block_43a37d

block_43a37d:                                     ; preds = %entry
  %loadMem_43a37d = load %struct.Memory*, %struct.Memory** %MEMORY
  %569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %570 = getelementptr inbounds %struct.GPR, %struct.GPR* %569, i32 0, i32 33
  %571 = getelementptr inbounds %struct.Reg, %struct.Reg* %570, i32 0, i32 0
  %PC.i2257 = bitcast %union.anon* %571 to i64*
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %573 = getelementptr inbounds %struct.GPR, %struct.GPR* %572, i32 0, i32 1
  %574 = getelementptr inbounds %struct.Reg, %struct.Reg* %573, i32 0, i32 0
  %RAX.i2258 = bitcast %union.anon* %574 to i64*
  %575 = load i64, i64* %PC.i2257
  %576 = add i64 %575, 5
  store i64 %576, i64* %PC.i2257
  store i64 1, i64* %RAX.i2258, align 8
  store %struct.Memory* %loadMem_43a37d, %struct.Memory** %MEMORY
  %loadMem_43a382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %578 = getelementptr inbounds %struct.GPR, %struct.GPR* %577, i32 0, i32 33
  %579 = getelementptr inbounds %struct.Reg, %struct.Reg* %578, i32 0, i32 0
  %PC.i2254 = bitcast %union.anon* %579 to i64*
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %581 = getelementptr inbounds %struct.GPR, %struct.GPR* %580, i32 0, i32 5
  %582 = getelementptr inbounds %struct.Reg, %struct.Reg* %581, i32 0, i32 0
  %RCX.i2255 = bitcast %union.anon* %582 to i64*
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %584 = getelementptr inbounds %struct.GPR, %struct.GPR* %583, i32 0, i32 15
  %585 = getelementptr inbounds %struct.Reg, %struct.Reg* %584, i32 0, i32 0
  %RBP.i2256 = bitcast %union.anon* %585 to i64*
  %586 = load i64, i64* %RBP.i2256
  %587 = sub i64 %586, 40
  %588 = load i64, i64* %PC.i2254
  %589 = add i64 %588, 4
  store i64 %589, i64* %PC.i2254
  %590 = inttoptr i64 %587 to i64*
  %591 = load i64, i64* %590
  store i64 %591, i64* %RCX.i2255, align 8
  store %struct.Memory* %loadMem_43a382, %struct.Memory** %MEMORY
  %loadMem_43a386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %593 = getelementptr inbounds %struct.GPR, %struct.GPR* %592, i32 0, i32 33
  %594 = getelementptr inbounds %struct.Reg, %struct.Reg* %593, i32 0, i32 0
  %PC.i2251 = bitcast %union.anon* %594 to i64*
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %596 = getelementptr inbounds %struct.GPR, %struct.GPR* %595, i32 0, i32 5
  %597 = getelementptr inbounds %struct.Reg, %struct.Reg* %596, i32 0, i32 0
  %RCX.i2252 = bitcast %union.anon* %597 to i64*
  %598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %599 = getelementptr inbounds %struct.GPR, %struct.GPR* %598, i32 0, i32 7
  %600 = getelementptr inbounds %struct.Reg, %struct.Reg* %599, i32 0, i32 0
  %RDX.i2253 = bitcast %union.anon* %600 to i64*
  %601 = load i64, i64* %RCX.i2252
  %602 = add i64 %601, 72660
  %603 = load i64, i64* %PC.i2251
  %604 = add i64 %603, 6
  store i64 %604, i64* %PC.i2251
  %605 = inttoptr i64 %602 to i32*
  %606 = load i32, i32* %605
  %607 = zext i32 %606 to i64
  store i64 %607, i64* %RDX.i2253, align 8
  store %struct.Memory* %loadMem_43a386, %struct.Memory** %MEMORY
  %loadMem_43a38c = load %struct.Memory*, %struct.Memory** %MEMORY
  %608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %609 = getelementptr inbounds %struct.GPR, %struct.GPR* %608, i32 0, i32 33
  %610 = getelementptr inbounds %struct.Reg, %struct.Reg* %609, i32 0, i32 0
  %PC.i2249 = bitcast %union.anon* %610 to i64*
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %612 = getelementptr inbounds %struct.GPR, %struct.GPR* %611, i32 0, i32 7
  %613 = getelementptr inbounds %struct.Reg, %struct.Reg* %612, i32 0, i32 0
  %RDX.i2250 = bitcast %union.anon* %613 to i64*
  %614 = load i64, i64* %RDX.i2250
  %615 = load i64, i64* %PC.i2249
  %616 = add i64 %615, 3
  store i64 %616, i64* %PC.i2249
  %617 = trunc i64 %614 to i32
  %618 = sub i32 %617, 8
  %619 = zext i32 %618 to i64
  store i64 %619, i64* %RDX.i2250, align 8
  %620 = icmp ult i32 %617, 8
  %621 = zext i1 %620 to i8
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %621, i8* %622, align 1
  %623 = and i32 %618, 255
  %624 = call i32 @llvm.ctpop.i32(i32 %623)
  %625 = trunc i32 %624 to i8
  %626 = and i8 %625, 1
  %627 = xor i8 %626, 1
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %627, i8* %628, align 1
  %629 = xor i64 8, %614
  %630 = trunc i64 %629 to i32
  %631 = xor i32 %630, %618
  %632 = lshr i32 %631, 4
  %633 = trunc i32 %632 to i8
  %634 = and i8 %633, 1
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %634, i8* %635, align 1
  %636 = icmp eq i32 %618, 0
  %637 = zext i1 %636 to i8
  %638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %637, i8* %638, align 1
  %639 = lshr i32 %618, 31
  %640 = trunc i32 %639 to i8
  %641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %640, i8* %641, align 1
  %642 = lshr i32 %617, 31
  %643 = xor i32 %639, %642
  %644 = add i32 %643, %642
  %645 = icmp eq i32 %644, 2
  %646 = zext i1 %645 to i8
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %646, i8* %647, align 1
  store %struct.Memory* %loadMem_43a38c, %struct.Memory** %MEMORY
  %loadMem_43a38f = load %struct.Memory*, %struct.Memory** %MEMORY
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %649 = getelementptr inbounds %struct.GPR, %struct.GPR* %648, i32 0, i32 33
  %650 = getelementptr inbounds %struct.Reg, %struct.Reg* %649, i32 0, i32 0
  %PC.i2246 = bitcast %union.anon* %650 to i64*
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %652 = getelementptr inbounds %struct.GPR, %struct.GPR* %651, i32 0, i32 7
  %653 = getelementptr inbounds %struct.Reg, %struct.Reg* %652, i32 0, i32 0
  %EDX.i2247 = bitcast %union.anon* %653 to i32*
  %654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %655 = getelementptr inbounds %struct.GPR, %struct.GPR* %654, i32 0, i32 5
  %656 = getelementptr inbounds %struct.Reg, %struct.Reg* %655, i32 0, i32 0
  %RCX.i2248 = bitcast %union.anon* %656 to i64*
  %657 = load i32, i32* %EDX.i2247
  %658 = zext i32 %657 to i64
  %659 = load i64, i64* %PC.i2246
  %660 = add i64 %659, 2
  store i64 %660, i64* %PC.i2246
  %661 = and i64 %658, 4294967295
  store i64 %661, i64* %RCX.i2248, align 8
  store %struct.Memory* %loadMem_43a38f, %struct.Memory** %MEMORY
  %loadMem_43a391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %663 = getelementptr inbounds %struct.GPR, %struct.GPR* %662, i32 0, i32 33
  %664 = getelementptr inbounds %struct.Reg, %struct.Reg* %663, i32 0, i32 0
  %PC.i2242 = bitcast %union.anon* %664 to i64*
  %665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %666 = getelementptr inbounds %struct.GPR, %struct.GPR* %665, i32 0, i32 5
  %667 = getelementptr inbounds %struct.Reg, %struct.Reg* %666, i32 0, i32 0
  %668 = bitcast %union.anon* %667 to %struct.anon.2*
  %CL.i2243 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %668, i32 0, i32 0
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %670 = getelementptr inbounds %struct.GPR, %struct.GPR* %669, i32 0, i32 1
  %671 = getelementptr inbounds %struct.Reg, %struct.Reg* %670, i32 0, i32 0
  %RAX.i2244 = bitcast %union.anon* %671 to i64*
  %672 = load i64, i64* %RAX.i2244
  %673 = load i8, i8* %CL.i2243
  %674 = zext i8 %673 to i64
  %675 = load i64, i64* %PC.i2242
  %676 = add i64 %675, 2
  store i64 %676, i64* %PC.i2242
  %677 = trunc i64 %674 to i5
  switch i5 %677, label %684 [
    i5 0, label %routine_shll__cl___eax.exit2245
    i5 1, label %678
  ]

; <label>:678:                                    ; preds = %block_43a37d
  %679 = trunc i64 %672 to i32
  %680 = shl i32 %679, 1
  %681 = icmp slt i32 %679, 0
  %682 = icmp slt i32 %680, 0
  %683 = xor i1 %681, %682
  br label %693

; <label>:684:                                    ; preds = %block_43a37d
  %685 = and i64 %674, 31
  %686 = add i64 %685, 4294967295
  %687 = and i64 %672, 4294967295
  %688 = and i64 %686, 4294967295
  %689 = shl i64 %687, %688
  %690 = trunc i64 %689 to i32
  %691 = icmp slt i32 %690, 0
  %692 = shl i32 %690, 1
  br label %693

; <label>:693:                                    ; preds = %684, %678
  %694 = phi i1 [ %681, %678 ], [ %691, %684 ]
  %695 = phi i1 [ %683, %678 ], [ false, %684 ]
  %696 = phi i32 [ %680, %678 ], [ %692, %684 ]
  %697 = zext i32 %696 to i64
  store i64 %697, i64* %RAX.i2244, align 8
  %698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %699 = zext i1 %694 to i8
  store i8 %699, i8* %698, align 1
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %701 = and i32 %696, 254
  %702 = call i32 @llvm.ctpop.i32(i32 %701)
  %703 = trunc i32 %702 to i8
  %704 = and i8 %703, 1
  %705 = xor i8 %704, 1
  store i8 %705, i8* %700, align 1
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %706, align 1
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %708 = icmp eq i32 %696, 0
  %709 = zext i1 %708 to i8
  store i8 %709, i8* %707, align 1
  %710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %711 = lshr i32 %696, 31
  %712 = trunc i32 %711 to i8
  store i8 %712, i8* %710, align 1
  %713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %714 = zext i1 %695 to i8
  store i8 %714, i8* %713, align 1
  br label %routine_shll__cl___eax.exit2245

routine_shll__cl___eax.exit2245:                  ; preds = %block_43a37d, %693
  store %struct.Memory* %loadMem_43a391, %struct.Memory** %MEMORY
  %loadMem_43a393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %716 = getelementptr inbounds %struct.GPR, %struct.GPR* %715, i32 0, i32 33
  %717 = getelementptr inbounds %struct.Reg, %struct.Reg* %716, i32 0, i32 0
  %PC.i2239 = bitcast %union.anon* %717 to i64*
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %719 = getelementptr inbounds %struct.GPR, %struct.GPR* %718, i32 0, i32 1
  %720 = getelementptr inbounds %struct.Reg, %struct.Reg* %719, i32 0, i32 0
  %EAX.i2240 = bitcast %union.anon* %720 to i32*
  %721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %722 = getelementptr inbounds %struct.GPR, %struct.GPR* %721, i32 0, i32 15
  %723 = getelementptr inbounds %struct.Reg, %struct.Reg* %722, i32 0, i32 0
  %RBP.i2241 = bitcast %union.anon* %723 to i64*
  %724 = load i64, i64* %RBP.i2241
  %725 = sub i64 %724, 300
  %726 = load i32, i32* %EAX.i2240
  %727 = zext i32 %726 to i64
  %728 = load i64, i64* %PC.i2239
  %729 = add i64 %728, 6
  store i64 %729, i64* %PC.i2239
  %730 = inttoptr i64 %725 to i32*
  store i32 %726, i32* %730
  store %struct.Memory* %loadMem_43a393, %struct.Memory** %MEMORY
  %loadMem_43a399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 33
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %PC.i2238 = bitcast %union.anon* %733 to i64*
  %734 = load i64, i64* %PC.i2238
  %735 = add i64 %734, 33
  %736 = load i64, i64* %PC.i2238
  %737 = add i64 %736, 5
  store i64 %737, i64* %PC.i2238
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %735, i64* %738, align 8
  store %struct.Memory* %loadMem_43a399, %struct.Memory** %MEMORY
  br label %block_.L_43a3ba

block_.L_43a39e:                                  ; preds = %entry
  %loadMem_43a39e = load %struct.Memory*, %struct.Memory** %MEMORY
  %739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %740 = getelementptr inbounds %struct.GPR, %struct.GPR* %739, i32 0, i32 33
  %741 = getelementptr inbounds %struct.Reg, %struct.Reg* %740, i32 0, i32 0
  %PC.i2236 = bitcast %union.anon* %741 to i64*
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %743 = getelementptr inbounds %struct.GPR, %struct.GPR* %742, i32 0, i32 1
  %744 = getelementptr inbounds %struct.Reg, %struct.Reg* %743, i32 0, i32 0
  %RAX.i2237 = bitcast %union.anon* %744 to i64*
  %745 = load i64, i64* %PC.i2236
  %746 = add i64 %745, 5
  store i64 %746, i64* %PC.i2236
  store i64 1, i64* %RAX.i2237, align 8
  store %struct.Memory* %loadMem_43a39e, %struct.Memory** %MEMORY
  %loadMem_43a3a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %748 = getelementptr inbounds %struct.GPR, %struct.GPR* %747, i32 0, i32 33
  %749 = getelementptr inbounds %struct.Reg, %struct.Reg* %748, i32 0, i32 0
  %PC.i2233 = bitcast %union.anon* %749 to i64*
  %750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %751 = getelementptr inbounds %struct.GPR, %struct.GPR* %750, i32 0, i32 5
  %752 = getelementptr inbounds %struct.Reg, %struct.Reg* %751, i32 0, i32 0
  %RCX.i2234 = bitcast %union.anon* %752 to i64*
  %753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %754 = getelementptr inbounds %struct.GPR, %struct.GPR* %753, i32 0, i32 15
  %755 = getelementptr inbounds %struct.Reg, %struct.Reg* %754, i32 0, i32 0
  %RBP.i2235 = bitcast %union.anon* %755 to i64*
  %756 = load i64, i64* %RBP.i2235
  %757 = sub i64 %756, 40
  %758 = load i64, i64* %PC.i2233
  %759 = add i64 %758, 4
  store i64 %759, i64* %PC.i2233
  %760 = inttoptr i64 %757 to i64*
  %761 = load i64, i64* %760
  store i64 %761, i64* %RCX.i2234, align 8
  store %struct.Memory* %loadMem_43a3a3, %struct.Memory** %MEMORY
  %loadMem_43a3a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %763 = getelementptr inbounds %struct.GPR, %struct.GPR* %762, i32 0, i32 33
  %764 = getelementptr inbounds %struct.Reg, %struct.Reg* %763, i32 0, i32 0
  %PC.i2230 = bitcast %union.anon* %764 to i64*
  %765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %766 = getelementptr inbounds %struct.GPR, %struct.GPR* %765, i32 0, i32 5
  %767 = getelementptr inbounds %struct.Reg, %struct.Reg* %766, i32 0, i32 0
  %RCX.i2231 = bitcast %union.anon* %767 to i64*
  %768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %769 = getelementptr inbounds %struct.GPR, %struct.GPR* %768, i32 0, i32 7
  %770 = getelementptr inbounds %struct.Reg, %struct.Reg* %769, i32 0, i32 0
  %RDX.i2232 = bitcast %union.anon* %770 to i64*
  %771 = load i64, i64* %RCX.i2231
  %772 = add i64 %771, 72664
  %773 = load i64, i64* %PC.i2230
  %774 = add i64 %773, 6
  store i64 %774, i64* %PC.i2230
  %775 = inttoptr i64 %772 to i32*
  %776 = load i32, i32* %775
  %777 = zext i32 %776 to i64
  store i64 %777, i64* %RDX.i2232, align 8
  store %struct.Memory* %loadMem_43a3a7, %struct.Memory** %MEMORY
  %loadMem_43a3ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %779 = getelementptr inbounds %struct.GPR, %struct.GPR* %778, i32 0, i32 33
  %780 = getelementptr inbounds %struct.Reg, %struct.Reg* %779, i32 0, i32 0
  %PC.i2228 = bitcast %union.anon* %780 to i64*
  %781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %782 = getelementptr inbounds %struct.GPR, %struct.GPR* %781, i32 0, i32 7
  %783 = getelementptr inbounds %struct.Reg, %struct.Reg* %782, i32 0, i32 0
  %RDX.i2229 = bitcast %union.anon* %783 to i64*
  %784 = load i64, i64* %RDX.i2229
  %785 = load i64, i64* %PC.i2228
  %786 = add i64 %785, 3
  store i64 %786, i64* %PC.i2228
  %787 = trunc i64 %784 to i32
  %788 = sub i32 %787, 8
  %789 = zext i32 %788 to i64
  store i64 %789, i64* %RDX.i2229, align 8
  %790 = icmp ult i32 %787, 8
  %791 = zext i1 %790 to i8
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %791, i8* %792, align 1
  %793 = and i32 %788, 255
  %794 = call i32 @llvm.ctpop.i32(i32 %793)
  %795 = trunc i32 %794 to i8
  %796 = and i8 %795, 1
  %797 = xor i8 %796, 1
  %798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %797, i8* %798, align 1
  %799 = xor i64 8, %784
  %800 = trunc i64 %799 to i32
  %801 = xor i32 %800, %788
  %802 = lshr i32 %801, 4
  %803 = trunc i32 %802 to i8
  %804 = and i8 %803, 1
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %804, i8* %805, align 1
  %806 = icmp eq i32 %788, 0
  %807 = zext i1 %806 to i8
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %807, i8* %808, align 1
  %809 = lshr i32 %788, 31
  %810 = trunc i32 %809 to i8
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %810, i8* %811, align 1
  %812 = lshr i32 %787, 31
  %813 = xor i32 %809, %812
  %814 = add i32 %813, %812
  %815 = icmp eq i32 %814, 2
  %816 = zext i1 %815 to i8
  %817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %816, i8* %817, align 1
  store %struct.Memory* %loadMem_43a3ad, %struct.Memory** %MEMORY
  %loadMem_43a3b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %819 = getelementptr inbounds %struct.GPR, %struct.GPR* %818, i32 0, i32 33
  %820 = getelementptr inbounds %struct.Reg, %struct.Reg* %819, i32 0, i32 0
  %PC.i2225 = bitcast %union.anon* %820 to i64*
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %822 = getelementptr inbounds %struct.GPR, %struct.GPR* %821, i32 0, i32 7
  %823 = getelementptr inbounds %struct.Reg, %struct.Reg* %822, i32 0, i32 0
  %EDX.i2226 = bitcast %union.anon* %823 to i32*
  %824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %825 = getelementptr inbounds %struct.GPR, %struct.GPR* %824, i32 0, i32 5
  %826 = getelementptr inbounds %struct.Reg, %struct.Reg* %825, i32 0, i32 0
  %RCX.i2227 = bitcast %union.anon* %826 to i64*
  %827 = load i32, i32* %EDX.i2226
  %828 = zext i32 %827 to i64
  %829 = load i64, i64* %PC.i2225
  %830 = add i64 %829, 2
  store i64 %830, i64* %PC.i2225
  %831 = and i64 %828, 4294967295
  store i64 %831, i64* %RCX.i2227, align 8
  store %struct.Memory* %loadMem_43a3b0, %struct.Memory** %MEMORY
  %loadMem_43a3b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %833 = getelementptr inbounds %struct.GPR, %struct.GPR* %832, i32 0, i32 33
  %834 = getelementptr inbounds %struct.Reg, %struct.Reg* %833, i32 0, i32 0
  %PC.i2222 = bitcast %union.anon* %834 to i64*
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %836 = getelementptr inbounds %struct.GPR, %struct.GPR* %835, i32 0, i32 5
  %837 = getelementptr inbounds %struct.Reg, %struct.Reg* %836, i32 0, i32 0
  %838 = bitcast %union.anon* %837 to %struct.anon.2*
  %CL.i2223 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %838, i32 0, i32 0
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %840 = getelementptr inbounds %struct.GPR, %struct.GPR* %839, i32 0, i32 1
  %841 = getelementptr inbounds %struct.Reg, %struct.Reg* %840, i32 0, i32 0
  %RAX.i2224 = bitcast %union.anon* %841 to i64*
  %842 = load i64, i64* %RAX.i2224
  %843 = load i8, i8* %CL.i2223
  %844 = zext i8 %843 to i64
  %845 = load i64, i64* %PC.i2222
  %846 = add i64 %845, 2
  store i64 %846, i64* %PC.i2222
  %847 = trunc i64 %844 to i5
  switch i5 %847, label %854 [
    i5 0, label %routine_shll__cl___eax.exit
    i5 1, label %848
  ]

; <label>:848:                                    ; preds = %block_.L_43a39e
  %849 = trunc i64 %842 to i32
  %850 = shl i32 %849, 1
  %851 = icmp slt i32 %849, 0
  %852 = icmp slt i32 %850, 0
  %853 = xor i1 %851, %852
  br label %863

; <label>:854:                                    ; preds = %block_.L_43a39e
  %855 = and i64 %844, 31
  %856 = add i64 %855, 4294967295
  %857 = and i64 %842, 4294967295
  %858 = and i64 %856, 4294967295
  %859 = shl i64 %857, %858
  %860 = trunc i64 %859 to i32
  %861 = icmp slt i32 %860, 0
  %862 = shl i32 %860, 1
  br label %863

; <label>:863:                                    ; preds = %854, %848
  %864 = phi i1 [ %851, %848 ], [ %861, %854 ]
  %865 = phi i1 [ %853, %848 ], [ false, %854 ]
  %866 = phi i32 [ %850, %848 ], [ %862, %854 ]
  %867 = zext i32 %866 to i64
  store i64 %867, i64* %RAX.i2224, align 8
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %869 = zext i1 %864 to i8
  store i8 %869, i8* %868, align 1
  %870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %871 = and i32 %866, 254
  %872 = call i32 @llvm.ctpop.i32(i32 %871)
  %873 = trunc i32 %872 to i8
  %874 = and i8 %873, 1
  %875 = xor i8 %874, 1
  store i8 %875, i8* %870, align 1
  %876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %876, align 1
  %877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %878 = icmp eq i32 %866, 0
  %879 = zext i1 %878 to i8
  store i8 %879, i8* %877, align 1
  %880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %881 = lshr i32 %866, 31
  %882 = trunc i32 %881 to i8
  store i8 %882, i8* %880, align 1
  %883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %884 = zext i1 %865 to i8
  store i8 %884, i8* %883, align 1
  br label %routine_shll__cl___eax.exit

routine_shll__cl___eax.exit:                      ; preds = %block_.L_43a39e, %863
  store %struct.Memory* %loadMem_43a3b2, %struct.Memory** %MEMORY
  %loadMem_43a3b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %886 = getelementptr inbounds %struct.GPR, %struct.GPR* %885, i32 0, i32 33
  %887 = getelementptr inbounds %struct.Reg, %struct.Reg* %886, i32 0, i32 0
  %PC.i2219 = bitcast %union.anon* %887 to i64*
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %889 = getelementptr inbounds %struct.GPR, %struct.GPR* %888, i32 0, i32 1
  %890 = getelementptr inbounds %struct.Reg, %struct.Reg* %889, i32 0, i32 0
  %EAX.i2220 = bitcast %union.anon* %890 to i32*
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %892 = getelementptr inbounds %struct.GPR, %struct.GPR* %891, i32 0, i32 15
  %893 = getelementptr inbounds %struct.Reg, %struct.Reg* %892, i32 0, i32 0
  %RBP.i2221 = bitcast %union.anon* %893 to i64*
  %894 = load i64, i64* %RBP.i2221
  %895 = sub i64 %894, 300
  %896 = load i32, i32* %EAX.i2220
  %897 = zext i32 %896 to i64
  %898 = load i64, i64* %PC.i2219
  %899 = add i64 %898, 6
  store i64 %899, i64* %PC.i2219
  %900 = inttoptr i64 %895 to i32*
  store i32 %896, i32* %900
  store %struct.Memory* %loadMem_43a3b4, %struct.Memory** %MEMORY
  br label %block_.L_43a3ba

block_.L_43a3ba:                                  ; preds = %routine_shll__cl___eax.exit, %routine_shll__cl___eax.exit2245
  %loadMem_43a3ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %902 = getelementptr inbounds %struct.GPR, %struct.GPR* %901, i32 0, i32 33
  %903 = getelementptr inbounds %struct.Reg, %struct.Reg* %902, i32 0, i32 0
  %PC.i2217 = bitcast %union.anon* %903 to i64*
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %905 = getelementptr inbounds %struct.GPR, %struct.GPR* %904, i32 0, i32 15
  %906 = getelementptr inbounds %struct.Reg, %struct.Reg* %905, i32 0, i32 0
  %RBP.i2218 = bitcast %union.anon* %906 to i64*
  %907 = load i64, i64* %RBP.i2218
  %908 = sub i64 %907, 68
  %909 = load i64, i64* %PC.i2217
  %910 = add i64 %909, 4
  store i64 %910, i64* %PC.i2217
  %911 = inttoptr i64 %908 to i32*
  %912 = load i32, i32* %911
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %913, align 1
  %914 = and i32 %912, 255
  %915 = call i32 @llvm.ctpop.i32(i32 %914)
  %916 = trunc i32 %915 to i8
  %917 = and i8 %916, 1
  %918 = xor i8 %917, 1
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %918, i8* %919, align 1
  %920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %920, align 1
  %921 = icmp eq i32 %912, 0
  %922 = zext i1 %921 to i8
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %922, i8* %923, align 1
  %924 = lshr i32 %912, 31
  %925 = trunc i32 %924 to i8
  %926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %925, i8* %926, align 1
  %927 = lshr i32 %912, 31
  %928 = xor i32 %924, %927
  %929 = add i32 %928, %927
  %930 = icmp eq i32 %929, 2
  %931 = zext i1 %930 to i8
  %932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %931, i8* %932, align 1
  store %struct.Memory* %loadMem_43a3ba, %struct.Memory** %MEMORY
  %loadMem_43a3be = load %struct.Memory*, %struct.Memory** %MEMORY
  %933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %934 = getelementptr inbounds %struct.GPR, %struct.GPR* %933, i32 0, i32 33
  %935 = getelementptr inbounds %struct.Reg, %struct.Reg* %934, i32 0, i32 0
  %PC.i2216 = bitcast %union.anon* %935 to i64*
  %936 = load i64, i64* %PC.i2216
  %937 = add i64 %936, 49
  %938 = load i64, i64* %PC.i2216
  %939 = add i64 %938, 6
  %940 = load i64, i64* %PC.i2216
  %941 = add i64 %940, 6
  store i64 %941, i64* %PC.i2216
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %943 = load i8, i8* %942, align 1
  store i8 %943, i8* %BRANCH_TAKEN, align 1
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %945 = icmp ne i8 %943, 0
  %946 = select i1 %945, i64 %937, i64 %939
  store i64 %946, i64* %944, align 8
  store %struct.Memory* %loadMem_43a3be, %struct.Memory** %MEMORY
  %loadBr_43a3be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a3be = icmp eq i8 %loadBr_43a3be, 1
  br i1 %cmpBr_43a3be, label %block_.L_43a3ef, label %block_43a3c4

block_43a3c4:                                     ; preds = %block_.L_43a3ba
  %loadMem_43a3c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %948 = getelementptr inbounds %struct.GPR, %struct.GPR* %947, i32 0, i32 33
  %949 = getelementptr inbounds %struct.Reg, %struct.Reg* %948, i32 0, i32 0
  %PC.i2213 = bitcast %union.anon* %949 to i64*
  %950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %951 = getelementptr inbounds %struct.GPR, %struct.GPR* %950, i32 0, i32 1
  %952 = getelementptr inbounds %struct.Reg, %struct.Reg* %951, i32 0, i32 0
  %RAX.i2214 = bitcast %union.anon* %952 to i64*
  %953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %954 = getelementptr inbounds %struct.GPR, %struct.GPR* %953, i32 0, i32 15
  %955 = getelementptr inbounds %struct.Reg, %struct.Reg* %954, i32 0, i32 0
  %RBP.i2215 = bitcast %union.anon* %955 to i64*
  %956 = load i64, i64* %RBP.i2215
  %957 = sub i64 %956, 336
  %958 = load i64, i64* %PC.i2213
  %959 = add i64 %958, 7
  store i64 %959, i64* %PC.i2213
  store i64 %957, i64* %RAX.i2214, align 8
  store %struct.Memory* %loadMem_43a3c4, %struct.Memory** %MEMORY
  %loadMem_43a3cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %961 = getelementptr inbounds %struct.GPR, %struct.GPR* %960, i32 0, i32 33
  %962 = getelementptr inbounds %struct.Reg, %struct.Reg* %961, i32 0, i32 0
  %PC.i2210 = bitcast %union.anon* %962 to i64*
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %964 = getelementptr inbounds %struct.GPR, %struct.GPR* %963, i32 0, i32 5
  %965 = getelementptr inbounds %struct.Reg, %struct.Reg* %964, i32 0, i32 0
  %RCX.i2211 = bitcast %union.anon* %965 to i64*
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %967 = getelementptr inbounds %struct.GPR, %struct.GPR* %966, i32 0, i32 15
  %968 = getelementptr inbounds %struct.Reg, %struct.Reg* %967, i32 0, i32 0
  %RBP.i2212 = bitcast %union.anon* %968 to i64*
  %969 = load i64, i64* %RBP.i2212
  %970 = sub i64 %969, 56
  %971 = load i64, i64* %PC.i2210
  %972 = add i64 %971, 4
  store i64 %972, i64* %PC.i2210
  %973 = inttoptr i64 %970 to i32*
  %974 = load i32, i32* %973
  %975 = sext i32 %974 to i64
  store i64 %975, i64* %RCX.i2211, align 8
  store %struct.Memory* %loadMem_43a3cb, %struct.Memory** %MEMORY
  %loadMem_43a3cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %977 = getelementptr inbounds %struct.GPR, %struct.GPR* %976, i32 0, i32 33
  %978 = getelementptr inbounds %struct.Reg, %struct.Reg* %977, i32 0, i32 0
  %PC.i2208 = bitcast %union.anon* %978 to i64*
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %980 = getelementptr inbounds %struct.GPR, %struct.GPR* %979, i32 0, i32 5
  %981 = getelementptr inbounds %struct.Reg, %struct.Reg* %980, i32 0, i32 0
  %RCX.i2209 = bitcast %union.anon* %981 to i64*
  %982 = load i64, i64* %RCX.i2209
  %983 = load i64, i64* %PC.i2208
  %984 = add i64 %983, 4
  store i64 %984, i64* %PC.i2208
  %985 = shl i64 %982, 3
  %986 = icmp slt i64 %985, 0
  %987 = shl i64 %985, 1
  store i64 %987, i64* %RCX.i2209, align 8
  %988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %989 = zext i1 %986 to i8
  store i8 %989, i8* %988, align 1
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %991 = trunc i64 %987 to i32
  %992 = and i32 %991, 254
  %993 = call i32 @llvm.ctpop.i32(i32 %992)
  %994 = trunc i32 %993 to i8
  %995 = and i8 %994, 1
  %996 = xor i8 %995, 1
  store i8 %996, i8* %990, align 1
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %997, align 1
  %998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %999 = icmp eq i64 %987, 0
  %1000 = zext i1 %999 to i8
  store i8 %1000, i8* %998, align 1
  %1001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1002 = lshr i64 %987, 63
  %1003 = trunc i64 %1002 to i8
  store i8 %1003, i8* %1001, align 1
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1004, align 1
  store %struct.Memory* %loadMem_43a3cf, %struct.Memory** %MEMORY
  %loadMem_43a3d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1006 = getelementptr inbounds %struct.GPR, %struct.GPR* %1005, i32 0, i32 33
  %1007 = getelementptr inbounds %struct.Reg, %struct.Reg* %1006, i32 0, i32 0
  %PC.i2205 = bitcast %union.anon* %1007 to i64*
  %1008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1009 = getelementptr inbounds %struct.GPR, %struct.GPR* %1008, i32 0, i32 1
  %1010 = getelementptr inbounds %struct.Reg, %struct.Reg* %1009, i32 0, i32 0
  %RAX.i2206 = bitcast %union.anon* %1010 to i64*
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1012 = getelementptr inbounds %struct.GPR, %struct.GPR* %1011, i32 0, i32 5
  %1013 = getelementptr inbounds %struct.Reg, %struct.Reg* %1012, i32 0, i32 0
  %RCX.i2207 = bitcast %union.anon* %1013 to i64*
  %1014 = load i64, i64* %RAX.i2206
  %1015 = load i64, i64* %RCX.i2207
  %1016 = load i64, i64* %PC.i2205
  %1017 = add i64 %1016, 3
  store i64 %1017, i64* %PC.i2205
  %1018 = add i64 %1015, %1014
  store i64 %1018, i64* %RAX.i2206, align 8
  %1019 = icmp ult i64 %1018, %1014
  %1020 = icmp ult i64 %1018, %1015
  %1021 = or i1 %1019, %1020
  %1022 = zext i1 %1021 to i8
  %1023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1022, i8* %1023, align 1
  %1024 = trunc i64 %1018 to i32
  %1025 = and i32 %1024, 255
  %1026 = call i32 @llvm.ctpop.i32(i32 %1025)
  %1027 = trunc i32 %1026 to i8
  %1028 = and i8 %1027, 1
  %1029 = xor i8 %1028, 1
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1029, i8* %1030, align 1
  %1031 = xor i64 %1015, %1014
  %1032 = xor i64 %1031, %1018
  %1033 = lshr i64 %1032, 4
  %1034 = trunc i64 %1033 to i8
  %1035 = and i8 %1034, 1
  %1036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1035, i8* %1036, align 1
  %1037 = icmp eq i64 %1018, 0
  %1038 = zext i1 %1037 to i8
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1038, i8* %1039, align 1
  %1040 = lshr i64 %1018, 63
  %1041 = trunc i64 %1040 to i8
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1041, i8* %1042, align 1
  %1043 = lshr i64 %1014, 63
  %1044 = lshr i64 %1015, 63
  %1045 = xor i64 %1040, %1043
  %1046 = xor i64 %1040, %1044
  %1047 = add i64 %1045, %1046
  %1048 = icmp eq i64 %1047, 2
  %1049 = zext i1 %1048 to i8
  %1050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1049, i8* %1050, align 1
  store %struct.Memory* %loadMem_43a3d3, %struct.Memory** %MEMORY
  %loadMem_43a3d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1052 = getelementptr inbounds %struct.GPR, %struct.GPR* %1051, i32 0, i32 33
  %1053 = getelementptr inbounds %struct.Reg, %struct.Reg* %1052, i32 0, i32 0
  %PC.i2202 = bitcast %union.anon* %1053 to i64*
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1055 = getelementptr inbounds %struct.GPR, %struct.GPR* %1054, i32 0, i32 5
  %1056 = getelementptr inbounds %struct.Reg, %struct.Reg* %1055, i32 0, i32 0
  %RCX.i2203 = bitcast %union.anon* %1056 to i64*
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1058 = getelementptr inbounds %struct.GPR, %struct.GPR* %1057, i32 0, i32 15
  %1059 = getelementptr inbounds %struct.Reg, %struct.Reg* %1058, i32 0, i32 0
  %RBP.i2204 = bitcast %union.anon* %1059 to i64*
  %1060 = load i64, i64* %RBP.i2204
  %1061 = sub i64 %1060, 40
  %1062 = load i64, i64* %PC.i2202
  %1063 = add i64 %1062, 4
  store i64 %1063, i64* %PC.i2202
  %1064 = inttoptr i64 %1061 to i64*
  %1065 = load i64, i64* %1064
  store i64 %1065, i64* %RCX.i2203, align 8
  store %struct.Memory* %loadMem_43a3d6, %struct.Memory** %MEMORY
  %loadMem_43a3da = load %struct.Memory*, %struct.Memory** %MEMORY
  %1066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1067 = getelementptr inbounds %struct.GPR, %struct.GPR* %1066, i32 0, i32 33
  %1068 = getelementptr inbounds %struct.Reg, %struct.Reg* %1067, i32 0, i32 0
  %PC.i2200 = bitcast %union.anon* %1068 to i64*
  %1069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1070 = getelementptr inbounds %struct.GPR, %struct.GPR* %1069, i32 0, i32 5
  %1071 = getelementptr inbounds %struct.Reg, %struct.Reg* %1070, i32 0, i32 0
  %RCX.i2201 = bitcast %union.anon* %1071 to i64*
  %1072 = load i64, i64* %RCX.i2201
  %1073 = add i64 %1072, 72700
  %1074 = load i64, i64* %PC.i2200
  %1075 = add i64 %1074, 7
  store i64 %1075, i64* %PC.i2200
  %1076 = inttoptr i64 %1073 to i32*
  %1077 = load i32, i32* %1076
  %1078 = sext i32 %1077 to i64
  store i64 %1078, i64* %RCX.i2201, align 8
  store %struct.Memory* %loadMem_43a3da, %struct.Memory** %MEMORY
  %loadMem_43a3e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1080 = getelementptr inbounds %struct.GPR, %struct.GPR* %1079, i32 0, i32 33
  %1081 = getelementptr inbounds %struct.Reg, %struct.Reg* %1080, i32 0, i32 0
  %PC.i2196 = bitcast %union.anon* %1081 to i64*
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1083 = getelementptr inbounds %struct.GPR, %struct.GPR* %1082, i32 0, i32 1
  %1084 = getelementptr inbounds %struct.Reg, %struct.Reg* %1083, i32 0, i32 0
  %RAX.i2197 = bitcast %union.anon* %1084 to i64*
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1086 = getelementptr inbounds %struct.GPR, %struct.GPR* %1085, i32 0, i32 5
  %1087 = getelementptr inbounds %struct.Reg, %struct.Reg* %1086, i32 0, i32 0
  %RCX.i2198 = bitcast %union.anon* %1087 to i64*
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1089 = getelementptr inbounds %struct.GPR, %struct.GPR* %1088, i32 0, i32 7
  %1090 = getelementptr inbounds %struct.Reg, %struct.Reg* %1089, i32 0, i32 0
  %RDX.i2199 = bitcast %union.anon* %1090 to i64*
  %1091 = load i64, i64* %RAX.i2197
  %1092 = load i64, i64* %RCX.i2198
  %1093 = mul i64 %1092, 4
  %1094 = add i64 %1093, %1091
  %1095 = load i64, i64* %PC.i2196
  %1096 = add i64 %1095, 3
  store i64 %1096, i64* %PC.i2196
  %1097 = inttoptr i64 %1094 to i32*
  %1098 = load i32, i32* %1097
  %1099 = zext i32 %1098 to i64
  store i64 %1099, i64* %RDX.i2199, align 8
  store %struct.Memory* %loadMem_43a3e1, %struct.Memory** %MEMORY
  %loadMem_43a3e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1101 = getelementptr inbounds %struct.GPR, %struct.GPR* %1100, i32 0, i32 33
  %1102 = getelementptr inbounds %struct.Reg, %struct.Reg* %1101, i32 0, i32 0
  %PC.i2193 = bitcast %union.anon* %1102 to i64*
  %1103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1104 = getelementptr inbounds %struct.GPR, %struct.GPR* %1103, i32 0, i32 7
  %1105 = getelementptr inbounds %struct.Reg, %struct.Reg* %1104, i32 0, i32 0
  %EDX.i2194 = bitcast %union.anon* %1105 to i32*
  %1106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1107 = getelementptr inbounds %struct.GPR, %struct.GPR* %1106, i32 0, i32 15
  %1108 = getelementptr inbounds %struct.Reg, %struct.Reg* %1107, i32 0, i32 0
  %RBP.i2195 = bitcast %union.anon* %1108 to i64*
  %1109 = load i64, i64* %RBP.i2195
  %1110 = sub i64 %1109, 340
  %1111 = load i32, i32* %EDX.i2194
  %1112 = zext i32 %1111 to i64
  %1113 = load i64, i64* %PC.i2193
  %1114 = add i64 %1113, 6
  store i64 %1114, i64* %PC.i2193
  %1115 = inttoptr i64 %1110 to i32*
  store i32 %1111, i32* %1115
  store %struct.Memory* %loadMem_43a3e4, %struct.Memory** %MEMORY
  %loadMem_43a3ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %1116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1117 = getelementptr inbounds %struct.GPR, %struct.GPR* %1116, i32 0, i32 33
  %1118 = getelementptr inbounds %struct.Reg, %struct.Reg* %1117, i32 0, i32 0
  %PC.i2192 = bitcast %union.anon* %1118 to i64*
  %1119 = load i64, i64* %PC.i2192
  %1120 = add i64 %1119, 21
  %1121 = load i64, i64* %PC.i2192
  %1122 = add i64 %1121, 5
  store i64 %1122, i64* %PC.i2192
  %1123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1120, i64* %1123, align 8
  store %struct.Memory* %loadMem_43a3ea, %struct.Memory** %MEMORY
  br label %block_.L_43a3ff

block_.L_43a3ef:                                  ; preds = %block_.L_43a3ba
  %loadMem_43a3ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1125 = getelementptr inbounds %struct.GPR, %struct.GPR* %1124, i32 0, i32 33
  %1126 = getelementptr inbounds %struct.Reg, %struct.Reg* %1125, i32 0, i32 0
  %PC.i2190 = bitcast %union.anon* %1126 to i64*
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1128 = getelementptr inbounds %struct.GPR, %struct.GPR* %1127, i32 0, i32 1
  %1129 = getelementptr inbounds %struct.Reg, %struct.Reg* %1128, i32 0, i32 0
  %RAX.i2191 = bitcast %union.anon* %1129 to i64*
  %1130 = load i64, i64* %PC.i2190
  %1131 = add i64 %1130, 5
  store i64 %1131, i64* %PC.i2190
  store i64 16, i64* %RAX.i2191, align 8
  store %struct.Memory* %loadMem_43a3ef, %struct.Memory** %MEMORY
  %loadMem_43a3f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1133 = getelementptr inbounds %struct.GPR, %struct.GPR* %1132, i32 0, i32 33
  %1134 = getelementptr inbounds %struct.Reg, %struct.Reg* %1133, i32 0, i32 0
  %PC.i2187 = bitcast %union.anon* %1134 to i64*
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1136 = getelementptr inbounds %struct.GPR, %struct.GPR* %1135, i32 0, i32 1
  %1137 = getelementptr inbounds %struct.Reg, %struct.Reg* %1136, i32 0, i32 0
  %EAX.i2188 = bitcast %union.anon* %1137 to i32*
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1139 = getelementptr inbounds %struct.GPR, %struct.GPR* %1138, i32 0, i32 15
  %1140 = getelementptr inbounds %struct.Reg, %struct.Reg* %1139, i32 0, i32 0
  %RBP.i2189 = bitcast %union.anon* %1140 to i64*
  %1141 = load i64, i64* %RBP.i2189
  %1142 = sub i64 %1141, 340
  %1143 = load i32, i32* %EAX.i2188
  %1144 = zext i32 %1143 to i64
  %1145 = load i64, i64* %PC.i2187
  %1146 = add i64 %1145, 6
  store i64 %1146, i64* %PC.i2187
  %1147 = inttoptr i64 %1142 to i32*
  store i32 %1143, i32* %1147
  store %struct.Memory* %loadMem_43a3f4, %struct.Memory** %MEMORY
  %loadMem_43a3fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1149 = getelementptr inbounds %struct.GPR, %struct.GPR* %1148, i32 0, i32 33
  %1150 = getelementptr inbounds %struct.Reg, %struct.Reg* %1149, i32 0, i32 0
  %PC.i2186 = bitcast %union.anon* %1150 to i64*
  %1151 = load i64, i64* %PC.i2186
  %1152 = add i64 %1151, 5
  %1153 = load i64, i64* %PC.i2186
  %1154 = add i64 %1153, 5
  store i64 %1154, i64* %PC.i2186
  %1155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1152, i64* %1155, align 8
  store %struct.Memory* %loadMem_43a3fa, %struct.Memory** %MEMORY
  br label %block_.L_43a3ff

block_.L_43a3ff:                                  ; preds = %block_.L_43a3ef, %block_43a3c4
  %loadMem_43a3ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1157 = getelementptr inbounds %struct.GPR, %struct.GPR* %1156, i32 0, i32 33
  %1158 = getelementptr inbounds %struct.Reg, %struct.Reg* %1157, i32 0, i32 0
  %PC.i2183 = bitcast %union.anon* %1158 to i64*
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1160 = getelementptr inbounds %struct.GPR, %struct.GPR* %1159, i32 0, i32 1
  %1161 = getelementptr inbounds %struct.Reg, %struct.Reg* %1160, i32 0, i32 0
  %RAX.i2184 = bitcast %union.anon* %1161 to i64*
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1163 = getelementptr inbounds %struct.GPR, %struct.GPR* %1162, i32 0, i32 15
  %1164 = getelementptr inbounds %struct.Reg, %struct.Reg* %1163, i32 0, i32 0
  %RBP.i2185 = bitcast %union.anon* %1164 to i64*
  %1165 = load i64, i64* %RBP.i2185
  %1166 = sub i64 %1165, 340
  %1167 = load i64, i64* %PC.i2183
  %1168 = add i64 %1167, 6
  store i64 %1168, i64* %PC.i2183
  %1169 = inttoptr i64 %1166 to i32*
  %1170 = load i32, i32* %1169
  %1171 = zext i32 %1170 to i64
  store i64 %1171, i64* %RAX.i2184, align 8
  store %struct.Memory* %loadMem_43a3ff, %struct.Memory** %MEMORY
  %loadMem_43a405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1173 = getelementptr inbounds %struct.GPR, %struct.GPR* %1172, i32 0, i32 33
  %1174 = getelementptr inbounds %struct.Reg, %struct.Reg* %1173, i32 0, i32 0
  %PC.i2180 = bitcast %union.anon* %1174 to i64*
  %1175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1176 = getelementptr inbounds %struct.GPR, %struct.GPR* %1175, i32 0, i32 1
  %1177 = getelementptr inbounds %struct.Reg, %struct.Reg* %1176, i32 0, i32 0
  %EAX.i2181 = bitcast %union.anon* %1177 to i32*
  %1178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1179 = getelementptr inbounds %struct.GPR, %struct.GPR* %1178, i32 0, i32 15
  %1180 = getelementptr inbounds %struct.Reg, %struct.Reg* %1179, i32 0, i32 0
  %RBP.i2182 = bitcast %union.anon* %1180 to i64*
  %1181 = load i64, i64* %RBP.i2182
  %1182 = sub i64 %1181, 184
  %1183 = load i32, i32* %EAX.i2181
  %1184 = zext i32 %1183 to i64
  %1185 = load i64, i64* %PC.i2180
  %1186 = add i64 %1185, 6
  store i64 %1186, i64* %PC.i2180
  %1187 = inttoptr i64 %1182 to i32*
  store i32 %1183, i32* %1187
  store %struct.Memory* %loadMem_43a405, %struct.Memory** %MEMORY
  %loadMem_43a40b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1189 = getelementptr inbounds %struct.GPR, %struct.GPR* %1188, i32 0, i32 33
  %1190 = getelementptr inbounds %struct.Reg, %struct.Reg* %1189, i32 0, i32 0
  %PC.i2178 = bitcast %union.anon* %1190 to i64*
  %1191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1192 = getelementptr inbounds %struct.GPR, %struct.GPR* %1191, i32 0, i32 15
  %1193 = getelementptr inbounds %struct.Reg, %struct.Reg* %1192, i32 0, i32 0
  %RBP.i2179 = bitcast %union.anon* %1193 to i64*
  %1194 = load i64, i64* %RBP.i2179
  %1195 = sub i64 %1194, 76
  %1196 = load i64, i64* %PC.i2178
  %1197 = add i64 %1196, 7
  store i64 %1197, i64* %PC.i2178
  %1198 = inttoptr i64 %1195 to i32*
  store i32 0, i32* %1198
  store %struct.Memory* %loadMem_43a40b, %struct.Memory** %MEMORY
  br label %block_.L_43a412

block_.L_43a412:                                  ; preds = %block_.L_43b335, %block_.L_43a3ff
  %loadMem_43a412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1200 = getelementptr inbounds %struct.GPR, %struct.GPR* %1199, i32 0, i32 33
  %1201 = getelementptr inbounds %struct.Reg, %struct.Reg* %1200, i32 0, i32 0
  %PC.i2175 = bitcast %union.anon* %1201 to i64*
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1203 = getelementptr inbounds %struct.GPR, %struct.GPR* %1202, i32 0, i32 1
  %1204 = getelementptr inbounds %struct.Reg, %struct.Reg* %1203, i32 0, i32 0
  %RAX.i2176 = bitcast %union.anon* %1204 to i64*
  %1205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1206 = getelementptr inbounds %struct.GPR, %struct.GPR* %1205, i32 0, i32 15
  %1207 = getelementptr inbounds %struct.Reg, %struct.Reg* %1206, i32 0, i32 0
  %RBP.i2177 = bitcast %union.anon* %1207 to i64*
  %1208 = load i64, i64* %RBP.i2177
  %1209 = sub i64 %1208, 76
  %1210 = load i64, i64* %PC.i2175
  %1211 = add i64 %1210, 3
  store i64 %1211, i64* %PC.i2175
  %1212 = inttoptr i64 %1209 to i32*
  %1213 = load i32, i32* %1212
  %1214 = zext i32 %1213 to i64
  store i64 %1214, i64* %RAX.i2176, align 8
  store %struct.Memory* %loadMem_43a412, %struct.Memory** %MEMORY
  %loadMem_43a415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1216 = getelementptr inbounds %struct.GPR, %struct.GPR* %1215, i32 0, i32 33
  %1217 = getelementptr inbounds %struct.Reg, %struct.Reg* %1216, i32 0, i32 0
  %PC.i2172 = bitcast %union.anon* %1217 to i64*
  %1218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1219 = getelementptr inbounds %struct.GPR, %struct.GPR* %1218, i32 0, i32 1
  %1220 = getelementptr inbounds %struct.Reg, %struct.Reg* %1219, i32 0, i32 0
  %EAX.i2173 = bitcast %union.anon* %1220 to i32*
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1222 = getelementptr inbounds %struct.GPR, %struct.GPR* %1221, i32 0, i32 15
  %1223 = getelementptr inbounds %struct.Reg, %struct.Reg* %1222, i32 0, i32 0
  %RBP.i2174 = bitcast %union.anon* %1223 to i64*
  %1224 = load i32, i32* %EAX.i2173
  %1225 = zext i32 %1224 to i64
  %1226 = load i64, i64* %RBP.i2174
  %1227 = sub i64 %1226, 184
  %1228 = load i64, i64* %PC.i2172
  %1229 = add i64 %1228, 6
  store i64 %1229, i64* %PC.i2172
  %1230 = inttoptr i64 %1227 to i32*
  %1231 = load i32, i32* %1230
  %1232 = sub i32 %1224, %1231
  %1233 = icmp ult i32 %1224, %1231
  %1234 = zext i1 %1233 to i8
  %1235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1234, i8* %1235, align 1
  %1236 = and i32 %1232, 255
  %1237 = call i32 @llvm.ctpop.i32(i32 %1236)
  %1238 = trunc i32 %1237 to i8
  %1239 = and i8 %1238, 1
  %1240 = xor i8 %1239, 1
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1240, i8* %1241, align 1
  %1242 = xor i32 %1231, %1224
  %1243 = xor i32 %1242, %1232
  %1244 = lshr i32 %1243, 4
  %1245 = trunc i32 %1244 to i8
  %1246 = and i8 %1245, 1
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1246, i8* %1247, align 1
  %1248 = icmp eq i32 %1232, 0
  %1249 = zext i1 %1248 to i8
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1249, i8* %1250, align 1
  %1251 = lshr i32 %1232, 31
  %1252 = trunc i32 %1251 to i8
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1252, i8* %1253, align 1
  %1254 = lshr i32 %1224, 31
  %1255 = lshr i32 %1231, 31
  %1256 = xor i32 %1255, %1254
  %1257 = xor i32 %1251, %1254
  %1258 = add i32 %1257, %1256
  %1259 = icmp eq i32 %1258, 2
  %1260 = zext i1 %1259 to i8
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1260, i8* %1261, align 1
  store %struct.Memory* %loadMem_43a415, %struct.Memory** %MEMORY
  %loadMem_43a41b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1263 = getelementptr inbounds %struct.GPR, %struct.GPR* %1262, i32 0, i32 33
  %1264 = getelementptr inbounds %struct.Reg, %struct.Reg* %1263, i32 0, i32 0
  %PC.i2171 = bitcast %union.anon* %1264 to i64*
  %1265 = load i64, i64* %PC.i2171
  %1266 = add i64 %1265, 3880
  %1267 = load i64, i64* %PC.i2171
  %1268 = add i64 %1267, 6
  %1269 = load i64, i64* %PC.i2171
  %1270 = add i64 %1269, 6
  store i64 %1270, i64* %PC.i2171
  %1271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1272 = load i8, i8* %1271, align 1
  %1273 = icmp ne i8 %1272, 0
  %1274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1275 = load i8, i8* %1274, align 1
  %1276 = icmp ne i8 %1275, 0
  %1277 = xor i1 %1273, %1276
  %1278 = xor i1 %1277, true
  %1279 = zext i1 %1278 to i8
  store i8 %1279, i8* %BRANCH_TAKEN, align 1
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1281 = select i1 %1277, i64 %1268, i64 %1266
  store i64 %1281, i64* %1280, align 8
  store %struct.Memory* %loadMem_43a41b, %struct.Memory** %MEMORY
  %loadBr_43a41b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a41b = icmp eq i8 %loadBr_43a41b, 1
  br i1 %cmpBr_43a41b, label %block_.L_43b343, label %block_43a421

block_43a421:                                     ; preds = %block_.L_43a412
  %loadMem_43a421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1283 = getelementptr inbounds %struct.GPR, %struct.GPR* %1282, i32 0, i32 33
  %1284 = getelementptr inbounds %struct.Reg, %struct.Reg* %1283, i32 0, i32 0
  %PC.i2169 = bitcast %union.anon* %1284 to i64*
  %1285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1286 = getelementptr inbounds %struct.GPR, %struct.GPR* %1285, i32 0, i32 15
  %1287 = getelementptr inbounds %struct.Reg, %struct.Reg* %1286, i32 0, i32 0
  %RBP.i2170 = bitcast %union.anon* %1287 to i64*
  %1288 = load i64, i64* %RBP.i2170
  %1289 = sub i64 %1288, 56
  %1290 = load i64, i64* %PC.i2169
  %1291 = add i64 %1290, 4
  store i64 %1291, i64* %PC.i2169
  %1292 = inttoptr i64 %1289 to i32*
  %1293 = load i32, i32* %1292
  %1294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1294, align 1
  %1295 = and i32 %1293, 255
  %1296 = call i32 @llvm.ctpop.i32(i32 %1295)
  %1297 = trunc i32 %1296 to i8
  %1298 = and i8 %1297, 1
  %1299 = xor i8 %1298, 1
  %1300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1299, i8* %1300, align 1
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1301, align 1
  %1302 = icmp eq i32 %1293, 0
  %1303 = zext i1 %1302 to i8
  %1304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1303, i8* %1304, align 1
  %1305 = lshr i32 %1293, 31
  %1306 = trunc i32 %1305 to i8
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1306, i8* %1307, align 1
  %1308 = lshr i32 %1293, 31
  %1309 = xor i32 %1305, %1308
  %1310 = add i32 %1309, %1308
  %1311 = icmp eq i32 %1310, 2
  %1312 = zext i1 %1311 to i8
  %1313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1312, i8* %1313, align 1
  store %struct.Memory* %loadMem_43a421, %struct.Memory** %MEMORY
  %loadMem_43a425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1315 = getelementptr inbounds %struct.GPR, %struct.GPR* %1314, i32 0, i32 33
  %1316 = getelementptr inbounds %struct.Reg, %struct.Reg* %1315, i32 0, i32 0
  %PC.i2168 = bitcast %union.anon* %1316 to i64*
  %1317 = load i64, i64* %PC.i2168
  %1318 = add i64 %1317, 20
  %1319 = load i64, i64* %PC.i2168
  %1320 = add i64 %1319, 6
  %1321 = load i64, i64* %PC.i2168
  %1322 = add i64 %1321, 6
  store i64 %1322, i64* %PC.i2168
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1324 = load i8, i8* %1323, align 1
  store i8 %1324, i8* %BRANCH_TAKEN, align 1
  %1325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1326 = icmp ne i8 %1324, 0
  %1327 = select i1 %1326, i64 %1318, i64 %1320
  store i64 %1327, i64* %1325, align 8
  store %struct.Memory* %loadMem_43a425, %struct.Memory** %MEMORY
  %loadBr_43a425 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a425 = icmp eq i8 %loadBr_43a425, 1
  br i1 %cmpBr_43a425, label %block_.L_43a439, label %block_43a42b

block_43a42b:                                     ; preds = %block_43a421
  %loadMem_43a42b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1329 = getelementptr inbounds %struct.GPR, %struct.GPR* %1328, i32 0, i32 33
  %1330 = getelementptr inbounds %struct.Reg, %struct.Reg* %1329, i32 0, i32 0
  %PC.i2165 = bitcast %union.anon* %1330 to i64*
  %1331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1332 = getelementptr inbounds %struct.GPR, %struct.GPR* %1331, i32 0, i32 1
  %1333 = getelementptr inbounds %struct.Reg, %struct.Reg* %1332, i32 0, i32 0
  %RAX.i2166 = bitcast %union.anon* %1333 to i64*
  %1334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1335 = getelementptr inbounds %struct.GPR, %struct.GPR* %1334, i32 0, i32 15
  %1336 = getelementptr inbounds %struct.Reg, %struct.Reg* %1335, i32 0, i32 0
  %RBP.i2167 = bitcast %union.anon* %1336 to i64*
  %1337 = load i64, i64* %RBP.i2167
  %1338 = sub i64 %1337, 76
  %1339 = load i64, i64* %PC.i2165
  %1340 = add i64 %1339, 3
  store i64 %1340, i64* %PC.i2165
  %1341 = inttoptr i64 %1338 to i32*
  %1342 = load i32, i32* %1341
  %1343 = zext i32 %1342 to i64
  store i64 %1343, i64* %RAX.i2166, align 8
  store %struct.Memory* %loadMem_43a42b, %struct.Memory** %MEMORY
  %loadMem_43a42e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1345 = getelementptr inbounds %struct.GPR, %struct.GPR* %1344, i32 0, i32 33
  %1346 = getelementptr inbounds %struct.Reg, %struct.Reg* %1345, i32 0, i32 0
  %PC.i2162 = bitcast %union.anon* %1346 to i64*
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1348 = getelementptr inbounds %struct.GPR, %struct.GPR* %1347, i32 0, i32 1
  %1349 = getelementptr inbounds %struct.Reg, %struct.Reg* %1348, i32 0, i32 0
  %EAX.i2163 = bitcast %union.anon* %1349 to i32*
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1351 = getelementptr inbounds %struct.GPR, %struct.GPR* %1350, i32 0, i32 15
  %1352 = getelementptr inbounds %struct.Reg, %struct.Reg* %1351, i32 0, i32 0
  %RBP.i2164 = bitcast %union.anon* %1352 to i64*
  %1353 = load i64, i64* %RBP.i2164
  %1354 = sub i64 %1353, 344
  %1355 = load i32, i32* %EAX.i2163
  %1356 = zext i32 %1355 to i64
  %1357 = load i64, i64* %PC.i2162
  %1358 = add i64 %1357, 6
  store i64 %1358, i64* %PC.i2162
  %1359 = inttoptr i64 %1354 to i32*
  store i32 %1355, i32* %1359
  store %struct.Memory* %loadMem_43a42e, %struct.Memory** %MEMORY
  %loadMem_43a434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1361 = getelementptr inbounds %struct.GPR, %struct.GPR* %1360, i32 0, i32 33
  %1362 = getelementptr inbounds %struct.Reg, %struct.Reg* %1361, i32 0, i32 0
  %PC.i2161 = bitcast %union.anon* %1362 to i64*
  %1363 = load i64, i64* %PC.i2161
  %1364 = add i64 %1363, 17
  %1365 = load i64, i64* %PC.i2161
  %1366 = add i64 %1365, 5
  store i64 %1366, i64* %PC.i2161
  %1367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1364, i64* %1367, align 8
  store %struct.Memory* %loadMem_43a434, %struct.Memory** %MEMORY
  br label %block_.L_43a445

block_.L_43a439:                                  ; preds = %block_43a421
  %loadMem_43a439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1369 = getelementptr inbounds %struct.GPR, %struct.GPR* %1368, i32 0, i32 33
  %1370 = getelementptr inbounds %struct.Reg, %struct.Reg* %1369, i32 0, i32 0
  %PC.i2158 = bitcast %union.anon* %1370 to i64*
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1372 = getelementptr inbounds %struct.GPR, %struct.GPR* %1371, i32 0, i32 1
  %1373 = getelementptr inbounds %struct.Reg, %struct.Reg* %1372, i32 0, i32 0
  %RAX.i2159 = bitcast %union.anon* %1373 to i64*
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1375 = getelementptr inbounds %struct.GPR, %struct.GPR* %1374, i32 0, i32 15
  %1376 = getelementptr inbounds %struct.Reg, %struct.Reg* %1375, i32 0, i32 0
  %RBP.i2160 = bitcast %union.anon* %1376 to i64*
  %1377 = load i64, i64* %RBP.i2160
  %1378 = sub i64 %1377, 60
  %1379 = load i64, i64* %PC.i2158
  %1380 = add i64 %1379, 3
  store i64 %1380, i64* %PC.i2158
  %1381 = inttoptr i64 %1378 to i32*
  %1382 = load i32, i32* %1381
  %1383 = zext i32 %1382 to i64
  store i64 %1383, i64* %RAX.i2159, align 8
  store %struct.Memory* %loadMem_43a439, %struct.Memory** %MEMORY
  %loadMem_43a43c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1385 = getelementptr inbounds %struct.GPR, %struct.GPR* %1384, i32 0, i32 33
  %1386 = getelementptr inbounds %struct.Reg, %struct.Reg* %1385, i32 0, i32 0
  %PC.i2156 = bitcast %union.anon* %1386 to i64*
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1388 = getelementptr inbounds %struct.GPR, %struct.GPR* %1387, i32 0, i32 1
  %1389 = getelementptr inbounds %struct.Reg, %struct.Reg* %1388, i32 0, i32 0
  %RAX.i2157 = bitcast %union.anon* %1389 to i64*
  %1390 = load i64, i64* %RAX.i2157
  %1391 = load i64, i64* %PC.i2156
  %1392 = add i64 %1391, 3
  store i64 %1392, i64* %PC.i2156
  %1393 = and i64 %1390, 4294967295
  %1394 = shl i64 %1393, 1
  %1395 = trunc i64 %1394 to i32
  %1396 = icmp slt i32 %1395, 0
  %1397 = shl i32 %1395, 1
  %1398 = zext i32 %1397 to i64
  store i64 %1398, i64* %RAX.i2157, align 8
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1400 = zext i1 %1396 to i8
  store i8 %1400, i8* %1399, align 1
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1402 = and i32 %1397, 254
  %1403 = call i32 @llvm.ctpop.i32(i32 %1402)
  %1404 = trunc i32 %1403 to i8
  %1405 = and i8 %1404, 1
  %1406 = xor i8 %1405, 1
  store i8 %1406, i8* %1401, align 1
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1407, align 1
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1409 = icmp eq i32 %1397, 0
  %1410 = zext i1 %1409 to i8
  store i8 %1410, i8* %1408, align 1
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1412 = lshr i32 %1397, 31
  %1413 = trunc i32 %1412 to i8
  store i8 %1413, i8* %1411, align 1
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1414, align 1
  store %struct.Memory* %loadMem_43a43c, %struct.Memory** %MEMORY
  %loadMem_43a43f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1416 = getelementptr inbounds %struct.GPR, %struct.GPR* %1415, i32 0, i32 33
  %1417 = getelementptr inbounds %struct.Reg, %struct.Reg* %1416, i32 0, i32 0
  %PC.i2153 = bitcast %union.anon* %1417 to i64*
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1419 = getelementptr inbounds %struct.GPR, %struct.GPR* %1418, i32 0, i32 1
  %1420 = getelementptr inbounds %struct.Reg, %struct.Reg* %1419, i32 0, i32 0
  %EAX.i2154 = bitcast %union.anon* %1420 to i32*
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1422 = getelementptr inbounds %struct.GPR, %struct.GPR* %1421, i32 0, i32 15
  %1423 = getelementptr inbounds %struct.Reg, %struct.Reg* %1422, i32 0, i32 0
  %RBP.i2155 = bitcast %union.anon* %1423 to i64*
  %1424 = load i64, i64* %RBP.i2155
  %1425 = sub i64 %1424, 344
  %1426 = load i32, i32* %EAX.i2154
  %1427 = zext i32 %1426 to i64
  %1428 = load i64, i64* %PC.i2153
  %1429 = add i64 %1428, 6
  store i64 %1429, i64* %PC.i2153
  %1430 = inttoptr i64 %1425 to i32*
  store i32 %1426, i32* %1430
  store %struct.Memory* %loadMem_43a43f, %struct.Memory** %MEMORY
  br label %block_.L_43a445

block_.L_43a445:                                  ; preds = %block_.L_43a439, %block_43a42b
  %loadMem_43a445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1432 = getelementptr inbounds %struct.GPR, %struct.GPR* %1431, i32 0, i32 33
  %1433 = getelementptr inbounds %struct.Reg, %struct.Reg* %1432, i32 0, i32 0
  %PC.i2150 = bitcast %union.anon* %1433 to i64*
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1435 = getelementptr inbounds %struct.GPR, %struct.GPR* %1434, i32 0, i32 1
  %1436 = getelementptr inbounds %struct.Reg, %struct.Reg* %1435, i32 0, i32 0
  %RAX.i2151 = bitcast %union.anon* %1436 to i64*
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1438 = getelementptr inbounds %struct.GPR, %struct.GPR* %1437, i32 0, i32 15
  %1439 = getelementptr inbounds %struct.Reg, %struct.Reg* %1438, i32 0, i32 0
  %RBP.i2152 = bitcast %union.anon* %1439 to i64*
  %1440 = load i64, i64* %RBP.i2152
  %1441 = sub i64 %1440, 344
  %1442 = load i64, i64* %PC.i2150
  %1443 = add i64 %1442, 6
  store i64 %1443, i64* %PC.i2150
  %1444 = inttoptr i64 %1441 to i32*
  %1445 = load i32, i32* %1444
  %1446 = zext i32 %1445 to i64
  store i64 %1446, i64* %RAX.i2151, align 8
  store %struct.Memory* %loadMem_43a445, %struct.Memory** %MEMORY
  %loadMem_43a44b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1448 = getelementptr inbounds %struct.GPR, %struct.GPR* %1447, i32 0, i32 33
  %1449 = getelementptr inbounds %struct.Reg, %struct.Reg* %1448, i32 0, i32 0
  %PC.i2147 = bitcast %union.anon* %1449 to i64*
  %1450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1451 = getelementptr inbounds %struct.GPR, %struct.GPR* %1450, i32 0, i32 1
  %1452 = getelementptr inbounds %struct.Reg, %struct.Reg* %1451, i32 0, i32 0
  %EAX.i2148 = bitcast %union.anon* %1452 to i32*
  %1453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1454 = getelementptr inbounds %struct.GPR, %struct.GPR* %1453, i32 0, i32 15
  %1455 = getelementptr inbounds %struct.Reg, %struct.Reg* %1454, i32 0, i32 0
  %RBP.i2149 = bitcast %union.anon* %1455 to i64*
  %1456 = load i64, i64* %RBP.i2149
  %1457 = sub i64 %1456, 220
  %1458 = load i32, i32* %EAX.i2148
  %1459 = zext i32 %1458 to i64
  %1460 = load i64, i64* %PC.i2147
  %1461 = add i64 %1460, 6
  store i64 %1461, i64* %PC.i2147
  %1462 = inttoptr i64 %1457 to i32*
  store i32 %1458, i32* %1462
  store %struct.Memory* %loadMem_43a44b, %struct.Memory** %MEMORY
  %loadMem_43a451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1464 = getelementptr inbounds %struct.GPR, %struct.GPR* %1463, i32 0, i32 33
  %1465 = getelementptr inbounds %struct.Reg, %struct.Reg* %1464, i32 0, i32 0
  %PC.i2145 = bitcast %union.anon* %1465 to i64*
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1467 = getelementptr inbounds %struct.GPR, %struct.GPR* %1466, i32 0, i32 15
  %1468 = getelementptr inbounds %struct.Reg, %struct.Reg* %1467, i32 0, i32 0
  %RBP.i2146 = bitcast %union.anon* %1468 to i64*
  %1469 = load i64, i64* %RBP.i2146
  %1470 = sub i64 %1469, 56
  %1471 = load i64, i64* %PC.i2145
  %1472 = add i64 %1471, 4
  store i64 %1472, i64* %PC.i2145
  %1473 = inttoptr i64 %1470 to i32*
  %1474 = load i32, i32* %1473
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1475, align 1
  %1476 = and i32 %1474, 255
  %1477 = call i32 @llvm.ctpop.i32(i32 %1476)
  %1478 = trunc i32 %1477 to i8
  %1479 = and i8 %1478, 1
  %1480 = xor i8 %1479, 1
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1480, i8* %1481, align 1
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1482, align 1
  %1483 = icmp eq i32 %1474, 0
  %1484 = zext i1 %1483 to i8
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1484, i8* %1485, align 1
  %1486 = lshr i32 %1474, 31
  %1487 = trunc i32 %1486 to i8
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1487, i8* %1488, align 1
  %1489 = lshr i32 %1474, 31
  %1490 = xor i32 %1486, %1489
  %1491 = add i32 %1490, %1489
  %1492 = icmp eq i32 %1491, 2
  %1493 = zext i1 %1492 to i8
  %1494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1493, i8* %1494, align 1
  store %struct.Memory* %loadMem_43a451, %struct.Memory** %MEMORY
  %loadMem_43a455 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 33
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %PC.i2144 = bitcast %union.anon* %1497 to i64*
  %1498 = load i64, i64* %PC.i2144
  %1499 = add i64 %1498, 66
  %1500 = load i64, i64* %PC.i2144
  %1501 = add i64 %1500, 6
  %1502 = load i64, i64* %PC.i2144
  %1503 = add i64 %1502, 6
  store i64 %1503, i64* %PC.i2144
  %1504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1505 = load i8, i8* %1504, align 1
  store i8 %1505, i8* %BRANCH_TAKEN, align 1
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1507 = icmp ne i8 %1505, 0
  %1508 = select i1 %1507, i64 %1499, i64 %1501
  store i64 %1508, i64* %1506, align 8
  store %struct.Memory* %loadMem_43a455, %struct.Memory** %MEMORY
  %loadBr_43a455 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a455 = icmp eq i8 %loadBr_43a455, 1
  br i1 %cmpBr_43a455, label %block_.L_43a497, label %block_43a45b

block_43a45b:                                     ; preds = %block_.L_43a445
  %loadMem_43a45b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1510 = getelementptr inbounds %struct.GPR, %struct.GPR* %1509, i32 0, i32 33
  %1511 = getelementptr inbounds %struct.Reg, %struct.Reg* %1510, i32 0, i32 0
  %PC.i2142 = bitcast %union.anon* %1511 to i64*
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1513 = getelementptr inbounds %struct.GPR, %struct.GPR* %1512, i32 0, i32 15
  %1514 = getelementptr inbounds %struct.Reg, %struct.Reg* %1513, i32 0, i32 0
  %RBP.i2143 = bitcast %union.anon* %1514 to i64*
  %1515 = load i64, i64* %RBP.i2143
  %1516 = sub i64 %1515, 60
  %1517 = load i64, i64* %PC.i2142
  %1518 = add i64 %1517, 4
  store i64 %1518, i64* %PC.i2142
  %1519 = inttoptr i64 %1516 to i32*
  %1520 = load i32, i32* %1519
  %1521 = sub i32 %1520, 4
  %1522 = icmp ult i32 %1520, 4
  %1523 = zext i1 %1522 to i8
  %1524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1523, i8* %1524, align 1
  %1525 = and i32 %1521, 255
  %1526 = call i32 @llvm.ctpop.i32(i32 %1525)
  %1527 = trunc i32 %1526 to i8
  %1528 = and i8 %1527, 1
  %1529 = xor i8 %1528, 1
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1529, i8* %1530, align 1
  %1531 = xor i32 %1520, 4
  %1532 = xor i32 %1531, %1521
  %1533 = lshr i32 %1532, 4
  %1534 = trunc i32 %1533 to i8
  %1535 = and i8 %1534, 1
  %1536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1535, i8* %1536, align 1
  %1537 = icmp eq i32 %1521, 0
  %1538 = zext i1 %1537 to i8
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1538, i8* %1539, align 1
  %1540 = lshr i32 %1521, 31
  %1541 = trunc i32 %1540 to i8
  %1542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1541, i8* %1542, align 1
  %1543 = lshr i32 %1520, 31
  %1544 = xor i32 %1540, %1543
  %1545 = add i32 %1544, %1543
  %1546 = icmp eq i32 %1545, 2
  %1547 = zext i1 %1546 to i8
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1547, i8* %1548, align 1
  store %struct.Memory* %loadMem_43a45b, %struct.Memory** %MEMORY
  %loadMem_43a45f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1550 = getelementptr inbounds %struct.GPR, %struct.GPR* %1549, i32 0, i32 33
  %1551 = getelementptr inbounds %struct.Reg, %struct.Reg* %1550, i32 0, i32 0
  %PC.i2141 = bitcast %union.anon* %1551 to i64*
  %1552 = load i64, i64* %PC.i2141
  %1553 = add i64 %1552, 23
  %1554 = load i64, i64* %PC.i2141
  %1555 = add i64 %1554, 6
  %1556 = load i64, i64* %PC.i2141
  %1557 = add i64 %1556, 6
  store i64 %1557, i64* %PC.i2141
  %1558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1559 = load i8, i8* %1558, align 1
  %1560 = icmp ne i8 %1559, 0
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1562 = load i8, i8* %1561, align 1
  %1563 = icmp ne i8 %1562, 0
  %1564 = xor i1 %1560, %1563
  %1565 = xor i1 %1564, true
  %1566 = zext i1 %1565 to i8
  store i8 %1566, i8* %BRANCH_TAKEN, align 1
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1568 = select i1 %1564, i64 %1555, i64 %1553
  store i64 %1568, i64* %1567, align 8
  store %struct.Memory* %loadMem_43a45f, %struct.Memory** %MEMORY
  %loadBr_43a45f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a45f = icmp eq i8 %loadBr_43a45f, 1
  br i1 %cmpBr_43a45f, label %block_.L_43a476, label %block_43a465

block_43a465:                                     ; preds = %block_43a45b
  %loadMem_43a465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1570 = getelementptr inbounds %struct.GPR, %struct.GPR* %1569, i32 0, i32 33
  %1571 = getelementptr inbounds %struct.Reg, %struct.Reg* %1570, i32 0, i32 0
  %PC.i2138 = bitcast %union.anon* %1571 to i64*
  %1572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1573 = getelementptr inbounds %struct.GPR, %struct.GPR* %1572, i32 0, i32 1
  %1574 = getelementptr inbounds %struct.Reg, %struct.Reg* %1573, i32 0, i32 0
  %RAX.i2139 = bitcast %union.anon* %1574 to i64*
  %1575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1576 = getelementptr inbounds %struct.GPR, %struct.GPR* %1575, i32 0, i32 15
  %1577 = getelementptr inbounds %struct.Reg, %struct.Reg* %1576, i32 0, i32 0
  %RBP.i2140 = bitcast %union.anon* %1577 to i64*
  %1578 = load i64, i64* %RBP.i2140
  %1579 = sub i64 %1578, 60
  %1580 = load i64, i64* %PC.i2138
  %1581 = add i64 %1580, 3
  store i64 %1581, i64* %PC.i2138
  %1582 = inttoptr i64 %1579 to i32*
  %1583 = load i32, i32* %1582
  %1584 = zext i32 %1583 to i64
  store i64 %1584, i64* %RAX.i2139, align 8
  store %struct.Memory* %loadMem_43a465, %struct.Memory** %MEMORY
  %loadMem_43a468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1586 = getelementptr inbounds %struct.GPR, %struct.GPR* %1585, i32 0, i32 33
  %1587 = getelementptr inbounds %struct.Reg, %struct.Reg* %1586, i32 0, i32 0
  %PC.i2136 = bitcast %union.anon* %1587 to i64*
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1589 = getelementptr inbounds %struct.GPR, %struct.GPR* %1588, i32 0, i32 1
  %1590 = getelementptr inbounds %struct.Reg, %struct.Reg* %1589, i32 0, i32 0
  %RAX.i2137 = bitcast %union.anon* %1590 to i64*
  %1591 = load i64, i64* %RAX.i2137
  %1592 = load i64, i64* %PC.i2136
  %1593 = add i64 %1592, 3
  store i64 %1593, i64* %PC.i2136
  %1594 = and i64 %1591, 4294967295
  %1595 = shl i64 %1594, 1
  %1596 = trunc i64 %1595 to i32
  %1597 = icmp slt i32 %1596, 0
  %1598 = shl i32 %1596, 1
  %1599 = zext i32 %1598 to i64
  store i64 %1599, i64* %RAX.i2137, align 8
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1601 = zext i1 %1597 to i8
  store i8 %1601, i8* %1600, align 1
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1603 = and i32 %1598, 254
  %1604 = call i32 @llvm.ctpop.i32(i32 %1603)
  %1605 = trunc i32 %1604 to i8
  %1606 = and i8 %1605, 1
  %1607 = xor i8 %1606, 1
  store i8 %1607, i8* %1602, align 1
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1608, align 1
  %1609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1610 = icmp eq i32 %1598, 0
  %1611 = zext i1 %1610 to i8
  store i8 %1611, i8* %1609, align 1
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1613 = lshr i32 %1598, 31
  %1614 = trunc i32 %1613 to i8
  store i8 %1614, i8* %1612, align 1
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1615, align 1
  store %struct.Memory* %loadMem_43a468, %struct.Memory** %MEMORY
  %loadMem_43a46b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1617 = getelementptr inbounds %struct.GPR, %struct.GPR* %1616, i32 0, i32 33
  %1618 = getelementptr inbounds %struct.Reg, %struct.Reg* %1617, i32 0, i32 0
  %PC.i2133 = bitcast %union.anon* %1618 to i64*
  %1619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1620 = getelementptr inbounds %struct.GPR, %struct.GPR* %1619, i32 0, i32 1
  %1621 = getelementptr inbounds %struct.Reg, %struct.Reg* %1620, i32 0, i32 0
  %EAX.i2134 = bitcast %union.anon* %1621 to i32*
  %1622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1623 = getelementptr inbounds %struct.GPR, %struct.GPR* %1622, i32 0, i32 15
  %1624 = getelementptr inbounds %struct.Reg, %struct.Reg* %1623, i32 0, i32 0
  %RBP.i2135 = bitcast %union.anon* %1624 to i64*
  %1625 = load i64, i64* %RBP.i2135
  %1626 = sub i64 %1625, 348
  %1627 = load i32, i32* %EAX.i2134
  %1628 = zext i32 %1627 to i64
  %1629 = load i64, i64* %PC.i2133
  %1630 = add i64 %1629, 6
  store i64 %1630, i64* %PC.i2133
  %1631 = inttoptr i64 %1626 to i32*
  store i32 %1627, i32* %1631
  store %struct.Memory* %loadMem_43a46b, %struct.Memory** %MEMORY
  %loadMem_43a471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1633 = getelementptr inbounds %struct.GPR, %struct.GPR* %1632, i32 0, i32 33
  %1634 = getelementptr inbounds %struct.Reg, %struct.Reg* %1633, i32 0, i32 0
  %PC.i2132 = bitcast %union.anon* %1634 to i64*
  %1635 = load i64, i64* %PC.i2132
  %1636 = add i64 %1635, 21
  %1637 = load i64, i64* %PC.i2132
  %1638 = add i64 %1637, 5
  store i64 %1638, i64* %PC.i2132
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1636, i64* %1639, align 8
  store %struct.Memory* %loadMem_43a471, %struct.Memory** %MEMORY
  br label %block_.L_43a486

block_.L_43a476:                                  ; preds = %block_43a45b
  %loadMem_43a476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1641 = getelementptr inbounds %struct.GPR, %struct.GPR* %1640, i32 0, i32 33
  %1642 = getelementptr inbounds %struct.Reg, %struct.Reg* %1641, i32 0, i32 0
  %PC.i2130 = bitcast %union.anon* %1642 to i64*
  %1643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1644 = getelementptr inbounds %struct.GPR, %struct.GPR* %1643, i32 0, i32 1
  %1645 = getelementptr inbounds %struct.Reg, %struct.Reg* %1644, i32 0, i32 0
  %RAX.i2131 = bitcast %union.anon* %1645 to i64*
  %1646 = load i64, i64* %PC.i2130
  %1647 = add i64 %1646, 5
  store i64 %1647, i64* %PC.i2130
  store i64 1, i64* %RAX.i2131, align 8
  store %struct.Memory* %loadMem_43a476, %struct.Memory** %MEMORY
  %loadMem_43a47b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1649 = getelementptr inbounds %struct.GPR, %struct.GPR* %1648, i32 0, i32 33
  %1650 = getelementptr inbounds %struct.Reg, %struct.Reg* %1649, i32 0, i32 0
  %PC.i2127 = bitcast %union.anon* %1650 to i64*
  %1651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1652 = getelementptr inbounds %struct.GPR, %struct.GPR* %1651, i32 0, i32 1
  %1653 = getelementptr inbounds %struct.Reg, %struct.Reg* %1652, i32 0, i32 0
  %EAX.i2128 = bitcast %union.anon* %1653 to i32*
  %1654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1655 = getelementptr inbounds %struct.GPR, %struct.GPR* %1654, i32 0, i32 15
  %1656 = getelementptr inbounds %struct.Reg, %struct.Reg* %1655, i32 0, i32 0
  %RBP.i2129 = bitcast %union.anon* %1656 to i64*
  %1657 = load i64, i64* %RBP.i2129
  %1658 = sub i64 %1657, 348
  %1659 = load i32, i32* %EAX.i2128
  %1660 = zext i32 %1659 to i64
  %1661 = load i64, i64* %PC.i2127
  %1662 = add i64 %1661, 6
  store i64 %1662, i64* %PC.i2127
  %1663 = inttoptr i64 %1658 to i32*
  store i32 %1659, i32* %1663
  store %struct.Memory* %loadMem_43a47b, %struct.Memory** %MEMORY
  %loadMem_43a481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1665 = getelementptr inbounds %struct.GPR, %struct.GPR* %1664, i32 0, i32 33
  %1666 = getelementptr inbounds %struct.Reg, %struct.Reg* %1665, i32 0, i32 0
  %PC.i2126 = bitcast %union.anon* %1666 to i64*
  %1667 = load i64, i64* %PC.i2126
  %1668 = add i64 %1667, 5
  %1669 = load i64, i64* %PC.i2126
  %1670 = add i64 %1669, 5
  store i64 %1670, i64* %PC.i2126
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1668, i64* %1671, align 8
  store %struct.Memory* %loadMem_43a481, %struct.Memory** %MEMORY
  br label %block_.L_43a486

block_.L_43a486:                                  ; preds = %block_.L_43a476, %block_43a465
  %loadMem_43a486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1673 = getelementptr inbounds %struct.GPR, %struct.GPR* %1672, i32 0, i32 33
  %1674 = getelementptr inbounds %struct.Reg, %struct.Reg* %1673, i32 0, i32 0
  %PC.i2123 = bitcast %union.anon* %1674 to i64*
  %1675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1676 = getelementptr inbounds %struct.GPR, %struct.GPR* %1675, i32 0, i32 1
  %1677 = getelementptr inbounds %struct.Reg, %struct.Reg* %1676, i32 0, i32 0
  %RAX.i2124 = bitcast %union.anon* %1677 to i64*
  %1678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1679 = getelementptr inbounds %struct.GPR, %struct.GPR* %1678, i32 0, i32 15
  %1680 = getelementptr inbounds %struct.Reg, %struct.Reg* %1679, i32 0, i32 0
  %RBP.i2125 = bitcast %union.anon* %1680 to i64*
  %1681 = load i64, i64* %RBP.i2125
  %1682 = sub i64 %1681, 348
  %1683 = load i64, i64* %PC.i2123
  %1684 = add i64 %1683, 6
  store i64 %1684, i64* %PC.i2123
  %1685 = inttoptr i64 %1682 to i32*
  %1686 = load i32, i32* %1685
  %1687 = zext i32 %1686 to i64
  store i64 %1687, i64* %RAX.i2124, align 8
  store %struct.Memory* %loadMem_43a486, %struct.Memory** %MEMORY
  %loadMem_43a48c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1689 = getelementptr inbounds %struct.GPR, %struct.GPR* %1688, i32 0, i32 33
  %1690 = getelementptr inbounds %struct.Reg, %struct.Reg* %1689, i32 0, i32 0
  %PC.i2120 = bitcast %union.anon* %1690 to i64*
  %1691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1692 = getelementptr inbounds %struct.GPR, %struct.GPR* %1691, i32 0, i32 1
  %1693 = getelementptr inbounds %struct.Reg, %struct.Reg* %1692, i32 0, i32 0
  %EAX.i2121 = bitcast %union.anon* %1693 to i32*
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1695 = getelementptr inbounds %struct.GPR, %struct.GPR* %1694, i32 0, i32 15
  %1696 = getelementptr inbounds %struct.Reg, %struct.Reg* %1695, i32 0, i32 0
  %RBP.i2122 = bitcast %union.anon* %1696 to i64*
  %1697 = load i64, i64* %RBP.i2122
  %1698 = sub i64 %1697, 352
  %1699 = load i32, i32* %EAX.i2121
  %1700 = zext i32 %1699 to i64
  %1701 = load i64, i64* %PC.i2120
  %1702 = add i64 %1701, 6
  store i64 %1702, i64* %PC.i2120
  %1703 = inttoptr i64 %1698 to i32*
  store i32 %1699, i32* %1703
  store %struct.Memory* %loadMem_43a48c, %struct.Memory** %MEMORY
  %loadMem_43a492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1705 = getelementptr inbounds %struct.GPR, %struct.GPR* %1704, i32 0, i32 33
  %1706 = getelementptr inbounds %struct.Reg, %struct.Reg* %1705, i32 0, i32 0
  %PC.i2119 = bitcast %union.anon* %1706 to i64*
  %1707 = load i64, i64* %PC.i2119
  %1708 = add i64 %1707, 14
  %1709 = load i64, i64* %PC.i2119
  %1710 = add i64 %1709, 5
  store i64 %1710, i64* %PC.i2119
  %1711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1708, i64* %1711, align 8
  store %struct.Memory* %loadMem_43a492, %struct.Memory** %MEMORY
  br label %block_.L_43a4a0

block_.L_43a497:                                  ; preds = %block_.L_43a445
  %loadMem_43a497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1713 = getelementptr inbounds %struct.GPR, %struct.GPR* %1712, i32 0, i32 33
  %1714 = getelementptr inbounds %struct.Reg, %struct.Reg* %1713, i32 0, i32 0
  %PC.i2116 = bitcast %union.anon* %1714 to i64*
  %1715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1716 = getelementptr inbounds %struct.GPR, %struct.GPR* %1715, i32 0, i32 1
  %1717 = getelementptr inbounds %struct.Reg, %struct.Reg* %1716, i32 0, i32 0
  %RAX.i2117 = bitcast %union.anon* %1717 to i64*
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1719 = getelementptr inbounds %struct.GPR, %struct.GPR* %1718, i32 0, i32 15
  %1720 = getelementptr inbounds %struct.Reg, %struct.Reg* %1719, i32 0, i32 0
  %RBP.i2118 = bitcast %union.anon* %1720 to i64*
  %1721 = load i64, i64* %RBP.i2118
  %1722 = sub i64 %1721, 76
  %1723 = load i64, i64* %PC.i2116
  %1724 = add i64 %1723, 3
  store i64 %1724, i64* %PC.i2116
  %1725 = inttoptr i64 %1722 to i32*
  %1726 = load i32, i32* %1725
  %1727 = zext i32 %1726 to i64
  store i64 %1727, i64* %RAX.i2117, align 8
  store %struct.Memory* %loadMem_43a497, %struct.Memory** %MEMORY
  %loadMem_43a49a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1729 = getelementptr inbounds %struct.GPR, %struct.GPR* %1728, i32 0, i32 33
  %1730 = getelementptr inbounds %struct.Reg, %struct.Reg* %1729, i32 0, i32 0
  %PC.i2113 = bitcast %union.anon* %1730 to i64*
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1732 = getelementptr inbounds %struct.GPR, %struct.GPR* %1731, i32 0, i32 1
  %1733 = getelementptr inbounds %struct.Reg, %struct.Reg* %1732, i32 0, i32 0
  %EAX.i2114 = bitcast %union.anon* %1733 to i32*
  %1734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1735 = getelementptr inbounds %struct.GPR, %struct.GPR* %1734, i32 0, i32 15
  %1736 = getelementptr inbounds %struct.Reg, %struct.Reg* %1735, i32 0, i32 0
  %RBP.i2115 = bitcast %union.anon* %1736 to i64*
  %1737 = load i64, i64* %RBP.i2115
  %1738 = sub i64 %1737, 352
  %1739 = load i32, i32* %EAX.i2114
  %1740 = zext i32 %1739 to i64
  %1741 = load i64, i64* %PC.i2113
  %1742 = add i64 %1741, 6
  store i64 %1742, i64* %PC.i2113
  %1743 = inttoptr i64 %1738 to i32*
  store i32 %1739, i32* %1743
  store %struct.Memory* %loadMem_43a49a, %struct.Memory** %MEMORY
  br label %block_.L_43a4a0

block_.L_43a4a0:                                  ; preds = %block_.L_43a497, %block_.L_43a486
  %loadMem_43a4a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1745 = getelementptr inbounds %struct.GPR, %struct.GPR* %1744, i32 0, i32 33
  %1746 = getelementptr inbounds %struct.Reg, %struct.Reg* %1745, i32 0, i32 0
  %PC.i2110 = bitcast %union.anon* %1746 to i64*
  %1747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1748 = getelementptr inbounds %struct.GPR, %struct.GPR* %1747, i32 0, i32 1
  %1749 = getelementptr inbounds %struct.Reg, %struct.Reg* %1748, i32 0, i32 0
  %RAX.i2111 = bitcast %union.anon* %1749 to i64*
  %1750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1751 = getelementptr inbounds %struct.GPR, %struct.GPR* %1750, i32 0, i32 15
  %1752 = getelementptr inbounds %struct.Reg, %struct.Reg* %1751, i32 0, i32 0
  %RBP.i2112 = bitcast %union.anon* %1752 to i64*
  %1753 = load i64, i64* %RBP.i2112
  %1754 = sub i64 %1753, 352
  %1755 = load i64, i64* %PC.i2110
  %1756 = add i64 %1755, 6
  store i64 %1756, i64* %PC.i2110
  %1757 = inttoptr i64 %1754 to i32*
  %1758 = load i32, i32* %1757
  %1759 = zext i32 %1758 to i64
  store i64 %1759, i64* %RAX.i2111, align 8
  store %struct.Memory* %loadMem_43a4a0, %struct.Memory** %MEMORY
  %loadMem_43a4a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1761 = getelementptr inbounds %struct.GPR, %struct.GPR* %1760, i32 0, i32 33
  %1762 = getelementptr inbounds %struct.Reg, %struct.Reg* %1761, i32 0, i32 0
  %PC.i2107 = bitcast %union.anon* %1762 to i64*
  %1763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1764 = getelementptr inbounds %struct.GPR, %struct.GPR* %1763, i32 0, i32 15
  %1765 = getelementptr inbounds %struct.Reg, %struct.Reg* %1764, i32 0, i32 0
  %RBP.i2108 = bitcast %union.anon* %1765 to i64*
  %1766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1767 = getelementptr inbounds %struct.GPR, %struct.GPR* %1766, i32 0, i32 17
  %1768 = getelementptr inbounds %struct.Reg, %struct.Reg* %1767, i32 0, i32 0
  %R8.i2109 = bitcast %union.anon* %1768 to i64*
  %1769 = load i64, i64* %RBP.i2108
  %1770 = sub i64 %1769, 296
  %1771 = load i64, i64* %PC.i2107
  %1772 = add i64 %1771, 7
  store i64 %1772, i64* %PC.i2107
  store i64 %1770, i64* %R8.i2109, align 8
  store %struct.Memory* %loadMem_43a4a6, %struct.Memory** %MEMORY
  %loadMem_43a4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %1773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1774 = getelementptr inbounds %struct.GPR, %struct.GPR* %1773, i32 0, i32 33
  %1775 = getelementptr inbounds %struct.Reg, %struct.Reg* %1774, i32 0, i32 0
  %PC.i2105 = bitcast %union.anon* %1775 to i64*
  %1776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1777 = getelementptr inbounds %struct.GPR, %struct.GPR* %1776, i32 0, i32 5
  %1778 = getelementptr inbounds %struct.Reg, %struct.Reg* %1777, i32 0, i32 0
  %RCX.i2106 = bitcast %union.anon* %1778 to i64*
  %1779 = load i64, i64* %PC.i2105
  %1780 = add i64 %1779, 5
  store i64 %1780, i64* %PC.i2105
  store i64 1, i64* %RCX.i2106, align 8
  store %struct.Memory* %loadMem_43a4ad, %struct.Memory** %MEMORY
  %loadMem_43a4b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1782 = getelementptr inbounds %struct.GPR, %struct.GPR* %1781, i32 0, i32 33
  %1783 = getelementptr inbounds %struct.Reg, %struct.Reg* %1782, i32 0, i32 0
  %PC.i2102 = bitcast %union.anon* %1783 to i64*
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1785 = getelementptr inbounds %struct.GPR, %struct.GPR* %1784, i32 0, i32 1
  %1786 = getelementptr inbounds %struct.Reg, %struct.Reg* %1785, i32 0, i32 0
  %EAX.i2103 = bitcast %union.anon* %1786 to i32*
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1788 = getelementptr inbounds %struct.GPR, %struct.GPR* %1787, i32 0, i32 15
  %1789 = getelementptr inbounds %struct.Reg, %struct.Reg* %1788, i32 0, i32 0
  %RBP.i2104 = bitcast %union.anon* %1789 to i64*
  %1790 = load i64, i64* %RBP.i2104
  %1791 = sub i64 %1790, 228
  %1792 = load i32, i32* %EAX.i2103
  %1793 = zext i32 %1792 to i64
  %1794 = load i64, i64* %PC.i2102
  %1795 = add i64 %1794, 6
  store i64 %1795, i64* %PC.i2102
  %1796 = inttoptr i64 %1791 to i32*
  store i32 %1792, i32* %1796
  store %struct.Memory* %loadMem_43a4b2, %struct.Memory** %MEMORY
  %loadMem_43a4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1798 = getelementptr inbounds %struct.GPR, %struct.GPR* %1797, i32 0, i32 33
  %1799 = getelementptr inbounds %struct.Reg, %struct.Reg* %1798, i32 0, i32 0
  %PC.i2099 = bitcast %union.anon* %1799 to i64*
  %1800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1801 = getelementptr inbounds %struct.GPR, %struct.GPR* %1800, i32 0, i32 11
  %1802 = getelementptr inbounds %struct.Reg, %struct.Reg* %1801, i32 0, i32 0
  %RDI.i2100 = bitcast %union.anon* %1802 to i64*
  %1803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1804 = getelementptr inbounds %struct.GPR, %struct.GPR* %1803, i32 0, i32 15
  %1805 = getelementptr inbounds %struct.Reg, %struct.Reg* %1804, i32 0, i32 0
  %RBP.i2101 = bitcast %union.anon* %1805 to i64*
  %1806 = load i64, i64* %RBP.i2101
  %1807 = sub i64 %1806, 44
  %1808 = load i64, i64* %PC.i2099
  %1809 = add i64 %1808, 3
  store i64 %1809, i64* %PC.i2099
  %1810 = inttoptr i64 %1807 to i32*
  %1811 = load i32, i32* %1810
  %1812 = zext i32 %1811 to i64
  store i64 %1812, i64* %RDI.i2100, align 8
  store %struct.Memory* %loadMem_43a4b8, %struct.Memory** %MEMORY
  %loadMem_43a4bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1814 = getelementptr inbounds %struct.GPR, %struct.GPR* %1813, i32 0, i32 33
  %1815 = getelementptr inbounds %struct.Reg, %struct.Reg* %1814, i32 0, i32 0
  %PC.i2096 = bitcast %union.anon* %1815 to i64*
  %1816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1817 = getelementptr inbounds %struct.GPR, %struct.GPR* %1816, i32 0, i32 9
  %1818 = getelementptr inbounds %struct.Reg, %struct.Reg* %1817, i32 0, i32 0
  %RSI.i2097 = bitcast %union.anon* %1818 to i64*
  %1819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1820 = getelementptr inbounds %struct.GPR, %struct.GPR* %1819, i32 0, i32 15
  %1821 = getelementptr inbounds %struct.Reg, %struct.Reg* %1820, i32 0, i32 0
  %RBP.i2098 = bitcast %union.anon* %1821 to i64*
  %1822 = load i64, i64* %RBP.i2098
  %1823 = sub i64 %1822, 220
  %1824 = load i64, i64* %PC.i2096
  %1825 = add i64 %1824, 6
  store i64 %1825, i64* %PC.i2096
  %1826 = inttoptr i64 %1823 to i32*
  %1827 = load i32, i32* %1826
  %1828 = zext i32 %1827 to i64
  store i64 %1828, i64* %RSI.i2097, align 8
  store %struct.Memory* %loadMem_43a4bb, %struct.Memory** %MEMORY
  %loadMem_43a4c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1830 = getelementptr inbounds %struct.GPR, %struct.GPR* %1829, i32 0, i32 33
  %1831 = getelementptr inbounds %struct.Reg, %struct.Reg* %1830, i32 0, i32 0
  %PC.i2093 = bitcast %union.anon* %1831 to i64*
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1833 = getelementptr inbounds %struct.GPR, %struct.GPR* %1832, i32 0, i32 7
  %1834 = getelementptr inbounds %struct.Reg, %struct.Reg* %1833, i32 0, i32 0
  %RDX.i2094 = bitcast %union.anon* %1834 to i64*
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1836 = getelementptr inbounds %struct.GPR, %struct.GPR* %1835, i32 0, i32 15
  %1837 = getelementptr inbounds %struct.Reg, %struct.Reg* %1836, i32 0, i32 0
  %RBP.i2095 = bitcast %union.anon* %1837 to i64*
  %1838 = load i64, i64* %RBP.i2095
  %1839 = sub i64 %1838, 228
  %1840 = load i64, i64* %PC.i2093
  %1841 = add i64 %1840, 6
  store i64 %1841, i64* %PC.i2093
  %1842 = inttoptr i64 %1839 to i32*
  %1843 = load i32, i32* %1842
  %1844 = zext i32 %1843 to i64
  store i64 %1844, i64* %RDX.i2094, align 8
  store %struct.Memory* %loadMem_43a4c1, %struct.Memory** %MEMORY
  %loadMem_43a4c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1846 = getelementptr inbounds %struct.GPR, %struct.GPR* %1845, i32 0, i32 33
  %1847 = getelementptr inbounds %struct.Reg, %struct.Reg* %1846, i32 0, i32 0
  %PC.i2090 = bitcast %union.anon* %1847 to i64*
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1849 = getelementptr inbounds %struct.GPR, %struct.GPR* %1848, i32 0, i32 5
  %1850 = getelementptr inbounds %struct.Reg, %struct.Reg* %1849, i32 0, i32 0
  %RCX.i2091 = bitcast %union.anon* %1850 to i64*
  %1851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1852 = getelementptr inbounds %struct.GPR, %struct.GPR* %1851, i32 0, i32 15
  %1853 = getelementptr inbounds %struct.Reg, %struct.Reg* %1852, i32 0, i32 0
  %RBP.i2092 = bitcast %union.anon* %1853 to i64*
  %1854 = load i64, i64* %RCX.i2091
  %1855 = load i64, i64* %RBP.i2092
  %1856 = sub i64 %1855, 68
  %1857 = load i64, i64* %PC.i2090
  %1858 = add i64 %1857, 3
  store i64 %1858, i64* %PC.i2090
  %1859 = trunc i64 %1854 to i32
  %1860 = inttoptr i64 %1856 to i32*
  %1861 = load i32, i32* %1860
  %1862 = sub i32 %1859, %1861
  %1863 = zext i32 %1862 to i64
  store i64 %1863, i64* %RCX.i2091, align 8
  %1864 = icmp ult i32 %1859, %1861
  %1865 = zext i1 %1864 to i8
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1865, i8* %1866, align 1
  %1867 = and i32 %1862, 255
  %1868 = call i32 @llvm.ctpop.i32(i32 %1867)
  %1869 = trunc i32 %1868 to i8
  %1870 = and i8 %1869, 1
  %1871 = xor i8 %1870, 1
  %1872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1871, i8* %1872, align 1
  %1873 = xor i32 %1861, %1859
  %1874 = xor i32 %1873, %1862
  %1875 = lshr i32 %1874, 4
  %1876 = trunc i32 %1875 to i8
  %1877 = and i8 %1876, 1
  %1878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1877, i8* %1878, align 1
  %1879 = icmp eq i32 %1862, 0
  %1880 = zext i1 %1879 to i8
  %1881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1880, i8* %1881, align 1
  %1882 = lshr i32 %1862, 31
  %1883 = trunc i32 %1882 to i8
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1883, i8* %1884, align 1
  %1885 = lshr i32 %1859, 31
  %1886 = lshr i32 %1861, 31
  %1887 = xor i32 %1886, %1885
  %1888 = xor i32 %1882, %1885
  %1889 = add i32 %1888, %1887
  %1890 = icmp eq i32 %1889, 2
  %1891 = zext i1 %1890 to i8
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1891, i8* %1892, align 1
  store %struct.Memory* %loadMem_43a4c7, %struct.Memory** %MEMORY
  %loadMem1_43a4ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %1893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1894 = getelementptr inbounds %struct.GPR, %struct.GPR* %1893, i32 0, i32 33
  %1895 = getelementptr inbounds %struct.Reg, %struct.Reg* %1894, i32 0, i32 0
  %PC.i2089 = bitcast %union.anon* %1895 to i64*
  %1896 = load i64, i64* %PC.i2089
  %1897 = add i64 %1896, 68838
  %1898 = load i64, i64* %PC.i2089
  %1899 = add i64 %1898, 5
  %1900 = load i64, i64* %PC.i2089
  %1901 = add i64 %1900, 5
  store i64 %1901, i64* %PC.i2089
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1903 = load i64, i64* %1902, align 8
  %1904 = add i64 %1903, -8
  %1905 = inttoptr i64 %1904 to i64*
  store i64 %1899, i64* %1905
  store i64 %1904, i64* %1902, align 8
  %1906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1897, i64* %1906, align 8
  store %struct.Memory* %loadMem1_43a4ca, %struct.Memory** %MEMORY
  %loadMem2_43a4ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a4ca = load i64, i64* %3
  %call2_43a4ca = call %struct.Memory* @sub_44b1b0.getNeighbour(%struct.State* %0, i64 %loadPC_43a4ca, %struct.Memory* %loadMem2_43a4ca)
  store %struct.Memory* %call2_43a4ca, %struct.Memory** %MEMORY
  %loadMem_43a4cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1908 = getelementptr inbounds %struct.GPR, %struct.GPR* %1907, i32 0, i32 33
  %1909 = getelementptr inbounds %struct.Reg, %struct.Reg* %1908, i32 0, i32 0
  %PC.i2086 = bitcast %union.anon* %1909 to i64*
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1911 = getelementptr inbounds %struct.GPR, %struct.GPR* %1910, i32 0, i32 15
  %1912 = getelementptr inbounds %struct.Reg, %struct.Reg* %1911, i32 0, i32 0
  %RBP.i2087 = bitcast %union.anon* %1912 to i64*
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1914 = getelementptr inbounds %struct.GPR, %struct.GPR* %1913, i32 0, i32 17
  %1915 = getelementptr inbounds %struct.Reg, %struct.Reg* %1914, i32 0, i32 0
  %R8.i2088 = bitcast %union.anon* %1915 to i64*
  %1916 = load i64, i64* %RBP.i2087
  %1917 = sub i64 %1916, 272
  %1918 = load i64, i64* %PC.i2086
  %1919 = add i64 %1918, 7
  store i64 %1919, i64* %PC.i2086
  store i64 %1917, i64* %R8.i2088, align 8
  store %struct.Memory* %loadMem_43a4cf, %struct.Memory** %MEMORY
  %loadMem_43a4d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1921 = getelementptr inbounds %struct.GPR, %struct.GPR* %1920, i32 0, i32 33
  %1922 = getelementptr inbounds %struct.Reg, %struct.Reg* %1921, i32 0, i32 0
  %PC.i2084 = bitcast %union.anon* %1922 to i64*
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1924 = getelementptr inbounds %struct.GPR, %struct.GPR* %1923, i32 0, i32 1
  %1925 = getelementptr inbounds %struct.Reg, %struct.Reg* %1924, i32 0, i32 0
  %RAX.i2085 = bitcast %union.anon* %1925 to i64*
  %1926 = load i64, i64* %PC.i2084
  %1927 = add i64 %1926, 5
  store i64 %1927, i64* %PC.i2084
  store i64 1, i64* %RAX.i2085, align 8
  store %struct.Memory* %loadMem_43a4d6, %struct.Memory** %MEMORY
  %loadMem_43a4db = load %struct.Memory*, %struct.Memory** %MEMORY
  %1928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1929 = getelementptr inbounds %struct.GPR, %struct.GPR* %1928, i32 0, i32 33
  %1930 = getelementptr inbounds %struct.Reg, %struct.Reg* %1929, i32 0, i32 0
  %PC.i2081 = bitcast %union.anon* %1930 to i64*
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1932 = getelementptr inbounds %struct.GPR, %struct.GPR* %1931, i32 0, i32 11
  %1933 = getelementptr inbounds %struct.Reg, %struct.Reg* %1932, i32 0, i32 0
  %RDI.i2082 = bitcast %union.anon* %1933 to i64*
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1935 = getelementptr inbounds %struct.GPR, %struct.GPR* %1934, i32 0, i32 15
  %1936 = getelementptr inbounds %struct.Reg, %struct.Reg* %1935, i32 0, i32 0
  %RBP.i2083 = bitcast %union.anon* %1936 to i64*
  %1937 = load i64, i64* %RBP.i2083
  %1938 = sub i64 %1937, 44
  %1939 = load i64, i64* %PC.i2081
  %1940 = add i64 %1939, 3
  store i64 %1940, i64* %PC.i2081
  %1941 = inttoptr i64 %1938 to i32*
  %1942 = load i32, i32* %1941
  %1943 = zext i32 %1942 to i64
  store i64 %1943, i64* %RDI.i2082, align 8
  store %struct.Memory* %loadMem_43a4db, %struct.Memory** %MEMORY
  %loadMem_43a4de = load %struct.Memory*, %struct.Memory** %MEMORY
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1945 = getelementptr inbounds %struct.GPR, %struct.GPR* %1944, i32 0, i32 33
  %1946 = getelementptr inbounds %struct.Reg, %struct.Reg* %1945, i32 0, i32 0
  %PC.i2078 = bitcast %union.anon* %1946 to i64*
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1948 = getelementptr inbounds %struct.GPR, %struct.GPR* %1947, i32 0, i32 5
  %1949 = getelementptr inbounds %struct.Reg, %struct.Reg* %1948, i32 0, i32 0
  %RCX.i2079 = bitcast %union.anon* %1949 to i64*
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1951 = getelementptr inbounds %struct.GPR, %struct.GPR* %1950, i32 0, i32 15
  %1952 = getelementptr inbounds %struct.Reg, %struct.Reg* %1951, i32 0, i32 0
  %RBP.i2080 = bitcast %union.anon* %1952 to i64*
  %1953 = load i64, i64* %RBP.i2080
  %1954 = sub i64 %1953, 220
  %1955 = load i64, i64* %PC.i2078
  %1956 = add i64 %1955, 6
  store i64 %1956, i64* %PC.i2078
  %1957 = inttoptr i64 %1954 to i32*
  %1958 = load i32, i32* %1957
  %1959 = zext i32 %1958 to i64
  store i64 %1959, i64* %RCX.i2079, align 8
  store %struct.Memory* %loadMem_43a4de, %struct.Memory** %MEMORY
  %loadMem_43a4e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1961 = getelementptr inbounds %struct.GPR, %struct.GPR* %1960, i32 0, i32 33
  %1962 = getelementptr inbounds %struct.Reg, %struct.Reg* %1961, i32 0, i32 0
  %PC.i2075 = bitcast %union.anon* %1962 to i64*
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1964 = getelementptr inbounds %struct.GPR, %struct.GPR* %1963, i32 0, i32 1
  %1965 = getelementptr inbounds %struct.Reg, %struct.Reg* %1964, i32 0, i32 0
  %EAX.i2076 = bitcast %union.anon* %1965 to i32*
  %1966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1967 = getelementptr inbounds %struct.GPR, %struct.GPR* %1966, i32 0, i32 7
  %1968 = getelementptr inbounds %struct.Reg, %struct.Reg* %1967, i32 0, i32 0
  %RDX.i2077 = bitcast %union.anon* %1968 to i64*
  %1969 = load i32, i32* %EAX.i2076
  %1970 = zext i32 %1969 to i64
  %1971 = load i64, i64* %PC.i2075
  %1972 = add i64 %1971, 2
  store i64 %1972, i64* %PC.i2075
  %1973 = and i64 %1970, 4294967295
  store i64 %1973, i64* %RDX.i2077, align 8
  store %struct.Memory* %loadMem_43a4e4, %struct.Memory** %MEMORY
  %loadMem_43a4e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1975 = getelementptr inbounds %struct.GPR, %struct.GPR* %1974, i32 0, i32 33
  %1976 = getelementptr inbounds %struct.Reg, %struct.Reg* %1975, i32 0, i32 0
  %PC.i2072 = bitcast %union.anon* %1976 to i64*
  %1977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1978 = getelementptr inbounds %struct.GPR, %struct.GPR* %1977, i32 0, i32 7
  %1979 = getelementptr inbounds %struct.Reg, %struct.Reg* %1978, i32 0, i32 0
  %RDX.i2073 = bitcast %union.anon* %1979 to i64*
  %1980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1981 = getelementptr inbounds %struct.GPR, %struct.GPR* %1980, i32 0, i32 15
  %1982 = getelementptr inbounds %struct.Reg, %struct.Reg* %1981, i32 0, i32 0
  %RBP.i2074 = bitcast %union.anon* %1982 to i64*
  %1983 = load i64, i64* %RDX.i2073
  %1984 = load i64, i64* %RBP.i2074
  %1985 = sub i64 %1984, 56
  %1986 = load i64, i64* %PC.i2072
  %1987 = add i64 %1986, 3
  store i64 %1987, i64* %PC.i2072
  %1988 = trunc i64 %1983 to i32
  %1989 = inttoptr i64 %1985 to i32*
  %1990 = load i32, i32* %1989
  %1991 = sub i32 %1988, %1990
  %1992 = zext i32 %1991 to i64
  store i64 %1992, i64* %RDX.i2073, align 8
  %1993 = icmp ult i32 %1988, %1990
  %1994 = zext i1 %1993 to i8
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1994, i8* %1995, align 1
  %1996 = and i32 %1991, 255
  %1997 = call i32 @llvm.ctpop.i32(i32 %1996)
  %1998 = trunc i32 %1997 to i8
  %1999 = and i8 %1998, 1
  %2000 = xor i8 %1999, 1
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2000, i8* %2001, align 1
  %2002 = xor i32 %1990, %1988
  %2003 = xor i32 %2002, %1991
  %2004 = lshr i32 %2003, 4
  %2005 = trunc i32 %2004 to i8
  %2006 = and i8 %2005, 1
  %2007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2006, i8* %2007, align 1
  %2008 = icmp eq i32 %1991, 0
  %2009 = zext i1 %2008 to i8
  %2010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2009, i8* %2010, align 1
  %2011 = lshr i32 %1991, 31
  %2012 = trunc i32 %2011 to i8
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2012, i8* %2013, align 1
  %2014 = lshr i32 %1988, 31
  %2015 = lshr i32 %1990, 31
  %2016 = xor i32 %2015, %2014
  %2017 = xor i32 %2011, %2014
  %2018 = add i32 %2017, %2016
  %2019 = icmp eq i32 %2018, 2
  %2020 = zext i1 %2019 to i8
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2020, i8* %2021, align 1
  store %struct.Memory* %loadMem_43a4e6, %struct.Memory** %MEMORY
  %loadMem_43a4e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2023 = getelementptr inbounds %struct.GPR, %struct.GPR* %2022, i32 0, i32 33
  %2024 = getelementptr inbounds %struct.Reg, %struct.Reg* %2023, i32 0, i32 0
  %PC.i2069 = bitcast %union.anon* %2024 to i64*
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2026 = getelementptr inbounds %struct.GPR, %struct.GPR* %2025, i32 0, i32 7
  %2027 = getelementptr inbounds %struct.Reg, %struct.Reg* %2026, i32 0, i32 0
  %EDX.i2070 = bitcast %union.anon* %2027 to i32*
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2029 = getelementptr inbounds %struct.GPR, %struct.GPR* %2028, i32 0, i32 5
  %2030 = getelementptr inbounds %struct.Reg, %struct.Reg* %2029, i32 0, i32 0
  %RCX.i2071 = bitcast %union.anon* %2030 to i64*
  %2031 = load i64, i64* %RCX.i2071
  %2032 = load i32, i32* %EDX.i2070
  %2033 = zext i32 %2032 to i64
  %2034 = load i64, i64* %PC.i2069
  %2035 = add i64 %2034, 2
  store i64 %2035, i64* %PC.i2069
  %2036 = trunc i64 %2031 to i32
  %2037 = sub i32 %2036, %2032
  %2038 = zext i32 %2037 to i64
  store i64 %2038, i64* %RCX.i2071, align 8
  %2039 = icmp ult i32 %2036, %2032
  %2040 = zext i1 %2039 to i8
  %2041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2040, i8* %2041, align 1
  %2042 = and i32 %2037, 255
  %2043 = call i32 @llvm.ctpop.i32(i32 %2042)
  %2044 = trunc i32 %2043 to i8
  %2045 = and i8 %2044, 1
  %2046 = xor i8 %2045, 1
  %2047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2046, i8* %2047, align 1
  %2048 = xor i64 %2033, %2031
  %2049 = trunc i64 %2048 to i32
  %2050 = xor i32 %2049, %2037
  %2051 = lshr i32 %2050, 4
  %2052 = trunc i32 %2051 to i8
  %2053 = and i8 %2052, 1
  %2054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2053, i8* %2054, align 1
  %2055 = icmp eq i32 %2037, 0
  %2056 = zext i1 %2055 to i8
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2056, i8* %2057, align 1
  %2058 = lshr i32 %2037, 31
  %2059 = trunc i32 %2058 to i8
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2059, i8* %2060, align 1
  %2061 = lshr i32 %2036, 31
  %2062 = lshr i32 %2032, 31
  %2063 = xor i32 %2062, %2061
  %2064 = xor i32 %2058, %2061
  %2065 = add i32 %2064, %2063
  %2066 = icmp eq i32 %2065, 2
  %2067 = zext i1 %2066 to i8
  %2068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2067, i8* %2068, align 1
  store %struct.Memory* %loadMem_43a4e9, %struct.Memory** %MEMORY
  %loadMem_43a4eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2070 = getelementptr inbounds %struct.GPR, %struct.GPR* %2069, i32 0, i32 33
  %2071 = getelementptr inbounds %struct.Reg, %struct.Reg* %2070, i32 0, i32 0
  %PC.i2066 = bitcast %union.anon* %2071 to i64*
  %2072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2073 = getelementptr inbounds %struct.GPR, %struct.GPR* %2072, i32 0, i32 7
  %2074 = getelementptr inbounds %struct.Reg, %struct.Reg* %2073, i32 0, i32 0
  %RDX.i2067 = bitcast %union.anon* %2074 to i64*
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2076 = getelementptr inbounds %struct.GPR, %struct.GPR* %2075, i32 0, i32 15
  %2077 = getelementptr inbounds %struct.Reg, %struct.Reg* %2076, i32 0, i32 0
  %RBP.i2068 = bitcast %union.anon* %2077 to i64*
  %2078 = load i64, i64* %RBP.i2068
  %2079 = sub i64 %2078, 228
  %2080 = load i64, i64* %PC.i2066
  %2081 = add i64 %2080, 6
  store i64 %2081, i64* %PC.i2066
  %2082 = inttoptr i64 %2079 to i32*
  %2083 = load i32, i32* %2082
  %2084 = zext i32 %2083 to i64
  store i64 %2084, i64* %RDX.i2067, align 8
  store %struct.Memory* %loadMem_43a4eb, %struct.Memory** %MEMORY
  %loadMem_43a4f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2086 = getelementptr inbounds %struct.GPR, %struct.GPR* %2085, i32 0, i32 33
  %2087 = getelementptr inbounds %struct.Reg, %struct.Reg* %2086, i32 0, i32 0
  %PC.i2063 = bitcast %union.anon* %2087 to i64*
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2089 = getelementptr inbounds %struct.GPR, %struct.GPR* %2088, i32 0, i32 7
  %2090 = getelementptr inbounds %struct.Reg, %struct.Reg* %2089, i32 0, i32 0
  %RDX.i2064 = bitcast %union.anon* %2090 to i64*
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2092 = getelementptr inbounds %struct.GPR, %struct.GPR* %2091, i32 0, i32 15
  %2093 = getelementptr inbounds %struct.Reg, %struct.Reg* %2092, i32 0, i32 0
  %RBP.i2065 = bitcast %union.anon* %2093 to i64*
  %2094 = load i64, i64* %RDX.i2064
  %2095 = load i64, i64* %RBP.i2065
  %2096 = sub i64 %2095, 56
  %2097 = load i64, i64* %PC.i2063
  %2098 = add i64 %2097, 3
  store i64 %2098, i64* %PC.i2063
  %2099 = trunc i64 %2094 to i32
  %2100 = inttoptr i64 %2096 to i32*
  %2101 = load i32, i32* %2100
  %2102 = sub i32 %2099, %2101
  %2103 = zext i32 %2102 to i64
  store i64 %2103, i64* %RDX.i2064, align 8
  %2104 = icmp ult i32 %2099, %2101
  %2105 = zext i1 %2104 to i8
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2105, i8* %2106, align 1
  %2107 = and i32 %2102, 255
  %2108 = call i32 @llvm.ctpop.i32(i32 %2107)
  %2109 = trunc i32 %2108 to i8
  %2110 = and i8 %2109, 1
  %2111 = xor i8 %2110, 1
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2111, i8* %2112, align 1
  %2113 = xor i32 %2101, %2099
  %2114 = xor i32 %2113, %2102
  %2115 = lshr i32 %2114, 4
  %2116 = trunc i32 %2115 to i8
  %2117 = and i8 %2116, 1
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2117, i8* %2118, align 1
  %2119 = icmp eq i32 %2102, 0
  %2120 = zext i1 %2119 to i8
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2120, i8* %2121, align 1
  %2122 = lshr i32 %2102, 31
  %2123 = trunc i32 %2122 to i8
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2123, i8* %2124, align 1
  %2125 = lshr i32 %2099, 31
  %2126 = lshr i32 %2101, 31
  %2127 = xor i32 %2126, %2125
  %2128 = xor i32 %2122, %2125
  %2129 = add i32 %2128, %2127
  %2130 = icmp eq i32 %2129, 2
  %2131 = zext i1 %2130 to i8
  %2132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2131, i8* %2132, align 1
  store %struct.Memory* %loadMem_43a4f1, %struct.Memory** %MEMORY
  %loadMem_43a4f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2134 = getelementptr inbounds %struct.GPR, %struct.GPR* %2133, i32 0, i32 33
  %2135 = getelementptr inbounds %struct.Reg, %struct.Reg* %2134, i32 0, i32 0
  %PC.i2060 = bitcast %union.anon* %2135 to i64*
  %2136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2137 = getelementptr inbounds %struct.GPR, %struct.GPR* %2136, i32 0, i32 1
  %2138 = getelementptr inbounds %struct.Reg, %struct.Reg* %2137, i32 0, i32 0
  %RAX.i2061 = bitcast %union.anon* %2138 to i64*
  %2139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2140 = getelementptr inbounds %struct.GPR, %struct.GPR* %2139, i32 0, i32 15
  %2141 = getelementptr inbounds %struct.Reg, %struct.Reg* %2140, i32 0, i32 0
  %RBP.i2062 = bitcast %union.anon* %2141 to i64*
  %2142 = load i64, i64* %RAX.i2061
  %2143 = load i64, i64* %RBP.i2062
  %2144 = sub i64 %2143, 68
  %2145 = load i64, i64* %PC.i2060
  %2146 = add i64 %2145, 3
  store i64 %2146, i64* %PC.i2060
  %2147 = trunc i64 %2142 to i32
  %2148 = inttoptr i64 %2144 to i32*
  %2149 = load i32, i32* %2148
  %2150 = sub i32 %2147, %2149
  %2151 = zext i32 %2150 to i64
  store i64 %2151, i64* %RAX.i2061, align 8
  %2152 = icmp ult i32 %2147, %2149
  %2153 = zext i1 %2152 to i8
  %2154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2153, i8* %2154, align 1
  %2155 = and i32 %2150, 255
  %2156 = call i32 @llvm.ctpop.i32(i32 %2155)
  %2157 = trunc i32 %2156 to i8
  %2158 = and i8 %2157, 1
  %2159 = xor i8 %2158, 1
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2159, i8* %2160, align 1
  %2161 = xor i32 %2149, %2147
  %2162 = xor i32 %2161, %2150
  %2163 = lshr i32 %2162, 4
  %2164 = trunc i32 %2163 to i8
  %2165 = and i8 %2164, 1
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2165, i8* %2166, align 1
  %2167 = icmp eq i32 %2150, 0
  %2168 = zext i1 %2167 to i8
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2168, i8* %2169, align 1
  %2170 = lshr i32 %2150, 31
  %2171 = trunc i32 %2170 to i8
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2171, i8* %2172, align 1
  %2173 = lshr i32 %2147, 31
  %2174 = lshr i32 %2149, 31
  %2175 = xor i32 %2174, %2173
  %2176 = xor i32 %2170, %2173
  %2177 = add i32 %2176, %2175
  %2178 = icmp eq i32 %2177, 2
  %2179 = zext i1 %2178 to i8
  %2180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2179, i8* %2180, align 1
  store %struct.Memory* %loadMem_43a4f4, %struct.Memory** %MEMORY
  %loadMem_43a4f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2182 = getelementptr inbounds %struct.GPR, %struct.GPR* %2181, i32 0, i32 33
  %2183 = getelementptr inbounds %struct.Reg, %struct.Reg* %2182, i32 0, i32 0
  %PC.i2057 = bitcast %union.anon* %2183 to i64*
  %2184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2185 = getelementptr inbounds %struct.GPR, %struct.GPR* %2184, i32 0, i32 5
  %2186 = getelementptr inbounds %struct.Reg, %struct.Reg* %2185, i32 0, i32 0
  %ECX.i2058 = bitcast %union.anon* %2186 to i32*
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2188 = getelementptr inbounds %struct.GPR, %struct.GPR* %2187, i32 0, i32 9
  %2189 = getelementptr inbounds %struct.Reg, %struct.Reg* %2188, i32 0, i32 0
  %RSI.i2059 = bitcast %union.anon* %2189 to i64*
  %2190 = load i32, i32* %ECX.i2058
  %2191 = zext i32 %2190 to i64
  %2192 = load i64, i64* %PC.i2057
  %2193 = add i64 %2192, 2
  store i64 %2193, i64* %PC.i2057
  %2194 = and i64 %2191, 4294967295
  store i64 %2194, i64* %RSI.i2059, align 8
  store %struct.Memory* %loadMem_43a4f7, %struct.Memory** %MEMORY
  %loadMem_43a4f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2196 = getelementptr inbounds %struct.GPR, %struct.GPR* %2195, i32 0, i32 33
  %2197 = getelementptr inbounds %struct.Reg, %struct.Reg* %2196, i32 0, i32 0
  %PC.i2054 = bitcast %union.anon* %2197 to i64*
  %2198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2199 = getelementptr inbounds %struct.GPR, %struct.GPR* %2198, i32 0, i32 1
  %2200 = getelementptr inbounds %struct.Reg, %struct.Reg* %2199, i32 0, i32 0
  %EAX.i2055 = bitcast %union.anon* %2200 to i32*
  %2201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2202 = getelementptr inbounds %struct.GPR, %struct.GPR* %2201, i32 0, i32 5
  %2203 = getelementptr inbounds %struct.Reg, %struct.Reg* %2202, i32 0, i32 0
  %RCX.i2056 = bitcast %union.anon* %2203 to i64*
  %2204 = load i32, i32* %EAX.i2055
  %2205 = zext i32 %2204 to i64
  %2206 = load i64, i64* %PC.i2054
  %2207 = add i64 %2206, 2
  store i64 %2207, i64* %PC.i2054
  %2208 = and i64 %2205, 4294967295
  store i64 %2208, i64* %RCX.i2056, align 8
  store %struct.Memory* %loadMem_43a4f9, %struct.Memory** %MEMORY
  %loadMem1_43a4fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2210 = getelementptr inbounds %struct.GPR, %struct.GPR* %2209, i32 0, i32 33
  %2211 = getelementptr inbounds %struct.Reg, %struct.Reg* %2210, i32 0, i32 0
  %PC.i2053 = bitcast %union.anon* %2211 to i64*
  %2212 = load i64, i64* %PC.i2053
  %2213 = add i64 %2212, 68789
  %2214 = load i64, i64* %PC.i2053
  %2215 = add i64 %2214, 5
  %2216 = load i64, i64* %PC.i2053
  %2217 = add i64 %2216, 5
  store i64 %2217, i64* %PC.i2053
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2219 = load i64, i64* %2218, align 8
  %2220 = add i64 %2219, -8
  %2221 = inttoptr i64 %2220 to i64*
  store i64 %2215, i64* %2221
  store i64 %2220, i64* %2218, align 8
  %2222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2213, i64* %2222, align 8
  store %struct.Memory* %loadMem1_43a4fb, %struct.Memory** %MEMORY
  %loadMem2_43a4fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a4fb = load i64, i64* %3
  %call2_43a4fb = call %struct.Memory* @sub_44b1b0.getNeighbour(%struct.State* %0, i64 %loadPC_43a4fb, %struct.Memory* %loadMem2_43a4fb)
  store %struct.Memory* %call2_43a4fb, %struct.Memory** %MEMORY
  %loadMem_43a500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2224 = getelementptr inbounds %struct.GPR, %struct.GPR* %2223, i32 0, i32 33
  %2225 = getelementptr inbounds %struct.Reg, %struct.Reg* %2224, i32 0, i32 0
  %PC.i2051 = bitcast %union.anon* %2225 to i64*
  %2226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2227 = getelementptr inbounds %struct.GPR, %struct.GPR* %2226, i32 0, i32 19
  %2228 = getelementptr inbounds %struct.Reg, %struct.Reg* %2227, i32 0, i32 0
  %2229 = bitcast %union.anon* %2228 to %struct.anon.2*
  %R9B.i2052 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2229, i32 0, i32 0
  %2230 = load i64, i64* %PC.i2051
  %2231 = add i64 %2230, 3
  store i64 %2231, i64* %PC.i2051
  store i8 1, i8* %R9B.i2052, align 1
  store %struct.Memory* %loadMem_43a500, %struct.Memory** %MEMORY
  %loadMem_43a503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2233 = getelementptr inbounds %struct.GPR, %struct.GPR* %2232, i32 0, i32 33
  %2234 = getelementptr inbounds %struct.Reg, %struct.Reg* %2233, i32 0, i32 0
  %PC.i2048 = bitcast %union.anon* %2234 to i64*
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2236 = getelementptr inbounds %struct.GPR, %struct.GPR* %2235, i32 0, i32 1
  %2237 = getelementptr inbounds %struct.Reg, %struct.Reg* %2236, i32 0, i32 0
  %RAX.i2049 = bitcast %union.anon* %2237 to i64*
  %2238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2239 = getelementptr inbounds %struct.GPR, %struct.GPR* %2238, i32 0, i32 15
  %2240 = getelementptr inbounds %struct.Reg, %struct.Reg* %2239, i32 0, i32 0
  %RBP.i2050 = bitcast %union.anon* %2240 to i64*
  %2241 = load i64, i64* %RBP.i2050
  %2242 = sub i64 %2241, 264
  %2243 = load i64, i64* %PC.i2048
  %2244 = add i64 %2243, 6
  store i64 %2244, i64* %PC.i2048
  %2245 = inttoptr i64 %2242 to i32*
  %2246 = load i32, i32* %2245
  %2247 = zext i32 %2246 to i64
  store i64 %2247, i64* %RAX.i2049, align 8
  store %struct.Memory* %loadMem_43a503, %struct.Memory** %MEMORY
  %loadMem_43a509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2249 = getelementptr inbounds %struct.GPR, %struct.GPR* %2248, i32 0, i32 33
  %2250 = getelementptr inbounds %struct.Reg, %struct.Reg* %2249, i32 0, i32 0
  %PC.i2045 = bitcast %union.anon* %2250 to i64*
  %2251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2252 = getelementptr inbounds %struct.GPR, %struct.GPR* %2251, i32 0, i32 1
  %2253 = getelementptr inbounds %struct.Reg, %struct.Reg* %2252, i32 0, i32 0
  %EAX.i2046 = bitcast %union.anon* %2253 to i32*
  %2254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2255 = getelementptr inbounds %struct.GPR, %struct.GPR* %2254, i32 0, i32 15
  %2256 = getelementptr inbounds %struct.Reg, %struct.Reg* %2255, i32 0, i32 0
  %RBP.i2047 = bitcast %union.anon* %2256 to i64*
  %2257 = load i64, i64* %RBP.i2047
  %2258 = sub i64 %2257, 216
  %2259 = load i32, i32* %EAX.i2046
  %2260 = zext i32 %2259 to i64
  %2261 = load i64, i64* %PC.i2045
  %2262 = add i64 %2261, 6
  store i64 %2262, i64* %PC.i2045
  %2263 = inttoptr i64 %2258 to i32*
  store i32 %2259, i32* %2263
  store %struct.Memory* %loadMem_43a509, %struct.Memory** %MEMORY
  %loadMem_43a50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2265 = getelementptr inbounds %struct.GPR, %struct.GPR* %2264, i32 0, i32 33
  %2266 = getelementptr inbounds %struct.Reg, %struct.Reg* %2265, i32 0, i32 0
  %PC.i2042 = bitcast %union.anon* %2266 to i64*
  %2267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2268 = getelementptr inbounds %struct.GPR, %struct.GPR* %2267, i32 0, i32 1
  %2269 = getelementptr inbounds %struct.Reg, %struct.Reg* %2268, i32 0, i32 0
  %RAX.i2043 = bitcast %union.anon* %2269 to i64*
  %2270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2271 = getelementptr inbounds %struct.GPR, %struct.GPR* %2270, i32 0, i32 15
  %2272 = getelementptr inbounds %struct.Reg, %struct.Reg* %2271, i32 0, i32 0
  %RBP.i2044 = bitcast %union.anon* %2272 to i64*
  %2273 = load i64, i64* %RBP.i2044
  %2274 = sub i64 %2273, 260
  %2275 = load i64, i64* %PC.i2042
  %2276 = add i64 %2275, 6
  store i64 %2276, i64* %PC.i2042
  %2277 = inttoptr i64 %2274 to i32*
  %2278 = load i32, i32* %2277
  %2279 = zext i32 %2278 to i64
  store i64 %2279, i64* %RAX.i2043, align 8
  store %struct.Memory* %loadMem_43a50f, %struct.Memory** %MEMORY
  %loadMem_43a515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2281 = getelementptr inbounds %struct.GPR, %struct.GPR* %2280, i32 0, i32 33
  %2282 = getelementptr inbounds %struct.Reg, %struct.Reg* %2281, i32 0, i32 0
  %PC.i2039 = bitcast %union.anon* %2282 to i64*
  %2283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2284 = getelementptr inbounds %struct.GPR, %struct.GPR* %2283, i32 0, i32 1
  %2285 = getelementptr inbounds %struct.Reg, %struct.Reg* %2284, i32 0, i32 0
  %EAX.i2040 = bitcast %union.anon* %2285 to i32*
  %2286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2287 = getelementptr inbounds %struct.GPR, %struct.GPR* %2286, i32 0, i32 15
  %2288 = getelementptr inbounds %struct.Reg, %struct.Reg* %2287, i32 0, i32 0
  %RBP.i2041 = bitcast %union.anon* %2288 to i64*
  %2289 = load i64, i64* %RBP.i2041
  %2290 = sub i64 %2289, 224
  %2291 = load i32, i32* %EAX.i2040
  %2292 = zext i32 %2291 to i64
  %2293 = load i64, i64* %PC.i2039
  %2294 = add i64 %2293, 6
  store i64 %2294, i64* %PC.i2039
  %2295 = inttoptr i64 %2290 to i32*
  store i32 %2291, i32* %2295
  store %struct.Memory* %loadMem_43a515, %struct.Memory** %MEMORY
  %loadMem_43a51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 33
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %PC.i2036 = bitcast %union.anon* %2298 to i64*
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2300 = getelementptr inbounds %struct.GPR, %struct.GPR* %2299, i32 0, i32 15
  %2301 = getelementptr inbounds %struct.Reg, %struct.Reg* %2300, i32 0, i32 0
  %RBP.i2037 = bitcast %union.anon* %2301 to i64*
  %2302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2303 = getelementptr inbounds %struct.GPR, %struct.GPR* %2302, i32 0, i32 17
  %2304 = getelementptr inbounds %struct.Reg, %struct.Reg* %2303, i32 0, i32 0
  %R8.i2038 = bitcast %union.anon* %2304 to i64*
  %2305 = load i64, i64* %RBP.i2037
  %2306 = sub i64 %2305, 40
  %2307 = load i64, i64* %PC.i2036
  %2308 = add i64 %2307, 4
  store i64 %2308, i64* %PC.i2036
  %2309 = inttoptr i64 %2306 to i64*
  %2310 = load i64, i64* %2309
  store i64 %2310, i64* %R8.i2038, align 8
  store %struct.Memory* %loadMem_43a51b, %struct.Memory** %MEMORY
  %loadMem_43a51f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2312 = getelementptr inbounds %struct.GPR, %struct.GPR* %2311, i32 0, i32 33
  %2313 = getelementptr inbounds %struct.Reg, %struct.Reg* %2312, i32 0, i32 0
  %PC.i2034 = bitcast %union.anon* %2313 to i64*
  %2314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2315 = getelementptr inbounds %struct.GPR, %struct.GPR* %2314, i32 0, i32 17
  %2316 = getelementptr inbounds %struct.Reg, %struct.Reg* %2315, i32 0, i32 0
  %R8.i2035 = bitcast %union.anon* %2316 to i64*
  %2317 = load i64, i64* %R8.i2035
  %2318 = add i64 %2317, 14168
  %2319 = load i64, i64* %PC.i2034
  %2320 = add i64 %2319, 7
  store i64 %2320, i64* %PC.i2034
  %2321 = inttoptr i64 %2318 to i64*
  %2322 = load i64, i64* %2321
  store i64 %2322, i64* %R8.i2035, align 8
  store %struct.Memory* %loadMem_43a51f, %struct.Memory** %MEMORY
  %loadMem_43a526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2324 = getelementptr inbounds %struct.GPR, %struct.GPR* %2323, i32 0, i32 33
  %2325 = getelementptr inbounds %struct.Reg, %struct.Reg* %2324, i32 0, i32 0
  %PC.i2031 = bitcast %union.anon* %2325 to i64*
  %2326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2327 = getelementptr inbounds %struct.GPR, %struct.GPR* %2326, i32 0, i32 15
  %2328 = getelementptr inbounds %struct.Reg, %struct.Reg* %2327, i32 0, i32 0
  %RBP.i2032 = bitcast %union.anon* %2328 to i64*
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2330 = getelementptr inbounds %struct.GPR, %struct.GPR* %2329, i32 0, i32 21
  %2331 = getelementptr inbounds %struct.Reg, %struct.Reg* %2330, i32 0, i32 0
  %R10.i2033 = bitcast %union.anon* %2331 to i64*
  %2332 = load i64, i64* %RBP.i2032
  %2333 = sub i64 %2332, 44
  %2334 = load i64, i64* %PC.i2031
  %2335 = add i64 %2334, 4
  store i64 %2335, i64* %PC.i2031
  %2336 = inttoptr i64 %2333 to i32*
  %2337 = load i32, i32* %2336
  %2338 = sext i32 %2337 to i64
  store i64 %2338, i64* %R10.i2033, align 8
  store %struct.Memory* %loadMem_43a526, %struct.Memory** %MEMORY
  %loadMem_43a52a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2340 = getelementptr inbounds %struct.GPR, %struct.GPR* %2339, i32 0, i32 33
  %2341 = getelementptr inbounds %struct.Reg, %struct.Reg* %2340, i32 0, i32 0
  %PC.i2029 = bitcast %union.anon* %2341 to i64*
  %2342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2343 = getelementptr inbounds %struct.GPR, %struct.GPR* %2342, i32 0, i32 21
  %2344 = getelementptr inbounds %struct.Reg, %struct.Reg* %2343, i32 0, i32 0
  %R10.i2030 = bitcast %union.anon* %2344 to i64*
  %2345 = load i64, i64* %R10.i2030
  %2346 = load i64, i64* %PC.i2029
  %2347 = add i64 %2346, 7
  store i64 %2347, i64* %PC.i2029
  %2348 = sext i64 %2345 to i128
  %2349 = and i128 %2348, -18446744073709551616
  %2350 = zext i64 %2345 to i128
  %2351 = or i128 %2349, %2350
  %2352 = mul i128 632, %2351
  %2353 = trunc i128 %2352 to i64
  store i64 %2353, i64* %R10.i2030, align 8
  %2354 = sext i64 %2353 to i128
  %2355 = icmp ne i128 %2354, %2352
  %2356 = zext i1 %2355 to i8
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2356, i8* %2357, align 1
  %2358 = trunc i128 %2352 to i32
  %2359 = and i32 %2358, 255
  %2360 = call i32 @llvm.ctpop.i32(i32 %2359)
  %2361 = trunc i32 %2360 to i8
  %2362 = and i8 %2361, 1
  %2363 = xor i8 %2362, 1
  %2364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2363, i8* %2364, align 1
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2365, align 1
  %2366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2366, align 1
  %2367 = lshr i64 %2353, 63
  %2368 = trunc i64 %2367 to i8
  %2369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2368, i8* %2369, align 1
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2356, i8* %2370, align 1
  store %struct.Memory* %loadMem_43a52a, %struct.Memory** %MEMORY
  %loadMem_43a531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2372 = getelementptr inbounds %struct.GPR, %struct.GPR* %2371, i32 0, i32 33
  %2373 = getelementptr inbounds %struct.Reg, %struct.Reg* %2372, i32 0, i32 0
  %PC.i2026 = bitcast %union.anon* %2373 to i64*
  %2374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2375 = getelementptr inbounds %struct.GPR, %struct.GPR* %2374, i32 0, i32 17
  %2376 = getelementptr inbounds %struct.Reg, %struct.Reg* %2375, i32 0, i32 0
  %R8.i2027 = bitcast %union.anon* %2376 to i64*
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2378 = getelementptr inbounds %struct.GPR, %struct.GPR* %2377, i32 0, i32 21
  %2379 = getelementptr inbounds %struct.Reg, %struct.Reg* %2378, i32 0, i32 0
  %R10.i2028 = bitcast %union.anon* %2379 to i64*
  %2380 = load i64, i64* %R8.i2027
  %2381 = load i64, i64* %R10.i2028
  %2382 = load i64, i64* %PC.i2026
  %2383 = add i64 %2382, 3
  store i64 %2383, i64* %PC.i2026
  %2384 = add i64 %2381, %2380
  store i64 %2384, i64* %R8.i2027, align 8
  %2385 = icmp ult i64 %2384, %2380
  %2386 = icmp ult i64 %2384, %2381
  %2387 = or i1 %2385, %2386
  %2388 = zext i1 %2387 to i8
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2388, i8* %2389, align 1
  %2390 = trunc i64 %2384 to i32
  %2391 = and i32 %2390, 255
  %2392 = call i32 @llvm.ctpop.i32(i32 %2391)
  %2393 = trunc i32 %2392 to i8
  %2394 = and i8 %2393, 1
  %2395 = xor i8 %2394, 1
  %2396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2395, i8* %2396, align 1
  %2397 = xor i64 %2381, %2380
  %2398 = xor i64 %2397, %2384
  %2399 = lshr i64 %2398, 4
  %2400 = trunc i64 %2399 to i8
  %2401 = and i8 %2400, 1
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2401, i8* %2402, align 1
  %2403 = icmp eq i64 %2384, 0
  %2404 = zext i1 %2403 to i8
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2404, i8* %2405, align 1
  %2406 = lshr i64 %2384, 63
  %2407 = trunc i64 %2406 to i8
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2407, i8* %2408, align 1
  %2409 = lshr i64 %2380, 63
  %2410 = lshr i64 %2381, 63
  %2411 = xor i64 %2406, %2409
  %2412 = xor i64 %2406, %2410
  %2413 = add i64 %2411, %2412
  %2414 = icmp eq i64 %2413, 2
  %2415 = zext i1 %2414 to i8
  %2416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2415, i8* %2416, align 1
  store %struct.Memory* %loadMem_43a531, %struct.Memory** %MEMORY
  %loadMem_43a534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2418 = getelementptr inbounds %struct.GPR, %struct.GPR* %2417, i32 0, i32 33
  %2419 = getelementptr inbounds %struct.Reg, %struct.Reg* %2418, i32 0, i32 0
  %PC.i2023 = bitcast %union.anon* %2419 to i64*
  %2420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2421 = getelementptr inbounds %struct.GPR, %struct.GPR* %2420, i32 0, i32 15
  %2422 = getelementptr inbounds %struct.Reg, %struct.Reg* %2421, i32 0, i32 0
  %RBP.i2024 = bitcast %union.anon* %2422 to i64*
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2424 = getelementptr inbounds %struct.GPR, %struct.GPR* %2423, i32 0, i32 17
  %2425 = getelementptr inbounds %struct.Reg, %struct.Reg* %2424, i32 0, i32 0
  %R8.i2025 = bitcast %union.anon* %2425 to i64*
  %2426 = load i64, i64* %RBP.i2024
  %2427 = sub i64 %2426, 240
  %2428 = load i64, i64* %R8.i2025
  %2429 = load i64, i64* %PC.i2023
  %2430 = add i64 %2429, 7
  store i64 %2430, i64* %PC.i2023
  %2431 = inttoptr i64 %2427 to i64*
  store i64 %2428, i64* %2431
  store %struct.Memory* %loadMem_43a534, %struct.Memory** %MEMORY
  %loadMem_43a53b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2433 = getelementptr inbounds %struct.GPR, %struct.GPR* %2432, i32 0, i32 33
  %2434 = getelementptr inbounds %struct.Reg, %struct.Reg* %2433, i32 0, i32 0
  %PC.i2020 = bitcast %union.anon* %2434 to i64*
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2436 = getelementptr inbounds %struct.GPR, %struct.GPR* %2435, i32 0, i32 15
  %2437 = getelementptr inbounds %struct.Reg, %struct.Reg* %2436, i32 0, i32 0
  %RBP.i2021 = bitcast %union.anon* %2437 to i64*
  %2438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2439 = getelementptr inbounds %struct.GPR, %struct.GPR* %2438, i32 0, i32 17
  %2440 = getelementptr inbounds %struct.Reg, %struct.Reg* %2439, i32 0, i32 0
  %R8.i2022 = bitcast %union.anon* %2440 to i64*
  %2441 = load i64, i64* %RBP.i2021
  %2442 = sub i64 %2441, 40
  %2443 = load i64, i64* %PC.i2020
  %2444 = add i64 %2443, 4
  store i64 %2444, i64* %PC.i2020
  %2445 = inttoptr i64 %2442 to i64*
  %2446 = load i64, i64* %2445
  store i64 %2446, i64* %R8.i2022, align 8
  store %struct.Memory* %loadMem_43a53b, %struct.Memory** %MEMORY
  %loadMem_43a53f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2448 = getelementptr inbounds %struct.GPR, %struct.GPR* %2447, i32 0, i32 33
  %2449 = getelementptr inbounds %struct.Reg, %struct.Reg* %2448, i32 0, i32 0
  %PC.i2018 = bitcast %union.anon* %2449 to i64*
  %2450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2451 = getelementptr inbounds %struct.GPR, %struct.GPR* %2450, i32 0, i32 17
  %2452 = getelementptr inbounds %struct.Reg, %struct.Reg* %2451, i32 0, i32 0
  %R8.i2019 = bitcast %union.anon* %2452 to i64*
  %2453 = load i64, i64* %R8.i2019
  %2454 = add i64 %2453, 14168
  %2455 = load i64, i64* %PC.i2018
  %2456 = add i64 %2455, 7
  store i64 %2456, i64* %PC.i2018
  %2457 = inttoptr i64 %2454 to i64*
  %2458 = load i64, i64* %2457
  store i64 %2458, i64* %R8.i2019, align 8
  store %struct.Memory* %loadMem_43a53f, %struct.Memory** %MEMORY
  %loadMem_43a546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2460 = getelementptr inbounds %struct.GPR, %struct.GPR* %2459, i32 0, i32 33
  %2461 = getelementptr inbounds %struct.Reg, %struct.Reg* %2460, i32 0, i32 0
  %PC.i2015 = bitcast %union.anon* %2461 to i64*
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2463 = getelementptr inbounds %struct.GPR, %struct.GPR* %2462, i32 0, i32 15
  %2464 = getelementptr inbounds %struct.Reg, %struct.Reg* %2463, i32 0, i32 0
  %RBP.i2016 = bitcast %union.anon* %2464 to i64*
  %2465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2466 = getelementptr inbounds %struct.GPR, %struct.GPR* %2465, i32 0, i32 21
  %2467 = getelementptr inbounds %struct.Reg, %struct.Reg* %2466, i32 0, i32 0
  %R10.i2017 = bitcast %union.anon* %2467 to i64*
  %2468 = load i64, i64* %RBP.i2016
  %2469 = sub i64 %2468, 268
  %2470 = load i64, i64* %PC.i2015
  %2471 = add i64 %2470, 7
  store i64 %2471, i64* %PC.i2015
  %2472 = inttoptr i64 %2469 to i32*
  %2473 = load i32, i32* %2472
  %2474 = sext i32 %2473 to i64
  store i64 %2474, i64* %R10.i2017, align 8
  store %struct.Memory* %loadMem_43a546, %struct.Memory** %MEMORY
  %loadMem_43a54d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2476 = getelementptr inbounds %struct.GPR, %struct.GPR* %2475, i32 0, i32 33
  %2477 = getelementptr inbounds %struct.Reg, %struct.Reg* %2476, i32 0, i32 0
  %PC.i2013 = bitcast %union.anon* %2477 to i64*
  %2478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2479 = getelementptr inbounds %struct.GPR, %struct.GPR* %2478, i32 0, i32 21
  %2480 = getelementptr inbounds %struct.Reg, %struct.Reg* %2479, i32 0, i32 0
  %R10.i2014 = bitcast %union.anon* %2480 to i64*
  %2481 = load i64, i64* %R10.i2014
  %2482 = load i64, i64* %PC.i2013
  %2483 = add i64 %2482, 7
  store i64 %2483, i64* %PC.i2013
  %2484 = sext i64 %2481 to i128
  %2485 = and i128 %2484, -18446744073709551616
  %2486 = zext i64 %2481 to i128
  %2487 = or i128 %2485, %2486
  %2488 = mul i128 632, %2487
  %2489 = trunc i128 %2488 to i64
  store i64 %2489, i64* %R10.i2014, align 8
  %2490 = sext i64 %2489 to i128
  %2491 = icmp ne i128 %2490, %2488
  %2492 = zext i1 %2491 to i8
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2492, i8* %2493, align 1
  %2494 = trunc i128 %2488 to i32
  %2495 = and i32 %2494, 255
  %2496 = call i32 @llvm.ctpop.i32(i32 %2495)
  %2497 = trunc i32 %2496 to i8
  %2498 = and i8 %2497, 1
  %2499 = xor i8 %2498, 1
  %2500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2499, i8* %2500, align 1
  %2501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2501, align 1
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2502, align 1
  %2503 = lshr i64 %2489, 63
  %2504 = trunc i64 %2503 to i8
  %2505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2504, i8* %2505, align 1
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2492, i8* %2506, align 1
  store %struct.Memory* %loadMem_43a54d, %struct.Memory** %MEMORY
  %loadMem_43a554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2508 = getelementptr inbounds %struct.GPR, %struct.GPR* %2507, i32 0, i32 33
  %2509 = getelementptr inbounds %struct.Reg, %struct.Reg* %2508, i32 0, i32 0
  %PC.i2011 = bitcast %union.anon* %2509 to i64*
  %2510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2511 = getelementptr inbounds %struct.GPR, %struct.GPR* %2510, i32 0, i32 17
  %2512 = getelementptr inbounds %struct.Reg, %struct.Reg* %2511, i32 0, i32 0
  %R8.i2012 = bitcast %union.anon* %2512 to i64*
  %2513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2514 = getelementptr inbounds %struct.GPR, %struct.GPR* %2513, i32 0, i32 21
  %2515 = getelementptr inbounds %struct.Reg, %struct.Reg* %2514, i32 0, i32 0
  %R10.i = bitcast %union.anon* %2515 to i64*
  %2516 = load i64, i64* %R8.i2012
  %2517 = load i64, i64* %R10.i
  %2518 = load i64, i64* %PC.i2011
  %2519 = add i64 %2518, 3
  store i64 %2519, i64* %PC.i2011
  %2520 = add i64 %2517, %2516
  store i64 %2520, i64* %R8.i2012, align 8
  %2521 = icmp ult i64 %2520, %2516
  %2522 = icmp ult i64 %2520, %2517
  %2523 = or i1 %2521, %2522
  %2524 = zext i1 %2523 to i8
  %2525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2524, i8* %2525, align 1
  %2526 = trunc i64 %2520 to i32
  %2527 = and i32 %2526, 255
  %2528 = call i32 @llvm.ctpop.i32(i32 %2527)
  %2529 = trunc i32 %2528 to i8
  %2530 = and i8 %2529, 1
  %2531 = xor i8 %2530, 1
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2531, i8* %2532, align 1
  %2533 = xor i64 %2517, %2516
  %2534 = xor i64 %2533, %2520
  %2535 = lshr i64 %2534, 4
  %2536 = trunc i64 %2535 to i8
  %2537 = and i8 %2536, 1
  %2538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2537, i8* %2538, align 1
  %2539 = icmp eq i64 %2520, 0
  %2540 = zext i1 %2539 to i8
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2540, i8* %2541, align 1
  %2542 = lshr i64 %2520, 63
  %2543 = trunc i64 %2542 to i8
  %2544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2543, i8* %2544, align 1
  %2545 = lshr i64 %2516, 63
  %2546 = lshr i64 %2517, 63
  %2547 = xor i64 %2542, %2545
  %2548 = xor i64 %2542, %2546
  %2549 = add i64 %2547, %2548
  %2550 = icmp eq i64 %2549, 2
  %2551 = zext i1 %2550 to i8
  %2552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2551, i8* %2552, align 1
  store %struct.Memory* %loadMem_43a554, %struct.Memory** %MEMORY
  %loadMem_43a557 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2554 = getelementptr inbounds %struct.GPR, %struct.GPR* %2553, i32 0, i32 33
  %2555 = getelementptr inbounds %struct.Reg, %struct.Reg* %2554, i32 0, i32 0
  %PC.i2008 = bitcast %union.anon* %2555 to i64*
  %2556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2557 = getelementptr inbounds %struct.GPR, %struct.GPR* %2556, i32 0, i32 15
  %2558 = getelementptr inbounds %struct.Reg, %struct.Reg* %2557, i32 0, i32 0
  %RBP.i2009 = bitcast %union.anon* %2558 to i64*
  %2559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2560 = getelementptr inbounds %struct.GPR, %struct.GPR* %2559, i32 0, i32 17
  %2561 = getelementptr inbounds %struct.Reg, %struct.Reg* %2560, i32 0, i32 0
  %R8.i2010 = bitcast %union.anon* %2561 to i64*
  %2562 = load i64, i64* %RBP.i2009
  %2563 = sub i64 %2562, 248
  %2564 = load i64, i64* %R8.i2010
  %2565 = load i64, i64* %PC.i2008
  %2566 = add i64 %2565, 7
  store i64 %2566, i64* %PC.i2008
  %2567 = inttoptr i64 %2563 to i64*
  store i64 %2564, i64* %2567
  store %struct.Memory* %loadMem_43a557, %struct.Memory** %MEMORY
  %loadMem_43a55e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2569 = getelementptr inbounds %struct.GPR, %struct.GPR* %2568, i32 0, i32 33
  %2570 = getelementptr inbounds %struct.Reg, %struct.Reg* %2569, i32 0, i32 0
  %PC.i2005 = bitcast %union.anon* %2570 to i64*
  %2571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2572 = getelementptr inbounds %struct.GPR, %struct.GPR* %2571, i32 0, i32 15
  %2573 = getelementptr inbounds %struct.Reg, %struct.Reg* %2572, i32 0, i32 0
  %RBP.i2006 = bitcast %union.anon* %2573 to i64*
  %2574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2575 = getelementptr inbounds %struct.GPR, %struct.GPR* %2574, i32 0, i32 17
  %2576 = getelementptr inbounds %struct.Reg, %struct.Reg* %2575, i32 0, i32 0
  %R8.i2007 = bitcast %union.anon* %2576 to i64*
  %2577 = load i64, i64* %RBP.i2006
  %2578 = sub i64 %2577, 240
  %2579 = load i64, i64* %PC.i2005
  %2580 = add i64 %2579, 7
  store i64 %2580, i64* %PC.i2005
  %2581 = inttoptr i64 %2578 to i64*
  %2582 = load i64, i64* %2581
  store i64 %2582, i64* %R8.i2007, align 8
  store %struct.Memory* %loadMem_43a55e, %struct.Memory** %MEMORY
  %loadMem_43a565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2584 = getelementptr inbounds %struct.GPR, %struct.GPR* %2583, i32 0, i32 33
  %2585 = getelementptr inbounds %struct.Reg, %struct.Reg* %2584, i32 0, i32 0
  %PC.i2004 = bitcast %union.anon* %2585 to i64*
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2587 = getelementptr inbounds %struct.GPR, %struct.GPR* %2586, i32 0, i32 17
  %2588 = getelementptr inbounds %struct.Reg, %struct.Reg* %2587, i32 0, i32 0
  %R8.i = bitcast %union.anon* %2588 to i64*
  %2589 = load i64, i64* %R8.i
  %2590 = add i64 %2589, 532
  %2591 = load i64, i64* %PC.i2004
  %2592 = add i64 %2591, 8
  store i64 %2592, i64* %PC.i2004
  %2593 = inttoptr i64 %2590 to i32*
  %2594 = load i32, i32* %2593
  %2595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2595, align 1
  %2596 = and i32 %2594, 255
  %2597 = call i32 @llvm.ctpop.i32(i32 %2596)
  %2598 = trunc i32 %2597 to i8
  %2599 = and i8 %2598, 1
  %2600 = xor i8 %2599, 1
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2600, i8* %2601, align 1
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2602, align 1
  %2603 = icmp eq i32 %2594, 0
  %2604 = zext i1 %2603 to i8
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2604, i8* %2605, align 1
  %2606 = lshr i32 %2594, 31
  %2607 = trunc i32 %2606 to i8
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2607, i8* %2608, align 1
  %2609 = lshr i32 %2594, 31
  %2610 = xor i32 %2606, %2609
  %2611 = add i32 %2610, %2609
  %2612 = icmp eq i32 %2611, 2
  %2613 = zext i1 %2612 to i8
  %2614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2613, i8* %2614, align 1
  store %struct.Memory* %loadMem_43a565, %struct.Memory** %MEMORY
  %loadMem_43a56d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2616 = getelementptr inbounds %struct.GPR, %struct.GPR* %2615, i32 0, i32 33
  %2617 = getelementptr inbounds %struct.Reg, %struct.Reg* %2616, i32 0, i32 0
  %PC.i2002 = bitcast %union.anon* %2617 to i64*
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2619 = getelementptr inbounds %struct.GPR, %struct.GPR* %2618, i32 0, i32 19
  %2620 = getelementptr inbounds %struct.Reg, %struct.Reg* %2619, i32 0, i32 0
  %2621 = bitcast %union.anon* %2620 to %struct.anon.2*
  %R9B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2621, i32 0, i32 0
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2623 = getelementptr inbounds %struct.GPR, %struct.GPR* %2622, i32 0, i32 15
  %2624 = getelementptr inbounds %struct.Reg, %struct.Reg* %2623, i32 0, i32 0
  %RBP.i2003 = bitcast %union.anon* %2624 to i64*
  %2625 = load i64, i64* %RBP.i2003
  %2626 = sub i64 %2625, 353
  %2627 = load i8, i8* %R9B.i
  %2628 = zext i8 %2627 to i64
  %2629 = load i64, i64* %PC.i2002
  %2630 = add i64 %2629, 7
  store i64 %2630, i64* %PC.i2002
  %2631 = inttoptr i64 %2626 to i8*
  store i8 %2627, i8* %2631
  store %struct.Memory* %loadMem_43a56d, %struct.Memory** %MEMORY
  %loadMem_43a574 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2633 = getelementptr inbounds %struct.GPR, %struct.GPR* %2632, i32 0, i32 33
  %2634 = getelementptr inbounds %struct.Reg, %struct.Reg* %2633, i32 0, i32 0
  %PC.i2001 = bitcast %union.anon* %2634 to i64*
  %2635 = load i64, i64* %PC.i2001
  %2636 = add i64 %2635, 29
  %2637 = load i64, i64* %PC.i2001
  %2638 = add i64 %2637, 6
  %2639 = load i64, i64* %PC.i2001
  %2640 = add i64 %2639, 6
  store i64 %2640, i64* %PC.i2001
  %2641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2642 = load i8, i8* %2641, align 1
  %2643 = icmp eq i8 %2642, 0
  %2644 = zext i1 %2643 to i8
  store i8 %2644, i8* %BRANCH_TAKEN, align 1
  %2645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2646 = select i1 %2643, i64 %2636, i64 %2638
  store i64 %2646, i64* %2645, align 8
  store %struct.Memory* %loadMem_43a574, %struct.Memory** %MEMORY
  %loadBr_43a574 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a574 = icmp eq i8 %loadBr_43a574, 1
  br i1 %cmpBr_43a574, label %block_.L_43a591, label %block_43a57a

block_43a57a:                                     ; preds = %block_.L_43a4a0
  %loadMem_43a57a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2648 = getelementptr inbounds %struct.GPR, %struct.GPR* %2647, i32 0, i32 33
  %2649 = getelementptr inbounds %struct.Reg, %struct.Reg* %2648, i32 0, i32 0
  %PC.i1998 = bitcast %union.anon* %2649 to i64*
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2651 = getelementptr inbounds %struct.GPR, %struct.GPR* %2650, i32 0, i32 1
  %2652 = getelementptr inbounds %struct.Reg, %struct.Reg* %2651, i32 0, i32 0
  %RAX.i1999 = bitcast %union.anon* %2652 to i64*
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2654 = getelementptr inbounds %struct.GPR, %struct.GPR* %2653, i32 0, i32 15
  %2655 = getelementptr inbounds %struct.Reg, %struct.Reg* %2654, i32 0, i32 0
  %RBP.i2000 = bitcast %union.anon* %2655 to i64*
  %2656 = load i64, i64* %RBP.i2000
  %2657 = sub i64 %2656, 248
  %2658 = load i64, i64* %PC.i1998
  %2659 = add i64 %2658, 7
  store i64 %2659, i64* %PC.i1998
  %2660 = inttoptr i64 %2657 to i64*
  %2661 = load i64, i64* %2660
  store i64 %2661, i64* %RAX.i1999, align 8
  store %struct.Memory* %loadMem_43a57a, %struct.Memory** %MEMORY
  %loadMem_43a581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2663 = getelementptr inbounds %struct.GPR, %struct.GPR* %2662, i32 0, i32 33
  %2664 = getelementptr inbounds %struct.Reg, %struct.Reg* %2663, i32 0, i32 0
  %PC.i1996 = bitcast %union.anon* %2664 to i64*
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2666 = getelementptr inbounds %struct.GPR, %struct.GPR* %2665, i32 0, i32 1
  %2667 = getelementptr inbounds %struct.Reg, %struct.Reg* %2666, i32 0, i32 0
  %RAX.i1997 = bitcast %union.anon* %2667 to i64*
  %2668 = load i64, i64* %RAX.i1997
  %2669 = add i64 %2668, 532
  %2670 = load i64, i64* %PC.i1996
  %2671 = add i64 %2670, 7
  store i64 %2671, i64* %PC.i1996
  %2672 = inttoptr i64 %2669 to i32*
  %2673 = load i32, i32* %2672
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2674, align 1
  %2675 = and i32 %2673, 255
  %2676 = call i32 @llvm.ctpop.i32(i32 %2675)
  %2677 = trunc i32 %2676 to i8
  %2678 = and i8 %2677, 1
  %2679 = xor i8 %2678, 1
  %2680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2679, i8* %2680, align 1
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2681, align 1
  %2682 = icmp eq i32 %2673, 0
  %2683 = zext i1 %2682 to i8
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2683, i8* %2684, align 1
  %2685 = lshr i32 %2673, 31
  %2686 = trunc i32 %2685 to i8
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2686, i8* %2687, align 1
  %2688 = lshr i32 %2673, 31
  %2689 = xor i32 %2685, %2688
  %2690 = add i32 %2689, %2688
  %2691 = icmp eq i32 %2690, 2
  %2692 = zext i1 %2691 to i8
  %2693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2692, i8* %2693, align 1
  store %struct.Memory* %loadMem_43a581, %struct.Memory** %MEMORY
  %loadMem_43a588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2695 = getelementptr inbounds %struct.GPR, %struct.GPR* %2694, i32 0, i32 33
  %2696 = getelementptr inbounds %struct.Reg, %struct.Reg* %2695, i32 0, i32 0
  %PC.i1994 = bitcast %union.anon* %2696 to i64*
  %2697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2698 = getelementptr inbounds %struct.GPR, %struct.GPR* %2697, i32 0, i32 5
  %2699 = getelementptr inbounds %struct.Reg, %struct.Reg* %2698, i32 0, i32 0
  %2700 = bitcast %union.anon* %2699 to %struct.anon.2*
  %CL.i1995 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2700, i32 0, i32 0
  %2701 = load i64, i64* %PC.i1994
  %2702 = add i64 %2701, 3
  store i64 %2702, i64* %PC.i1994
  %2703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2704 = load i8, i8* %2703, align 1
  %2705 = icmp eq i8 %2704, 0
  %2706 = zext i1 %2705 to i8
  store i8 %2706, i8* %CL.i1995, align 1
  store %struct.Memory* %loadMem_43a588, %struct.Memory** %MEMORY
  %loadMem_43a58b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2708 = getelementptr inbounds %struct.GPR, %struct.GPR* %2707, i32 0, i32 33
  %2709 = getelementptr inbounds %struct.Reg, %struct.Reg* %2708, i32 0, i32 0
  %PC.i1991 = bitcast %union.anon* %2709 to i64*
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2711 = getelementptr inbounds %struct.GPR, %struct.GPR* %2710, i32 0, i32 5
  %2712 = getelementptr inbounds %struct.Reg, %struct.Reg* %2711, i32 0, i32 0
  %2713 = bitcast %union.anon* %2712 to %struct.anon.2*
  %CL.i1992 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2713, i32 0, i32 0
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2715 = getelementptr inbounds %struct.GPR, %struct.GPR* %2714, i32 0, i32 15
  %2716 = getelementptr inbounds %struct.Reg, %struct.Reg* %2715, i32 0, i32 0
  %RBP.i1993 = bitcast %union.anon* %2716 to i64*
  %2717 = load i64, i64* %RBP.i1993
  %2718 = sub i64 %2717, 353
  %2719 = load i8, i8* %CL.i1992
  %2720 = zext i8 %2719 to i64
  %2721 = load i64, i64* %PC.i1991
  %2722 = add i64 %2721, 6
  store i64 %2722, i64* %PC.i1991
  %2723 = inttoptr i64 %2718 to i8*
  store i8 %2719, i8* %2723
  store %struct.Memory* %loadMem_43a58b, %struct.Memory** %MEMORY
  br label %block_.L_43a591

block_.L_43a591:                                  ; preds = %block_43a57a, %block_.L_43a4a0
  %loadMem_43a591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2725 = getelementptr inbounds %struct.GPR, %struct.GPR* %2724, i32 0, i32 33
  %2726 = getelementptr inbounds %struct.Reg, %struct.Reg* %2725, i32 0, i32 0
  %PC.i1988 = bitcast %union.anon* %2726 to i64*
  %2727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2728 = getelementptr inbounds %struct.GPR, %struct.GPR* %2727, i32 0, i32 1
  %2729 = getelementptr inbounds %struct.Reg, %struct.Reg* %2728, i32 0, i32 0
  %2730 = bitcast %union.anon* %2729 to %struct.anon.2*
  %AL.i1989 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2730, i32 0, i32 0
  %2731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2732 = getelementptr inbounds %struct.GPR, %struct.GPR* %2731, i32 0, i32 15
  %2733 = getelementptr inbounds %struct.Reg, %struct.Reg* %2732, i32 0, i32 0
  %RBP.i1990 = bitcast %union.anon* %2733 to i64*
  %2734 = load i64, i64* %RBP.i1990
  %2735 = sub i64 %2734, 353
  %2736 = load i64, i64* %PC.i1988
  %2737 = add i64 %2736, 6
  store i64 %2737, i64* %PC.i1988
  %2738 = inttoptr i64 %2735 to i8*
  %2739 = load i8, i8* %2738
  store i8 %2739, i8* %AL.i1989, align 1
  store %struct.Memory* %loadMem_43a591, %struct.Memory** %MEMORY
  %loadMem_43a597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2741 = getelementptr inbounds %struct.GPR, %struct.GPR* %2740, i32 0, i32 33
  %2742 = getelementptr inbounds %struct.Reg, %struct.Reg* %2741, i32 0, i32 0
  %PC.i1986 = bitcast %union.anon* %2742 to i64*
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2744 = getelementptr inbounds %struct.GPR, %struct.GPR* %2743, i32 0, i32 1
  %2745 = getelementptr inbounds %struct.Reg, %struct.Reg* %2744, i32 0, i32 0
  %2746 = bitcast %union.anon* %2745 to %struct.anon.2*
  %AL.i1987 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2746, i32 0, i32 0
  %2747 = load i8, i8* %AL.i1987
  %2748 = zext i8 %2747 to i64
  %2749 = load i64, i64* %PC.i1986
  %2750 = add i64 %2749, 2
  store i64 %2750, i64* %PC.i1986
  %2751 = and i64 1, %2748
  %2752 = trunc i64 %2751 to i8
  store i8 %2752, i8* %AL.i1987, align 1
  %2753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2753, align 1
  %2754 = trunc i64 %2751 to i32
  %2755 = and i32 %2754, 255
  %2756 = call i32 @llvm.ctpop.i32(i32 %2755)
  %2757 = trunc i32 %2756 to i8
  %2758 = and i8 %2757, 1
  %2759 = xor i8 %2758, 1
  %2760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2759, i8* %2760, align 1
  %2761 = icmp eq i8 %2752, 0
  %2762 = zext i1 %2761 to i8
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2762, i8* %2763, align 1
  %2764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2764, align 1
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2765, align 1
  %2766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2766, align 1
  store %struct.Memory* %loadMem_43a597, %struct.Memory** %MEMORY
  %loadMem_43a599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2768 = getelementptr inbounds %struct.GPR, %struct.GPR* %2767, i32 0, i32 33
  %2769 = getelementptr inbounds %struct.Reg, %struct.Reg* %2768, i32 0, i32 0
  %PC.i1983 = bitcast %union.anon* %2769 to i64*
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2771 = getelementptr inbounds %struct.GPR, %struct.GPR* %2770, i32 0, i32 1
  %2772 = getelementptr inbounds %struct.Reg, %struct.Reg* %2771, i32 0, i32 0
  %2773 = bitcast %union.anon* %2772 to %struct.anon.2*
  %AL.i1984 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2773, i32 0, i32 0
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2775 = getelementptr inbounds %struct.GPR, %struct.GPR* %2774, i32 0, i32 5
  %2776 = getelementptr inbounds %struct.Reg, %struct.Reg* %2775, i32 0, i32 0
  %RCX.i1985 = bitcast %union.anon* %2776 to i64*
  %2777 = load i8, i8* %AL.i1984
  %2778 = zext i8 %2777 to i64
  %2779 = load i64, i64* %PC.i1983
  %2780 = add i64 %2779, 3
  store i64 %2780, i64* %PC.i1983
  %2781 = and i64 %2778, 255
  store i64 %2781, i64* %RCX.i1985, align 8
  store %struct.Memory* %loadMem_43a599, %struct.Memory** %MEMORY
  %loadMem_43a59c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2783 = getelementptr inbounds %struct.GPR, %struct.GPR* %2782, i32 0, i32 33
  %2784 = getelementptr inbounds %struct.Reg, %struct.Reg* %2783, i32 0, i32 0
  %PC.i1980 = bitcast %union.anon* %2784 to i64*
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2786 = getelementptr inbounds %struct.GPR, %struct.GPR* %2785, i32 0, i32 1
  %2787 = getelementptr inbounds %struct.Reg, %struct.Reg* %2786, i32 0, i32 0
  %2788 = bitcast %union.anon* %2787 to %struct.anon.2*
  %AL.i1981 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2788, i32 0, i32 0
  %2789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2790 = getelementptr inbounds %struct.GPR, %struct.GPR* %2789, i32 0, i32 5
  %2791 = getelementptr inbounds %struct.Reg, %struct.Reg* %2790, i32 0, i32 0
  %2792 = bitcast %union.anon* %2791 to %struct.anon.2*
  %CL.i1982 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2792, i32 0, i32 0
  %2793 = load i8, i8* %CL.i1982
  %2794 = zext i8 %2793 to i64
  %2795 = load i64, i64* %PC.i1980
  %2796 = add i64 %2795, 2
  store i64 %2796, i64* %PC.i1980
  store i8 %2793, i8* %AL.i1981, align 1
  store %struct.Memory* %loadMem_43a59c, %struct.Memory** %MEMORY
  %loadMem_43a59e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2798 = getelementptr inbounds %struct.GPR, %struct.GPR* %2797, i32 0, i32 33
  %2799 = getelementptr inbounds %struct.Reg, %struct.Reg* %2798, i32 0, i32 0
  %PC.i1979 = bitcast %union.anon* %2799 to i64*
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2801 = getelementptr inbounds %struct.GPR, %struct.GPR* %2800, i32 0, i32 1
  %2802 = getelementptr inbounds %struct.Reg, %struct.Reg* %2801, i32 0, i32 0
  %2803 = bitcast %union.anon* %2802 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2803, i32 0, i32 0
  %2804 = load i8, i8* %AL.i
  %2805 = zext i8 %2804 to i64
  %2806 = load i64, i64* %PC.i1979
  %2807 = add i64 %2806, 7
  store i64 %2807, i64* %PC.i1979
  store i8 %2804, i8* getelementptr inbounds (%G_0x723694_type, %G_0x723694_type* @G_0x723694, i32 0, i32 0, i32 0)
  store %struct.Memory* %loadMem_43a59e, %struct.Memory** %MEMORY
  %loadMem_43a5a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2809 = getelementptr inbounds %struct.GPR, %struct.GPR* %2808, i32 0, i32 33
  %2810 = getelementptr inbounds %struct.Reg, %struct.Reg* %2809, i32 0, i32 0
  %PC.i1977 = bitcast %union.anon* %2810 to i64*
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2812 = getelementptr inbounds %struct.GPR, %struct.GPR* %2811, i32 0, i32 15
  %2813 = getelementptr inbounds %struct.Reg, %struct.Reg* %2812, i32 0, i32 0
  %RBP.i1978 = bitcast %union.anon* %2813 to i64*
  %2814 = load i64, i64* %RBP.i1978
  %2815 = sub i64 %2814, 68
  %2816 = load i64, i64* %PC.i1977
  %2817 = add i64 %2816, 4
  store i64 %2817, i64* %PC.i1977
  %2818 = inttoptr i64 %2815 to i32*
  %2819 = load i32, i32* %2818
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2820, align 1
  %2821 = and i32 %2819, 255
  %2822 = call i32 @llvm.ctpop.i32(i32 %2821)
  %2823 = trunc i32 %2822 to i8
  %2824 = and i8 %2823, 1
  %2825 = xor i8 %2824, 1
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2825, i8* %2826, align 1
  %2827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2827, align 1
  %2828 = icmp eq i32 %2819, 0
  %2829 = zext i1 %2828 to i8
  %2830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2829, i8* %2830, align 1
  %2831 = lshr i32 %2819, 31
  %2832 = trunc i32 %2831 to i8
  %2833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2832, i8* %2833, align 1
  %2834 = lshr i32 %2819, 31
  %2835 = xor i32 %2831, %2834
  %2836 = add i32 %2835, %2834
  %2837 = icmp eq i32 %2836, 2
  %2838 = zext i1 %2837 to i8
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2838, i8* %2839, align 1
  store %struct.Memory* %loadMem_43a5a5, %struct.Memory** %MEMORY
  %loadMem_43a5a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2841 = getelementptr inbounds %struct.GPR, %struct.GPR* %2840, i32 0, i32 33
  %2842 = getelementptr inbounds %struct.Reg, %struct.Reg* %2841, i32 0, i32 0
  %PC.i1976 = bitcast %union.anon* %2842 to i64*
  %2843 = load i64, i64* %PC.i1976
  %2844 = add i64 %2843, 135
  %2845 = load i64, i64* %PC.i1976
  %2846 = add i64 %2845, 6
  %2847 = load i64, i64* %PC.i1976
  %2848 = add i64 %2847, 6
  store i64 %2848, i64* %PC.i1976
  %2849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2850 = load i8, i8* %2849, align 1
  store i8 %2850, i8* %BRANCH_TAKEN, align 1
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2852 = icmp ne i8 %2850, 0
  %2853 = select i1 %2852, i64 %2844, i64 %2846
  store i64 %2853, i64* %2851, align 8
  store %struct.Memory* %loadMem_43a5a9, %struct.Memory** %MEMORY
  %loadBr_43a5a9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a5a9 = icmp eq i8 %loadBr_43a5a9, 1
  br i1 %cmpBr_43a5a9, label %block_.L_43a630, label %block_43a5af

block_43a5af:                                     ; preds = %block_.L_43a591
  %loadMem_43a5af = load %struct.Memory*, %struct.Memory** %MEMORY
  %2854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2855 = getelementptr inbounds %struct.GPR, %struct.GPR* %2854, i32 0, i32 33
  %2856 = getelementptr inbounds %struct.Reg, %struct.Reg* %2855, i32 0, i32 0
  %PC.i1974 = bitcast %union.anon* %2856 to i64*
  %2857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2858 = getelementptr inbounds %struct.GPR, %struct.GPR* %2857, i32 0, i32 15
  %2859 = getelementptr inbounds %struct.Reg, %struct.Reg* %2858, i32 0, i32 0
  %RBP.i1975 = bitcast %union.anon* %2859 to i64*
  %2860 = load i64, i64* %RBP.i1975
  %2861 = sub i64 %2860, 184
  %2862 = load i64, i64* %PC.i1974
  %2863 = add i64 %2862, 7
  store i64 %2863, i64* %PC.i1974
  %2864 = inttoptr i64 %2861 to i32*
  %2865 = load i32, i32* %2864
  %2866 = sub i32 %2865, 8
  %2867 = icmp ult i32 %2865, 8
  %2868 = zext i1 %2867 to i8
  %2869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2868, i8* %2869, align 1
  %2870 = and i32 %2866, 255
  %2871 = call i32 @llvm.ctpop.i32(i32 %2870)
  %2872 = trunc i32 %2871 to i8
  %2873 = and i8 %2872, 1
  %2874 = xor i8 %2873, 1
  %2875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2874, i8* %2875, align 1
  %2876 = xor i32 %2865, 8
  %2877 = xor i32 %2876, %2866
  %2878 = lshr i32 %2877, 4
  %2879 = trunc i32 %2878 to i8
  %2880 = and i8 %2879, 1
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2880, i8* %2881, align 1
  %2882 = icmp eq i32 %2866, 0
  %2883 = zext i1 %2882 to i8
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2883, i8* %2884, align 1
  %2885 = lshr i32 %2866, 31
  %2886 = trunc i32 %2885 to i8
  %2887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2886, i8* %2887, align 1
  %2888 = lshr i32 %2865, 31
  %2889 = xor i32 %2885, %2888
  %2890 = add i32 %2889, %2888
  %2891 = icmp eq i32 %2890, 2
  %2892 = zext i1 %2891 to i8
  %2893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2892, i8* %2893, align 1
  store %struct.Memory* %loadMem_43a5af, %struct.Memory** %MEMORY
  %loadMem_43a5b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2895 = getelementptr inbounds %struct.GPR, %struct.GPR* %2894, i32 0, i32 33
  %2896 = getelementptr inbounds %struct.Reg, %struct.Reg* %2895, i32 0, i32 0
  %PC.i1973 = bitcast %union.anon* %2896 to i64*
  %2897 = load i64, i64* %PC.i1973
  %2898 = add i64 %2897, 122
  %2899 = load i64, i64* %PC.i1973
  %2900 = add i64 %2899, 6
  %2901 = load i64, i64* %PC.i1973
  %2902 = add i64 %2901, 6
  store i64 %2902, i64* %PC.i1973
  %2903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2904 = load i8, i8* %2903, align 1
  %2905 = icmp eq i8 %2904, 0
  %2906 = zext i1 %2905 to i8
  store i8 %2906, i8* %BRANCH_TAKEN, align 1
  %2907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2908 = select i1 %2905, i64 %2898, i64 %2900
  store i64 %2908, i64* %2907, align 8
  store %struct.Memory* %loadMem_43a5b6, %struct.Memory** %MEMORY
  %loadBr_43a5b6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a5b6 = icmp eq i8 %loadBr_43a5b6, 1
  br i1 %cmpBr_43a5b6, label %block_.L_43a630, label %block_43a5bc

block_43a5bc:                                     ; preds = %block_43a5af
  %loadMem_43a5bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2910 = getelementptr inbounds %struct.GPR, %struct.GPR* %2909, i32 0, i32 33
  %2911 = getelementptr inbounds %struct.Reg, %struct.Reg* %2910, i32 0, i32 0
  %PC.i1970 = bitcast %union.anon* %2911 to i64*
  %2912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2913 = getelementptr inbounds %struct.GPR, %struct.GPR* %2912, i32 0, i32 1
  %2914 = getelementptr inbounds %struct.Reg, %struct.Reg* %2913, i32 0, i32 0
  %RAX.i1971 = bitcast %union.anon* %2914 to i64*
  %2915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2916 = getelementptr inbounds %struct.GPR, %struct.GPR* %2915, i32 0, i32 15
  %2917 = getelementptr inbounds %struct.Reg, %struct.Reg* %2916, i32 0, i32 0
  %RBP.i1972 = bitcast %union.anon* %2917 to i64*
  %2918 = load i64, i64* %RBP.i1972
  %2919 = sub i64 %2918, 240
  %2920 = load i64, i64* %PC.i1970
  %2921 = add i64 %2920, 7
  store i64 %2921, i64* %PC.i1970
  %2922 = inttoptr i64 %2919 to i64*
  %2923 = load i64, i64* %2922
  store i64 %2923, i64* %RAX.i1971, align 8
  store %struct.Memory* %loadMem_43a5bc, %struct.Memory** %MEMORY
  %loadMem_43a5c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2925 = getelementptr inbounds %struct.GPR, %struct.GPR* %2924, i32 0, i32 33
  %2926 = getelementptr inbounds %struct.Reg, %struct.Reg* %2925, i32 0, i32 0
  %PC.i1968 = bitcast %union.anon* %2926 to i64*
  %2927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2928 = getelementptr inbounds %struct.GPR, %struct.GPR* %2927, i32 0, i32 1
  %2929 = getelementptr inbounds %struct.Reg, %struct.Reg* %2928, i32 0, i32 0
  %RAX.i1969 = bitcast %union.anon* %2929 to i64*
  %2930 = load i64, i64* %RAX.i1969
  %2931 = add i64 %2930, 532
  %2932 = load i64, i64* %PC.i1968
  %2933 = add i64 %2932, 7
  store i64 %2933, i64* %PC.i1968
  %2934 = inttoptr i64 %2931 to i32*
  %2935 = load i32, i32* %2934
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2936, align 1
  %2937 = and i32 %2935, 255
  %2938 = call i32 @llvm.ctpop.i32(i32 %2937)
  %2939 = trunc i32 %2938 to i8
  %2940 = and i8 %2939, 1
  %2941 = xor i8 %2940, 1
  %2942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2941, i8* %2942, align 1
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2943, align 1
  %2944 = icmp eq i32 %2935, 0
  %2945 = zext i1 %2944 to i8
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2945, i8* %2946, align 1
  %2947 = lshr i32 %2935, 31
  %2948 = trunc i32 %2947 to i8
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2948, i8* %2949, align 1
  %2950 = lshr i32 %2935, 31
  %2951 = xor i32 %2947, %2950
  %2952 = add i32 %2951, %2950
  %2953 = icmp eq i32 %2952, 2
  %2954 = zext i1 %2953 to i8
  %2955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2954, i8* %2955, align 1
  store %struct.Memory* %loadMem_43a5c3, %struct.Memory** %MEMORY
  %loadMem_43a5ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2957 = getelementptr inbounds %struct.GPR, %struct.GPR* %2956, i32 0, i32 33
  %2958 = getelementptr inbounds %struct.Reg, %struct.Reg* %2957, i32 0, i32 0
  %PC.i1967 = bitcast %union.anon* %2958 to i64*
  %2959 = load i64, i64* %PC.i1967
  %2960 = add i64 %2959, 43
  %2961 = load i64, i64* %PC.i1967
  %2962 = add i64 %2961, 6
  %2963 = load i64, i64* %PC.i1967
  %2964 = add i64 %2963, 6
  store i64 %2964, i64* %PC.i1967
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2966 = load i8, i8* %2965, align 1
  store i8 %2966, i8* %BRANCH_TAKEN, align 1
  %2967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2968 = icmp ne i8 %2966, 0
  %2969 = select i1 %2968, i64 %2960, i64 %2962
  store i64 %2969, i64* %2967, align 8
  store %struct.Memory* %loadMem_43a5ca, %struct.Memory** %MEMORY
  %loadBr_43a5ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a5ca = icmp eq i8 %loadBr_43a5ca, 1
  br i1 %cmpBr_43a5ca, label %block_.L_43a5f5, label %block_43a5d0

block_43a5d0:                                     ; preds = %block_43a5bc
  %loadMem_43a5d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2971 = getelementptr inbounds %struct.GPR, %struct.GPR* %2970, i32 0, i32 33
  %2972 = getelementptr inbounds %struct.Reg, %struct.Reg* %2971, i32 0, i32 0
  %PC.i1964 = bitcast %union.anon* %2972 to i64*
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2974 = getelementptr inbounds %struct.GPR, %struct.GPR* %2973, i32 0, i32 1
  %2975 = getelementptr inbounds %struct.Reg, %struct.Reg* %2974, i32 0, i32 0
  %RAX.i1965 = bitcast %union.anon* %2975 to i64*
  %2976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2977 = getelementptr inbounds %struct.GPR, %struct.GPR* %2976, i32 0, i32 15
  %2978 = getelementptr inbounds %struct.Reg, %struct.Reg* %2977, i32 0, i32 0
  %RBP.i1966 = bitcast %union.anon* %2978 to i64*
  %2979 = load i64, i64* %RBP.i1966
  %2980 = sub i64 %2979, 248
  %2981 = load i64, i64* %PC.i1964
  %2982 = add i64 %2981, 7
  store i64 %2982, i64* %PC.i1964
  %2983 = inttoptr i64 %2980 to i64*
  %2984 = load i64, i64* %2983
  store i64 %2984, i64* %RAX.i1965, align 8
  store %struct.Memory* %loadMem_43a5d0, %struct.Memory** %MEMORY
  %loadMem_43a5d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2986 = getelementptr inbounds %struct.GPR, %struct.GPR* %2985, i32 0, i32 33
  %2987 = getelementptr inbounds %struct.Reg, %struct.Reg* %2986, i32 0, i32 0
  %PC.i1962 = bitcast %union.anon* %2987 to i64*
  %2988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2989 = getelementptr inbounds %struct.GPR, %struct.GPR* %2988, i32 0, i32 1
  %2990 = getelementptr inbounds %struct.Reg, %struct.Reg* %2989, i32 0, i32 0
  %RAX.i1963 = bitcast %union.anon* %2990 to i64*
  %2991 = load i64, i64* %RAX.i1963
  %2992 = add i64 %2991, 532
  %2993 = load i64, i64* %PC.i1962
  %2994 = add i64 %2993, 7
  store i64 %2994, i64* %PC.i1962
  %2995 = inttoptr i64 %2992 to i32*
  %2996 = load i32, i32* %2995
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2997, align 1
  %2998 = and i32 %2996, 255
  %2999 = call i32 @llvm.ctpop.i32(i32 %2998)
  %3000 = trunc i32 %2999 to i8
  %3001 = and i8 %3000, 1
  %3002 = xor i8 %3001, 1
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3002, i8* %3003, align 1
  %3004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3004, align 1
  %3005 = icmp eq i32 %2996, 0
  %3006 = zext i1 %3005 to i8
  %3007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3006, i8* %3007, align 1
  %3008 = lshr i32 %2996, 31
  %3009 = trunc i32 %3008 to i8
  %3010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3009, i8* %3010, align 1
  %3011 = lshr i32 %2996, 31
  %3012 = xor i32 %3008, %3011
  %3013 = add i32 %3012, %3011
  %3014 = icmp eq i32 %3013, 2
  %3015 = zext i1 %3014 to i8
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3015, i8* %3016, align 1
  store %struct.Memory* %loadMem_43a5d7, %struct.Memory** %MEMORY
  %loadMem_43a5de = load %struct.Memory*, %struct.Memory** %MEMORY
  %3017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3018 = getelementptr inbounds %struct.GPR, %struct.GPR* %3017, i32 0, i32 33
  %3019 = getelementptr inbounds %struct.Reg, %struct.Reg* %3018, i32 0, i32 0
  %PC.i1961 = bitcast %union.anon* %3019 to i64*
  %3020 = load i64, i64* %PC.i1961
  %3021 = add i64 %3020, 23
  %3022 = load i64, i64* %PC.i1961
  %3023 = add i64 %3022, 6
  %3024 = load i64, i64* %PC.i1961
  %3025 = add i64 %3024, 6
  store i64 %3025, i64* %PC.i1961
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3027 = load i8, i8* %3026, align 1
  %3028 = icmp eq i8 %3027, 0
  %3029 = zext i1 %3028 to i8
  store i8 %3029, i8* %BRANCH_TAKEN, align 1
  %3030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3031 = select i1 %3028, i64 %3021, i64 %3023
  store i64 %3031, i64* %3030, align 8
  store %struct.Memory* %loadMem_43a5de, %struct.Memory** %MEMORY
  %loadBr_43a5de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a5de = icmp eq i8 %loadBr_43a5de, 1
  br i1 %cmpBr_43a5de, label %block_.L_43a5f5, label %block_43a5e4

block_43a5e4:                                     ; preds = %block_43a5d0
  %loadMem_43a5e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3033 = getelementptr inbounds %struct.GPR, %struct.GPR* %3032, i32 0, i32 33
  %3034 = getelementptr inbounds %struct.Reg, %struct.Reg* %3033, i32 0, i32 0
  %PC.i1958 = bitcast %union.anon* %3034 to i64*
  %3035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3036 = getelementptr inbounds %struct.GPR, %struct.GPR* %3035, i32 0, i32 1
  %3037 = getelementptr inbounds %struct.Reg, %struct.Reg* %3036, i32 0, i32 0
  %RAX.i1959 = bitcast %union.anon* %3037 to i64*
  %3038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3039 = getelementptr inbounds %struct.GPR, %struct.GPR* %3038, i32 0, i32 15
  %3040 = getelementptr inbounds %struct.Reg, %struct.Reg* %3039, i32 0, i32 0
  %RBP.i1960 = bitcast %union.anon* %3040 to i64*
  %3041 = load i64, i64* %RBP.i1960
  %3042 = sub i64 %3041, 76
  %3043 = load i64, i64* %PC.i1958
  %3044 = add i64 %3043, 3
  store i64 %3044, i64* %PC.i1958
  %3045 = inttoptr i64 %3042 to i32*
  %3046 = load i32, i32* %3045
  %3047 = zext i32 %3046 to i64
  store i64 %3047, i64* %RAX.i1959, align 8
  store %struct.Memory* %loadMem_43a5e4, %struct.Memory** %MEMORY
  %loadMem_43a5e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3049 = getelementptr inbounds %struct.GPR, %struct.GPR* %3048, i32 0, i32 33
  %3050 = getelementptr inbounds %struct.Reg, %struct.Reg* %3049, i32 0, i32 0
  %PC.i1956 = bitcast %union.anon* %3050 to i64*
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3052 = getelementptr inbounds %struct.GPR, %struct.GPR* %3051, i32 0, i32 1
  %3053 = getelementptr inbounds %struct.Reg, %struct.Reg* %3052, i32 0, i32 0
  %RAX.i1957 = bitcast %union.anon* %3053 to i64*
  %3054 = load i64, i64* %RAX.i1957
  %3055 = load i64, i64* %PC.i1956
  %3056 = add i64 %3055, 2
  store i64 %3056, i64* %PC.i1956
  %3057 = trunc i64 %3054 to i32
  %3058 = shl i32 %3057, 1
  %3059 = icmp slt i32 %3057, 0
  %3060 = icmp slt i32 %3058, 0
  %3061 = xor i1 %3059, %3060
  %3062 = zext i32 %3058 to i64
  store i64 %3062, i64* %RAX.i1957, align 8
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3064 = zext i1 %3059 to i8
  store i8 %3064, i8* %3063, align 1
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3066 = and i32 %3058, 254
  %3067 = call i32 @llvm.ctpop.i32(i32 %3066)
  %3068 = trunc i32 %3067 to i8
  %3069 = and i8 %3068, 1
  %3070 = xor i8 %3069, 1
  store i8 %3070, i8* %3065, align 1
  %3071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3071, align 1
  %3072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3073 = icmp eq i32 %3058, 0
  %3074 = zext i1 %3073 to i8
  store i8 %3074, i8* %3072, align 1
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3076 = lshr i32 %3058, 31
  %3077 = trunc i32 %3076 to i8
  store i8 %3077, i8* %3075, align 1
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3079 = zext i1 %3061 to i8
  store i8 %3079, i8* %3078, align 1
  store %struct.Memory* %loadMem_43a5e7, %struct.Memory** %MEMORY
  %loadMem_43a5ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3081 = getelementptr inbounds %struct.GPR, %struct.GPR* %3080, i32 0, i32 33
  %3082 = getelementptr inbounds %struct.Reg, %struct.Reg* %3081, i32 0, i32 0
  %PC.i1953 = bitcast %union.anon* %3082 to i64*
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3084 = getelementptr inbounds %struct.GPR, %struct.GPR* %3083, i32 0, i32 1
  %3085 = getelementptr inbounds %struct.Reg, %struct.Reg* %3084, i32 0, i32 0
  %EAX.i1954 = bitcast %union.anon* %3085 to i32*
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3087 = getelementptr inbounds %struct.GPR, %struct.GPR* %3086, i32 0, i32 15
  %3088 = getelementptr inbounds %struct.Reg, %struct.Reg* %3087, i32 0, i32 0
  %RBP.i1955 = bitcast %union.anon* %3088 to i64*
  %3089 = load i64, i64* %RBP.i1955
  %3090 = sub i64 %3089, 360
  %3091 = load i32, i32* %EAX.i1954
  %3092 = zext i32 %3091 to i64
  %3093 = load i64, i64* %PC.i1953
  %3094 = add i64 %3093, 6
  store i64 %3094, i64* %PC.i1953
  %3095 = inttoptr i64 %3090 to i32*
  store i32 %3091, i32* %3095
  store %struct.Memory* %loadMem_43a5ea, %struct.Memory** %MEMORY
  %loadMem_43a5f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3097 = getelementptr inbounds %struct.GPR, %struct.GPR* %3096, i32 0, i32 33
  %3098 = getelementptr inbounds %struct.Reg, %struct.Reg* %3097, i32 0, i32 0
  %PC.i1952 = bitcast %union.anon* %3098 to i64*
  %3099 = load i64, i64* %PC.i1952
  %3100 = add i64 %3099, 47
  %3101 = load i64, i64* %PC.i1952
  %3102 = add i64 %3101, 5
  store i64 %3102, i64* %PC.i1952
  %3103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3100, i64* %3103, align 8
  store %struct.Memory* %loadMem_43a5f0, %struct.Memory** %MEMORY
  br label %block_.L_43a61f

block_.L_43a5f5:                                  ; preds = %block_43a5d0, %block_43a5bc
  %loadMem_43a5f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3105 = getelementptr inbounds %struct.GPR, %struct.GPR* %3104, i32 0, i32 33
  %3106 = getelementptr inbounds %struct.Reg, %struct.Reg* %3105, i32 0, i32 0
  %PC.i1950 = bitcast %union.anon* %3106 to i64*
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3108 = getelementptr inbounds %struct.GPR, %struct.GPR* %3107, i32 0, i32 1
  %3109 = getelementptr inbounds %struct.Reg, %struct.Reg* %3108, i32 0, i32 0
  %RAX.i1951 = bitcast %union.anon* %3109 to i64*
  %3110 = load i64, i64* %PC.i1950
  %3111 = add i64 %3110, 5
  store i64 %3111, i64* %PC.i1950
  store i64 2, i64* %RAX.i1951, align 8
  store %struct.Memory* %loadMem_43a5f5, %struct.Memory** %MEMORY
  %loadMem_43a5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3113 = getelementptr inbounds %struct.GPR, %struct.GPR* %3112, i32 0, i32 33
  %3114 = getelementptr inbounds %struct.Reg, %struct.Reg* %3113, i32 0, i32 0
  %PC.i1947 = bitcast %union.anon* %3114 to i64*
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3116 = getelementptr inbounds %struct.GPR, %struct.GPR* %3115, i32 0, i32 5
  %3117 = getelementptr inbounds %struct.Reg, %struct.Reg* %3116, i32 0, i32 0
  %RCX.i1948 = bitcast %union.anon* %3117 to i64*
  %3118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3119 = getelementptr inbounds %struct.GPR, %struct.GPR* %3118, i32 0, i32 15
  %3120 = getelementptr inbounds %struct.Reg, %struct.Reg* %3119, i32 0, i32 0
  %RBP.i1949 = bitcast %union.anon* %3120 to i64*
  %3121 = load i64, i64* %RBP.i1949
  %3122 = sub i64 %3121, 76
  %3123 = load i64, i64* %PC.i1947
  %3124 = add i64 %3123, 3
  store i64 %3124, i64* %PC.i1947
  %3125 = inttoptr i64 %3122 to i32*
  %3126 = load i32, i32* %3125
  %3127 = zext i32 %3126 to i64
  store i64 %3127, i64* %RCX.i1948, align 8
  store %struct.Memory* %loadMem_43a5fa, %struct.Memory** %MEMORY
  %loadMem_43a5fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3129 = getelementptr inbounds %struct.GPR, %struct.GPR* %3128, i32 0, i32 33
  %3130 = getelementptr inbounds %struct.Reg, %struct.Reg* %3129, i32 0, i32 0
  %PC.i1945 = bitcast %union.anon* %3130 to i64*
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3132 = getelementptr inbounds %struct.GPR, %struct.GPR* %3131, i32 0, i32 5
  %3133 = getelementptr inbounds %struct.Reg, %struct.Reg* %3132, i32 0, i32 0
  %RCX.i1946 = bitcast %union.anon* %3133 to i64*
  %3134 = load i64, i64* %RCX.i1946
  %3135 = load i64, i64* %PC.i1945
  %3136 = add i64 %3135, 2
  store i64 %3136, i64* %PC.i1945
  %3137 = shl i64 %3134, 32
  %3138 = ashr i64 %3137, 33
  %3139 = trunc i64 %3134 to i8
  %3140 = and i8 %3139, 1
  %3141 = trunc i64 %3138 to i32
  %3142 = and i64 %3138, 4294967295
  store i64 %3142, i64* %RCX.i1946, align 8
  %3143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3140, i8* %3143, align 1
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3145 = and i32 %3141, 255
  %3146 = call i32 @llvm.ctpop.i32(i32 %3145)
  %3147 = trunc i32 %3146 to i8
  %3148 = and i8 %3147, 1
  %3149 = xor i8 %3148, 1
  store i8 %3149, i8* %3144, align 1
  %3150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3150, align 1
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3152 = icmp eq i32 %3141, 0
  %3153 = zext i1 %3152 to i8
  store i8 %3153, i8* %3151, align 1
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3155 = lshr i32 %3141, 31
  %3156 = trunc i32 %3155 to i8
  store i8 %3156, i8* %3154, align 1
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3157, align 1
  store %struct.Memory* %loadMem_43a5fd, %struct.Memory** %MEMORY
  %loadMem_43a600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3159 = getelementptr inbounds %struct.GPR, %struct.GPR* %3158, i32 0, i32 33
  %3160 = getelementptr inbounds %struct.Reg, %struct.Reg* %3159, i32 0, i32 0
  %PC.i1943 = bitcast %union.anon* %3160 to i64*
  %3161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3162 = getelementptr inbounds %struct.GPR, %struct.GPR* %3161, i32 0, i32 5
  %3163 = getelementptr inbounds %struct.Reg, %struct.Reg* %3162, i32 0, i32 0
  %RCX.i1944 = bitcast %union.anon* %3163 to i64*
  %3164 = load i64, i64* %RCX.i1944
  %3165 = load i64, i64* %PC.i1943
  %3166 = add i64 %3165, 3
  store i64 %3166, i64* %PC.i1943
  %3167 = and i64 %3164, 4294967295
  %3168 = shl i64 %3167, 1
  %3169 = trunc i64 %3168 to i32
  %3170 = icmp slt i32 %3169, 0
  %3171 = shl i32 %3169, 1
  %3172 = zext i32 %3171 to i64
  store i64 %3172, i64* %RCX.i1944, align 8
  %3173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3174 = zext i1 %3170 to i8
  store i8 %3174, i8* %3173, align 1
  %3175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3176 = and i32 %3171, 254
  %3177 = call i32 @llvm.ctpop.i32(i32 %3176)
  %3178 = trunc i32 %3177 to i8
  %3179 = and i8 %3178, 1
  %3180 = xor i8 %3179, 1
  store i8 %3180, i8* %3175, align 1
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3181, align 1
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3183 = icmp eq i32 %3171, 0
  %3184 = zext i1 %3183 to i8
  store i8 %3184, i8* %3182, align 1
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3186 = lshr i32 %3171, 31
  %3187 = trunc i32 %3186 to i8
  store i8 %3187, i8* %3185, align 1
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3188, align 1
  store %struct.Memory* %loadMem_43a600, %struct.Memory** %MEMORY
  %loadMem_43a603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3190 = getelementptr inbounds %struct.GPR, %struct.GPR* %3189, i32 0, i32 33
  %3191 = getelementptr inbounds %struct.Reg, %struct.Reg* %3190, i32 0, i32 0
  %PC.i1940 = bitcast %union.anon* %3191 to i64*
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3193 = getelementptr inbounds %struct.GPR, %struct.GPR* %3192, i32 0, i32 7
  %3194 = getelementptr inbounds %struct.Reg, %struct.Reg* %3193, i32 0, i32 0
  %RDX.i1941 = bitcast %union.anon* %3194 to i64*
  %3195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3196 = getelementptr inbounds %struct.GPR, %struct.GPR* %3195, i32 0, i32 15
  %3197 = getelementptr inbounds %struct.Reg, %struct.Reg* %3196, i32 0, i32 0
  %RBP.i1942 = bitcast %union.anon* %3197 to i64*
  %3198 = load i64, i64* %RBP.i1942
  %3199 = sub i64 %3198, 76
  %3200 = load i64, i64* %PC.i1940
  %3201 = add i64 %3200, 3
  store i64 %3201, i64* %PC.i1940
  %3202 = inttoptr i64 %3199 to i32*
  %3203 = load i32, i32* %3202
  %3204 = zext i32 %3203 to i64
  store i64 %3204, i64* %RDX.i1941, align 8
  store %struct.Memory* %loadMem_43a603, %struct.Memory** %MEMORY
  %loadMem_43a606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3206 = getelementptr inbounds %struct.GPR, %struct.GPR* %3205, i32 0, i32 33
  %3207 = getelementptr inbounds %struct.Reg, %struct.Reg* %3206, i32 0, i32 0
  %PC.i1937 = bitcast %union.anon* %3207 to i64*
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3209 = getelementptr inbounds %struct.GPR, %struct.GPR* %3208, i32 0, i32 1
  %3210 = getelementptr inbounds %struct.Reg, %struct.Reg* %3209, i32 0, i32 0
  %EAX.i1938 = bitcast %union.anon* %3210 to i32*
  %3211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3212 = getelementptr inbounds %struct.GPR, %struct.GPR* %3211, i32 0, i32 15
  %3213 = getelementptr inbounds %struct.Reg, %struct.Reg* %3212, i32 0, i32 0
  %RBP.i1939 = bitcast %union.anon* %3213 to i64*
  %3214 = load i64, i64* %RBP.i1939
  %3215 = sub i64 %3214, 364
  %3216 = load i32, i32* %EAX.i1938
  %3217 = zext i32 %3216 to i64
  %3218 = load i64, i64* %PC.i1937
  %3219 = add i64 %3218, 6
  store i64 %3219, i64* %PC.i1937
  %3220 = inttoptr i64 %3215 to i32*
  store i32 %3216, i32* %3220
  store %struct.Memory* %loadMem_43a606, %struct.Memory** %MEMORY
  %loadMem_43a60c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3222 = getelementptr inbounds %struct.GPR, %struct.GPR* %3221, i32 0, i32 33
  %3223 = getelementptr inbounds %struct.Reg, %struct.Reg* %3222, i32 0, i32 0
  %PC.i1934 = bitcast %union.anon* %3223 to i64*
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3225 = getelementptr inbounds %struct.GPR, %struct.GPR* %3224, i32 0, i32 7
  %3226 = getelementptr inbounds %struct.Reg, %struct.Reg* %3225, i32 0, i32 0
  %EDX.i1935 = bitcast %union.anon* %3226 to i32*
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3228 = getelementptr inbounds %struct.GPR, %struct.GPR* %3227, i32 0, i32 1
  %3229 = getelementptr inbounds %struct.Reg, %struct.Reg* %3228, i32 0, i32 0
  %RAX.i1936 = bitcast %union.anon* %3229 to i64*
  %3230 = load i32, i32* %EDX.i1935
  %3231 = zext i32 %3230 to i64
  %3232 = load i64, i64* %PC.i1934
  %3233 = add i64 %3232, 2
  store i64 %3233, i64* %PC.i1934
  %3234 = and i64 %3231, 4294967295
  store i64 %3234, i64* %RAX.i1936, align 8
  store %struct.Memory* %loadMem_43a60c, %struct.Memory** %MEMORY
  %loadMem_43a60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3236 = getelementptr inbounds %struct.GPR, %struct.GPR* %3235, i32 0, i32 33
  %3237 = getelementptr inbounds %struct.Reg, %struct.Reg* %3236, i32 0, i32 0
  %PC.i1933 = bitcast %union.anon* %3237 to i64*
  %3238 = load i64, i64* %PC.i1933
  %3239 = add i64 %3238, 1
  store i64 %3239, i64* %PC.i1933
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3242 = bitcast %union.anon* %3241 to i32*
  %3243 = load i32, i32* %3242, align 8
  %3244 = sext i32 %3243 to i64
  %3245 = lshr i64 %3244, 32
  store i64 %3245, i64* %3240, align 8
  store %struct.Memory* %loadMem_43a60e, %struct.Memory** %MEMORY
  %loadMem_43a60f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3247 = getelementptr inbounds %struct.GPR, %struct.GPR* %3246, i32 0, i32 33
  %3248 = getelementptr inbounds %struct.Reg, %struct.Reg* %3247, i32 0, i32 0
  %PC.i1930 = bitcast %union.anon* %3248 to i64*
  %3249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3250 = getelementptr inbounds %struct.GPR, %struct.GPR* %3249, i32 0, i32 9
  %3251 = getelementptr inbounds %struct.Reg, %struct.Reg* %3250, i32 0, i32 0
  %RSI.i1931 = bitcast %union.anon* %3251 to i64*
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3253 = getelementptr inbounds %struct.GPR, %struct.GPR* %3252, i32 0, i32 15
  %3254 = getelementptr inbounds %struct.Reg, %struct.Reg* %3253, i32 0, i32 0
  %RBP.i1932 = bitcast %union.anon* %3254 to i64*
  %3255 = load i64, i64* %RBP.i1932
  %3256 = sub i64 %3255, 364
  %3257 = load i64, i64* %PC.i1930
  %3258 = add i64 %3257, 6
  store i64 %3258, i64* %PC.i1930
  %3259 = inttoptr i64 %3256 to i32*
  %3260 = load i32, i32* %3259
  %3261 = zext i32 %3260 to i64
  store i64 %3261, i64* %RSI.i1931, align 8
  store %struct.Memory* %loadMem_43a60f, %struct.Memory** %MEMORY
  %loadMem_43a615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3263 = getelementptr inbounds %struct.GPR, %struct.GPR* %3262, i32 0, i32 33
  %3264 = getelementptr inbounds %struct.Reg, %struct.Reg* %3263, i32 0, i32 0
  %PC.i1927 = bitcast %union.anon* %3264 to i64*
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3266 = getelementptr inbounds %struct.GPR, %struct.GPR* %3265, i32 0, i32 9
  %3267 = getelementptr inbounds %struct.Reg, %struct.Reg* %3266, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %3267 to i32*
  %3268 = load i32, i32* %ESI.i
  %3269 = zext i32 %3268 to i64
  %3270 = load i64, i64* %PC.i1927
  %3271 = add i64 %3270, 2
  store i64 %3271, i64* %PC.i1927
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3273 = bitcast %union.anon* %3272 to i32*
  %3274 = load i32, i32* %3273, align 8
  %3275 = zext i32 %3274 to i64
  %3276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %3277 = bitcast %union.anon* %3276 to i32*
  %3278 = load i32, i32* %3277, align 8
  %3279 = zext i32 %3278 to i64
  %3280 = shl i64 %3269, 32
  %3281 = ashr exact i64 %3280, 32
  %3282 = shl i64 %3279, 32
  %3283 = or i64 %3282, %3275
  %3284 = sdiv i64 %3283, %3281
  %3285 = shl i64 %3284, 32
  %3286 = ashr exact i64 %3285, 32
  %3287 = icmp eq i64 %3284, %3286
  br i1 %3287, label %3292, label %3288

; <label>:3288:                                   ; preds = %block_.L_43a5f5
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3290 = load i64, i64* %3289, align 8
  %3291 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3290, %struct.Memory* %loadMem_43a615)
  br label %routine_idivl__esi.exit

; <label>:3292:                                   ; preds = %block_.L_43a5f5
  %3293 = srem i64 %3283, %3281
  %3294 = getelementptr inbounds %union.anon, %union.anon* %3272, i64 0, i32 0
  %3295 = and i64 %3284, 4294967295
  store i64 %3295, i64* %3294, align 8
  %3296 = getelementptr inbounds %union.anon, %union.anon* %3276, i64 0, i32 0
  %3297 = and i64 %3293, 4294967295
  store i64 %3297, i64* %3296, align 8
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3298, align 1
  %3299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %3299, align 1
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3300, align 1
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3301, align 1
  %3302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3302, align 1
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3303, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %3288, %3292
  %3304 = phi %struct.Memory* [ %3291, %3288 ], [ %loadMem_43a615, %3292 ]
  store %struct.Memory* %3304, %struct.Memory** %MEMORY
  %loadMem_43a617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3306 = getelementptr inbounds %struct.GPR, %struct.GPR* %3305, i32 0, i32 33
  %3307 = getelementptr inbounds %struct.Reg, %struct.Reg* %3306, i32 0, i32 0
  %PC.i1924 = bitcast %union.anon* %3307 to i64*
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3309 = getelementptr inbounds %struct.GPR, %struct.GPR* %3308, i32 0, i32 7
  %3310 = getelementptr inbounds %struct.Reg, %struct.Reg* %3309, i32 0, i32 0
  %EDX.i1925 = bitcast %union.anon* %3310 to i32*
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3312 = getelementptr inbounds %struct.GPR, %struct.GPR* %3311, i32 0, i32 5
  %3313 = getelementptr inbounds %struct.Reg, %struct.Reg* %3312, i32 0, i32 0
  %RCX.i1926 = bitcast %union.anon* %3313 to i64*
  %3314 = load i64, i64* %RCX.i1926
  %3315 = load i32, i32* %EDX.i1925
  %3316 = zext i32 %3315 to i64
  %3317 = load i64, i64* %PC.i1924
  %3318 = add i64 %3317, 2
  store i64 %3318, i64* %PC.i1924
  %3319 = trunc i64 %3314 to i32
  %3320 = add i32 %3315, %3319
  %3321 = zext i32 %3320 to i64
  store i64 %3321, i64* %RCX.i1926, align 8
  %3322 = icmp ult i32 %3320, %3319
  %3323 = icmp ult i32 %3320, %3315
  %3324 = or i1 %3322, %3323
  %3325 = zext i1 %3324 to i8
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3325, i8* %3326, align 1
  %3327 = and i32 %3320, 255
  %3328 = call i32 @llvm.ctpop.i32(i32 %3327)
  %3329 = trunc i32 %3328 to i8
  %3330 = and i8 %3329, 1
  %3331 = xor i8 %3330, 1
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3331, i8* %3332, align 1
  %3333 = xor i64 %3316, %3314
  %3334 = trunc i64 %3333 to i32
  %3335 = xor i32 %3334, %3320
  %3336 = lshr i32 %3335, 4
  %3337 = trunc i32 %3336 to i8
  %3338 = and i8 %3337, 1
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3338, i8* %3339, align 1
  %3340 = icmp eq i32 %3320, 0
  %3341 = zext i1 %3340 to i8
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3341, i8* %3342, align 1
  %3343 = lshr i32 %3320, 31
  %3344 = trunc i32 %3343 to i8
  %3345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3344, i8* %3345, align 1
  %3346 = lshr i32 %3319, 31
  %3347 = lshr i32 %3315, 31
  %3348 = xor i32 %3343, %3346
  %3349 = xor i32 %3343, %3347
  %3350 = add i32 %3348, %3349
  %3351 = icmp eq i32 %3350, 2
  %3352 = zext i1 %3351 to i8
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3352, i8* %3353, align 1
  store %struct.Memory* %loadMem_43a617, %struct.Memory** %MEMORY
  %loadMem_43a619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3355 = getelementptr inbounds %struct.GPR, %struct.GPR* %3354, i32 0, i32 33
  %3356 = getelementptr inbounds %struct.Reg, %struct.Reg* %3355, i32 0, i32 0
  %PC.i1921 = bitcast %union.anon* %3356 to i64*
  %3357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3358 = getelementptr inbounds %struct.GPR, %struct.GPR* %3357, i32 0, i32 5
  %3359 = getelementptr inbounds %struct.Reg, %struct.Reg* %3358, i32 0, i32 0
  %ECX.i1922 = bitcast %union.anon* %3359 to i32*
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3361 = getelementptr inbounds %struct.GPR, %struct.GPR* %3360, i32 0, i32 15
  %3362 = getelementptr inbounds %struct.Reg, %struct.Reg* %3361, i32 0, i32 0
  %RBP.i1923 = bitcast %union.anon* %3362 to i64*
  %3363 = load i64, i64* %RBP.i1923
  %3364 = sub i64 %3363, 360
  %3365 = load i32, i32* %ECX.i1922
  %3366 = zext i32 %3365 to i64
  %3367 = load i64, i64* %PC.i1921
  %3368 = add i64 %3367, 6
  store i64 %3368, i64* %PC.i1921
  %3369 = inttoptr i64 %3364 to i32*
  store i32 %3365, i32* %3369
  store %struct.Memory* %loadMem_43a619, %struct.Memory** %MEMORY
  br label %block_.L_43a61f

block_.L_43a61f:                                  ; preds = %routine_idivl__esi.exit, %block_43a5e4
  %loadMem_43a61f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3371 = getelementptr inbounds %struct.GPR, %struct.GPR* %3370, i32 0, i32 33
  %3372 = getelementptr inbounds %struct.Reg, %struct.Reg* %3371, i32 0, i32 0
  %PC.i1918 = bitcast %union.anon* %3372 to i64*
  %3373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3374 = getelementptr inbounds %struct.GPR, %struct.GPR* %3373, i32 0, i32 1
  %3375 = getelementptr inbounds %struct.Reg, %struct.Reg* %3374, i32 0, i32 0
  %RAX.i1919 = bitcast %union.anon* %3375 to i64*
  %3376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3377 = getelementptr inbounds %struct.GPR, %struct.GPR* %3376, i32 0, i32 15
  %3378 = getelementptr inbounds %struct.Reg, %struct.Reg* %3377, i32 0, i32 0
  %RBP.i1920 = bitcast %union.anon* %3378 to i64*
  %3379 = load i64, i64* %RBP.i1920
  %3380 = sub i64 %3379, 360
  %3381 = load i64, i64* %PC.i1918
  %3382 = add i64 %3381, 6
  store i64 %3382, i64* %PC.i1918
  %3383 = inttoptr i64 %3380 to i32*
  %3384 = load i32, i32* %3383
  %3385 = zext i32 %3384 to i64
  store i64 %3385, i64* %RAX.i1919, align 8
  store %struct.Memory* %loadMem_43a61f, %struct.Memory** %MEMORY
  %loadMem_43a625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3387 = getelementptr inbounds %struct.GPR, %struct.GPR* %3386, i32 0, i32 33
  %3388 = getelementptr inbounds %struct.Reg, %struct.Reg* %3387, i32 0, i32 0
  %PC.i1915 = bitcast %union.anon* %3388 to i64*
  %3389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3390 = getelementptr inbounds %struct.GPR, %struct.GPR* %3389, i32 0, i32 1
  %3391 = getelementptr inbounds %struct.Reg, %struct.Reg* %3390, i32 0, i32 0
  %EAX.i1916 = bitcast %union.anon* %3391 to i32*
  %3392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3393 = getelementptr inbounds %struct.GPR, %struct.GPR* %3392, i32 0, i32 15
  %3394 = getelementptr inbounds %struct.Reg, %struct.Reg* %3393, i32 0, i32 0
  %RBP.i1917 = bitcast %union.anon* %3394 to i64*
  %3395 = load i64, i64* %RBP.i1917
  %3396 = sub i64 %3395, 368
  %3397 = load i32, i32* %EAX.i1916
  %3398 = zext i32 %3397 to i64
  %3399 = load i64, i64* %PC.i1915
  %3400 = add i64 %3399, 6
  store i64 %3400, i64* %PC.i1915
  %3401 = inttoptr i64 %3396 to i32*
  store i32 %3397, i32* %3401
  store %struct.Memory* %loadMem_43a625, %struct.Memory** %MEMORY
  %loadMem_43a62b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3403 = getelementptr inbounds %struct.GPR, %struct.GPR* %3402, i32 0, i32 33
  %3404 = getelementptr inbounds %struct.Reg, %struct.Reg* %3403, i32 0, i32 0
  %PC.i1914 = bitcast %union.anon* %3404 to i64*
  %3405 = load i64, i64* %PC.i1914
  %3406 = add i64 %3405, 14
  %3407 = load i64, i64* %PC.i1914
  %3408 = add i64 %3407, 5
  store i64 %3408, i64* %PC.i1914
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3406, i64* %3409, align 8
  store %struct.Memory* %loadMem_43a62b, %struct.Memory** %MEMORY
  br label %block_.L_43a639

block_.L_43a630:                                  ; preds = %block_43a5af, %block_.L_43a591
  %loadMem_43a630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3411 = getelementptr inbounds %struct.GPR, %struct.GPR* %3410, i32 0, i32 33
  %3412 = getelementptr inbounds %struct.Reg, %struct.Reg* %3411, i32 0, i32 0
  %PC.i1911 = bitcast %union.anon* %3412 to i64*
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3414 = getelementptr inbounds %struct.GPR, %struct.GPR* %3413, i32 0, i32 1
  %3415 = getelementptr inbounds %struct.Reg, %struct.Reg* %3414, i32 0, i32 0
  %RAX.i1912 = bitcast %union.anon* %3415 to i64*
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3417 = getelementptr inbounds %struct.GPR, %struct.GPR* %3416, i32 0, i32 15
  %3418 = getelementptr inbounds %struct.Reg, %struct.Reg* %3417, i32 0, i32 0
  %RBP.i1913 = bitcast %union.anon* %3418 to i64*
  %3419 = load i64, i64* %RBP.i1913
  %3420 = sub i64 %3419, 76
  %3421 = load i64, i64* %PC.i1911
  %3422 = add i64 %3421, 3
  store i64 %3422, i64* %PC.i1911
  %3423 = inttoptr i64 %3420 to i32*
  %3424 = load i32, i32* %3423
  %3425 = zext i32 %3424 to i64
  store i64 %3425, i64* %RAX.i1912, align 8
  store %struct.Memory* %loadMem_43a630, %struct.Memory** %MEMORY
  %loadMem_43a633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3427 = getelementptr inbounds %struct.GPR, %struct.GPR* %3426, i32 0, i32 33
  %3428 = getelementptr inbounds %struct.Reg, %struct.Reg* %3427, i32 0, i32 0
  %PC.i1908 = bitcast %union.anon* %3428 to i64*
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3430 = getelementptr inbounds %struct.GPR, %struct.GPR* %3429, i32 0, i32 1
  %3431 = getelementptr inbounds %struct.Reg, %struct.Reg* %3430, i32 0, i32 0
  %EAX.i1909 = bitcast %union.anon* %3431 to i32*
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3433 = getelementptr inbounds %struct.GPR, %struct.GPR* %3432, i32 0, i32 15
  %3434 = getelementptr inbounds %struct.Reg, %struct.Reg* %3433, i32 0, i32 0
  %RBP.i1910 = bitcast %union.anon* %3434 to i64*
  %3435 = load i64, i64* %RBP.i1910
  %3436 = sub i64 %3435, 368
  %3437 = load i32, i32* %EAX.i1909
  %3438 = zext i32 %3437 to i64
  %3439 = load i64, i64* %PC.i1908
  %3440 = add i64 %3439, 6
  store i64 %3440, i64* %PC.i1908
  %3441 = inttoptr i64 %3436 to i32*
  store i32 %3437, i32* %3441
  store %struct.Memory* %loadMem_43a633, %struct.Memory** %MEMORY
  br label %block_.L_43a639

block_.L_43a639:                                  ; preds = %block_.L_43a630, %block_.L_43a61f
  %loadMem_43a639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3443 = getelementptr inbounds %struct.GPR, %struct.GPR* %3442, i32 0, i32 33
  %3444 = getelementptr inbounds %struct.Reg, %struct.Reg* %3443, i32 0, i32 0
  %PC.i1905 = bitcast %union.anon* %3444 to i64*
  %3445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3446 = getelementptr inbounds %struct.GPR, %struct.GPR* %3445, i32 0, i32 1
  %3447 = getelementptr inbounds %struct.Reg, %struct.Reg* %3446, i32 0, i32 0
  %RAX.i1906 = bitcast %union.anon* %3447 to i64*
  %3448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3449 = getelementptr inbounds %struct.GPR, %struct.GPR* %3448, i32 0, i32 15
  %3450 = getelementptr inbounds %struct.Reg, %struct.Reg* %3449, i32 0, i32 0
  %RBP.i1907 = bitcast %union.anon* %3450 to i64*
  %3451 = load i64, i64* %RBP.i1907
  %3452 = sub i64 %3451, 368
  %3453 = load i64, i64* %PC.i1905
  %3454 = add i64 %3453, 6
  store i64 %3454, i64* %PC.i1905
  %3455 = inttoptr i64 %3452 to i32*
  %3456 = load i32, i32* %3455
  %3457 = zext i32 %3456 to i64
  store i64 %3457, i64* %RAX.i1906, align 8
  store %struct.Memory* %loadMem_43a639, %struct.Memory** %MEMORY
  %loadMem_43a63f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3459 = getelementptr inbounds %struct.GPR, %struct.GPR* %3458, i32 0, i32 33
  %3460 = getelementptr inbounds %struct.Reg, %struct.Reg* %3459, i32 0, i32 0
  %PC.i1902 = bitcast %union.anon* %3460 to i64*
  %3461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3462 = getelementptr inbounds %struct.GPR, %struct.GPR* %3461, i32 0, i32 1
  %3463 = getelementptr inbounds %struct.Reg, %struct.Reg* %3462, i32 0, i32 0
  %EAX.i1903 = bitcast %union.anon* %3463 to i32*
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3465 = getelementptr inbounds %struct.GPR, %struct.GPR* %3464, i32 0, i32 15
  %3466 = getelementptr inbounds %struct.Reg, %struct.Reg* %3465, i32 0, i32 0
  %RBP.i1904 = bitcast %union.anon* %3466 to i64*
  %3467 = load i64, i64* %RBP.i1904
  %3468 = sub i64 %3467, 188
  %3469 = load i32, i32* %EAX.i1903
  %3470 = zext i32 %3469 to i64
  %3471 = load i64, i64* %PC.i1902
  %3472 = add i64 %3471, 6
  store i64 %3472, i64* %PC.i1902
  %3473 = inttoptr i64 %3468 to i32*
  store i32 %3469, i32* %3473
  store %struct.Memory* %loadMem_43a63f, %struct.Memory** %MEMORY
  %loadMem_43a645 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3475 = getelementptr inbounds %struct.GPR, %struct.GPR* %3474, i32 0, i32 33
  %3476 = getelementptr inbounds %struct.Reg, %struct.Reg* %3475, i32 0, i32 0
  %PC.i1900 = bitcast %union.anon* %3476 to i64*
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3478 = getelementptr inbounds %struct.GPR, %struct.GPR* %3477, i32 0, i32 15
  %3479 = getelementptr inbounds %struct.Reg, %struct.Reg* %3478, i32 0, i32 0
  %RBP.i1901 = bitcast %union.anon* %3479 to i64*
  %3480 = load i64, i64* %RBP.i1901
  %3481 = sub i64 %3480, 272
  %3482 = load i64, i64* %PC.i1900
  %3483 = add i64 %3482, 7
  store i64 %3483, i64* %PC.i1900
  %3484 = inttoptr i64 %3481 to i32*
  %3485 = load i32, i32* %3484
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3486, align 1
  %3487 = and i32 %3485, 255
  %3488 = call i32 @llvm.ctpop.i32(i32 %3487)
  %3489 = trunc i32 %3488 to i8
  %3490 = and i8 %3489, 1
  %3491 = xor i8 %3490, 1
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3491, i8* %3492, align 1
  %3493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3493, align 1
  %3494 = icmp eq i32 %3485, 0
  %3495 = zext i1 %3494 to i8
  %3496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3495, i8* %3496, align 1
  %3497 = lshr i32 %3485, 31
  %3498 = trunc i32 %3497 to i8
  %3499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3498, i8* %3499, align 1
  %3500 = lshr i32 %3485, 31
  %3501 = xor i32 %3497, %3500
  %3502 = add i32 %3501, %3500
  %3503 = icmp eq i32 %3502, 2
  %3504 = zext i1 %3503 to i8
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3504, i8* %3505, align 1
  store %struct.Memory* %loadMem_43a645, %struct.Memory** %MEMORY
  %loadMem_43a64c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3507 = getelementptr inbounds %struct.GPR, %struct.GPR* %3506, i32 0, i32 33
  %3508 = getelementptr inbounds %struct.Reg, %struct.Reg* %3507, i32 0, i32 0
  %PC.i1899 = bitcast %union.anon* %3508 to i64*
  %3509 = load i64, i64* %PC.i1899
  %3510 = add i64 %3509, 26
  %3511 = load i64, i64* %PC.i1899
  %3512 = add i64 %3511, 6
  %3513 = load i64, i64* %PC.i1899
  %3514 = add i64 %3513, 6
  store i64 %3514, i64* %PC.i1899
  %3515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3516 = load i8, i8* %3515, align 1
  %3517 = icmp eq i8 %3516, 0
  %3518 = zext i1 %3517 to i8
  store i8 %3518, i8* %BRANCH_TAKEN, align 1
  %3519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3520 = select i1 %3517, i64 %3510, i64 %3512
  store i64 %3520, i64* %3519, align 8
  store %struct.Memory* %loadMem_43a64c, %struct.Memory** %MEMORY
  %loadBr_43a64c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a64c = icmp eq i8 %loadBr_43a64c, 1
  br i1 %cmpBr_43a64c, label %block_.L_43a666, label %block_43a652

block_43a652:                                     ; preds = %block_.L_43a639
  %loadMem_43a652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3522 = getelementptr inbounds %struct.GPR, %struct.GPR* %3521, i32 0, i32 33
  %3523 = getelementptr inbounds %struct.Reg, %struct.Reg* %3522, i32 0, i32 0
  %PC.i1896 = bitcast %union.anon* %3523 to i64*
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3525 = getelementptr inbounds %struct.GPR, %struct.GPR* %3524, i32 0, i32 1
  %3526 = getelementptr inbounds %struct.Reg, %struct.Reg* %3525, i32 0, i32 0
  %RAX.i1897 = bitcast %union.anon* %3526 to i64*
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3528 = getelementptr inbounds %struct.GPR, %struct.GPR* %3527, i32 0, i32 15
  %3529 = getelementptr inbounds %struct.Reg, %struct.Reg* %3528, i32 0, i32 0
  %RBP.i1898 = bitcast %union.anon* %3529 to i64*
  %3530 = load i64, i64* %RBP.i1898
  %3531 = sub i64 %3530, 240
  %3532 = load i64, i64* %PC.i1896
  %3533 = add i64 %3532, 7
  store i64 %3533, i64* %PC.i1896
  %3534 = inttoptr i64 %3531 to i64*
  %3535 = load i64, i64* %3534
  store i64 %3535, i64* %RAX.i1897, align 8
  store %struct.Memory* %loadMem_43a652, %struct.Memory** %MEMORY
  %loadMem_43a659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 33
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %PC.i1894 = bitcast %union.anon* %3538 to i64*
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3540 = getelementptr inbounds %struct.GPR, %struct.GPR* %3539, i32 0, i32 1
  %3541 = getelementptr inbounds %struct.Reg, %struct.Reg* %3540, i32 0, i32 0
  %RAX.i1895 = bitcast %union.anon* %3541 to i64*
  %3542 = load i64, i64* %RAX.i1895
  %3543 = add i64 %3542, 612
  %3544 = load i64, i64* %PC.i1894
  %3545 = add i64 %3544, 7
  store i64 %3545, i64* %PC.i1894
  %3546 = inttoptr i64 %3543 to i32*
  %3547 = load i32, i32* %3546
  %3548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3548, align 1
  %3549 = and i32 %3547, 255
  %3550 = call i32 @llvm.ctpop.i32(i32 %3549)
  %3551 = trunc i32 %3550 to i8
  %3552 = and i8 %3551, 1
  %3553 = xor i8 %3552, 1
  %3554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3553, i8* %3554, align 1
  %3555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3555, align 1
  %3556 = icmp eq i32 %3547, 0
  %3557 = zext i1 %3556 to i8
  %3558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3557, i8* %3558, align 1
  %3559 = lshr i32 %3547, 31
  %3560 = trunc i32 %3559 to i8
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3560, i8* %3561, align 1
  %3562 = lshr i32 %3547, 31
  %3563 = xor i32 %3559, %3562
  %3564 = add i32 %3563, %3562
  %3565 = icmp eq i32 %3564, 2
  %3566 = zext i1 %3565 to i8
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3566, i8* %3567, align 1
  store %struct.Memory* %loadMem_43a659, %struct.Memory** %MEMORY
  %loadMem_43a660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3569 = getelementptr inbounds %struct.GPR, %struct.GPR* %3568, i32 0, i32 33
  %3570 = getelementptr inbounds %struct.Reg, %struct.Reg* %3569, i32 0, i32 0
  %PC.i1893 = bitcast %union.anon* %3570 to i64*
  %3571 = load i64, i64* %PC.i1893
  %3572 = add i64 %3571, 3280
  %3573 = load i64, i64* %PC.i1893
  %3574 = add i64 %3573, 6
  %3575 = load i64, i64* %PC.i1893
  %3576 = add i64 %3575, 6
  store i64 %3576, i64* %PC.i1893
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3578 = load i8, i8* %3577, align 1
  %3579 = icmp eq i8 %3578, 0
  %3580 = zext i1 %3579 to i8
  store i8 %3580, i8* %BRANCH_TAKEN, align 1
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3582 = select i1 %3579, i64 %3572, i64 %3574
  store i64 %3582, i64* %3581, align 8
  store %struct.Memory* %loadMem_43a660, %struct.Memory** %MEMORY
  %loadBr_43a660 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a660 = icmp eq i8 %loadBr_43a660, 1
  br i1 %cmpBr_43a660, label %block_.L_43b330, label %block_.L_43a666

block_.L_43a666:                                  ; preds = %block_43a652, %block_.L_43a639
  %loadMem_43a666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3584 = getelementptr inbounds %struct.GPR, %struct.GPR* %3583, i32 0, i32 33
  %3585 = getelementptr inbounds %struct.Reg, %struct.Reg* %3584, i32 0, i32 0
  %PC.i1891 = bitcast %union.anon* %3585 to i64*
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3587 = getelementptr inbounds %struct.GPR, %struct.GPR* %3586, i32 0, i32 15
  %3588 = getelementptr inbounds %struct.Reg, %struct.Reg* %3587, i32 0, i32 0
  %RBP.i1892 = bitcast %union.anon* %3588 to i64*
  %3589 = load i64, i64* %RBP.i1892
  %3590 = sub i64 %3589, 56
  %3591 = load i64, i64* %PC.i1891
  %3592 = add i64 %3591, 4
  store i64 %3592, i64* %PC.i1891
  %3593 = inttoptr i64 %3590 to i32*
  %3594 = load i32, i32* %3593
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3595, align 1
  %3596 = and i32 %3594, 255
  %3597 = call i32 @llvm.ctpop.i32(i32 %3596)
  %3598 = trunc i32 %3597 to i8
  %3599 = and i8 %3598, 1
  %3600 = xor i8 %3599, 1
  %3601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3600, i8* %3601, align 1
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3602, align 1
  %3603 = icmp eq i32 %3594, 0
  %3604 = zext i1 %3603 to i8
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3604, i8* %3605, align 1
  %3606 = lshr i32 %3594, 31
  %3607 = trunc i32 %3606 to i8
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3607, i8* %3608, align 1
  %3609 = lshr i32 %3594, 31
  %3610 = xor i32 %3606, %3609
  %3611 = add i32 %3610, %3609
  %3612 = icmp eq i32 %3611, 2
  %3613 = zext i1 %3612 to i8
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3613, i8* %3614, align 1
  store %struct.Memory* %loadMem_43a666, %struct.Memory** %MEMORY
  %loadMem_43a66a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3616 = getelementptr inbounds %struct.GPR, %struct.GPR* %3615, i32 0, i32 33
  %3617 = getelementptr inbounds %struct.Reg, %struct.Reg* %3616, i32 0, i32 0
  %PC.i1890 = bitcast %union.anon* %3617 to i64*
  %3618 = load i64, i64* %PC.i1890
  %3619 = add i64 %3618, 86
  %3620 = load i64, i64* %PC.i1890
  %3621 = add i64 %3620, 6
  %3622 = load i64, i64* %PC.i1890
  %3623 = add i64 %3622, 6
  store i64 %3623, i64* %PC.i1890
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3625 = load i8, i8* %3624, align 1
  store i8 %3625, i8* %BRANCH_TAKEN, align 1
  %3626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3627 = icmp ne i8 %3625, 0
  %3628 = select i1 %3627, i64 %3619, i64 %3621
  store i64 %3628, i64* %3626, align 8
  store %struct.Memory* %loadMem_43a66a, %struct.Memory** %MEMORY
  %loadBr_43a66a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a66a = icmp eq i8 %loadBr_43a66a, 1
  br i1 %cmpBr_43a66a, label %block_.L_43a6c0, label %block_43a670

block_43a670:                                     ; preds = %block_.L_43a666
  %loadMem_43a670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3630 = getelementptr inbounds %struct.GPR, %struct.GPR* %3629, i32 0, i32 33
  %3631 = getelementptr inbounds %struct.Reg, %struct.Reg* %3630, i32 0, i32 0
  %PC.i1888 = bitcast %union.anon* %3631 to i64*
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3633 = getelementptr inbounds %struct.GPR, %struct.GPR* %3632, i32 0, i32 1
  %3634 = getelementptr inbounds %struct.Reg, %struct.Reg* %3633, i32 0, i32 0
  %RAX.i1889 = bitcast %union.anon* %3634 to i64*
  %3635 = load i64, i64* %PC.i1888
  %3636 = add i64 %3635, 8
  store i64 %3636, i64* %PC.i1888
  %3637 = load i8, i8* getelementptr inbounds (%G_0x723694_type, %G_0x723694_type* @G_0x723694, i32 0, i32 0, i32 0)
  %3638 = zext i8 %3637 to i64
  store i64 %3638, i64* %RAX.i1889, align 8
  store %struct.Memory* %loadMem_43a670, %struct.Memory** %MEMORY
  %loadMem_43a678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3640 = getelementptr inbounds %struct.GPR, %struct.GPR* %3639, i32 0, i32 33
  %3641 = getelementptr inbounds %struct.Reg, %struct.Reg* %3640, i32 0, i32 0
  %PC.i1886 = bitcast %union.anon* %3641 to i64*
  %3642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3643 = getelementptr inbounds %struct.GPR, %struct.GPR* %3642, i32 0, i32 1
  %3644 = getelementptr inbounds %struct.Reg, %struct.Reg* %3643, i32 0, i32 0
  %EAX.i1887 = bitcast %union.anon* %3644 to i32*
  %3645 = load i32, i32* %EAX.i1887
  %3646 = zext i32 %3645 to i64
  %3647 = load i64, i64* %PC.i1886
  %3648 = add i64 %3647, 3
  store i64 %3648, i64* %PC.i1886
  %3649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3649, align 1
  %3650 = and i32 %3645, 255
  %3651 = call i32 @llvm.ctpop.i32(i32 %3650)
  %3652 = trunc i32 %3651 to i8
  %3653 = and i8 %3652, 1
  %3654 = xor i8 %3653, 1
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3654, i8* %3655, align 1
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3656, align 1
  %3657 = icmp eq i32 %3645, 0
  %3658 = zext i1 %3657 to i8
  %3659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3658, i8* %3659, align 1
  %3660 = lshr i32 %3645, 31
  %3661 = trunc i32 %3660 to i8
  %3662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3661, i8* %3662, align 1
  %3663 = lshr i32 %3645, 31
  %3664 = xor i32 %3660, %3663
  %3665 = add i32 %3664, %3663
  %3666 = icmp eq i32 %3665, 2
  %3667 = zext i1 %3666 to i8
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3667, i8* %3668, align 1
  store %struct.Memory* %loadMem_43a678, %struct.Memory** %MEMORY
  %loadMem_43a67b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3670 = getelementptr inbounds %struct.GPR, %struct.GPR* %3669, i32 0, i32 33
  %3671 = getelementptr inbounds %struct.Reg, %struct.Reg* %3670, i32 0, i32 0
  %PC.i1885 = bitcast %union.anon* %3671 to i64*
  %3672 = load i64, i64* %PC.i1885
  %3673 = add i64 %3672, 43
  %3674 = load i64, i64* %PC.i1885
  %3675 = add i64 %3674, 6
  %3676 = load i64, i64* %PC.i1885
  %3677 = add i64 %3676, 6
  store i64 %3677, i64* %PC.i1885
  %3678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3679 = load i8, i8* %3678, align 1
  store i8 %3679, i8* %BRANCH_TAKEN, align 1
  %3680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3681 = icmp ne i8 %3679, 0
  %3682 = select i1 %3681, i64 %3673, i64 %3675
  store i64 %3682, i64* %3680, align 8
  store %struct.Memory* %loadMem_43a67b, %struct.Memory** %MEMORY
  %loadBr_43a67b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a67b = icmp eq i8 %loadBr_43a67b, 1
  br i1 %cmpBr_43a67b, label %block_.L_43a6a6, label %block_43a681

block_43a681:                                     ; preds = %block_43a670
  %loadMem_43a681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3684 = getelementptr inbounds %struct.GPR, %struct.GPR* %3683, i32 0, i32 33
  %3685 = getelementptr inbounds %struct.Reg, %struct.Reg* %3684, i32 0, i32 0
  %PC.i1882 = bitcast %union.anon* %3685 to i64*
  %3686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3687 = getelementptr inbounds %struct.GPR, %struct.GPR* %3686, i32 0, i32 1
  %3688 = getelementptr inbounds %struct.Reg, %struct.Reg* %3687, i32 0, i32 0
  %RAX.i1883 = bitcast %union.anon* %3688 to i64*
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3690 = getelementptr inbounds %struct.GPR, %struct.GPR* %3689, i32 0, i32 15
  %3691 = getelementptr inbounds %struct.Reg, %struct.Reg* %3690, i32 0, i32 0
  %RBP.i1884 = bitcast %union.anon* %3691 to i64*
  %3692 = load i64, i64* %RBP.i1884
  %3693 = sub i64 %3692, 240
  %3694 = load i64, i64* %PC.i1882
  %3695 = add i64 %3694, 7
  store i64 %3695, i64* %PC.i1882
  %3696 = inttoptr i64 %3693 to i64*
  %3697 = load i64, i64* %3696
  store i64 %3697, i64* %RAX.i1883, align 8
  store %struct.Memory* %loadMem_43a681, %struct.Memory** %MEMORY
  %loadMem_43a688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3699 = getelementptr inbounds %struct.GPR, %struct.GPR* %3698, i32 0, i32 33
  %3700 = getelementptr inbounds %struct.Reg, %struct.Reg* %3699, i32 0, i32 0
  %PC.i1880 = bitcast %union.anon* %3700 to i64*
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3702 = getelementptr inbounds %struct.GPR, %struct.GPR* %3701, i32 0, i32 1
  %3703 = getelementptr inbounds %struct.Reg, %struct.Reg* %3702, i32 0, i32 0
  %RAX.i1881 = bitcast %union.anon* %3703 to i64*
  %3704 = load i64, i64* %RAX.i1881
  %3705 = add i64 %3704, 532
  %3706 = load i64, i64* %PC.i1880
  %3707 = add i64 %3706, 7
  store i64 %3707, i64* %PC.i1880
  %3708 = inttoptr i64 %3705 to i32*
  %3709 = load i32, i32* %3708
  %3710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3710, align 1
  %3711 = and i32 %3709, 255
  %3712 = call i32 @llvm.ctpop.i32(i32 %3711)
  %3713 = trunc i32 %3712 to i8
  %3714 = and i8 %3713, 1
  %3715 = xor i8 %3714, 1
  %3716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3715, i8* %3716, align 1
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3717, align 1
  %3718 = icmp eq i32 %3709, 0
  %3719 = zext i1 %3718 to i8
  %3720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3719, i8* %3720, align 1
  %3721 = lshr i32 %3709, 31
  %3722 = trunc i32 %3721 to i8
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3722, i8* %3723, align 1
  %3724 = lshr i32 %3709, 31
  %3725 = xor i32 %3721, %3724
  %3726 = add i32 %3725, %3724
  %3727 = icmp eq i32 %3726, 2
  %3728 = zext i1 %3727 to i8
  %3729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3728, i8* %3729, align 1
  store %struct.Memory* %loadMem_43a688, %struct.Memory** %MEMORY
  %loadMem_43a68f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3731 = getelementptr inbounds %struct.GPR, %struct.GPR* %3730, i32 0, i32 33
  %3732 = getelementptr inbounds %struct.Reg, %struct.Reg* %3731, i32 0, i32 0
  %PC.i1879 = bitcast %union.anon* %3732 to i64*
  %3733 = load i64, i64* %PC.i1879
  %3734 = add i64 %3733, 23
  %3735 = load i64, i64* %PC.i1879
  %3736 = add i64 %3735, 6
  %3737 = load i64, i64* %PC.i1879
  %3738 = add i64 %3737, 6
  store i64 %3738, i64* %PC.i1879
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3740 = load i8, i8* %3739, align 1
  %3741 = icmp eq i8 %3740, 0
  %3742 = zext i1 %3741 to i8
  store i8 %3742, i8* %BRANCH_TAKEN, align 1
  %3743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3744 = select i1 %3741, i64 %3734, i64 %3736
  store i64 %3744, i64* %3743, align 8
  store %struct.Memory* %loadMem_43a68f, %struct.Memory** %MEMORY
  %loadBr_43a68f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a68f = icmp eq i8 %loadBr_43a68f, 1
  br i1 %cmpBr_43a68f, label %block_.L_43a6a6, label %block_43a695

block_43a695:                                     ; preds = %block_43a681
  %loadMem_43a695 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3746 = getelementptr inbounds %struct.GPR, %struct.GPR* %3745, i32 0, i32 33
  %3747 = getelementptr inbounds %struct.Reg, %struct.Reg* %3746, i32 0, i32 0
  %PC.i1876 = bitcast %union.anon* %3747 to i64*
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3749 = getelementptr inbounds %struct.GPR, %struct.GPR* %3748, i32 0, i32 1
  %3750 = getelementptr inbounds %struct.Reg, %struct.Reg* %3749, i32 0, i32 0
  %RAX.i1877 = bitcast %union.anon* %3750 to i64*
  %3751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3752 = getelementptr inbounds %struct.GPR, %struct.GPR* %3751, i32 0, i32 15
  %3753 = getelementptr inbounds %struct.Reg, %struct.Reg* %3752, i32 0, i32 0
  %RBP.i1878 = bitcast %union.anon* %3753 to i64*
  %3754 = load i64, i64* %RBP.i1878
  %3755 = sub i64 %3754, 64
  %3756 = load i64, i64* %PC.i1876
  %3757 = add i64 %3756, 3
  store i64 %3757, i64* %PC.i1876
  %3758 = inttoptr i64 %3755 to i32*
  %3759 = load i32, i32* %3758
  %3760 = zext i32 %3759 to i64
  store i64 %3760, i64* %RAX.i1877, align 8
  store %struct.Memory* %loadMem_43a695, %struct.Memory** %MEMORY
  %loadMem_43a698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3762 = getelementptr inbounds %struct.GPR, %struct.GPR* %3761, i32 0, i32 33
  %3763 = getelementptr inbounds %struct.Reg, %struct.Reg* %3762, i32 0, i32 0
  %PC.i1874 = bitcast %union.anon* %3763 to i64*
  %3764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3765 = getelementptr inbounds %struct.GPR, %struct.GPR* %3764, i32 0, i32 1
  %3766 = getelementptr inbounds %struct.Reg, %struct.Reg* %3765, i32 0, i32 0
  %RAX.i1875 = bitcast %union.anon* %3766 to i64*
  %3767 = load i64, i64* %RAX.i1875
  %3768 = load i64, i64* %PC.i1874
  %3769 = add i64 %3768, 2
  store i64 %3769, i64* %PC.i1874
  %3770 = trunc i64 %3767 to i32
  %3771 = shl i32 %3770, 1
  %3772 = icmp slt i32 %3770, 0
  %3773 = icmp slt i32 %3771, 0
  %3774 = xor i1 %3772, %3773
  %3775 = zext i32 %3771 to i64
  store i64 %3775, i64* %RAX.i1875, align 8
  %3776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3777 = zext i1 %3772 to i8
  store i8 %3777, i8* %3776, align 1
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3779 = and i32 %3771, 254
  %3780 = call i32 @llvm.ctpop.i32(i32 %3779)
  %3781 = trunc i32 %3780 to i8
  %3782 = and i8 %3781, 1
  %3783 = xor i8 %3782, 1
  store i8 %3783, i8* %3778, align 1
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3784, align 1
  %3785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3786 = icmp eq i32 %3771, 0
  %3787 = zext i1 %3786 to i8
  store i8 %3787, i8* %3785, align 1
  %3788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3789 = lshr i32 %3771, 31
  %3790 = trunc i32 %3789 to i8
  store i8 %3790, i8* %3788, align 1
  %3791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3792 = zext i1 %3774 to i8
  store i8 %3792, i8* %3791, align 1
  store %struct.Memory* %loadMem_43a698, %struct.Memory** %MEMORY
  %loadMem_43a69b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3794 = getelementptr inbounds %struct.GPR, %struct.GPR* %3793, i32 0, i32 33
  %3795 = getelementptr inbounds %struct.Reg, %struct.Reg* %3794, i32 0, i32 0
  %PC.i1871 = bitcast %union.anon* %3795 to i64*
  %3796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3797 = getelementptr inbounds %struct.GPR, %struct.GPR* %3796, i32 0, i32 1
  %3798 = getelementptr inbounds %struct.Reg, %struct.Reg* %3797, i32 0, i32 0
  %EAX.i1872 = bitcast %union.anon* %3798 to i32*
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3800 = getelementptr inbounds %struct.GPR, %struct.GPR* %3799, i32 0, i32 15
  %3801 = getelementptr inbounds %struct.Reg, %struct.Reg* %3800, i32 0, i32 0
  %RBP.i1873 = bitcast %union.anon* %3801 to i64*
  %3802 = load i64, i64* %RBP.i1873
  %3803 = sub i64 %3802, 372
  %3804 = load i32, i32* %EAX.i1872
  %3805 = zext i32 %3804 to i64
  %3806 = load i64, i64* %PC.i1871
  %3807 = add i64 %3806, 6
  store i64 %3807, i64* %PC.i1871
  %3808 = inttoptr i64 %3803 to i32*
  store i32 %3804, i32* %3808
  store %struct.Memory* %loadMem_43a69b, %struct.Memory** %MEMORY
  %loadMem_43a6a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3810 = getelementptr inbounds %struct.GPR, %struct.GPR* %3809, i32 0, i32 33
  %3811 = getelementptr inbounds %struct.Reg, %struct.Reg* %3810, i32 0, i32 0
  %PC.i1870 = bitcast %union.anon* %3811 to i64*
  %3812 = load i64, i64* %PC.i1870
  %3813 = add i64 %3812, 14
  %3814 = load i64, i64* %PC.i1870
  %3815 = add i64 %3814, 5
  store i64 %3815, i64* %PC.i1870
  %3816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3813, i64* %3816, align 8
  store %struct.Memory* %loadMem_43a6a1, %struct.Memory** %MEMORY
  br label %block_.L_43a6af

block_.L_43a6a6:                                  ; preds = %block_43a681, %block_43a670
  %loadMem_43a6a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3818 = getelementptr inbounds %struct.GPR, %struct.GPR* %3817, i32 0, i32 33
  %3819 = getelementptr inbounds %struct.Reg, %struct.Reg* %3818, i32 0, i32 0
  %PC.i1867 = bitcast %union.anon* %3819 to i64*
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3821 = getelementptr inbounds %struct.GPR, %struct.GPR* %3820, i32 0, i32 1
  %3822 = getelementptr inbounds %struct.Reg, %struct.Reg* %3821, i32 0, i32 0
  %RAX.i1868 = bitcast %union.anon* %3822 to i64*
  %3823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3824 = getelementptr inbounds %struct.GPR, %struct.GPR* %3823, i32 0, i32 15
  %3825 = getelementptr inbounds %struct.Reg, %struct.Reg* %3824, i32 0, i32 0
  %RBP.i1869 = bitcast %union.anon* %3825 to i64*
  %3826 = load i64, i64* %RBP.i1869
  %3827 = sub i64 %3826, 64
  %3828 = load i64, i64* %PC.i1867
  %3829 = add i64 %3828, 3
  store i64 %3829, i64* %PC.i1867
  %3830 = inttoptr i64 %3827 to i32*
  %3831 = load i32, i32* %3830
  %3832 = zext i32 %3831 to i64
  store i64 %3832, i64* %RAX.i1868, align 8
  store %struct.Memory* %loadMem_43a6a6, %struct.Memory** %MEMORY
  %loadMem_43a6a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3834 = getelementptr inbounds %struct.GPR, %struct.GPR* %3833, i32 0, i32 33
  %3835 = getelementptr inbounds %struct.Reg, %struct.Reg* %3834, i32 0, i32 0
  %PC.i1864 = bitcast %union.anon* %3835 to i64*
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3837 = getelementptr inbounds %struct.GPR, %struct.GPR* %3836, i32 0, i32 1
  %3838 = getelementptr inbounds %struct.Reg, %struct.Reg* %3837, i32 0, i32 0
  %EAX.i1865 = bitcast %union.anon* %3838 to i32*
  %3839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3840 = getelementptr inbounds %struct.GPR, %struct.GPR* %3839, i32 0, i32 15
  %3841 = getelementptr inbounds %struct.Reg, %struct.Reg* %3840, i32 0, i32 0
  %RBP.i1866 = bitcast %union.anon* %3841 to i64*
  %3842 = load i64, i64* %RBP.i1866
  %3843 = sub i64 %3842, 372
  %3844 = load i32, i32* %EAX.i1865
  %3845 = zext i32 %3844 to i64
  %3846 = load i64, i64* %PC.i1864
  %3847 = add i64 %3846, 6
  store i64 %3847, i64* %PC.i1864
  %3848 = inttoptr i64 %3843 to i32*
  store i32 %3844, i32* %3848
  store %struct.Memory* %loadMem_43a6a9, %struct.Memory** %MEMORY
  br label %block_.L_43a6af

block_.L_43a6af:                                  ; preds = %block_.L_43a6a6, %block_43a695
  %loadMem_43a6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3850 = getelementptr inbounds %struct.GPR, %struct.GPR* %3849, i32 0, i32 33
  %3851 = getelementptr inbounds %struct.Reg, %struct.Reg* %3850, i32 0, i32 0
  %PC.i1861 = bitcast %union.anon* %3851 to i64*
  %3852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3853 = getelementptr inbounds %struct.GPR, %struct.GPR* %3852, i32 0, i32 1
  %3854 = getelementptr inbounds %struct.Reg, %struct.Reg* %3853, i32 0, i32 0
  %RAX.i1862 = bitcast %union.anon* %3854 to i64*
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3856 = getelementptr inbounds %struct.GPR, %struct.GPR* %3855, i32 0, i32 15
  %3857 = getelementptr inbounds %struct.Reg, %struct.Reg* %3856, i32 0, i32 0
  %RBP.i1863 = bitcast %union.anon* %3857 to i64*
  %3858 = load i64, i64* %RBP.i1863
  %3859 = sub i64 %3858, 372
  %3860 = load i64, i64* %PC.i1861
  %3861 = add i64 %3860, 6
  store i64 %3861, i64* %PC.i1861
  %3862 = inttoptr i64 %3859 to i32*
  %3863 = load i32, i32* %3862
  %3864 = zext i32 %3863 to i64
  store i64 %3864, i64* %RAX.i1862, align 8
  store %struct.Memory* %loadMem_43a6af, %struct.Memory** %MEMORY
  %loadMem_43a6b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3866 = getelementptr inbounds %struct.GPR, %struct.GPR* %3865, i32 0, i32 33
  %3867 = getelementptr inbounds %struct.Reg, %struct.Reg* %3866, i32 0, i32 0
  %PC.i1858 = bitcast %union.anon* %3867 to i64*
  %3868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3869 = getelementptr inbounds %struct.GPR, %struct.GPR* %3868, i32 0, i32 1
  %3870 = getelementptr inbounds %struct.Reg, %struct.Reg* %3869, i32 0, i32 0
  %EAX.i1859 = bitcast %union.anon* %3870 to i32*
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3872 = getelementptr inbounds %struct.GPR, %struct.GPR* %3871, i32 0, i32 15
  %3873 = getelementptr inbounds %struct.Reg, %struct.Reg* %3872, i32 0, i32 0
  %RBP.i1860 = bitcast %union.anon* %3873 to i64*
  %3874 = load i64, i64* %RBP.i1860
  %3875 = sub i64 %3874, 376
  %3876 = load i32, i32* %EAX.i1859
  %3877 = zext i32 %3876 to i64
  %3878 = load i64, i64* %PC.i1858
  %3879 = add i64 %3878, 6
  store i64 %3879, i64* %PC.i1858
  %3880 = inttoptr i64 %3875 to i32*
  store i32 %3876, i32* %3880
  store %struct.Memory* %loadMem_43a6b5, %struct.Memory** %MEMORY
  %loadMem_43a6bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3882 = getelementptr inbounds %struct.GPR, %struct.GPR* %3881, i32 0, i32 33
  %3883 = getelementptr inbounds %struct.Reg, %struct.Reg* %3882, i32 0, i32 0
  %PC.i1857 = bitcast %union.anon* %3883 to i64*
  %3884 = load i64, i64* %PC.i1857
  %3885 = add i64 %3884, 21
  %3886 = load i64, i64* %PC.i1857
  %3887 = add i64 %3886, 5
  store i64 %3887, i64* %PC.i1857
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3885, i64* %3888, align 8
  store %struct.Memory* %loadMem_43a6bb, %struct.Memory** %MEMORY
  br label %block_.L_43a6d0

block_.L_43a6c0:                                  ; preds = %block_.L_43a666
  %loadMem_43a6c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3890 = getelementptr inbounds %struct.GPR, %struct.GPR* %3889, i32 0, i32 33
  %3891 = getelementptr inbounds %struct.Reg, %struct.Reg* %3890, i32 0, i32 0
  %PC.i1855 = bitcast %union.anon* %3891 to i64*
  %3892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3893 = getelementptr inbounds %struct.GPR, %struct.GPR* %3892, i32 0, i32 1
  %3894 = getelementptr inbounds %struct.Reg, %struct.Reg* %3893, i32 0, i32 0
  %RAX.i1856 = bitcast %union.anon* %3894 to i64*
  %3895 = load i64, i64* %PC.i1855
  %3896 = add i64 %3895, 5
  store i64 %3896, i64* %PC.i1855
  store i64 1, i64* %RAX.i1856, align 8
  store %struct.Memory* %loadMem_43a6c0, %struct.Memory** %MEMORY
  %loadMem_43a6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3898 = getelementptr inbounds %struct.GPR, %struct.GPR* %3897, i32 0, i32 33
  %3899 = getelementptr inbounds %struct.Reg, %struct.Reg* %3898, i32 0, i32 0
  %PC.i1852 = bitcast %union.anon* %3899 to i64*
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3901 = getelementptr inbounds %struct.GPR, %struct.GPR* %3900, i32 0, i32 1
  %3902 = getelementptr inbounds %struct.Reg, %struct.Reg* %3901, i32 0, i32 0
  %EAX.i1853 = bitcast %union.anon* %3902 to i32*
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3904 = getelementptr inbounds %struct.GPR, %struct.GPR* %3903, i32 0, i32 15
  %3905 = getelementptr inbounds %struct.Reg, %struct.Reg* %3904, i32 0, i32 0
  %RBP.i1854 = bitcast %union.anon* %3905 to i64*
  %3906 = load i64, i64* %RBP.i1854
  %3907 = sub i64 %3906, 376
  %3908 = load i32, i32* %EAX.i1853
  %3909 = zext i32 %3908 to i64
  %3910 = load i64, i64* %PC.i1852
  %3911 = add i64 %3910, 6
  store i64 %3911, i64* %PC.i1852
  %3912 = inttoptr i64 %3907 to i32*
  store i32 %3908, i32* %3912
  store %struct.Memory* %loadMem_43a6c5, %struct.Memory** %MEMORY
  %loadMem_43a6cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3914 = getelementptr inbounds %struct.GPR, %struct.GPR* %3913, i32 0, i32 33
  %3915 = getelementptr inbounds %struct.Reg, %struct.Reg* %3914, i32 0, i32 0
  %PC.i1851 = bitcast %union.anon* %3915 to i64*
  %3916 = load i64, i64* %PC.i1851
  %3917 = add i64 %3916, 5
  %3918 = load i64, i64* %PC.i1851
  %3919 = add i64 %3918, 5
  store i64 %3919, i64* %PC.i1851
  %3920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3917, i64* %3920, align 8
  store %struct.Memory* %loadMem_43a6cb, %struct.Memory** %MEMORY
  br label %block_.L_43a6d0

block_.L_43a6d0:                                  ; preds = %block_.L_43a6c0, %block_.L_43a6af
  %loadMem_43a6d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3922 = getelementptr inbounds %struct.GPR, %struct.GPR* %3921, i32 0, i32 33
  %3923 = getelementptr inbounds %struct.Reg, %struct.Reg* %3922, i32 0, i32 0
  %PC.i1848 = bitcast %union.anon* %3923 to i64*
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3925 = getelementptr inbounds %struct.GPR, %struct.GPR* %3924, i32 0, i32 1
  %3926 = getelementptr inbounds %struct.Reg, %struct.Reg* %3925, i32 0, i32 0
  %RAX.i1849 = bitcast %union.anon* %3926 to i64*
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3928 = getelementptr inbounds %struct.GPR, %struct.GPR* %3927, i32 0, i32 15
  %3929 = getelementptr inbounds %struct.Reg, %struct.Reg* %3928, i32 0, i32 0
  %RBP.i1850 = bitcast %union.anon* %3929 to i64*
  %3930 = load i64, i64* %RBP.i1850
  %3931 = sub i64 %3930, 376
  %3932 = load i64, i64* %PC.i1848
  %3933 = add i64 %3932, 6
  store i64 %3933, i64* %PC.i1848
  %3934 = inttoptr i64 %3931 to i32*
  %3935 = load i32, i32* %3934
  %3936 = zext i32 %3935 to i64
  store i64 %3936, i64* %RAX.i1849, align 8
  store %struct.Memory* %loadMem_43a6d0, %struct.Memory** %MEMORY
  %loadMem_43a6d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3938 = getelementptr inbounds %struct.GPR, %struct.GPR* %3937, i32 0, i32 33
  %3939 = getelementptr inbounds %struct.Reg, %struct.Reg* %3938, i32 0, i32 0
  %PC.i1845 = bitcast %union.anon* %3939 to i64*
  %3940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3941 = getelementptr inbounds %struct.GPR, %struct.GPR* %3940, i32 0, i32 1
  %3942 = getelementptr inbounds %struct.Reg, %struct.Reg* %3941, i32 0, i32 0
  %EAX.i1846 = bitcast %union.anon* %3942 to i32*
  %3943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3944 = getelementptr inbounds %struct.GPR, %struct.GPR* %3943, i32 0, i32 15
  %3945 = getelementptr inbounds %struct.Reg, %struct.Reg* %3944, i32 0, i32 0
  %RBP.i1847 = bitcast %union.anon* %3945 to i64*
  %3946 = load i64, i64* %RBP.i1847
  %3947 = sub i64 %3946, 96
  %3948 = load i32, i32* %EAX.i1846
  %3949 = zext i32 %3948 to i64
  %3950 = load i64, i64* %PC.i1845
  %3951 = add i64 %3950, 3
  store i64 %3951, i64* %PC.i1845
  %3952 = inttoptr i64 %3947 to i32*
  store i32 %3948, i32* %3952
  store %struct.Memory* %loadMem_43a6d6, %struct.Memory** %MEMORY
  %loadMem_43a6d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3954 = getelementptr inbounds %struct.GPR, %struct.GPR* %3953, i32 0, i32 33
  %3955 = getelementptr inbounds %struct.Reg, %struct.Reg* %3954, i32 0, i32 0
  %PC.i1843 = bitcast %union.anon* %3955 to i64*
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3957 = getelementptr inbounds %struct.GPR, %struct.GPR* %3956, i32 0, i32 15
  %3958 = getelementptr inbounds %struct.Reg, %struct.Reg* %3957, i32 0, i32 0
  %RBP.i1844 = bitcast %union.anon* %3958 to i64*
  %3959 = load i64, i64* %RBP.i1844
  %3960 = sub i64 %3959, 56
  %3961 = load i64, i64* %PC.i1843
  %3962 = add i64 %3961, 4
  store i64 %3962, i64* %PC.i1843
  %3963 = inttoptr i64 %3960 to i32*
  %3964 = load i32, i32* %3963
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3965, align 1
  %3966 = and i32 %3964, 255
  %3967 = call i32 @llvm.ctpop.i32(i32 %3966)
  %3968 = trunc i32 %3967 to i8
  %3969 = and i8 %3968, 1
  %3970 = xor i8 %3969, 1
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3970, i8* %3971, align 1
  %3972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3972, align 1
  %3973 = icmp eq i32 %3964, 0
  %3974 = zext i1 %3973 to i8
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3974, i8* %3975, align 1
  %3976 = lshr i32 %3964, 31
  %3977 = trunc i32 %3976 to i8
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3977, i8* %3978, align 1
  %3979 = lshr i32 %3964, 31
  %3980 = xor i32 %3976, %3979
  %3981 = add i32 %3980, %3979
  %3982 = icmp eq i32 %3981, 2
  %3983 = zext i1 %3982 to i8
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3983, i8* %3984, align 1
  store %struct.Memory* %loadMem_43a6d9, %struct.Memory** %MEMORY
  %loadMem_43a6dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3986 = getelementptr inbounds %struct.GPR, %struct.GPR* %3985, i32 0, i32 33
  %3987 = getelementptr inbounds %struct.Reg, %struct.Reg* %3986, i32 0, i32 0
  %PC.i1842 = bitcast %union.anon* %3987 to i64*
  %3988 = load i64, i64* %PC.i1842
  %3989 = add i64 %3988, 86
  %3990 = load i64, i64* %PC.i1842
  %3991 = add i64 %3990, 6
  %3992 = load i64, i64* %PC.i1842
  %3993 = add i64 %3992, 6
  store i64 %3993, i64* %PC.i1842
  %3994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3995 = load i8, i8* %3994, align 1
  store i8 %3995, i8* %BRANCH_TAKEN, align 1
  %3996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3997 = icmp ne i8 %3995, 0
  %3998 = select i1 %3997, i64 %3989, i64 %3991
  store i64 %3998, i64* %3996, align 8
  store %struct.Memory* %loadMem_43a6dd, %struct.Memory** %MEMORY
  %loadBr_43a6dd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a6dd = icmp eq i8 %loadBr_43a6dd, 1
  br i1 %cmpBr_43a6dd, label %block_.L_43a733, label %block_43a6e3

block_43a6e3:                                     ; preds = %block_.L_43a6d0
  %loadMem_43a6e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 33
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %PC.i1840 = bitcast %union.anon* %4001 to i64*
  %4002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4003 = getelementptr inbounds %struct.GPR, %struct.GPR* %4002, i32 0, i32 1
  %4004 = getelementptr inbounds %struct.Reg, %struct.Reg* %4003, i32 0, i32 0
  %RAX.i1841 = bitcast %union.anon* %4004 to i64*
  %4005 = load i64, i64* %PC.i1840
  %4006 = add i64 %4005, 8
  store i64 %4006, i64* %PC.i1840
  %4007 = load i8, i8* getelementptr inbounds (%G_0x723694_type, %G_0x723694_type* @G_0x723694, i32 0, i32 0, i32 0)
  %4008 = zext i8 %4007 to i64
  store i64 %4008, i64* %RAX.i1841, align 8
  store %struct.Memory* %loadMem_43a6e3, %struct.Memory** %MEMORY
  %loadMem_43a6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4010 = getelementptr inbounds %struct.GPR, %struct.GPR* %4009, i32 0, i32 33
  %4011 = getelementptr inbounds %struct.Reg, %struct.Reg* %4010, i32 0, i32 0
  %PC.i1838 = bitcast %union.anon* %4011 to i64*
  %4012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4013 = getelementptr inbounds %struct.GPR, %struct.GPR* %4012, i32 0, i32 1
  %4014 = getelementptr inbounds %struct.Reg, %struct.Reg* %4013, i32 0, i32 0
  %EAX.i1839 = bitcast %union.anon* %4014 to i32*
  %4015 = load i32, i32* %EAX.i1839
  %4016 = zext i32 %4015 to i64
  %4017 = load i64, i64* %PC.i1838
  %4018 = add i64 %4017, 3
  store i64 %4018, i64* %PC.i1838
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4019, align 1
  %4020 = and i32 %4015, 255
  %4021 = call i32 @llvm.ctpop.i32(i32 %4020)
  %4022 = trunc i32 %4021 to i8
  %4023 = and i8 %4022, 1
  %4024 = xor i8 %4023, 1
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4024, i8* %4025, align 1
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4026, align 1
  %4027 = icmp eq i32 %4015, 0
  %4028 = zext i1 %4027 to i8
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4028, i8* %4029, align 1
  %4030 = lshr i32 %4015, 31
  %4031 = trunc i32 %4030 to i8
  %4032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4031, i8* %4032, align 1
  %4033 = lshr i32 %4015, 31
  %4034 = xor i32 %4030, %4033
  %4035 = add i32 %4034, %4033
  %4036 = icmp eq i32 %4035, 2
  %4037 = zext i1 %4036 to i8
  %4038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4037, i8* %4038, align 1
  store %struct.Memory* %loadMem_43a6eb, %struct.Memory** %MEMORY
  %loadMem_43a6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %4039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4040 = getelementptr inbounds %struct.GPR, %struct.GPR* %4039, i32 0, i32 33
  %4041 = getelementptr inbounds %struct.Reg, %struct.Reg* %4040, i32 0, i32 0
  %PC.i1837 = bitcast %union.anon* %4041 to i64*
  %4042 = load i64, i64* %PC.i1837
  %4043 = add i64 %4042, 43
  %4044 = load i64, i64* %PC.i1837
  %4045 = add i64 %4044, 6
  %4046 = load i64, i64* %PC.i1837
  %4047 = add i64 %4046, 6
  store i64 %4047, i64* %PC.i1837
  %4048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4049 = load i8, i8* %4048, align 1
  store i8 %4049, i8* %BRANCH_TAKEN, align 1
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4051 = icmp ne i8 %4049, 0
  %4052 = select i1 %4051, i64 %4043, i64 %4045
  store i64 %4052, i64* %4050, align 8
  store %struct.Memory* %loadMem_43a6ee, %struct.Memory** %MEMORY
  %loadBr_43a6ee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a6ee = icmp eq i8 %loadBr_43a6ee, 1
  br i1 %cmpBr_43a6ee, label %block_.L_43a719, label %block_43a6f4

block_43a6f4:                                     ; preds = %block_43a6e3
  %loadMem_43a6f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4054 = getelementptr inbounds %struct.GPR, %struct.GPR* %4053, i32 0, i32 33
  %4055 = getelementptr inbounds %struct.Reg, %struct.Reg* %4054, i32 0, i32 0
  %PC.i1834 = bitcast %union.anon* %4055 to i64*
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4057 = getelementptr inbounds %struct.GPR, %struct.GPR* %4056, i32 0, i32 1
  %4058 = getelementptr inbounds %struct.Reg, %struct.Reg* %4057, i32 0, i32 0
  %RAX.i1835 = bitcast %union.anon* %4058 to i64*
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4060 = getelementptr inbounds %struct.GPR, %struct.GPR* %4059, i32 0, i32 15
  %4061 = getelementptr inbounds %struct.Reg, %struct.Reg* %4060, i32 0, i32 0
  %RBP.i1836 = bitcast %union.anon* %4061 to i64*
  %4062 = load i64, i64* %RBP.i1836
  %4063 = sub i64 %4062, 248
  %4064 = load i64, i64* %PC.i1834
  %4065 = add i64 %4064, 7
  store i64 %4065, i64* %PC.i1834
  %4066 = inttoptr i64 %4063 to i64*
  %4067 = load i64, i64* %4066
  store i64 %4067, i64* %RAX.i1835, align 8
  store %struct.Memory* %loadMem_43a6f4, %struct.Memory** %MEMORY
  %loadMem_43a6fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4069 = getelementptr inbounds %struct.GPR, %struct.GPR* %4068, i32 0, i32 33
  %4070 = getelementptr inbounds %struct.Reg, %struct.Reg* %4069, i32 0, i32 0
  %PC.i1832 = bitcast %union.anon* %4070 to i64*
  %4071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4072 = getelementptr inbounds %struct.GPR, %struct.GPR* %4071, i32 0, i32 1
  %4073 = getelementptr inbounds %struct.Reg, %struct.Reg* %4072, i32 0, i32 0
  %RAX.i1833 = bitcast %union.anon* %4073 to i64*
  %4074 = load i64, i64* %RAX.i1833
  %4075 = add i64 %4074, 532
  %4076 = load i64, i64* %PC.i1832
  %4077 = add i64 %4076, 7
  store i64 %4077, i64* %PC.i1832
  %4078 = inttoptr i64 %4075 to i32*
  %4079 = load i32, i32* %4078
  %4080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4080, align 1
  %4081 = and i32 %4079, 255
  %4082 = call i32 @llvm.ctpop.i32(i32 %4081)
  %4083 = trunc i32 %4082 to i8
  %4084 = and i8 %4083, 1
  %4085 = xor i8 %4084, 1
  %4086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4085, i8* %4086, align 1
  %4087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4087, align 1
  %4088 = icmp eq i32 %4079, 0
  %4089 = zext i1 %4088 to i8
  %4090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4089, i8* %4090, align 1
  %4091 = lshr i32 %4079, 31
  %4092 = trunc i32 %4091 to i8
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4092, i8* %4093, align 1
  %4094 = lshr i32 %4079, 31
  %4095 = xor i32 %4091, %4094
  %4096 = add i32 %4095, %4094
  %4097 = icmp eq i32 %4096, 2
  %4098 = zext i1 %4097 to i8
  %4099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4098, i8* %4099, align 1
  store %struct.Memory* %loadMem_43a6fb, %struct.Memory** %MEMORY
  %loadMem_43a702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4101 = getelementptr inbounds %struct.GPR, %struct.GPR* %4100, i32 0, i32 33
  %4102 = getelementptr inbounds %struct.Reg, %struct.Reg* %4101, i32 0, i32 0
  %PC.i1831 = bitcast %union.anon* %4102 to i64*
  %4103 = load i64, i64* %PC.i1831
  %4104 = add i64 %4103, 23
  %4105 = load i64, i64* %PC.i1831
  %4106 = add i64 %4105, 6
  %4107 = load i64, i64* %PC.i1831
  %4108 = add i64 %4107, 6
  store i64 %4108, i64* %PC.i1831
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4110 = load i8, i8* %4109, align 1
  %4111 = icmp eq i8 %4110, 0
  %4112 = zext i1 %4111 to i8
  store i8 %4112, i8* %BRANCH_TAKEN, align 1
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4114 = select i1 %4111, i64 %4104, i64 %4106
  store i64 %4114, i64* %4113, align 8
  store %struct.Memory* %loadMem_43a702, %struct.Memory** %MEMORY
  %loadBr_43a702 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a702 = icmp eq i8 %loadBr_43a702, 1
  br i1 %cmpBr_43a702, label %block_.L_43a719, label %block_43a708

block_43a708:                                     ; preds = %block_43a6f4
  %loadMem_43a708 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4116 = getelementptr inbounds %struct.GPR, %struct.GPR* %4115, i32 0, i32 33
  %4117 = getelementptr inbounds %struct.Reg, %struct.Reg* %4116, i32 0, i32 0
  %PC.i1828 = bitcast %union.anon* %4117 to i64*
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4119 = getelementptr inbounds %struct.GPR, %struct.GPR* %4118, i32 0, i32 1
  %4120 = getelementptr inbounds %struct.Reg, %struct.Reg* %4119, i32 0, i32 0
  %RAX.i1829 = bitcast %union.anon* %4120 to i64*
  %4121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4122 = getelementptr inbounds %struct.GPR, %struct.GPR* %4121, i32 0, i32 15
  %4123 = getelementptr inbounds %struct.Reg, %struct.Reg* %4122, i32 0, i32 0
  %RBP.i1830 = bitcast %union.anon* %4123 to i64*
  %4124 = load i64, i64* %RBP.i1830
  %4125 = sub i64 %4124, 64
  %4126 = load i64, i64* %PC.i1828
  %4127 = add i64 %4126, 3
  store i64 %4127, i64* %PC.i1828
  %4128 = inttoptr i64 %4125 to i32*
  %4129 = load i32, i32* %4128
  %4130 = zext i32 %4129 to i64
  store i64 %4130, i64* %RAX.i1829, align 8
  store %struct.Memory* %loadMem_43a708, %struct.Memory** %MEMORY
  %loadMem_43a70b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4132 = getelementptr inbounds %struct.GPR, %struct.GPR* %4131, i32 0, i32 33
  %4133 = getelementptr inbounds %struct.Reg, %struct.Reg* %4132, i32 0, i32 0
  %PC.i1826 = bitcast %union.anon* %4133 to i64*
  %4134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4135 = getelementptr inbounds %struct.GPR, %struct.GPR* %4134, i32 0, i32 1
  %4136 = getelementptr inbounds %struct.Reg, %struct.Reg* %4135, i32 0, i32 0
  %RAX.i1827 = bitcast %union.anon* %4136 to i64*
  %4137 = load i64, i64* %RAX.i1827
  %4138 = load i64, i64* %PC.i1826
  %4139 = add i64 %4138, 2
  store i64 %4139, i64* %PC.i1826
  %4140 = trunc i64 %4137 to i32
  %4141 = shl i32 %4140, 1
  %4142 = icmp slt i32 %4140, 0
  %4143 = icmp slt i32 %4141, 0
  %4144 = xor i1 %4142, %4143
  %4145 = zext i32 %4141 to i64
  store i64 %4145, i64* %RAX.i1827, align 8
  %4146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4147 = zext i1 %4142 to i8
  store i8 %4147, i8* %4146, align 1
  %4148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4149 = and i32 %4141, 254
  %4150 = call i32 @llvm.ctpop.i32(i32 %4149)
  %4151 = trunc i32 %4150 to i8
  %4152 = and i8 %4151, 1
  %4153 = xor i8 %4152, 1
  store i8 %4153, i8* %4148, align 1
  %4154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4154, align 1
  %4155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4156 = icmp eq i32 %4141, 0
  %4157 = zext i1 %4156 to i8
  store i8 %4157, i8* %4155, align 1
  %4158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4159 = lshr i32 %4141, 31
  %4160 = trunc i32 %4159 to i8
  store i8 %4160, i8* %4158, align 1
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4162 = zext i1 %4144 to i8
  store i8 %4162, i8* %4161, align 1
  store %struct.Memory* %loadMem_43a70b, %struct.Memory** %MEMORY
  %loadMem_43a70e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4164 = getelementptr inbounds %struct.GPR, %struct.GPR* %4163, i32 0, i32 33
  %4165 = getelementptr inbounds %struct.Reg, %struct.Reg* %4164, i32 0, i32 0
  %PC.i1823 = bitcast %union.anon* %4165 to i64*
  %4166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4167 = getelementptr inbounds %struct.GPR, %struct.GPR* %4166, i32 0, i32 1
  %4168 = getelementptr inbounds %struct.Reg, %struct.Reg* %4167, i32 0, i32 0
  %EAX.i1824 = bitcast %union.anon* %4168 to i32*
  %4169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4170 = getelementptr inbounds %struct.GPR, %struct.GPR* %4169, i32 0, i32 15
  %4171 = getelementptr inbounds %struct.Reg, %struct.Reg* %4170, i32 0, i32 0
  %RBP.i1825 = bitcast %union.anon* %4171 to i64*
  %4172 = load i64, i64* %RBP.i1825
  %4173 = sub i64 %4172, 380
  %4174 = load i32, i32* %EAX.i1824
  %4175 = zext i32 %4174 to i64
  %4176 = load i64, i64* %PC.i1823
  %4177 = add i64 %4176, 6
  store i64 %4177, i64* %PC.i1823
  %4178 = inttoptr i64 %4173 to i32*
  store i32 %4174, i32* %4178
  store %struct.Memory* %loadMem_43a70e, %struct.Memory** %MEMORY
  %loadMem_43a714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4180 = getelementptr inbounds %struct.GPR, %struct.GPR* %4179, i32 0, i32 33
  %4181 = getelementptr inbounds %struct.Reg, %struct.Reg* %4180, i32 0, i32 0
  %PC.i1822 = bitcast %union.anon* %4181 to i64*
  %4182 = load i64, i64* %PC.i1822
  %4183 = add i64 %4182, 14
  %4184 = load i64, i64* %PC.i1822
  %4185 = add i64 %4184, 5
  store i64 %4185, i64* %PC.i1822
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4183, i64* %4186, align 8
  store %struct.Memory* %loadMem_43a714, %struct.Memory** %MEMORY
  br label %block_.L_43a722

block_.L_43a719:                                  ; preds = %block_43a6f4, %block_43a6e3
  %loadMem_43a719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4188 = getelementptr inbounds %struct.GPR, %struct.GPR* %4187, i32 0, i32 33
  %4189 = getelementptr inbounds %struct.Reg, %struct.Reg* %4188, i32 0, i32 0
  %PC.i1819 = bitcast %union.anon* %4189 to i64*
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4191 = getelementptr inbounds %struct.GPR, %struct.GPR* %4190, i32 0, i32 1
  %4192 = getelementptr inbounds %struct.Reg, %struct.Reg* %4191, i32 0, i32 0
  %RAX.i1820 = bitcast %union.anon* %4192 to i64*
  %4193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4194 = getelementptr inbounds %struct.GPR, %struct.GPR* %4193, i32 0, i32 15
  %4195 = getelementptr inbounds %struct.Reg, %struct.Reg* %4194, i32 0, i32 0
  %RBP.i1821 = bitcast %union.anon* %4195 to i64*
  %4196 = load i64, i64* %RBP.i1821
  %4197 = sub i64 %4196, 64
  %4198 = load i64, i64* %PC.i1819
  %4199 = add i64 %4198, 3
  store i64 %4199, i64* %PC.i1819
  %4200 = inttoptr i64 %4197 to i32*
  %4201 = load i32, i32* %4200
  %4202 = zext i32 %4201 to i64
  store i64 %4202, i64* %RAX.i1820, align 8
  store %struct.Memory* %loadMem_43a719, %struct.Memory** %MEMORY
  %loadMem_43a71c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4204 = getelementptr inbounds %struct.GPR, %struct.GPR* %4203, i32 0, i32 33
  %4205 = getelementptr inbounds %struct.Reg, %struct.Reg* %4204, i32 0, i32 0
  %PC.i1816 = bitcast %union.anon* %4205 to i64*
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4207 = getelementptr inbounds %struct.GPR, %struct.GPR* %4206, i32 0, i32 1
  %4208 = getelementptr inbounds %struct.Reg, %struct.Reg* %4207, i32 0, i32 0
  %EAX.i1817 = bitcast %union.anon* %4208 to i32*
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 15
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %RBP.i1818 = bitcast %union.anon* %4211 to i64*
  %4212 = load i64, i64* %RBP.i1818
  %4213 = sub i64 %4212, 380
  %4214 = load i32, i32* %EAX.i1817
  %4215 = zext i32 %4214 to i64
  %4216 = load i64, i64* %PC.i1816
  %4217 = add i64 %4216, 6
  store i64 %4217, i64* %PC.i1816
  %4218 = inttoptr i64 %4213 to i32*
  store i32 %4214, i32* %4218
  store %struct.Memory* %loadMem_43a71c, %struct.Memory** %MEMORY
  br label %block_.L_43a722

block_.L_43a722:                                  ; preds = %block_.L_43a719, %block_43a708
  %loadMem_43a722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4220 = getelementptr inbounds %struct.GPR, %struct.GPR* %4219, i32 0, i32 33
  %4221 = getelementptr inbounds %struct.Reg, %struct.Reg* %4220, i32 0, i32 0
  %PC.i1813 = bitcast %union.anon* %4221 to i64*
  %4222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4223 = getelementptr inbounds %struct.GPR, %struct.GPR* %4222, i32 0, i32 1
  %4224 = getelementptr inbounds %struct.Reg, %struct.Reg* %4223, i32 0, i32 0
  %RAX.i1814 = bitcast %union.anon* %4224 to i64*
  %4225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4226 = getelementptr inbounds %struct.GPR, %struct.GPR* %4225, i32 0, i32 15
  %4227 = getelementptr inbounds %struct.Reg, %struct.Reg* %4226, i32 0, i32 0
  %RBP.i1815 = bitcast %union.anon* %4227 to i64*
  %4228 = load i64, i64* %RBP.i1815
  %4229 = sub i64 %4228, 380
  %4230 = load i64, i64* %PC.i1813
  %4231 = add i64 %4230, 6
  store i64 %4231, i64* %PC.i1813
  %4232 = inttoptr i64 %4229 to i32*
  %4233 = load i32, i32* %4232
  %4234 = zext i32 %4233 to i64
  store i64 %4234, i64* %RAX.i1814, align 8
  store %struct.Memory* %loadMem_43a722, %struct.Memory** %MEMORY
  %loadMem_43a728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4236 = getelementptr inbounds %struct.GPR, %struct.GPR* %4235, i32 0, i32 33
  %4237 = getelementptr inbounds %struct.Reg, %struct.Reg* %4236, i32 0, i32 0
  %PC.i1810 = bitcast %union.anon* %4237 to i64*
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4239 = getelementptr inbounds %struct.GPR, %struct.GPR* %4238, i32 0, i32 1
  %4240 = getelementptr inbounds %struct.Reg, %struct.Reg* %4239, i32 0, i32 0
  %EAX.i1811 = bitcast %union.anon* %4240 to i32*
  %4241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4242 = getelementptr inbounds %struct.GPR, %struct.GPR* %4241, i32 0, i32 15
  %4243 = getelementptr inbounds %struct.Reg, %struct.Reg* %4242, i32 0, i32 0
  %RBP.i1812 = bitcast %union.anon* %4243 to i64*
  %4244 = load i64, i64* %RBP.i1812
  %4245 = sub i64 %4244, 384
  %4246 = load i32, i32* %EAX.i1811
  %4247 = zext i32 %4246 to i64
  %4248 = load i64, i64* %PC.i1810
  %4249 = add i64 %4248, 6
  store i64 %4249, i64* %PC.i1810
  %4250 = inttoptr i64 %4245 to i32*
  store i32 %4246, i32* %4250
  store %struct.Memory* %loadMem_43a728, %struct.Memory** %MEMORY
  %loadMem_43a72e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4252 = getelementptr inbounds %struct.GPR, %struct.GPR* %4251, i32 0, i32 33
  %4253 = getelementptr inbounds %struct.Reg, %struct.Reg* %4252, i32 0, i32 0
  %PC.i1809 = bitcast %union.anon* %4253 to i64*
  %4254 = load i64, i64* %PC.i1809
  %4255 = add i64 %4254, 21
  %4256 = load i64, i64* %PC.i1809
  %4257 = add i64 %4256, 5
  store i64 %4257, i64* %PC.i1809
  %4258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4255, i64* %4258, align 8
  store %struct.Memory* %loadMem_43a72e, %struct.Memory** %MEMORY
  br label %block_.L_43a743

block_.L_43a733:                                  ; preds = %block_.L_43a6d0
  %loadMem_43a733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4260 = getelementptr inbounds %struct.GPR, %struct.GPR* %4259, i32 0, i32 33
  %4261 = getelementptr inbounds %struct.Reg, %struct.Reg* %4260, i32 0, i32 0
  %PC.i1807 = bitcast %union.anon* %4261 to i64*
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4263 = getelementptr inbounds %struct.GPR, %struct.GPR* %4262, i32 0, i32 1
  %4264 = getelementptr inbounds %struct.Reg, %struct.Reg* %4263, i32 0, i32 0
  %RAX.i1808 = bitcast %union.anon* %4264 to i64*
  %4265 = load i64, i64* %PC.i1807
  %4266 = add i64 %4265, 5
  store i64 %4266, i64* %PC.i1807
  store i64 1, i64* %RAX.i1808, align 8
  store %struct.Memory* %loadMem_43a733, %struct.Memory** %MEMORY
  %loadMem_43a738 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4268 = getelementptr inbounds %struct.GPR, %struct.GPR* %4267, i32 0, i32 33
  %4269 = getelementptr inbounds %struct.Reg, %struct.Reg* %4268, i32 0, i32 0
  %PC.i1804 = bitcast %union.anon* %4269 to i64*
  %4270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4271 = getelementptr inbounds %struct.GPR, %struct.GPR* %4270, i32 0, i32 1
  %4272 = getelementptr inbounds %struct.Reg, %struct.Reg* %4271, i32 0, i32 0
  %EAX.i1805 = bitcast %union.anon* %4272 to i32*
  %4273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4274 = getelementptr inbounds %struct.GPR, %struct.GPR* %4273, i32 0, i32 15
  %4275 = getelementptr inbounds %struct.Reg, %struct.Reg* %4274, i32 0, i32 0
  %RBP.i1806 = bitcast %union.anon* %4275 to i64*
  %4276 = load i64, i64* %RBP.i1806
  %4277 = sub i64 %4276, 384
  %4278 = load i32, i32* %EAX.i1805
  %4279 = zext i32 %4278 to i64
  %4280 = load i64, i64* %PC.i1804
  %4281 = add i64 %4280, 6
  store i64 %4281, i64* %PC.i1804
  %4282 = inttoptr i64 %4277 to i32*
  store i32 %4278, i32* %4282
  store %struct.Memory* %loadMem_43a738, %struct.Memory** %MEMORY
  %loadMem_43a73e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4284 = getelementptr inbounds %struct.GPR, %struct.GPR* %4283, i32 0, i32 33
  %4285 = getelementptr inbounds %struct.Reg, %struct.Reg* %4284, i32 0, i32 0
  %PC.i1803 = bitcast %union.anon* %4285 to i64*
  %4286 = load i64, i64* %PC.i1803
  %4287 = add i64 %4286, 5
  %4288 = load i64, i64* %PC.i1803
  %4289 = add i64 %4288, 5
  store i64 %4289, i64* %PC.i1803
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4287, i64* %4290, align 8
  store %struct.Memory* %loadMem_43a73e, %struct.Memory** %MEMORY
  br label %block_.L_43a743

block_.L_43a743:                                  ; preds = %block_.L_43a733, %block_.L_43a722
  %loadMem_43a743 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4292 = getelementptr inbounds %struct.GPR, %struct.GPR* %4291, i32 0, i32 33
  %4293 = getelementptr inbounds %struct.Reg, %struct.Reg* %4292, i32 0, i32 0
  %PC.i1800 = bitcast %union.anon* %4293 to i64*
  %4294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4295 = getelementptr inbounds %struct.GPR, %struct.GPR* %4294, i32 0, i32 1
  %4296 = getelementptr inbounds %struct.Reg, %struct.Reg* %4295, i32 0, i32 0
  %RAX.i1801 = bitcast %union.anon* %4296 to i64*
  %4297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4298 = getelementptr inbounds %struct.GPR, %struct.GPR* %4297, i32 0, i32 15
  %4299 = getelementptr inbounds %struct.Reg, %struct.Reg* %4298, i32 0, i32 0
  %RBP.i1802 = bitcast %union.anon* %4299 to i64*
  %4300 = load i64, i64* %RBP.i1802
  %4301 = sub i64 %4300, 384
  %4302 = load i64, i64* %PC.i1800
  %4303 = add i64 %4302, 6
  store i64 %4303, i64* %PC.i1800
  %4304 = inttoptr i64 %4301 to i32*
  %4305 = load i32, i32* %4304
  %4306 = zext i32 %4305 to i64
  store i64 %4306, i64* %RAX.i1801, align 8
  store %struct.Memory* %loadMem_43a743, %struct.Memory** %MEMORY
  %loadMem_43a749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4308 = getelementptr inbounds %struct.GPR, %struct.GPR* %4307, i32 0, i32 33
  %4309 = getelementptr inbounds %struct.Reg, %struct.Reg* %4308, i32 0, i32 0
  %PC.i1797 = bitcast %union.anon* %4309 to i64*
  %4310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4311 = getelementptr inbounds %struct.GPR, %struct.GPR* %4310, i32 0, i32 1
  %4312 = getelementptr inbounds %struct.Reg, %struct.Reg* %4311, i32 0, i32 0
  %EAX.i1798 = bitcast %union.anon* %4312 to i32*
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4314 = getelementptr inbounds %struct.GPR, %struct.GPR* %4313, i32 0, i32 15
  %4315 = getelementptr inbounds %struct.Reg, %struct.Reg* %4314, i32 0, i32 0
  %RBP.i1799 = bitcast %union.anon* %4315 to i64*
  %4316 = load i64, i64* %RBP.i1799
  %4317 = sub i64 %4316, 92
  %4318 = load i32, i32* %EAX.i1798
  %4319 = zext i32 %4318 to i64
  %4320 = load i64, i64* %PC.i1797
  %4321 = add i64 %4320, 3
  store i64 %4321, i64* %PC.i1797
  %4322 = inttoptr i64 %4317 to i32*
  store i32 %4318, i32* %4322
  store %struct.Memory* %loadMem_43a749, %struct.Memory** %MEMORY
  %loadMem_43a74c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4324 = getelementptr inbounds %struct.GPR, %struct.GPR* %4323, i32 0, i32 33
  %4325 = getelementptr inbounds %struct.Reg, %struct.Reg* %4324, i32 0, i32 0
  %PC.i1794 = bitcast %union.anon* %4325 to i64*
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4327 = getelementptr inbounds %struct.GPR, %struct.GPR* %4326, i32 0, i32 5
  %4328 = getelementptr inbounds %struct.Reg, %struct.Reg* %4327, i32 0, i32 0
  %RCX.i1795 = bitcast %union.anon* %4328 to i64*
  %4329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4330 = getelementptr inbounds %struct.GPR, %struct.GPR* %4329, i32 0, i32 15
  %4331 = getelementptr inbounds %struct.Reg, %struct.Reg* %4330, i32 0, i32 0
  %RBP.i1796 = bitcast %union.anon* %4331 to i64*
  %4332 = load i64, i64* %RBP.i1796
  %4333 = sub i64 %4332, 24
  %4334 = load i64, i64* %PC.i1794
  %4335 = add i64 %4334, 4
  store i64 %4335, i64* %PC.i1794
  %4336 = inttoptr i64 %4333 to i64*
  %4337 = load i64, i64* %4336
  store i64 %4337, i64* %RCX.i1795, align 8
  store %struct.Memory* %loadMem_43a74c, %struct.Memory** %MEMORY
  %loadMem_43a750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4339 = getelementptr inbounds %struct.GPR, %struct.GPR* %4338, i32 0, i32 33
  %4340 = getelementptr inbounds %struct.Reg, %struct.Reg* %4339, i32 0, i32 0
  %PC.i1791 = bitcast %union.anon* %4340 to i64*
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4342 = getelementptr inbounds %struct.GPR, %struct.GPR* %4341, i32 0, i32 7
  %4343 = getelementptr inbounds %struct.Reg, %struct.Reg* %4342, i32 0, i32 0
  %RDX.i1792 = bitcast %union.anon* %4343 to i64*
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4345 = getelementptr inbounds %struct.GPR, %struct.GPR* %4344, i32 0, i32 15
  %4346 = getelementptr inbounds %struct.Reg, %struct.Reg* %4345, i32 0, i32 0
  %RBP.i1793 = bitcast %union.anon* %4346 to i64*
  %4347 = load i64, i64* %RBP.i1793
  %4348 = sub i64 %4347, 276
  %4349 = load i64, i64* %PC.i1791
  %4350 = add i64 %4349, 7
  store i64 %4350, i64* %PC.i1791
  %4351 = inttoptr i64 %4348 to i32*
  %4352 = load i32, i32* %4351
  %4353 = sext i32 %4352 to i64
  store i64 %4353, i64* %RDX.i1792, align 8
  store %struct.Memory* %loadMem_43a750, %struct.Memory** %MEMORY
  %loadMem_43a757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4355 = getelementptr inbounds %struct.GPR, %struct.GPR* %4354, i32 0, i32 33
  %4356 = getelementptr inbounds %struct.Reg, %struct.Reg* %4355, i32 0, i32 0
  %PC.i1788 = bitcast %union.anon* %4356 to i64*
  %4357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4358 = getelementptr inbounds %struct.GPR, %struct.GPR* %4357, i32 0, i32 5
  %4359 = getelementptr inbounds %struct.Reg, %struct.Reg* %4358, i32 0, i32 0
  %RCX.i1789 = bitcast %union.anon* %4359 to i64*
  %4360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4361 = getelementptr inbounds %struct.GPR, %struct.GPR* %4360, i32 0, i32 7
  %4362 = getelementptr inbounds %struct.Reg, %struct.Reg* %4361, i32 0, i32 0
  %RDX.i1790 = bitcast %union.anon* %4362 to i64*
  %4363 = load i64, i64* %RCX.i1789
  %4364 = load i64, i64* %RDX.i1790
  %4365 = mul i64 %4364, 8
  %4366 = add i64 %4365, %4363
  %4367 = load i64, i64* %PC.i1788
  %4368 = add i64 %4367, 4
  store i64 %4368, i64* %PC.i1788
  %4369 = inttoptr i64 %4366 to i64*
  %4370 = load i64, i64* %4369
  store i64 %4370, i64* %RCX.i1789, align 8
  store %struct.Memory* %loadMem_43a757, %struct.Memory** %MEMORY
  %loadMem_43a75b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4372 = getelementptr inbounds %struct.GPR, %struct.GPR* %4371, i32 0, i32 33
  %4373 = getelementptr inbounds %struct.Reg, %struct.Reg* %4372, i32 0, i32 0
  %PC.i1785 = bitcast %union.anon* %4373 to i64*
  %4374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4375 = getelementptr inbounds %struct.GPR, %struct.GPR* %4374, i32 0, i32 7
  %4376 = getelementptr inbounds %struct.Reg, %struct.Reg* %4375, i32 0, i32 0
  %RDX.i1786 = bitcast %union.anon* %4376 to i64*
  %4377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4378 = getelementptr inbounds %struct.GPR, %struct.GPR* %4377, i32 0, i32 15
  %4379 = getelementptr inbounds %struct.Reg, %struct.Reg* %4378, i32 0, i32 0
  %RBP.i1787 = bitcast %union.anon* %4379 to i64*
  %4380 = load i64, i64* %RBP.i1787
  %4381 = sub i64 %4380, 280
  %4382 = load i64, i64* %PC.i1785
  %4383 = add i64 %4382, 7
  store i64 %4383, i64* %PC.i1785
  %4384 = inttoptr i64 %4381 to i32*
  %4385 = load i32, i32* %4384
  %4386 = sext i32 %4385 to i64
  store i64 %4386, i64* %RDX.i1786, align 8
  store %struct.Memory* %loadMem_43a75b, %struct.Memory** %MEMORY
  %loadMem_43a762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4388 = getelementptr inbounds %struct.GPR, %struct.GPR* %4387, i32 0, i32 33
  %4389 = getelementptr inbounds %struct.Reg, %struct.Reg* %4388, i32 0, i32 0
  %PC.i1783 = bitcast %union.anon* %4389 to i64*
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4391 = getelementptr inbounds %struct.GPR, %struct.GPR* %4390, i32 0, i32 7
  %4392 = getelementptr inbounds %struct.Reg, %struct.Reg* %4391, i32 0, i32 0
  %RDX.i1784 = bitcast %union.anon* %4392 to i64*
  %4393 = load i64, i64* %RDX.i1784
  %4394 = load i64, i64* %PC.i1783
  %4395 = add i64 %4394, 3
  store i64 %4395, i64* %PC.i1783
  %4396 = shl i64 %4393, 1
  %4397 = icmp slt i64 %4393, 0
  %4398 = icmp slt i64 %4396, 0
  %4399 = xor i1 %4397, %4398
  store i64 %4396, i64* %RDX.i1784, align 8
  %4400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4401 = zext i1 %4397 to i8
  store i8 %4401, i8* %4400, align 1
  %4402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4403 = trunc i64 %4396 to i32
  %4404 = and i32 %4403, 254
  %4405 = call i32 @llvm.ctpop.i32(i32 %4404)
  %4406 = trunc i32 %4405 to i8
  %4407 = and i8 %4406, 1
  %4408 = xor i8 %4407, 1
  store i8 %4408, i8* %4402, align 1
  %4409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4409, align 1
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4411 = icmp eq i64 %4396, 0
  %4412 = zext i1 %4411 to i8
  store i8 %4412, i8* %4410, align 1
  %4413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4414 = lshr i64 %4396, 63
  %4415 = trunc i64 %4414 to i8
  store i8 %4415, i8* %4413, align 1
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4417 = zext i1 %4399 to i8
  store i8 %4417, i8* %4416, align 1
  store %struct.Memory* %loadMem_43a762, %struct.Memory** %MEMORY
  %loadMem_43a766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4419 = getelementptr inbounds %struct.GPR, %struct.GPR* %4418, i32 0, i32 33
  %4420 = getelementptr inbounds %struct.Reg, %struct.Reg* %4419, i32 0, i32 0
  %PC.i1780 = bitcast %union.anon* %4420 to i64*
  %4421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4422 = getelementptr inbounds %struct.GPR, %struct.GPR* %4421, i32 0, i32 5
  %4423 = getelementptr inbounds %struct.Reg, %struct.Reg* %4422, i32 0, i32 0
  %RCX.i1781 = bitcast %union.anon* %4423 to i64*
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4425 = getelementptr inbounds %struct.GPR, %struct.GPR* %4424, i32 0, i32 7
  %4426 = getelementptr inbounds %struct.Reg, %struct.Reg* %4425, i32 0, i32 0
  %RDX.i1782 = bitcast %union.anon* %4426 to i64*
  %4427 = load i64, i64* %RCX.i1781
  %4428 = load i64, i64* %RDX.i1782
  %4429 = load i64, i64* %PC.i1780
  %4430 = add i64 %4429, 3
  store i64 %4430, i64* %PC.i1780
  %4431 = add i64 %4428, %4427
  store i64 %4431, i64* %RCX.i1781, align 8
  %4432 = icmp ult i64 %4431, %4427
  %4433 = icmp ult i64 %4431, %4428
  %4434 = or i1 %4432, %4433
  %4435 = zext i1 %4434 to i8
  %4436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4435, i8* %4436, align 1
  %4437 = trunc i64 %4431 to i32
  %4438 = and i32 %4437, 255
  %4439 = call i32 @llvm.ctpop.i32(i32 %4438)
  %4440 = trunc i32 %4439 to i8
  %4441 = and i8 %4440, 1
  %4442 = xor i8 %4441, 1
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4442, i8* %4443, align 1
  %4444 = xor i64 %4428, %4427
  %4445 = xor i64 %4444, %4431
  %4446 = lshr i64 %4445, 4
  %4447 = trunc i64 %4446 to i8
  %4448 = and i8 %4447, 1
  %4449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4448, i8* %4449, align 1
  %4450 = icmp eq i64 %4431, 0
  %4451 = zext i1 %4450 to i8
  %4452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4451, i8* %4452, align 1
  %4453 = lshr i64 %4431, 63
  %4454 = trunc i64 %4453 to i8
  %4455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4454, i8* %4455, align 1
  %4456 = lshr i64 %4427, 63
  %4457 = lshr i64 %4428, 63
  %4458 = xor i64 %4453, %4456
  %4459 = xor i64 %4453, %4457
  %4460 = add i64 %4458, %4459
  %4461 = icmp eq i64 %4460, 2
  %4462 = zext i1 %4461 to i8
  %4463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4462, i8* %4463, align 1
  store %struct.Memory* %loadMem_43a766, %struct.Memory** %MEMORY
  %loadMem_43a769 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4465 = getelementptr inbounds %struct.GPR, %struct.GPR* %4464, i32 0, i32 33
  %4466 = getelementptr inbounds %struct.Reg, %struct.Reg* %4465, i32 0, i32 0
  %PC.i1777 = bitcast %union.anon* %4466 to i64*
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4468 = getelementptr inbounds %struct.GPR, %struct.GPR* %4467, i32 0, i32 5
  %4469 = getelementptr inbounds %struct.Reg, %struct.Reg* %4468, i32 0, i32 0
  %RCX.i1778 = bitcast %union.anon* %4469 to i64*
  %4470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4471 = getelementptr inbounds %struct.GPR, %struct.GPR* %4470, i32 0, i32 15
  %4472 = getelementptr inbounds %struct.Reg, %struct.Reg* %4471, i32 0, i32 0
  %RBP.i1779 = bitcast %union.anon* %4472 to i64*
  %4473 = load i64, i64* %RBP.i1779
  %4474 = sub i64 %4473, 208
  %4475 = load i64, i64* %RCX.i1778
  %4476 = load i64, i64* %PC.i1777
  %4477 = add i64 %4476, 7
  store i64 %4477, i64* %PC.i1777
  %4478 = inttoptr i64 %4474 to i64*
  store i64 %4475, i64* %4478
  store %struct.Memory* %loadMem_43a769, %struct.Memory** %MEMORY
  %loadMem_43a770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4480 = getelementptr inbounds %struct.GPR, %struct.GPR* %4479, i32 0, i32 33
  %4481 = getelementptr inbounds %struct.Reg, %struct.Reg* %4480, i32 0, i32 0
  %PC.i1774 = bitcast %union.anon* %4481 to i64*
  %4482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4483 = getelementptr inbounds %struct.GPR, %struct.GPR* %4482, i32 0, i32 5
  %4484 = getelementptr inbounds %struct.Reg, %struct.Reg* %4483, i32 0, i32 0
  %RCX.i1775 = bitcast %union.anon* %4484 to i64*
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4486 = getelementptr inbounds %struct.GPR, %struct.GPR* %4485, i32 0, i32 15
  %4487 = getelementptr inbounds %struct.Reg, %struct.Reg* %4486, i32 0, i32 0
  %RBP.i1776 = bitcast %union.anon* %4487 to i64*
  %4488 = load i64, i64* %RBP.i1776
  %4489 = sub i64 %4488, 24
  %4490 = load i64, i64* %PC.i1774
  %4491 = add i64 %4490, 4
  store i64 %4491, i64* %PC.i1774
  %4492 = inttoptr i64 %4489 to i64*
  %4493 = load i64, i64* %4492
  store i64 %4493, i64* %RCX.i1775, align 8
  store %struct.Memory* %loadMem_43a770, %struct.Memory** %MEMORY
  %loadMem_43a774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4495 = getelementptr inbounds %struct.GPR, %struct.GPR* %4494, i32 0, i32 33
  %4496 = getelementptr inbounds %struct.Reg, %struct.Reg* %4495, i32 0, i32 0
  %PC.i1771 = bitcast %union.anon* %4496 to i64*
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4498 = getelementptr inbounds %struct.GPR, %struct.GPR* %4497, i32 0, i32 7
  %4499 = getelementptr inbounds %struct.Reg, %struct.Reg* %4498, i32 0, i32 0
  %RDX.i1772 = bitcast %union.anon* %4499 to i64*
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4501 = getelementptr inbounds %struct.GPR, %struct.GPR* %4500, i32 0, i32 15
  %4502 = getelementptr inbounds %struct.Reg, %struct.Reg* %4501, i32 0, i32 0
  %RBP.i1773 = bitcast %union.anon* %4502 to i64*
  %4503 = load i64, i64* %RBP.i1773
  %4504 = sub i64 %4503, 252
  %4505 = load i64, i64* %PC.i1771
  %4506 = add i64 %4505, 7
  store i64 %4506, i64* %PC.i1771
  %4507 = inttoptr i64 %4504 to i32*
  %4508 = load i32, i32* %4507
  %4509 = sext i32 %4508 to i64
  store i64 %4509, i64* %RDX.i1772, align 8
  store %struct.Memory* %loadMem_43a774, %struct.Memory** %MEMORY
  %loadMem_43a77b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4511 = getelementptr inbounds %struct.GPR, %struct.GPR* %4510, i32 0, i32 33
  %4512 = getelementptr inbounds %struct.Reg, %struct.Reg* %4511, i32 0, i32 0
  %PC.i1768 = bitcast %union.anon* %4512 to i64*
  %4513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4514 = getelementptr inbounds %struct.GPR, %struct.GPR* %4513, i32 0, i32 5
  %4515 = getelementptr inbounds %struct.Reg, %struct.Reg* %4514, i32 0, i32 0
  %RCX.i1769 = bitcast %union.anon* %4515 to i64*
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4517 = getelementptr inbounds %struct.GPR, %struct.GPR* %4516, i32 0, i32 7
  %4518 = getelementptr inbounds %struct.Reg, %struct.Reg* %4517, i32 0, i32 0
  %RDX.i1770 = bitcast %union.anon* %4518 to i64*
  %4519 = load i64, i64* %RCX.i1769
  %4520 = load i64, i64* %RDX.i1770
  %4521 = mul i64 %4520, 8
  %4522 = add i64 %4521, %4519
  %4523 = load i64, i64* %PC.i1768
  %4524 = add i64 %4523, 4
  store i64 %4524, i64* %PC.i1768
  %4525 = inttoptr i64 %4522 to i64*
  %4526 = load i64, i64* %4525
  store i64 %4526, i64* %RCX.i1769, align 8
  store %struct.Memory* %loadMem_43a77b, %struct.Memory** %MEMORY
  %loadMem_43a77f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4528 = getelementptr inbounds %struct.GPR, %struct.GPR* %4527, i32 0, i32 33
  %4529 = getelementptr inbounds %struct.Reg, %struct.Reg* %4528, i32 0, i32 0
  %PC.i1765 = bitcast %union.anon* %4529 to i64*
  %4530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4531 = getelementptr inbounds %struct.GPR, %struct.GPR* %4530, i32 0, i32 7
  %4532 = getelementptr inbounds %struct.Reg, %struct.Reg* %4531, i32 0, i32 0
  %RDX.i1766 = bitcast %union.anon* %4532 to i64*
  %4533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4534 = getelementptr inbounds %struct.GPR, %struct.GPR* %4533, i32 0, i32 15
  %4535 = getelementptr inbounds %struct.Reg, %struct.Reg* %4534, i32 0, i32 0
  %RBP.i1767 = bitcast %union.anon* %4535 to i64*
  %4536 = load i64, i64* %RBP.i1767
  %4537 = sub i64 %4536, 256
  %4538 = load i64, i64* %PC.i1765
  %4539 = add i64 %4538, 7
  store i64 %4539, i64* %PC.i1765
  %4540 = inttoptr i64 %4537 to i32*
  %4541 = load i32, i32* %4540
  %4542 = sext i32 %4541 to i64
  store i64 %4542, i64* %RDX.i1766, align 8
  store %struct.Memory* %loadMem_43a77f, %struct.Memory** %MEMORY
  %loadMem_43a786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4544 = getelementptr inbounds %struct.GPR, %struct.GPR* %4543, i32 0, i32 33
  %4545 = getelementptr inbounds %struct.Reg, %struct.Reg* %4544, i32 0, i32 0
  %PC.i1763 = bitcast %union.anon* %4545 to i64*
  %4546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4547 = getelementptr inbounds %struct.GPR, %struct.GPR* %4546, i32 0, i32 7
  %4548 = getelementptr inbounds %struct.Reg, %struct.Reg* %4547, i32 0, i32 0
  %RDX.i1764 = bitcast %union.anon* %4548 to i64*
  %4549 = load i64, i64* %RDX.i1764
  %4550 = load i64, i64* %PC.i1763
  %4551 = add i64 %4550, 3
  store i64 %4551, i64* %PC.i1763
  %4552 = shl i64 %4549, 1
  %4553 = icmp slt i64 %4549, 0
  %4554 = icmp slt i64 %4552, 0
  %4555 = xor i1 %4553, %4554
  store i64 %4552, i64* %RDX.i1764, align 8
  %4556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4557 = zext i1 %4553 to i8
  store i8 %4557, i8* %4556, align 1
  %4558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4559 = trunc i64 %4552 to i32
  %4560 = and i32 %4559, 254
  %4561 = call i32 @llvm.ctpop.i32(i32 %4560)
  %4562 = trunc i32 %4561 to i8
  %4563 = and i8 %4562, 1
  %4564 = xor i8 %4563, 1
  store i8 %4564, i8* %4558, align 1
  %4565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4565, align 1
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4567 = icmp eq i64 %4552, 0
  %4568 = zext i1 %4567 to i8
  store i8 %4568, i8* %4566, align 1
  %4569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4570 = lshr i64 %4552, 63
  %4571 = trunc i64 %4570 to i8
  store i8 %4571, i8* %4569, align 1
  %4572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4573 = zext i1 %4555 to i8
  store i8 %4573, i8* %4572, align 1
  store %struct.Memory* %loadMem_43a786, %struct.Memory** %MEMORY
  %loadMem_43a78a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4575 = getelementptr inbounds %struct.GPR, %struct.GPR* %4574, i32 0, i32 33
  %4576 = getelementptr inbounds %struct.Reg, %struct.Reg* %4575, i32 0, i32 0
  %PC.i1760 = bitcast %union.anon* %4576 to i64*
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4578 = getelementptr inbounds %struct.GPR, %struct.GPR* %4577, i32 0, i32 5
  %4579 = getelementptr inbounds %struct.Reg, %struct.Reg* %4578, i32 0, i32 0
  %RCX.i1761 = bitcast %union.anon* %4579 to i64*
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4581 = getelementptr inbounds %struct.GPR, %struct.GPR* %4580, i32 0, i32 7
  %4582 = getelementptr inbounds %struct.Reg, %struct.Reg* %4581, i32 0, i32 0
  %RDX.i1762 = bitcast %union.anon* %4582 to i64*
  %4583 = load i64, i64* %RCX.i1761
  %4584 = load i64, i64* %RDX.i1762
  %4585 = load i64, i64* %PC.i1760
  %4586 = add i64 %4585, 3
  store i64 %4586, i64* %PC.i1760
  %4587 = add i64 %4584, %4583
  store i64 %4587, i64* %RCX.i1761, align 8
  %4588 = icmp ult i64 %4587, %4583
  %4589 = icmp ult i64 %4587, %4584
  %4590 = or i1 %4588, %4589
  %4591 = zext i1 %4590 to i8
  %4592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4591, i8* %4592, align 1
  %4593 = trunc i64 %4587 to i32
  %4594 = and i32 %4593, 255
  %4595 = call i32 @llvm.ctpop.i32(i32 %4594)
  %4596 = trunc i32 %4595 to i8
  %4597 = and i8 %4596, 1
  %4598 = xor i8 %4597, 1
  %4599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4598, i8* %4599, align 1
  %4600 = xor i64 %4584, %4583
  %4601 = xor i64 %4600, %4587
  %4602 = lshr i64 %4601, 4
  %4603 = trunc i64 %4602 to i8
  %4604 = and i8 %4603, 1
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4604, i8* %4605, align 1
  %4606 = icmp eq i64 %4587, 0
  %4607 = zext i1 %4606 to i8
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4607, i8* %4608, align 1
  %4609 = lshr i64 %4587, 63
  %4610 = trunc i64 %4609 to i8
  %4611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4610, i8* %4611, align 1
  %4612 = lshr i64 %4583, 63
  %4613 = lshr i64 %4584, 63
  %4614 = xor i64 %4609, %4612
  %4615 = xor i64 %4609, %4613
  %4616 = add i64 %4614, %4615
  %4617 = icmp eq i64 %4616, 2
  %4618 = zext i1 %4617 to i8
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4618, i8* %4619, align 1
  store %struct.Memory* %loadMem_43a78a, %struct.Memory** %MEMORY
  %loadMem_43a78d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4621 = getelementptr inbounds %struct.GPR, %struct.GPR* %4620, i32 0, i32 33
  %4622 = getelementptr inbounds %struct.Reg, %struct.Reg* %4621, i32 0, i32 0
  %PC.i1757 = bitcast %union.anon* %4622 to i64*
  %4623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4624 = getelementptr inbounds %struct.GPR, %struct.GPR* %4623, i32 0, i32 5
  %4625 = getelementptr inbounds %struct.Reg, %struct.Reg* %4624, i32 0, i32 0
  %RCX.i1758 = bitcast %union.anon* %4625 to i64*
  %4626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4627 = getelementptr inbounds %struct.GPR, %struct.GPR* %4626, i32 0, i32 15
  %4628 = getelementptr inbounds %struct.Reg, %struct.Reg* %4627, i32 0, i32 0
  %RBP.i1759 = bitcast %union.anon* %4628 to i64*
  %4629 = load i64, i64* %RBP.i1759
  %4630 = sub i64 %4629, 200
  %4631 = load i64, i64* %RCX.i1758
  %4632 = load i64, i64* %PC.i1757
  %4633 = add i64 %4632, 7
  store i64 %4633, i64* %PC.i1757
  %4634 = inttoptr i64 %4630 to i64*
  store i64 %4631, i64* %4634
  store %struct.Memory* %loadMem_43a78d, %struct.Memory** %MEMORY
  %loadMem_43a794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4636 = getelementptr inbounds %struct.GPR, %struct.GPR* %4635, i32 0, i32 33
  %4637 = getelementptr inbounds %struct.Reg, %struct.Reg* %4636, i32 0, i32 0
  %PC.i1755 = bitcast %union.anon* %4637 to i64*
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4639 = getelementptr inbounds %struct.GPR, %struct.GPR* %4638, i32 0, i32 15
  %4640 = getelementptr inbounds %struct.Reg, %struct.Reg* %4639, i32 0, i32 0
  %RBP.i1756 = bitcast %union.anon* %4640 to i64*
  %4641 = load i64, i64* %RBP.i1756
  %4642 = sub i64 %4641, 68
  %4643 = load i64, i64* %PC.i1755
  %4644 = add i64 %4643, 4
  store i64 %4644, i64* %PC.i1755
  %4645 = inttoptr i64 %4642 to i32*
  %4646 = load i32, i32* %4645
  %4647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4647, align 1
  %4648 = and i32 %4646, 255
  %4649 = call i32 @llvm.ctpop.i32(i32 %4648)
  %4650 = trunc i32 %4649 to i8
  %4651 = and i8 %4650, 1
  %4652 = xor i8 %4651, 1
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4652, i8* %4653, align 1
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4654, align 1
  %4655 = icmp eq i32 %4646, 0
  %4656 = zext i1 %4655 to i8
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4656, i8* %4657, align 1
  %4658 = lshr i32 %4646, 31
  %4659 = trunc i32 %4658 to i8
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4659, i8* %4660, align 1
  %4661 = lshr i32 %4646, 31
  %4662 = xor i32 %4658, %4661
  %4663 = add i32 %4662, %4661
  %4664 = icmp eq i32 %4663, 2
  %4665 = zext i1 %4664 to i8
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4665, i8* %4666, align 1
  store %struct.Memory* %loadMem_43a794, %struct.Memory** %MEMORY
  %loadMem_43a798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4668 = getelementptr inbounds %struct.GPR, %struct.GPR* %4667, i32 0, i32 33
  %4669 = getelementptr inbounds %struct.Reg, %struct.Reg* %4668, i32 0, i32 0
  %PC.i1754 = bitcast %union.anon* %4669 to i64*
  %4670 = load i64, i64* %PC.i1754
  %4671 = add i64 %4670, 351
  %4672 = load i64, i64* %PC.i1754
  %4673 = add i64 %4672, 6
  %4674 = load i64, i64* %PC.i1754
  %4675 = add i64 %4674, 6
  store i64 %4675, i64* %PC.i1754
  %4676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4677 = load i8, i8* %4676, align 1
  store i8 %4677, i8* %BRANCH_TAKEN, align 1
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4679 = icmp ne i8 %4677, 0
  %4680 = select i1 %4679, i64 %4671, i64 %4673
  store i64 %4680, i64* %4678, align 8
  store %struct.Memory* %loadMem_43a798, %struct.Memory** %MEMORY
  %loadBr_43a798 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a798 = icmp eq i8 %loadBr_43a798, 1
  br i1 %cmpBr_43a798, label %block_.L_43a8f7, label %block_43a79e

block_43a79e:                                     ; preds = %block_.L_43a743
  %loadMem_43a79e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4682 = getelementptr inbounds %struct.GPR, %struct.GPR* %4681, i32 0, i32 33
  %4683 = getelementptr inbounds %struct.Reg, %struct.Reg* %4682, i32 0, i32 0
  %PC.i1751 = bitcast %union.anon* %4683 to i64*
  %4684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4685 = getelementptr inbounds %struct.GPR, %struct.GPR* %4684, i32 0, i32 1
  %4686 = getelementptr inbounds %struct.Reg, %struct.Reg* %4685, i32 0, i32 0
  %RAX.i1752 = bitcast %union.anon* %4686 to i64*
  %4687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4688 = getelementptr inbounds %struct.GPR, %struct.GPR* %4687, i32 0, i32 15
  %4689 = getelementptr inbounds %struct.Reg, %struct.Reg* %4688, i32 0, i32 0
  %RBP.i1753 = bitcast %union.anon* %4689 to i64*
  %4690 = load i64, i64* %RBP.i1753
  %4691 = sub i64 %4690, 248
  %4692 = load i64, i64* %PC.i1751
  %4693 = add i64 %4692, 7
  store i64 %4693, i64* %PC.i1751
  %4694 = inttoptr i64 %4691 to i64*
  %4695 = load i64, i64* %4694
  store i64 %4695, i64* %RAX.i1752, align 8
  store %struct.Memory* %loadMem_43a79e, %struct.Memory** %MEMORY
  %loadMem_43a7a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4697 = getelementptr inbounds %struct.GPR, %struct.GPR* %4696, i32 0, i32 33
  %4698 = getelementptr inbounds %struct.Reg, %struct.Reg* %4697, i32 0, i32 0
  %PC.i1748 = bitcast %union.anon* %4698 to i64*
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4700 = getelementptr inbounds %struct.GPR, %struct.GPR* %4699, i32 0, i32 1
  %4701 = getelementptr inbounds %struct.Reg, %struct.Reg* %4700, i32 0, i32 0
  %RAX.i1749 = bitcast %union.anon* %4701 to i64*
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4703 = getelementptr inbounds %struct.GPR, %struct.GPR* %4702, i32 0, i32 5
  %4704 = getelementptr inbounds %struct.Reg, %struct.Reg* %4703, i32 0, i32 0
  %RCX.i1750 = bitcast %union.anon* %4704 to i64*
  %4705 = load i64, i64* %RAX.i1749
  %4706 = add i64 %4705, 12
  %4707 = load i64, i64* %PC.i1748
  %4708 = add i64 %4707, 3
  store i64 %4708, i64* %PC.i1748
  %4709 = inttoptr i64 %4706 to i32*
  %4710 = load i32, i32* %4709
  %4711 = zext i32 %4710 to i64
  store i64 %4711, i64* %RCX.i1750, align 8
  store %struct.Memory* %loadMem_43a7a5, %struct.Memory** %MEMORY
  %loadMem_43a7a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4713 = getelementptr inbounds %struct.GPR, %struct.GPR* %4712, i32 0, i32 33
  %4714 = getelementptr inbounds %struct.Reg, %struct.Reg* %4713, i32 0, i32 0
  %PC.i1745 = bitcast %union.anon* %4714 to i64*
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4716 = getelementptr inbounds %struct.GPR, %struct.GPR* %4715, i32 0, i32 1
  %4717 = getelementptr inbounds %struct.Reg, %struct.Reg* %4716, i32 0, i32 0
  %RAX.i1746 = bitcast %union.anon* %4717 to i64*
  %4718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4719 = getelementptr inbounds %struct.GPR, %struct.GPR* %4718, i32 0, i32 15
  %4720 = getelementptr inbounds %struct.Reg, %struct.Reg* %4719, i32 0, i32 0
  %RBP.i1747 = bitcast %union.anon* %4720 to i64*
  %4721 = load i64, i64* %RBP.i1747
  %4722 = sub i64 %4721, 40
  %4723 = load i64, i64* %PC.i1745
  %4724 = add i64 %4723, 4
  store i64 %4724, i64* %PC.i1745
  %4725 = inttoptr i64 %4722 to i64*
  %4726 = load i64, i64* %4725
  store i64 %4726, i64* %RAX.i1746, align 8
  store %struct.Memory* %loadMem_43a7a8, %struct.Memory** %MEMORY
  %loadMem_43a7ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %4727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4728 = getelementptr inbounds %struct.GPR, %struct.GPR* %4727, i32 0, i32 33
  %4729 = getelementptr inbounds %struct.Reg, %struct.Reg* %4728, i32 0, i32 0
  %PC.i1742 = bitcast %union.anon* %4729 to i64*
  %4730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4731 = getelementptr inbounds %struct.GPR, %struct.GPR* %4730, i32 0, i32 7
  %4732 = getelementptr inbounds %struct.Reg, %struct.Reg* %4731, i32 0, i32 0
  %RDX.i1743 = bitcast %union.anon* %4732 to i64*
  %4733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4734 = getelementptr inbounds %struct.GPR, %struct.GPR* %4733, i32 0, i32 15
  %4735 = getelementptr inbounds %struct.Reg, %struct.Reg* %4734, i32 0, i32 0
  %RBP.i1744 = bitcast %union.anon* %4735 to i64*
  %4736 = load i64, i64* %RBP.i1744
  %4737 = sub i64 %4736, 72
  %4738 = load i64, i64* %PC.i1742
  %4739 = add i64 %4738, 4
  store i64 %4739, i64* %PC.i1742
  %4740 = inttoptr i64 %4737 to i32*
  %4741 = load i32, i32* %4740
  %4742 = sext i32 %4741 to i64
  store i64 %4742, i64* %RDX.i1743, align 8
  store %struct.Memory* %loadMem_43a7ac, %struct.Memory** %MEMORY
  %loadMem_43a7b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4744 = getelementptr inbounds %struct.GPR, %struct.GPR* %4743, i32 0, i32 33
  %4745 = getelementptr inbounds %struct.Reg, %struct.Reg* %4744, i32 0, i32 0
  %PC.i1738 = bitcast %union.anon* %4745 to i64*
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4747 = getelementptr inbounds %struct.GPR, %struct.GPR* %4746, i32 0, i32 1
  %4748 = getelementptr inbounds %struct.Reg, %struct.Reg* %4747, i32 0, i32 0
  %RAX.i1739 = bitcast %union.anon* %4748 to i64*
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4750 = getelementptr inbounds %struct.GPR, %struct.GPR* %4749, i32 0, i32 5
  %4751 = getelementptr inbounds %struct.Reg, %struct.Reg* %4750, i32 0, i32 0
  %RCX.i1740 = bitcast %union.anon* %4751 to i64*
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4753 = getelementptr inbounds %struct.GPR, %struct.GPR* %4752, i32 0, i32 7
  %4754 = getelementptr inbounds %struct.Reg, %struct.Reg* %4753, i32 0, i32 0
  %RDX.i1741 = bitcast %union.anon* %4754 to i64*
  %4755 = load i64, i64* %RCX.i1740
  %4756 = load i64, i64* %RAX.i1739
  %4757 = load i64, i64* %RDX.i1741
  %4758 = mul i64 %4757, 4
  %4759 = add i64 %4756, 72716
  %4760 = add i64 %4759, %4758
  %4761 = load i64, i64* %PC.i1738
  %4762 = add i64 %4761, 7
  store i64 %4762, i64* %PC.i1738
  %4763 = trunc i64 %4755 to i32
  %4764 = inttoptr i64 %4760 to i32*
  %4765 = load i32, i32* %4764
  %4766 = add i32 %4765, %4763
  %4767 = zext i32 %4766 to i64
  store i64 %4767, i64* %RCX.i1740, align 8
  %4768 = icmp ult i32 %4766, %4763
  %4769 = icmp ult i32 %4766, %4765
  %4770 = or i1 %4768, %4769
  %4771 = zext i1 %4770 to i8
  %4772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4771, i8* %4772, align 1
  %4773 = and i32 %4766, 255
  %4774 = call i32 @llvm.ctpop.i32(i32 %4773)
  %4775 = trunc i32 %4774 to i8
  %4776 = and i8 %4775, 1
  %4777 = xor i8 %4776, 1
  %4778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4777, i8* %4778, align 1
  %4779 = xor i32 %4765, %4763
  %4780 = xor i32 %4779, %4766
  %4781 = lshr i32 %4780, 4
  %4782 = trunc i32 %4781 to i8
  %4783 = and i8 %4782, 1
  %4784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4783, i8* %4784, align 1
  %4785 = icmp eq i32 %4766, 0
  %4786 = zext i1 %4785 to i8
  %4787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4786, i8* %4787, align 1
  %4788 = lshr i32 %4766, 31
  %4789 = trunc i32 %4788 to i8
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4789, i8* %4790, align 1
  %4791 = lshr i32 %4763, 31
  %4792 = lshr i32 %4765, 31
  %4793 = xor i32 %4788, %4791
  %4794 = xor i32 %4788, %4792
  %4795 = add i32 %4793, %4794
  %4796 = icmp eq i32 %4795, 2
  %4797 = zext i1 %4796 to i8
  %4798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4797, i8* %4798, align 1
  store %struct.Memory* %loadMem_43a7b0, %struct.Memory** %MEMORY
  %loadMem_43a7b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4800 = getelementptr inbounds %struct.GPR, %struct.GPR* %4799, i32 0, i32 33
  %4801 = getelementptr inbounds %struct.Reg, %struct.Reg* %4800, i32 0, i32 0
  %PC.i1736 = bitcast %union.anon* %4801 to i64*
  %4802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4803 = getelementptr inbounds %struct.GPR, %struct.GPR* %4802, i32 0, i32 5
  %4804 = getelementptr inbounds %struct.Reg, %struct.Reg* %4803, i32 0, i32 0
  %ECX.i1737 = bitcast %union.anon* %4804 to i32*
  %4805 = load i32, i32* %ECX.i1737
  %4806 = zext i32 %4805 to i64
  %4807 = load i64, i64* %PC.i1736
  %4808 = add i64 %4807, 3
  store i64 %4808, i64* %PC.i1736
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4809, align 1
  %4810 = and i32 %4805, 255
  %4811 = call i32 @llvm.ctpop.i32(i32 %4810)
  %4812 = trunc i32 %4811 to i8
  %4813 = and i8 %4812, 1
  %4814 = xor i8 %4813, 1
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4814, i8* %4815, align 1
  %4816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4816, align 1
  %4817 = icmp eq i32 %4805, 0
  %4818 = zext i1 %4817 to i8
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4818, i8* %4819, align 1
  %4820 = lshr i32 %4805, 31
  %4821 = trunc i32 %4820 to i8
  %4822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4821, i8* %4822, align 1
  %4823 = lshr i32 %4805, 31
  %4824 = xor i32 %4820, %4823
  %4825 = add i32 %4824, %4823
  %4826 = icmp eq i32 %4825, 2
  %4827 = zext i1 %4826 to i8
  %4828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4827, i8* %4828, align 1
  store %struct.Memory* %loadMem_43a7b7, %struct.Memory** %MEMORY
  %loadMem_43a7ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %4829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4830 = getelementptr inbounds %struct.GPR, %struct.GPR* %4829, i32 0, i32 33
  %4831 = getelementptr inbounds %struct.Reg, %struct.Reg* %4830, i32 0, i32 0
  %PC.i1735 = bitcast %union.anon* %4831 to i64*
  %4832 = load i64, i64* %PC.i1735
  %4833 = add i64 %4832, 19
  %4834 = load i64, i64* %PC.i1735
  %4835 = add i64 %4834, 6
  %4836 = load i64, i64* %PC.i1735
  %4837 = add i64 %4836, 6
  store i64 %4837, i64* %PC.i1735
  %4838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4839 = load i8, i8* %4838, align 1
  %4840 = icmp ne i8 %4839, 0
  %4841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4842 = load i8, i8* %4841, align 1
  %4843 = icmp ne i8 %4842, 0
  %4844 = xor i1 %4840, %4843
  %4845 = xor i1 %4844, true
  %4846 = zext i1 %4845 to i8
  store i8 %4846, i8* %BRANCH_TAKEN, align 1
  %4847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4848 = select i1 %4844, i64 %4835, i64 %4833
  store i64 %4848, i64* %4847, align 8
  store %struct.Memory* %loadMem_43a7ba, %struct.Memory** %MEMORY
  %loadBr_43a7ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a7ba = icmp eq i8 %loadBr_43a7ba, 1
  br i1 %cmpBr_43a7ba, label %block_.L_43a7cd, label %block_43a7c0

block_43a7c0:                                     ; preds = %block_43a79e
  %loadMem_43a7c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4850 = getelementptr inbounds %struct.GPR, %struct.GPR* %4849, i32 0, i32 33
  %4851 = getelementptr inbounds %struct.Reg, %struct.Reg* %4850, i32 0, i32 0
  %PC.i1732 = bitcast %union.anon* %4851 to i64*
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4853 = getelementptr inbounds %struct.GPR, %struct.GPR* %4852, i32 0, i32 1
  %4854 = getelementptr inbounds %struct.Reg, %struct.Reg* %4853, i32 0, i32 0
  %EAX.i1733 = bitcast %union.anon* %4854 to i32*
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4856 = getelementptr inbounds %struct.GPR, %struct.GPR* %4855, i32 0, i32 1
  %4857 = getelementptr inbounds %struct.Reg, %struct.Reg* %4856, i32 0, i32 0
  %RAX.i1734 = bitcast %union.anon* %4857 to i64*
  %4858 = load i64, i64* %RAX.i1734
  %4859 = load i32, i32* %EAX.i1733
  %4860 = zext i32 %4859 to i64
  %4861 = load i64, i64* %PC.i1732
  %4862 = add i64 %4861, 2
  store i64 %4862, i64* %PC.i1732
  %4863 = xor i64 %4860, %4858
  %4864 = trunc i64 %4863 to i32
  %4865 = and i64 %4863, 4294967295
  store i64 %4865, i64* %RAX.i1734, align 8
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4866, align 1
  %4867 = and i32 %4864, 255
  %4868 = call i32 @llvm.ctpop.i32(i32 %4867)
  %4869 = trunc i32 %4868 to i8
  %4870 = and i8 %4869, 1
  %4871 = xor i8 %4870, 1
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4871, i8* %4872, align 1
  %4873 = icmp eq i32 %4864, 0
  %4874 = zext i1 %4873 to i8
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4874, i8* %4875, align 1
  %4876 = lshr i32 %4864, 31
  %4877 = trunc i32 %4876 to i8
  %4878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4877, i8* %4878, align 1
  %4879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4879, align 1
  %4880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4880, align 1
  store %struct.Memory* %loadMem_43a7c0, %struct.Memory** %MEMORY
  %loadMem_43a7c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4882 = getelementptr inbounds %struct.GPR, %struct.GPR* %4881, i32 0, i32 33
  %4883 = getelementptr inbounds %struct.Reg, %struct.Reg* %4882, i32 0, i32 0
  %PC.i1729 = bitcast %union.anon* %4883 to i64*
  %4884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4885 = getelementptr inbounds %struct.GPR, %struct.GPR* %4884, i32 0, i32 1
  %4886 = getelementptr inbounds %struct.Reg, %struct.Reg* %4885, i32 0, i32 0
  %EAX.i1730 = bitcast %union.anon* %4886 to i32*
  %4887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4888 = getelementptr inbounds %struct.GPR, %struct.GPR* %4887, i32 0, i32 15
  %4889 = getelementptr inbounds %struct.Reg, %struct.Reg* %4888, i32 0, i32 0
  %RBP.i1731 = bitcast %union.anon* %4889 to i64*
  %4890 = load i64, i64* %RBP.i1731
  %4891 = sub i64 %4890, 388
  %4892 = load i32, i32* %EAX.i1730
  %4893 = zext i32 %4892 to i64
  %4894 = load i64, i64* %PC.i1729
  %4895 = add i64 %4894, 6
  store i64 %4895, i64* %PC.i1729
  %4896 = inttoptr i64 %4891 to i32*
  store i32 %4892, i32* %4896
  store %struct.Memory* %loadMem_43a7c2, %struct.Memory** %MEMORY
  %loadMem_43a7c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4898 = getelementptr inbounds %struct.GPR, %struct.GPR* %4897, i32 0, i32 33
  %4899 = getelementptr inbounds %struct.Reg, %struct.Reg* %4898, i32 0, i32 0
  %PC.i1728 = bitcast %union.anon* %4899 to i64*
  %4900 = load i64, i64* %PC.i1728
  %4901 = add i64 %4900, 98
  %4902 = load i64, i64* %PC.i1728
  %4903 = add i64 %4902, 5
  store i64 %4903, i64* %PC.i1728
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4901, i64* %4904, align 8
  store %struct.Memory* %loadMem_43a7c8, %struct.Memory** %MEMORY
  br label %block_.L_43a82a

block_.L_43a7cd:                                  ; preds = %block_43a79e
  %loadMem_43a7cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4906 = getelementptr inbounds %struct.GPR, %struct.GPR* %4905, i32 0, i32 33
  %4907 = getelementptr inbounds %struct.Reg, %struct.Reg* %4906, i32 0, i32 0
  %PC.i1725 = bitcast %union.anon* %4907 to i64*
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4909 = getelementptr inbounds %struct.GPR, %struct.GPR* %4908, i32 0, i32 1
  %4910 = getelementptr inbounds %struct.Reg, %struct.Reg* %4909, i32 0, i32 0
  %RAX.i1726 = bitcast %union.anon* %4910 to i64*
  %4911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4912 = getelementptr inbounds %struct.GPR, %struct.GPR* %4911, i32 0, i32 15
  %4913 = getelementptr inbounds %struct.Reg, %struct.Reg* %4912, i32 0, i32 0
  %RBP.i1727 = bitcast %union.anon* %4913 to i64*
  %4914 = load i64, i64* %RBP.i1727
  %4915 = sub i64 %4914, 248
  %4916 = load i64, i64* %PC.i1725
  %4917 = add i64 %4916, 7
  store i64 %4917, i64* %PC.i1725
  %4918 = inttoptr i64 %4915 to i64*
  %4919 = load i64, i64* %4918
  store i64 %4919, i64* %RAX.i1726, align 8
  store %struct.Memory* %loadMem_43a7cd, %struct.Memory** %MEMORY
  %loadMem_43a7d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4921 = getelementptr inbounds %struct.GPR, %struct.GPR* %4920, i32 0, i32 33
  %4922 = getelementptr inbounds %struct.Reg, %struct.Reg* %4921, i32 0, i32 0
  %PC.i1722 = bitcast %union.anon* %4922 to i64*
  %4923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4924 = getelementptr inbounds %struct.GPR, %struct.GPR* %4923, i32 0, i32 1
  %4925 = getelementptr inbounds %struct.Reg, %struct.Reg* %4924, i32 0, i32 0
  %RAX.i1723 = bitcast %union.anon* %4925 to i64*
  %4926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4927 = getelementptr inbounds %struct.GPR, %struct.GPR* %4926, i32 0, i32 5
  %4928 = getelementptr inbounds %struct.Reg, %struct.Reg* %4927, i32 0, i32 0
  %RCX.i1724 = bitcast %union.anon* %4928 to i64*
  %4929 = load i64, i64* %RAX.i1723
  %4930 = add i64 %4929, 12
  %4931 = load i64, i64* %PC.i1722
  %4932 = add i64 %4931, 3
  store i64 %4932, i64* %PC.i1722
  %4933 = inttoptr i64 %4930 to i32*
  %4934 = load i32, i32* %4933
  %4935 = zext i32 %4934 to i64
  store i64 %4935, i64* %RCX.i1724, align 8
  store %struct.Memory* %loadMem_43a7d4, %struct.Memory** %MEMORY
  %loadMem_43a7d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4937 = getelementptr inbounds %struct.GPR, %struct.GPR* %4936, i32 0, i32 33
  %4938 = getelementptr inbounds %struct.Reg, %struct.Reg* %4937, i32 0, i32 0
  %PC.i1719 = bitcast %union.anon* %4938 to i64*
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4940 = getelementptr inbounds %struct.GPR, %struct.GPR* %4939, i32 0, i32 1
  %4941 = getelementptr inbounds %struct.Reg, %struct.Reg* %4940, i32 0, i32 0
  %RAX.i1720 = bitcast %union.anon* %4941 to i64*
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4943 = getelementptr inbounds %struct.GPR, %struct.GPR* %4942, i32 0, i32 15
  %4944 = getelementptr inbounds %struct.Reg, %struct.Reg* %4943, i32 0, i32 0
  %RBP.i1721 = bitcast %union.anon* %4944 to i64*
  %4945 = load i64, i64* %RBP.i1721
  %4946 = sub i64 %4945, 40
  %4947 = load i64, i64* %PC.i1719
  %4948 = add i64 %4947, 4
  store i64 %4948, i64* %PC.i1719
  %4949 = inttoptr i64 %4946 to i64*
  %4950 = load i64, i64* %4949
  store i64 %4950, i64* %RAX.i1720, align 8
  store %struct.Memory* %loadMem_43a7d7, %struct.Memory** %MEMORY
  %loadMem_43a7db = load %struct.Memory*, %struct.Memory** %MEMORY
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4952 = getelementptr inbounds %struct.GPR, %struct.GPR* %4951, i32 0, i32 33
  %4953 = getelementptr inbounds %struct.Reg, %struct.Reg* %4952, i32 0, i32 0
  %PC.i1716 = bitcast %union.anon* %4953 to i64*
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4955 = getelementptr inbounds %struct.GPR, %struct.GPR* %4954, i32 0, i32 7
  %4956 = getelementptr inbounds %struct.Reg, %struct.Reg* %4955, i32 0, i32 0
  %RDX.i1717 = bitcast %union.anon* %4956 to i64*
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4958 = getelementptr inbounds %struct.GPR, %struct.GPR* %4957, i32 0, i32 15
  %4959 = getelementptr inbounds %struct.Reg, %struct.Reg* %4958, i32 0, i32 0
  %RBP.i1718 = bitcast %union.anon* %4959 to i64*
  %4960 = load i64, i64* %RBP.i1718
  %4961 = sub i64 %4960, 72
  %4962 = load i64, i64* %PC.i1716
  %4963 = add i64 %4962, 4
  store i64 %4963, i64* %PC.i1716
  %4964 = inttoptr i64 %4961 to i32*
  %4965 = load i32, i32* %4964
  %4966 = sext i32 %4965 to i64
  store i64 %4966, i64* %RDX.i1717, align 8
  store %struct.Memory* %loadMem_43a7db, %struct.Memory** %MEMORY
  %loadMem_43a7df = load %struct.Memory*, %struct.Memory** %MEMORY
  %4967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4968 = getelementptr inbounds %struct.GPR, %struct.GPR* %4967, i32 0, i32 33
  %4969 = getelementptr inbounds %struct.Reg, %struct.Reg* %4968, i32 0, i32 0
  %PC.i1712 = bitcast %union.anon* %4969 to i64*
  %4970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4971 = getelementptr inbounds %struct.GPR, %struct.GPR* %4970, i32 0, i32 1
  %4972 = getelementptr inbounds %struct.Reg, %struct.Reg* %4971, i32 0, i32 0
  %RAX.i1713 = bitcast %union.anon* %4972 to i64*
  %4973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4974 = getelementptr inbounds %struct.GPR, %struct.GPR* %4973, i32 0, i32 5
  %4975 = getelementptr inbounds %struct.Reg, %struct.Reg* %4974, i32 0, i32 0
  %RCX.i1714 = bitcast %union.anon* %4975 to i64*
  %4976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4977 = getelementptr inbounds %struct.GPR, %struct.GPR* %4976, i32 0, i32 7
  %4978 = getelementptr inbounds %struct.Reg, %struct.Reg* %4977, i32 0, i32 0
  %RDX.i1715 = bitcast %union.anon* %4978 to i64*
  %4979 = load i64, i64* %RCX.i1714
  %4980 = load i64, i64* %RAX.i1713
  %4981 = load i64, i64* %RDX.i1715
  %4982 = mul i64 %4981, 4
  %4983 = add i64 %4980, 72716
  %4984 = add i64 %4983, %4982
  %4985 = load i64, i64* %PC.i1712
  %4986 = add i64 %4985, 7
  store i64 %4986, i64* %PC.i1712
  %4987 = trunc i64 %4979 to i32
  %4988 = inttoptr i64 %4984 to i32*
  %4989 = load i32, i32* %4988
  %4990 = add i32 %4989, %4987
  %4991 = zext i32 %4990 to i64
  store i64 %4991, i64* %RCX.i1714, align 8
  %4992 = icmp ult i32 %4990, %4987
  %4993 = icmp ult i32 %4990, %4989
  %4994 = or i1 %4992, %4993
  %4995 = zext i1 %4994 to i8
  %4996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4995, i8* %4996, align 1
  %4997 = and i32 %4990, 255
  %4998 = call i32 @llvm.ctpop.i32(i32 %4997)
  %4999 = trunc i32 %4998 to i8
  %5000 = and i8 %4999, 1
  %5001 = xor i8 %5000, 1
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5001, i8* %5002, align 1
  %5003 = xor i32 %4989, %4987
  %5004 = xor i32 %5003, %4990
  %5005 = lshr i32 %5004, 4
  %5006 = trunc i32 %5005 to i8
  %5007 = and i8 %5006, 1
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5007, i8* %5008, align 1
  %5009 = icmp eq i32 %4990, 0
  %5010 = zext i1 %5009 to i8
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5010, i8* %5011, align 1
  %5012 = lshr i32 %4990, 31
  %5013 = trunc i32 %5012 to i8
  %5014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5013, i8* %5014, align 1
  %5015 = lshr i32 %4987, 31
  %5016 = lshr i32 %4989, 31
  %5017 = xor i32 %5012, %5015
  %5018 = xor i32 %5012, %5016
  %5019 = add i32 %5017, %5018
  %5020 = icmp eq i32 %5019, 2
  %5021 = zext i1 %5020 to i8
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5021, i8* %5022, align 1
  store %struct.Memory* %loadMem_43a7df, %struct.Memory** %MEMORY
  %loadMem_43a7e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5024 = getelementptr inbounds %struct.GPR, %struct.GPR* %5023, i32 0, i32 33
  %5025 = getelementptr inbounds %struct.Reg, %struct.Reg* %5024, i32 0, i32 0
  %PC.i1710 = bitcast %union.anon* %5025 to i64*
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5027 = getelementptr inbounds %struct.GPR, %struct.GPR* %5026, i32 0, i32 5
  %5028 = getelementptr inbounds %struct.Reg, %struct.Reg* %5027, i32 0, i32 0
  %ECX.i1711 = bitcast %union.anon* %5028 to i32*
  %5029 = load i32, i32* %ECX.i1711
  %5030 = zext i32 %5029 to i64
  %5031 = load i64, i64* %PC.i1710
  %5032 = add i64 %5031, 3
  store i64 %5032, i64* %PC.i1710
  %5033 = sub i32 %5029, 51
  %5034 = icmp ult i32 %5029, 51
  %5035 = zext i1 %5034 to i8
  %5036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5035, i8* %5036, align 1
  %5037 = and i32 %5033, 255
  %5038 = call i32 @llvm.ctpop.i32(i32 %5037)
  %5039 = trunc i32 %5038 to i8
  %5040 = and i8 %5039, 1
  %5041 = xor i8 %5040, 1
  %5042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5041, i8* %5042, align 1
  %5043 = xor i64 51, %5030
  %5044 = trunc i64 %5043 to i32
  %5045 = xor i32 %5044, %5033
  %5046 = lshr i32 %5045, 4
  %5047 = trunc i32 %5046 to i8
  %5048 = and i8 %5047, 1
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5048, i8* %5049, align 1
  %5050 = icmp eq i32 %5033, 0
  %5051 = zext i1 %5050 to i8
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5051, i8* %5052, align 1
  %5053 = lshr i32 %5033, 31
  %5054 = trunc i32 %5053 to i8
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5054, i8* %5055, align 1
  %5056 = lshr i32 %5029, 31
  %5057 = xor i32 %5053, %5056
  %5058 = add i32 %5057, %5056
  %5059 = icmp eq i32 %5058, 2
  %5060 = zext i1 %5059 to i8
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5060, i8* %5061, align 1
  store %struct.Memory* %loadMem_43a7e6, %struct.Memory** %MEMORY
  %loadMem_43a7e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5063 = getelementptr inbounds %struct.GPR, %struct.GPR* %5062, i32 0, i32 33
  %5064 = getelementptr inbounds %struct.Reg, %struct.Reg* %5063, i32 0, i32 0
  %PC.i1709 = bitcast %union.anon* %5064 to i64*
  %5065 = load i64, i64* %PC.i1709
  %5066 = add i64 %5065, 22
  %5067 = load i64, i64* %PC.i1709
  %5068 = add i64 %5067, 6
  %5069 = load i64, i64* %PC.i1709
  %5070 = add i64 %5069, 6
  store i64 %5070, i64* %PC.i1709
  %5071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5072 = load i8, i8* %5071, align 1
  %5073 = icmp ne i8 %5072, 0
  %5074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5075 = load i8, i8* %5074, align 1
  %5076 = icmp ne i8 %5075, 0
  %5077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5078 = load i8, i8* %5077, align 1
  %5079 = icmp ne i8 %5078, 0
  %5080 = xor i1 %5076, %5079
  %5081 = or i1 %5073, %5080
  %5082 = zext i1 %5081 to i8
  store i8 %5082, i8* %BRANCH_TAKEN, align 1
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5084 = select i1 %5081, i64 %5066, i64 %5068
  store i64 %5084, i64* %5083, align 8
  store %struct.Memory* %loadMem_43a7e9, %struct.Memory** %MEMORY
  %loadBr_43a7e9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a7e9 = icmp eq i8 %loadBr_43a7e9, 1
  br i1 %cmpBr_43a7e9, label %block_.L_43a7ff, label %block_43a7ef

block_43a7ef:                                     ; preds = %block_.L_43a7cd
  %loadMem_43a7ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %5085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5086 = getelementptr inbounds %struct.GPR, %struct.GPR* %5085, i32 0, i32 33
  %5087 = getelementptr inbounds %struct.Reg, %struct.Reg* %5086, i32 0, i32 0
  %PC.i1707 = bitcast %union.anon* %5087 to i64*
  %5088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5089 = getelementptr inbounds %struct.GPR, %struct.GPR* %5088, i32 0, i32 1
  %5090 = getelementptr inbounds %struct.Reg, %struct.Reg* %5089, i32 0, i32 0
  %RAX.i1708 = bitcast %union.anon* %5090 to i64*
  %5091 = load i64, i64* %PC.i1707
  %5092 = add i64 %5091, 5
  store i64 %5092, i64* %PC.i1707
  store i64 51, i64* %RAX.i1708, align 8
  store %struct.Memory* %loadMem_43a7ef, %struct.Memory** %MEMORY
  %loadMem_43a7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5094 = getelementptr inbounds %struct.GPR, %struct.GPR* %5093, i32 0, i32 33
  %5095 = getelementptr inbounds %struct.Reg, %struct.Reg* %5094, i32 0, i32 0
  %PC.i1704 = bitcast %union.anon* %5095 to i64*
  %5096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5097 = getelementptr inbounds %struct.GPR, %struct.GPR* %5096, i32 0, i32 1
  %5098 = getelementptr inbounds %struct.Reg, %struct.Reg* %5097, i32 0, i32 0
  %EAX.i1705 = bitcast %union.anon* %5098 to i32*
  %5099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5100 = getelementptr inbounds %struct.GPR, %struct.GPR* %5099, i32 0, i32 15
  %5101 = getelementptr inbounds %struct.Reg, %struct.Reg* %5100, i32 0, i32 0
  %RBP.i1706 = bitcast %union.anon* %5101 to i64*
  %5102 = load i64, i64* %RBP.i1706
  %5103 = sub i64 %5102, 392
  %5104 = load i32, i32* %EAX.i1705
  %5105 = zext i32 %5104 to i64
  %5106 = load i64, i64* %PC.i1704
  %5107 = add i64 %5106, 6
  store i64 %5107, i64* %PC.i1704
  %5108 = inttoptr i64 %5103 to i32*
  store i32 %5104, i32* %5108
  store %struct.Memory* %loadMem_43a7f4, %struct.Memory** %MEMORY
  %loadMem_43a7fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5110 = getelementptr inbounds %struct.GPR, %struct.GPR* %5109, i32 0, i32 33
  %5111 = getelementptr inbounds %struct.Reg, %struct.Reg* %5110, i32 0, i32 0
  %PC.i1703 = bitcast %union.anon* %5111 to i64*
  %5112 = load i64, i64* %PC.i1703
  %5113 = add i64 %5112, 36
  %5114 = load i64, i64* %PC.i1703
  %5115 = add i64 %5114, 5
  store i64 %5115, i64* %PC.i1703
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5113, i64* %5116, align 8
  store %struct.Memory* %loadMem_43a7fa, %struct.Memory** %MEMORY
  br label %block_.L_43a81e

block_.L_43a7ff:                                  ; preds = %block_.L_43a7cd
  %loadMem_43a7ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %5117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5118 = getelementptr inbounds %struct.GPR, %struct.GPR* %5117, i32 0, i32 33
  %5119 = getelementptr inbounds %struct.Reg, %struct.Reg* %5118, i32 0, i32 0
  %PC.i1700 = bitcast %union.anon* %5119 to i64*
  %5120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5121 = getelementptr inbounds %struct.GPR, %struct.GPR* %5120, i32 0, i32 1
  %5122 = getelementptr inbounds %struct.Reg, %struct.Reg* %5121, i32 0, i32 0
  %RAX.i1701 = bitcast %union.anon* %5122 to i64*
  %5123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5124 = getelementptr inbounds %struct.GPR, %struct.GPR* %5123, i32 0, i32 15
  %5125 = getelementptr inbounds %struct.Reg, %struct.Reg* %5124, i32 0, i32 0
  %RBP.i1702 = bitcast %union.anon* %5125 to i64*
  %5126 = load i64, i64* %RBP.i1702
  %5127 = sub i64 %5126, 248
  %5128 = load i64, i64* %PC.i1700
  %5129 = add i64 %5128, 7
  store i64 %5129, i64* %PC.i1700
  %5130 = inttoptr i64 %5127 to i64*
  %5131 = load i64, i64* %5130
  store i64 %5131, i64* %RAX.i1701, align 8
  store %struct.Memory* %loadMem_43a7ff, %struct.Memory** %MEMORY
  %loadMem_43a806 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5133 = getelementptr inbounds %struct.GPR, %struct.GPR* %5132, i32 0, i32 33
  %5134 = getelementptr inbounds %struct.Reg, %struct.Reg* %5133, i32 0, i32 0
  %PC.i1697 = bitcast %union.anon* %5134 to i64*
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5136 = getelementptr inbounds %struct.GPR, %struct.GPR* %5135, i32 0, i32 1
  %5137 = getelementptr inbounds %struct.Reg, %struct.Reg* %5136, i32 0, i32 0
  %RAX.i1698 = bitcast %union.anon* %5137 to i64*
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5139 = getelementptr inbounds %struct.GPR, %struct.GPR* %5138, i32 0, i32 5
  %5140 = getelementptr inbounds %struct.Reg, %struct.Reg* %5139, i32 0, i32 0
  %RCX.i1699 = bitcast %union.anon* %5140 to i64*
  %5141 = load i64, i64* %RAX.i1698
  %5142 = add i64 %5141, 12
  %5143 = load i64, i64* %PC.i1697
  %5144 = add i64 %5143, 3
  store i64 %5144, i64* %PC.i1697
  %5145 = inttoptr i64 %5142 to i32*
  %5146 = load i32, i32* %5145
  %5147 = zext i32 %5146 to i64
  store i64 %5147, i64* %RCX.i1699, align 8
  store %struct.Memory* %loadMem_43a806, %struct.Memory** %MEMORY
  %loadMem_43a809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5149 = getelementptr inbounds %struct.GPR, %struct.GPR* %5148, i32 0, i32 33
  %5150 = getelementptr inbounds %struct.Reg, %struct.Reg* %5149, i32 0, i32 0
  %PC.i1694 = bitcast %union.anon* %5150 to i64*
  %5151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5152 = getelementptr inbounds %struct.GPR, %struct.GPR* %5151, i32 0, i32 1
  %5153 = getelementptr inbounds %struct.Reg, %struct.Reg* %5152, i32 0, i32 0
  %RAX.i1695 = bitcast %union.anon* %5153 to i64*
  %5154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5155 = getelementptr inbounds %struct.GPR, %struct.GPR* %5154, i32 0, i32 15
  %5156 = getelementptr inbounds %struct.Reg, %struct.Reg* %5155, i32 0, i32 0
  %RBP.i1696 = bitcast %union.anon* %5156 to i64*
  %5157 = load i64, i64* %RBP.i1696
  %5158 = sub i64 %5157, 40
  %5159 = load i64, i64* %PC.i1694
  %5160 = add i64 %5159, 4
  store i64 %5160, i64* %PC.i1694
  %5161 = inttoptr i64 %5158 to i64*
  %5162 = load i64, i64* %5161
  store i64 %5162, i64* %RAX.i1695, align 8
  store %struct.Memory* %loadMem_43a809, %struct.Memory** %MEMORY
  %loadMem_43a80d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5164 = getelementptr inbounds %struct.GPR, %struct.GPR* %5163, i32 0, i32 33
  %5165 = getelementptr inbounds %struct.Reg, %struct.Reg* %5164, i32 0, i32 0
  %PC.i1691 = bitcast %union.anon* %5165 to i64*
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5167 = getelementptr inbounds %struct.GPR, %struct.GPR* %5166, i32 0, i32 7
  %5168 = getelementptr inbounds %struct.Reg, %struct.Reg* %5167, i32 0, i32 0
  %RDX.i1692 = bitcast %union.anon* %5168 to i64*
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5170 = getelementptr inbounds %struct.GPR, %struct.GPR* %5169, i32 0, i32 15
  %5171 = getelementptr inbounds %struct.Reg, %struct.Reg* %5170, i32 0, i32 0
  %RBP.i1693 = bitcast %union.anon* %5171 to i64*
  %5172 = load i64, i64* %RBP.i1693
  %5173 = sub i64 %5172, 72
  %5174 = load i64, i64* %PC.i1691
  %5175 = add i64 %5174, 4
  store i64 %5175, i64* %PC.i1691
  %5176 = inttoptr i64 %5173 to i32*
  %5177 = load i32, i32* %5176
  %5178 = sext i32 %5177 to i64
  store i64 %5178, i64* %RDX.i1692, align 8
  store %struct.Memory* %loadMem_43a80d, %struct.Memory** %MEMORY
  %loadMem_43a811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5180 = getelementptr inbounds %struct.GPR, %struct.GPR* %5179, i32 0, i32 33
  %5181 = getelementptr inbounds %struct.Reg, %struct.Reg* %5180, i32 0, i32 0
  %PC.i1687 = bitcast %union.anon* %5181 to i64*
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5183 = getelementptr inbounds %struct.GPR, %struct.GPR* %5182, i32 0, i32 1
  %5184 = getelementptr inbounds %struct.Reg, %struct.Reg* %5183, i32 0, i32 0
  %RAX.i1688 = bitcast %union.anon* %5184 to i64*
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5186 = getelementptr inbounds %struct.GPR, %struct.GPR* %5185, i32 0, i32 5
  %5187 = getelementptr inbounds %struct.Reg, %struct.Reg* %5186, i32 0, i32 0
  %RCX.i1689 = bitcast %union.anon* %5187 to i64*
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5189 = getelementptr inbounds %struct.GPR, %struct.GPR* %5188, i32 0, i32 7
  %5190 = getelementptr inbounds %struct.Reg, %struct.Reg* %5189, i32 0, i32 0
  %RDX.i1690 = bitcast %union.anon* %5190 to i64*
  %5191 = load i64, i64* %RCX.i1689
  %5192 = load i64, i64* %RAX.i1688
  %5193 = load i64, i64* %RDX.i1690
  %5194 = mul i64 %5193, 4
  %5195 = add i64 %5192, 72716
  %5196 = add i64 %5195, %5194
  %5197 = load i64, i64* %PC.i1687
  %5198 = add i64 %5197, 7
  store i64 %5198, i64* %PC.i1687
  %5199 = trunc i64 %5191 to i32
  %5200 = inttoptr i64 %5196 to i32*
  %5201 = load i32, i32* %5200
  %5202 = add i32 %5201, %5199
  %5203 = zext i32 %5202 to i64
  store i64 %5203, i64* %RCX.i1689, align 8
  %5204 = icmp ult i32 %5202, %5199
  %5205 = icmp ult i32 %5202, %5201
  %5206 = or i1 %5204, %5205
  %5207 = zext i1 %5206 to i8
  %5208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5207, i8* %5208, align 1
  %5209 = and i32 %5202, 255
  %5210 = call i32 @llvm.ctpop.i32(i32 %5209)
  %5211 = trunc i32 %5210 to i8
  %5212 = and i8 %5211, 1
  %5213 = xor i8 %5212, 1
  %5214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5213, i8* %5214, align 1
  %5215 = xor i32 %5201, %5199
  %5216 = xor i32 %5215, %5202
  %5217 = lshr i32 %5216, 4
  %5218 = trunc i32 %5217 to i8
  %5219 = and i8 %5218, 1
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5219, i8* %5220, align 1
  %5221 = icmp eq i32 %5202, 0
  %5222 = zext i1 %5221 to i8
  %5223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5222, i8* %5223, align 1
  %5224 = lshr i32 %5202, 31
  %5225 = trunc i32 %5224 to i8
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5225, i8* %5226, align 1
  %5227 = lshr i32 %5199, 31
  %5228 = lshr i32 %5201, 31
  %5229 = xor i32 %5224, %5227
  %5230 = xor i32 %5224, %5228
  %5231 = add i32 %5229, %5230
  %5232 = icmp eq i32 %5231, 2
  %5233 = zext i1 %5232 to i8
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5233, i8* %5234, align 1
  store %struct.Memory* %loadMem_43a811, %struct.Memory** %MEMORY
  %loadMem_43a818 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5236 = getelementptr inbounds %struct.GPR, %struct.GPR* %5235, i32 0, i32 33
  %5237 = getelementptr inbounds %struct.Reg, %struct.Reg* %5236, i32 0, i32 0
  %PC.i1684 = bitcast %union.anon* %5237 to i64*
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5239 = getelementptr inbounds %struct.GPR, %struct.GPR* %5238, i32 0, i32 5
  %5240 = getelementptr inbounds %struct.Reg, %struct.Reg* %5239, i32 0, i32 0
  %ECX.i1685 = bitcast %union.anon* %5240 to i32*
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5242 = getelementptr inbounds %struct.GPR, %struct.GPR* %5241, i32 0, i32 15
  %5243 = getelementptr inbounds %struct.Reg, %struct.Reg* %5242, i32 0, i32 0
  %RBP.i1686 = bitcast %union.anon* %5243 to i64*
  %5244 = load i64, i64* %RBP.i1686
  %5245 = sub i64 %5244, 392
  %5246 = load i32, i32* %ECX.i1685
  %5247 = zext i32 %5246 to i64
  %5248 = load i64, i64* %PC.i1684
  %5249 = add i64 %5248, 6
  store i64 %5249, i64* %PC.i1684
  %5250 = inttoptr i64 %5245 to i32*
  store i32 %5246, i32* %5250
  store %struct.Memory* %loadMem_43a818, %struct.Memory** %MEMORY
  br label %block_.L_43a81e

block_.L_43a81e:                                  ; preds = %block_.L_43a7ff, %block_43a7ef
  %loadMem_43a81e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5252 = getelementptr inbounds %struct.GPR, %struct.GPR* %5251, i32 0, i32 33
  %5253 = getelementptr inbounds %struct.Reg, %struct.Reg* %5252, i32 0, i32 0
  %PC.i1681 = bitcast %union.anon* %5253 to i64*
  %5254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5255 = getelementptr inbounds %struct.GPR, %struct.GPR* %5254, i32 0, i32 1
  %5256 = getelementptr inbounds %struct.Reg, %struct.Reg* %5255, i32 0, i32 0
  %RAX.i1682 = bitcast %union.anon* %5256 to i64*
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5258 = getelementptr inbounds %struct.GPR, %struct.GPR* %5257, i32 0, i32 15
  %5259 = getelementptr inbounds %struct.Reg, %struct.Reg* %5258, i32 0, i32 0
  %RBP.i1683 = bitcast %union.anon* %5259 to i64*
  %5260 = load i64, i64* %RBP.i1683
  %5261 = sub i64 %5260, 392
  %5262 = load i64, i64* %PC.i1681
  %5263 = add i64 %5262, 6
  store i64 %5263, i64* %PC.i1681
  %5264 = inttoptr i64 %5261 to i32*
  %5265 = load i32, i32* %5264
  %5266 = zext i32 %5265 to i64
  store i64 %5266, i64* %RAX.i1682, align 8
  store %struct.Memory* %loadMem_43a81e, %struct.Memory** %MEMORY
  %loadMem_43a824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5268 = getelementptr inbounds %struct.GPR, %struct.GPR* %5267, i32 0, i32 33
  %5269 = getelementptr inbounds %struct.Reg, %struct.Reg* %5268, i32 0, i32 0
  %PC.i1678 = bitcast %union.anon* %5269 to i64*
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5271 = getelementptr inbounds %struct.GPR, %struct.GPR* %5270, i32 0, i32 1
  %5272 = getelementptr inbounds %struct.Reg, %struct.Reg* %5271, i32 0, i32 0
  %EAX.i1679 = bitcast %union.anon* %5272 to i32*
  %5273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5274 = getelementptr inbounds %struct.GPR, %struct.GPR* %5273, i32 0, i32 15
  %5275 = getelementptr inbounds %struct.Reg, %struct.Reg* %5274, i32 0, i32 0
  %RBP.i1680 = bitcast %union.anon* %5275 to i64*
  %5276 = load i64, i64* %RBP.i1680
  %5277 = sub i64 %5276, 388
  %5278 = load i32, i32* %EAX.i1679
  %5279 = zext i32 %5278 to i64
  %5280 = load i64, i64* %PC.i1678
  %5281 = add i64 %5280, 6
  store i64 %5281, i64* %PC.i1678
  %5282 = inttoptr i64 %5277 to i32*
  store i32 %5278, i32* %5282
  store %struct.Memory* %loadMem_43a824, %struct.Memory** %MEMORY
  br label %block_.L_43a82a

block_.L_43a82a:                                  ; preds = %block_.L_43a81e, %block_43a7c0
  %loadMem_43a82a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5284 = getelementptr inbounds %struct.GPR, %struct.GPR* %5283, i32 0, i32 33
  %5285 = getelementptr inbounds %struct.Reg, %struct.Reg* %5284, i32 0, i32 0
  %PC.i1675 = bitcast %union.anon* %5285 to i64*
  %5286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5287 = getelementptr inbounds %struct.GPR, %struct.GPR* %5286, i32 0, i32 1
  %5288 = getelementptr inbounds %struct.Reg, %struct.Reg* %5287, i32 0, i32 0
  %RAX.i1676 = bitcast %union.anon* %5288 to i64*
  %5289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5290 = getelementptr inbounds %struct.GPR, %struct.GPR* %5289, i32 0, i32 15
  %5291 = getelementptr inbounds %struct.Reg, %struct.Reg* %5290, i32 0, i32 0
  %RBP.i1677 = bitcast %union.anon* %5291 to i64*
  %5292 = load i64, i64* %RBP.i1677
  %5293 = sub i64 %5292, 388
  %5294 = load i64, i64* %PC.i1675
  %5295 = add i64 %5294, 6
  store i64 %5295, i64* %PC.i1675
  %5296 = inttoptr i64 %5293 to i32*
  %5297 = load i32, i32* %5296
  %5298 = zext i32 %5297 to i64
  store i64 %5298, i64* %RAX.i1676, align 8
  store %struct.Memory* %loadMem_43a82a, %struct.Memory** %MEMORY
  %loadMem_43a830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5300 = getelementptr inbounds %struct.GPR, %struct.GPR* %5299, i32 0, i32 33
  %5301 = getelementptr inbounds %struct.Reg, %struct.Reg* %5300, i32 0, i32 0
  %PC.i1672 = bitcast %union.anon* %5301 to i64*
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5303 = getelementptr inbounds %struct.GPR, %struct.GPR* %5302, i32 0, i32 1
  %5304 = getelementptr inbounds %struct.Reg, %struct.Reg* %5303, i32 0, i32 0
  %EAX.i1673 = bitcast %union.anon* %5304 to i32*
  %5305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5306 = getelementptr inbounds %struct.GPR, %struct.GPR* %5305, i32 0, i32 5
  %5307 = getelementptr inbounds %struct.Reg, %struct.Reg* %5306, i32 0, i32 0
  %RCX.i1674 = bitcast %union.anon* %5307 to i64*
  %5308 = load i32, i32* %EAX.i1673
  %5309 = zext i32 %5308 to i64
  %5310 = load i64, i64* %PC.i1672
  %5311 = add i64 %5310, 3
  store i64 %5311, i64* %PC.i1672
  %5312 = shl i64 %5309, 32
  %5313 = ashr exact i64 %5312, 32
  store i64 %5313, i64* %RCX.i1674, align 8
  store %struct.Memory* %loadMem_43a830, %struct.Memory** %MEMORY
  %loadMem_43a833 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5315 = getelementptr inbounds %struct.GPR, %struct.GPR* %5314, i32 0, i32 33
  %5316 = getelementptr inbounds %struct.Reg, %struct.Reg* %5315, i32 0, i32 0
  %PC.i1669 = bitcast %union.anon* %5316 to i64*
  %5317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5318 = getelementptr inbounds %struct.GPR, %struct.GPR* %5317, i32 0, i32 1
  %5319 = getelementptr inbounds %struct.Reg, %struct.Reg* %5318, i32 0, i32 0
  %RAX.i1670 = bitcast %union.anon* %5319 to i64*
  %5320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5321 = getelementptr inbounds %struct.GPR, %struct.GPR* %5320, i32 0, i32 5
  %5322 = getelementptr inbounds %struct.Reg, %struct.Reg* %5321, i32 0, i32 0
  %RCX.i1671 = bitcast %union.anon* %5322 to i64*
  %5323 = load i64, i64* %RCX.i1671
  %5324 = add i64 %5323, 4924192
  %5325 = load i64, i64* %PC.i1669
  %5326 = add i64 %5325, 8
  store i64 %5326, i64* %PC.i1669
  %5327 = inttoptr i64 %5324 to i8*
  %5328 = load i8, i8* %5327
  %5329 = zext i8 %5328 to i64
  store i64 %5329, i64* %RAX.i1670, align 8
  store %struct.Memory* %loadMem_43a833, %struct.Memory** %MEMORY
  %loadMem_43a83b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5331 = getelementptr inbounds %struct.GPR, %struct.GPR* %5330, i32 0, i32 33
  %5332 = getelementptr inbounds %struct.Reg, %struct.Reg* %5331, i32 0, i32 0
  %PC.i1666 = bitcast %union.anon* %5332 to i64*
  %5333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5334 = getelementptr inbounds %struct.GPR, %struct.GPR* %5333, i32 0, i32 5
  %5335 = getelementptr inbounds %struct.Reg, %struct.Reg* %5334, i32 0, i32 0
  %RCX.i1667 = bitcast %union.anon* %5335 to i64*
  %5336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5337 = getelementptr inbounds %struct.GPR, %struct.GPR* %5336, i32 0, i32 15
  %5338 = getelementptr inbounds %struct.Reg, %struct.Reg* %5337, i32 0, i32 0
  %RBP.i1668 = bitcast %union.anon* %5338 to i64*
  %5339 = load i64, i64* %RBP.i1668
  %5340 = sub i64 %5339, 240
  %5341 = load i64, i64* %PC.i1666
  %5342 = add i64 %5341, 7
  store i64 %5342, i64* %PC.i1666
  %5343 = inttoptr i64 %5340 to i64*
  %5344 = load i64, i64* %5343
  store i64 %5344, i64* %RCX.i1667, align 8
  store %struct.Memory* %loadMem_43a83b, %struct.Memory** %MEMORY
  %loadMem_43a842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5346 = getelementptr inbounds %struct.GPR, %struct.GPR* %5345, i32 0, i32 33
  %5347 = getelementptr inbounds %struct.Reg, %struct.Reg* %5346, i32 0, i32 0
  %PC.i1663 = bitcast %union.anon* %5347 to i64*
  %5348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5349 = getelementptr inbounds %struct.GPR, %struct.GPR* %5348, i32 0, i32 5
  %5350 = getelementptr inbounds %struct.Reg, %struct.Reg* %5349, i32 0, i32 0
  %RCX.i1664 = bitcast %union.anon* %5350 to i64*
  %5351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5352 = getelementptr inbounds %struct.GPR, %struct.GPR* %5351, i32 0, i32 7
  %5353 = getelementptr inbounds %struct.Reg, %struct.Reg* %5352, i32 0, i32 0
  %RDX.i1665 = bitcast %union.anon* %5353 to i64*
  %5354 = load i64, i64* %RCX.i1664
  %5355 = add i64 %5354, 12
  %5356 = load i64, i64* %PC.i1663
  %5357 = add i64 %5356, 3
  store i64 %5357, i64* %PC.i1663
  %5358 = inttoptr i64 %5355 to i32*
  %5359 = load i32, i32* %5358
  %5360 = zext i32 %5359 to i64
  store i64 %5360, i64* %RDX.i1665, align 8
  store %struct.Memory* %loadMem_43a842, %struct.Memory** %MEMORY
  %loadMem_43a845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5362 = getelementptr inbounds %struct.GPR, %struct.GPR* %5361, i32 0, i32 33
  %5363 = getelementptr inbounds %struct.Reg, %struct.Reg* %5362, i32 0, i32 0
  %PC.i1660 = bitcast %union.anon* %5363 to i64*
  %5364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5365 = getelementptr inbounds %struct.GPR, %struct.GPR* %5364, i32 0, i32 5
  %5366 = getelementptr inbounds %struct.Reg, %struct.Reg* %5365, i32 0, i32 0
  %RCX.i1661 = bitcast %union.anon* %5366 to i64*
  %5367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5368 = getelementptr inbounds %struct.GPR, %struct.GPR* %5367, i32 0, i32 15
  %5369 = getelementptr inbounds %struct.Reg, %struct.Reg* %5368, i32 0, i32 0
  %RBP.i1662 = bitcast %union.anon* %5369 to i64*
  %5370 = load i64, i64* %RBP.i1662
  %5371 = sub i64 %5370, 40
  %5372 = load i64, i64* %PC.i1660
  %5373 = add i64 %5372, 4
  store i64 %5373, i64* %PC.i1660
  %5374 = inttoptr i64 %5371 to i64*
  %5375 = load i64, i64* %5374
  store i64 %5375, i64* %RCX.i1661, align 8
  store %struct.Memory* %loadMem_43a845, %struct.Memory** %MEMORY
  %loadMem_43a849 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5377 = getelementptr inbounds %struct.GPR, %struct.GPR* %5376, i32 0, i32 33
  %5378 = getelementptr inbounds %struct.Reg, %struct.Reg* %5377, i32 0, i32 0
  %PC.i1657 = bitcast %union.anon* %5378 to i64*
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5380 = getelementptr inbounds %struct.GPR, %struct.GPR* %5379, i32 0, i32 9
  %5381 = getelementptr inbounds %struct.Reg, %struct.Reg* %5380, i32 0, i32 0
  %RSI.i1658 = bitcast %union.anon* %5381 to i64*
  %5382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5383 = getelementptr inbounds %struct.GPR, %struct.GPR* %5382, i32 0, i32 15
  %5384 = getelementptr inbounds %struct.Reg, %struct.Reg* %5383, i32 0, i32 0
  %RBP.i1659 = bitcast %union.anon* %5384 to i64*
  %5385 = load i64, i64* %RBP.i1659
  %5386 = sub i64 %5385, 72
  %5387 = load i64, i64* %PC.i1657
  %5388 = add i64 %5387, 4
  store i64 %5388, i64* %PC.i1657
  %5389 = inttoptr i64 %5386 to i32*
  %5390 = load i32, i32* %5389
  %5391 = sext i32 %5390 to i64
  store i64 %5391, i64* %RSI.i1658, align 8
  store %struct.Memory* %loadMem_43a849, %struct.Memory** %MEMORY
  %loadMem_43a84d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5393 = getelementptr inbounds %struct.GPR, %struct.GPR* %5392, i32 0, i32 33
  %5394 = getelementptr inbounds %struct.Reg, %struct.Reg* %5393, i32 0, i32 0
  %PC.i1653 = bitcast %union.anon* %5394 to i64*
  %5395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5396 = getelementptr inbounds %struct.GPR, %struct.GPR* %5395, i32 0, i32 5
  %5397 = getelementptr inbounds %struct.Reg, %struct.Reg* %5396, i32 0, i32 0
  %RCX.i1654 = bitcast %union.anon* %5397 to i64*
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5399 = getelementptr inbounds %struct.GPR, %struct.GPR* %5398, i32 0, i32 7
  %5400 = getelementptr inbounds %struct.Reg, %struct.Reg* %5399, i32 0, i32 0
  %RDX.i1655 = bitcast %union.anon* %5400 to i64*
  %5401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5402 = getelementptr inbounds %struct.GPR, %struct.GPR* %5401, i32 0, i32 9
  %5403 = getelementptr inbounds %struct.Reg, %struct.Reg* %5402, i32 0, i32 0
  %RSI.i1656 = bitcast %union.anon* %5403 to i64*
  %5404 = load i64, i64* %RDX.i1655
  %5405 = load i64, i64* %RCX.i1654
  %5406 = load i64, i64* %RSI.i1656
  %5407 = mul i64 %5406, 4
  %5408 = add i64 %5405, 72716
  %5409 = add i64 %5408, %5407
  %5410 = load i64, i64* %PC.i1653
  %5411 = add i64 %5410, 7
  store i64 %5411, i64* %PC.i1653
  %5412 = trunc i64 %5404 to i32
  %5413 = inttoptr i64 %5409 to i32*
  %5414 = load i32, i32* %5413
  %5415 = add i32 %5414, %5412
  %5416 = zext i32 %5415 to i64
  store i64 %5416, i64* %RDX.i1655, align 8
  %5417 = icmp ult i32 %5415, %5412
  %5418 = icmp ult i32 %5415, %5414
  %5419 = or i1 %5417, %5418
  %5420 = zext i1 %5419 to i8
  %5421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5420, i8* %5421, align 1
  %5422 = and i32 %5415, 255
  %5423 = call i32 @llvm.ctpop.i32(i32 %5422)
  %5424 = trunc i32 %5423 to i8
  %5425 = and i8 %5424, 1
  %5426 = xor i8 %5425, 1
  %5427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5426, i8* %5427, align 1
  %5428 = xor i32 %5414, %5412
  %5429 = xor i32 %5428, %5415
  %5430 = lshr i32 %5429, 4
  %5431 = trunc i32 %5430 to i8
  %5432 = and i8 %5431, 1
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5432, i8* %5433, align 1
  %5434 = icmp eq i32 %5415, 0
  %5435 = zext i1 %5434 to i8
  %5436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5435, i8* %5436, align 1
  %5437 = lshr i32 %5415, 31
  %5438 = trunc i32 %5437 to i8
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5438, i8* %5439, align 1
  %5440 = lshr i32 %5412, 31
  %5441 = lshr i32 %5414, 31
  %5442 = xor i32 %5437, %5440
  %5443 = xor i32 %5437, %5441
  %5444 = add i32 %5442, %5443
  %5445 = icmp eq i32 %5444, 2
  %5446 = zext i1 %5445 to i8
  %5447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5446, i8* %5447, align 1
  store %struct.Memory* %loadMem_43a84d, %struct.Memory** %MEMORY
  %loadMem_43a854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5449 = getelementptr inbounds %struct.GPR, %struct.GPR* %5448, i32 0, i32 33
  %5450 = getelementptr inbounds %struct.Reg, %struct.Reg* %5449, i32 0, i32 0
  %PC.i1651 = bitcast %union.anon* %5450 to i64*
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5452 = getelementptr inbounds %struct.GPR, %struct.GPR* %5451, i32 0, i32 7
  %5453 = getelementptr inbounds %struct.Reg, %struct.Reg* %5452, i32 0, i32 0
  %EDX.i1652 = bitcast %union.anon* %5453 to i32*
  %5454 = load i32, i32* %EDX.i1652
  %5455 = zext i32 %5454 to i64
  %5456 = load i64, i64* %PC.i1651
  %5457 = add i64 %5456, 3
  store i64 %5457, i64* %PC.i1651
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5458, align 1
  %5459 = and i32 %5454, 255
  %5460 = call i32 @llvm.ctpop.i32(i32 %5459)
  %5461 = trunc i32 %5460 to i8
  %5462 = and i8 %5461, 1
  %5463 = xor i8 %5462, 1
  %5464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5463, i8* %5464, align 1
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5465, align 1
  %5466 = icmp eq i32 %5454, 0
  %5467 = zext i1 %5466 to i8
  %5468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5467, i8* %5468, align 1
  %5469 = lshr i32 %5454, 31
  %5470 = trunc i32 %5469 to i8
  %5471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5470, i8* %5471, align 1
  %5472 = lshr i32 %5454, 31
  %5473 = xor i32 %5469, %5472
  %5474 = add i32 %5473, %5472
  %5475 = icmp eq i32 %5474, 2
  %5476 = zext i1 %5475 to i8
  %5477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5476, i8* %5477, align 1
  store %struct.Memory* %loadMem_43a854, %struct.Memory** %MEMORY
  %loadMem_43a857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5479 = getelementptr inbounds %struct.GPR, %struct.GPR* %5478, i32 0, i32 33
  %5480 = getelementptr inbounds %struct.Reg, %struct.Reg* %5479, i32 0, i32 0
  %PC.i1648 = bitcast %union.anon* %5480 to i64*
  %5481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5482 = getelementptr inbounds %struct.GPR, %struct.GPR* %5481, i32 0, i32 1
  %5483 = getelementptr inbounds %struct.Reg, %struct.Reg* %5482, i32 0, i32 0
  %EAX.i1649 = bitcast %union.anon* %5483 to i32*
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5485 = getelementptr inbounds %struct.GPR, %struct.GPR* %5484, i32 0, i32 15
  %5486 = getelementptr inbounds %struct.Reg, %struct.Reg* %5485, i32 0, i32 0
  %RBP.i1650 = bitcast %union.anon* %5486 to i64*
  %5487 = load i64, i64* %RBP.i1650
  %5488 = sub i64 %5487, 396
  %5489 = load i32, i32* %EAX.i1649
  %5490 = zext i32 %5489 to i64
  %5491 = load i64, i64* %PC.i1648
  %5492 = add i64 %5491, 6
  store i64 %5492, i64* %PC.i1648
  %5493 = inttoptr i64 %5488 to i32*
  store i32 %5489, i32* %5493
  store %struct.Memory* %loadMem_43a857, %struct.Memory** %MEMORY
  %loadMem_43a85d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5495 = getelementptr inbounds %struct.GPR, %struct.GPR* %5494, i32 0, i32 33
  %5496 = getelementptr inbounds %struct.Reg, %struct.Reg* %5495, i32 0, i32 0
  %PC.i1647 = bitcast %union.anon* %5496 to i64*
  %5497 = load i64, i64* %PC.i1647
  %5498 = add i64 %5497, 19
  %5499 = load i64, i64* %PC.i1647
  %5500 = add i64 %5499, 6
  %5501 = load i64, i64* %PC.i1647
  %5502 = add i64 %5501, 6
  store i64 %5502, i64* %PC.i1647
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5504 = load i8, i8* %5503, align 1
  %5505 = icmp ne i8 %5504, 0
  %5506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5507 = load i8, i8* %5506, align 1
  %5508 = icmp ne i8 %5507, 0
  %5509 = xor i1 %5505, %5508
  %5510 = xor i1 %5509, true
  %5511 = zext i1 %5510 to i8
  store i8 %5511, i8* %BRANCH_TAKEN, align 1
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5513 = select i1 %5509, i64 %5500, i64 %5498
  store i64 %5513, i64* %5512, align 8
  store %struct.Memory* %loadMem_43a85d, %struct.Memory** %MEMORY
  %loadBr_43a85d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a85d = icmp eq i8 %loadBr_43a85d, 1
  br i1 %cmpBr_43a85d, label %block_.L_43a870, label %block_43a863

block_43a863:                                     ; preds = %block_.L_43a82a
  %loadMem_43a863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5515 = getelementptr inbounds %struct.GPR, %struct.GPR* %5514, i32 0, i32 33
  %5516 = getelementptr inbounds %struct.Reg, %struct.Reg* %5515, i32 0, i32 0
  %PC.i1644 = bitcast %union.anon* %5516 to i64*
  %5517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5518 = getelementptr inbounds %struct.GPR, %struct.GPR* %5517, i32 0, i32 1
  %5519 = getelementptr inbounds %struct.Reg, %struct.Reg* %5518, i32 0, i32 0
  %EAX.i1645 = bitcast %union.anon* %5519 to i32*
  %5520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5521 = getelementptr inbounds %struct.GPR, %struct.GPR* %5520, i32 0, i32 1
  %5522 = getelementptr inbounds %struct.Reg, %struct.Reg* %5521, i32 0, i32 0
  %RAX.i1646 = bitcast %union.anon* %5522 to i64*
  %5523 = load i64, i64* %RAX.i1646
  %5524 = load i32, i32* %EAX.i1645
  %5525 = zext i32 %5524 to i64
  %5526 = load i64, i64* %PC.i1644
  %5527 = add i64 %5526, 2
  store i64 %5527, i64* %PC.i1644
  %5528 = xor i64 %5525, %5523
  %5529 = trunc i64 %5528 to i32
  %5530 = and i64 %5528, 4294967295
  store i64 %5530, i64* %RAX.i1646, align 8
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5531, align 1
  %5532 = and i32 %5529, 255
  %5533 = call i32 @llvm.ctpop.i32(i32 %5532)
  %5534 = trunc i32 %5533 to i8
  %5535 = and i8 %5534, 1
  %5536 = xor i8 %5535, 1
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5536, i8* %5537, align 1
  %5538 = icmp eq i32 %5529, 0
  %5539 = zext i1 %5538 to i8
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5539, i8* %5540, align 1
  %5541 = lshr i32 %5529, 31
  %5542 = trunc i32 %5541 to i8
  %5543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5542, i8* %5543, align 1
  %5544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5544, align 1
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5545, align 1
  store %struct.Memory* %loadMem_43a863, %struct.Memory** %MEMORY
  %loadMem_43a865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5547 = getelementptr inbounds %struct.GPR, %struct.GPR* %5546, i32 0, i32 33
  %5548 = getelementptr inbounds %struct.Reg, %struct.Reg* %5547, i32 0, i32 0
  %PC.i1641 = bitcast %union.anon* %5548 to i64*
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5550 = getelementptr inbounds %struct.GPR, %struct.GPR* %5549, i32 0, i32 1
  %5551 = getelementptr inbounds %struct.Reg, %struct.Reg* %5550, i32 0, i32 0
  %EAX.i1642 = bitcast %union.anon* %5551 to i32*
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 15
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %RBP.i1643 = bitcast %union.anon* %5554 to i64*
  %5555 = load i64, i64* %RBP.i1643
  %5556 = sub i64 %5555, 400
  %5557 = load i32, i32* %EAX.i1642
  %5558 = zext i32 %5557 to i64
  %5559 = load i64, i64* %PC.i1641
  %5560 = add i64 %5559, 6
  store i64 %5560, i64* %PC.i1641
  %5561 = inttoptr i64 %5556 to i32*
  store i32 %5557, i32* %5561
  store %struct.Memory* %loadMem_43a865, %struct.Memory** %MEMORY
  %loadMem_43a86b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5563 = getelementptr inbounds %struct.GPR, %struct.GPR* %5562, i32 0, i32 33
  %5564 = getelementptr inbounds %struct.Reg, %struct.Reg* %5563, i32 0, i32 0
  %PC.i1640 = bitcast %union.anon* %5564 to i64*
  %5565 = load i64, i64* %PC.i1640
  %5566 = add i64 %5565, 98
  %5567 = load i64, i64* %PC.i1640
  %5568 = add i64 %5567, 5
  store i64 %5568, i64* %PC.i1640
  %5569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5566, i64* %5569, align 8
  store %struct.Memory* %loadMem_43a86b, %struct.Memory** %MEMORY
  br label %block_.L_43a8cd

block_.L_43a870:                                  ; preds = %block_.L_43a82a
  %loadMem_43a870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5571 = getelementptr inbounds %struct.GPR, %struct.GPR* %5570, i32 0, i32 33
  %5572 = getelementptr inbounds %struct.Reg, %struct.Reg* %5571, i32 0, i32 0
  %PC.i1637 = bitcast %union.anon* %5572 to i64*
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5574 = getelementptr inbounds %struct.GPR, %struct.GPR* %5573, i32 0, i32 1
  %5575 = getelementptr inbounds %struct.Reg, %struct.Reg* %5574, i32 0, i32 0
  %RAX.i1638 = bitcast %union.anon* %5575 to i64*
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5577 = getelementptr inbounds %struct.GPR, %struct.GPR* %5576, i32 0, i32 15
  %5578 = getelementptr inbounds %struct.Reg, %struct.Reg* %5577, i32 0, i32 0
  %RBP.i1639 = bitcast %union.anon* %5578 to i64*
  %5579 = load i64, i64* %RBP.i1639
  %5580 = sub i64 %5579, 240
  %5581 = load i64, i64* %PC.i1637
  %5582 = add i64 %5581, 7
  store i64 %5582, i64* %PC.i1637
  %5583 = inttoptr i64 %5580 to i64*
  %5584 = load i64, i64* %5583
  store i64 %5584, i64* %RAX.i1638, align 8
  store %struct.Memory* %loadMem_43a870, %struct.Memory** %MEMORY
  %loadMem_43a877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5586 = getelementptr inbounds %struct.GPR, %struct.GPR* %5585, i32 0, i32 33
  %5587 = getelementptr inbounds %struct.Reg, %struct.Reg* %5586, i32 0, i32 0
  %PC.i1634 = bitcast %union.anon* %5587 to i64*
  %5588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5589 = getelementptr inbounds %struct.GPR, %struct.GPR* %5588, i32 0, i32 1
  %5590 = getelementptr inbounds %struct.Reg, %struct.Reg* %5589, i32 0, i32 0
  %RAX.i1635 = bitcast %union.anon* %5590 to i64*
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5592 = getelementptr inbounds %struct.GPR, %struct.GPR* %5591, i32 0, i32 5
  %5593 = getelementptr inbounds %struct.Reg, %struct.Reg* %5592, i32 0, i32 0
  %RCX.i1636 = bitcast %union.anon* %5593 to i64*
  %5594 = load i64, i64* %RAX.i1635
  %5595 = add i64 %5594, 12
  %5596 = load i64, i64* %PC.i1634
  %5597 = add i64 %5596, 3
  store i64 %5597, i64* %PC.i1634
  %5598 = inttoptr i64 %5595 to i32*
  %5599 = load i32, i32* %5598
  %5600 = zext i32 %5599 to i64
  store i64 %5600, i64* %RCX.i1636, align 8
  store %struct.Memory* %loadMem_43a877, %struct.Memory** %MEMORY
  %loadMem_43a87a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5602 = getelementptr inbounds %struct.GPR, %struct.GPR* %5601, i32 0, i32 33
  %5603 = getelementptr inbounds %struct.Reg, %struct.Reg* %5602, i32 0, i32 0
  %PC.i1631 = bitcast %union.anon* %5603 to i64*
  %5604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5605 = getelementptr inbounds %struct.GPR, %struct.GPR* %5604, i32 0, i32 1
  %5606 = getelementptr inbounds %struct.Reg, %struct.Reg* %5605, i32 0, i32 0
  %RAX.i1632 = bitcast %union.anon* %5606 to i64*
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5608 = getelementptr inbounds %struct.GPR, %struct.GPR* %5607, i32 0, i32 15
  %5609 = getelementptr inbounds %struct.Reg, %struct.Reg* %5608, i32 0, i32 0
  %RBP.i1633 = bitcast %union.anon* %5609 to i64*
  %5610 = load i64, i64* %RBP.i1633
  %5611 = sub i64 %5610, 40
  %5612 = load i64, i64* %PC.i1631
  %5613 = add i64 %5612, 4
  store i64 %5613, i64* %PC.i1631
  %5614 = inttoptr i64 %5611 to i64*
  %5615 = load i64, i64* %5614
  store i64 %5615, i64* %RAX.i1632, align 8
  store %struct.Memory* %loadMem_43a87a, %struct.Memory** %MEMORY
  %loadMem_43a87e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5617 = getelementptr inbounds %struct.GPR, %struct.GPR* %5616, i32 0, i32 33
  %5618 = getelementptr inbounds %struct.Reg, %struct.Reg* %5617, i32 0, i32 0
  %PC.i1628 = bitcast %union.anon* %5618 to i64*
  %5619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5620 = getelementptr inbounds %struct.GPR, %struct.GPR* %5619, i32 0, i32 7
  %5621 = getelementptr inbounds %struct.Reg, %struct.Reg* %5620, i32 0, i32 0
  %RDX.i1629 = bitcast %union.anon* %5621 to i64*
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5623 = getelementptr inbounds %struct.GPR, %struct.GPR* %5622, i32 0, i32 15
  %5624 = getelementptr inbounds %struct.Reg, %struct.Reg* %5623, i32 0, i32 0
  %RBP.i1630 = bitcast %union.anon* %5624 to i64*
  %5625 = load i64, i64* %RBP.i1630
  %5626 = sub i64 %5625, 72
  %5627 = load i64, i64* %PC.i1628
  %5628 = add i64 %5627, 4
  store i64 %5628, i64* %PC.i1628
  %5629 = inttoptr i64 %5626 to i32*
  %5630 = load i32, i32* %5629
  %5631 = sext i32 %5630 to i64
  store i64 %5631, i64* %RDX.i1629, align 8
  store %struct.Memory* %loadMem_43a87e, %struct.Memory** %MEMORY
  %loadMem_43a882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5633 = getelementptr inbounds %struct.GPR, %struct.GPR* %5632, i32 0, i32 33
  %5634 = getelementptr inbounds %struct.Reg, %struct.Reg* %5633, i32 0, i32 0
  %PC.i1624 = bitcast %union.anon* %5634 to i64*
  %5635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5636 = getelementptr inbounds %struct.GPR, %struct.GPR* %5635, i32 0, i32 1
  %5637 = getelementptr inbounds %struct.Reg, %struct.Reg* %5636, i32 0, i32 0
  %RAX.i1625 = bitcast %union.anon* %5637 to i64*
  %5638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5639 = getelementptr inbounds %struct.GPR, %struct.GPR* %5638, i32 0, i32 5
  %5640 = getelementptr inbounds %struct.Reg, %struct.Reg* %5639, i32 0, i32 0
  %RCX.i1626 = bitcast %union.anon* %5640 to i64*
  %5641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5642 = getelementptr inbounds %struct.GPR, %struct.GPR* %5641, i32 0, i32 7
  %5643 = getelementptr inbounds %struct.Reg, %struct.Reg* %5642, i32 0, i32 0
  %RDX.i1627 = bitcast %union.anon* %5643 to i64*
  %5644 = load i64, i64* %RCX.i1626
  %5645 = load i64, i64* %RAX.i1625
  %5646 = load i64, i64* %RDX.i1627
  %5647 = mul i64 %5646, 4
  %5648 = add i64 %5645, 72716
  %5649 = add i64 %5648, %5647
  %5650 = load i64, i64* %PC.i1624
  %5651 = add i64 %5650, 7
  store i64 %5651, i64* %PC.i1624
  %5652 = trunc i64 %5644 to i32
  %5653 = inttoptr i64 %5649 to i32*
  %5654 = load i32, i32* %5653
  %5655 = add i32 %5654, %5652
  %5656 = zext i32 %5655 to i64
  store i64 %5656, i64* %RCX.i1626, align 8
  %5657 = icmp ult i32 %5655, %5652
  %5658 = icmp ult i32 %5655, %5654
  %5659 = or i1 %5657, %5658
  %5660 = zext i1 %5659 to i8
  %5661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5660, i8* %5661, align 1
  %5662 = and i32 %5655, 255
  %5663 = call i32 @llvm.ctpop.i32(i32 %5662)
  %5664 = trunc i32 %5663 to i8
  %5665 = and i8 %5664, 1
  %5666 = xor i8 %5665, 1
  %5667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5666, i8* %5667, align 1
  %5668 = xor i32 %5654, %5652
  %5669 = xor i32 %5668, %5655
  %5670 = lshr i32 %5669, 4
  %5671 = trunc i32 %5670 to i8
  %5672 = and i8 %5671, 1
  %5673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5672, i8* %5673, align 1
  %5674 = icmp eq i32 %5655, 0
  %5675 = zext i1 %5674 to i8
  %5676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5675, i8* %5676, align 1
  %5677 = lshr i32 %5655, 31
  %5678 = trunc i32 %5677 to i8
  %5679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5678, i8* %5679, align 1
  %5680 = lshr i32 %5652, 31
  %5681 = lshr i32 %5654, 31
  %5682 = xor i32 %5677, %5680
  %5683 = xor i32 %5677, %5681
  %5684 = add i32 %5682, %5683
  %5685 = icmp eq i32 %5684, 2
  %5686 = zext i1 %5685 to i8
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5686, i8* %5687, align 1
  store %struct.Memory* %loadMem_43a882, %struct.Memory** %MEMORY
  %loadMem_43a889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5689 = getelementptr inbounds %struct.GPR, %struct.GPR* %5688, i32 0, i32 33
  %5690 = getelementptr inbounds %struct.Reg, %struct.Reg* %5689, i32 0, i32 0
  %PC.i1622 = bitcast %union.anon* %5690 to i64*
  %5691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5692 = getelementptr inbounds %struct.GPR, %struct.GPR* %5691, i32 0, i32 5
  %5693 = getelementptr inbounds %struct.Reg, %struct.Reg* %5692, i32 0, i32 0
  %ECX.i1623 = bitcast %union.anon* %5693 to i32*
  %5694 = load i32, i32* %ECX.i1623
  %5695 = zext i32 %5694 to i64
  %5696 = load i64, i64* %PC.i1622
  %5697 = add i64 %5696, 3
  store i64 %5697, i64* %PC.i1622
  %5698 = sub i32 %5694, 51
  %5699 = icmp ult i32 %5694, 51
  %5700 = zext i1 %5699 to i8
  %5701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5700, i8* %5701, align 1
  %5702 = and i32 %5698, 255
  %5703 = call i32 @llvm.ctpop.i32(i32 %5702)
  %5704 = trunc i32 %5703 to i8
  %5705 = and i8 %5704, 1
  %5706 = xor i8 %5705, 1
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5706, i8* %5707, align 1
  %5708 = xor i64 51, %5695
  %5709 = trunc i64 %5708 to i32
  %5710 = xor i32 %5709, %5698
  %5711 = lshr i32 %5710, 4
  %5712 = trunc i32 %5711 to i8
  %5713 = and i8 %5712, 1
  %5714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5713, i8* %5714, align 1
  %5715 = icmp eq i32 %5698, 0
  %5716 = zext i1 %5715 to i8
  %5717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5716, i8* %5717, align 1
  %5718 = lshr i32 %5698, 31
  %5719 = trunc i32 %5718 to i8
  %5720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5719, i8* %5720, align 1
  %5721 = lshr i32 %5694, 31
  %5722 = xor i32 %5718, %5721
  %5723 = add i32 %5722, %5721
  %5724 = icmp eq i32 %5723, 2
  %5725 = zext i1 %5724 to i8
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5725, i8* %5726, align 1
  store %struct.Memory* %loadMem_43a889, %struct.Memory** %MEMORY
  %loadMem_43a88c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5728 = getelementptr inbounds %struct.GPR, %struct.GPR* %5727, i32 0, i32 33
  %5729 = getelementptr inbounds %struct.Reg, %struct.Reg* %5728, i32 0, i32 0
  %PC.i1621 = bitcast %union.anon* %5729 to i64*
  %5730 = load i64, i64* %PC.i1621
  %5731 = add i64 %5730, 22
  %5732 = load i64, i64* %PC.i1621
  %5733 = add i64 %5732, 6
  %5734 = load i64, i64* %PC.i1621
  %5735 = add i64 %5734, 6
  store i64 %5735, i64* %PC.i1621
  %5736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5737 = load i8, i8* %5736, align 1
  %5738 = icmp ne i8 %5737, 0
  %5739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5740 = load i8, i8* %5739, align 1
  %5741 = icmp ne i8 %5740, 0
  %5742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5743 = load i8, i8* %5742, align 1
  %5744 = icmp ne i8 %5743, 0
  %5745 = xor i1 %5741, %5744
  %5746 = or i1 %5738, %5745
  %5747 = zext i1 %5746 to i8
  store i8 %5747, i8* %BRANCH_TAKEN, align 1
  %5748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5749 = select i1 %5746, i64 %5731, i64 %5733
  store i64 %5749, i64* %5748, align 8
  store %struct.Memory* %loadMem_43a88c, %struct.Memory** %MEMORY
  %loadBr_43a88c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a88c = icmp eq i8 %loadBr_43a88c, 1
  br i1 %cmpBr_43a88c, label %block_.L_43a8a2, label %block_43a892

block_43a892:                                     ; preds = %block_.L_43a870
  %loadMem_43a892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5751 = getelementptr inbounds %struct.GPR, %struct.GPR* %5750, i32 0, i32 33
  %5752 = getelementptr inbounds %struct.Reg, %struct.Reg* %5751, i32 0, i32 0
  %PC.i1619 = bitcast %union.anon* %5752 to i64*
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5754 = getelementptr inbounds %struct.GPR, %struct.GPR* %5753, i32 0, i32 1
  %5755 = getelementptr inbounds %struct.Reg, %struct.Reg* %5754, i32 0, i32 0
  %RAX.i1620 = bitcast %union.anon* %5755 to i64*
  %5756 = load i64, i64* %PC.i1619
  %5757 = add i64 %5756, 5
  store i64 %5757, i64* %PC.i1619
  store i64 51, i64* %RAX.i1620, align 8
  store %struct.Memory* %loadMem_43a892, %struct.Memory** %MEMORY
  %loadMem_43a897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5759 = getelementptr inbounds %struct.GPR, %struct.GPR* %5758, i32 0, i32 33
  %5760 = getelementptr inbounds %struct.Reg, %struct.Reg* %5759, i32 0, i32 0
  %PC.i1616 = bitcast %union.anon* %5760 to i64*
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5762 = getelementptr inbounds %struct.GPR, %struct.GPR* %5761, i32 0, i32 1
  %5763 = getelementptr inbounds %struct.Reg, %struct.Reg* %5762, i32 0, i32 0
  %EAX.i1617 = bitcast %union.anon* %5763 to i32*
  %5764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5765 = getelementptr inbounds %struct.GPR, %struct.GPR* %5764, i32 0, i32 15
  %5766 = getelementptr inbounds %struct.Reg, %struct.Reg* %5765, i32 0, i32 0
  %RBP.i1618 = bitcast %union.anon* %5766 to i64*
  %5767 = load i64, i64* %RBP.i1618
  %5768 = sub i64 %5767, 404
  %5769 = load i32, i32* %EAX.i1617
  %5770 = zext i32 %5769 to i64
  %5771 = load i64, i64* %PC.i1616
  %5772 = add i64 %5771, 6
  store i64 %5772, i64* %PC.i1616
  %5773 = inttoptr i64 %5768 to i32*
  store i32 %5769, i32* %5773
  store %struct.Memory* %loadMem_43a897, %struct.Memory** %MEMORY
  %loadMem_43a89d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5775 = getelementptr inbounds %struct.GPR, %struct.GPR* %5774, i32 0, i32 33
  %5776 = getelementptr inbounds %struct.Reg, %struct.Reg* %5775, i32 0, i32 0
  %PC.i1615 = bitcast %union.anon* %5776 to i64*
  %5777 = load i64, i64* %PC.i1615
  %5778 = add i64 %5777, 36
  %5779 = load i64, i64* %PC.i1615
  %5780 = add i64 %5779, 5
  store i64 %5780, i64* %PC.i1615
  %5781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5778, i64* %5781, align 8
  store %struct.Memory* %loadMem_43a89d, %struct.Memory** %MEMORY
  br label %block_.L_43a8c1

block_.L_43a8a2:                                  ; preds = %block_.L_43a870
  %loadMem_43a8a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5783 = getelementptr inbounds %struct.GPR, %struct.GPR* %5782, i32 0, i32 33
  %5784 = getelementptr inbounds %struct.Reg, %struct.Reg* %5783, i32 0, i32 0
  %PC.i1612 = bitcast %union.anon* %5784 to i64*
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5786 = getelementptr inbounds %struct.GPR, %struct.GPR* %5785, i32 0, i32 1
  %5787 = getelementptr inbounds %struct.Reg, %struct.Reg* %5786, i32 0, i32 0
  %RAX.i1613 = bitcast %union.anon* %5787 to i64*
  %5788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5789 = getelementptr inbounds %struct.GPR, %struct.GPR* %5788, i32 0, i32 15
  %5790 = getelementptr inbounds %struct.Reg, %struct.Reg* %5789, i32 0, i32 0
  %RBP.i1614 = bitcast %union.anon* %5790 to i64*
  %5791 = load i64, i64* %RBP.i1614
  %5792 = sub i64 %5791, 240
  %5793 = load i64, i64* %PC.i1612
  %5794 = add i64 %5793, 7
  store i64 %5794, i64* %PC.i1612
  %5795 = inttoptr i64 %5792 to i64*
  %5796 = load i64, i64* %5795
  store i64 %5796, i64* %RAX.i1613, align 8
  store %struct.Memory* %loadMem_43a8a2, %struct.Memory** %MEMORY
  %loadMem_43a8a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5798 = getelementptr inbounds %struct.GPR, %struct.GPR* %5797, i32 0, i32 33
  %5799 = getelementptr inbounds %struct.Reg, %struct.Reg* %5798, i32 0, i32 0
  %PC.i1609 = bitcast %union.anon* %5799 to i64*
  %5800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5801 = getelementptr inbounds %struct.GPR, %struct.GPR* %5800, i32 0, i32 1
  %5802 = getelementptr inbounds %struct.Reg, %struct.Reg* %5801, i32 0, i32 0
  %RAX.i1610 = bitcast %union.anon* %5802 to i64*
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5804 = getelementptr inbounds %struct.GPR, %struct.GPR* %5803, i32 0, i32 5
  %5805 = getelementptr inbounds %struct.Reg, %struct.Reg* %5804, i32 0, i32 0
  %RCX.i1611 = bitcast %union.anon* %5805 to i64*
  %5806 = load i64, i64* %RAX.i1610
  %5807 = add i64 %5806, 12
  %5808 = load i64, i64* %PC.i1609
  %5809 = add i64 %5808, 3
  store i64 %5809, i64* %PC.i1609
  %5810 = inttoptr i64 %5807 to i32*
  %5811 = load i32, i32* %5810
  %5812 = zext i32 %5811 to i64
  store i64 %5812, i64* %RCX.i1611, align 8
  store %struct.Memory* %loadMem_43a8a9, %struct.Memory** %MEMORY
  %loadMem_43a8ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5814 = getelementptr inbounds %struct.GPR, %struct.GPR* %5813, i32 0, i32 33
  %5815 = getelementptr inbounds %struct.Reg, %struct.Reg* %5814, i32 0, i32 0
  %PC.i1606 = bitcast %union.anon* %5815 to i64*
  %5816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5817 = getelementptr inbounds %struct.GPR, %struct.GPR* %5816, i32 0, i32 1
  %5818 = getelementptr inbounds %struct.Reg, %struct.Reg* %5817, i32 0, i32 0
  %RAX.i1607 = bitcast %union.anon* %5818 to i64*
  %5819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5820 = getelementptr inbounds %struct.GPR, %struct.GPR* %5819, i32 0, i32 15
  %5821 = getelementptr inbounds %struct.Reg, %struct.Reg* %5820, i32 0, i32 0
  %RBP.i1608 = bitcast %union.anon* %5821 to i64*
  %5822 = load i64, i64* %RBP.i1608
  %5823 = sub i64 %5822, 40
  %5824 = load i64, i64* %PC.i1606
  %5825 = add i64 %5824, 4
  store i64 %5825, i64* %PC.i1606
  %5826 = inttoptr i64 %5823 to i64*
  %5827 = load i64, i64* %5826
  store i64 %5827, i64* %RAX.i1607, align 8
  store %struct.Memory* %loadMem_43a8ac, %struct.Memory** %MEMORY
  %loadMem_43a8b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5829 = getelementptr inbounds %struct.GPR, %struct.GPR* %5828, i32 0, i32 33
  %5830 = getelementptr inbounds %struct.Reg, %struct.Reg* %5829, i32 0, i32 0
  %PC.i1603 = bitcast %union.anon* %5830 to i64*
  %5831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5832 = getelementptr inbounds %struct.GPR, %struct.GPR* %5831, i32 0, i32 7
  %5833 = getelementptr inbounds %struct.Reg, %struct.Reg* %5832, i32 0, i32 0
  %RDX.i1604 = bitcast %union.anon* %5833 to i64*
  %5834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5835 = getelementptr inbounds %struct.GPR, %struct.GPR* %5834, i32 0, i32 15
  %5836 = getelementptr inbounds %struct.Reg, %struct.Reg* %5835, i32 0, i32 0
  %RBP.i1605 = bitcast %union.anon* %5836 to i64*
  %5837 = load i64, i64* %RBP.i1605
  %5838 = sub i64 %5837, 72
  %5839 = load i64, i64* %PC.i1603
  %5840 = add i64 %5839, 4
  store i64 %5840, i64* %PC.i1603
  %5841 = inttoptr i64 %5838 to i32*
  %5842 = load i32, i32* %5841
  %5843 = sext i32 %5842 to i64
  store i64 %5843, i64* %RDX.i1604, align 8
  store %struct.Memory* %loadMem_43a8b0, %struct.Memory** %MEMORY
  %loadMem_43a8b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5845 = getelementptr inbounds %struct.GPR, %struct.GPR* %5844, i32 0, i32 33
  %5846 = getelementptr inbounds %struct.Reg, %struct.Reg* %5845, i32 0, i32 0
  %PC.i1599 = bitcast %union.anon* %5846 to i64*
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5848 = getelementptr inbounds %struct.GPR, %struct.GPR* %5847, i32 0, i32 1
  %5849 = getelementptr inbounds %struct.Reg, %struct.Reg* %5848, i32 0, i32 0
  %RAX.i1600 = bitcast %union.anon* %5849 to i64*
  %5850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5851 = getelementptr inbounds %struct.GPR, %struct.GPR* %5850, i32 0, i32 5
  %5852 = getelementptr inbounds %struct.Reg, %struct.Reg* %5851, i32 0, i32 0
  %RCX.i1601 = bitcast %union.anon* %5852 to i64*
  %5853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5854 = getelementptr inbounds %struct.GPR, %struct.GPR* %5853, i32 0, i32 7
  %5855 = getelementptr inbounds %struct.Reg, %struct.Reg* %5854, i32 0, i32 0
  %RDX.i1602 = bitcast %union.anon* %5855 to i64*
  %5856 = load i64, i64* %RCX.i1601
  %5857 = load i64, i64* %RAX.i1600
  %5858 = load i64, i64* %RDX.i1602
  %5859 = mul i64 %5858, 4
  %5860 = add i64 %5857, 72716
  %5861 = add i64 %5860, %5859
  %5862 = load i64, i64* %PC.i1599
  %5863 = add i64 %5862, 7
  store i64 %5863, i64* %PC.i1599
  %5864 = trunc i64 %5856 to i32
  %5865 = inttoptr i64 %5861 to i32*
  %5866 = load i32, i32* %5865
  %5867 = add i32 %5866, %5864
  %5868 = zext i32 %5867 to i64
  store i64 %5868, i64* %RCX.i1601, align 8
  %5869 = icmp ult i32 %5867, %5864
  %5870 = icmp ult i32 %5867, %5866
  %5871 = or i1 %5869, %5870
  %5872 = zext i1 %5871 to i8
  %5873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5872, i8* %5873, align 1
  %5874 = and i32 %5867, 255
  %5875 = call i32 @llvm.ctpop.i32(i32 %5874)
  %5876 = trunc i32 %5875 to i8
  %5877 = and i8 %5876, 1
  %5878 = xor i8 %5877, 1
  %5879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5878, i8* %5879, align 1
  %5880 = xor i32 %5866, %5864
  %5881 = xor i32 %5880, %5867
  %5882 = lshr i32 %5881, 4
  %5883 = trunc i32 %5882 to i8
  %5884 = and i8 %5883, 1
  %5885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5884, i8* %5885, align 1
  %5886 = icmp eq i32 %5867, 0
  %5887 = zext i1 %5886 to i8
  %5888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5887, i8* %5888, align 1
  %5889 = lshr i32 %5867, 31
  %5890 = trunc i32 %5889 to i8
  %5891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5890, i8* %5891, align 1
  %5892 = lshr i32 %5864, 31
  %5893 = lshr i32 %5866, 31
  %5894 = xor i32 %5889, %5892
  %5895 = xor i32 %5889, %5893
  %5896 = add i32 %5894, %5895
  %5897 = icmp eq i32 %5896, 2
  %5898 = zext i1 %5897 to i8
  %5899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5898, i8* %5899, align 1
  store %struct.Memory* %loadMem_43a8b4, %struct.Memory** %MEMORY
  %loadMem_43a8bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5901 = getelementptr inbounds %struct.GPR, %struct.GPR* %5900, i32 0, i32 33
  %5902 = getelementptr inbounds %struct.Reg, %struct.Reg* %5901, i32 0, i32 0
  %PC.i1596 = bitcast %union.anon* %5902 to i64*
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5904 = getelementptr inbounds %struct.GPR, %struct.GPR* %5903, i32 0, i32 5
  %5905 = getelementptr inbounds %struct.Reg, %struct.Reg* %5904, i32 0, i32 0
  %ECX.i1597 = bitcast %union.anon* %5905 to i32*
  %5906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5907 = getelementptr inbounds %struct.GPR, %struct.GPR* %5906, i32 0, i32 15
  %5908 = getelementptr inbounds %struct.Reg, %struct.Reg* %5907, i32 0, i32 0
  %RBP.i1598 = bitcast %union.anon* %5908 to i64*
  %5909 = load i64, i64* %RBP.i1598
  %5910 = sub i64 %5909, 404
  %5911 = load i32, i32* %ECX.i1597
  %5912 = zext i32 %5911 to i64
  %5913 = load i64, i64* %PC.i1596
  %5914 = add i64 %5913, 6
  store i64 %5914, i64* %PC.i1596
  %5915 = inttoptr i64 %5910 to i32*
  store i32 %5911, i32* %5915
  store %struct.Memory* %loadMem_43a8bb, %struct.Memory** %MEMORY
  br label %block_.L_43a8c1

block_.L_43a8c1:                                  ; preds = %block_.L_43a8a2, %block_43a892
  %loadMem_43a8c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5917 = getelementptr inbounds %struct.GPR, %struct.GPR* %5916, i32 0, i32 33
  %5918 = getelementptr inbounds %struct.Reg, %struct.Reg* %5917, i32 0, i32 0
  %PC.i1593 = bitcast %union.anon* %5918 to i64*
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5920 = getelementptr inbounds %struct.GPR, %struct.GPR* %5919, i32 0, i32 1
  %5921 = getelementptr inbounds %struct.Reg, %struct.Reg* %5920, i32 0, i32 0
  %RAX.i1594 = bitcast %union.anon* %5921 to i64*
  %5922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5923 = getelementptr inbounds %struct.GPR, %struct.GPR* %5922, i32 0, i32 15
  %5924 = getelementptr inbounds %struct.Reg, %struct.Reg* %5923, i32 0, i32 0
  %RBP.i1595 = bitcast %union.anon* %5924 to i64*
  %5925 = load i64, i64* %RBP.i1595
  %5926 = sub i64 %5925, 404
  %5927 = load i64, i64* %PC.i1593
  %5928 = add i64 %5927, 6
  store i64 %5928, i64* %PC.i1593
  %5929 = inttoptr i64 %5926 to i32*
  %5930 = load i32, i32* %5929
  %5931 = zext i32 %5930 to i64
  store i64 %5931, i64* %RAX.i1594, align 8
  store %struct.Memory* %loadMem_43a8c1, %struct.Memory** %MEMORY
  %loadMem_43a8c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5933 = getelementptr inbounds %struct.GPR, %struct.GPR* %5932, i32 0, i32 33
  %5934 = getelementptr inbounds %struct.Reg, %struct.Reg* %5933, i32 0, i32 0
  %PC.i1590 = bitcast %union.anon* %5934 to i64*
  %5935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5936 = getelementptr inbounds %struct.GPR, %struct.GPR* %5935, i32 0, i32 1
  %5937 = getelementptr inbounds %struct.Reg, %struct.Reg* %5936, i32 0, i32 0
  %EAX.i1591 = bitcast %union.anon* %5937 to i32*
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5939 = getelementptr inbounds %struct.GPR, %struct.GPR* %5938, i32 0, i32 15
  %5940 = getelementptr inbounds %struct.Reg, %struct.Reg* %5939, i32 0, i32 0
  %RBP.i1592 = bitcast %union.anon* %5940 to i64*
  %5941 = load i64, i64* %RBP.i1592
  %5942 = sub i64 %5941, 400
  %5943 = load i32, i32* %EAX.i1591
  %5944 = zext i32 %5943 to i64
  %5945 = load i64, i64* %PC.i1590
  %5946 = add i64 %5945, 6
  store i64 %5946, i64* %PC.i1590
  %5947 = inttoptr i64 %5942 to i32*
  store i32 %5943, i32* %5947
  store %struct.Memory* %loadMem_43a8c7, %struct.Memory** %MEMORY
  br label %block_.L_43a8cd

block_.L_43a8cd:                                  ; preds = %block_.L_43a8c1, %block_43a863
  %loadMem_43a8cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5949 = getelementptr inbounds %struct.GPR, %struct.GPR* %5948, i32 0, i32 33
  %5950 = getelementptr inbounds %struct.Reg, %struct.Reg* %5949, i32 0, i32 0
  %PC.i1587 = bitcast %union.anon* %5950 to i64*
  %5951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5952 = getelementptr inbounds %struct.GPR, %struct.GPR* %5951, i32 0, i32 1
  %5953 = getelementptr inbounds %struct.Reg, %struct.Reg* %5952, i32 0, i32 0
  %RAX.i1588 = bitcast %union.anon* %5953 to i64*
  %5954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5955 = getelementptr inbounds %struct.GPR, %struct.GPR* %5954, i32 0, i32 15
  %5956 = getelementptr inbounds %struct.Reg, %struct.Reg* %5955, i32 0, i32 0
  %RBP.i1589 = bitcast %union.anon* %5956 to i64*
  %5957 = load i64, i64* %RBP.i1589
  %5958 = sub i64 %5957, 400
  %5959 = load i64, i64* %PC.i1587
  %5960 = add i64 %5959, 6
  store i64 %5960, i64* %PC.i1587
  %5961 = inttoptr i64 %5958 to i32*
  %5962 = load i32, i32* %5961
  %5963 = zext i32 %5962 to i64
  store i64 %5963, i64* %RAX.i1588, align 8
  store %struct.Memory* %loadMem_43a8cd, %struct.Memory** %MEMORY
  %loadMem_43a8d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5965 = getelementptr inbounds %struct.GPR, %struct.GPR* %5964, i32 0, i32 33
  %5966 = getelementptr inbounds %struct.Reg, %struct.Reg* %5965, i32 0, i32 0
  %PC.i1584 = bitcast %union.anon* %5966 to i64*
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5968 = getelementptr inbounds %struct.GPR, %struct.GPR* %5967, i32 0, i32 1
  %5969 = getelementptr inbounds %struct.Reg, %struct.Reg* %5968, i32 0, i32 0
  %EAX.i1585 = bitcast %union.anon* %5969 to i32*
  %5970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5971 = getelementptr inbounds %struct.GPR, %struct.GPR* %5970, i32 0, i32 5
  %5972 = getelementptr inbounds %struct.Reg, %struct.Reg* %5971, i32 0, i32 0
  %RCX.i1586 = bitcast %union.anon* %5972 to i64*
  %5973 = load i32, i32* %EAX.i1585
  %5974 = zext i32 %5973 to i64
  %5975 = load i64, i64* %PC.i1584
  %5976 = add i64 %5975, 3
  store i64 %5976, i64* %PC.i1584
  %5977 = shl i64 %5974, 32
  %5978 = ashr exact i64 %5977, 32
  store i64 %5978, i64* %RCX.i1586, align 8
  store %struct.Memory* %loadMem_43a8d3, %struct.Memory** %MEMORY
  %loadMem_43a8d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5980 = getelementptr inbounds %struct.GPR, %struct.GPR* %5979, i32 0, i32 33
  %5981 = getelementptr inbounds %struct.Reg, %struct.Reg* %5980, i32 0, i32 0
  %PC.i1581 = bitcast %union.anon* %5981 to i64*
  %5982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5983 = getelementptr inbounds %struct.GPR, %struct.GPR* %5982, i32 0, i32 1
  %5984 = getelementptr inbounds %struct.Reg, %struct.Reg* %5983, i32 0, i32 0
  %RAX.i1582 = bitcast %union.anon* %5984 to i64*
  %5985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5986 = getelementptr inbounds %struct.GPR, %struct.GPR* %5985, i32 0, i32 5
  %5987 = getelementptr inbounds %struct.Reg, %struct.Reg* %5986, i32 0, i32 0
  %RCX.i1583 = bitcast %union.anon* %5987 to i64*
  %5988 = load i64, i64* %RCX.i1583
  %5989 = add i64 %5988, 4924192
  %5990 = load i64, i64* %PC.i1581
  %5991 = add i64 %5990, 8
  store i64 %5991, i64* %PC.i1581
  %5992 = inttoptr i64 %5989 to i8*
  %5993 = load i8, i8* %5992
  %5994 = zext i8 %5993 to i64
  store i64 %5994, i64* %RAX.i1582, align 8
  store %struct.Memory* %loadMem_43a8d6, %struct.Memory** %MEMORY
  %loadMem_43a8de = load %struct.Memory*, %struct.Memory** %MEMORY
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5996 = getelementptr inbounds %struct.GPR, %struct.GPR* %5995, i32 0, i32 33
  %5997 = getelementptr inbounds %struct.Reg, %struct.Reg* %5996, i32 0, i32 0
  %PC.i1578 = bitcast %union.anon* %5997 to i64*
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5999 = getelementptr inbounds %struct.GPR, %struct.GPR* %5998, i32 0, i32 7
  %6000 = getelementptr inbounds %struct.Reg, %struct.Reg* %5999, i32 0, i32 0
  %RDX.i1579 = bitcast %union.anon* %6000 to i64*
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6002 = getelementptr inbounds %struct.GPR, %struct.GPR* %6001, i32 0, i32 15
  %6003 = getelementptr inbounds %struct.Reg, %struct.Reg* %6002, i32 0, i32 0
  %RBP.i1580 = bitcast %union.anon* %6003 to i64*
  %6004 = load i64, i64* %RBP.i1580
  %6005 = sub i64 %6004, 396
  %6006 = load i64, i64* %PC.i1578
  %6007 = add i64 %6006, 6
  store i64 %6007, i64* %PC.i1578
  %6008 = inttoptr i64 %6005 to i32*
  %6009 = load i32, i32* %6008
  %6010 = zext i32 %6009 to i64
  store i64 %6010, i64* %RDX.i1579, align 8
  store %struct.Memory* %loadMem_43a8de, %struct.Memory** %MEMORY
  %loadMem_43a8e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6012 = getelementptr inbounds %struct.GPR, %struct.GPR* %6011, i32 0, i32 33
  %6013 = getelementptr inbounds %struct.Reg, %struct.Reg* %6012, i32 0, i32 0
  %PC.i1575 = bitcast %union.anon* %6013 to i64*
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6015 = getelementptr inbounds %struct.GPR, %struct.GPR* %6014, i32 0, i32 1
  %6016 = getelementptr inbounds %struct.Reg, %struct.Reg* %6015, i32 0, i32 0
  %EAX.i1576 = bitcast %union.anon* %6016 to i32*
  %6017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6018 = getelementptr inbounds %struct.GPR, %struct.GPR* %6017, i32 0, i32 7
  %6019 = getelementptr inbounds %struct.Reg, %struct.Reg* %6018, i32 0, i32 0
  %RDX.i1577 = bitcast %union.anon* %6019 to i64*
  %6020 = load i64, i64* %RDX.i1577
  %6021 = load i32, i32* %EAX.i1576
  %6022 = zext i32 %6021 to i64
  %6023 = load i64, i64* %PC.i1575
  %6024 = add i64 %6023, 2
  store i64 %6024, i64* %PC.i1575
  %6025 = trunc i64 %6020 to i32
  %6026 = add i32 %6021, %6025
  %6027 = zext i32 %6026 to i64
  store i64 %6027, i64* %RDX.i1577, align 8
  %6028 = icmp ult i32 %6026, %6025
  %6029 = icmp ult i32 %6026, %6021
  %6030 = or i1 %6028, %6029
  %6031 = zext i1 %6030 to i8
  %6032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6031, i8* %6032, align 1
  %6033 = and i32 %6026, 255
  %6034 = call i32 @llvm.ctpop.i32(i32 %6033)
  %6035 = trunc i32 %6034 to i8
  %6036 = and i8 %6035, 1
  %6037 = xor i8 %6036, 1
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6037, i8* %6038, align 1
  %6039 = xor i64 %6022, %6020
  %6040 = trunc i64 %6039 to i32
  %6041 = xor i32 %6040, %6026
  %6042 = lshr i32 %6041, 4
  %6043 = trunc i32 %6042 to i8
  %6044 = and i8 %6043, 1
  %6045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6044, i8* %6045, align 1
  %6046 = icmp eq i32 %6026, 0
  %6047 = zext i1 %6046 to i8
  %6048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6047, i8* %6048, align 1
  %6049 = lshr i32 %6026, 31
  %6050 = trunc i32 %6049 to i8
  %6051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6050, i8* %6051, align 1
  %6052 = lshr i32 %6025, 31
  %6053 = lshr i32 %6021, 31
  %6054 = xor i32 %6049, %6052
  %6055 = xor i32 %6049, %6053
  %6056 = add i32 %6054, %6055
  %6057 = icmp eq i32 %6056, 2
  %6058 = zext i1 %6057 to i8
  %6059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6058, i8* %6059, align 1
  store %struct.Memory* %loadMem_43a8e4, %struct.Memory** %MEMORY
  %loadMem_43a8e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6061 = getelementptr inbounds %struct.GPR, %struct.GPR* %6060, i32 0, i32 33
  %6062 = getelementptr inbounds %struct.Reg, %struct.Reg* %6061, i32 0, i32 0
  %PC.i1573 = bitcast %union.anon* %6062 to i64*
  %6063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6064 = getelementptr inbounds %struct.GPR, %struct.GPR* %6063, i32 0, i32 7
  %6065 = getelementptr inbounds %struct.Reg, %struct.Reg* %6064, i32 0, i32 0
  %RDX.i1574 = bitcast %union.anon* %6065 to i64*
  %6066 = load i64, i64* %RDX.i1574
  %6067 = load i64, i64* %PC.i1573
  %6068 = add i64 %6067, 3
  store i64 %6068, i64* %PC.i1573
  %6069 = trunc i64 %6066 to i32
  %6070 = add i32 1, %6069
  %6071 = zext i32 %6070 to i64
  store i64 %6071, i64* %RDX.i1574, align 8
  %6072 = icmp ult i32 %6070, %6069
  %6073 = icmp ult i32 %6070, 1
  %6074 = or i1 %6072, %6073
  %6075 = zext i1 %6074 to i8
  %6076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6075, i8* %6076, align 1
  %6077 = and i32 %6070, 255
  %6078 = call i32 @llvm.ctpop.i32(i32 %6077)
  %6079 = trunc i32 %6078 to i8
  %6080 = and i8 %6079, 1
  %6081 = xor i8 %6080, 1
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6081, i8* %6082, align 1
  %6083 = xor i64 1, %6066
  %6084 = trunc i64 %6083 to i32
  %6085 = xor i32 %6084, %6070
  %6086 = lshr i32 %6085, 4
  %6087 = trunc i32 %6086 to i8
  %6088 = and i8 %6087, 1
  %6089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6088, i8* %6089, align 1
  %6090 = icmp eq i32 %6070, 0
  %6091 = zext i1 %6090 to i8
  %6092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6091, i8* %6092, align 1
  %6093 = lshr i32 %6070, 31
  %6094 = trunc i32 %6093 to i8
  %6095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6094, i8* %6095, align 1
  %6096 = lshr i32 %6069, 31
  %6097 = xor i32 %6093, %6096
  %6098 = add i32 %6097, %6093
  %6099 = icmp eq i32 %6098, 2
  %6100 = zext i1 %6099 to i8
  %6101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6100, i8* %6101, align 1
  store %struct.Memory* %loadMem_43a8e6, %struct.Memory** %MEMORY
  %loadMem_43a8e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6103 = getelementptr inbounds %struct.GPR, %struct.GPR* %6102, i32 0, i32 33
  %6104 = getelementptr inbounds %struct.Reg, %struct.Reg* %6103, i32 0, i32 0
  %PC.i1571 = bitcast %union.anon* %6104 to i64*
  %6105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6106 = getelementptr inbounds %struct.GPR, %struct.GPR* %6105, i32 0, i32 7
  %6107 = getelementptr inbounds %struct.Reg, %struct.Reg* %6106, i32 0, i32 0
  %RDX.i1572 = bitcast %union.anon* %6107 to i64*
  %6108 = load i64, i64* %RDX.i1572
  %6109 = load i64, i64* %PC.i1571
  %6110 = add i64 %6109, 2
  store i64 %6110, i64* %PC.i1571
  %6111 = shl i64 %6108, 32
  %6112 = ashr i64 %6111, 33
  %6113 = trunc i64 %6108 to i8
  %6114 = and i8 %6113, 1
  %6115 = trunc i64 %6112 to i32
  %6116 = and i64 %6112, 4294967295
  store i64 %6116, i64* %RDX.i1572, align 8
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6114, i8* %6117, align 1
  %6118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6119 = and i32 %6115, 255
  %6120 = call i32 @llvm.ctpop.i32(i32 %6119)
  %6121 = trunc i32 %6120 to i8
  %6122 = and i8 %6121, 1
  %6123 = xor i8 %6122, 1
  store i8 %6123, i8* %6118, align 1
  %6124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6124, align 1
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6126 = icmp eq i32 %6115, 0
  %6127 = zext i1 %6126 to i8
  store i8 %6127, i8* %6125, align 1
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6129 = lshr i32 %6115, 31
  %6130 = trunc i32 %6129 to i8
  store i8 %6130, i8* %6128, align 1
  %6131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6131, align 1
  store %struct.Memory* %loadMem_43a8e9, %struct.Memory** %MEMORY
  %loadMem_43a8ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %6132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6133 = getelementptr inbounds %struct.GPR, %struct.GPR* %6132, i32 0, i32 33
  %6134 = getelementptr inbounds %struct.Reg, %struct.Reg* %6133, i32 0, i32 0
  %PC.i1568 = bitcast %union.anon* %6134 to i64*
  %6135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6136 = getelementptr inbounds %struct.GPR, %struct.GPR* %6135, i32 0, i32 7
  %6137 = getelementptr inbounds %struct.Reg, %struct.Reg* %6136, i32 0, i32 0
  %EDX.i1569 = bitcast %union.anon* %6137 to i32*
  %6138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6139 = getelementptr inbounds %struct.GPR, %struct.GPR* %6138, i32 0, i32 15
  %6140 = getelementptr inbounds %struct.Reg, %struct.Reg* %6139, i32 0, i32 0
  %RBP.i1570 = bitcast %union.anon* %6140 to i64*
  %6141 = load i64, i64* %RBP.i1570
  %6142 = sub i64 %6141, 408
  %6143 = load i32, i32* %EDX.i1569
  %6144 = zext i32 %6143 to i64
  %6145 = load i64, i64* %PC.i1568
  %6146 = add i64 %6145, 6
  store i64 %6146, i64* %PC.i1568
  %6147 = inttoptr i64 %6142 to i32*
  store i32 %6143, i32* %6147
  store %struct.Memory* %loadMem_43a8ec, %struct.Memory** %MEMORY
  %loadMem_43a8f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6149 = getelementptr inbounds %struct.GPR, %struct.GPR* %6148, i32 0, i32 33
  %6150 = getelementptr inbounds %struct.Reg, %struct.Reg* %6149, i32 0, i32 0
  %PC.i1567 = bitcast %union.anon* %6150 to i64*
  %6151 = load i64, i64* %PC.i1567
  %6152 = add i64 %6151, 37
  %6153 = load i64, i64* %PC.i1567
  %6154 = add i64 %6153, 5
  store i64 %6154, i64* %PC.i1567
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6152, i64* %6155, align 8
  store %struct.Memory* %loadMem_43a8f2, %struct.Memory** %MEMORY
  br label %block_.L_43a917

block_.L_43a8f7:                                  ; preds = %block_.L_43a743
  %loadMem_43a8f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6157 = getelementptr inbounds %struct.GPR, %struct.GPR* %6156, i32 0, i32 33
  %6158 = getelementptr inbounds %struct.Reg, %struct.Reg* %6157, i32 0, i32 0
  %PC.i1564 = bitcast %union.anon* %6158 to i64*
  %6159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6160 = getelementptr inbounds %struct.GPR, %struct.GPR* %6159, i32 0, i32 1
  %6161 = getelementptr inbounds %struct.Reg, %struct.Reg* %6160, i32 0, i32 0
  %RAX.i1565 = bitcast %union.anon* %6161 to i64*
  %6162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6163 = getelementptr inbounds %struct.GPR, %struct.GPR* %6162, i32 0, i32 15
  %6164 = getelementptr inbounds %struct.Reg, %struct.Reg* %6163, i32 0, i32 0
  %RBP.i1566 = bitcast %union.anon* %6164 to i64*
  %6165 = load i64, i64* %RBP.i1566
  %6166 = sub i64 %6165, 248
  %6167 = load i64, i64* %PC.i1564
  %6168 = add i64 %6167, 7
  store i64 %6168, i64* %PC.i1564
  %6169 = inttoptr i64 %6166 to i64*
  %6170 = load i64, i64* %6169
  store i64 %6170, i64* %RAX.i1565, align 8
  store %struct.Memory* %loadMem_43a8f7, %struct.Memory** %MEMORY
  %loadMem_43a8fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6172 = getelementptr inbounds %struct.GPR, %struct.GPR* %6171, i32 0, i32 33
  %6173 = getelementptr inbounds %struct.Reg, %struct.Reg* %6172, i32 0, i32 0
  %PC.i1561 = bitcast %union.anon* %6173 to i64*
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6175 = getelementptr inbounds %struct.GPR, %struct.GPR* %6174, i32 0, i32 1
  %6176 = getelementptr inbounds %struct.Reg, %struct.Reg* %6175, i32 0, i32 0
  %RAX.i1562 = bitcast %union.anon* %6176 to i64*
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6178 = getelementptr inbounds %struct.GPR, %struct.GPR* %6177, i32 0, i32 5
  %6179 = getelementptr inbounds %struct.Reg, %struct.Reg* %6178, i32 0, i32 0
  %RCX.i1563 = bitcast %union.anon* %6179 to i64*
  %6180 = load i64, i64* %RAX.i1562
  %6181 = add i64 %6180, 12
  %6182 = load i64, i64* %PC.i1561
  %6183 = add i64 %6182, 3
  store i64 %6183, i64* %PC.i1561
  %6184 = inttoptr i64 %6181 to i32*
  %6185 = load i32, i32* %6184
  %6186 = zext i32 %6185 to i64
  store i64 %6186, i64* %RCX.i1563, align 8
  store %struct.Memory* %loadMem_43a8fe, %struct.Memory** %MEMORY
  %loadMem_43a901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6188 = getelementptr inbounds %struct.GPR, %struct.GPR* %6187, i32 0, i32 33
  %6189 = getelementptr inbounds %struct.Reg, %struct.Reg* %6188, i32 0, i32 0
  %PC.i1558 = bitcast %union.anon* %6189 to i64*
  %6190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6191 = getelementptr inbounds %struct.GPR, %struct.GPR* %6190, i32 0, i32 1
  %6192 = getelementptr inbounds %struct.Reg, %struct.Reg* %6191, i32 0, i32 0
  %RAX.i1559 = bitcast %union.anon* %6192 to i64*
  %6193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6194 = getelementptr inbounds %struct.GPR, %struct.GPR* %6193, i32 0, i32 15
  %6195 = getelementptr inbounds %struct.Reg, %struct.Reg* %6194, i32 0, i32 0
  %RBP.i1560 = bitcast %union.anon* %6195 to i64*
  %6196 = load i64, i64* %RBP.i1560
  %6197 = sub i64 %6196, 240
  %6198 = load i64, i64* %PC.i1558
  %6199 = add i64 %6198, 7
  store i64 %6199, i64* %PC.i1558
  %6200 = inttoptr i64 %6197 to i64*
  %6201 = load i64, i64* %6200
  store i64 %6201, i64* %RAX.i1559, align 8
  store %struct.Memory* %loadMem_43a901, %struct.Memory** %MEMORY
  %loadMem_43a908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6203 = getelementptr inbounds %struct.GPR, %struct.GPR* %6202, i32 0, i32 33
  %6204 = getelementptr inbounds %struct.Reg, %struct.Reg* %6203, i32 0, i32 0
  %PC.i1555 = bitcast %union.anon* %6204 to i64*
  %6205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6206 = getelementptr inbounds %struct.GPR, %struct.GPR* %6205, i32 0, i32 1
  %6207 = getelementptr inbounds %struct.Reg, %struct.Reg* %6206, i32 0, i32 0
  %RAX.i1556 = bitcast %union.anon* %6207 to i64*
  %6208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6209 = getelementptr inbounds %struct.GPR, %struct.GPR* %6208, i32 0, i32 5
  %6210 = getelementptr inbounds %struct.Reg, %struct.Reg* %6209, i32 0, i32 0
  %RCX.i1557 = bitcast %union.anon* %6210 to i64*
  %6211 = load i64, i64* %RCX.i1557
  %6212 = load i64, i64* %RAX.i1556
  %6213 = add i64 %6212, 12
  %6214 = load i64, i64* %PC.i1555
  %6215 = add i64 %6214, 3
  store i64 %6215, i64* %PC.i1555
  %6216 = trunc i64 %6211 to i32
  %6217 = inttoptr i64 %6213 to i32*
  %6218 = load i32, i32* %6217
  %6219 = add i32 %6218, %6216
  %6220 = zext i32 %6219 to i64
  store i64 %6220, i64* %RCX.i1557, align 8
  %6221 = icmp ult i32 %6219, %6216
  %6222 = icmp ult i32 %6219, %6218
  %6223 = or i1 %6221, %6222
  %6224 = zext i1 %6223 to i8
  %6225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6224, i8* %6225, align 1
  %6226 = and i32 %6219, 255
  %6227 = call i32 @llvm.ctpop.i32(i32 %6226)
  %6228 = trunc i32 %6227 to i8
  %6229 = and i8 %6228, 1
  %6230 = xor i8 %6229, 1
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6230, i8* %6231, align 1
  %6232 = xor i32 %6218, %6216
  %6233 = xor i32 %6232, %6219
  %6234 = lshr i32 %6233, 4
  %6235 = trunc i32 %6234 to i8
  %6236 = and i8 %6235, 1
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6236, i8* %6237, align 1
  %6238 = icmp eq i32 %6219, 0
  %6239 = zext i1 %6238 to i8
  %6240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6239, i8* %6240, align 1
  %6241 = lshr i32 %6219, 31
  %6242 = trunc i32 %6241 to i8
  %6243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6242, i8* %6243, align 1
  %6244 = lshr i32 %6216, 31
  %6245 = lshr i32 %6218, 31
  %6246 = xor i32 %6241, %6244
  %6247 = xor i32 %6241, %6245
  %6248 = add i32 %6246, %6247
  %6249 = icmp eq i32 %6248, 2
  %6250 = zext i1 %6249 to i8
  %6251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6250, i8* %6251, align 1
  store %struct.Memory* %loadMem_43a908, %struct.Memory** %MEMORY
  %loadMem_43a90b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6253 = getelementptr inbounds %struct.GPR, %struct.GPR* %6252, i32 0, i32 33
  %6254 = getelementptr inbounds %struct.Reg, %struct.Reg* %6253, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %6254 to i64*
  %6255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6256 = getelementptr inbounds %struct.GPR, %struct.GPR* %6255, i32 0, i32 5
  %6257 = getelementptr inbounds %struct.Reg, %struct.Reg* %6256, i32 0, i32 0
  %RCX.i1554 = bitcast %union.anon* %6257 to i64*
  %6258 = load i64, i64* %RCX.i1554
  %6259 = load i64, i64* %PC.i1553
  %6260 = add i64 %6259, 3
  store i64 %6260, i64* %PC.i1553
  %6261 = trunc i64 %6258 to i32
  %6262 = add i32 1, %6261
  %6263 = zext i32 %6262 to i64
  store i64 %6263, i64* %RCX.i1554, align 8
  %6264 = icmp ult i32 %6262, %6261
  %6265 = icmp ult i32 %6262, 1
  %6266 = or i1 %6264, %6265
  %6267 = zext i1 %6266 to i8
  %6268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6267, i8* %6268, align 1
  %6269 = and i32 %6262, 255
  %6270 = call i32 @llvm.ctpop.i32(i32 %6269)
  %6271 = trunc i32 %6270 to i8
  %6272 = and i8 %6271, 1
  %6273 = xor i8 %6272, 1
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6273, i8* %6274, align 1
  %6275 = xor i64 1, %6258
  %6276 = trunc i64 %6275 to i32
  %6277 = xor i32 %6276, %6262
  %6278 = lshr i32 %6277, 4
  %6279 = trunc i32 %6278 to i8
  %6280 = and i8 %6279, 1
  %6281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6280, i8* %6281, align 1
  %6282 = icmp eq i32 %6262, 0
  %6283 = zext i1 %6282 to i8
  %6284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6283, i8* %6284, align 1
  %6285 = lshr i32 %6262, 31
  %6286 = trunc i32 %6285 to i8
  %6287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6286, i8* %6287, align 1
  %6288 = lshr i32 %6261, 31
  %6289 = xor i32 %6285, %6288
  %6290 = add i32 %6289, %6285
  %6291 = icmp eq i32 %6290, 2
  %6292 = zext i1 %6291 to i8
  %6293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6292, i8* %6293, align 1
  store %struct.Memory* %loadMem_43a90b, %struct.Memory** %MEMORY
  %loadMem_43a90e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6295 = getelementptr inbounds %struct.GPR, %struct.GPR* %6294, i32 0, i32 33
  %6296 = getelementptr inbounds %struct.Reg, %struct.Reg* %6295, i32 0, i32 0
  %PC.i1551 = bitcast %union.anon* %6296 to i64*
  %6297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6298 = getelementptr inbounds %struct.GPR, %struct.GPR* %6297, i32 0, i32 5
  %6299 = getelementptr inbounds %struct.Reg, %struct.Reg* %6298, i32 0, i32 0
  %RCX.i1552 = bitcast %union.anon* %6299 to i64*
  %6300 = load i64, i64* %RCX.i1552
  %6301 = load i64, i64* %PC.i1551
  %6302 = add i64 %6301, 2
  store i64 %6302, i64* %PC.i1551
  %6303 = shl i64 %6300, 32
  %6304 = ashr i64 %6303, 33
  %6305 = trunc i64 %6300 to i8
  %6306 = and i8 %6305, 1
  %6307 = trunc i64 %6304 to i32
  %6308 = and i64 %6304, 4294967295
  store i64 %6308, i64* %RCX.i1552, align 8
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6306, i8* %6309, align 1
  %6310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6311 = and i32 %6307, 255
  %6312 = call i32 @llvm.ctpop.i32(i32 %6311)
  %6313 = trunc i32 %6312 to i8
  %6314 = and i8 %6313, 1
  %6315 = xor i8 %6314, 1
  store i8 %6315, i8* %6310, align 1
  %6316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6316, align 1
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6318 = icmp eq i32 %6307, 0
  %6319 = zext i1 %6318 to i8
  store i8 %6319, i8* %6317, align 1
  %6320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6321 = lshr i32 %6307, 31
  %6322 = trunc i32 %6321 to i8
  store i8 %6322, i8* %6320, align 1
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6323, align 1
  store %struct.Memory* %loadMem_43a90e, %struct.Memory** %MEMORY
  %loadMem_43a911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6325 = getelementptr inbounds %struct.GPR, %struct.GPR* %6324, i32 0, i32 33
  %6326 = getelementptr inbounds %struct.Reg, %struct.Reg* %6325, i32 0, i32 0
  %PC.i1548 = bitcast %union.anon* %6326 to i64*
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6328 = getelementptr inbounds %struct.GPR, %struct.GPR* %6327, i32 0, i32 5
  %6329 = getelementptr inbounds %struct.Reg, %struct.Reg* %6328, i32 0, i32 0
  %ECX.i1549 = bitcast %union.anon* %6329 to i32*
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6331 = getelementptr inbounds %struct.GPR, %struct.GPR* %6330, i32 0, i32 15
  %6332 = getelementptr inbounds %struct.Reg, %struct.Reg* %6331, i32 0, i32 0
  %RBP.i1550 = bitcast %union.anon* %6332 to i64*
  %6333 = load i64, i64* %RBP.i1550
  %6334 = sub i64 %6333, 408
  %6335 = load i32, i32* %ECX.i1549
  %6336 = zext i32 %6335 to i64
  %6337 = load i64, i64* %PC.i1548
  %6338 = add i64 %6337, 6
  store i64 %6338, i64* %PC.i1548
  %6339 = inttoptr i64 %6334 to i32*
  store i32 %6335, i32* %6339
  store %struct.Memory* %loadMem_43a911, %struct.Memory** %MEMORY
  br label %block_.L_43a917

block_.L_43a917:                                  ; preds = %block_.L_43a8f7, %block_.L_43a8cd
  %loadMem_43a917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6341 = getelementptr inbounds %struct.GPR, %struct.GPR* %6340, i32 0, i32 33
  %6342 = getelementptr inbounds %struct.Reg, %struct.Reg* %6341, i32 0, i32 0
  %PC.i1545 = bitcast %union.anon* %6342 to i64*
  %6343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6344 = getelementptr inbounds %struct.GPR, %struct.GPR* %6343, i32 0, i32 1
  %6345 = getelementptr inbounds %struct.Reg, %struct.Reg* %6344, i32 0, i32 0
  %RAX.i1546 = bitcast %union.anon* %6345 to i64*
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6347 = getelementptr inbounds %struct.GPR, %struct.GPR* %6346, i32 0, i32 15
  %6348 = getelementptr inbounds %struct.Reg, %struct.Reg* %6347, i32 0, i32 0
  %RBP.i1547 = bitcast %union.anon* %6348 to i64*
  %6349 = load i64, i64* %RBP.i1547
  %6350 = sub i64 %6349, 408
  %6351 = load i64, i64* %PC.i1545
  %6352 = add i64 %6351, 6
  store i64 %6352, i64* %PC.i1545
  %6353 = inttoptr i64 %6350 to i32*
  %6354 = load i32, i32* %6353
  %6355 = zext i32 %6354 to i64
  store i64 %6355, i64* %RAX.i1546, align 8
  store %struct.Memory* %loadMem_43a917, %struct.Memory** %MEMORY
  %loadMem_43a91d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6357 = getelementptr inbounds %struct.GPR, %struct.GPR* %6356, i32 0, i32 33
  %6358 = getelementptr inbounds %struct.Reg, %struct.Reg* %6357, i32 0, i32 0
  %PC.i1542 = bitcast %union.anon* %6358 to i64*
  %6359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6360 = getelementptr inbounds %struct.GPR, %struct.GPR* %6359, i32 0, i32 1
  %6361 = getelementptr inbounds %struct.Reg, %struct.Reg* %6360, i32 0, i32 0
  %EAX.i1543 = bitcast %union.anon* %6361 to i32*
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6363 = getelementptr inbounds %struct.GPR, %struct.GPR* %6362, i32 0, i32 15
  %6364 = getelementptr inbounds %struct.Reg, %struct.Reg* %6363, i32 0, i32 0
  %RBP.i1544 = bitcast %union.anon* %6364 to i64*
  %6365 = load i64, i64* %RBP.i1544
  %6366 = sub i64 %6365, 212
  %6367 = load i32, i32* %EAX.i1543
  %6368 = zext i32 %6367 to i64
  %6369 = load i64, i64* %PC.i1542
  %6370 = add i64 %6369, 6
  store i64 %6370, i64* %PC.i1542
  %6371 = inttoptr i64 %6366 to i32*
  store i32 %6367, i32* %6371
  store %struct.Memory* %loadMem_43a91d, %struct.Memory** %MEMORY
  %loadMem_43a923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6373 = getelementptr inbounds %struct.GPR, %struct.GPR* %6372, i32 0, i32 33
  %6374 = getelementptr inbounds %struct.Reg, %struct.Reg* %6373, i32 0, i32 0
  %PC.i1539 = bitcast %union.anon* %6374 to i64*
  %6375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6376 = getelementptr inbounds %struct.GPR, %struct.GPR* %6375, i32 0, i32 1
  %6377 = getelementptr inbounds %struct.Reg, %struct.Reg* %6376, i32 0, i32 0
  %RAX.i1540 = bitcast %union.anon* %6377 to i64*
  %6378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6379 = getelementptr inbounds %struct.GPR, %struct.GPR* %6378, i32 0, i32 15
  %6380 = getelementptr inbounds %struct.Reg, %struct.Reg* %6379, i32 0, i32 0
  %RBP.i1541 = bitcast %union.anon* %6380 to i64*
  %6381 = load i64, i64* %RBP.i1541
  %6382 = sub i64 %6381, 212
  %6383 = load i64, i64* %PC.i1539
  %6384 = add i64 %6383, 6
  store i64 %6384, i64* %PC.i1539
  %6385 = inttoptr i64 %6382 to i32*
  %6386 = load i32, i32* %6385
  %6387 = zext i32 %6386 to i64
  store i64 %6387, i64* %RAX.i1540, align 8
  store %struct.Memory* %loadMem_43a923, %struct.Memory** %MEMORY
  %loadMem_43a929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6389 = getelementptr inbounds %struct.GPR, %struct.GPR* %6388, i32 0, i32 33
  %6390 = getelementptr inbounds %struct.Reg, %struct.Reg* %6389, i32 0, i32 0
  %PC.i1536 = bitcast %union.anon* %6390 to i64*
  %6391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6392 = getelementptr inbounds %struct.GPR, %struct.GPR* %6391, i32 0, i32 1
  %6393 = getelementptr inbounds %struct.Reg, %struct.Reg* %6392, i32 0, i32 0
  %RAX.i1537 = bitcast %union.anon* %6393 to i64*
  %6394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6395 = getelementptr inbounds %struct.GPR, %struct.GPR* %6394, i32 0, i32 15
  %6396 = getelementptr inbounds %struct.Reg, %struct.Reg* %6395, i32 0, i32 0
  %RBP.i1538 = bitcast %union.anon* %6396 to i64*
  %6397 = load i64, i64* %RAX.i1537
  %6398 = load i64, i64* %RBP.i1538
  %6399 = sub i64 %6398, 48
  %6400 = load i64, i64* %PC.i1536
  %6401 = add i64 %6400, 3
  store i64 %6401, i64* %PC.i1536
  %6402 = trunc i64 %6397 to i32
  %6403 = inttoptr i64 %6399 to i32*
  %6404 = load i32, i32* %6403
  %6405 = add i32 %6404, %6402
  %6406 = zext i32 %6405 to i64
  store i64 %6406, i64* %RAX.i1537, align 8
  %6407 = icmp ult i32 %6405, %6402
  %6408 = icmp ult i32 %6405, %6404
  %6409 = or i1 %6407, %6408
  %6410 = zext i1 %6409 to i8
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6410, i8* %6411, align 1
  %6412 = and i32 %6405, 255
  %6413 = call i32 @llvm.ctpop.i32(i32 %6412)
  %6414 = trunc i32 %6413 to i8
  %6415 = and i8 %6414, 1
  %6416 = xor i8 %6415, 1
  %6417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6416, i8* %6417, align 1
  %6418 = xor i32 %6404, %6402
  %6419 = xor i32 %6418, %6405
  %6420 = lshr i32 %6419, 4
  %6421 = trunc i32 %6420 to i8
  %6422 = and i8 %6421, 1
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6422, i8* %6423, align 1
  %6424 = icmp eq i32 %6405, 0
  %6425 = zext i1 %6424 to i8
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6425, i8* %6426, align 1
  %6427 = lshr i32 %6405, 31
  %6428 = trunc i32 %6427 to i8
  %6429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6428, i8* %6429, align 1
  %6430 = lshr i32 %6402, 31
  %6431 = lshr i32 %6404, 31
  %6432 = xor i32 %6427, %6430
  %6433 = xor i32 %6427, %6431
  %6434 = add i32 %6432, %6433
  %6435 = icmp eq i32 %6434, 2
  %6436 = zext i1 %6435 to i8
  %6437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6436, i8* %6437, align 1
  store %struct.Memory* %loadMem_43a929, %struct.Memory** %MEMORY
  %loadMem_43a92c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6439 = getelementptr inbounds %struct.GPR, %struct.GPR* %6438, i32 0, i32 33
  %6440 = getelementptr inbounds %struct.Reg, %struct.Reg* %6439, i32 0, i32 0
  %PC.i1534 = bitcast %union.anon* %6440 to i64*
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6442 = getelementptr inbounds %struct.GPR, %struct.GPR* %6441, i32 0, i32 1
  %6443 = getelementptr inbounds %struct.Reg, %struct.Reg* %6442, i32 0, i32 0
  %EAX.i1535 = bitcast %union.anon* %6443 to i32*
  %6444 = load i32, i32* %EAX.i1535
  %6445 = zext i32 %6444 to i64
  %6446 = load i64, i64* %PC.i1534
  %6447 = add i64 %6446, 3
  store i64 %6447, i64* %PC.i1534
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6448, align 1
  %6449 = and i32 %6444, 255
  %6450 = call i32 @llvm.ctpop.i32(i32 %6449)
  %6451 = trunc i32 %6450 to i8
  %6452 = and i8 %6451, 1
  %6453 = xor i8 %6452, 1
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6453, i8* %6454, align 1
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6455, align 1
  %6456 = icmp eq i32 %6444, 0
  %6457 = zext i1 %6456 to i8
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6457, i8* %6458, align 1
  %6459 = lshr i32 %6444, 31
  %6460 = trunc i32 %6459 to i8
  %6461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6460, i8* %6461, align 1
  %6462 = lshr i32 %6444, 31
  %6463 = xor i32 %6459, %6462
  %6464 = add i32 %6463, %6462
  %6465 = icmp eq i32 %6464, 2
  %6466 = zext i1 %6465 to i8
  %6467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6466, i8* %6467, align 1
  store %struct.Memory* %loadMem_43a92c, %struct.Memory** %MEMORY
  %loadMem_43a92f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6469 = getelementptr inbounds %struct.GPR, %struct.GPR* %6468, i32 0, i32 33
  %6470 = getelementptr inbounds %struct.Reg, %struct.Reg* %6469, i32 0, i32 0
  %PC.i1533 = bitcast %union.anon* %6470 to i64*
  %6471 = load i64, i64* %PC.i1533
  %6472 = add i64 %6471, 19
  %6473 = load i64, i64* %PC.i1533
  %6474 = add i64 %6473, 6
  %6475 = load i64, i64* %PC.i1533
  %6476 = add i64 %6475, 6
  store i64 %6476, i64* %PC.i1533
  %6477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6478 = load i8, i8* %6477, align 1
  %6479 = icmp ne i8 %6478, 0
  %6480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6481 = load i8, i8* %6480, align 1
  %6482 = icmp ne i8 %6481, 0
  %6483 = xor i1 %6479, %6482
  %6484 = xor i1 %6483, true
  %6485 = zext i1 %6484 to i8
  store i8 %6485, i8* %BRANCH_TAKEN, align 1
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6487 = select i1 %6483, i64 %6474, i64 %6472
  store i64 %6487, i64* %6486, align 8
  store %struct.Memory* %loadMem_43a92f, %struct.Memory** %MEMORY
  %loadBr_43a92f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a92f = icmp eq i8 %loadBr_43a92f, 1
  br i1 %cmpBr_43a92f, label %block_.L_43a942, label %block_43a935

block_43a935:                                     ; preds = %block_.L_43a917
  %loadMem_43a935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6489 = getelementptr inbounds %struct.GPR, %struct.GPR* %6488, i32 0, i32 33
  %6490 = getelementptr inbounds %struct.Reg, %struct.Reg* %6489, i32 0, i32 0
  %PC.i1530 = bitcast %union.anon* %6490 to i64*
  %6491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6492 = getelementptr inbounds %struct.GPR, %struct.GPR* %6491, i32 0, i32 1
  %6493 = getelementptr inbounds %struct.Reg, %struct.Reg* %6492, i32 0, i32 0
  %EAX.i1531 = bitcast %union.anon* %6493 to i32*
  %6494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6495 = getelementptr inbounds %struct.GPR, %struct.GPR* %6494, i32 0, i32 1
  %6496 = getelementptr inbounds %struct.Reg, %struct.Reg* %6495, i32 0, i32 0
  %RAX.i1532 = bitcast %union.anon* %6496 to i64*
  %6497 = load i64, i64* %RAX.i1532
  %6498 = load i32, i32* %EAX.i1531
  %6499 = zext i32 %6498 to i64
  %6500 = load i64, i64* %PC.i1530
  %6501 = add i64 %6500, 2
  store i64 %6501, i64* %PC.i1530
  %6502 = xor i64 %6499, %6497
  %6503 = trunc i64 %6502 to i32
  %6504 = and i64 %6502, 4294967295
  store i64 %6504, i64* %RAX.i1532, align 8
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6505, align 1
  %6506 = and i32 %6503, 255
  %6507 = call i32 @llvm.ctpop.i32(i32 %6506)
  %6508 = trunc i32 %6507 to i8
  %6509 = and i8 %6508, 1
  %6510 = xor i8 %6509, 1
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6510, i8* %6511, align 1
  %6512 = icmp eq i32 %6503, 0
  %6513 = zext i1 %6512 to i8
  %6514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6513, i8* %6514, align 1
  %6515 = lshr i32 %6503, 31
  %6516 = trunc i32 %6515 to i8
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6516, i8* %6517, align 1
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6518, align 1
  %6519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6519, align 1
  store %struct.Memory* %loadMem_43a935, %struct.Memory** %MEMORY
  %loadMem_43a937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6521 = getelementptr inbounds %struct.GPR, %struct.GPR* %6520, i32 0, i32 33
  %6522 = getelementptr inbounds %struct.Reg, %struct.Reg* %6521, i32 0, i32 0
  %PC.i1527 = bitcast %union.anon* %6522 to i64*
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6524 = getelementptr inbounds %struct.GPR, %struct.GPR* %6523, i32 0, i32 1
  %6525 = getelementptr inbounds %struct.Reg, %struct.Reg* %6524, i32 0, i32 0
  %EAX.i1528 = bitcast %union.anon* %6525 to i32*
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6527 = getelementptr inbounds %struct.GPR, %struct.GPR* %6526, i32 0, i32 15
  %6528 = getelementptr inbounds %struct.Reg, %struct.Reg* %6527, i32 0, i32 0
  %RBP.i1529 = bitcast %union.anon* %6528 to i64*
  %6529 = load i64, i64* %RBP.i1529
  %6530 = sub i64 %6529, 412
  %6531 = load i32, i32* %EAX.i1528
  %6532 = zext i32 %6531 to i64
  %6533 = load i64, i64* %PC.i1527
  %6534 = add i64 %6533, 6
  store i64 %6534, i64* %PC.i1527
  %6535 = inttoptr i64 %6530 to i32*
  store i32 %6531, i32* %6535
  store %struct.Memory* %loadMem_43a937, %struct.Memory** %MEMORY
  %loadMem_43a93d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6537 = getelementptr inbounds %struct.GPR, %struct.GPR* %6536, i32 0, i32 33
  %6538 = getelementptr inbounds %struct.Reg, %struct.Reg* %6537, i32 0, i32 0
  %PC.i1526 = bitcast %union.anon* %6538 to i64*
  %6539 = load i64, i64* %PC.i1526
  %6540 = add i64 %6539, 66
  %6541 = load i64, i64* %PC.i1526
  %6542 = add i64 %6541, 5
  store i64 %6542, i64* %PC.i1526
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6540, i64* %6543, align 8
  store %struct.Memory* %loadMem_43a93d, %struct.Memory** %MEMORY
  br label %block_.L_43a97f

block_.L_43a942:                                  ; preds = %block_.L_43a917
  %loadMem_43a942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6545 = getelementptr inbounds %struct.GPR, %struct.GPR* %6544, i32 0, i32 33
  %6546 = getelementptr inbounds %struct.Reg, %struct.Reg* %6545, i32 0, i32 0
  %PC.i1523 = bitcast %union.anon* %6546 to i64*
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6548 = getelementptr inbounds %struct.GPR, %struct.GPR* %6547, i32 0, i32 1
  %6549 = getelementptr inbounds %struct.Reg, %struct.Reg* %6548, i32 0, i32 0
  %RAX.i1524 = bitcast %union.anon* %6549 to i64*
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6551 = getelementptr inbounds %struct.GPR, %struct.GPR* %6550, i32 0, i32 15
  %6552 = getelementptr inbounds %struct.Reg, %struct.Reg* %6551, i32 0, i32 0
  %RBP.i1525 = bitcast %union.anon* %6552 to i64*
  %6553 = load i64, i64* %RBP.i1525
  %6554 = sub i64 %6553, 212
  %6555 = load i64, i64* %PC.i1523
  %6556 = add i64 %6555, 6
  store i64 %6556, i64* %PC.i1523
  %6557 = inttoptr i64 %6554 to i32*
  %6558 = load i32, i32* %6557
  %6559 = zext i32 %6558 to i64
  store i64 %6559, i64* %RAX.i1524, align 8
  store %struct.Memory* %loadMem_43a942, %struct.Memory** %MEMORY
  %loadMem_43a948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6561 = getelementptr inbounds %struct.GPR, %struct.GPR* %6560, i32 0, i32 33
  %6562 = getelementptr inbounds %struct.Reg, %struct.Reg* %6561, i32 0, i32 0
  %PC.i1520 = bitcast %union.anon* %6562 to i64*
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6564 = getelementptr inbounds %struct.GPR, %struct.GPR* %6563, i32 0, i32 1
  %6565 = getelementptr inbounds %struct.Reg, %struct.Reg* %6564, i32 0, i32 0
  %RAX.i1521 = bitcast %union.anon* %6565 to i64*
  %6566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6567 = getelementptr inbounds %struct.GPR, %struct.GPR* %6566, i32 0, i32 15
  %6568 = getelementptr inbounds %struct.Reg, %struct.Reg* %6567, i32 0, i32 0
  %RBP.i1522 = bitcast %union.anon* %6568 to i64*
  %6569 = load i64, i64* %RAX.i1521
  %6570 = load i64, i64* %RBP.i1522
  %6571 = sub i64 %6570, 48
  %6572 = load i64, i64* %PC.i1520
  %6573 = add i64 %6572, 3
  store i64 %6573, i64* %PC.i1520
  %6574 = trunc i64 %6569 to i32
  %6575 = inttoptr i64 %6571 to i32*
  %6576 = load i32, i32* %6575
  %6577 = add i32 %6576, %6574
  %6578 = zext i32 %6577 to i64
  store i64 %6578, i64* %RAX.i1521, align 8
  %6579 = icmp ult i32 %6577, %6574
  %6580 = icmp ult i32 %6577, %6576
  %6581 = or i1 %6579, %6580
  %6582 = zext i1 %6581 to i8
  %6583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6582, i8* %6583, align 1
  %6584 = and i32 %6577, 255
  %6585 = call i32 @llvm.ctpop.i32(i32 %6584)
  %6586 = trunc i32 %6585 to i8
  %6587 = and i8 %6586, 1
  %6588 = xor i8 %6587, 1
  %6589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6588, i8* %6589, align 1
  %6590 = xor i32 %6576, %6574
  %6591 = xor i32 %6590, %6577
  %6592 = lshr i32 %6591, 4
  %6593 = trunc i32 %6592 to i8
  %6594 = and i8 %6593, 1
  %6595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6594, i8* %6595, align 1
  %6596 = icmp eq i32 %6577, 0
  %6597 = zext i1 %6596 to i8
  %6598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6597, i8* %6598, align 1
  %6599 = lshr i32 %6577, 31
  %6600 = trunc i32 %6599 to i8
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6600, i8* %6601, align 1
  %6602 = lshr i32 %6574, 31
  %6603 = lshr i32 %6576, 31
  %6604 = xor i32 %6599, %6602
  %6605 = xor i32 %6599, %6603
  %6606 = add i32 %6604, %6605
  %6607 = icmp eq i32 %6606, 2
  %6608 = zext i1 %6607 to i8
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6608, i8* %6609, align 1
  store %struct.Memory* %loadMem_43a948, %struct.Memory** %MEMORY
  %loadMem_43a94b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6611 = getelementptr inbounds %struct.GPR, %struct.GPR* %6610, i32 0, i32 33
  %6612 = getelementptr inbounds %struct.Reg, %struct.Reg* %6611, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %6612 to i64*
  %6613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6614 = getelementptr inbounds %struct.GPR, %struct.GPR* %6613, i32 0, i32 1
  %6615 = getelementptr inbounds %struct.Reg, %struct.Reg* %6614, i32 0, i32 0
  %EAX.i1519 = bitcast %union.anon* %6615 to i32*
  %6616 = load i32, i32* %EAX.i1519
  %6617 = zext i32 %6616 to i64
  %6618 = load i64, i64* %PC.i1518
  %6619 = add i64 %6618, 3
  store i64 %6619, i64* %PC.i1518
  %6620 = sub i32 %6616, 51
  %6621 = icmp ult i32 %6616, 51
  %6622 = zext i1 %6621 to i8
  %6623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6622, i8* %6623, align 1
  %6624 = and i32 %6620, 255
  %6625 = call i32 @llvm.ctpop.i32(i32 %6624)
  %6626 = trunc i32 %6625 to i8
  %6627 = and i8 %6626, 1
  %6628 = xor i8 %6627, 1
  %6629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6628, i8* %6629, align 1
  %6630 = xor i64 51, %6617
  %6631 = trunc i64 %6630 to i32
  %6632 = xor i32 %6631, %6620
  %6633 = lshr i32 %6632, 4
  %6634 = trunc i32 %6633 to i8
  %6635 = and i8 %6634, 1
  %6636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6635, i8* %6636, align 1
  %6637 = icmp eq i32 %6620, 0
  %6638 = zext i1 %6637 to i8
  %6639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6638, i8* %6639, align 1
  %6640 = lshr i32 %6620, 31
  %6641 = trunc i32 %6640 to i8
  %6642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6641, i8* %6642, align 1
  %6643 = lshr i32 %6616, 31
  %6644 = xor i32 %6640, %6643
  %6645 = add i32 %6644, %6643
  %6646 = icmp eq i32 %6645, 2
  %6647 = zext i1 %6646 to i8
  %6648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6647, i8* %6648, align 1
  store %struct.Memory* %loadMem_43a94b, %struct.Memory** %MEMORY
  %loadMem_43a94e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6650 = getelementptr inbounds %struct.GPR, %struct.GPR* %6649, i32 0, i32 33
  %6651 = getelementptr inbounds %struct.Reg, %struct.Reg* %6650, i32 0, i32 0
  %PC.i1517 = bitcast %union.anon* %6651 to i64*
  %6652 = load i64, i64* %PC.i1517
  %6653 = add i64 %6652, 22
  %6654 = load i64, i64* %PC.i1517
  %6655 = add i64 %6654, 6
  %6656 = load i64, i64* %PC.i1517
  %6657 = add i64 %6656, 6
  store i64 %6657, i64* %PC.i1517
  %6658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6659 = load i8, i8* %6658, align 1
  %6660 = icmp ne i8 %6659, 0
  %6661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6662 = load i8, i8* %6661, align 1
  %6663 = icmp ne i8 %6662, 0
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6665 = load i8, i8* %6664, align 1
  %6666 = icmp ne i8 %6665, 0
  %6667 = xor i1 %6663, %6666
  %6668 = or i1 %6660, %6667
  %6669 = zext i1 %6668 to i8
  store i8 %6669, i8* %BRANCH_TAKEN, align 1
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6671 = select i1 %6668, i64 %6653, i64 %6655
  store i64 %6671, i64* %6670, align 8
  store %struct.Memory* %loadMem_43a94e, %struct.Memory** %MEMORY
  %loadBr_43a94e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a94e = icmp eq i8 %loadBr_43a94e, 1
  br i1 %cmpBr_43a94e, label %block_.L_43a964, label %block_43a954

block_43a954:                                     ; preds = %block_.L_43a942
  %loadMem_43a954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6673 = getelementptr inbounds %struct.GPR, %struct.GPR* %6672, i32 0, i32 33
  %6674 = getelementptr inbounds %struct.Reg, %struct.Reg* %6673, i32 0, i32 0
  %PC.i1515 = bitcast %union.anon* %6674 to i64*
  %6675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6676 = getelementptr inbounds %struct.GPR, %struct.GPR* %6675, i32 0, i32 1
  %6677 = getelementptr inbounds %struct.Reg, %struct.Reg* %6676, i32 0, i32 0
  %RAX.i1516 = bitcast %union.anon* %6677 to i64*
  %6678 = load i64, i64* %PC.i1515
  %6679 = add i64 %6678, 5
  store i64 %6679, i64* %PC.i1515
  store i64 51, i64* %RAX.i1516, align 8
  store %struct.Memory* %loadMem_43a954, %struct.Memory** %MEMORY
  %loadMem_43a959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6681 = getelementptr inbounds %struct.GPR, %struct.GPR* %6680, i32 0, i32 33
  %6682 = getelementptr inbounds %struct.Reg, %struct.Reg* %6681, i32 0, i32 0
  %PC.i1512 = bitcast %union.anon* %6682 to i64*
  %6683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6684 = getelementptr inbounds %struct.GPR, %struct.GPR* %6683, i32 0, i32 1
  %6685 = getelementptr inbounds %struct.Reg, %struct.Reg* %6684, i32 0, i32 0
  %EAX.i1513 = bitcast %union.anon* %6685 to i32*
  %6686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6687 = getelementptr inbounds %struct.GPR, %struct.GPR* %6686, i32 0, i32 15
  %6688 = getelementptr inbounds %struct.Reg, %struct.Reg* %6687, i32 0, i32 0
  %RBP.i1514 = bitcast %union.anon* %6688 to i64*
  %6689 = load i64, i64* %RBP.i1514
  %6690 = sub i64 %6689, 416
  %6691 = load i32, i32* %EAX.i1513
  %6692 = zext i32 %6691 to i64
  %6693 = load i64, i64* %PC.i1512
  %6694 = add i64 %6693, 6
  store i64 %6694, i64* %PC.i1512
  %6695 = inttoptr i64 %6690 to i32*
  store i32 %6691, i32* %6695
  store %struct.Memory* %loadMem_43a959, %struct.Memory** %MEMORY
  %loadMem_43a95f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6697 = getelementptr inbounds %struct.GPR, %struct.GPR* %6696, i32 0, i32 33
  %6698 = getelementptr inbounds %struct.Reg, %struct.Reg* %6697, i32 0, i32 0
  %PC.i1511 = bitcast %union.anon* %6698 to i64*
  %6699 = load i64, i64* %PC.i1511
  %6700 = add i64 %6699, 20
  %6701 = load i64, i64* %PC.i1511
  %6702 = add i64 %6701, 5
  store i64 %6702, i64* %PC.i1511
  %6703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6700, i64* %6703, align 8
  store %struct.Memory* %loadMem_43a95f, %struct.Memory** %MEMORY
  br label %block_.L_43a973

block_.L_43a964:                                  ; preds = %block_.L_43a942
  %loadMem_43a964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6705 = getelementptr inbounds %struct.GPR, %struct.GPR* %6704, i32 0, i32 33
  %6706 = getelementptr inbounds %struct.Reg, %struct.Reg* %6705, i32 0, i32 0
  %PC.i1508 = bitcast %union.anon* %6706 to i64*
  %6707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6708 = getelementptr inbounds %struct.GPR, %struct.GPR* %6707, i32 0, i32 1
  %6709 = getelementptr inbounds %struct.Reg, %struct.Reg* %6708, i32 0, i32 0
  %RAX.i1509 = bitcast %union.anon* %6709 to i64*
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6711 = getelementptr inbounds %struct.GPR, %struct.GPR* %6710, i32 0, i32 15
  %6712 = getelementptr inbounds %struct.Reg, %struct.Reg* %6711, i32 0, i32 0
  %RBP.i1510 = bitcast %union.anon* %6712 to i64*
  %6713 = load i64, i64* %RBP.i1510
  %6714 = sub i64 %6713, 212
  %6715 = load i64, i64* %PC.i1508
  %6716 = add i64 %6715, 6
  store i64 %6716, i64* %PC.i1508
  %6717 = inttoptr i64 %6714 to i32*
  %6718 = load i32, i32* %6717
  %6719 = zext i32 %6718 to i64
  store i64 %6719, i64* %RAX.i1509, align 8
  store %struct.Memory* %loadMem_43a964, %struct.Memory** %MEMORY
  %loadMem_43a96a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6721 = getelementptr inbounds %struct.GPR, %struct.GPR* %6720, i32 0, i32 33
  %6722 = getelementptr inbounds %struct.Reg, %struct.Reg* %6721, i32 0, i32 0
  %PC.i1505 = bitcast %union.anon* %6722 to i64*
  %6723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6724 = getelementptr inbounds %struct.GPR, %struct.GPR* %6723, i32 0, i32 1
  %6725 = getelementptr inbounds %struct.Reg, %struct.Reg* %6724, i32 0, i32 0
  %RAX.i1506 = bitcast %union.anon* %6725 to i64*
  %6726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6727 = getelementptr inbounds %struct.GPR, %struct.GPR* %6726, i32 0, i32 15
  %6728 = getelementptr inbounds %struct.Reg, %struct.Reg* %6727, i32 0, i32 0
  %RBP.i1507 = bitcast %union.anon* %6728 to i64*
  %6729 = load i64, i64* %RAX.i1506
  %6730 = load i64, i64* %RBP.i1507
  %6731 = sub i64 %6730, 48
  %6732 = load i64, i64* %PC.i1505
  %6733 = add i64 %6732, 3
  store i64 %6733, i64* %PC.i1505
  %6734 = trunc i64 %6729 to i32
  %6735 = inttoptr i64 %6731 to i32*
  %6736 = load i32, i32* %6735
  %6737 = add i32 %6736, %6734
  %6738 = zext i32 %6737 to i64
  store i64 %6738, i64* %RAX.i1506, align 8
  %6739 = icmp ult i32 %6737, %6734
  %6740 = icmp ult i32 %6737, %6736
  %6741 = or i1 %6739, %6740
  %6742 = zext i1 %6741 to i8
  %6743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6742, i8* %6743, align 1
  %6744 = and i32 %6737, 255
  %6745 = call i32 @llvm.ctpop.i32(i32 %6744)
  %6746 = trunc i32 %6745 to i8
  %6747 = and i8 %6746, 1
  %6748 = xor i8 %6747, 1
  %6749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6748, i8* %6749, align 1
  %6750 = xor i32 %6736, %6734
  %6751 = xor i32 %6750, %6737
  %6752 = lshr i32 %6751, 4
  %6753 = trunc i32 %6752 to i8
  %6754 = and i8 %6753, 1
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6754, i8* %6755, align 1
  %6756 = icmp eq i32 %6737, 0
  %6757 = zext i1 %6756 to i8
  %6758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6757, i8* %6758, align 1
  %6759 = lshr i32 %6737, 31
  %6760 = trunc i32 %6759 to i8
  %6761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6760, i8* %6761, align 1
  %6762 = lshr i32 %6734, 31
  %6763 = lshr i32 %6736, 31
  %6764 = xor i32 %6759, %6762
  %6765 = xor i32 %6759, %6763
  %6766 = add i32 %6764, %6765
  %6767 = icmp eq i32 %6766, 2
  %6768 = zext i1 %6767 to i8
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6768, i8* %6769, align 1
  store %struct.Memory* %loadMem_43a96a, %struct.Memory** %MEMORY
  %loadMem_43a96d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6771 = getelementptr inbounds %struct.GPR, %struct.GPR* %6770, i32 0, i32 33
  %6772 = getelementptr inbounds %struct.Reg, %struct.Reg* %6771, i32 0, i32 0
  %PC.i1502 = bitcast %union.anon* %6772 to i64*
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6774 = getelementptr inbounds %struct.GPR, %struct.GPR* %6773, i32 0, i32 1
  %6775 = getelementptr inbounds %struct.Reg, %struct.Reg* %6774, i32 0, i32 0
  %EAX.i1503 = bitcast %union.anon* %6775 to i32*
  %6776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6777 = getelementptr inbounds %struct.GPR, %struct.GPR* %6776, i32 0, i32 15
  %6778 = getelementptr inbounds %struct.Reg, %struct.Reg* %6777, i32 0, i32 0
  %RBP.i1504 = bitcast %union.anon* %6778 to i64*
  %6779 = load i64, i64* %RBP.i1504
  %6780 = sub i64 %6779, 416
  %6781 = load i32, i32* %EAX.i1503
  %6782 = zext i32 %6781 to i64
  %6783 = load i64, i64* %PC.i1502
  %6784 = add i64 %6783, 6
  store i64 %6784, i64* %PC.i1502
  %6785 = inttoptr i64 %6780 to i32*
  store i32 %6781, i32* %6785
  store %struct.Memory* %loadMem_43a96d, %struct.Memory** %MEMORY
  br label %block_.L_43a973

block_.L_43a973:                                  ; preds = %block_.L_43a964, %block_43a954
  %loadMem_43a973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6787 = getelementptr inbounds %struct.GPR, %struct.GPR* %6786, i32 0, i32 33
  %6788 = getelementptr inbounds %struct.Reg, %struct.Reg* %6787, i32 0, i32 0
  %PC.i1499 = bitcast %union.anon* %6788 to i64*
  %6789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6790 = getelementptr inbounds %struct.GPR, %struct.GPR* %6789, i32 0, i32 1
  %6791 = getelementptr inbounds %struct.Reg, %struct.Reg* %6790, i32 0, i32 0
  %RAX.i1500 = bitcast %union.anon* %6791 to i64*
  %6792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6793 = getelementptr inbounds %struct.GPR, %struct.GPR* %6792, i32 0, i32 15
  %6794 = getelementptr inbounds %struct.Reg, %struct.Reg* %6793, i32 0, i32 0
  %RBP.i1501 = bitcast %union.anon* %6794 to i64*
  %6795 = load i64, i64* %RBP.i1501
  %6796 = sub i64 %6795, 416
  %6797 = load i64, i64* %PC.i1499
  %6798 = add i64 %6797, 6
  store i64 %6798, i64* %PC.i1499
  %6799 = inttoptr i64 %6796 to i32*
  %6800 = load i32, i32* %6799
  %6801 = zext i32 %6800 to i64
  store i64 %6801, i64* %RAX.i1500, align 8
  store %struct.Memory* %loadMem_43a973, %struct.Memory** %MEMORY
  %loadMem_43a979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6803 = getelementptr inbounds %struct.GPR, %struct.GPR* %6802, i32 0, i32 33
  %6804 = getelementptr inbounds %struct.Reg, %struct.Reg* %6803, i32 0, i32 0
  %PC.i1496 = bitcast %union.anon* %6804 to i64*
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6806 = getelementptr inbounds %struct.GPR, %struct.GPR* %6805, i32 0, i32 1
  %6807 = getelementptr inbounds %struct.Reg, %struct.Reg* %6806, i32 0, i32 0
  %EAX.i1497 = bitcast %union.anon* %6807 to i32*
  %6808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6809 = getelementptr inbounds %struct.GPR, %struct.GPR* %6808, i32 0, i32 15
  %6810 = getelementptr inbounds %struct.Reg, %struct.Reg* %6809, i32 0, i32 0
  %RBP.i1498 = bitcast %union.anon* %6810 to i64*
  %6811 = load i64, i64* %RBP.i1498
  %6812 = sub i64 %6811, 412
  %6813 = load i32, i32* %EAX.i1497
  %6814 = zext i32 %6813 to i64
  %6815 = load i64, i64* %PC.i1496
  %6816 = add i64 %6815, 6
  store i64 %6816, i64* %PC.i1496
  %6817 = inttoptr i64 %6812 to i32*
  store i32 %6813, i32* %6817
  store %struct.Memory* %loadMem_43a979, %struct.Memory** %MEMORY
  br label %block_.L_43a97f

block_.L_43a97f:                                  ; preds = %block_.L_43a973, %block_43a935
  %loadMem_43a97f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6819 = getelementptr inbounds %struct.GPR, %struct.GPR* %6818, i32 0, i32 33
  %6820 = getelementptr inbounds %struct.Reg, %struct.Reg* %6819, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %6820 to i64*
  %6821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6822 = getelementptr inbounds %struct.GPR, %struct.GPR* %6821, i32 0, i32 1
  %6823 = getelementptr inbounds %struct.Reg, %struct.Reg* %6822, i32 0, i32 0
  %RAX.i1494 = bitcast %union.anon* %6823 to i64*
  %6824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6825 = getelementptr inbounds %struct.GPR, %struct.GPR* %6824, i32 0, i32 15
  %6826 = getelementptr inbounds %struct.Reg, %struct.Reg* %6825, i32 0, i32 0
  %RBP.i1495 = bitcast %union.anon* %6826 to i64*
  %6827 = load i64, i64* %RBP.i1495
  %6828 = sub i64 %6827, 412
  %6829 = load i64, i64* %PC.i1493
  %6830 = add i64 %6829, 6
  store i64 %6830, i64* %PC.i1493
  %6831 = inttoptr i64 %6828 to i32*
  %6832 = load i32, i32* %6831
  %6833 = zext i32 %6832 to i64
  store i64 %6833, i64* %RAX.i1494, align 8
  store %struct.Memory* %loadMem_43a97f, %struct.Memory** %MEMORY
  %loadMem_43a985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6835 = getelementptr inbounds %struct.GPR, %struct.GPR* %6834, i32 0, i32 33
  %6836 = getelementptr inbounds %struct.Reg, %struct.Reg* %6835, i32 0, i32 0
  %PC.i1490 = bitcast %union.anon* %6836 to i64*
  %6837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6838 = getelementptr inbounds %struct.GPR, %struct.GPR* %6837, i32 0, i32 1
  %6839 = getelementptr inbounds %struct.Reg, %struct.Reg* %6838, i32 0, i32 0
  %EAX.i1491 = bitcast %union.anon* %6839 to i32*
  %6840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6841 = getelementptr inbounds %struct.GPR, %struct.GPR* %6840, i32 0, i32 15
  %6842 = getelementptr inbounds %struct.Reg, %struct.Reg* %6841, i32 0, i32 0
  %RBP.i1492 = bitcast %union.anon* %6842 to i64*
  %6843 = load i64, i64* %RBP.i1492
  %6844 = sub i64 %6843, 176
  %6845 = load i32, i32* %EAX.i1491
  %6846 = zext i32 %6845 to i64
  %6847 = load i64, i64* %PC.i1490
  %6848 = add i64 %6847, 6
  store i64 %6848, i64* %PC.i1490
  %6849 = inttoptr i64 %6844 to i32*
  store i32 %6845, i32* %6849
  store %struct.Memory* %loadMem_43a985, %struct.Memory** %MEMORY
  %loadMem_43a98b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6851 = getelementptr inbounds %struct.GPR, %struct.GPR* %6850, i32 0, i32 33
  %6852 = getelementptr inbounds %struct.Reg, %struct.Reg* %6851, i32 0, i32 0
  %PC.i1487 = bitcast %union.anon* %6852 to i64*
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6854 = getelementptr inbounds %struct.GPR, %struct.GPR* %6853, i32 0, i32 1
  %6855 = getelementptr inbounds %struct.Reg, %struct.Reg* %6854, i32 0, i32 0
  %RAX.i1488 = bitcast %union.anon* %6855 to i64*
  %6856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6857 = getelementptr inbounds %struct.GPR, %struct.GPR* %6856, i32 0, i32 15
  %6858 = getelementptr inbounds %struct.Reg, %struct.Reg* %6857, i32 0, i32 0
  %RBP.i1489 = bitcast %union.anon* %6858 to i64*
  %6859 = load i64, i64* %RBP.i1489
  %6860 = sub i64 %6859, 212
  %6861 = load i64, i64* %PC.i1487
  %6862 = add i64 %6861, 6
  store i64 %6862, i64* %PC.i1487
  %6863 = inttoptr i64 %6860 to i32*
  %6864 = load i32, i32* %6863
  %6865 = zext i32 %6864 to i64
  store i64 %6865, i64* %RAX.i1488, align 8
  store %struct.Memory* %loadMem_43a98b, %struct.Memory** %MEMORY
  %loadMem_43a991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6867 = getelementptr inbounds %struct.GPR, %struct.GPR* %6866, i32 0, i32 33
  %6868 = getelementptr inbounds %struct.Reg, %struct.Reg* %6867, i32 0, i32 0
  %PC.i1484 = bitcast %union.anon* %6868 to i64*
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6870 = getelementptr inbounds %struct.GPR, %struct.GPR* %6869, i32 0, i32 1
  %6871 = getelementptr inbounds %struct.Reg, %struct.Reg* %6870, i32 0, i32 0
  %RAX.i1485 = bitcast %union.anon* %6871 to i64*
  %6872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6873 = getelementptr inbounds %struct.GPR, %struct.GPR* %6872, i32 0, i32 15
  %6874 = getelementptr inbounds %struct.Reg, %struct.Reg* %6873, i32 0, i32 0
  %RBP.i1486 = bitcast %union.anon* %6874 to i64*
  %6875 = load i64, i64* %RAX.i1485
  %6876 = load i64, i64* %RBP.i1486
  %6877 = sub i64 %6876, 52
  %6878 = load i64, i64* %PC.i1484
  %6879 = add i64 %6878, 3
  store i64 %6879, i64* %PC.i1484
  %6880 = trunc i64 %6875 to i32
  %6881 = inttoptr i64 %6877 to i32*
  %6882 = load i32, i32* %6881
  %6883 = add i32 %6882, %6880
  %6884 = zext i32 %6883 to i64
  store i64 %6884, i64* %RAX.i1485, align 8
  %6885 = icmp ult i32 %6883, %6880
  %6886 = icmp ult i32 %6883, %6882
  %6887 = or i1 %6885, %6886
  %6888 = zext i1 %6887 to i8
  %6889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6888, i8* %6889, align 1
  %6890 = and i32 %6883, 255
  %6891 = call i32 @llvm.ctpop.i32(i32 %6890)
  %6892 = trunc i32 %6891 to i8
  %6893 = and i8 %6892, 1
  %6894 = xor i8 %6893, 1
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6894, i8* %6895, align 1
  %6896 = xor i32 %6882, %6880
  %6897 = xor i32 %6896, %6883
  %6898 = lshr i32 %6897, 4
  %6899 = trunc i32 %6898 to i8
  %6900 = and i8 %6899, 1
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6900, i8* %6901, align 1
  %6902 = icmp eq i32 %6883, 0
  %6903 = zext i1 %6902 to i8
  %6904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6903, i8* %6904, align 1
  %6905 = lshr i32 %6883, 31
  %6906 = trunc i32 %6905 to i8
  %6907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6906, i8* %6907, align 1
  %6908 = lshr i32 %6880, 31
  %6909 = lshr i32 %6882, 31
  %6910 = xor i32 %6905, %6908
  %6911 = xor i32 %6905, %6909
  %6912 = add i32 %6910, %6911
  %6913 = icmp eq i32 %6912, 2
  %6914 = zext i1 %6913 to i8
  %6915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6914, i8* %6915, align 1
  store %struct.Memory* %loadMem_43a991, %struct.Memory** %MEMORY
  %loadMem_43a994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6917 = getelementptr inbounds %struct.GPR, %struct.GPR* %6916, i32 0, i32 33
  %6918 = getelementptr inbounds %struct.Reg, %struct.Reg* %6917, i32 0, i32 0
  %PC.i1482 = bitcast %union.anon* %6918 to i64*
  %6919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6920 = getelementptr inbounds %struct.GPR, %struct.GPR* %6919, i32 0, i32 1
  %6921 = getelementptr inbounds %struct.Reg, %struct.Reg* %6920, i32 0, i32 0
  %EAX.i1483 = bitcast %union.anon* %6921 to i32*
  %6922 = load i32, i32* %EAX.i1483
  %6923 = zext i32 %6922 to i64
  %6924 = load i64, i64* %PC.i1482
  %6925 = add i64 %6924, 3
  store i64 %6925, i64* %PC.i1482
  %6926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6926, align 1
  %6927 = and i32 %6922, 255
  %6928 = call i32 @llvm.ctpop.i32(i32 %6927)
  %6929 = trunc i32 %6928 to i8
  %6930 = and i8 %6929, 1
  %6931 = xor i8 %6930, 1
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6931, i8* %6932, align 1
  %6933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6933, align 1
  %6934 = icmp eq i32 %6922, 0
  %6935 = zext i1 %6934 to i8
  %6936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6935, i8* %6936, align 1
  %6937 = lshr i32 %6922, 31
  %6938 = trunc i32 %6937 to i8
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6938, i8* %6939, align 1
  %6940 = lshr i32 %6922, 31
  %6941 = xor i32 %6937, %6940
  %6942 = add i32 %6941, %6940
  %6943 = icmp eq i32 %6942, 2
  %6944 = zext i1 %6943 to i8
  %6945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6944, i8* %6945, align 1
  store %struct.Memory* %loadMem_43a994, %struct.Memory** %MEMORY
  %loadMem_43a997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6947 = getelementptr inbounds %struct.GPR, %struct.GPR* %6946, i32 0, i32 33
  %6948 = getelementptr inbounds %struct.Reg, %struct.Reg* %6947, i32 0, i32 0
  %PC.i1481 = bitcast %union.anon* %6948 to i64*
  %6949 = load i64, i64* %PC.i1481
  %6950 = add i64 %6949, 19
  %6951 = load i64, i64* %PC.i1481
  %6952 = add i64 %6951, 6
  %6953 = load i64, i64* %PC.i1481
  %6954 = add i64 %6953, 6
  store i64 %6954, i64* %PC.i1481
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6956 = load i8, i8* %6955, align 1
  %6957 = icmp ne i8 %6956, 0
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6959 = load i8, i8* %6958, align 1
  %6960 = icmp ne i8 %6959, 0
  %6961 = xor i1 %6957, %6960
  %6962 = xor i1 %6961, true
  %6963 = zext i1 %6962 to i8
  store i8 %6963, i8* %BRANCH_TAKEN, align 1
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6965 = select i1 %6961, i64 %6952, i64 %6950
  store i64 %6965, i64* %6964, align 8
  store %struct.Memory* %loadMem_43a997, %struct.Memory** %MEMORY
  %loadBr_43a997 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a997 = icmp eq i8 %loadBr_43a997, 1
  br i1 %cmpBr_43a997, label %block_.L_43a9aa, label %block_43a99d

block_43a99d:                                     ; preds = %block_.L_43a97f
  %loadMem_43a99d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6967 = getelementptr inbounds %struct.GPR, %struct.GPR* %6966, i32 0, i32 33
  %6968 = getelementptr inbounds %struct.Reg, %struct.Reg* %6967, i32 0, i32 0
  %PC.i1478 = bitcast %union.anon* %6968 to i64*
  %6969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6970 = getelementptr inbounds %struct.GPR, %struct.GPR* %6969, i32 0, i32 1
  %6971 = getelementptr inbounds %struct.Reg, %struct.Reg* %6970, i32 0, i32 0
  %EAX.i1479 = bitcast %union.anon* %6971 to i32*
  %6972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6973 = getelementptr inbounds %struct.GPR, %struct.GPR* %6972, i32 0, i32 1
  %6974 = getelementptr inbounds %struct.Reg, %struct.Reg* %6973, i32 0, i32 0
  %RAX.i1480 = bitcast %union.anon* %6974 to i64*
  %6975 = load i64, i64* %RAX.i1480
  %6976 = load i32, i32* %EAX.i1479
  %6977 = zext i32 %6976 to i64
  %6978 = load i64, i64* %PC.i1478
  %6979 = add i64 %6978, 2
  store i64 %6979, i64* %PC.i1478
  %6980 = xor i64 %6977, %6975
  %6981 = trunc i64 %6980 to i32
  %6982 = and i64 %6980, 4294967295
  store i64 %6982, i64* %RAX.i1480, align 8
  %6983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6983, align 1
  %6984 = and i32 %6981, 255
  %6985 = call i32 @llvm.ctpop.i32(i32 %6984)
  %6986 = trunc i32 %6985 to i8
  %6987 = and i8 %6986, 1
  %6988 = xor i8 %6987, 1
  %6989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6988, i8* %6989, align 1
  %6990 = icmp eq i32 %6981, 0
  %6991 = zext i1 %6990 to i8
  %6992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6991, i8* %6992, align 1
  %6993 = lshr i32 %6981, 31
  %6994 = trunc i32 %6993 to i8
  %6995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6994, i8* %6995, align 1
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6996, align 1
  %6997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6997, align 1
  store %struct.Memory* %loadMem_43a99d, %struct.Memory** %MEMORY
  %loadMem_43a99f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6999 = getelementptr inbounds %struct.GPR, %struct.GPR* %6998, i32 0, i32 33
  %7000 = getelementptr inbounds %struct.Reg, %struct.Reg* %6999, i32 0, i32 0
  %PC.i1475 = bitcast %union.anon* %7000 to i64*
  %7001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7002 = getelementptr inbounds %struct.GPR, %struct.GPR* %7001, i32 0, i32 1
  %7003 = getelementptr inbounds %struct.Reg, %struct.Reg* %7002, i32 0, i32 0
  %EAX.i1476 = bitcast %union.anon* %7003 to i32*
  %7004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7005 = getelementptr inbounds %struct.GPR, %struct.GPR* %7004, i32 0, i32 15
  %7006 = getelementptr inbounds %struct.Reg, %struct.Reg* %7005, i32 0, i32 0
  %RBP.i1477 = bitcast %union.anon* %7006 to i64*
  %7007 = load i64, i64* %RBP.i1477
  %7008 = sub i64 %7007, 420
  %7009 = load i32, i32* %EAX.i1476
  %7010 = zext i32 %7009 to i64
  %7011 = load i64, i64* %PC.i1475
  %7012 = add i64 %7011, 6
  store i64 %7012, i64* %PC.i1475
  %7013 = inttoptr i64 %7008 to i32*
  store i32 %7009, i32* %7013
  store %struct.Memory* %loadMem_43a99f, %struct.Memory** %MEMORY
  %loadMem_43a9a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7015 = getelementptr inbounds %struct.GPR, %struct.GPR* %7014, i32 0, i32 33
  %7016 = getelementptr inbounds %struct.Reg, %struct.Reg* %7015, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %7016 to i64*
  %7017 = load i64, i64* %PC.i1474
  %7018 = add i64 %7017, 66
  %7019 = load i64, i64* %PC.i1474
  %7020 = add i64 %7019, 5
  store i64 %7020, i64* %PC.i1474
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7018, i64* %7021, align 8
  store %struct.Memory* %loadMem_43a9a5, %struct.Memory** %MEMORY
  br label %block_.L_43a9e7

block_.L_43a9aa:                                  ; preds = %block_.L_43a97f
  %loadMem_43a9aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7023 = getelementptr inbounds %struct.GPR, %struct.GPR* %7022, i32 0, i32 33
  %7024 = getelementptr inbounds %struct.Reg, %struct.Reg* %7023, i32 0, i32 0
  %PC.i1471 = bitcast %union.anon* %7024 to i64*
  %7025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7026 = getelementptr inbounds %struct.GPR, %struct.GPR* %7025, i32 0, i32 1
  %7027 = getelementptr inbounds %struct.Reg, %struct.Reg* %7026, i32 0, i32 0
  %RAX.i1472 = bitcast %union.anon* %7027 to i64*
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7029 = getelementptr inbounds %struct.GPR, %struct.GPR* %7028, i32 0, i32 15
  %7030 = getelementptr inbounds %struct.Reg, %struct.Reg* %7029, i32 0, i32 0
  %RBP.i1473 = bitcast %union.anon* %7030 to i64*
  %7031 = load i64, i64* %RBP.i1473
  %7032 = sub i64 %7031, 212
  %7033 = load i64, i64* %PC.i1471
  %7034 = add i64 %7033, 6
  store i64 %7034, i64* %PC.i1471
  %7035 = inttoptr i64 %7032 to i32*
  %7036 = load i32, i32* %7035
  %7037 = zext i32 %7036 to i64
  store i64 %7037, i64* %RAX.i1472, align 8
  store %struct.Memory* %loadMem_43a9aa, %struct.Memory** %MEMORY
  %loadMem_43a9b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7039 = getelementptr inbounds %struct.GPR, %struct.GPR* %7038, i32 0, i32 33
  %7040 = getelementptr inbounds %struct.Reg, %struct.Reg* %7039, i32 0, i32 0
  %PC.i1468 = bitcast %union.anon* %7040 to i64*
  %7041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7042 = getelementptr inbounds %struct.GPR, %struct.GPR* %7041, i32 0, i32 1
  %7043 = getelementptr inbounds %struct.Reg, %struct.Reg* %7042, i32 0, i32 0
  %RAX.i1469 = bitcast %union.anon* %7043 to i64*
  %7044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7045 = getelementptr inbounds %struct.GPR, %struct.GPR* %7044, i32 0, i32 15
  %7046 = getelementptr inbounds %struct.Reg, %struct.Reg* %7045, i32 0, i32 0
  %RBP.i1470 = bitcast %union.anon* %7046 to i64*
  %7047 = load i64, i64* %RAX.i1469
  %7048 = load i64, i64* %RBP.i1470
  %7049 = sub i64 %7048, 52
  %7050 = load i64, i64* %PC.i1468
  %7051 = add i64 %7050, 3
  store i64 %7051, i64* %PC.i1468
  %7052 = trunc i64 %7047 to i32
  %7053 = inttoptr i64 %7049 to i32*
  %7054 = load i32, i32* %7053
  %7055 = add i32 %7054, %7052
  %7056 = zext i32 %7055 to i64
  store i64 %7056, i64* %RAX.i1469, align 8
  %7057 = icmp ult i32 %7055, %7052
  %7058 = icmp ult i32 %7055, %7054
  %7059 = or i1 %7057, %7058
  %7060 = zext i1 %7059 to i8
  %7061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7060, i8* %7061, align 1
  %7062 = and i32 %7055, 255
  %7063 = call i32 @llvm.ctpop.i32(i32 %7062)
  %7064 = trunc i32 %7063 to i8
  %7065 = and i8 %7064, 1
  %7066 = xor i8 %7065, 1
  %7067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7066, i8* %7067, align 1
  %7068 = xor i32 %7054, %7052
  %7069 = xor i32 %7068, %7055
  %7070 = lshr i32 %7069, 4
  %7071 = trunc i32 %7070 to i8
  %7072 = and i8 %7071, 1
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7072, i8* %7073, align 1
  %7074 = icmp eq i32 %7055, 0
  %7075 = zext i1 %7074 to i8
  %7076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7075, i8* %7076, align 1
  %7077 = lshr i32 %7055, 31
  %7078 = trunc i32 %7077 to i8
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7078, i8* %7079, align 1
  %7080 = lshr i32 %7052, 31
  %7081 = lshr i32 %7054, 31
  %7082 = xor i32 %7077, %7080
  %7083 = xor i32 %7077, %7081
  %7084 = add i32 %7082, %7083
  %7085 = icmp eq i32 %7084, 2
  %7086 = zext i1 %7085 to i8
  %7087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7086, i8* %7087, align 1
  store %struct.Memory* %loadMem_43a9b0, %struct.Memory** %MEMORY
  %loadMem_43a9b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7089 = getelementptr inbounds %struct.GPR, %struct.GPR* %7088, i32 0, i32 33
  %7090 = getelementptr inbounds %struct.Reg, %struct.Reg* %7089, i32 0, i32 0
  %PC.i1466 = bitcast %union.anon* %7090 to i64*
  %7091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7092 = getelementptr inbounds %struct.GPR, %struct.GPR* %7091, i32 0, i32 1
  %7093 = getelementptr inbounds %struct.Reg, %struct.Reg* %7092, i32 0, i32 0
  %EAX.i1467 = bitcast %union.anon* %7093 to i32*
  %7094 = load i32, i32* %EAX.i1467
  %7095 = zext i32 %7094 to i64
  %7096 = load i64, i64* %PC.i1466
  %7097 = add i64 %7096, 3
  store i64 %7097, i64* %PC.i1466
  %7098 = sub i32 %7094, 51
  %7099 = icmp ult i32 %7094, 51
  %7100 = zext i1 %7099 to i8
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7100, i8* %7101, align 1
  %7102 = and i32 %7098, 255
  %7103 = call i32 @llvm.ctpop.i32(i32 %7102)
  %7104 = trunc i32 %7103 to i8
  %7105 = and i8 %7104, 1
  %7106 = xor i8 %7105, 1
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7106, i8* %7107, align 1
  %7108 = xor i64 51, %7095
  %7109 = trunc i64 %7108 to i32
  %7110 = xor i32 %7109, %7098
  %7111 = lshr i32 %7110, 4
  %7112 = trunc i32 %7111 to i8
  %7113 = and i8 %7112, 1
  %7114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7113, i8* %7114, align 1
  %7115 = icmp eq i32 %7098, 0
  %7116 = zext i1 %7115 to i8
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7116, i8* %7117, align 1
  %7118 = lshr i32 %7098, 31
  %7119 = trunc i32 %7118 to i8
  %7120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7119, i8* %7120, align 1
  %7121 = lshr i32 %7094, 31
  %7122 = xor i32 %7118, %7121
  %7123 = add i32 %7122, %7121
  %7124 = icmp eq i32 %7123, 2
  %7125 = zext i1 %7124 to i8
  %7126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7125, i8* %7126, align 1
  store %struct.Memory* %loadMem_43a9b3, %struct.Memory** %MEMORY
  %loadMem_43a9b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7128 = getelementptr inbounds %struct.GPR, %struct.GPR* %7127, i32 0, i32 33
  %7129 = getelementptr inbounds %struct.Reg, %struct.Reg* %7128, i32 0, i32 0
  %PC.i1465 = bitcast %union.anon* %7129 to i64*
  %7130 = load i64, i64* %PC.i1465
  %7131 = add i64 %7130, 22
  %7132 = load i64, i64* %PC.i1465
  %7133 = add i64 %7132, 6
  %7134 = load i64, i64* %PC.i1465
  %7135 = add i64 %7134, 6
  store i64 %7135, i64* %PC.i1465
  %7136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7137 = load i8, i8* %7136, align 1
  %7138 = icmp ne i8 %7137, 0
  %7139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7140 = load i8, i8* %7139, align 1
  %7141 = icmp ne i8 %7140, 0
  %7142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7143 = load i8, i8* %7142, align 1
  %7144 = icmp ne i8 %7143, 0
  %7145 = xor i1 %7141, %7144
  %7146 = or i1 %7138, %7145
  %7147 = zext i1 %7146 to i8
  store i8 %7147, i8* %BRANCH_TAKEN, align 1
  %7148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7149 = select i1 %7146, i64 %7131, i64 %7133
  store i64 %7149, i64* %7148, align 8
  store %struct.Memory* %loadMem_43a9b6, %struct.Memory** %MEMORY
  %loadBr_43a9b6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a9b6 = icmp eq i8 %loadBr_43a9b6, 1
  br i1 %cmpBr_43a9b6, label %block_.L_43a9cc, label %block_43a9bc

block_43a9bc:                                     ; preds = %block_.L_43a9aa
  %loadMem_43a9bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7151 = getelementptr inbounds %struct.GPR, %struct.GPR* %7150, i32 0, i32 33
  %7152 = getelementptr inbounds %struct.Reg, %struct.Reg* %7151, i32 0, i32 0
  %PC.i1463 = bitcast %union.anon* %7152 to i64*
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7154 = getelementptr inbounds %struct.GPR, %struct.GPR* %7153, i32 0, i32 1
  %7155 = getelementptr inbounds %struct.Reg, %struct.Reg* %7154, i32 0, i32 0
  %RAX.i1464 = bitcast %union.anon* %7155 to i64*
  %7156 = load i64, i64* %PC.i1463
  %7157 = add i64 %7156, 5
  store i64 %7157, i64* %PC.i1463
  store i64 51, i64* %RAX.i1464, align 8
  store %struct.Memory* %loadMem_43a9bc, %struct.Memory** %MEMORY
  %loadMem_43a9c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7159 = getelementptr inbounds %struct.GPR, %struct.GPR* %7158, i32 0, i32 33
  %7160 = getelementptr inbounds %struct.Reg, %struct.Reg* %7159, i32 0, i32 0
  %PC.i1460 = bitcast %union.anon* %7160 to i64*
  %7161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7162 = getelementptr inbounds %struct.GPR, %struct.GPR* %7161, i32 0, i32 1
  %7163 = getelementptr inbounds %struct.Reg, %struct.Reg* %7162, i32 0, i32 0
  %EAX.i1461 = bitcast %union.anon* %7163 to i32*
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7165 = getelementptr inbounds %struct.GPR, %struct.GPR* %7164, i32 0, i32 15
  %7166 = getelementptr inbounds %struct.Reg, %struct.Reg* %7165, i32 0, i32 0
  %RBP.i1462 = bitcast %union.anon* %7166 to i64*
  %7167 = load i64, i64* %RBP.i1462
  %7168 = sub i64 %7167, 424
  %7169 = load i32, i32* %EAX.i1461
  %7170 = zext i32 %7169 to i64
  %7171 = load i64, i64* %PC.i1460
  %7172 = add i64 %7171, 6
  store i64 %7172, i64* %PC.i1460
  %7173 = inttoptr i64 %7168 to i32*
  store i32 %7169, i32* %7173
  store %struct.Memory* %loadMem_43a9c1, %struct.Memory** %MEMORY
  %loadMem_43a9c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7175 = getelementptr inbounds %struct.GPR, %struct.GPR* %7174, i32 0, i32 33
  %7176 = getelementptr inbounds %struct.Reg, %struct.Reg* %7175, i32 0, i32 0
  %PC.i1459 = bitcast %union.anon* %7176 to i64*
  %7177 = load i64, i64* %PC.i1459
  %7178 = add i64 %7177, 20
  %7179 = load i64, i64* %PC.i1459
  %7180 = add i64 %7179, 5
  store i64 %7180, i64* %PC.i1459
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7178, i64* %7181, align 8
  store %struct.Memory* %loadMem_43a9c7, %struct.Memory** %MEMORY
  br label %block_.L_43a9db

block_.L_43a9cc:                                  ; preds = %block_.L_43a9aa
  %loadMem_43a9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7183 = getelementptr inbounds %struct.GPR, %struct.GPR* %7182, i32 0, i32 33
  %7184 = getelementptr inbounds %struct.Reg, %struct.Reg* %7183, i32 0, i32 0
  %PC.i1456 = bitcast %union.anon* %7184 to i64*
  %7185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7186 = getelementptr inbounds %struct.GPR, %struct.GPR* %7185, i32 0, i32 1
  %7187 = getelementptr inbounds %struct.Reg, %struct.Reg* %7186, i32 0, i32 0
  %RAX.i1457 = bitcast %union.anon* %7187 to i64*
  %7188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7189 = getelementptr inbounds %struct.GPR, %struct.GPR* %7188, i32 0, i32 15
  %7190 = getelementptr inbounds %struct.Reg, %struct.Reg* %7189, i32 0, i32 0
  %RBP.i1458 = bitcast %union.anon* %7190 to i64*
  %7191 = load i64, i64* %RBP.i1458
  %7192 = sub i64 %7191, 212
  %7193 = load i64, i64* %PC.i1456
  %7194 = add i64 %7193, 6
  store i64 %7194, i64* %PC.i1456
  %7195 = inttoptr i64 %7192 to i32*
  %7196 = load i32, i32* %7195
  %7197 = zext i32 %7196 to i64
  store i64 %7197, i64* %RAX.i1457, align 8
  store %struct.Memory* %loadMem_43a9cc, %struct.Memory** %MEMORY
  %loadMem_43a9d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7199 = getelementptr inbounds %struct.GPR, %struct.GPR* %7198, i32 0, i32 33
  %7200 = getelementptr inbounds %struct.Reg, %struct.Reg* %7199, i32 0, i32 0
  %PC.i1453 = bitcast %union.anon* %7200 to i64*
  %7201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7202 = getelementptr inbounds %struct.GPR, %struct.GPR* %7201, i32 0, i32 1
  %7203 = getelementptr inbounds %struct.Reg, %struct.Reg* %7202, i32 0, i32 0
  %RAX.i1454 = bitcast %union.anon* %7203 to i64*
  %7204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7205 = getelementptr inbounds %struct.GPR, %struct.GPR* %7204, i32 0, i32 15
  %7206 = getelementptr inbounds %struct.Reg, %struct.Reg* %7205, i32 0, i32 0
  %RBP.i1455 = bitcast %union.anon* %7206 to i64*
  %7207 = load i64, i64* %RAX.i1454
  %7208 = load i64, i64* %RBP.i1455
  %7209 = sub i64 %7208, 52
  %7210 = load i64, i64* %PC.i1453
  %7211 = add i64 %7210, 3
  store i64 %7211, i64* %PC.i1453
  %7212 = trunc i64 %7207 to i32
  %7213 = inttoptr i64 %7209 to i32*
  %7214 = load i32, i32* %7213
  %7215 = add i32 %7214, %7212
  %7216 = zext i32 %7215 to i64
  store i64 %7216, i64* %RAX.i1454, align 8
  %7217 = icmp ult i32 %7215, %7212
  %7218 = icmp ult i32 %7215, %7214
  %7219 = or i1 %7217, %7218
  %7220 = zext i1 %7219 to i8
  %7221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7220, i8* %7221, align 1
  %7222 = and i32 %7215, 255
  %7223 = call i32 @llvm.ctpop.i32(i32 %7222)
  %7224 = trunc i32 %7223 to i8
  %7225 = and i8 %7224, 1
  %7226 = xor i8 %7225, 1
  %7227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7226, i8* %7227, align 1
  %7228 = xor i32 %7214, %7212
  %7229 = xor i32 %7228, %7215
  %7230 = lshr i32 %7229, 4
  %7231 = trunc i32 %7230 to i8
  %7232 = and i8 %7231, 1
  %7233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7232, i8* %7233, align 1
  %7234 = icmp eq i32 %7215, 0
  %7235 = zext i1 %7234 to i8
  %7236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7235, i8* %7236, align 1
  %7237 = lshr i32 %7215, 31
  %7238 = trunc i32 %7237 to i8
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7238, i8* %7239, align 1
  %7240 = lshr i32 %7212, 31
  %7241 = lshr i32 %7214, 31
  %7242 = xor i32 %7237, %7240
  %7243 = xor i32 %7237, %7241
  %7244 = add i32 %7242, %7243
  %7245 = icmp eq i32 %7244, 2
  %7246 = zext i1 %7245 to i8
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7246, i8* %7247, align 1
  store %struct.Memory* %loadMem_43a9d2, %struct.Memory** %MEMORY
  %loadMem_43a9d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7249 = getelementptr inbounds %struct.GPR, %struct.GPR* %7248, i32 0, i32 33
  %7250 = getelementptr inbounds %struct.Reg, %struct.Reg* %7249, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %7250 to i64*
  %7251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7252 = getelementptr inbounds %struct.GPR, %struct.GPR* %7251, i32 0, i32 1
  %7253 = getelementptr inbounds %struct.Reg, %struct.Reg* %7252, i32 0, i32 0
  %EAX.i1451 = bitcast %union.anon* %7253 to i32*
  %7254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7255 = getelementptr inbounds %struct.GPR, %struct.GPR* %7254, i32 0, i32 15
  %7256 = getelementptr inbounds %struct.Reg, %struct.Reg* %7255, i32 0, i32 0
  %RBP.i1452 = bitcast %union.anon* %7256 to i64*
  %7257 = load i64, i64* %RBP.i1452
  %7258 = sub i64 %7257, 424
  %7259 = load i32, i32* %EAX.i1451
  %7260 = zext i32 %7259 to i64
  %7261 = load i64, i64* %PC.i1450
  %7262 = add i64 %7261, 6
  store i64 %7262, i64* %PC.i1450
  %7263 = inttoptr i64 %7258 to i32*
  store i32 %7259, i32* %7263
  store %struct.Memory* %loadMem_43a9d5, %struct.Memory** %MEMORY
  br label %block_.L_43a9db

block_.L_43a9db:                                  ; preds = %block_.L_43a9cc, %block_43a9bc
  %loadMem_43a9db = load %struct.Memory*, %struct.Memory** %MEMORY
  %7264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7265 = getelementptr inbounds %struct.GPR, %struct.GPR* %7264, i32 0, i32 33
  %7266 = getelementptr inbounds %struct.Reg, %struct.Reg* %7265, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %7266 to i64*
  %7267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7268 = getelementptr inbounds %struct.GPR, %struct.GPR* %7267, i32 0, i32 1
  %7269 = getelementptr inbounds %struct.Reg, %struct.Reg* %7268, i32 0, i32 0
  %RAX.i1448 = bitcast %union.anon* %7269 to i64*
  %7270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7271 = getelementptr inbounds %struct.GPR, %struct.GPR* %7270, i32 0, i32 15
  %7272 = getelementptr inbounds %struct.Reg, %struct.Reg* %7271, i32 0, i32 0
  %RBP.i1449 = bitcast %union.anon* %7272 to i64*
  %7273 = load i64, i64* %RBP.i1449
  %7274 = sub i64 %7273, 424
  %7275 = load i64, i64* %PC.i1447
  %7276 = add i64 %7275, 6
  store i64 %7276, i64* %PC.i1447
  %7277 = inttoptr i64 %7274 to i32*
  %7278 = load i32, i32* %7277
  %7279 = zext i32 %7278 to i64
  store i64 %7279, i64* %RAX.i1448, align 8
  store %struct.Memory* %loadMem_43a9db, %struct.Memory** %MEMORY
  %loadMem_43a9e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7281 = getelementptr inbounds %struct.GPR, %struct.GPR* %7280, i32 0, i32 33
  %7282 = getelementptr inbounds %struct.Reg, %struct.Reg* %7281, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %7282 to i64*
  %7283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7284 = getelementptr inbounds %struct.GPR, %struct.GPR* %7283, i32 0, i32 1
  %7285 = getelementptr inbounds %struct.Reg, %struct.Reg* %7284, i32 0, i32 0
  %EAX.i1445 = bitcast %union.anon* %7285 to i32*
  %7286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7287 = getelementptr inbounds %struct.GPR, %struct.GPR* %7286, i32 0, i32 15
  %7288 = getelementptr inbounds %struct.Reg, %struct.Reg* %7287, i32 0, i32 0
  %RBP.i1446 = bitcast %union.anon* %7288 to i64*
  %7289 = load i64, i64* %RBP.i1446
  %7290 = sub i64 %7289, 420
  %7291 = load i32, i32* %EAX.i1445
  %7292 = zext i32 %7291 to i64
  %7293 = load i64, i64* %PC.i1444
  %7294 = add i64 %7293, 6
  store i64 %7294, i64* %PC.i1444
  %7295 = inttoptr i64 %7290 to i32*
  store i32 %7291, i32* %7295
  store %struct.Memory* %loadMem_43a9e1, %struct.Memory** %MEMORY
  br label %block_.L_43a9e7

block_.L_43a9e7:                                  ; preds = %block_.L_43a9db, %block_43a99d
  %loadMem_43a9e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7297 = getelementptr inbounds %struct.GPR, %struct.GPR* %7296, i32 0, i32 33
  %7298 = getelementptr inbounds %struct.Reg, %struct.Reg* %7297, i32 0, i32 0
  %PC.i1441 = bitcast %union.anon* %7298 to i64*
  %7299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7300 = getelementptr inbounds %struct.GPR, %struct.GPR* %7299, i32 0, i32 1
  %7301 = getelementptr inbounds %struct.Reg, %struct.Reg* %7300, i32 0, i32 0
  %RAX.i1442 = bitcast %union.anon* %7301 to i64*
  %7302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7303 = getelementptr inbounds %struct.GPR, %struct.GPR* %7302, i32 0, i32 15
  %7304 = getelementptr inbounds %struct.Reg, %struct.Reg* %7303, i32 0, i32 0
  %RBP.i1443 = bitcast %union.anon* %7304 to i64*
  %7305 = load i64, i64* %RBP.i1443
  %7306 = sub i64 %7305, 420
  %7307 = load i64, i64* %PC.i1441
  %7308 = add i64 %7307, 6
  store i64 %7308, i64* %PC.i1441
  %7309 = inttoptr i64 %7306 to i32*
  %7310 = load i32, i32* %7309
  %7311 = zext i32 %7310 to i64
  store i64 %7311, i64* %RAX.i1442, align 8
  store %struct.Memory* %loadMem_43a9e7, %struct.Memory** %MEMORY
  %loadMem_43a9ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %7312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7313 = getelementptr inbounds %struct.GPR, %struct.GPR* %7312, i32 0, i32 33
  %7314 = getelementptr inbounds %struct.Reg, %struct.Reg* %7313, i32 0, i32 0
  %PC.i1438 = bitcast %union.anon* %7314 to i64*
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7316 = getelementptr inbounds %struct.GPR, %struct.GPR* %7315, i32 0, i32 5
  %7317 = getelementptr inbounds %struct.Reg, %struct.Reg* %7316, i32 0, i32 0
  %ECX.i1439 = bitcast %union.anon* %7317 to i32*
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7319 = getelementptr inbounds %struct.GPR, %struct.GPR* %7318, i32 0, i32 5
  %7320 = getelementptr inbounds %struct.Reg, %struct.Reg* %7319, i32 0, i32 0
  %RCX.i1440 = bitcast %union.anon* %7320 to i64*
  %7321 = load i64, i64* %RCX.i1440
  %7322 = load i32, i32* %ECX.i1439
  %7323 = zext i32 %7322 to i64
  %7324 = load i64, i64* %PC.i1438
  %7325 = add i64 %7324, 2
  store i64 %7325, i64* %PC.i1438
  %7326 = xor i64 %7323, %7321
  %7327 = trunc i64 %7326 to i32
  %7328 = and i64 %7326, 4294967295
  store i64 %7328, i64* %RCX.i1440, align 8
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7329, align 1
  %7330 = and i32 %7327, 255
  %7331 = call i32 @llvm.ctpop.i32(i32 %7330)
  %7332 = trunc i32 %7331 to i8
  %7333 = and i8 %7332, 1
  %7334 = xor i8 %7333, 1
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7334, i8* %7335, align 1
  %7336 = icmp eq i32 %7327, 0
  %7337 = zext i1 %7336 to i8
  %7338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7337, i8* %7338, align 1
  %7339 = lshr i32 %7327, 31
  %7340 = trunc i32 %7339 to i8
  %7341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7340, i8* %7341, align 1
  %7342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7342, align 1
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7343, align 1
  store %struct.Memory* %loadMem_43a9ed, %struct.Memory** %MEMORY
  %loadMem_43a9ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7345 = getelementptr inbounds %struct.GPR, %struct.GPR* %7344, i32 0, i32 33
  %7346 = getelementptr inbounds %struct.Reg, %struct.Reg* %7345, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %7346 to i64*
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7348 = getelementptr inbounds %struct.GPR, %struct.GPR* %7347, i32 0, i32 7
  %7349 = getelementptr inbounds %struct.Reg, %struct.Reg* %7348, i32 0, i32 0
  %RDX.i1437 = bitcast %union.anon* %7349 to i64*
  %7350 = load i64, i64* %PC.i1436
  %7351 = add i64 %7350, 10
  store i64 %7351, i64* %PC.i1436
  store i64 ptrtoint (%G__0x6cb9c0_type* @G__0x6cb9c0 to i64), i64* %RDX.i1437, align 8
  store %struct.Memory* %loadMem_43a9ef, %struct.Memory** %MEMORY
  %loadMem_43a9f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7353 = getelementptr inbounds %struct.GPR, %struct.GPR* %7352, i32 0, i32 33
  %7354 = getelementptr inbounds %struct.Reg, %struct.Reg* %7353, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %7354 to i64*
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 1
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %EAX.i1434 = bitcast %union.anon* %7357 to i32*
  %7358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7359 = getelementptr inbounds %struct.GPR, %struct.GPR* %7358, i32 0, i32 15
  %7360 = getelementptr inbounds %struct.Reg, %struct.Reg* %7359, i32 0, i32 0
  %RBP.i1435 = bitcast %union.anon* %7360 to i64*
  %7361 = load i64, i64* %RBP.i1435
  %7362 = sub i64 %7361, 180
  %7363 = load i32, i32* %EAX.i1434
  %7364 = zext i32 %7363 to i64
  %7365 = load i64, i64* %PC.i1433
  %7366 = add i64 %7365, 6
  store i64 %7366, i64* %PC.i1433
  %7367 = inttoptr i64 %7362 to i32*
  store i32 %7363, i32* %7367
  store %struct.Memory* %loadMem_43a9f9, %struct.Memory** %MEMORY
  %loadMem_43a9ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7369 = getelementptr inbounds %struct.GPR, %struct.GPR* %7368, i32 0, i32 33
  %7370 = getelementptr inbounds %struct.Reg, %struct.Reg* %7369, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %7370 to i64*
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7372 = getelementptr inbounds %struct.GPR, %struct.GPR* %7371, i32 0, i32 9
  %7373 = getelementptr inbounds %struct.Reg, %struct.Reg* %7372, i32 0, i32 0
  %RSI.i1431 = bitcast %union.anon* %7373 to i64*
  %7374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7375 = getelementptr inbounds %struct.GPR, %struct.GPR* %7374, i32 0, i32 15
  %7376 = getelementptr inbounds %struct.Reg, %struct.Reg* %7375, i32 0, i32 0
  %RBP.i1432 = bitcast %union.anon* %7376 to i64*
  %7377 = load i64, i64* %RBP.i1432
  %7378 = sub i64 %7377, 176
  %7379 = load i64, i64* %PC.i1430
  %7380 = add i64 %7379, 7
  store i64 %7380, i64* %PC.i1430
  %7381 = inttoptr i64 %7378 to i32*
  %7382 = load i32, i32* %7381
  %7383 = sext i32 %7382 to i64
  store i64 %7383, i64* %RSI.i1431, align 8
  store %struct.Memory* %loadMem_43a9ff, %struct.Memory** %MEMORY
  %loadMem_43aa06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7385 = getelementptr inbounds %struct.GPR, %struct.GPR* %7384, i32 0, i32 33
  %7386 = getelementptr inbounds %struct.Reg, %struct.Reg* %7385, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %7386 to i64*
  %7387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7388 = getelementptr inbounds %struct.GPR, %struct.GPR* %7387, i32 0, i32 1
  %7389 = getelementptr inbounds %struct.Reg, %struct.Reg* %7388, i32 0, i32 0
  %RAX.i1428 = bitcast %union.anon* %7389 to i64*
  %7390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7391 = getelementptr inbounds %struct.GPR, %struct.GPR* %7390, i32 0, i32 9
  %7392 = getelementptr inbounds %struct.Reg, %struct.Reg* %7391, i32 0, i32 0
  %RSI.i1429 = bitcast %union.anon* %7392 to i64*
  %7393 = load i64, i64* %RSI.i1429
  %7394 = add i64 %7393, 7125312
  %7395 = load i64, i64* %PC.i1427
  %7396 = add i64 %7395, 8
  store i64 %7396, i64* %PC.i1427
  %7397 = inttoptr i64 %7394 to i8*
  %7398 = load i8, i8* %7397
  %7399 = zext i8 %7398 to i64
  store i64 %7399, i64* %RAX.i1428, align 8
  store %struct.Memory* %loadMem_43aa06, %struct.Memory** %MEMORY
  %loadMem_43aa0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 33
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %PC.i1424 = bitcast %union.anon* %7402 to i64*
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7404 = getelementptr inbounds %struct.GPR, %struct.GPR* %7403, i32 0, i32 1
  %7405 = getelementptr inbounds %struct.Reg, %struct.Reg* %7404, i32 0, i32 0
  %RAX.i1425 = bitcast %union.anon* %7405 to i64*
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7407 = getelementptr inbounds %struct.GPR, %struct.GPR* %7406, i32 0, i32 15
  %7408 = getelementptr inbounds %struct.Reg, %struct.Reg* %7407, i32 0, i32 0
  %RBP.i1426 = bitcast %union.anon* %7408 to i64*
  %7409 = load i64, i64* %RAX.i1425
  %7410 = load i64, i64* %RBP.i1426
  %7411 = sub i64 %7410, 300
  %7412 = load i64, i64* %PC.i1424
  %7413 = add i64 %7412, 7
  store i64 %7413, i64* %PC.i1424
  %7414 = inttoptr i64 %7411 to i32*
  %7415 = load i32, i32* %7414
  %7416 = shl i64 %7409, 32
  %7417 = ashr exact i64 %7416, 32
  %7418 = sext i32 %7415 to i64
  %7419 = mul i64 %7418, %7417
  %7420 = trunc i64 %7419 to i32
  %7421 = and i64 %7419, 4294967295
  store i64 %7421, i64* %RAX.i1425, align 8
  %7422 = shl i64 %7419, 32
  %7423 = ashr exact i64 %7422, 32
  %7424 = icmp ne i64 %7423, %7419
  %7425 = zext i1 %7424 to i8
  %7426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7425, i8* %7426, align 1
  %7427 = and i32 %7420, 255
  %7428 = call i32 @llvm.ctpop.i32(i32 %7427)
  %7429 = trunc i32 %7428 to i8
  %7430 = and i8 %7429, 1
  %7431 = xor i8 %7430, 1
  %7432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7431, i8* %7432, align 1
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7433, align 1
  %7434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7434, align 1
  %7435 = lshr i32 %7420, 31
  %7436 = trunc i32 %7435 to i8
  %7437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7436, i8* %7437, align 1
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7425, i8* %7438, align 1
  store %struct.Memory* %loadMem_43aa0e, %struct.Memory** %MEMORY
  %loadMem_43aa15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7440 = getelementptr inbounds %struct.GPR, %struct.GPR* %7439, i32 0, i32 33
  %7441 = getelementptr inbounds %struct.Reg, %struct.Reg* %7440, i32 0, i32 0
  %PC.i1421 = bitcast %union.anon* %7441 to i64*
  %7442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7443 = getelementptr inbounds %struct.GPR, %struct.GPR* %7442, i32 0, i32 1
  %7444 = getelementptr inbounds %struct.Reg, %struct.Reg* %7443, i32 0, i32 0
  %EAX.i1422 = bitcast %union.anon* %7444 to i32*
  %7445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7446 = getelementptr inbounds %struct.GPR, %struct.GPR* %7445, i32 0, i32 15
  %7447 = getelementptr inbounds %struct.Reg, %struct.Reg* %7446, i32 0, i32 0
  %RBP.i1423 = bitcast %union.anon* %7447 to i64*
  %7448 = load i64, i64* %RBP.i1423
  %7449 = sub i64 %7448, 156
  %7450 = load i32, i32* %EAX.i1422
  %7451 = zext i32 %7450 to i64
  %7452 = load i64, i64* %PC.i1421
  %7453 = add i64 %7452, 6
  store i64 %7453, i64* %PC.i1421
  %7454 = inttoptr i64 %7449 to i32*
  store i32 %7450, i32* %7454
  store %struct.Memory* %loadMem_43aa15, %struct.Memory** %MEMORY
  %loadMem_43aa1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7456 = getelementptr inbounds %struct.GPR, %struct.GPR* %7455, i32 0, i32 33
  %7457 = getelementptr inbounds %struct.Reg, %struct.Reg* %7456, i32 0, i32 0
  %PC.i1418 = bitcast %union.anon* %7457 to i64*
  %7458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7459 = getelementptr inbounds %struct.GPR, %struct.GPR* %7458, i32 0, i32 9
  %7460 = getelementptr inbounds %struct.Reg, %struct.Reg* %7459, i32 0, i32 0
  %RSI.i1419 = bitcast %union.anon* %7460 to i64*
  %7461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7462 = getelementptr inbounds %struct.GPR, %struct.GPR* %7461, i32 0, i32 15
  %7463 = getelementptr inbounds %struct.Reg, %struct.Reg* %7462, i32 0, i32 0
  %RBP.i1420 = bitcast %union.anon* %7463 to i64*
  %7464 = load i64, i64* %RBP.i1420
  %7465 = sub i64 %7464, 180
  %7466 = load i64, i64* %PC.i1418
  %7467 = add i64 %7466, 7
  store i64 %7467, i64* %PC.i1418
  %7468 = inttoptr i64 %7465 to i32*
  %7469 = load i32, i32* %7468
  %7470 = sext i32 %7469 to i64
  store i64 %7470, i64* %RSI.i1419, align 8
  store %struct.Memory* %loadMem_43aa1b, %struct.Memory** %MEMORY
  %loadMem_43aa22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7472 = getelementptr inbounds %struct.GPR, %struct.GPR* %7471, i32 0, i32 33
  %7473 = getelementptr inbounds %struct.Reg, %struct.Reg* %7472, i32 0, i32 0
  %PC.i1415 = bitcast %union.anon* %7473 to i64*
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7475 = getelementptr inbounds %struct.GPR, %struct.GPR* %7474, i32 0, i32 1
  %7476 = getelementptr inbounds %struct.Reg, %struct.Reg* %7475, i32 0, i32 0
  %RAX.i1416 = bitcast %union.anon* %7476 to i64*
  %7477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7478 = getelementptr inbounds %struct.GPR, %struct.GPR* %7477, i32 0, i32 9
  %7479 = getelementptr inbounds %struct.Reg, %struct.Reg* %7478, i32 0, i32 0
  %RSI.i1417 = bitcast %union.anon* %7479 to i64*
  %7480 = load i64, i64* %RSI.i1417
  %7481 = add i64 %7480, 7125376
  %7482 = load i64, i64* %PC.i1415
  %7483 = add i64 %7482, 8
  store i64 %7483, i64* %PC.i1415
  %7484 = inttoptr i64 %7481 to i8*
  %7485 = load i8, i8* %7484
  %7486 = zext i8 %7485 to i64
  store i64 %7486, i64* %RAX.i1416, align 8
  store %struct.Memory* %loadMem_43aa22, %struct.Memory** %MEMORY
  %loadMem_43aa2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7488 = getelementptr inbounds %struct.GPR, %struct.GPR* %7487, i32 0, i32 33
  %7489 = getelementptr inbounds %struct.Reg, %struct.Reg* %7488, i32 0, i32 0
  %PC.i1412 = bitcast %union.anon* %7489 to i64*
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7491 = getelementptr inbounds %struct.GPR, %struct.GPR* %7490, i32 0, i32 1
  %7492 = getelementptr inbounds %struct.Reg, %struct.Reg* %7491, i32 0, i32 0
  %RAX.i1413 = bitcast %union.anon* %7492 to i64*
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7494 = getelementptr inbounds %struct.GPR, %struct.GPR* %7493, i32 0, i32 15
  %7495 = getelementptr inbounds %struct.Reg, %struct.Reg* %7494, i32 0, i32 0
  %RBP.i1414 = bitcast %union.anon* %7495 to i64*
  %7496 = load i64, i64* %RAX.i1413
  %7497 = load i64, i64* %RBP.i1414
  %7498 = sub i64 %7497, 300
  %7499 = load i64, i64* %PC.i1412
  %7500 = add i64 %7499, 7
  store i64 %7500, i64* %PC.i1412
  %7501 = inttoptr i64 %7498 to i32*
  %7502 = load i32, i32* %7501
  %7503 = shl i64 %7496, 32
  %7504 = ashr exact i64 %7503, 32
  %7505 = sext i32 %7502 to i64
  %7506 = mul i64 %7505, %7504
  %7507 = trunc i64 %7506 to i32
  %7508 = and i64 %7506, 4294967295
  store i64 %7508, i64* %RAX.i1413, align 8
  %7509 = shl i64 %7506, 32
  %7510 = ashr exact i64 %7509, 32
  %7511 = icmp ne i64 %7510, %7506
  %7512 = zext i1 %7511 to i8
  %7513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7512, i8* %7513, align 1
  %7514 = and i32 %7507, 255
  %7515 = call i32 @llvm.ctpop.i32(i32 %7514)
  %7516 = trunc i32 %7515 to i8
  %7517 = and i8 %7516, 1
  %7518 = xor i8 %7517, 1
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7518, i8* %7519, align 1
  %7520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7520, align 1
  %7521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7521, align 1
  %7522 = lshr i32 %7507, 31
  %7523 = trunc i32 %7522 to i8
  %7524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7523, i8* %7524, align 1
  %7525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7512, i8* %7525, align 1
  store %struct.Memory* %loadMem_43aa2a, %struct.Memory** %MEMORY
  %loadMem_43aa31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7527 = getelementptr inbounds %struct.GPR, %struct.GPR* %7526, i32 0, i32 33
  %7528 = getelementptr inbounds %struct.Reg, %struct.Reg* %7527, i32 0, i32 0
  %PC.i1409 = bitcast %union.anon* %7528 to i64*
  %7529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7530 = getelementptr inbounds %struct.GPR, %struct.GPR* %7529, i32 0, i32 1
  %7531 = getelementptr inbounds %struct.Reg, %struct.Reg* %7530, i32 0, i32 0
  %EAX.i1410 = bitcast %union.anon* %7531 to i32*
  %7532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7533 = getelementptr inbounds %struct.GPR, %struct.GPR* %7532, i32 0, i32 15
  %7534 = getelementptr inbounds %struct.Reg, %struct.Reg* %7533, i32 0, i32 0
  %RBP.i1411 = bitcast %union.anon* %7534 to i64*
  %7535 = load i64, i64* %RBP.i1411
  %7536 = sub i64 %7535, 160
  %7537 = load i32, i32* %EAX.i1410
  %7538 = zext i32 %7537 to i64
  %7539 = load i64, i64* %PC.i1409
  %7540 = add i64 %7539, 6
  store i64 %7540, i64* %PC.i1409
  %7541 = inttoptr i64 %7536 to i32*
  store i32 %7537, i32* %7541
  store %struct.Memory* %loadMem_43aa31, %struct.Memory** %MEMORY
  %loadMem_43aa37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7543 = getelementptr inbounds %struct.GPR, %struct.GPR* %7542, i32 0, i32 33
  %7544 = getelementptr inbounds %struct.Reg, %struct.Reg* %7543, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %7544 to i64*
  %7545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7546 = getelementptr inbounds %struct.GPR, %struct.GPR* %7545, i32 0, i32 9
  %7547 = getelementptr inbounds %struct.Reg, %struct.Reg* %7546, i32 0, i32 0
  %RSI.i1407 = bitcast %union.anon* %7547 to i64*
  %7548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7549 = getelementptr inbounds %struct.GPR, %struct.GPR* %7548, i32 0, i32 15
  %7550 = getelementptr inbounds %struct.Reg, %struct.Reg* %7549, i32 0, i32 0
  %RBP.i1408 = bitcast %union.anon* %7550 to i64*
  %7551 = load i64, i64* %RBP.i1408
  %7552 = sub i64 %7551, 176
  %7553 = load i64, i64* %PC.i1406
  %7554 = add i64 %7553, 7
  store i64 %7554, i64* %PC.i1406
  %7555 = inttoptr i64 %7552 to i32*
  %7556 = load i32, i32* %7555
  %7557 = sext i32 %7556 to i64
  store i64 %7557, i64* %RSI.i1407, align 8
  store %struct.Memory* %loadMem_43aa37, %struct.Memory** %MEMORY
  %loadMem_43aa3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7559 = getelementptr inbounds %struct.GPR, %struct.GPR* %7558, i32 0, i32 33
  %7560 = getelementptr inbounds %struct.Reg, %struct.Reg* %7559, i32 0, i32 0
  %PC.i1404 = bitcast %union.anon* %7560 to i64*
  %7561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7562 = getelementptr inbounds %struct.GPR, %struct.GPR* %7561, i32 0, i32 9
  %7563 = getelementptr inbounds %struct.Reg, %struct.Reg* %7562, i32 0, i32 0
  %RSI.i1405 = bitcast %union.anon* %7563 to i64*
  %7564 = load i64, i64* %RSI.i1405
  %7565 = load i64, i64* %PC.i1404
  %7566 = add i64 %7565, 4
  store i64 %7566, i64* %PC.i1404
  %7567 = sext i64 %7564 to i128
  %7568 = and i128 %7567, -18446744073709551616
  %7569 = zext i64 %7564 to i128
  %7570 = or i128 %7568, %7569
  %7571 = mul i128 5, %7570
  %7572 = trunc i128 %7571 to i64
  store i64 %7572, i64* %RSI.i1405, align 8
  %7573 = sext i64 %7572 to i128
  %7574 = icmp ne i128 %7573, %7571
  %7575 = zext i1 %7574 to i8
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7575, i8* %7576, align 1
  %7577 = trunc i128 %7571 to i32
  %7578 = and i32 %7577, 255
  %7579 = call i32 @llvm.ctpop.i32(i32 %7578)
  %7580 = trunc i32 %7579 to i8
  %7581 = and i8 %7580, 1
  %7582 = xor i8 %7581, 1
  %7583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7582, i8* %7583, align 1
  %7584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7584, align 1
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7585, align 1
  %7586 = lshr i64 %7572, 63
  %7587 = trunc i64 %7586 to i8
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7587, i8* %7588, align 1
  %7589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7575, i8* %7589, align 1
  store %struct.Memory* %loadMem_43aa3e, %struct.Memory** %MEMORY
  %loadMem_43aa42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7591 = getelementptr inbounds %struct.GPR, %struct.GPR* %7590, i32 0, i32 33
  %7592 = getelementptr inbounds %struct.Reg, %struct.Reg* %7591, i32 0, i32 0
  %PC.i1401 = bitcast %union.anon* %7592 to i64*
  %7593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7594 = getelementptr inbounds %struct.GPR, %struct.GPR* %7593, i32 0, i32 7
  %7595 = getelementptr inbounds %struct.Reg, %struct.Reg* %7594, i32 0, i32 0
  %RDX.i1402 = bitcast %union.anon* %7595 to i64*
  %7596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7597 = getelementptr inbounds %struct.GPR, %struct.GPR* %7596, i32 0, i32 9
  %7598 = getelementptr inbounds %struct.Reg, %struct.Reg* %7597, i32 0, i32 0
  %RSI.i1403 = bitcast %union.anon* %7598 to i64*
  %7599 = load i64, i64* %RDX.i1402
  %7600 = load i64, i64* %RSI.i1403
  %7601 = load i64, i64* %PC.i1401
  %7602 = add i64 %7601, 3
  store i64 %7602, i64* %PC.i1401
  %7603 = add i64 %7600, %7599
  store i64 %7603, i64* %RDX.i1402, align 8
  %7604 = icmp ult i64 %7603, %7599
  %7605 = icmp ult i64 %7603, %7600
  %7606 = or i1 %7604, %7605
  %7607 = zext i1 %7606 to i8
  %7608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7607, i8* %7608, align 1
  %7609 = trunc i64 %7603 to i32
  %7610 = and i32 %7609, 255
  %7611 = call i32 @llvm.ctpop.i32(i32 %7610)
  %7612 = trunc i32 %7611 to i8
  %7613 = and i8 %7612, 1
  %7614 = xor i8 %7613, 1
  %7615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7614, i8* %7615, align 1
  %7616 = xor i64 %7600, %7599
  %7617 = xor i64 %7616, %7603
  %7618 = lshr i64 %7617, 4
  %7619 = trunc i64 %7618 to i8
  %7620 = and i8 %7619, 1
  %7621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7620, i8* %7621, align 1
  %7622 = icmp eq i64 %7603, 0
  %7623 = zext i1 %7622 to i8
  %7624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7623, i8* %7624, align 1
  %7625 = lshr i64 %7603, 63
  %7626 = trunc i64 %7625 to i8
  %7627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7626, i8* %7627, align 1
  %7628 = lshr i64 %7599, 63
  %7629 = lshr i64 %7600, 63
  %7630 = xor i64 %7625, %7628
  %7631 = xor i64 %7625, %7629
  %7632 = add i64 %7630, %7631
  %7633 = icmp eq i64 %7632, 2
  %7634 = zext i1 %7633 to i8
  %7635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7634, i8* %7635, align 1
  store %struct.Memory* %loadMem_43aa42, %struct.Memory** %MEMORY
  %loadMem_43aa45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7637 = getelementptr inbounds %struct.GPR, %struct.GPR* %7636, i32 0, i32 33
  %7638 = getelementptr inbounds %struct.Reg, %struct.Reg* %7637, i32 0, i32 0
  %PC.i1398 = bitcast %union.anon* %7638 to i64*
  %7639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7640 = getelementptr inbounds %struct.GPR, %struct.GPR* %7639, i32 0, i32 7
  %7641 = getelementptr inbounds %struct.Reg, %struct.Reg* %7640, i32 0, i32 0
  %RDX.i1399 = bitcast %union.anon* %7641 to i64*
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7643 = getelementptr inbounds %struct.GPR, %struct.GPR* %7642, i32 0, i32 15
  %7644 = getelementptr inbounds %struct.Reg, %struct.Reg* %7643, i32 0, i32 0
  %RBP.i1400 = bitcast %union.anon* %7644 to i64*
  %7645 = load i64, i64* %RBP.i1400
  %7646 = sub i64 %7645, 168
  %7647 = load i64, i64* %RDX.i1399
  %7648 = load i64, i64* %PC.i1398
  %7649 = add i64 %7648, 7
  store i64 %7649, i64* %PC.i1398
  %7650 = inttoptr i64 %7646 to i64*
  store i64 %7647, i64* %7650
  store %struct.Memory* %loadMem_43aa45, %struct.Memory** %MEMORY
  %loadMem_43aa4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7652 = getelementptr inbounds %struct.GPR, %struct.GPR* %7651, i32 0, i32 33
  %7653 = getelementptr inbounds %struct.Reg, %struct.Reg* %7652, i32 0, i32 0
  %PC.i1395 = bitcast %union.anon* %7653 to i64*
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7655 = getelementptr inbounds %struct.GPR, %struct.GPR* %7654, i32 0, i32 7
  %7656 = getelementptr inbounds %struct.Reg, %struct.Reg* %7655, i32 0, i32 0
  %RDX.i1396 = bitcast %union.anon* %7656 to i64*
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7658 = getelementptr inbounds %struct.GPR, %struct.GPR* %7657, i32 0, i32 15
  %7659 = getelementptr inbounds %struct.Reg, %struct.Reg* %7658, i32 0, i32 0
  %RBP.i1397 = bitcast %union.anon* %7659 to i64*
  %7660 = load i64, i64* %RBP.i1397
  %7661 = sub i64 %7660, 200
  %7662 = load i64, i64* %PC.i1395
  %7663 = add i64 %7662, 7
  store i64 %7663, i64* %PC.i1395
  %7664 = inttoptr i64 %7661 to i64*
  %7665 = load i64, i64* %7664
  store i64 %7665, i64* %RDX.i1396, align 8
  store %struct.Memory* %loadMem_43aa4c, %struct.Memory** %MEMORY
  %loadMem_43aa53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7667 = getelementptr inbounds %struct.GPR, %struct.GPR* %7666, i32 0, i32 33
  %7668 = getelementptr inbounds %struct.Reg, %struct.Reg* %7667, i32 0, i32 0
  %PC.i1392 = bitcast %union.anon* %7668 to i64*
  %7669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7670 = getelementptr inbounds %struct.GPR, %struct.GPR* %7669, i32 0, i32 1
  %7671 = getelementptr inbounds %struct.Reg, %struct.Reg* %7670, i32 0, i32 0
  %RAX.i1393 = bitcast %union.anon* %7671 to i64*
  %7672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7673 = getelementptr inbounds %struct.GPR, %struct.GPR* %7672, i32 0, i32 7
  %7674 = getelementptr inbounds %struct.Reg, %struct.Reg* %7673, i32 0, i32 0
  %RDX.i1394 = bitcast %union.anon* %7674 to i64*
  %7675 = load i64, i64* %RDX.i1394
  %7676 = load i64, i64* %PC.i1392
  %7677 = add i64 %7676, 3
  store i64 %7677, i64* %PC.i1392
  %7678 = inttoptr i64 %7675 to i16*
  %7679 = load i16, i16* %7678
  %7680 = zext i16 %7679 to i64
  store i64 %7680, i64* %RAX.i1393, align 8
  store %struct.Memory* %loadMem_43aa53, %struct.Memory** %MEMORY
  %loadMem_43aa56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7682 = getelementptr inbounds %struct.GPR, %struct.GPR* %7681, i32 0, i32 33
  %7683 = getelementptr inbounds %struct.Reg, %struct.Reg* %7682, i32 0, i32 0
  %PC.i1389 = bitcast %union.anon* %7683 to i64*
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7685 = getelementptr inbounds %struct.GPR, %struct.GPR* %7684, i32 0, i32 1
  %7686 = getelementptr inbounds %struct.Reg, %struct.Reg* %7685, i32 0, i32 0
  %EAX.i1390 = bitcast %union.anon* %7686 to i32*
  %7687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7688 = getelementptr inbounds %struct.GPR, %struct.GPR* %7687, i32 0, i32 15
  %7689 = getelementptr inbounds %struct.Reg, %struct.Reg* %7688, i32 0, i32 0
  %RBP.i1391 = bitcast %union.anon* %7689 to i64*
  %7690 = load i64, i64* %RBP.i1391
  %7691 = sub i64 %7690, 128
  %7692 = load i32, i32* %EAX.i1390
  %7693 = zext i32 %7692 to i64
  %7694 = load i64, i64* %PC.i1389
  %7695 = add i64 %7694, 3
  store i64 %7695, i64* %PC.i1389
  %7696 = inttoptr i64 %7691 to i32*
  store i32 %7692, i32* %7696
  store %struct.Memory* %loadMem_43aa56, %struct.Memory** %MEMORY
  %loadMem_43aa59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7698 = getelementptr inbounds %struct.GPR, %struct.GPR* %7697, i32 0, i32 33
  %7699 = getelementptr inbounds %struct.Reg, %struct.Reg* %7698, i32 0, i32 0
  %PC.i1386 = bitcast %union.anon* %7699 to i64*
  %7700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7701 = getelementptr inbounds %struct.GPR, %struct.GPR* %7700, i32 0, i32 7
  %7702 = getelementptr inbounds %struct.Reg, %struct.Reg* %7701, i32 0, i32 0
  %RDX.i1387 = bitcast %union.anon* %7702 to i64*
  %7703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7704 = getelementptr inbounds %struct.GPR, %struct.GPR* %7703, i32 0, i32 15
  %7705 = getelementptr inbounds %struct.Reg, %struct.Reg* %7704, i32 0, i32 0
  %RBP.i1388 = bitcast %union.anon* %7705 to i64*
  %7706 = load i64, i64* %RBP.i1388
  %7707 = sub i64 %7706, 208
  %7708 = load i64, i64* %PC.i1386
  %7709 = add i64 %7708, 7
  store i64 %7709, i64* %PC.i1386
  %7710 = inttoptr i64 %7707 to i64*
  %7711 = load i64, i64* %7710
  store i64 %7711, i64* %RDX.i1387, align 8
  store %struct.Memory* %loadMem_43aa59, %struct.Memory** %MEMORY
  %loadMem_43aa60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7713 = getelementptr inbounds %struct.GPR, %struct.GPR* %7712, i32 0, i32 33
  %7714 = getelementptr inbounds %struct.Reg, %struct.Reg* %7713, i32 0, i32 0
  %PC.i1383 = bitcast %union.anon* %7714 to i64*
  %7715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7716 = getelementptr inbounds %struct.GPR, %struct.GPR* %7715, i32 0, i32 1
  %7717 = getelementptr inbounds %struct.Reg, %struct.Reg* %7716, i32 0, i32 0
  %RAX.i1384 = bitcast %union.anon* %7717 to i64*
  %7718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7719 = getelementptr inbounds %struct.GPR, %struct.GPR* %7718, i32 0, i32 7
  %7720 = getelementptr inbounds %struct.Reg, %struct.Reg* %7719, i32 0, i32 0
  %RDX.i1385 = bitcast %union.anon* %7720 to i64*
  %7721 = load i64, i64* %RDX.i1385
  %7722 = load i64, i64* %PC.i1383
  %7723 = add i64 %7722, 3
  store i64 %7723, i64* %PC.i1383
  %7724 = inttoptr i64 %7721 to i16*
  %7725 = load i16, i16* %7724
  %7726 = zext i16 %7725 to i64
  store i64 %7726, i64* %RAX.i1384, align 8
  store %struct.Memory* %loadMem_43aa60, %struct.Memory** %MEMORY
  %loadMem_43aa63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7728 = getelementptr inbounds %struct.GPR, %struct.GPR* %7727, i32 0, i32 33
  %7729 = getelementptr inbounds %struct.Reg, %struct.Reg* %7728, i32 0, i32 0
  %PC.i1380 = bitcast %union.anon* %7729 to i64*
  %7730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7731 = getelementptr inbounds %struct.GPR, %struct.GPR* %7730, i32 0, i32 1
  %7732 = getelementptr inbounds %struct.Reg, %struct.Reg* %7731, i32 0, i32 0
  %EAX.i1381 = bitcast %union.anon* %7732 to i32*
  %7733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7734 = getelementptr inbounds %struct.GPR, %struct.GPR* %7733, i32 0, i32 15
  %7735 = getelementptr inbounds %struct.Reg, %struct.Reg* %7734, i32 0, i32 0
  %RBP.i1382 = bitcast %union.anon* %7735 to i64*
  %7736 = load i64, i64* %RBP.i1382
  %7737 = sub i64 %7736, 132
  %7738 = load i32, i32* %EAX.i1381
  %7739 = zext i32 %7738 to i64
  %7740 = load i64, i64* %PC.i1380
  %7741 = add i64 %7740, 6
  store i64 %7741, i64* %PC.i1380
  %7742 = inttoptr i64 %7737 to i32*
  store i32 %7738, i32* %7742
  store %struct.Memory* %loadMem_43aa63, %struct.Memory** %MEMORY
  %loadMem_43aa69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7744 = getelementptr inbounds %struct.GPR, %struct.GPR* %7743, i32 0, i32 33
  %7745 = getelementptr inbounds %struct.Reg, %struct.Reg* %7744, i32 0, i32 0
  %PC.i1377 = bitcast %union.anon* %7745 to i64*
  %7746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7747 = getelementptr inbounds %struct.GPR, %struct.GPR* %7746, i32 0, i32 7
  %7748 = getelementptr inbounds %struct.Reg, %struct.Reg* %7747, i32 0, i32 0
  %RDX.i1378 = bitcast %union.anon* %7748 to i64*
  %7749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7750 = getelementptr inbounds %struct.GPR, %struct.GPR* %7749, i32 0, i32 15
  %7751 = getelementptr inbounds %struct.Reg, %struct.Reg* %7750, i32 0, i32 0
  %RBP.i1379 = bitcast %union.anon* %7751 to i64*
  %7752 = load i64, i64* %RBP.i1379
  %7753 = sub i64 %7752, 200
  %7754 = load i64, i64* %PC.i1377
  %7755 = add i64 %7754, 7
  store i64 %7755, i64* %PC.i1377
  %7756 = inttoptr i64 %7753 to i64*
  %7757 = load i64, i64* %7756
  store i64 %7757, i64* %RDX.i1378, align 8
  store %struct.Memory* %loadMem_43aa69, %struct.Memory** %MEMORY
  %loadMem_43aa70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7759 = getelementptr inbounds %struct.GPR, %struct.GPR* %7758, i32 0, i32 33
  %7760 = getelementptr inbounds %struct.Reg, %struct.Reg* %7759, i32 0, i32 0
  %PC.i1374 = bitcast %union.anon* %7760 to i64*
  %7761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7762 = getelementptr inbounds %struct.GPR, %struct.GPR* %7761, i32 0, i32 5
  %7763 = getelementptr inbounds %struct.Reg, %struct.Reg* %7762, i32 0, i32 0
  %ECX.i1375 = bitcast %union.anon* %7763 to i32*
  %7764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7765 = getelementptr inbounds %struct.GPR, %struct.GPR* %7764, i32 0, i32 1
  %7766 = getelementptr inbounds %struct.Reg, %struct.Reg* %7765, i32 0, i32 0
  %RAX.i1376 = bitcast %union.anon* %7766 to i64*
  %7767 = load i32, i32* %ECX.i1375
  %7768 = zext i32 %7767 to i64
  %7769 = load i64, i64* %PC.i1374
  %7770 = add i64 %7769, 2
  store i64 %7770, i64* %PC.i1374
  %7771 = and i64 %7768, 4294967295
  store i64 %7771, i64* %RAX.i1376, align 8
  store %struct.Memory* %loadMem_43aa70, %struct.Memory** %MEMORY
  %loadMem_43aa72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7773 = getelementptr inbounds %struct.GPR, %struct.GPR* %7772, i32 0, i32 33
  %7774 = getelementptr inbounds %struct.Reg, %struct.Reg* %7773, i32 0, i32 0
  %PC.i1371 = bitcast %union.anon* %7774 to i64*
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7776 = getelementptr inbounds %struct.GPR, %struct.GPR* %7775, i32 0, i32 1
  %7777 = getelementptr inbounds %struct.Reg, %struct.Reg* %7776, i32 0, i32 0
  %RAX.i1372 = bitcast %union.anon* %7777 to i64*
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7779 = getelementptr inbounds %struct.GPR, %struct.GPR* %7778, i32 0, i32 15
  %7780 = getelementptr inbounds %struct.Reg, %struct.Reg* %7779, i32 0, i32 0
  %RBP.i1373 = bitcast %union.anon* %7780 to i64*
  %7781 = load i64, i64* %RAX.i1372
  %7782 = load i64, i64* %RBP.i1373
  %7783 = sub i64 %7782, 92
  %7784 = load i64, i64* %PC.i1371
  %7785 = add i64 %7784, 3
  store i64 %7785, i64* %PC.i1371
  %7786 = trunc i64 %7781 to i32
  %7787 = inttoptr i64 %7783 to i32*
  %7788 = load i32, i32* %7787
  %7789 = sub i32 %7786, %7788
  %7790 = zext i32 %7789 to i64
  store i64 %7790, i64* %RAX.i1372, align 8
  %7791 = icmp ult i32 %7786, %7788
  %7792 = zext i1 %7791 to i8
  %7793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7792, i8* %7793, align 1
  %7794 = and i32 %7789, 255
  %7795 = call i32 @llvm.ctpop.i32(i32 %7794)
  %7796 = trunc i32 %7795 to i8
  %7797 = and i8 %7796, 1
  %7798 = xor i8 %7797, 1
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7798, i8* %7799, align 1
  %7800 = xor i32 %7788, %7786
  %7801 = xor i32 %7800, %7789
  %7802 = lshr i32 %7801, 4
  %7803 = trunc i32 %7802 to i8
  %7804 = and i8 %7803, 1
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7804, i8* %7805, align 1
  %7806 = icmp eq i32 %7789, 0
  %7807 = zext i1 %7806 to i8
  %7808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7807, i8* %7808, align 1
  %7809 = lshr i32 %7789, 31
  %7810 = trunc i32 %7809 to i8
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7810, i8* %7811, align 1
  %7812 = lshr i32 %7786, 31
  %7813 = lshr i32 %7788, 31
  %7814 = xor i32 %7813, %7812
  %7815 = xor i32 %7809, %7812
  %7816 = add i32 %7815, %7814
  %7817 = icmp eq i32 %7816, 2
  %7818 = zext i1 %7817 to i8
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7818, i8* %7819, align 1
  store %struct.Memory* %loadMem_43aa72, %struct.Memory** %MEMORY
  %loadMem_43aa75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7821 = getelementptr inbounds %struct.GPR, %struct.GPR* %7820, i32 0, i32 33
  %7822 = getelementptr inbounds %struct.Reg, %struct.Reg* %7821, i32 0, i32 0
  %PC.i1368 = bitcast %union.anon* %7822 to i64*
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7824 = getelementptr inbounds %struct.GPR, %struct.GPR* %7823, i32 0, i32 1
  %7825 = getelementptr inbounds %struct.Reg, %struct.Reg* %7824, i32 0, i32 0
  %EAX.i1369 = bitcast %union.anon* %7825 to i32*
  %7826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7827 = getelementptr inbounds %struct.GPR, %struct.GPR* %7826, i32 0, i32 9
  %7828 = getelementptr inbounds %struct.Reg, %struct.Reg* %7827, i32 0, i32 0
  %RSI.i1370 = bitcast %union.anon* %7828 to i64*
  %7829 = load i32, i32* %EAX.i1369
  %7830 = zext i32 %7829 to i64
  %7831 = load i64, i64* %PC.i1368
  %7832 = add i64 %7831, 3
  store i64 %7832, i64* %PC.i1368
  %7833 = shl i64 %7830, 32
  %7834 = ashr exact i64 %7833, 32
  store i64 %7834, i64* %RSI.i1370, align 8
  store %struct.Memory* %loadMem_43aa75, %struct.Memory** %MEMORY
  %loadMem_43aa78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7836 = getelementptr inbounds %struct.GPR, %struct.GPR* %7835, i32 0, i32 33
  %7837 = getelementptr inbounds %struct.Reg, %struct.Reg* %7836, i32 0, i32 0
  %PC.i1364 = bitcast %union.anon* %7837 to i64*
  %7838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7839 = getelementptr inbounds %struct.GPR, %struct.GPR* %7838, i32 0, i32 1
  %7840 = getelementptr inbounds %struct.Reg, %struct.Reg* %7839, i32 0, i32 0
  %RAX.i1365 = bitcast %union.anon* %7840 to i64*
  %7841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7842 = getelementptr inbounds %struct.GPR, %struct.GPR* %7841, i32 0, i32 7
  %7843 = getelementptr inbounds %struct.Reg, %struct.Reg* %7842, i32 0, i32 0
  %RDX.i1366 = bitcast %union.anon* %7843 to i64*
  %7844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7845 = getelementptr inbounds %struct.GPR, %struct.GPR* %7844, i32 0, i32 9
  %7846 = getelementptr inbounds %struct.Reg, %struct.Reg* %7845, i32 0, i32 0
  %RSI.i1367 = bitcast %union.anon* %7846 to i64*
  %7847 = load i64, i64* %RDX.i1366
  %7848 = load i64, i64* %RSI.i1367
  %7849 = mul i64 %7848, 2
  %7850 = add i64 %7849, %7847
  %7851 = load i64, i64* %PC.i1364
  %7852 = add i64 %7851, 4
  store i64 %7852, i64* %PC.i1364
  %7853 = inttoptr i64 %7850 to i16*
  %7854 = load i16, i16* %7853
  %7855 = zext i16 %7854 to i64
  store i64 %7855, i64* %RAX.i1365, align 8
  store %struct.Memory* %loadMem_43aa78, %struct.Memory** %MEMORY
  %loadMem_43aa7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7857 = getelementptr inbounds %struct.GPR, %struct.GPR* %7856, i32 0, i32 33
  %7858 = getelementptr inbounds %struct.Reg, %struct.Reg* %7857, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %7858 to i64*
  %7859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7860 = getelementptr inbounds %struct.GPR, %struct.GPR* %7859, i32 0, i32 1
  %7861 = getelementptr inbounds %struct.Reg, %struct.Reg* %7860, i32 0, i32 0
  %EAX.i1362 = bitcast %union.anon* %7861 to i32*
  %7862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7863 = getelementptr inbounds %struct.GPR, %struct.GPR* %7862, i32 0, i32 15
  %7864 = getelementptr inbounds %struct.Reg, %struct.Reg* %7863, i32 0, i32 0
  %RBP.i1363 = bitcast %union.anon* %7864 to i64*
  %7865 = load i64, i64* %RBP.i1363
  %7866 = sub i64 %7865, 124
  %7867 = load i32, i32* %EAX.i1362
  %7868 = zext i32 %7867 to i64
  %7869 = load i64, i64* %PC.i1361
  %7870 = add i64 %7869, 3
  store i64 %7870, i64* %PC.i1361
  %7871 = inttoptr i64 %7866 to i32*
  store i32 %7867, i32* %7871
  store %struct.Memory* %loadMem_43aa7c, %struct.Memory** %MEMORY
  %loadMem_43aa7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7873 = getelementptr inbounds %struct.GPR, %struct.GPR* %7872, i32 0, i32 33
  %7874 = getelementptr inbounds %struct.Reg, %struct.Reg* %7873, i32 0, i32 0
  %PC.i1358 = bitcast %union.anon* %7874 to i64*
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7876 = getelementptr inbounds %struct.GPR, %struct.GPR* %7875, i32 0, i32 7
  %7877 = getelementptr inbounds %struct.Reg, %struct.Reg* %7876, i32 0, i32 0
  %RDX.i1359 = bitcast %union.anon* %7877 to i64*
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7879 = getelementptr inbounds %struct.GPR, %struct.GPR* %7878, i32 0, i32 15
  %7880 = getelementptr inbounds %struct.Reg, %struct.Reg* %7879, i32 0, i32 0
  %RBP.i1360 = bitcast %union.anon* %7880 to i64*
  %7881 = load i64, i64* %RBP.i1360
  %7882 = sub i64 %7881, 208
  %7883 = load i64, i64* %PC.i1358
  %7884 = add i64 %7883, 7
  store i64 %7884, i64* %PC.i1358
  %7885 = inttoptr i64 %7882 to i64*
  %7886 = load i64, i64* %7885
  store i64 %7886, i64* %RDX.i1359, align 8
  store %struct.Memory* %loadMem_43aa7f, %struct.Memory** %MEMORY
  %loadMem_43aa86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7888 = getelementptr inbounds %struct.GPR, %struct.GPR* %7887, i32 0, i32 33
  %7889 = getelementptr inbounds %struct.Reg, %struct.Reg* %7888, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %7889 to i64*
  %7890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7891 = getelementptr inbounds %struct.GPR, %struct.GPR* %7890, i32 0, i32 9
  %7892 = getelementptr inbounds %struct.Reg, %struct.Reg* %7891, i32 0, i32 0
  %RSI.i1356 = bitcast %union.anon* %7892 to i64*
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7894 = getelementptr inbounds %struct.GPR, %struct.GPR* %7893, i32 0, i32 15
  %7895 = getelementptr inbounds %struct.Reg, %struct.Reg* %7894, i32 0, i32 0
  %RBP.i1357 = bitcast %union.anon* %7895 to i64*
  %7896 = load i64, i64* %RBP.i1357
  %7897 = sub i64 %7896, 96
  %7898 = load i64, i64* %PC.i1355
  %7899 = add i64 %7898, 4
  store i64 %7899, i64* %PC.i1355
  %7900 = inttoptr i64 %7897 to i32*
  %7901 = load i32, i32* %7900
  %7902 = sext i32 %7901 to i64
  store i64 %7902, i64* %RSI.i1356, align 8
  store %struct.Memory* %loadMem_43aa86, %struct.Memory** %MEMORY
  %loadMem_43aa8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7904 = getelementptr inbounds %struct.GPR, %struct.GPR* %7903, i32 0, i32 33
  %7905 = getelementptr inbounds %struct.Reg, %struct.Reg* %7904, i32 0, i32 0
  %PC.i1351 = bitcast %union.anon* %7905 to i64*
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7907 = getelementptr inbounds %struct.GPR, %struct.GPR* %7906, i32 0, i32 1
  %7908 = getelementptr inbounds %struct.Reg, %struct.Reg* %7907, i32 0, i32 0
  %RAX.i1352 = bitcast %union.anon* %7908 to i64*
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7910 = getelementptr inbounds %struct.GPR, %struct.GPR* %7909, i32 0, i32 7
  %7911 = getelementptr inbounds %struct.Reg, %struct.Reg* %7910, i32 0, i32 0
  %RDX.i1353 = bitcast %union.anon* %7911 to i64*
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7913 = getelementptr inbounds %struct.GPR, %struct.GPR* %7912, i32 0, i32 9
  %7914 = getelementptr inbounds %struct.Reg, %struct.Reg* %7913, i32 0, i32 0
  %RSI.i1354 = bitcast %union.anon* %7914 to i64*
  %7915 = load i64, i64* %RDX.i1353
  %7916 = load i64, i64* %RSI.i1354
  %7917 = mul i64 %7916, 2
  %7918 = add i64 %7917, %7915
  %7919 = load i64, i64* %PC.i1351
  %7920 = add i64 %7919, 4
  store i64 %7920, i64* %PC.i1351
  %7921 = inttoptr i64 %7918 to i16*
  %7922 = load i16, i16* %7921
  %7923 = zext i16 %7922 to i64
  store i64 %7923, i64* %RAX.i1352, align 8
  store %struct.Memory* %loadMem_43aa8a, %struct.Memory** %MEMORY
  %loadMem_43aa8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7925 = getelementptr inbounds %struct.GPR, %struct.GPR* %7924, i32 0, i32 33
  %7926 = getelementptr inbounds %struct.Reg, %struct.Reg* %7925, i32 0, i32 0
  %PC.i1348 = bitcast %union.anon* %7926 to i64*
  %7927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7928 = getelementptr inbounds %struct.GPR, %struct.GPR* %7927, i32 0, i32 1
  %7929 = getelementptr inbounds %struct.Reg, %struct.Reg* %7928, i32 0, i32 0
  %EAX.i1349 = bitcast %union.anon* %7929 to i32*
  %7930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7931 = getelementptr inbounds %struct.GPR, %struct.GPR* %7930, i32 0, i32 15
  %7932 = getelementptr inbounds %struct.Reg, %struct.Reg* %7931, i32 0, i32 0
  %RBP.i1350 = bitcast %union.anon* %7932 to i64*
  %7933 = load i64, i64* %RBP.i1350
  %7934 = sub i64 %7933, 136
  %7935 = load i32, i32* %EAX.i1349
  %7936 = zext i32 %7935 to i64
  %7937 = load i64, i64* %PC.i1348
  %7938 = add i64 %7937, 6
  store i64 %7938, i64* %PC.i1348
  %7939 = inttoptr i64 %7934 to i32*
  store i32 %7935, i32* %7939
  store %struct.Memory* %loadMem_43aa8e, %struct.Memory** %MEMORY
  %loadMem_43aa94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7941 = getelementptr inbounds %struct.GPR, %struct.GPR* %7940, i32 0, i32 33
  %7942 = getelementptr inbounds %struct.Reg, %struct.Reg* %7941, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %7942 to i64*
  %7943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7944 = getelementptr inbounds %struct.GPR, %struct.GPR* %7943, i32 0, i32 7
  %7945 = getelementptr inbounds %struct.Reg, %struct.Reg* %7944, i32 0, i32 0
  %RDX.i1346 = bitcast %union.anon* %7945 to i64*
  %7946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7947 = getelementptr inbounds %struct.GPR, %struct.GPR* %7946, i32 0, i32 15
  %7948 = getelementptr inbounds %struct.Reg, %struct.Reg* %7947, i32 0, i32 0
  %RBP.i1347 = bitcast %union.anon* %7948 to i64*
  %7949 = load i64, i64* %RBP.i1347
  %7950 = sub i64 %7949, 200
  %7951 = load i64, i64* %PC.i1345
  %7952 = add i64 %7951, 7
  store i64 %7952, i64* %PC.i1345
  %7953 = inttoptr i64 %7950 to i64*
  %7954 = load i64, i64* %7953
  store i64 %7954, i64* %RDX.i1346, align 8
  store %struct.Memory* %loadMem_43aa94, %struct.Memory** %MEMORY
  %loadMem_43aa9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7956 = getelementptr inbounds %struct.GPR, %struct.GPR* %7955, i32 0, i32 33
  %7957 = getelementptr inbounds %struct.Reg, %struct.Reg* %7956, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %7957 to i64*
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7959 = getelementptr inbounds %struct.GPR, %struct.GPR* %7958, i32 0, i32 5
  %7960 = getelementptr inbounds %struct.Reg, %struct.Reg* %7959, i32 0, i32 0
  %ECX.i1343 = bitcast %union.anon* %7960 to i32*
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7962 = getelementptr inbounds %struct.GPR, %struct.GPR* %7961, i32 0, i32 1
  %7963 = getelementptr inbounds %struct.Reg, %struct.Reg* %7962, i32 0, i32 0
  %RAX.i1344 = bitcast %union.anon* %7963 to i64*
  %7964 = load i32, i32* %ECX.i1343
  %7965 = zext i32 %7964 to i64
  %7966 = load i64, i64* %PC.i1342
  %7967 = add i64 %7966, 2
  store i64 %7967, i64* %PC.i1342
  %7968 = and i64 %7965, 4294967295
  store i64 %7968, i64* %RAX.i1344, align 8
  store %struct.Memory* %loadMem_43aa9b, %struct.Memory** %MEMORY
  %loadMem_43aa9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7970 = getelementptr inbounds %struct.GPR, %struct.GPR* %7969, i32 0, i32 33
  %7971 = getelementptr inbounds %struct.Reg, %struct.Reg* %7970, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %7971 to i64*
  %7972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7973 = getelementptr inbounds %struct.GPR, %struct.GPR* %7972, i32 0, i32 1
  %7974 = getelementptr inbounds %struct.Reg, %struct.Reg* %7973, i32 0, i32 0
  %RAX.i1340 = bitcast %union.anon* %7974 to i64*
  %7975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7976 = getelementptr inbounds %struct.GPR, %struct.GPR* %7975, i32 0, i32 15
  %7977 = getelementptr inbounds %struct.Reg, %struct.Reg* %7976, i32 0, i32 0
  %RBP.i1341 = bitcast %union.anon* %7977 to i64*
  %7978 = load i64, i64* %RAX.i1340
  %7979 = load i64, i64* %RBP.i1341
  %7980 = sub i64 %7979, 92
  %7981 = load i64, i64* %PC.i1339
  %7982 = add i64 %7981, 3
  store i64 %7982, i64* %PC.i1339
  %7983 = trunc i64 %7978 to i32
  %7984 = inttoptr i64 %7980 to i32*
  %7985 = load i32, i32* %7984
  %7986 = sub i32 %7983, %7985
  %7987 = zext i32 %7986 to i64
  store i64 %7987, i64* %RAX.i1340, align 8
  %7988 = icmp ult i32 %7983, %7985
  %7989 = zext i1 %7988 to i8
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7989, i8* %7990, align 1
  %7991 = and i32 %7986, 255
  %7992 = call i32 @llvm.ctpop.i32(i32 %7991)
  %7993 = trunc i32 %7992 to i8
  %7994 = and i8 %7993, 1
  %7995 = xor i8 %7994, 1
  %7996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7995, i8* %7996, align 1
  %7997 = xor i32 %7985, %7983
  %7998 = xor i32 %7997, %7986
  %7999 = lshr i32 %7998, 4
  %8000 = trunc i32 %7999 to i8
  %8001 = and i8 %8000, 1
  %8002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8001, i8* %8002, align 1
  %8003 = icmp eq i32 %7986, 0
  %8004 = zext i1 %8003 to i8
  %8005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8004, i8* %8005, align 1
  %8006 = lshr i32 %7986, 31
  %8007 = trunc i32 %8006 to i8
  %8008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8007, i8* %8008, align 1
  %8009 = lshr i32 %7983, 31
  %8010 = lshr i32 %7985, 31
  %8011 = xor i32 %8010, %8009
  %8012 = xor i32 %8006, %8009
  %8013 = add i32 %8012, %8011
  %8014 = icmp eq i32 %8013, 2
  %8015 = zext i1 %8014 to i8
  %8016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8015, i8* %8016, align 1
  store %struct.Memory* %loadMem_43aa9d, %struct.Memory** %MEMORY
  %loadMem_43aaa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8018 = getelementptr inbounds %struct.GPR, %struct.GPR* %8017, i32 0, i32 33
  %8019 = getelementptr inbounds %struct.Reg, %struct.Reg* %8018, i32 0, i32 0
  %PC.i1337 = bitcast %union.anon* %8019 to i64*
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8021 = getelementptr inbounds %struct.GPR, %struct.GPR* %8020, i32 0, i32 1
  %8022 = getelementptr inbounds %struct.Reg, %struct.Reg* %8021, i32 0, i32 0
  %RAX.i1338 = bitcast %union.anon* %8022 to i64*
  %8023 = load i64, i64* %RAX.i1338
  %8024 = load i64, i64* %PC.i1337
  %8025 = add i64 %8024, 2
  store i64 %8025, i64* %PC.i1337
  %8026 = trunc i64 %8023 to i32
  %8027 = shl i32 %8026, 1
  %8028 = icmp slt i32 %8026, 0
  %8029 = icmp slt i32 %8027, 0
  %8030 = xor i1 %8028, %8029
  %8031 = zext i32 %8027 to i64
  store i64 %8031, i64* %RAX.i1338, align 8
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8033 = zext i1 %8028 to i8
  store i8 %8033, i8* %8032, align 1
  %8034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8035 = and i32 %8027, 254
  %8036 = call i32 @llvm.ctpop.i32(i32 %8035)
  %8037 = trunc i32 %8036 to i8
  %8038 = and i8 %8037, 1
  %8039 = xor i8 %8038, 1
  store i8 %8039, i8* %8034, align 1
  %8040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8040, align 1
  %8041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8042 = icmp eq i32 %8027, 0
  %8043 = zext i1 %8042 to i8
  store i8 %8043, i8* %8041, align 1
  %8044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8045 = lshr i32 %8027, 31
  %8046 = trunc i32 %8045 to i8
  store i8 %8046, i8* %8044, align 1
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8048 = zext i1 %8030 to i8
  store i8 %8048, i8* %8047, align 1
  store %struct.Memory* %loadMem_43aaa0, %struct.Memory** %MEMORY
  %loadMem_43aaa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8050 = getelementptr inbounds %struct.GPR, %struct.GPR* %8049, i32 0, i32 33
  %8051 = getelementptr inbounds %struct.Reg, %struct.Reg* %8050, i32 0, i32 0
  %PC.i1334 = bitcast %union.anon* %8051 to i64*
  %8052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8053 = getelementptr inbounds %struct.GPR, %struct.GPR* %8052, i32 0, i32 1
  %8054 = getelementptr inbounds %struct.Reg, %struct.Reg* %8053, i32 0, i32 0
  %EAX.i1335 = bitcast %union.anon* %8054 to i32*
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8056 = getelementptr inbounds %struct.GPR, %struct.GPR* %8055, i32 0, i32 9
  %8057 = getelementptr inbounds %struct.Reg, %struct.Reg* %8056, i32 0, i32 0
  %RSI.i1336 = bitcast %union.anon* %8057 to i64*
  %8058 = load i32, i32* %EAX.i1335
  %8059 = zext i32 %8058 to i64
  %8060 = load i64, i64* %PC.i1334
  %8061 = add i64 %8060, 3
  store i64 %8061, i64* %PC.i1334
  %8062 = shl i64 %8059, 32
  %8063 = ashr exact i64 %8062, 32
  store i64 %8063, i64* %RSI.i1336, align 8
  store %struct.Memory* %loadMem_43aaa3, %struct.Memory** %MEMORY
  %loadMem_43aaa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8065 = getelementptr inbounds %struct.GPR, %struct.GPR* %8064, i32 0, i32 33
  %8066 = getelementptr inbounds %struct.Reg, %struct.Reg* %8065, i32 0, i32 0
  %PC.i1330 = bitcast %union.anon* %8066 to i64*
  %8067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8068 = getelementptr inbounds %struct.GPR, %struct.GPR* %8067, i32 0, i32 1
  %8069 = getelementptr inbounds %struct.Reg, %struct.Reg* %8068, i32 0, i32 0
  %RAX.i1331 = bitcast %union.anon* %8069 to i64*
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8071 = getelementptr inbounds %struct.GPR, %struct.GPR* %8070, i32 0, i32 7
  %8072 = getelementptr inbounds %struct.Reg, %struct.Reg* %8071, i32 0, i32 0
  %RDX.i1332 = bitcast %union.anon* %8072 to i64*
  %8073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8074 = getelementptr inbounds %struct.GPR, %struct.GPR* %8073, i32 0, i32 9
  %8075 = getelementptr inbounds %struct.Reg, %struct.Reg* %8074, i32 0, i32 0
  %RSI.i1333 = bitcast %union.anon* %8075 to i64*
  %8076 = load i64, i64* %RDX.i1332
  %8077 = load i64, i64* %RSI.i1333
  %8078 = mul i64 %8077, 2
  %8079 = add i64 %8078, %8076
  %8080 = load i64, i64* %PC.i1330
  %8081 = add i64 %8080, 4
  store i64 %8081, i64* %PC.i1330
  %8082 = inttoptr i64 %8079 to i16*
  %8083 = load i16, i16* %8082
  %8084 = zext i16 %8083 to i64
  store i64 %8084, i64* %RAX.i1331, align 8
  store %struct.Memory* %loadMem_43aaa6, %struct.Memory** %MEMORY
  %loadMem_43aaaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8086 = getelementptr inbounds %struct.GPR, %struct.GPR* %8085, i32 0, i32 33
  %8087 = getelementptr inbounds %struct.Reg, %struct.Reg* %8086, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %8087 to i64*
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8089 = getelementptr inbounds %struct.GPR, %struct.GPR* %8088, i32 0, i32 1
  %8090 = getelementptr inbounds %struct.Reg, %struct.Reg* %8089, i32 0, i32 0
  %EAX.i1328 = bitcast %union.anon* %8090 to i32*
  %8091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8092 = getelementptr inbounds %struct.GPR, %struct.GPR* %8091, i32 0, i32 15
  %8093 = getelementptr inbounds %struct.Reg, %struct.Reg* %8092, i32 0, i32 0
  %RBP.i1329 = bitcast %union.anon* %8093 to i64*
  %8094 = load i64, i64* %RBP.i1329
  %8095 = sub i64 %8094, 120
  %8096 = load i32, i32* %EAX.i1328
  %8097 = zext i32 %8096 to i64
  %8098 = load i64, i64* %PC.i1327
  %8099 = add i64 %8098, 3
  store i64 %8099, i64* %PC.i1327
  %8100 = inttoptr i64 %8095 to i32*
  store i32 %8096, i32* %8100
  store %struct.Memory* %loadMem_43aaaa, %struct.Memory** %MEMORY
  %loadMem_43aaad = load %struct.Memory*, %struct.Memory** %MEMORY
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8102 = getelementptr inbounds %struct.GPR, %struct.GPR* %8101, i32 0, i32 33
  %8103 = getelementptr inbounds %struct.Reg, %struct.Reg* %8102, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %8103 to i64*
  %8104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8105 = getelementptr inbounds %struct.GPR, %struct.GPR* %8104, i32 0, i32 7
  %8106 = getelementptr inbounds %struct.Reg, %struct.Reg* %8105, i32 0, i32 0
  %RDX.i1325 = bitcast %union.anon* %8106 to i64*
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8108 = getelementptr inbounds %struct.GPR, %struct.GPR* %8107, i32 0, i32 15
  %8109 = getelementptr inbounds %struct.Reg, %struct.Reg* %8108, i32 0, i32 0
  %RBP.i1326 = bitcast %union.anon* %8109 to i64*
  %8110 = load i64, i64* %RBP.i1326
  %8111 = sub i64 %8110, 208
  %8112 = load i64, i64* %PC.i1324
  %8113 = add i64 %8112, 7
  store i64 %8113, i64* %PC.i1324
  %8114 = inttoptr i64 %8111 to i64*
  %8115 = load i64, i64* %8114
  store i64 %8115, i64* %RDX.i1325, align 8
  store %struct.Memory* %loadMem_43aaad, %struct.Memory** %MEMORY
  %loadMem_43aab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8117 = getelementptr inbounds %struct.GPR, %struct.GPR* %8116, i32 0, i32 33
  %8118 = getelementptr inbounds %struct.Reg, %struct.Reg* %8117, i32 0, i32 0
  %PC.i1321 = bitcast %union.anon* %8118 to i64*
  %8119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8120 = getelementptr inbounds %struct.GPR, %struct.GPR* %8119, i32 0, i32 1
  %8121 = getelementptr inbounds %struct.Reg, %struct.Reg* %8120, i32 0, i32 0
  %RAX.i1322 = bitcast %union.anon* %8121 to i64*
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8123 = getelementptr inbounds %struct.GPR, %struct.GPR* %8122, i32 0, i32 15
  %8124 = getelementptr inbounds %struct.Reg, %struct.Reg* %8123, i32 0, i32 0
  %RBP.i1323 = bitcast %union.anon* %8124 to i64*
  %8125 = load i64, i64* %RBP.i1323
  %8126 = sub i64 %8125, 96
  %8127 = load i64, i64* %PC.i1321
  %8128 = add i64 %8127, 3
  store i64 %8128, i64* %PC.i1321
  %8129 = inttoptr i64 %8126 to i32*
  %8130 = load i32, i32* %8129
  %8131 = zext i32 %8130 to i64
  store i64 %8131, i64* %RAX.i1322, align 8
  store %struct.Memory* %loadMem_43aab4, %struct.Memory** %MEMORY
  %loadMem_43aab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8133 = getelementptr inbounds %struct.GPR, %struct.GPR* %8132, i32 0, i32 33
  %8134 = getelementptr inbounds %struct.Reg, %struct.Reg* %8133, i32 0, i32 0
  %PC.i1319 = bitcast %union.anon* %8134 to i64*
  %8135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8136 = getelementptr inbounds %struct.GPR, %struct.GPR* %8135, i32 0, i32 1
  %8137 = getelementptr inbounds %struct.Reg, %struct.Reg* %8136, i32 0, i32 0
  %RAX.i1320 = bitcast %union.anon* %8137 to i64*
  %8138 = load i64, i64* %RAX.i1320
  %8139 = load i64, i64* %PC.i1319
  %8140 = add i64 %8139, 2
  store i64 %8140, i64* %PC.i1319
  %8141 = trunc i64 %8138 to i32
  %8142 = shl i32 %8141, 1
  %8143 = icmp slt i32 %8141, 0
  %8144 = icmp slt i32 %8142, 0
  %8145 = xor i1 %8143, %8144
  %8146 = zext i32 %8142 to i64
  store i64 %8146, i64* %RAX.i1320, align 8
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8148 = zext i1 %8143 to i8
  store i8 %8148, i8* %8147, align 1
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8150 = and i32 %8142, 254
  %8151 = call i32 @llvm.ctpop.i32(i32 %8150)
  %8152 = trunc i32 %8151 to i8
  %8153 = and i8 %8152, 1
  %8154 = xor i8 %8153, 1
  store i8 %8154, i8* %8149, align 1
  %8155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8155, align 1
  %8156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8157 = icmp eq i32 %8142, 0
  %8158 = zext i1 %8157 to i8
  store i8 %8158, i8* %8156, align 1
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8160 = lshr i32 %8142, 31
  %8161 = trunc i32 %8160 to i8
  store i8 %8161, i8* %8159, align 1
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8163 = zext i1 %8145 to i8
  store i8 %8163, i8* %8162, align 1
  store %struct.Memory* %loadMem_43aab7, %struct.Memory** %MEMORY
  %loadMem_43aaba = load %struct.Memory*, %struct.Memory** %MEMORY
  %8164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8165 = getelementptr inbounds %struct.GPR, %struct.GPR* %8164, i32 0, i32 33
  %8166 = getelementptr inbounds %struct.Reg, %struct.Reg* %8165, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %8166 to i64*
  %8167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8168 = getelementptr inbounds %struct.GPR, %struct.GPR* %8167, i32 0, i32 1
  %8169 = getelementptr inbounds %struct.Reg, %struct.Reg* %8168, i32 0, i32 0
  %EAX.i1317 = bitcast %union.anon* %8169 to i32*
  %8170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8171 = getelementptr inbounds %struct.GPR, %struct.GPR* %8170, i32 0, i32 9
  %8172 = getelementptr inbounds %struct.Reg, %struct.Reg* %8171, i32 0, i32 0
  %RSI.i1318 = bitcast %union.anon* %8172 to i64*
  %8173 = load i32, i32* %EAX.i1317
  %8174 = zext i32 %8173 to i64
  %8175 = load i64, i64* %PC.i1316
  %8176 = add i64 %8175, 3
  store i64 %8176, i64* %PC.i1316
  %8177 = shl i64 %8174, 32
  %8178 = ashr exact i64 %8177, 32
  store i64 %8178, i64* %RSI.i1318, align 8
  store %struct.Memory* %loadMem_43aaba, %struct.Memory** %MEMORY
  %loadMem_43aabd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8180 = getelementptr inbounds %struct.GPR, %struct.GPR* %8179, i32 0, i32 33
  %8181 = getelementptr inbounds %struct.Reg, %struct.Reg* %8180, i32 0, i32 0
  %PC.i1312 = bitcast %union.anon* %8181 to i64*
  %8182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8183 = getelementptr inbounds %struct.GPR, %struct.GPR* %8182, i32 0, i32 1
  %8184 = getelementptr inbounds %struct.Reg, %struct.Reg* %8183, i32 0, i32 0
  %RAX.i1313 = bitcast %union.anon* %8184 to i64*
  %8185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8186 = getelementptr inbounds %struct.GPR, %struct.GPR* %8185, i32 0, i32 7
  %8187 = getelementptr inbounds %struct.Reg, %struct.Reg* %8186, i32 0, i32 0
  %RDX.i1314 = bitcast %union.anon* %8187 to i64*
  %8188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8189 = getelementptr inbounds %struct.GPR, %struct.GPR* %8188, i32 0, i32 9
  %8190 = getelementptr inbounds %struct.Reg, %struct.Reg* %8189, i32 0, i32 0
  %RSI.i1315 = bitcast %union.anon* %8190 to i64*
  %8191 = load i64, i64* %RDX.i1314
  %8192 = load i64, i64* %RSI.i1315
  %8193 = mul i64 %8192, 2
  %8194 = add i64 %8193, %8191
  %8195 = load i64, i64* %PC.i1312
  %8196 = add i64 %8195, 4
  store i64 %8196, i64* %PC.i1312
  %8197 = inttoptr i64 %8194 to i16*
  %8198 = load i16, i16* %8197
  %8199 = zext i16 %8198 to i64
  store i64 %8199, i64* %RAX.i1313, align 8
  store %struct.Memory* %loadMem_43aabd, %struct.Memory** %MEMORY
  %loadMem_43aac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8201 = getelementptr inbounds %struct.GPR, %struct.GPR* %8200, i32 0, i32 33
  %8202 = getelementptr inbounds %struct.Reg, %struct.Reg* %8201, i32 0, i32 0
  %PC.i1309 = bitcast %union.anon* %8202 to i64*
  %8203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8204 = getelementptr inbounds %struct.GPR, %struct.GPR* %8203, i32 0, i32 1
  %8205 = getelementptr inbounds %struct.Reg, %struct.Reg* %8204, i32 0, i32 0
  %EAX.i1310 = bitcast %union.anon* %8205 to i32*
  %8206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8207 = getelementptr inbounds %struct.GPR, %struct.GPR* %8206, i32 0, i32 15
  %8208 = getelementptr inbounds %struct.Reg, %struct.Reg* %8207, i32 0, i32 0
  %RBP.i1311 = bitcast %union.anon* %8208 to i64*
  %8209 = load i64, i64* %RBP.i1311
  %8210 = sub i64 %8209, 140
  %8211 = load i32, i32* %EAX.i1310
  %8212 = zext i32 %8211 to i64
  %8213 = load i64, i64* %PC.i1309
  %8214 = add i64 %8213, 6
  store i64 %8214, i64* %PC.i1309
  %8215 = inttoptr i64 %8210 to i32*
  store i32 %8211, i32* %8215
  store %struct.Memory* %loadMem_43aac1, %struct.Memory** %MEMORY
  %loadMem_43aac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8217 = getelementptr inbounds %struct.GPR, %struct.GPR* %8216, i32 0, i32 33
  %8218 = getelementptr inbounds %struct.Reg, %struct.Reg* %8217, i32 0, i32 0
  %PC.i1306 = bitcast %union.anon* %8218 to i64*
  %8219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8220 = getelementptr inbounds %struct.GPR, %struct.GPR* %8219, i32 0, i32 7
  %8221 = getelementptr inbounds %struct.Reg, %struct.Reg* %8220, i32 0, i32 0
  %RDX.i1307 = bitcast %union.anon* %8221 to i64*
  %8222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8223 = getelementptr inbounds %struct.GPR, %struct.GPR* %8222, i32 0, i32 15
  %8224 = getelementptr inbounds %struct.Reg, %struct.Reg* %8223, i32 0, i32 0
  %RBP.i1308 = bitcast %union.anon* %8224 to i64*
  %8225 = load i64, i64* %RBP.i1308
  %8226 = sub i64 %8225, 200
  %8227 = load i64, i64* %PC.i1306
  %8228 = add i64 %8227, 7
  store i64 %8228, i64* %PC.i1306
  %8229 = inttoptr i64 %8226 to i64*
  %8230 = load i64, i64* %8229
  store i64 %8230, i64* %RDX.i1307, align 8
  store %struct.Memory* %loadMem_43aac7, %struct.Memory** %MEMORY
  %loadMem_43aace = load %struct.Memory*, %struct.Memory** %MEMORY
  %8231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8232 = getelementptr inbounds %struct.GPR, %struct.GPR* %8231, i32 0, i32 33
  %8233 = getelementptr inbounds %struct.Reg, %struct.Reg* %8232, i32 0, i32 0
  %PC.i1303 = bitcast %union.anon* %8233 to i64*
  %8234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8235 = getelementptr inbounds %struct.GPR, %struct.GPR* %8234, i32 0, i32 5
  %8236 = getelementptr inbounds %struct.Reg, %struct.Reg* %8235, i32 0, i32 0
  %RCX.i1304 = bitcast %union.anon* %8236 to i64*
  %8237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8238 = getelementptr inbounds %struct.GPR, %struct.GPR* %8237, i32 0, i32 15
  %8239 = getelementptr inbounds %struct.Reg, %struct.Reg* %8238, i32 0, i32 0
  %RBP.i1305 = bitcast %union.anon* %8239 to i64*
  %8240 = load i64, i64* %RCX.i1304
  %8241 = load i64, i64* %RBP.i1305
  %8242 = sub i64 %8241, 92
  %8243 = load i64, i64* %PC.i1303
  %8244 = add i64 %8243, 3
  store i64 %8244, i64* %PC.i1303
  %8245 = trunc i64 %8240 to i32
  %8246 = inttoptr i64 %8242 to i32*
  %8247 = load i32, i32* %8246
  %8248 = sub i32 %8245, %8247
  %8249 = zext i32 %8248 to i64
  store i64 %8249, i64* %RCX.i1304, align 8
  %8250 = icmp ult i32 %8245, %8247
  %8251 = zext i1 %8250 to i8
  %8252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8251, i8* %8252, align 1
  %8253 = and i32 %8248, 255
  %8254 = call i32 @llvm.ctpop.i32(i32 %8253)
  %8255 = trunc i32 %8254 to i8
  %8256 = and i8 %8255, 1
  %8257 = xor i8 %8256, 1
  %8258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8257, i8* %8258, align 1
  %8259 = xor i32 %8247, %8245
  %8260 = xor i32 %8259, %8248
  %8261 = lshr i32 %8260, 4
  %8262 = trunc i32 %8261 to i8
  %8263 = and i8 %8262, 1
  %8264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8263, i8* %8264, align 1
  %8265 = icmp eq i32 %8248, 0
  %8266 = zext i1 %8265 to i8
  %8267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8266, i8* %8267, align 1
  %8268 = lshr i32 %8248, 31
  %8269 = trunc i32 %8268 to i8
  %8270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8269, i8* %8270, align 1
  %8271 = lshr i32 %8245, 31
  %8272 = lshr i32 %8247, 31
  %8273 = xor i32 %8272, %8271
  %8274 = xor i32 %8268, %8271
  %8275 = add i32 %8274, %8273
  %8276 = icmp eq i32 %8275, 2
  %8277 = zext i1 %8276 to i8
  %8278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8277, i8* %8278, align 1
  store %struct.Memory* %loadMem_43aace, %struct.Memory** %MEMORY
  %loadMem_43aad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8280 = getelementptr inbounds %struct.GPR, %struct.GPR* %8279, i32 0, i32 33
  %8281 = getelementptr inbounds %struct.Reg, %struct.Reg* %8280, i32 0, i32 0
  %PC.i1300 = bitcast %union.anon* %8281 to i64*
  %8282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8283 = getelementptr inbounds %struct.GPR, %struct.GPR* %8282, i32 0, i32 5
  %8284 = getelementptr inbounds %struct.Reg, %struct.Reg* %8283, i32 0, i32 0
  %ECX.i1301 = bitcast %union.anon* %8284 to i32*
  %8285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8286 = getelementptr inbounds %struct.GPR, %struct.GPR* %8285, i32 0, i32 1
  %8287 = getelementptr inbounds %struct.Reg, %struct.Reg* %8286, i32 0, i32 0
  %RAX.i1302 = bitcast %union.anon* %8287 to i64*
  %8288 = load i32, i32* %ECX.i1301
  %8289 = zext i32 %8288 to i64
  %8290 = load i64, i64* %PC.i1300
  %8291 = add i64 %8290, 3
  store i64 %8291, i64* %PC.i1300
  %8292 = shl i64 %8289, 32
  %8293 = ashr exact i64 %8292, 32
  %8294 = mul i64 3, %8293
  %8295 = trunc i64 %8294 to i32
  %8296 = and i64 %8294, 4294967295
  store i64 %8296, i64* %RAX.i1302, align 8
  %8297 = shl i64 %8294, 32
  %8298 = ashr exact i64 %8297, 32
  %8299 = icmp ne i64 %8298, %8294
  %8300 = zext i1 %8299 to i8
  %8301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8300, i8* %8301, align 1
  %8302 = and i32 %8295, 255
  %8303 = call i32 @llvm.ctpop.i32(i32 %8302)
  %8304 = trunc i32 %8303 to i8
  %8305 = and i8 %8304, 1
  %8306 = xor i8 %8305, 1
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8306, i8* %8307, align 1
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8308, align 1
  %8309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8309, align 1
  %8310 = lshr i32 %8295, 31
  %8311 = trunc i32 %8310 to i8
  %8312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8311, i8* %8312, align 1
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8300, i8* %8313, align 1
  store %struct.Memory* %loadMem_43aad1, %struct.Memory** %MEMORY
  %loadMem_43aad4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8315 = getelementptr inbounds %struct.GPR, %struct.GPR* %8314, i32 0, i32 33
  %8316 = getelementptr inbounds %struct.Reg, %struct.Reg* %8315, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %8316 to i64*
  %8317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8318 = getelementptr inbounds %struct.GPR, %struct.GPR* %8317, i32 0, i32 1
  %8319 = getelementptr inbounds %struct.Reg, %struct.Reg* %8318, i32 0, i32 0
  %EAX.i1298 = bitcast %union.anon* %8319 to i32*
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8321 = getelementptr inbounds %struct.GPR, %struct.GPR* %8320, i32 0, i32 9
  %8322 = getelementptr inbounds %struct.Reg, %struct.Reg* %8321, i32 0, i32 0
  %RSI.i1299 = bitcast %union.anon* %8322 to i64*
  %8323 = load i32, i32* %EAX.i1298
  %8324 = zext i32 %8323 to i64
  %8325 = load i64, i64* %PC.i1297
  %8326 = add i64 %8325, 3
  store i64 %8326, i64* %PC.i1297
  %8327 = shl i64 %8324, 32
  %8328 = ashr exact i64 %8327, 32
  store i64 %8328, i64* %RSI.i1299, align 8
  store %struct.Memory* %loadMem_43aad4, %struct.Memory** %MEMORY
  %loadMem_43aad7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8330 = getelementptr inbounds %struct.GPR, %struct.GPR* %8329, i32 0, i32 33
  %8331 = getelementptr inbounds %struct.Reg, %struct.Reg* %8330, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %8331 to i64*
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8333 = getelementptr inbounds %struct.GPR, %struct.GPR* %8332, i32 0, i32 1
  %8334 = getelementptr inbounds %struct.Reg, %struct.Reg* %8333, i32 0, i32 0
  %RAX.i1294 = bitcast %union.anon* %8334 to i64*
  %8335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8336 = getelementptr inbounds %struct.GPR, %struct.GPR* %8335, i32 0, i32 7
  %8337 = getelementptr inbounds %struct.Reg, %struct.Reg* %8336, i32 0, i32 0
  %RDX.i1295 = bitcast %union.anon* %8337 to i64*
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8339 = getelementptr inbounds %struct.GPR, %struct.GPR* %8338, i32 0, i32 9
  %8340 = getelementptr inbounds %struct.Reg, %struct.Reg* %8339, i32 0, i32 0
  %RSI.i1296 = bitcast %union.anon* %8340 to i64*
  %8341 = load i64, i64* %RDX.i1295
  %8342 = load i64, i64* %RSI.i1296
  %8343 = mul i64 %8342, 2
  %8344 = add i64 %8343, %8341
  %8345 = load i64, i64* %PC.i1293
  %8346 = add i64 %8345, 4
  store i64 %8346, i64* %PC.i1293
  %8347 = inttoptr i64 %8344 to i16*
  %8348 = load i16, i16* %8347
  %8349 = zext i16 %8348 to i64
  store i64 %8349, i64* %RAX.i1294, align 8
  store %struct.Memory* %loadMem_43aad7, %struct.Memory** %MEMORY
  %loadMem_43aadb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8351 = getelementptr inbounds %struct.GPR, %struct.GPR* %8350, i32 0, i32 33
  %8352 = getelementptr inbounds %struct.Reg, %struct.Reg* %8351, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %8352 to i64*
  %8353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8354 = getelementptr inbounds %struct.GPR, %struct.GPR* %8353, i32 0, i32 1
  %8355 = getelementptr inbounds %struct.Reg, %struct.Reg* %8354, i32 0, i32 0
  %EAX.i1291 = bitcast %union.anon* %8355 to i32*
  %8356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8357 = getelementptr inbounds %struct.GPR, %struct.GPR* %8356, i32 0, i32 15
  %8358 = getelementptr inbounds %struct.Reg, %struct.Reg* %8357, i32 0, i32 0
  %RBP.i1292 = bitcast %union.anon* %8358 to i64*
  %8359 = load i64, i64* %RBP.i1292
  %8360 = sub i64 %8359, 148
  %8361 = load i32, i32* %EAX.i1291
  %8362 = zext i32 %8361 to i64
  %8363 = load i64, i64* %PC.i1290
  %8364 = add i64 %8363, 6
  store i64 %8364, i64* %PC.i1290
  %8365 = inttoptr i64 %8360 to i32*
  store i32 %8361, i32* %8365
  store %struct.Memory* %loadMem_43aadb, %struct.Memory** %MEMORY
  %loadMem_43aae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8367 = getelementptr inbounds %struct.GPR, %struct.GPR* %8366, i32 0, i32 33
  %8368 = getelementptr inbounds %struct.Reg, %struct.Reg* %8367, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %8368 to i64*
  %8369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8370 = getelementptr inbounds %struct.GPR, %struct.GPR* %8369, i32 0, i32 7
  %8371 = getelementptr inbounds %struct.Reg, %struct.Reg* %8370, i32 0, i32 0
  %RDX.i1288 = bitcast %union.anon* %8371 to i64*
  %8372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8373 = getelementptr inbounds %struct.GPR, %struct.GPR* %8372, i32 0, i32 15
  %8374 = getelementptr inbounds %struct.Reg, %struct.Reg* %8373, i32 0, i32 0
  %RBP.i1289 = bitcast %union.anon* %8374 to i64*
  %8375 = load i64, i64* %RBP.i1289
  %8376 = sub i64 %8375, 208
  %8377 = load i64, i64* %PC.i1287
  %8378 = add i64 %8377, 7
  store i64 %8378, i64* %PC.i1287
  %8379 = inttoptr i64 %8376 to i64*
  %8380 = load i64, i64* %8379
  store i64 %8380, i64* %RDX.i1288, align 8
  store %struct.Memory* %loadMem_43aae1, %struct.Memory** %MEMORY
  %loadMem_43aae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8382 = getelementptr inbounds %struct.GPR, %struct.GPR* %8381, i32 0, i32 33
  %8383 = getelementptr inbounds %struct.Reg, %struct.Reg* %8382, i32 0, i32 0
  %PC.i1284 = bitcast %union.anon* %8383 to i64*
  %8384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8385 = getelementptr inbounds %struct.GPR, %struct.GPR* %8384, i32 0, i32 1
  %8386 = getelementptr inbounds %struct.Reg, %struct.Reg* %8385, i32 0, i32 0
  %RAX.i1285 = bitcast %union.anon* %8386 to i64*
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8388 = getelementptr inbounds %struct.GPR, %struct.GPR* %8387, i32 0, i32 15
  %8389 = getelementptr inbounds %struct.Reg, %struct.Reg* %8388, i32 0, i32 0
  %RBP.i1286 = bitcast %union.anon* %8389 to i64*
  %8390 = load i64, i64* %RBP.i1286
  %8391 = sub i64 %8390, 96
  %8392 = load i64, i64* %PC.i1284
  %8393 = add i64 %8392, 4
  store i64 %8393, i64* %PC.i1284
  %8394 = inttoptr i64 %8391 to i32*
  %8395 = load i32, i32* %8394
  %8396 = sext i32 %8395 to i64
  %8397 = mul i64 %8396, 3
  %8398 = trunc i64 %8397 to i32
  %8399 = and i64 %8397, 4294967295
  store i64 %8399, i64* %RAX.i1285, align 8
  %8400 = shl i64 %8397, 32
  %8401 = ashr exact i64 %8400, 32
  %8402 = icmp ne i64 %8401, %8397
  %8403 = zext i1 %8402 to i8
  %8404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8403, i8* %8404, align 1
  %8405 = and i32 %8398, 255
  %8406 = call i32 @llvm.ctpop.i32(i32 %8405)
  %8407 = trunc i32 %8406 to i8
  %8408 = and i8 %8407, 1
  %8409 = xor i8 %8408, 1
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8409, i8* %8410, align 1
  %8411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8411, align 1
  %8412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8412, align 1
  %8413 = lshr i32 %8398, 31
  %8414 = trunc i32 %8413 to i8
  %8415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8414, i8* %8415, align 1
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8403, i8* %8416, align 1
  store %struct.Memory* %loadMem_43aae8, %struct.Memory** %MEMORY
  %loadMem_43aaec = load %struct.Memory*, %struct.Memory** %MEMORY
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8418 = getelementptr inbounds %struct.GPR, %struct.GPR* %8417, i32 0, i32 33
  %8419 = getelementptr inbounds %struct.Reg, %struct.Reg* %8418, i32 0, i32 0
  %PC.i1281 = bitcast %union.anon* %8419 to i64*
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8421 = getelementptr inbounds %struct.GPR, %struct.GPR* %8420, i32 0, i32 1
  %8422 = getelementptr inbounds %struct.Reg, %struct.Reg* %8421, i32 0, i32 0
  %EAX.i1282 = bitcast %union.anon* %8422 to i32*
  %8423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8424 = getelementptr inbounds %struct.GPR, %struct.GPR* %8423, i32 0, i32 9
  %8425 = getelementptr inbounds %struct.Reg, %struct.Reg* %8424, i32 0, i32 0
  %RSI.i1283 = bitcast %union.anon* %8425 to i64*
  %8426 = load i32, i32* %EAX.i1282
  %8427 = zext i32 %8426 to i64
  %8428 = load i64, i64* %PC.i1281
  %8429 = add i64 %8428, 3
  store i64 %8429, i64* %PC.i1281
  %8430 = shl i64 %8427, 32
  %8431 = ashr exact i64 %8430, 32
  store i64 %8431, i64* %RSI.i1283, align 8
  store %struct.Memory* %loadMem_43aaec, %struct.Memory** %MEMORY
  %loadMem_43aaef = load %struct.Memory*, %struct.Memory** %MEMORY
  %8432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8433 = getelementptr inbounds %struct.GPR, %struct.GPR* %8432, i32 0, i32 33
  %8434 = getelementptr inbounds %struct.Reg, %struct.Reg* %8433, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %8434 to i64*
  %8435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8436 = getelementptr inbounds %struct.GPR, %struct.GPR* %8435, i32 0, i32 1
  %8437 = getelementptr inbounds %struct.Reg, %struct.Reg* %8436, i32 0, i32 0
  %RAX.i1278 = bitcast %union.anon* %8437 to i64*
  %8438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8439 = getelementptr inbounds %struct.GPR, %struct.GPR* %8438, i32 0, i32 7
  %8440 = getelementptr inbounds %struct.Reg, %struct.Reg* %8439, i32 0, i32 0
  %RDX.i1279 = bitcast %union.anon* %8440 to i64*
  %8441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8442 = getelementptr inbounds %struct.GPR, %struct.GPR* %8441, i32 0, i32 9
  %8443 = getelementptr inbounds %struct.Reg, %struct.Reg* %8442, i32 0, i32 0
  %RSI.i1280 = bitcast %union.anon* %8443 to i64*
  %8444 = load i64, i64* %RDX.i1279
  %8445 = load i64, i64* %RSI.i1280
  %8446 = mul i64 %8445, 2
  %8447 = add i64 %8446, %8444
  %8448 = load i64, i64* %PC.i1277
  %8449 = add i64 %8448, 4
  store i64 %8449, i64* %PC.i1277
  %8450 = inttoptr i64 %8447 to i16*
  %8451 = load i16, i16* %8450
  %8452 = zext i16 %8451 to i64
  store i64 %8452, i64* %RAX.i1278, align 8
  store %struct.Memory* %loadMem_43aaef, %struct.Memory** %MEMORY
  %loadMem_43aaf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8454 = getelementptr inbounds %struct.GPR, %struct.GPR* %8453, i32 0, i32 33
  %8455 = getelementptr inbounds %struct.Reg, %struct.Reg* %8454, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %8455 to i64*
  %8456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8457 = getelementptr inbounds %struct.GPR, %struct.GPR* %8456, i32 0, i32 1
  %8458 = getelementptr inbounds %struct.Reg, %struct.Reg* %8457, i32 0, i32 0
  %EAX.i1275 = bitcast %union.anon* %8458 to i32*
  %8459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8460 = getelementptr inbounds %struct.GPR, %struct.GPR* %8459, i32 0, i32 15
  %8461 = getelementptr inbounds %struct.Reg, %struct.Reg* %8460, i32 0, i32 0
  %RBP.i1276 = bitcast %union.anon* %8461 to i64*
  %8462 = load i64, i64* %RBP.i1276
  %8463 = sub i64 %8462, 152
  %8464 = load i32, i32* %EAX.i1275
  %8465 = zext i32 %8464 to i64
  %8466 = load i64, i64* %PC.i1274
  %8467 = add i64 %8466, 6
  store i64 %8467, i64* %PC.i1274
  %8468 = inttoptr i64 %8463 to i32*
  store i32 %8464, i32* %8468
  store %struct.Memory* %loadMem_43aaf3, %struct.Memory** %MEMORY
  %loadMem_43aaf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8470 = getelementptr inbounds %struct.GPR, %struct.GPR* %8469, i32 0, i32 33
  %8471 = getelementptr inbounds %struct.Reg, %struct.Reg* %8470, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %8471 to i64*
  %8472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8473 = getelementptr inbounds %struct.GPR, %struct.GPR* %8472, i32 0, i32 7
  %8474 = getelementptr inbounds %struct.Reg, %struct.Reg* %8473, i32 0, i32 0
  %RDX.i1272 = bitcast %union.anon* %8474 to i64*
  %8475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8476 = getelementptr inbounds %struct.GPR, %struct.GPR* %8475, i32 0, i32 15
  %8477 = getelementptr inbounds %struct.Reg, %struct.Reg* %8476, i32 0, i32 0
  %RBP.i1273 = bitcast %union.anon* %8477 to i64*
  %8478 = load i64, i64* %RBP.i1273
  %8479 = sub i64 %8478, 32
  %8480 = load i64, i64* %PC.i1271
  %8481 = add i64 %8480, 4
  store i64 %8481, i64* %PC.i1271
  %8482 = inttoptr i64 %8479 to i64*
  %8483 = load i64, i64* %8482
  store i64 %8483, i64* %RDX.i1272, align 8
  store %struct.Memory* %loadMem_43aaf9, %struct.Memory** %MEMORY
  %loadMem_43aafd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8485 = getelementptr inbounds %struct.GPR, %struct.GPR* %8484, i32 0, i32 33
  %8486 = getelementptr inbounds %struct.Reg, %struct.Reg* %8485, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %8486 to i64*
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 9
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %RSI.i1269 = bitcast %union.anon* %8489 to i64*
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8491 = getelementptr inbounds %struct.GPR, %struct.GPR* %8490, i32 0, i32 15
  %8492 = getelementptr inbounds %struct.Reg, %struct.Reg* %8491, i32 0, i32 0
  %RBP.i1270 = bitcast %union.anon* %8492 to i64*
  %8493 = load i64, i64* %RBP.i1270
  %8494 = sub i64 %8493, 188
  %8495 = load i64, i64* %PC.i1268
  %8496 = add i64 %8495, 7
  store i64 %8496, i64* %PC.i1268
  %8497 = inttoptr i64 %8494 to i32*
  %8498 = load i32, i32* %8497
  %8499 = sext i32 %8498 to i64
  store i64 %8499, i64* %RSI.i1269, align 8
  store %struct.Memory* %loadMem_43aafd, %struct.Memory** %MEMORY
  %loadMem_43ab04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8501 = getelementptr inbounds %struct.GPR, %struct.GPR* %8500, i32 0, i32 33
  %8502 = getelementptr inbounds %struct.Reg, %struct.Reg* %8501, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %8502 to i64*
  %8503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8504 = getelementptr inbounds %struct.GPR, %struct.GPR* %8503, i32 0, i32 1
  %8505 = getelementptr inbounds %struct.Reg, %struct.Reg* %8504, i32 0, i32 0
  %RAX.i1265 = bitcast %union.anon* %8505 to i64*
  %8506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8507 = getelementptr inbounds %struct.GPR, %struct.GPR* %8506, i32 0, i32 7
  %8508 = getelementptr inbounds %struct.Reg, %struct.Reg* %8507, i32 0, i32 0
  %RDX.i1266 = bitcast %union.anon* %8508 to i64*
  %8509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8510 = getelementptr inbounds %struct.GPR, %struct.GPR* %8509, i32 0, i32 9
  %8511 = getelementptr inbounds %struct.Reg, %struct.Reg* %8510, i32 0, i32 0
  %RSI.i1267 = bitcast %union.anon* %8511 to i64*
  %8512 = load i64, i64* %RDX.i1266
  %8513 = load i64, i64* %RSI.i1267
  %8514 = add i64 %8513, %8512
  %8515 = load i64, i64* %PC.i1264
  %8516 = add i64 %8515, 4
  store i64 %8516, i64* %PC.i1264
  %8517 = inttoptr i64 %8514 to i8*
  %8518 = load i8, i8* %8517
  %8519 = zext i8 %8518 to i64
  store i64 %8519, i64* %RAX.i1265, align 8
  store %struct.Memory* %loadMem_43ab04, %struct.Memory** %MEMORY
  %loadMem_43ab08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8521 = getelementptr inbounds %struct.GPR, %struct.GPR* %8520, i32 0, i32 33
  %8522 = getelementptr inbounds %struct.Reg, %struct.Reg* %8521, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %8522 to i64*
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8524 = getelementptr inbounds %struct.GPR, %struct.GPR* %8523, i32 0, i32 1
  %8525 = getelementptr inbounds %struct.Reg, %struct.Reg* %8524, i32 0, i32 0
  %EAX.i1262 = bitcast %union.anon* %8525 to i32*
  %8526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8527 = getelementptr inbounds %struct.GPR, %struct.GPR* %8526, i32 0, i32 15
  %8528 = getelementptr inbounds %struct.Reg, %struct.Reg* %8527, i32 0, i32 0
  %RBP.i1263 = bitcast %union.anon* %8528 to i64*
  %8529 = load i64, i64* %RBP.i1263
  %8530 = sub i64 %8529, 88
  %8531 = load i32, i32* %EAX.i1262
  %8532 = zext i32 %8531 to i64
  %8533 = load i64, i64* %PC.i1261
  %8534 = add i64 %8533, 3
  store i64 %8534, i64* %PC.i1261
  %8535 = inttoptr i64 %8530 to i32*
  store i32 %8531, i32* %8535
  store %struct.Memory* %loadMem_43ab08, %struct.Memory** %MEMORY
  %loadMem_43ab0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8537 = getelementptr inbounds %struct.GPR, %struct.GPR* %8536, i32 0, i32 33
  %8538 = getelementptr inbounds %struct.Reg, %struct.Reg* %8537, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %8538 to i64*
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8540 = getelementptr inbounds %struct.GPR, %struct.GPR* %8539, i32 0, i32 1
  %8541 = getelementptr inbounds %struct.Reg, %struct.Reg* %8540, i32 0, i32 0
  %EAX.i1260 = bitcast %union.anon* %8541 to i32*
  %8542 = load i32, i32* %EAX.i1260
  %8543 = zext i32 %8542 to i64
  %8544 = load i64, i64* %PC.i1259
  %8545 = add i64 %8544, 3
  store i64 %8545, i64* %PC.i1259
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8546, align 1
  %8547 = and i32 %8542, 255
  %8548 = call i32 @llvm.ctpop.i32(i32 %8547)
  %8549 = trunc i32 %8548 to i8
  %8550 = and i8 %8549, 1
  %8551 = xor i8 %8550, 1
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8551, i8* %8552, align 1
  %8553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8553, align 1
  %8554 = icmp eq i32 %8542, 0
  %8555 = zext i1 %8554 to i8
  %8556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8555, i8* %8556, align 1
  %8557 = lshr i32 %8542, 31
  %8558 = trunc i32 %8557 to i8
  %8559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8558, i8* %8559, align 1
  %8560 = lshr i32 %8542, 31
  %8561 = xor i32 %8557, %8560
  %8562 = add i32 %8561, %8560
  %8563 = icmp eq i32 %8562, 2
  %8564 = zext i1 %8563 to i8
  %8565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8564, i8* %8565, align 1
  store %struct.Memory* %loadMem_43ab0b, %struct.Memory** %MEMORY
  %loadMem_43ab0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8567 = getelementptr inbounds %struct.GPR, %struct.GPR* %8566, i32 0, i32 33
  %8568 = getelementptr inbounds %struct.Reg, %struct.Reg* %8567, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %8568 to i64*
  %8569 = load i64, i64* %PC.i1258
  %8570 = add i64 %8569, 2077
  %8571 = load i64, i64* %PC.i1258
  %8572 = add i64 %8571, 6
  %8573 = load i64, i64* %PC.i1258
  %8574 = add i64 %8573, 6
  store i64 %8574, i64* %PC.i1258
  %8575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8576 = load i8, i8* %8575, align 1
  store i8 %8576, i8* %BRANCH_TAKEN, align 1
  %8577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8578 = icmp ne i8 %8576, 0
  %8579 = select i1 %8578, i64 %8570, i64 %8572
  store i64 %8579, i64* %8577, align 8
  store %struct.Memory* %loadMem_43ab0e, %struct.Memory** %MEMORY
  %loadBr_43ab0e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ab0e = icmp eq i8 %loadBr_43ab0e, 1
  br i1 %cmpBr_43ab0e, label %block_.L_43b32b, label %block_43ab14

block_43ab14:                                     ; preds = %block_.L_43a9e7
  %loadMem_43ab14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8581 = getelementptr inbounds %struct.GPR, %struct.GPR* %8580, i32 0, i32 33
  %8582 = getelementptr inbounds %struct.Reg, %struct.Reg* %8581, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %8582 to i64*
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8584 = getelementptr inbounds %struct.GPR, %struct.GPR* %8583, i32 0, i32 1
  %8585 = getelementptr inbounds %struct.Reg, %struct.Reg* %8584, i32 0, i32 0
  %RAX.i1256 = bitcast %union.anon* %8585 to i64*
  %8586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8587 = getelementptr inbounds %struct.GPR, %struct.GPR* %8586, i32 0, i32 15
  %8588 = getelementptr inbounds %struct.Reg, %struct.Reg* %8587, i32 0, i32 0
  %RBP.i1257 = bitcast %union.anon* %8588 to i64*
  %8589 = load i64, i64* %RBP.i1257
  %8590 = sub i64 %8589, 132
  %8591 = load i64, i64* %PC.i1255
  %8592 = add i64 %8591, 6
  store i64 %8592, i64* %PC.i1255
  %8593 = inttoptr i64 %8590 to i32*
  %8594 = load i32, i32* %8593
  %8595 = zext i32 %8594 to i64
  store i64 %8595, i64* %RAX.i1256, align 8
  store %struct.Memory* %loadMem_43ab14, %struct.Memory** %MEMORY
  %loadMem_43ab1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8597 = getelementptr inbounds %struct.GPR, %struct.GPR* %8596, i32 0, i32 33
  %8598 = getelementptr inbounds %struct.Reg, %struct.Reg* %8597, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %8598 to i64*
  %8599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8600 = getelementptr inbounds %struct.GPR, %struct.GPR* %8599, i32 0, i32 1
  %8601 = getelementptr inbounds %struct.Reg, %struct.Reg* %8600, i32 0, i32 0
  %RAX.i1253 = bitcast %union.anon* %8601 to i64*
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8603 = getelementptr inbounds %struct.GPR, %struct.GPR* %8602, i32 0, i32 15
  %8604 = getelementptr inbounds %struct.Reg, %struct.Reg* %8603, i32 0, i32 0
  %RBP.i1254 = bitcast %union.anon* %8604 to i64*
  %8605 = load i64, i64* %RAX.i1253
  %8606 = load i64, i64* %RBP.i1254
  %8607 = sub i64 %8606, 128
  %8608 = load i64, i64* %PC.i1252
  %8609 = add i64 %8608, 3
  store i64 %8609, i64* %PC.i1252
  %8610 = trunc i64 %8605 to i32
  %8611 = inttoptr i64 %8607 to i32*
  %8612 = load i32, i32* %8611
  %8613 = sub i32 %8610, %8612
  %8614 = zext i32 %8613 to i64
  store i64 %8614, i64* %RAX.i1253, align 8
  %8615 = icmp ult i32 %8610, %8612
  %8616 = zext i1 %8615 to i8
  %8617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8616, i8* %8617, align 1
  %8618 = and i32 %8613, 255
  %8619 = call i32 @llvm.ctpop.i32(i32 %8618)
  %8620 = trunc i32 %8619 to i8
  %8621 = and i8 %8620, 1
  %8622 = xor i8 %8621, 1
  %8623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8622, i8* %8623, align 1
  %8624 = xor i32 %8612, %8610
  %8625 = xor i32 %8624, %8613
  %8626 = lshr i32 %8625, 4
  %8627 = trunc i32 %8626 to i8
  %8628 = and i8 %8627, 1
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8628, i8* %8629, align 1
  %8630 = icmp eq i32 %8613, 0
  %8631 = zext i1 %8630 to i8
  %8632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8631, i8* %8632, align 1
  %8633 = lshr i32 %8613, 31
  %8634 = trunc i32 %8633 to i8
  %8635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8634, i8* %8635, align 1
  %8636 = lshr i32 %8610, 31
  %8637 = lshr i32 %8612, 31
  %8638 = xor i32 %8637, %8636
  %8639 = xor i32 %8633, %8636
  %8640 = add i32 %8639, %8638
  %8641 = icmp eq i32 %8640, 2
  %8642 = zext i1 %8641 to i8
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8642, i8* %8643, align 1
  store %struct.Memory* %loadMem_43ab1a, %struct.Memory** %MEMORY
  %loadMem_43ab1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8645 = getelementptr inbounds %struct.GPR, %struct.GPR* %8644, i32 0, i32 33
  %8646 = getelementptr inbounds %struct.Reg, %struct.Reg* %8645, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %8646 to i64*
  %8647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8648 = getelementptr inbounds %struct.GPR, %struct.GPR* %8647, i32 0, i32 1
  %8649 = getelementptr inbounds %struct.Reg, %struct.Reg* %8648, i32 0, i32 0
  %EAX.i1250 = bitcast %union.anon* %8649 to i32*
  %8650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8651 = getelementptr inbounds %struct.GPR, %struct.GPR* %8650, i32 0, i32 15
  %8652 = getelementptr inbounds %struct.Reg, %struct.Reg* %8651, i32 0, i32 0
  %RBP.i1251 = bitcast %union.anon* %8652 to i64*
  %8653 = load i64, i64* %RBP.i1251
  %8654 = sub i64 %8653, 108
  %8655 = load i32, i32* %EAX.i1250
  %8656 = zext i32 %8655 to i64
  %8657 = load i64, i64* %PC.i1249
  %8658 = add i64 %8657, 3
  store i64 %8658, i64* %PC.i1249
  %8659 = inttoptr i64 %8654 to i32*
  store i32 %8655, i32* %8659
  store %struct.Memory* %loadMem_43ab1d, %struct.Memory** %MEMORY
  %loadMem_43ab20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8661 = getelementptr inbounds %struct.GPR, %struct.GPR* %8660, i32 0, i32 33
  %8662 = getelementptr inbounds %struct.Reg, %struct.Reg* %8661, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %8662 to i64*
  %8663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8664 = getelementptr inbounds %struct.GPR, %struct.GPR* %8663, i32 0, i32 1
  %8665 = getelementptr inbounds %struct.Reg, %struct.Reg* %8664, i32 0, i32 0
  %EAX.i1247 = bitcast %union.anon* %8665 to i32*
  %8666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8667 = getelementptr inbounds %struct.GPR, %struct.GPR* %8666, i32 0, i32 11
  %8668 = getelementptr inbounds %struct.Reg, %struct.Reg* %8667, i32 0, i32 0
  %RDI.i1248 = bitcast %union.anon* %8668 to i64*
  %8669 = load i32, i32* %EAX.i1247
  %8670 = zext i32 %8669 to i64
  %8671 = load i64, i64* %PC.i1246
  %8672 = add i64 %8671, 2
  store i64 %8672, i64* %PC.i1246
  %8673 = and i64 %8670, 4294967295
  store i64 %8673, i64* %RDI.i1248, align 8
  store %struct.Memory* %loadMem_43ab20, %struct.Memory** %MEMORY
  %loadMem1_43ab22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8675 = getelementptr inbounds %struct.GPR, %struct.GPR* %8674, i32 0, i32 33
  %8676 = getelementptr inbounds %struct.Reg, %struct.Reg* %8675, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %8676 to i64*
  %8677 = load i64, i64* %PC.i1245
  %8678 = add i64 %8677, -236322
  %8679 = load i64, i64* %PC.i1245
  %8680 = add i64 %8679, 5
  %8681 = load i64, i64* %PC.i1245
  %8682 = add i64 %8681, 5
  store i64 %8682, i64* %PC.i1245
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8684 = load i64, i64* %8683, align 8
  %8685 = add i64 %8684, -8
  %8686 = inttoptr i64 %8685 to i64*
  store i64 %8680, i64* %8686
  store i64 %8685, i64* %8683, align 8
  %8687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8678, i64* %8687, align 8
  store %struct.Memory* %loadMem1_43ab22, %struct.Memory** %MEMORY
  %loadMem2_43ab22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ab22 = load i64, i64* %3
  %8688 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_43ab22)
  store %struct.Memory* %8688, %struct.Memory** %MEMORY
  %loadMem_43ab27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8690 = getelementptr inbounds %struct.GPR, %struct.GPR* %8689, i32 0, i32 33
  %8691 = getelementptr inbounds %struct.Reg, %struct.Reg* %8690, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %8691 to i64*
  %8692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8693 = getelementptr inbounds %struct.GPR, %struct.GPR* %8692, i32 0, i32 1
  %8694 = getelementptr inbounds %struct.Reg, %struct.Reg* %8693, i32 0, i32 0
  %EAX.i1240 = bitcast %union.anon* %8694 to i32*
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8696 = getelementptr inbounds %struct.GPR, %struct.GPR* %8695, i32 0, i32 15
  %8697 = getelementptr inbounds %struct.Reg, %struct.Reg* %8696, i32 0, i32 0
  %RBP.i1241 = bitcast %union.anon* %8697 to i64*
  %8698 = load i64, i64* %RBP.i1241
  %8699 = sub i64 %8698, 116
  %8700 = load i32, i32* %EAX.i1240
  %8701 = zext i32 %8700 to i64
  %8702 = load i64, i64* %PC.i1239
  %8703 = add i64 %8702, 3
  store i64 %8703, i64* %PC.i1239
  %8704 = inttoptr i64 %8699 to i32*
  store i32 %8700, i32* %8704
  store %struct.Memory* %loadMem_43ab27, %struct.Memory** %MEMORY
  %loadMem_43ab2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8706 = getelementptr inbounds %struct.GPR, %struct.GPR* %8705, i32 0, i32 33
  %8707 = getelementptr inbounds %struct.Reg, %struct.Reg* %8706, i32 0, i32 0
  %PC.i1236 = bitcast %union.anon* %8707 to i64*
  %8708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8709 = getelementptr inbounds %struct.GPR, %struct.GPR* %8708, i32 0, i32 1
  %8710 = getelementptr inbounds %struct.Reg, %struct.Reg* %8709, i32 0, i32 0
  %RAX.i1237 = bitcast %union.anon* %8710 to i64*
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8712 = getelementptr inbounds %struct.GPR, %struct.GPR* %8711, i32 0, i32 15
  %8713 = getelementptr inbounds %struct.Reg, %struct.Reg* %8712, i32 0, i32 0
  %RBP.i1238 = bitcast %union.anon* %8713 to i64*
  %8714 = load i64, i64* %RBP.i1238
  %8715 = sub i64 %8714, 116
  %8716 = load i64, i64* %PC.i1236
  %8717 = add i64 %8716, 3
  store i64 %8717, i64* %PC.i1236
  %8718 = inttoptr i64 %8715 to i32*
  %8719 = load i32, i32* %8718
  %8720 = zext i32 %8719 to i64
  store i64 %8720, i64* %RAX.i1237, align 8
  store %struct.Memory* %loadMem_43ab2a, %struct.Memory** %MEMORY
  %loadMem_43ab2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8722 = getelementptr inbounds %struct.GPR, %struct.GPR* %8721, i32 0, i32 33
  %8723 = getelementptr inbounds %struct.Reg, %struct.Reg* %8722, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %8723 to i64*
  %8724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8725 = getelementptr inbounds %struct.GPR, %struct.GPR* %8724, i32 0, i32 1
  %8726 = getelementptr inbounds %struct.Reg, %struct.Reg* %8725, i32 0, i32 0
  %EAX.i1234 = bitcast %union.anon* %8726 to i32*
  %8727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8728 = getelementptr inbounds %struct.GPR, %struct.GPR* %8727, i32 0, i32 15
  %8729 = getelementptr inbounds %struct.Reg, %struct.Reg* %8728, i32 0, i32 0
  %RBP.i1235 = bitcast %union.anon* %8729 to i64*
  %8730 = load i32, i32* %EAX.i1234
  %8731 = zext i32 %8730 to i64
  %8732 = load i64, i64* %RBP.i1235
  %8733 = sub i64 %8732, 156
  %8734 = load i64, i64* %PC.i1233
  %8735 = add i64 %8734, 6
  store i64 %8735, i64* %PC.i1233
  %8736 = inttoptr i64 %8733 to i32*
  %8737 = load i32, i32* %8736
  %8738 = sub i32 %8730, %8737
  %8739 = icmp ult i32 %8730, %8737
  %8740 = zext i1 %8739 to i8
  %8741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8740, i8* %8741, align 1
  %8742 = and i32 %8738, 255
  %8743 = call i32 @llvm.ctpop.i32(i32 %8742)
  %8744 = trunc i32 %8743 to i8
  %8745 = and i8 %8744, 1
  %8746 = xor i8 %8745, 1
  %8747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8746, i8* %8747, align 1
  %8748 = xor i32 %8737, %8730
  %8749 = xor i32 %8748, %8738
  %8750 = lshr i32 %8749, 4
  %8751 = trunc i32 %8750 to i8
  %8752 = and i8 %8751, 1
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8752, i8* %8753, align 1
  %8754 = icmp eq i32 %8738, 0
  %8755 = zext i1 %8754 to i8
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8755, i8* %8756, align 1
  %8757 = lshr i32 %8738, 31
  %8758 = trunc i32 %8757 to i8
  %8759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8758, i8* %8759, align 1
  %8760 = lshr i32 %8730, 31
  %8761 = lshr i32 %8737, 31
  %8762 = xor i32 %8761, %8760
  %8763 = xor i32 %8757, %8760
  %8764 = add i32 %8763, %8762
  %8765 = icmp eq i32 %8764, 2
  %8766 = zext i1 %8765 to i8
  %8767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8766, i8* %8767, align 1
  store %struct.Memory* %loadMem_43ab2d, %struct.Memory** %MEMORY
  %loadMem_43ab33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8769 = getelementptr inbounds %struct.GPR, %struct.GPR* %8768, i32 0, i32 33
  %8770 = getelementptr inbounds %struct.Reg, %struct.Reg* %8769, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %8770 to i64*
  %8771 = load i64, i64* %PC.i1232
  %8772 = add i64 %8771, 2035
  %8773 = load i64, i64* %PC.i1232
  %8774 = add i64 %8773, 6
  %8775 = load i64, i64* %PC.i1232
  %8776 = add i64 %8775, 6
  store i64 %8776, i64* %PC.i1232
  %8777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8778 = load i8, i8* %8777, align 1
  %8779 = icmp ne i8 %8778, 0
  %8780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8781 = load i8, i8* %8780, align 1
  %8782 = icmp ne i8 %8781, 0
  %8783 = xor i1 %8779, %8782
  %8784 = xor i1 %8783, true
  %8785 = zext i1 %8784 to i8
  store i8 %8785, i8* %BRANCH_TAKEN, align 1
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8787 = select i1 %8783, i64 %8774, i64 %8772
  store i64 %8787, i64* %8786, align 8
  store %struct.Memory* %loadMem_43ab33, %struct.Memory** %MEMORY
  %loadBr_43ab33 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ab33 = icmp eq i8 %loadBr_43ab33, 1
  br i1 %cmpBr_43ab33, label %block_.L_43b326, label %block_43ab39

block_43ab39:                                     ; preds = %block_43ab14
  %loadMem_43ab39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8789 = getelementptr inbounds %struct.GPR, %struct.GPR* %8788, i32 0, i32 33
  %8790 = getelementptr inbounds %struct.Reg, %struct.Reg* %8789, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %8790 to i64*
  %8791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8792 = getelementptr inbounds %struct.GPR, %struct.GPR* %8791, i32 0, i32 1
  %8793 = getelementptr inbounds %struct.Reg, %struct.Reg* %8792, i32 0, i32 0
  %RAX.i1230 = bitcast %union.anon* %8793 to i64*
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8795 = getelementptr inbounds %struct.GPR, %struct.GPR* %8794, i32 0, i32 15
  %8796 = getelementptr inbounds %struct.Reg, %struct.Reg* %8795, i32 0, i32 0
  %RBP.i1231 = bitcast %union.anon* %8796 to i64*
  %8797 = load i64, i64* %RBP.i1231
  %8798 = sub i64 %8797, 168
  %8799 = load i64, i64* %PC.i1229
  %8800 = add i64 %8799, 7
  store i64 %8800, i64* %PC.i1229
  %8801 = inttoptr i64 %8798 to i64*
  %8802 = load i64, i64* %8801
  store i64 %8802, i64* %RAX.i1230, align 8
  store %struct.Memory* %loadMem_43ab39, %struct.Memory** %MEMORY
  %loadMem_43ab40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8804 = getelementptr inbounds %struct.GPR, %struct.GPR* %8803, i32 0, i32 33
  %8805 = getelementptr inbounds %struct.Reg, %struct.Reg* %8804, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %8805 to i64*
  %8806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8807 = getelementptr inbounds %struct.GPR, %struct.GPR* %8806, i32 0, i32 5
  %8808 = getelementptr inbounds %struct.Reg, %struct.Reg* %8807, i32 0, i32 0
  %RCX.i1227 = bitcast %union.anon* %8808 to i64*
  %8809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8810 = getelementptr inbounds %struct.GPR, %struct.GPR* %8809, i32 0, i32 15
  %8811 = getelementptr inbounds %struct.Reg, %struct.Reg* %8810, i32 0, i32 0
  %RBP.i1228 = bitcast %union.anon* %8811 to i64*
  %8812 = load i64, i64* %RBP.i1228
  %8813 = sub i64 %8812, 88
  %8814 = load i64, i64* %PC.i1226
  %8815 = add i64 %8814, 4
  store i64 %8815, i64* %PC.i1226
  %8816 = inttoptr i64 %8813 to i32*
  %8817 = load i32, i32* %8816
  %8818 = sext i32 %8817 to i64
  store i64 %8818, i64* %RCX.i1227, align 8
  store %struct.Memory* %loadMem_43ab40, %struct.Memory** %MEMORY
  %loadMem_43ab44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8820 = getelementptr inbounds %struct.GPR, %struct.GPR* %8819, i32 0, i32 33
  %8821 = getelementptr inbounds %struct.Reg, %struct.Reg* %8820, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %8821 to i64*
  %8822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8823 = getelementptr inbounds %struct.GPR, %struct.GPR* %8822, i32 0, i32 1
  %8824 = getelementptr inbounds %struct.Reg, %struct.Reg* %8823, i32 0, i32 0
  %RAX.i1223 = bitcast %union.anon* %8824 to i64*
  %8825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8826 = getelementptr inbounds %struct.GPR, %struct.GPR* %8825, i32 0, i32 5
  %8827 = getelementptr inbounds %struct.Reg, %struct.Reg* %8826, i32 0, i32 0
  %RCX.i1224 = bitcast %union.anon* %8827 to i64*
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8829 = getelementptr inbounds %struct.GPR, %struct.GPR* %8828, i32 0, i32 7
  %8830 = getelementptr inbounds %struct.Reg, %struct.Reg* %8829, i32 0, i32 0
  %RDX.i1225 = bitcast %union.anon* %8830 to i64*
  %8831 = load i64, i64* %RAX.i1223
  %8832 = load i64, i64* %RCX.i1224
  %8833 = add i64 %8832, %8831
  %8834 = load i64, i64* %PC.i1222
  %8835 = add i64 %8834, 4
  store i64 %8835, i64* %PC.i1222
  %8836 = inttoptr i64 %8833 to i8*
  %8837 = load i8, i8* %8836
  %8838 = zext i8 %8837 to i64
  store i64 %8838, i64* %RDX.i1225, align 8
  store %struct.Memory* %loadMem_43ab44, %struct.Memory** %MEMORY
  %loadMem_43ab48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8840 = getelementptr inbounds %struct.GPR, %struct.GPR* %8839, i32 0, i32 33
  %8841 = getelementptr inbounds %struct.Reg, %struct.Reg* %8840, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %8841 to i64*
  %8842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8843 = getelementptr inbounds %struct.GPR, %struct.GPR* %8842, i32 0, i32 7
  %8844 = getelementptr inbounds %struct.Reg, %struct.Reg* %8843, i32 0, i32 0
  %RDX.i1220 = bitcast %union.anon* %8844 to i64*
  %8845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8846 = getelementptr inbounds %struct.GPR, %struct.GPR* %8845, i32 0, i32 15
  %8847 = getelementptr inbounds %struct.Reg, %struct.Reg* %8846, i32 0, i32 0
  %RBP.i1221 = bitcast %union.anon* %8847 to i64*
  %8848 = load i64, i64* %RDX.i1220
  %8849 = load i64, i64* %RBP.i1221
  %8850 = sub i64 %8849, 300
  %8851 = load i64, i64* %PC.i1219
  %8852 = add i64 %8851, 7
  store i64 %8852, i64* %PC.i1219
  %8853 = inttoptr i64 %8850 to i32*
  %8854 = load i32, i32* %8853
  %8855 = shl i64 %8848, 32
  %8856 = ashr exact i64 %8855, 32
  %8857 = sext i32 %8854 to i64
  %8858 = mul i64 %8857, %8856
  %8859 = trunc i64 %8858 to i32
  %8860 = and i64 %8858, 4294967295
  store i64 %8860, i64* %RDX.i1220, align 8
  %8861 = shl i64 %8858, 32
  %8862 = ashr exact i64 %8861, 32
  %8863 = icmp ne i64 %8862, %8858
  %8864 = zext i1 %8863 to i8
  %8865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8864, i8* %8865, align 1
  %8866 = and i32 %8859, 255
  %8867 = call i32 @llvm.ctpop.i32(i32 %8866)
  %8868 = trunc i32 %8867 to i8
  %8869 = and i8 %8868, 1
  %8870 = xor i8 %8869, 1
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8870, i8* %8871, align 1
  %8872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8872, align 1
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8873, align 1
  %8874 = lshr i32 %8859, 31
  %8875 = trunc i32 %8874 to i8
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8875, i8* %8876, align 1
  %8877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8864, i8* %8877, align 1
  store %struct.Memory* %loadMem_43ab48, %struct.Memory** %MEMORY
  %loadMem_43ab4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8879 = getelementptr inbounds %struct.GPR, %struct.GPR* %8878, i32 0, i32 33
  %8880 = getelementptr inbounds %struct.Reg, %struct.Reg* %8879, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %8880 to i64*
  %8881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8882 = getelementptr inbounds %struct.GPR, %struct.GPR* %8881, i32 0, i32 7
  %8883 = getelementptr inbounds %struct.Reg, %struct.Reg* %8882, i32 0, i32 0
  %EDX.i1217 = bitcast %union.anon* %8883 to i32*
  %8884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8885 = getelementptr inbounds %struct.GPR, %struct.GPR* %8884, i32 0, i32 15
  %8886 = getelementptr inbounds %struct.Reg, %struct.Reg* %8885, i32 0, i32 0
  %RBP.i1218 = bitcast %union.anon* %8886 to i64*
  %8887 = load i64, i64* %RBP.i1218
  %8888 = sub i64 %8887, 100
  %8889 = load i32, i32* %EDX.i1217
  %8890 = zext i32 %8889 to i64
  %8891 = load i64, i64* %PC.i1216
  %8892 = add i64 %8891, 3
  store i64 %8892, i64* %PC.i1216
  %8893 = inttoptr i64 %8888 to i32*
  store i32 %8889, i32* %8893
  store %struct.Memory* %loadMem_43ab4f, %struct.Memory** %MEMORY
  %loadMem_43ab52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8895 = getelementptr inbounds %struct.GPR, %struct.GPR* %8894, i32 0, i32 33
  %8896 = getelementptr inbounds %struct.Reg, %struct.Reg* %8895, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %8896 to i64*
  %8897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8898 = getelementptr inbounds %struct.GPR, %struct.GPR* %8897, i32 0, i32 7
  %8899 = getelementptr inbounds %struct.Reg, %struct.Reg* %8898, i32 0, i32 0
  %RDX.i1214 = bitcast %union.anon* %8899 to i64*
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8901 = getelementptr inbounds %struct.GPR, %struct.GPR* %8900, i32 0, i32 15
  %8902 = getelementptr inbounds %struct.Reg, %struct.Reg* %8901, i32 0, i32 0
  %RBP.i1215 = bitcast %union.anon* %8902 to i64*
  %8903 = load i64, i64* %RBP.i1215
  %8904 = sub i64 %8903, 132
  %8905 = load i64, i64* %PC.i1213
  %8906 = add i64 %8905, 6
  store i64 %8906, i64* %PC.i1213
  %8907 = inttoptr i64 %8904 to i32*
  %8908 = load i32, i32* %8907
  %8909 = zext i32 %8908 to i64
  store i64 %8909, i64* %RDX.i1214, align 8
  store %struct.Memory* %loadMem_43ab52, %struct.Memory** %MEMORY
  %loadMem_43ab58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8911 = getelementptr inbounds %struct.GPR, %struct.GPR* %8910, i32 0, i32 33
  %8912 = getelementptr inbounds %struct.Reg, %struct.Reg* %8911, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %8912 to i64*
  %8913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8914 = getelementptr inbounds %struct.GPR, %struct.GPR* %8913, i32 0, i32 7
  %8915 = getelementptr inbounds %struct.Reg, %struct.Reg* %8914, i32 0, i32 0
  %RDX.i1211 = bitcast %union.anon* %8915 to i64*
  %8916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8917 = getelementptr inbounds %struct.GPR, %struct.GPR* %8916, i32 0, i32 15
  %8918 = getelementptr inbounds %struct.Reg, %struct.Reg* %8917, i32 0, i32 0
  %RBP.i1212 = bitcast %union.anon* %8918 to i64*
  %8919 = load i64, i64* %RDX.i1211
  %8920 = load i64, i64* %RBP.i1212
  %8921 = sub i64 %8920, 136
  %8922 = load i64, i64* %PC.i1210
  %8923 = add i64 %8922, 6
  store i64 %8923, i64* %PC.i1210
  %8924 = trunc i64 %8919 to i32
  %8925 = inttoptr i64 %8921 to i32*
  %8926 = load i32, i32* %8925
  %8927 = sub i32 %8924, %8926
  %8928 = zext i32 %8927 to i64
  store i64 %8928, i64* %RDX.i1211, align 8
  %8929 = icmp ult i32 %8924, %8926
  %8930 = zext i1 %8929 to i8
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8930, i8* %8931, align 1
  %8932 = and i32 %8927, 255
  %8933 = call i32 @llvm.ctpop.i32(i32 %8932)
  %8934 = trunc i32 %8933 to i8
  %8935 = and i8 %8934, 1
  %8936 = xor i8 %8935, 1
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8936, i8* %8937, align 1
  %8938 = xor i32 %8926, %8924
  %8939 = xor i32 %8938, %8927
  %8940 = lshr i32 %8939, 4
  %8941 = trunc i32 %8940 to i8
  %8942 = and i8 %8941, 1
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8942, i8* %8943, align 1
  %8944 = icmp eq i32 %8927, 0
  %8945 = zext i1 %8944 to i8
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8945, i8* %8946, align 1
  %8947 = lshr i32 %8927, 31
  %8948 = trunc i32 %8947 to i8
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8948, i8* %8949, align 1
  %8950 = lshr i32 %8924, 31
  %8951 = lshr i32 %8926, 31
  %8952 = xor i32 %8951, %8950
  %8953 = xor i32 %8947, %8950
  %8954 = add i32 %8953, %8952
  %8955 = icmp eq i32 %8954, 2
  %8956 = zext i1 %8955 to i8
  %8957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8956, i8* %8957, align 1
  store %struct.Memory* %loadMem_43ab58, %struct.Memory** %MEMORY
  %loadMem_43ab5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8959 = getelementptr inbounds %struct.GPR, %struct.GPR* %8958, i32 0, i32 33
  %8960 = getelementptr inbounds %struct.Reg, %struct.Reg* %8959, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %8960 to i64*
  %8961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8962 = getelementptr inbounds %struct.GPR, %struct.GPR* %8961, i32 0, i32 7
  %8963 = getelementptr inbounds %struct.Reg, %struct.Reg* %8962, i32 0, i32 0
  %EDX.i1208 = bitcast %union.anon* %8963 to i32*
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8965 = getelementptr inbounds %struct.GPR, %struct.GPR* %8964, i32 0, i32 11
  %8966 = getelementptr inbounds %struct.Reg, %struct.Reg* %8965, i32 0, i32 0
  %RDI.i1209 = bitcast %union.anon* %8966 to i64*
  %8967 = load i32, i32* %EDX.i1208
  %8968 = zext i32 %8967 to i64
  %8969 = load i64, i64* %PC.i1207
  %8970 = add i64 %8969, 2
  store i64 %8970, i64* %PC.i1207
  %8971 = and i64 %8968, 4294967295
  store i64 %8971, i64* %RDI.i1209, align 8
  store %struct.Memory* %loadMem_43ab5e, %struct.Memory** %MEMORY
  %loadMem1_43ab60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8973 = getelementptr inbounds %struct.GPR, %struct.GPR* %8972, i32 0, i32 33
  %8974 = getelementptr inbounds %struct.Reg, %struct.Reg* %8973, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %8974 to i64*
  %8975 = load i64, i64* %PC.i1206
  %8976 = add i64 %8975, -236384
  %8977 = load i64, i64* %PC.i1206
  %8978 = add i64 %8977, 5
  %8979 = load i64, i64* %PC.i1206
  %8980 = add i64 %8979, 5
  store i64 %8980, i64* %PC.i1206
  %8981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8982 = load i64, i64* %8981, align 8
  %8983 = add i64 %8982, -8
  %8984 = inttoptr i64 %8983 to i64*
  store i64 %8978, i64* %8984
  store i64 %8983, i64* %8981, align 8
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8976, i64* %8985, align 8
  store %struct.Memory* %loadMem1_43ab60, %struct.Memory** %MEMORY
  %loadMem2_43ab60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ab60 = load i64, i64* %3
  %8986 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_43ab60)
  store %struct.Memory* %8986, %struct.Memory** %MEMORY
  %loadMem_43ab65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8988 = getelementptr inbounds %struct.GPR, %struct.GPR* %8987, i32 0, i32 33
  %8989 = getelementptr inbounds %struct.Reg, %struct.Reg* %8988, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %8989 to i64*
  %8990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8991 = getelementptr inbounds %struct.GPR, %struct.GPR* %8990, i32 0, i32 1
  %8992 = getelementptr inbounds %struct.Reg, %struct.Reg* %8991, i32 0, i32 0
  %RAX.i1202 = bitcast %union.anon* %8992 to i64*
  %8993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8994 = getelementptr inbounds %struct.GPR, %struct.GPR* %8993, i32 0, i32 15
  %8995 = getelementptr inbounds %struct.Reg, %struct.Reg* %8994, i32 0, i32 0
  %RBP.i1203 = bitcast %union.anon* %8995 to i64*
  %8996 = load i64, i64* %RAX.i1202
  %8997 = load i64, i64* %RBP.i1203
  %8998 = sub i64 %8997, 160
  %8999 = load i64, i64* %PC.i1201
  %9000 = add i64 %8999, 6
  store i64 %9000, i64* %PC.i1201
  %9001 = trunc i64 %8996 to i32
  %9002 = inttoptr i64 %8998 to i32*
  %9003 = load i32, i32* %9002
  %9004 = sub i32 %9001, %9003
  %9005 = zext i32 %9004 to i64
  store i64 %9005, i64* %RAX.i1202, align 8
  %9006 = icmp ult i32 %9001, %9003
  %9007 = zext i1 %9006 to i8
  %9008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9007, i8* %9008, align 1
  %9009 = and i32 %9004, 255
  %9010 = call i32 @llvm.ctpop.i32(i32 %9009)
  %9011 = trunc i32 %9010 to i8
  %9012 = and i8 %9011, 1
  %9013 = xor i8 %9012, 1
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9013, i8* %9014, align 1
  %9015 = xor i32 %9003, %9001
  %9016 = xor i32 %9015, %9004
  %9017 = lshr i32 %9016, 4
  %9018 = trunc i32 %9017 to i8
  %9019 = and i8 %9018, 1
  %9020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9019, i8* %9020, align 1
  %9021 = icmp eq i32 %9004, 0
  %9022 = zext i1 %9021 to i8
  %9023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9022, i8* %9023, align 1
  %9024 = lshr i32 %9004, 31
  %9025 = trunc i32 %9024 to i8
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9025, i8* %9026, align 1
  %9027 = lshr i32 %9001, 31
  %9028 = lshr i32 %9003, 31
  %9029 = xor i32 %9028, %9027
  %9030 = xor i32 %9024, %9027
  %9031 = add i32 %9030, %9029
  %9032 = icmp eq i32 %9031, 2
  %9033 = zext i1 %9032 to i8
  %9034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9033, i8* %9034, align 1
  store %struct.Memory* %loadMem_43ab65, %struct.Memory** %MEMORY
  %loadMem_43ab6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9036 = getelementptr inbounds %struct.GPR, %struct.GPR* %9035, i32 0, i32 33
  %9037 = getelementptr inbounds %struct.Reg, %struct.Reg* %9036, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %9037 to i64*
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9039 = getelementptr inbounds %struct.GPR, %struct.GPR* %9038, i32 0, i32 7
  %9040 = getelementptr inbounds %struct.Reg, %struct.Reg* %9039, i32 0, i32 0
  %RDX.i1199 = bitcast %union.anon* %9040 to i64*
  %9041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9042 = getelementptr inbounds %struct.GPR, %struct.GPR* %9041, i32 0, i32 15
  %9043 = getelementptr inbounds %struct.Reg, %struct.Reg* %9042, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %9043 to i64*
  %9044 = load i64, i64* %RBP.i1200
  %9045 = sub i64 %9044, 128
  %9046 = load i64, i64* %PC.i1198
  %9047 = add i64 %9046, 3
  store i64 %9047, i64* %PC.i1198
  %9048 = inttoptr i64 %9045 to i32*
  %9049 = load i32, i32* %9048
  %9050 = zext i32 %9049 to i64
  store i64 %9050, i64* %RDX.i1199, align 8
  store %struct.Memory* %loadMem_43ab6b, %struct.Memory** %MEMORY
  %loadMem_43ab6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9052 = getelementptr inbounds %struct.GPR, %struct.GPR* %9051, i32 0, i32 33
  %9053 = getelementptr inbounds %struct.Reg, %struct.Reg* %9052, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %9053 to i64*
  %9054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9055 = getelementptr inbounds %struct.GPR, %struct.GPR* %9054, i32 0, i32 7
  %9056 = getelementptr inbounds %struct.Reg, %struct.Reg* %9055, i32 0, i32 0
  %RDX.i1196 = bitcast %union.anon* %9056 to i64*
  %9057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9058 = getelementptr inbounds %struct.GPR, %struct.GPR* %9057, i32 0, i32 15
  %9059 = getelementptr inbounds %struct.Reg, %struct.Reg* %9058, i32 0, i32 0
  %RBP.i1197 = bitcast %union.anon* %9059 to i64*
  %9060 = load i64, i64* %RDX.i1196
  %9061 = load i64, i64* %RBP.i1197
  %9062 = sub i64 %9061, 124
  %9063 = load i64, i64* %PC.i1195
  %9064 = add i64 %9063, 3
  store i64 %9064, i64* %PC.i1195
  %9065 = trunc i64 %9060 to i32
  %9066 = inttoptr i64 %9062 to i32*
  %9067 = load i32, i32* %9066
  %9068 = sub i32 %9065, %9067
  %9069 = zext i32 %9068 to i64
  store i64 %9069, i64* %RDX.i1196, align 8
  %9070 = icmp ult i32 %9065, %9067
  %9071 = zext i1 %9070 to i8
  %9072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9071, i8* %9072, align 1
  %9073 = and i32 %9068, 255
  %9074 = call i32 @llvm.ctpop.i32(i32 %9073)
  %9075 = trunc i32 %9074 to i8
  %9076 = and i8 %9075, 1
  %9077 = xor i8 %9076, 1
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9077, i8* %9078, align 1
  %9079 = xor i32 %9067, %9065
  %9080 = xor i32 %9079, %9068
  %9081 = lshr i32 %9080, 4
  %9082 = trunc i32 %9081 to i8
  %9083 = and i8 %9082, 1
  %9084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9083, i8* %9084, align 1
  %9085 = icmp eq i32 %9068, 0
  %9086 = zext i1 %9085 to i8
  %9087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9086, i8* %9087, align 1
  %9088 = lshr i32 %9068, 31
  %9089 = trunc i32 %9088 to i8
  %9090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9089, i8* %9090, align 1
  %9091 = lshr i32 %9065, 31
  %9092 = lshr i32 %9067, 31
  %9093 = xor i32 %9092, %9091
  %9094 = xor i32 %9088, %9091
  %9095 = add i32 %9094, %9093
  %9096 = icmp eq i32 %9095, 2
  %9097 = zext i1 %9096 to i8
  %9098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9097, i8* %9098, align 1
  store %struct.Memory* %loadMem_43ab6e, %struct.Memory** %MEMORY
  %loadMem_43ab71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9100 = getelementptr inbounds %struct.GPR, %struct.GPR* %9099, i32 0, i32 33
  %9101 = getelementptr inbounds %struct.Reg, %struct.Reg* %9100, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %9101 to i64*
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9103 = getelementptr inbounds %struct.GPR, %struct.GPR* %9102, i32 0, i32 7
  %9104 = getelementptr inbounds %struct.Reg, %struct.Reg* %9103, i32 0, i32 0
  %EDX.i1193 = bitcast %union.anon* %9104 to i32*
  %9105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9106 = getelementptr inbounds %struct.GPR, %struct.GPR* %9105, i32 0, i32 11
  %9107 = getelementptr inbounds %struct.Reg, %struct.Reg* %9106, i32 0, i32 0
  %RDI.i1194 = bitcast %union.anon* %9107 to i64*
  %9108 = load i32, i32* %EDX.i1193
  %9109 = zext i32 %9108 to i64
  %9110 = load i64, i64* %PC.i1192
  %9111 = add i64 %9110, 2
  store i64 %9111, i64* %PC.i1192
  %9112 = and i64 %9109, 4294967295
  store i64 %9112, i64* %RDI.i1194, align 8
  store %struct.Memory* %loadMem_43ab71, %struct.Memory** %MEMORY
  %loadMem_43ab73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9114 = getelementptr inbounds %struct.GPR, %struct.GPR* %9113, i32 0, i32 33
  %9115 = getelementptr inbounds %struct.Reg, %struct.Reg* %9114, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %9115 to i64*
  %9116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9117 = getelementptr inbounds %struct.GPR, %struct.GPR* %9116, i32 0, i32 1
  %9118 = getelementptr inbounds %struct.Reg, %struct.Reg* %9117, i32 0, i32 0
  %EAX.i1190 = bitcast %union.anon* %9118 to i32*
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9120 = getelementptr inbounds %struct.GPR, %struct.GPR* %9119, i32 0, i32 15
  %9121 = getelementptr inbounds %struct.Reg, %struct.Reg* %9120, i32 0, i32 0
  %RBP.i1191 = bitcast %union.anon* %9121 to i64*
  %9122 = load i64, i64* %RBP.i1191
  %9123 = sub i64 %9122, 428
  %9124 = load i32, i32* %EAX.i1190
  %9125 = zext i32 %9124 to i64
  %9126 = load i64, i64* %PC.i1189
  %9127 = add i64 %9126, 6
  store i64 %9127, i64* %PC.i1189
  %9128 = inttoptr i64 %9123 to i32*
  store i32 %9124, i32* %9128
  store %struct.Memory* %loadMem_43ab73, %struct.Memory** %MEMORY
  %loadMem1_43ab79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9130 = getelementptr inbounds %struct.GPR, %struct.GPR* %9129, i32 0, i32 33
  %9131 = getelementptr inbounds %struct.Reg, %struct.Reg* %9130, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %9131 to i64*
  %9132 = load i64, i64* %PC.i1188
  %9133 = add i64 %9132, -236409
  %9134 = load i64, i64* %PC.i1188
  %9135 = add i64 %9134, 5
  %9136 = load i64, i64* %PC.i1188
  %9137 = add i64 %9136, 5
  store i64 %9137, i64* %PC.i1188
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9139 = load i64, i64* %9138, align 8
  %9140 = add i64 %9139, -8
  %9141 = inttoptr i64 %9140 to i64*
  store i64 %9135, i64* %9141
  store i64 %9140, i64* %9138, align 8
  %9142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9133, i64* %9142, align 8
  store %struct.Memory* %loadMem1_43ab79, %struct.Memory** %MEMORY
  %loadMem2_43ab79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ab79 = load i64, i64* %3
  %9143 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_43ab79)
  store %struct.Memory* %9143, %struct.Memory** %MEMORY
  %loadMem_43ab7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9145 = getelementptr inbounds %struct.GPR, %struct.GPR* %9144, i32 0, i32 33
  %9146 = getelementptr inbounds %struct.Reg, %struct.Reg* %9145, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %9146 to i64*
  %9147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9148 = getelementptr inbounds %struct.GPR, %struct.GPR* %9147, i32 0, i32 1
  %9149 = getelementptr inbounds %struct.Reg, %struct.Reg* %9148, i32 0, i32 0
  %RAX.i1184 = bitcast %union.anon* %9149 to i64*
  %9150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9151 = getelementptr inbounds %struct.GPR, %struct.GPR* %9150, i32 0, i32 15
  %9152 = getelementptr inbounds %struct.Reg, %struct.Reg* %9151, i32 0, i32 0
  %RBP.i1185 = bitcast %union.anon* %9152 to i64*
  %9153 = load i64, i64* %RAX.i1184
  %9154 = load i64, i64* %RBP.i1185
  %9155 = sub i64 %9154, 160
  %9156 = load i64, i64* %PC.i1183
  %9157 = add i64 %9156, 6
  store i64 %9157, i64* %PC.i1183
  %9158 = trunc i64 %9153 to i32
  %9159 = inttoptr i64 %9155 to i32*
  %9160 = load i32, i32* %9159
  %9161 = sub i32 %9158, %9160
  %9162 = zext i32 %9161 to i64
  store i64 %9162, i64* %RAX.i1184, align 8
  %9163 = icmp ult i32 %9158, %9160
  %9164 = zext i1 %9163 to i8
  %9165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9164, i8* %9165, align 1
  %9166 = and i32 %9161, 255
  %9167 = call i32 @llvm.ctpop.i32(i32 %9166)
  %9168 = trunc i32 %9167 to i8
  %9169 = and i8 %9168, 1
  %9170 = xor i8 %9169, 1
  %9171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9170, i8* %9171, align 1
  %9172 = xor i32 %9160, %9158
  %9173 = xor i32 %9172, %9161
  %9174 = lshr i32 %9173, 4
  %9175 = trunc i32 %9174 to i8
  %9176 = and i8 %9175, 1
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9176, i8* %9177, align 1
  %9178 = icmp eq i32 %9161, 0
  %9179 = zext i1 %9178 to i8
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9179, i8* %9180, align 1
  %9181 = lshr i32 %9161, 31
  %9182 = trunc i32 %9181 to i8
  %9183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9182, i8* %9183, align 1
  %9184 = lshr i32 %9158, 31
  %9185 = lshr i32 %9160, 31
  %9186 = xor i32 %9185, %9184
  %9187 = xor i32 %9181, %9184
  %9188 = add i32 %9187, %9186
  %9189 = icmp eq i32 %9188, 2
  %9190 = zext i1 %9189 to i8
  %9191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9190, i8* %9191, align 1
  store %struct.Memory* %loadMem_43ab7e, %struct.Memory** %MEMORY
  %loadMem_43ab84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9193 = getelementptr inbounds %struct.GPR, %struct.GPR* %9192, i32 0, i32 33
  %9194 = getelementptr inbounds %struct.Reg, %struct.Reg* %9193, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %9194 to i64*
  %9195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9196 = getelementptr inbounds %struct.GPR, %struct.GPR* %9195, i32 0, i32 7
  %9197 = getelementptr inbounds %struct.Reg, %struct.Reg* %9196, i32 0, i32 0
  %RDX.i1181 = bitcast %union.anon* %9197 to i64*
  %9198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9199 = getelementptr inbounds %struct.GPR, %struct.GPR* %9198, i32 0, i32 15
  %9200 = getelementptr inbounds %struct.Reg, %struct.Reg* %9199, i32 0, i32 0
  %RBP.i1182 = bitcast %union.anon* %9200 to i64*
  %9201 = load i64, i64* %RBP.i1182
  %9202 = sub i64 %9201, 428
  %9203 = load i64, i64* %PC.i1180
  %9204 = add i64 %9203, 6
  store i64 %9204, i64* %PC.i1180
  %9205 = inttoptr i64 %9202 to i32*
  %9206 = load i32, i32* %9205
  %9207 = zext i32 %9206 to i64
  store i64 %9207, i64* %RDX.i1181, align 8
  store %struct.Memory* %loadMem_43ab84, %struct.Memory** %MEMORY
  %loadMem_43ab8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9209 = getelementptr inbounds %struct.GPR, %struct.GPR* %9208, i32 0, i32 33
  %9210 = getelementptr inbounds %struct.Reg, %struct.Reg* %9209, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %9210 to i64*
  %9211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9212 = getelementptr inbounds %struct.GPR, %struct.GPR* %9211, i32 0, i32 1
  %9213 = getelementptr inbounds %struct.Reg, %struct.Reg* %9212, i32 0, i32 0
  %EAX.i1178 = bitcast %union.anon* %9213 to i32*
  %9214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9215 = getelementptr inbounds %struct.GPR, %struct.GPR* %9214, i32 0, i32 7
  %9216 = getelementptr inbounds %struct.Reg, %struct.Reg* %9215, i32 0, i32 0
  %RDX.i1179 = bitcast %union.anon* %9216 to i64*
  %9217 = load i64, i64* %RDX.i1179
  %9218 = load i32, i32* %EAX.i1178
  %9219 = zext i32 %9218 to i64
  %9220 = load i64, i64* %PC.i1177
  %9221 = add i64 %9220, 2
  store i64 %9221, i64* %PC.i1177
  %9222 = and i64 %9219, %9217
  %9223 = trunc i64 %9222 to i32
  %9224 = and i64 %9222, 4294967295
  store i64 %9224, i64* %RDX.i1179, align 8
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9225, align 1
  %9226 = and i32 %9223, 255
  %9227 = call i32 @llvm.ctpop.i32(i32 %9226)
  %9228 = trunc i32 %9227 to i8
  %9229 = and i8 %9228, 1
  %9230 = xor i8 %9229, 1
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9230, i8* %9231, align 1
  %9232 = icmp eq i32 %9223, 0
  %9233 = zext i1 %9232 to i8
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9233, i8* %9234, align 1
  %9235 = lshr i32 %9223, 31
  %9236 = trunc i32 %9235 to i8
  %9237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9236, i8* %9237, align 1
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9238, align 1
  %9239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9239, align 1
  store %struct.Memory* %loadMem_43ab8a, %struct.Memory** %MEMORY
  %loadMem_43ab8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9241 = getelementptr inbounds %struct.GPR, %struct.GPR* %9240, i32 0, i32 33
  %9242 = getelementptr inbounds %struct.Reg, %struct.Reg* %9241, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %9242 to i64*
  %9243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9244 = getelementptr inbounds %struct.GPR, %struct.GPR* %9243, i32 0, i32 7
  %9245 = getelementptr inbounds %struct.Reg, %struct.Reg* %9244, i32 0, i32 0
  %EDX.i1176 = bitcast %union.anon* %9245 to i32*
  %9246 = load i32, i32* %EDX.i1176
  %9247 = zext i32 %9246 to i64
  %9248 = load i64, i64* %PC.i1175
  %9249 = add i64 %9248, 3
  store i64 %9249, i64* %PC.i1175
  %9250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9250, align 1
  %9251 = and i32 %9246, 255
  %9252 = call i32 @llvm.ctpop.i32(i32 %9251)
  %9253 = trunc i32 %9252 to i8
  %9254 = and i8 %9253, 1
  %9255 = xor i8 %9254, 1
  %9256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9255, i8* %9256, align 1
  %9257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9257, align 1
  %9258 = icmp eq i32 %9246, 0
  %9259 = zext i1 %9258 to i8
  %9260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9259, i8* %9260, align 1
  %9261 = lshr i32 %9246, 31
  %9262 = trunc i32 %9261 to i8
  %9263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9262, i8* %9263, align 1
  %9264 = lshr i32 %9246, 31
  %9265 = xor i32 %9261, %9264
  %9266 = add i32 %9265, %9264
  %9267 = icmp eq i32 %9266, 2
  %9268 = zext i1 %9267 to i8
  %9269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9268, i8* %9269, align 1
  store %struct.Memory* %loadMem_43ab8c, %struct.Memory** %MEMORY
  %loadMem_43ab8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9271 = getelementptr inbounds %struct.GPR, %struct.GPR* %9270, i32 0, i32 33
  %9272 = getelementptr inbounds %struct.Reg, %struct.Reg* %9271, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %9272 to i64*
  %9273 = load i64, i64* %PC.i1174
  %9274 = add i64 %9273, 1938
  %9275 = load i64, i64* %PC.i1174
  %9276 = add i64 %9275, 6
  %9277 = load i64, i64* %PC.i1174
  %9278 = add i64 %9277, 6
  store i64 %9278, i64* %PC.i1174
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9280 = load i8, i8* %9279, align 1
  %9281 = icmp ne i8 %9280, 0
  %9282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9283 = load i8, i8* %9282, align 1
  %9284 = icmp ne i8 %9283, 0
  %9285 = xor i1 %9281, %9284
  %9286 = xor i1 %9285, true
  %9287 = zext i1 %9286 to i8
  store i8 %9287, i8* %BRANCH_TAKEN, align 1
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9289 = select i1 %9285, i64 %9276, i64 %9274
  store i64 %9289, i64* %9288, align 8
  store %struct.Memory* %loadMem_43ab8f, %struct.Memory** %MEMORY
  %loadBr_43ab8f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ab8f = icmp eq i8 %loadBr_43ab8f, 1
  br i1 %cmpBr_43ab8f, label %block_.L_43b321, label %block_43ab95

block_43ab95:                                     ; preds = %block_43ab39
  %loadMem_43ab95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9291 = getelementptr inbounds %struct.GPR, %struct.GPR* %9290, i32 0, i32 33
  %9292 = getelementptr inbounds %struct.Reg, %struct.Reg* %9291, i32 0, i32 0
  %PC.i1172 = bitcast %union.anon* %9292 to i64*
  %9293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9294 = getelementptr inbounds %struct.GPR, %struct.GPR* %9293, i32 0, i32 15
  %9295 = getelementptr inbounds %struct.Reg, %struct.Reg* %9294, i32 0, i32 0
  %RBP.i1173 = bitcast %union.anon* %9295 to i64*
  %9296 = load i64, i64* %RBP.i1173
  %9297 = sub i64 %9296, 68
  %9298 = load i64, i64* %PC.i1172
  %9299 = add i64 %9298, 4
  store i64 %9299, i64* %PC.i1172
  %9300 = inttoptr i64 %9297 to i32*
  %9301 = load i32, i32* %9300
  %9302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9302, align 1
  %9303 = and i32 %9301, 255
  %9304 = call i32 @llvm.ctpop.i32(i32 %9303)
  %9305 = trunc i32 %9304 to i8
  %9306 = and i8 %9305, 1
  %9307 = xor i8 %9306, 1
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9307, i8* %9308, align 1
  %9309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9309, align 1
  %9310 = icmp eq i32 %9301, 0
  %9311 = zext i1 %9310 to i8
  %9312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9311, i8* %9312, align 1
  %9313 = lshr i32 %9301, 31
  %9314 = trunc i32 %9313 to i8
  %9315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9314, i8* %9315, align 1
  %9316 = lshr i32 %9301, 31
  %9317 = xor i32 %9313, %9316
  %9318 = add i32 %9317, %9316
  %9319 = icmp eq i32 %9318, 2
  %9320 = zext i1 %9319 to i8
  %9321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9320, i8* %9321, align 1
  store %struct.Memory* %loadMem_43ab95, %struct.Memory** %MEMORY
  %loadMem_43ab99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9323 = getelementptr inbounds %struct.GPR, %struct.GPR* %9322, i32 0, i32 33
  %9324 = getelementptr inbounds %struct.Reg, %struct.Reg* %9323, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %9324 to i64*
  %9325 = load i64, i64* %PC.i1171
  %9326 = add i64 %9325, 80
  %9327 = load i64, i64* %PC.i1171
  %9328 = add i64 %9327, 6
  %9329 = load i64, i64* %PC.i1171
  %9330 = add i64 %9329, 6
  store i64 %9330, i64* %PC.i1171
  %9331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9332 = load i8, i8* %9331, align 1
  %9333 = icmp eq i8 %9332, 0
  %9334 = zext i1 %9333 to i8
  store i8 %9334, i8* %BRANCH_TAKEN, align 1
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9336 = select i1 %9333, i64 %9326, i64 %9328
  store i64 %9336, i64* %9335, align 8
  store %struct.Memory* %loadMem_43ab99, %struct.Memory** %MEMORY
  %loadBr_43ab99 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ab99 = icmp eq i8 %loadBr_43ab99, 1
  br i1 %cmpBr_43ab99, label %block_.L_43abe9, label %block_43ab9f

block_43ab9f:                                     ; preds = %block_43ab95
  %loadMem_43ab9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9338 = getelementptr inbounds %struct.GPR, %struct.GPR* %9337, i32 0, i32 33
  %9339 = getelementptr inbounds %struct.Reg, %struct.Reg* %9338, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %9339 to i64*
  %9340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9341 = getelementptr inbounds %struct.GPR, %struct.GPR* %9340, i32 0, i32 1
  %9342 = getelementptr inbounds %struct.Reg, %struct.Reg* %9341, i32 0, i32 0
  %RAX.i1169 = bitcast %union.anon* %9342 to i64*
  %9343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9344 = getelementptr inbounds %struct.GPR, %struct.GPR* %9343, i32 0, i32 15
  %9345 = getelementptr inbounds %struct.Reg, %struct.Reg* %9344, i32 0, i32 0
  %RBP.i1170 = bitcast %union.anon* %9345 to i64*
  %9346 = load i64, i64* %RBP.i1170
  %9347 = sub i64 %9346, 132
  %9348 = load i64, i64* %PC.i1168
  %9349 = add i64 %9348, 6
  store i64 %9349, i64* %PC.i1168
  %9350 = inttoptr i64 %9347 to i32*
  %9351 = load i32, i32* %9350
  %9352 = zext i32 %9351 to i64
  store i64 %9352, i64* %RAX.i1169, align 8
  store %struct.Memory* %loadMem_43ab9f, %struct.Memory** %MEMORY
  %loadMem_43aba5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9354 = getelementptr inbounds %struct.GPR, %struct.GPR* %9353, i32 0, i32 33
  %9355 = getelementptr inbounds %struct.Reg, %struct.Reg* %9354, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %9355 to i64*
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9357 = getelementptr inbounds %struct.GPR, %struct.GPR* %9356, i32 0, i32 1
  %9358 = getelementptr inbounds %struct.Reg, %struct.Reg* %9357, i32 0, i32 0
  %RAX.i1166 = bitcast %union.anon* %9358 to i64*
  %9359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9360 = getelementptr inbounds %struct.GPR, %struct.GPR* %9359, i32 0, i32 15
  %9361 = getelementptr inbounds %struct.Reg, %struct.Reg* %9360, i32 0, i32 0
  %RBP.i1167 = bitcast %union.anon* %9361 to i64*
  %9362 = load i64, i64* %RAX.i1166
  %9363 = load i64, i64* %RBP.i1167
  %9364 = sub i64 %9363, 140
  %9365 = load i64, i64* %PC.i1165
  %9366 = add i64 %9365, 6
  store i64 %9366, i64* %PC.i1165
  %9367 = trunc i64 %9362 to i32
  %9368 = inttoptr i64 %9364 to i32*
  %9369 = load i32, i32* %9368
  %9370 = sub i32 %9367, %9369
  %9371 = zext i32 %9370 to i64
  store i64 %9371, i64* %RAX.i1166, align 8
  %9372 = icmp ult i32 %9367, %9369
  %9373 = zext i1 %9372 to i8
  %9374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9373, i8* %9374, align 1
  %9375 = and i32 %9370, 255
  %9376 = call i32 @llvm.ctpop.i32(i32 %9375)
  %9377 = trunc i32 %9376 to i8
  %9378 = and i8 %9377, 1
  %9379 = xor i8 %9378, 1
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9379, i8* %9380, align 1
  %9381 = xor i32 %9369, %9367
  %9382 = xor i32 %9381, %9370
  %9383 = lshr i32 %9382, 4
  %9384 = trunc i32 %9383 to i8
  %9385 = and i8 %9384, 1
  %9386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9385, i8* %9386, align 1
  %9387 = icmp eq i32 %9370, 0
  %9388 = zext i1 %9387 to i8
  %9389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9388, i8* %9389, align 1
  %9390 = lshr i32 %9370, 31
  %9391 = trunc i32 %9390 to i8
  %9392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9391, i8* %9392, align 1
  %9393 = lshr i32 %9367, 31
  %9394 = lshr i32 %9369, 31
  %9395 = xor i32 %9394, %9393
  %9396 = xor i32 %9390, %9393
  %9397 = add i32 %9396, %9395
  %9398 = icmp eq i32 %9397, 2
  %9399 = zext i1 %9398 to i8
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9399, i8* %9400, align 1
  store %struct.Memory* %loadMem_43aba5, %struct.Memory** %MEMORY
  %loadMem_43abab = load %struct.Memory*, %struct.Memory** %MEMORY
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 33
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %9403 to i64*
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 1
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %EAX.i1163 = bitcast %union.anon* %9406 to i32*
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9408 = getelementptr inbounds %struct.GPR, %struct.GPR* %9407, i32 0, i32 11
  %9409 = getelementptr inbounds %struct.Reg, %struct.Reg* %9408, i32 0, i32 0
  %RDI.i1164 = bitcast %union.anon* %9409 to i64*
  %9410 = load i32, i32* %EAX.i1163
  %9411 = zext i32 %9410 to i64
  %9412 = load i64, i64* %PC.i1162
  %9413 = add i64 %9412, 2
  store i64 %9413, i64* %PC.i1162
  %9414 = and i64 %9411, 4294967295
  store i64 %9414, i64* %RDI.i1164, align 8
  store %struct.Memory* %loadMem_43abab, %struct.Memory** %MEMORY
  %loadMem1_43abad = load %struct.Memory*, %struct.Memory** %MEMORY
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9416 = getelementptr inbounds %struct.GPR, %struct.GPR* %9415, i32 0, i32 33
  %9417 = getelementptr inbounds %struct.Reg, %struct.Reg* %9416, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %9417 to i64*
  %9418 = load i64, i64* %PC.i1161
  %9419 = add i64 %9418, -236461
  %9420 = load i64, i64* %PC.i1161
  %9421 = add i64 %9420, 5
  %9422 = load i64, i64* %PC.i1161
  %9423 = add i64 %9422, 5
  store i64 %9423, i64* %PC.i1161
  %9424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9425 = load i64, i64* %9424, align 8
  %9426 = add i64 %9425, -8
  %9427 = inttoptr i64 %9426 to i64*
  store i64 %9421, i64* %9427
  store i64 %9426, i64* %9424, align 8
  %9428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9419, i64* %9428, align 8
  store %struct.Memory* %loadMem1_43abad, %struct.Memory** %MEMORY
  %loadMem2_43abad = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43abad = load i64, i64* %3
  %9429 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_43abad)
  store %struct.Memory* %9429, %struct.Memory** %MEMORY
  %loadMem_43abb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9431 = getelementptr inbounds %struct.GPR, %struct.GPR* %9430, i32 0, i32 33
  %9432 = getelementptr inbounds %struct.Reg, %struct.Reg* %9431, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %9432 to i64*
  %9433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9434 = getelementptr inbounds %struct.GPR, %struct.GPR* %9433, i32 0, i32 1
  %9435 = getelementptr inbounds %struct.Reg, %struct.Reg* %9434, i32 0, i32 0
  %RAX.i1157 = bitcast %union.anon* %9435 to i64*
  %9436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9437 = getelementptr inbounds %struct.GPR, %struct.GPR* %9436, i32 0, i32 15
  %9438 = getelementptr inbounds %struct.Reg, %struct.Reg* %9437, i32 0, i32 0
  %RBP.i1158 = bitcast %union.anon* %9438 to i64*
  %9439 = load i64, i64* %RAX.i1157
  %9440 = load i64, i64* %RBP.i1158
  %9441 = sub i64 %9440, 160
  %9442 = load i64, i64* %PC.i1156
  %9443 = add i64 %9442, 6
  store i64 %9443, i64* %PC.i1156
  %9444 = trunc i64 %9439 to i32
  %9445 = inttoptr i64 %9441 to i32*
  %9446 = load i32, i32* %9445
  %9447 = sub i32 %9444, %9446
  %9448 = zext i32 %9447 to i64
  store i64 %9448, i64* %RAX.i1157, align 8
  %9449 = icmp ult i32 %9444, %9446
  %9450 = zext i1 %9449 to i8
  %9451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9450, i8* %9451, align 1
  %9452 = and i32 %9447, 255
  %9453 = call i32 @llvm.ctpop.i32(i32 %9452)
  %9454 = trunc i32 %9453 to i8
  %9455 = and i8 %9454, 1
  %9456 = xor i8 %9455, 1
  %9457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9456, i8* %9457, align 1
  %9458 = xor i32 %9446, %9444
  %9459 = xor i32 %9458, %9447
  %9460 = lshr i32 %9459, 4
  %9461 = trunc i32 %9460 to i8
  %9462 = and i8 %9461, 1
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9462, i8* %9463, align 1
  %9464 = icmp eq i32 %9447, 0
  %9465 = zext i1 %9464 to i8
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9465, i8* %9466, align 1
  %9467 = lshr i32 %9447, 31
  %9468 = trunc i32 %9467 to i8
  %9469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9468, i8* %9469, align 1
  %9470 = lshr i32 %9444, 31
  %9471 = lshr i32 %9446, 31
  %9472 = xor i32 %9471, %9470
  %9473 = xor i32 %9467, %9470
  %9474 = add i32 %9473, %9472
  %9475 = icmp eq i32 %9474, 2
  %9476 = zext i1 %9475 to i8
  %9477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9476, i8* %9477, align 1
  store %struct.Memory* %loadMem_43abb2, %struct.Memory** %MEMORY
  %loadMem_43abb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9479 = getelementptr inbounds %struct.GPR, %struct.GPR* %9478, i32 0, i32 33
  %9480 = getelementptr inbounds %struct.Reg, %struct.Reg* %9479, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %9480 to i64*
  %9481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9482 = getelementptr inbounds %struct.GPR, %struct.GPR* %9481, i32 0, i32 1
  %9483 = getelementptr inbounds %struct.Reg, %struct.Reg* %9482, i32 0, i32 0
  %EAX.i1155 = bitcast %union.anon* %9483 to i32*
  %9484 = load i32, i32* %EAX.i1155
  %9485 = zext i32 %9484 to i64
  %9486 = load i64, i64* %PC.i1154
  %9487 = add i64 %9486, 3
  store i64 %9487, i64* %PC.i1154
  %9488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9488, align 1
  %9489 = and i32 %9484, 255
  %9490 = call i32 @llvm.ctpop.i32(i32 %9489)
  %9491 = trunc i32 %9490 to i8
  %9492 = and i8 %9491, 1
  %9493 = xor i8 %9492, 1
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9493, i8* %9494, align 1
  %9495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9495, align 1
  %9496 = icmp eq i32 %9484, 0
  %9497 = zext i1 %9496 to i8
  %9498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9497, i8* %9498, align 1
  %9499 = lshr i32 %9484, 31
  %9500 = trunc i32 %9499 to i8
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9500, i8* %9501, align 1
  %9502 = lshr i32 %9484, 31
  %9503 = xor i32 %9499, %9502
  %9504 = add i32 %9503, %9502
  %9505 = icmp eq i32 %9504, 2
  %9506 = zext i1 %9505 to i8
  %9507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9506, i8* %9507, align 1
  store %struct.Memory* %loadMem_43abb8, %struct.Memory** %MEMORY
  %loadMem_43abbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9509 = getelementptr inbounds %struct.GPR, %struct.GPR* %9508, i32 0, i32 33
  %9510 = getelementptr inbounds %struct.Reg, %struct.Reg* %9509, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %9510 to i64*
  %9511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9512 = getelementptr inbounds %struct.GPR, %struct.GPR* %9511, i32 0, i32 5
  %9513 = getelementptr inbounds %struct.Reg, %struct.Reg* %9512, i32 0, i32 0
  %9514 = bitcast %union.anon* %9513 to %struct.anon.2*
  %CL.i1153 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9514, i32 0, i32 0
  %9515 = load i64, i64* %PC.i1152
  %9516 = add i64 %9515, 3
  store i64 %9516, i64* %PC.i1152
  %9517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9518 = load i8, i8* %9517, align 1
  %9519 = icmp ne i8 %9518, 0
  %9520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9521 = load i8, i8* %9520, align 1
  %9522 = icmp ne i8 %9521, 0
  %9523 = xor i1 %9519, %9522
  %9524 = zext i1 %9523 to i8
  store i8 %9524, i8* %CL.i1153, align 1
  store %struct.Memory* %loadMem_43abbb, %struct.Memory** %MEMORY
  %loadMem_43abbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %9525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9526 = getelementptr inbounds %struct.GPR, %struct.GPR* %9525, i32 0, i32 33
  %9527 = getelementptr inbounds %struct.Reg, %struct.Reg* %9526, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %9527 to i64*
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9529 = getelementptr inbounds %struct.GPR, %struct.GPR* %9528, i32 0, i32 5
  %9530 = getelementptr inbounds %struct.Reg, %struct.Reg* %9529, i32 0, i32 0
  %9531 = bitcast %union.anon* %9530 to %struct.anon.2*
  %CL.i1151 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9531, i32 0, i32 0
  %9532 = load i8, i8* %CL.i1151
  %9533 = zext i8 %9532 to i64
  %9534 = load i64, i64* %PC.i1150
  %9535 = add i64 %9534, 3
  store i64 %9535, i64* %PC.i1150
  %9536 = and i64 1, %9533
  %9537 = trunc i64 %9536 to i8
  store i8 %9537, i8* %CL.i1151, align 1
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9538, align 1
  %9539 = trunc i64 %9536 to i32
  %9540 = and i32 %9539, 255
  %9541 = call i32 @llvm.ctpop.i32(i32 %9540)
  %9542 = trunc i32 %9541 to i8
  %9543 = and i8 %9542, 1
  %9544 = xor i8 %9543, 1
  %9545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9544, i8* %9545, align 1
  %9546 = icmp eq i8 %9537, 0
  %9547 = zext i1 %9546 to i8
  %9548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9547, i8* %9548, align 1
  %9549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9549, align 1
  %9550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9550, align 1
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9551, align 1
  store %struct.Memory* %loadMem_43abbe, %struct.Memory** %MEMORY
  %loadMem_43abc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9553 = getelementptr inbounds %struct.GPR, %struct.GPR* %9552, i32 0, i32 33
  %9554 = getelementptr inbounds %struct.Reg, %struct.Reg* %9553, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %9554 to i64*
  %9555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9556 = getelementptr inbounds %struct.GPR, %struct.GPR* %9555, i32 0, i32 5
  %9557 = getelementptr inbounds %struct.Reg, %struct.Reg* %9556, i32 0, i32 0
  %9558 = bitcast %union.anon* %9557 to %struct.anon.2*
  %CL.i1148 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9558, i32 0, i32 0
  %9559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9560 = getelementptr inbounds %struct.GPR, %struct.GPR* %9559, i32 0, i32 1
  %9561 = getelementptr inbounds %struct.Reg, %struct.Reg* %9560, i32 0, i32 0
  %RAX.i1149 = bitcast %union.anon* %9561 to i64*
  %9562 = load i8, i8* %CL.i1148
  %9563 = zext i8 %9562 to i64
  %9564 = load i64, i64* %PC.i1147
  %9565 = add i64 %9564, 3
  store i64 %9565, i64* %PC.i1147
  %9566 = and i64 %9563, 255
  store i64 %9566, i64* %RAX.i1149, align 8
  store %struct.Memory* %loadMem_43abc1, %struct.Memory** %MEMORY
  %loadMem_43abc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9568 = getelementptr inbounds %struct.GPR, %struct.GPR* %9567, i32 0, i32 33
  %9569 = getelementptr inbounds %struct.Reg, %struct.Reg* %9568, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %9569 to i64*
  %9570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9571 = getelementptr inbounds %struct.GPR, %struct.GPR* %9570, i32 0, i32 1
  %9572 = getelementptr inbounds %struct.Reg, %struct.Reg* %9571, i32 0, i32 0
  %EAX.i1145 = bitcast %union.anon* %9572 to i32*
  %9573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9574 = getelementptr inbounds %struct.GPR, %struct.GPR* %9573, i32 0, i32 15
  %9575 = getelementptr inbounds %struct.Reg, %struct.Reg* %9574, i32 0, i32 0
  %RBP.i1146 = bitcast %union.anon* %9575 to i64*
  %9576 = load i64, i64* %RBP.i1146
  %9577 = sub i64 %9576, 84
  %9578 = load i32, i32* %EAX.i1145
  %9579 = zext i32 %9578 to i64
  %9580 = load i64, i64* %PC.i1144
  %9581 = add i64 %9580, 3
  store i64 %9581, i64* %PC.i1144
  %9582 = inttoptr i64 %9577 to i32*
  store i32 %9578, i32* %9582
  store %struct.Memory* %loadMem_43abc4, %struct.Memory** %MEMORY
  %loadMem_43abc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9584 = getelementptr inbounds %struct.GPR, %struct.GPR* %9583, i32 0, i32 33
  %9585 = getelementptr inbounds %struct.Reg, %struct.Reg* %9584, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %9585 to i64*
  %9586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9587 = getelementptr inbounds %struct.GPR, %struct.GPR* %9586, i32 0, i32 1
  %9588 = getelementptr inbounds %struct.Reg, %struct.Reg* %9587, i32 0, i32 0
  %RAX.i1142 = bitcast %union.anon* %9588 to i64*
  %9589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9590 = getelementptr inbounds %struct.GPR, %struct.GPR* %9589, i32 0, i32 15
  %9591 = getelementptr inbounds %struct.Reg, %struct.Reg* %9590, i32 0, i32 0
  %RBP.i1143 = bitcast %union.anon* %9591 to i64*
  %9592 = load i64, i64* %RBP.i1143
  %9593 = sub i64 %9592, 128
  %9594 = load i64, i64* %PC.i1141
  %9595 = add i64 %9594, 3
  store i64 %9595, i64* %PC.i1141
  %9596 = inttoptr i64 %9593 to i32*
  %9597 = load i32, i32* %9596
  %9598 = zext i32 %9597 to i64
  store i64 %9598, i64* %RAX.i1142, align 8
  store %struct.Memory* %loadMem_43abc7, %struct.Memory** %MEMORY
  %loadMem_43abca = load %struct.Memory*, %struct.Memory** %MEMORY
  %9599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9600 = getelementptr inbounds %struct.GPR, %struct.GPR* %9599, i32 0, i32 33
  %9601 = getelementptr inbounds %struct.Reg, %struct.Reg* %9600, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %9601 to i64*
  %9602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9603 = getelementptr inbounds %struct.GPR, %struct.GPR* %9602, i32 0, i32 1
  %9604 = getelementptr inbounds %struct.Reg, %struct.Reg* %9603, i32 0, i32 0
  %RAX.i1139 = bitcast %union.anon* %9604 to i64*
  %9605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9606 = getelementptr inbounds %struct.GPR, %struct.GPR* %9605, i32 0, i32 15
  %9607 = getelementptr inbounds %struct.Reg, %struct.Reg* %9606, i32 0, i32 0
  %RBP.i1140 = bitcast %union.anon* %9607 to i64*
  %9608 = load i64, i64* %RAX.i1139
  %9609 = load i64, i64* %RBP.i1140
  %9610 = sub i64 %9609, 120
  %9611 = load i64, i64* %PC.i1138
  %9612 = add i64 %9611, 3
  store i64 %9612, i64* %PC.i1138
  %9613 = trunc i64 %9608 to i32
  %9614 = inttoptr i64 %9610 to i32*
  %9615 = load i32, i32* %9614
  %9616 = sub i32 %9613, %9615
  %9617 = zext i32 %9616 to i64
  store i64 %9617, i64* %RAX.i1139, align 8
  %9618 = icmp ult i32 %9613, %9615
  %9619 = zext i1 %9618 to i8
  %9620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9619, i8* %9620, align 1
  %9621 = and i32 %9616, 255
  %9622 = call i32 @llvm.ctpop.i32(i32 %9621)
  %9623 = trunc i32 %9622 to i8
  %9624 = and i8 %9623, 1
  %9625 = xor i8 %9624, 1
  %9626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9625, i8* %9626, align 1
  %9627 = xor i32 %9615, %9613
  %9628 = xor i32 %9627, %9616
  %9629 = lshr i32 %9628, 4
  %9630 = trunc i32 %9629 to i8
  %9631 = and i8 %9630, 1
  %9632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9631, i8* %9632, align 1
  %9633 = icmp eq i32 %9616, 0
  %9634 = zext i1 %9633 to i8
  %9635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9634, i8* %9635, align 1
  %9636 = lshr i32 %9616, 31
  %9637 = trunc i32 %9636 to i8
  %9638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9637, i8* %9638, align 1
  %9639 = lshr i32 %9613, 31
  %9640 = lshr i32 %9615, 31
  %9641 = xor i32 %9640, %9639
  %9642 = xor i32 %9636, %9639
  %9643 = add i32 %9642, %9641
  %9644 = icmp eq i32 %9643, 2
  %9645 = zext i1 %9644 to i8
  %9646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9645, i8* %9646, align 1
  store %struct.Memory* %loadMem_43abca, %struct.Memory** %MEMORY
  %loadMem_43abcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9648 = getelementptr inbounds %struct.GPR, %struct.GPR* %9647, i32 0, i32 33
  %9649 = getelementptr inbounds %struct.Reg, %struct.Reg* %9648, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %9649 to i64*
  %9650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9651 = getelementptr inbounds %struct.GPR, %struct.GPR* %9650, i32 0, i32 1
  %9652 = getelementptr inbounds %struct.Reg, %struct.Reg* %9651, i32 0, i32 0
  %EAX.i1136 = bitcast %union.anon* %9652 to i32*
  %9653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9654 = getelementptr inbounds %struct.GPR, %struct.GPR* %9653, i32 0, i32 11
  %9655 = getelementptr inbounds %struct.Reg, %struct.Reg* %9654, i32 0, i32 0
  %RDI.i1137 = bitcast %union.anon* %9655 to i64*
  %9656 = load i32, i32* %EAX.i1136
  %9657 = zext i32 %9656 to i64
  %9658 = load i64, i64* %PC.i1135
  %9659 = add i64 %9658, 2
  store i64 %9659, i64* %PC.i1135
  %9660 = and i64 %9657, 4294967295
  store i64 %9660, i64* %RDI.i1137, align 8
  store %struct.Memory* %loadMem_43abcd, %struct.Memory** %MEMORY
  %loadMem1_43abcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9662 = getelementptr inbounds %struct.GPR, %struct.GPR* %9661, i32 0, i32 33
  %9663 = getelementptr inbounds %struct.Reg, %struct.Reg* %9662, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %9663 to i64*
  %9664 = load i64, i64* %PC.i1134
  %9665 = add i64 %9664, -236495
  %9666 = load i64, i64* %PC.i1134
  %9667 = add i64 %9666, 5
  %9668 = load i64, i64* %PC.i1134
  %9669 = add i64 %9668, 5
  store i64 %9669, i64* %PC.i1134
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9671 = load i64, i64* %9670, align 8
  %9672 = add i64 %9671, -8
  %9673 = inttoptr i64 %9672 to i64*
  store i64 %9667, i64* %9673
  store i64 %9672, i64* %9670, align 8
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9665, i64* %9674, align 8
  store %struct.Memory* %loadMem1_43abcf, %struct.Memory** %MEMORY
  %loadMem2_43abcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43abcf = load i64, i64* %3
  %9675 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_43abcf)
  store %struct.Memory* %9675, %struct.Memory** %MEMORY
  %loadMem_43abd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9677 = getelementptr inbounds %struct.GPR, %struct.GPR* %9676, i32 0, i32 33
  %9678 = getelementptr inbounds %struct.Reg, %struct.Reg* %9677, i32 0, i32 0
  %PC.i1128 = bitcast %union.anon* %9678 to i64*
  %9679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9680 = getelementptr inbounds %struct.GPR, %struct.GPR* %9679, i32 0, i32 1
  %9681 = getelementptr inbounds %struct.Reg, %struct.Reg* %9680, i32 0, i32 0
  %RAX.i1129 = bitcast %union.anon* %9681 to i64*
  %9682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9683 = getelementptr inbounds %struct.GPR, %struct.GPR* %9682, i32 0, i32 15
  %9684 = getelementptr inbounds %struct.Reg, %struct.Reg* %9683, i32 0, i32 0
  %RBP.i1130 = bitcast %union.anon* %9684 to i64*
  %9685 = load i64, i64* %RAX.i1129
  %9686 = load i64, i64* %RBP.i1130
  %9687 = sub i64 %9686, 160
  %9688 = load i64, i64* %PC.i1128
  %9689 = add i64 %9688, 6
  store i64 %9689, i64* %PC.i1128
  %9690 = trunc i64 %9685 to i32
  %9691 = inttoptr i64 %9687 to i32*
  %9692 = load i32, i32* %9691
  %9693 = sub i32 %9690, %9692
  %9694 = zext i32 %9693 to i64
  store i64 %9694, i64* %RAX.i1129, align 8
  %9695 = icmp ult i32 %9690, %9692
  %9696 = zext i1 %9695 to i8
  %9697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9696, i8* %9697, align 1
  %9698 = and i32 %9693, 255
  %9699 = call i32 @llvm.ctpop.i32(i32 %9698)
  %9700 = trunc i32 %9699 to i8
  %9701 = and i8 %9700, 1
  %9702 = xor i8 %9701, 1
  %9703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9702, i8* %9703, align 1
  %9704 = xor i32 %9692, %9690
  %9705 = xor i32 %9704, %9693
  %9706 = lshr i32 %9705, 4
  %9707 = trunc i32 %9706 to i8
  %9708 = and i8 %9707, 1
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9708, i8* %9709, align 1
  %9710 = icmp eq i32 %9693, 0
  %9711 = zext i1 %9710 to i8
  %9712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9711, i8* %9712, align 1
  %9713 = lshr i32 %9693, 31
  %9714 = trunc i32 %9713 to i8
  %9715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9714, i8* %9715, align 1
  %9716 = lshr i32 %9690, 31
  %9717 = lshr i32 %9692, 31
  %9718 = xor i32 %9717, %9716
  %9719 = xor i32 %9713, %9716
  %9720 = add i32 %9719, %9718
  %9721 = icmp eq i32 %9720, 2
  %9722 = zext i1 %9721 to i8
  %9723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9722, i8* %9723, align 1
  store %struct.Memory* %loadMem_43abd4, %struct.Memory** %MEMORY
  %loadMem_43abda = load %struct.Memory*, %struct.Memory** %MEMORY
  %9724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9725 = getelementptr inbounds %struct.GPR, %struct.GPR* %9724, i32 0, i32 33
  %9726 = getelementptr inbounds %struct.Reg, %struct.Reg* %9725, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %9726 to i64*
  %9727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9728 = getelementptr inbounds %struct.GPR, %struct.GPR* %9727, i32 0, i32 1
  %9729 = getelementptr inbounds %struct.Reg, %struct.Reg* %9728, i32 0, i32 0
  %EAX.i1127 = bitcast %union.anon* %9729 to i32*
  %9730 = load i32, i32* %EAX.i1127
  %9731 = zext i32 %9730 to i64
  %9732 = load i64, i64* %PC.i1126
  %9733 = add i64 %9732, 3
  store i64 %9733, i64* %PC.i1126
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9734, align 1
  %9735 = and i32 %9730, 255
  %9736 = call i32 @llvm.ctpop.i32(i32 %9735)
  %9737 = trunc i32 %9736 to i8
  %9738 = and i8 %9737, 1
  %9739 = xor i8 %9738, 1
  %9740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9739, i8* %9740, align 1
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9741, align 1
  %9742 = icmp eq i32 %9730, 0
  %9743 = zext i1 %9742 to i8
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9743, i8* %9744, align 1
  %9745 = lshr i32 %9730, 31
  %9746 = trunc i32 %9745 to i8
  %9747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9746, i8* %9747, align 1
  %9748 = lshr i32 %9730, 31
  %9749 = xor i32 %9745, %9748
  %9750 = add i32 %9749, %9748
  %9751 = icmp eq i32 %9750, 2
  %9752 = zext i1 %9751 to i8
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9752, i8* %9753, align 1
  store %struct.Memory* %loadMem_43abda, %struct.Memory** %MEMORY
  %loadMem_43abdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9755 = getelementptr inbounds %struct.GPR, %struct.GPR* %9754, i32 0, i32 33
  %9756 = getelementptr inbounds %struct.Reg, %struct.Reg* %9755, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %9756 to i64*
  %9757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9758 = getelementptr inbounds %struct.GPR, %struct.GPR* %9757, i32 0, i32 5
  %9759 = getelementptr inbounds %struct.Reg, %struct.Reg* %9758, i32 0, i32 0
  %9760 = bitcast %union.anon* %9759 to %struct.anon.2*
  %CL.i1125 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9760, i32 0, i32 0
  %9761 = load i64, i64* %PC.i1124
  %9762 = add i64 %9761, 3
  store i64 %9762, i64* %PC.i1124
  %9763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9764 = load i8, i8* %9763, align 1
  %9765 = icmp ne i8 %9764, 0
  %9766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9767 = load i8, i8* %9766, align 1
  %9768 = icmp ne i8 %9767, 0
  %9769 = xor i1 %9765, %9768
  %9770 = zext i1 %9769 to i8
  store i8 %9770, i8* %CL.i1125, align 1
  store %struct.Memory* %loadMem_43abdd, %struct.Memory** %MEMORY
  %loadMem_43abe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9772 = getelementptr inbounds %struct.GPR, %struct.GPR* %9771, i32 0, i32 33
  %9773 = getelementptr inbounds %struct.Reg, %struct.Reg* %9772, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %9773 to i64*
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9775 = getelementptr inbounds %struct.GPR, %struct.GPR* %9774, i32 0, i32 5
  %9776 = getelementptr inbounds %struct.Reg, %struct.Reg* %9775, i32 0, i32 0
  %9777 = bitcast %union.anon* %9776 to %struct.anon.2*
  %CL.i1123 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9777, i32 0, i32 0
  %9778 = load i8, i8* %CL.i1123
  %9779 = zext i8 %9778 to i64
  %9780 = load i64, i64* %PC.i1122
  %9781 = add i64 %9780, 3
  store i64 %9781, i64* %PC.i1122
  %9782 = and i64 1, %9779
  %9783 = trunc i64 %9782 to i8
  store i8 %9783, i8* %CL.i1123, align 1
  %9784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9784, align 1
  %9785 = trunc i64 %9782 to i32
  %9786 = and i32 %9785, 255
  %9787 = call i32 @llvm.ctpop.i32(i32 %9786)
  %9788 = trunc i32 %9787 to i8
  %9789 = and i8 %9788, 1
  %9790 = xor i8 %9789, 1
  %9791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9790, i8* %9791, align 1
  %9792 = icmp eq i8 %9783, 0
  %9793 = zext i1 %9792 to i8
  %9794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9793, i8* %9794, align 1
  %9795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9795, align 1
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9796, align 1
  %9797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9797, align 1
  store %struct.Memory* %loadMem_43abe0, %struct.Memory** %MEMORY
  %loadMem_43abe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9799 = getelementptr inbounds %struct.GPR, %struct.GPR* %9798, i32 0, i32 33
  %9800 = getelementptr inbounds %struct.Reg, %struct.Reg* %9799, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %9800 to i64*
  %9801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9802 = getelementptr inbounds %struct.GPR, %struct.GPR* %9801, i32 0, i32 5
  %9803 = getelementptr inbounds %struct.Reg, %struct.Reg* %9802, i32 0, i32 0
  %9804 = bitcast %union.anon* %9803 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9804, i32 0, i32 0
  %9805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9806 = getelementptr inbounds %struct.GPR, %struct.GPR* %9805, i32 0, i32 1
  %9807 = getelementptr inbounds %struct.Reg, %struct.Reg* %9806, i32 0, i32 0
  %RAX.i1121 = bitcast %union.anon* %9807 to i64*
  %9808 = load i8, i8* %CL.i
  %9809 = zext i8 %9808 to i64
  %9810 = load i64, i64* %PC.i1120
  %9811 = add i64 %9810, 3
  store i64 %9811, i64* %PC.i1120
  %9812 = and i64 %9809, 255
  store i64 %9812, i64* %RAX.i1121, align 8
  store %struct.Memory* %loadMem_43abe3, %struct.Memory** %MEMORY
  %loadMem_43abe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9814 = getelementptr inbounds %struct.GPR, %struct.GPR* %9813, i32 0, i32 33
  %9815 = getelementptr inbounds %struct.Reg, %struct.Reg* %9814, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %9815 to i64*
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9817 = getelementptr inbounds %struct.GPR, %struct.GPR* %9816, i32 0, i32 1
  %9818 = getelementptr inbounds %struct.Reg, %struct.Reg* %9817, i32 0, i32 0
  %EAX.i1118 = bitcast %union.anon* %9818 to i32*
  %9819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9820 = getelementptr inbounds %struct.GPR, %struct.GPR* %9819, i32 0, i32 15
  %9821 = getelementptr inbounds %struct.Reg, %struct.Reg* %9820, i32 0, i32 0
  %RBP.i1119 = bitcast %union.anon* %9821 to i64*
  %9822 = load i64, i64* %RBP.i1119
  %9823 = sub i64 %9822, 80
  %9824 = load i32, i32* %EAX.i1118
  %9825 = zext i32 %9824 to i64
  %9826 = load i64, i64* %PC.i1117
  %9827 = add i64 %9826, 3
  store i64 %9827, i64* %PC.i1117
  %9828 = inttoptr i64 %9823 to i32*
  store i32 %9824, i32* %9828
  store %struct.Memory* %loadMem_43abe6, %struct.Memory** %MEMORY
  br label %block_.L_43abe9

block_.L_43abe9:                                  ; preds = %block_43ab9f, %block_43ab95
  %loadMem_43abe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9830 = getelementptr inbounds %struct.GPR, %struct.GPR* %9829, i32 0, i32 33
  %9831 = getelementptr inbounds %struct.Reg, %struct.Reg* %9830, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %9831 to i64*
  %9832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9833 = getelementptr inbounds %struct.GPR, %struct.GPR* %9832, i32 0, i32 1
  %9834 = getelementptr inbounds %struct.Reg, %struct.Reg* %9833, i32 0, i32 0
  %RAX.i1115 = bitcast %union.anon* %9834 to i64*
  %9835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9836 = getelementptr inbounds %struct.GPR, %struct.GPR* %9835, i32 0, i32 15
  %9837 = getelementptr inbounds %struct.Reg, %struct.Reg* %9836, i32 0, i32 0
  %RBP.i1116 = bitcast %union.anon* %9837 to i64*
  %9838 = load i64, i64* %RBP.i1116
  %9839 = sub i64 %9838, 128
  %9840 = load i64, i64* %PC.i1114
  %9841 = add i64 %9840, 3
  store i64 %9841, i64* %PC.i1114
  %9842 = inttoptr i64 %9839 to i32*
  %9843 = load i32, i32* %9842
  %9844 = zext i32 %9843 to i64
  store i64 %9844, i64* %RAX.i1115, align 8
  store %struct.Memory* %loadMem_43abe9, %struct.Memory** %MEMORY
  %loadMem_43abec = load %struct.Memory*, %struct.Memory** %MEMORY
  %9845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9846 = getelementptr inbounds %struct.GPR, %struct.GPR* %9845, i32 0, i32 33
  %9847 = getelementptr inbounds %struct.Reg, %struct.Reg* %9846, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %9847 to i64*
  %9848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9849 = getelementptr inbounds %struct.GPR, %struct.GPR* %9848, i32 0, i32 1
  %9850 = getelementptr inbounds %struct.Reg, %struct.Reg* %9849, i32 0, i32 0
  %RAX.i1112 = bitcast %union.anon* %9850 to i64*
  %9851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9852 = getelementptr inbounds %struct.GPR, %struct.GPR* %9851, i32 0, i32 15
  %9853 = getelementptr inbounds %struct.Reg, %struct.Reg* %9852, i32 0, i32 0
  %RBP.i1113 = bitcast %union.anon* %9853 to i64*
  %9854 = load i64, i64* %RAX.i1112
  %9855 = load i64, i64* %RBP.i1113
  %9856 = sub i64 %9855, 132
  %9857 = load i64, i64* %PC.i1111
  %9858 = add i64 %9857, 6
  store i64 %9858, i64* %PC.i1111
  %9859 = trunc i64 %9854 to i32
  %9860 = inttoptr i64 %9856 to i32*
  %9861 = load i32, i32* %9860
  %9862 = add i32 %9861, %9859
  %9863 = zext i32 %9862 to i64
  store i64 %9863, i64* %RAX.i1112, align 8
  %9864 = icmp ult i32 %9862, %9859
  %9865 = icmp ult i32 %9862, %9861
  %9866 = or i1 %9864, %9865
  %9867 = zext i1 %9866 to i8
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9867, i8* %9868, align 1
  %9869 = and i32 %9862, 255
  %9870 = call i32 @llvm.ctpop.i32(i32 %9869)
  %9871 = trunc i32 %9870 to i8
  %9872 = and i8 %9871, 1
  %9873 = xor i8 %9872, 1
  %9874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9873, i8* %9874, align 1
  %9875 = xor i32 %9861, %9859
  %9876 = xor i32 %9875, %9862
  %9877 = lshr i32 %9876, 4
  %9878 = trunc i32 %9877 to i8
  %9879 = and i8 %9878, 1
  %9880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9879, i8* %9880, align 1
  %9881 = icmp eq i32 %9862, 0
  %9882 = zext i1 %9881 to i8
  %9883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9882, i8* %9883, align 1
  %9884 = lshr i32 %9862, 31
  %9885 = trunc i32 %9884 to i8
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9885, i8* %9886, align 1
  %9887 = lshr i32 %9859, 31
  %9888 = lshr i32 %9861, 31
  %9889 = xor i32 %9884, %9887
  %9890 = xor i32 %9884, %9888
  %9891 = add i32 %9889, %9890
  %9892 = icmp eq i32 %9891, 2
  %9893 = zext i1 %9892 to i8
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9893, i8* %9894, align 1
  store %struct.Memory* %loadMem_43abec, %struct.Memory** %MEMORY
  %loadMem_43abf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9896 = getelementptr inbounds %struct.GPR, %struct.GPR* %9895, i32 0, i32 33
  %9897 = getelementptr inbounds %struct.Reg, %struct.Reg* %9896, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %9897 to i64*
  %9898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9899 = getelementptr inbounds %struct.GPR, %struct.GPR* %9898, i32 0, i32 1
  %9900 = getelementptr inbounds %struct.Reg, %struct.Reg* %9899, i32 0, i32 0
  %EAX.i1109 = bitcast %union.anon* %9900 to i32*
  %9901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9902 = getelementptr inbounds %struct.GPR, %struct.GPR* %9901, i32 0, i32 15
  %9903 = getelementptr inbounds %struct.Reg, %struct.Reg* %9902, i32 0, i32 0
  %RBP.i1110 = bitcast %union.anon* %9903 to i64*
  %9904 = load i64, i64* %RBP.i1110
  %9905 = sub i64 %9904, 144
  %9906 = load i32, i32* %EAX.i1109
  %9907 = zext i32 %9906 to i64
  %9908 = load i64, i64* %PC.i1108
  %9909 = add i64 %9908, 6
  store i64 %9909, i64* %PC.i1108
  %9910 = inttoptr i64 %9905 to i32*
  store i32 %9906, i32* %9910
  store %struct.Memory* %loadMem_43abf2, %struct.Memory** %MEMORY
  %loadMem_43abf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9912 = getelementptr inbounds %struct.GPR, %struct.GPR* %9911, i32 0, i32 33
  %9913 = getelementptr inbounds %struct.Reg, %struct.Reg* %9912, i32 0, i32 0
  %PC.i1106 = bitcast %union.anon* %9913 to i64*
  %9914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9915 = getelementptr inbounds %struct.GPR, %struct.GPR* %9914, i32 0, i32 15
  %9916 = getelementptr inbounds %struct.Reg, %struct.Reg* %9915, i32 0, i32 0
  %RBP.i1107 = bitcast %union.anon* %9916 to i64*
  %9917 = load i64, i64* %RBP.i1107
  %9918 = sub i64 %9917, 88
  %9919 = load i64, i64* %PC.i1106
  %9920 = add i64 %9919, 4
  store i64 %9920, i64* %PC.i1106
  %9921 = inttoptr i64 %9918 to i32*
  %9922 = load i32, i32* %9921
  %9923 = sub i32 %9922, 4
  %9924 = icmp ult i32 %9922, 4
  %9925 = zext i1 %9924 to i8
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9925, i8* %9926, align 1
  %9927 = and i32 %9923, 255
  %9928 = call i32 @llvm.ctpop.i32(i32 %9927)
  %9929 = trunc i32 %9928 to i8
  %9930 = and i8 %9929, 1
  %9931 = xor i8 %9930, 1
  %9932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9931, i8* %9932, align 1
  %9933 = xor i32 %9922, 4
  %9934 = xor i32 %9933, %9923
  %9935 = lshr i32 %9934, 4
  %9936 = trunc i32 %9935 to i8
  %9937 = and i8 %9936, 1
  %9938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9937, i8* %9938, align 1
  %9939 = icmp eq i32 %9923, 0
  %9940 = zext i1 %9939 to i8
  %9941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9940, i8* %9941, align 1
  %9942 = lshr i32 %9923, 31
  %9943 = trunc i32 %9942 to i8
  %9944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9943, i8* %9944, align 1
  %9945 = lshr i32 %9922, 31
  %9946 = xor i32 %9942, %9945
  %9947 = add i32 %9946, %9945
  %9948 = icmp eq i32 %9947, 2
  %9949 = zext i1 %9948 to i8
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9949, i8* %9950, align 1
  store %struct.Memory* %loadMem_43abf8, %struct.Memory** %MEMORY
  %loadMem_43abfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9952 = getelementptr inbounds %struct.GPR, %struct.GPR* %9951, i32 0, i32 33
  %9953 = getelementptr inbounds %struct.Reg, %struct.Reg* %9952, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %9953 to i64*
  %9954 = load i64, i64* %PC.i1105
  %9955 = add i64 %9954, 706
  %9956 = load i64, i64* %PC.i1105
  %9957 = add i64 %9956, 6
  %9958 = load i64, i64* %PC.i1105
  %9959 = add i64 %9958, 6
  store i64 %9959, i64* %PC.i1105
  %9960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9961 = load i8, i8* %9960, align 1
  %9962 = icmp eq i8 %9961, 0
  %9963 = zext i1 %9962 to i8
  store i8 %9963, i8* %BRANCH_TAKEN, align 1
  %9964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9965 = select i1 %9962, i64 %9955, i64 %9957
  store i64 %9965, i64* %9964, align 8
  store %struct.Memory* %loadMem_43abfc, %struct.Memory** %MEMORY
  %loadBr_43abfc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43abfc = icmp eq i8 %loadBr_43abfc, 1
  br i1 %cmpBr_43abfc, label %block_.L_43aebe, label %block_43ac02

block_43ac02:                                     ; preds = %block_.L_43abe9
  %loadMem_43ac02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9967 = getelementptr inbounds %struct.GPR, %struct.GPR* %9966, i32 0, i32 33
  %9968 = getelementptr inbounds %struct.Reg, %struct.Reg* %9967, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %9968 to i64*
  %9969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9970 = getelementptr inbounds %struct.GPR, %struct.GPR* %9969, i32 0, i32 15
  %9971 = getelementptr inbounds %struct.Reg, %struct.Reg* %9970, i32 0, i32 0
  %RBP.i1104 = bitcast %union.anon* %9971 to i64*
  %9972 = load i64, i64* %RBP.i1104
  %9973 = sub i64 %9972, 68
  %9974 = load i64, i64* %PC.i1103
  %9975 = add i64 %9974, 4
  store i64 %9975, i64* %PC.i1103
  %9976 = inttoptr i64 %9973 to i32*
  %9977 = load i32, i32* %9976
  %9978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9978, align 1
  %9979 = and i32 %9977, 255
  %9980 = call i32 @llvm.ctpop.i32(i32 %9979)
  %9981 = trunc i32 %9980 to i8
  %9982 = and i8 %9981, 1
  %9983 = xor i8 %9982, 1
  %9984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9983, i8* %9984, align 1
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9985, align 1
  %9986 = icmp eq i32 %9977, 0
  %9987 = zext i1 %9986 to i8
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9987, i8* %9988, align 1
  %9989 = lshr i32 %9977, 31
  %9990 = trunc i32 %9989 to i8
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9990, i8* %9991, align 1
  %9992 = lshr i32 %9977, 31
  %9993 = xor i32 %9989, %9992
  %9994 = add i32 %9993, %9992
  %9995 = icmp eq i32 %9994, 2
  %9996 = zext i1 %9995 to i8
  %9997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9996, i8* %9997, align 1
  store %struct.Memory* %loadMem_43ac02, %struct.Memory** %MEMORY
  %loadMem_43ac06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9999 = getelementptr inbounds %struct.GPR, %struct.GPR* %9998, i32 0, i32 33
  %10000 = getelementptr inbounds %struct.Reg, %struct.Reg* %9999, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %10000 to i64*
  %10001 = load i64, i64* %PC.i1102
  %10002 = add i64 %10001, 82
  %10003 = load i64, i64* %PC.i1102
  %10004 = add i64 %10003, 6
  %10005 = load i64, i64* %PC.i1102
  %10006 = add i64 %10005, 6
  store i64 %10006, i64* %PC.i1102
  %10007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10008 = load i8, i8* %10007, align 1
  store i8 %10008, i8* %BRANCH_TAKEN, align 1
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10010 = icmp ne i8 %10008, 0
  %10011 = select i1 %10010, i64 %10002, i64 %10004
  store i64 %10011, i64* %10009, align 8
  store %struct.Memory* %loadMem_43ac06, %struct.Memory** %MEMORY
  %loadBr_43ac06 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ac06 = icmp eq i8 %loadBr_43ac06, 1
  br i1 %cmpBr_43ac06, label %block_.L_43ac58, label %block_43ac0c

block_43ac0c:                                     ; preds = %block_43ac02
  %loadMem_43ac0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10013 = getelementptr inbounds %struct.GPR, %struct.GPR* %10012, i32 0, i32 33
  %10014 = getelementptr inbounds %struct.Reg, %struct.Reg* %10013, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %10014 to i64*
  %10015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10016 = getelementptr inbounds %struct.GPR, %struct.GPR* %10015, i32 0, i32 1
  %10017 = getelementptr inbounds %struct.Reg, %struct.Reg* %10016, i32 0, i32 0
  %RAX.i1100 = bitcast %union.anon* %10017 to i64*
  %10018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10019 = getelementptr inbounds %struct.GPR, %struct.GPR* %10018, i32 0, i32 15
  %10020 = getelementptr inbounds %struct.Reg, %struct.Reg* %10019, i32 0, i32 0
  %RBP.i1101 = bitcast %union.anon* %10020 to i64*
  %10021 = load i64, i64* %RBP.i1101
  %10022 = sub i64 %10021, 136
  %10023 = load i64, i64* %PC.i1099
  %10024 = add i64 %10023, 6
  store i64 %10024, i64* %PC.i1099
  %10025 = inttoptr i64 %10022 to i32*
  %10026 = load i32, i32* %10025
  %10027 = zext i32 %10026 to i64
  store i64 %10027, i64* %RAX.i1100, align 8
  store %struct.Memory* %loadMem_43ac0c, %struct.Memory** %MEMORY
  %loadMem_43ac12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10029 = getelementptr inbounds %struct.GPR, %struct.GPR* %10028, i32 0, i32 33
  %10030 = getelementptr inbounds %struct.Reg, %struct.Reg* %10029, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %10030 to i64*
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10032 = getelementptr inbounds %struct.GPR, %struct.GPR* %10031, i32 0, i32 1
  %10033 = getelementptr inbounds %struct.Reg, %struct.Reg* %10032, i32 0, i32 0
  %RAX.i1098 = bitcast %union.anon* %10033 to i64*
  %10034 = load i64, i64* %RAX.i1098
  %10035 = load i64, i64* %PC.i1097
  %10036 = add i64 %10035, 2
  store i64 %10036, i64* %PC.i1097
  %10037 = trunc i64 %10034 to i32
  %10038 = shl i32 %10037, 1
  %10039 = icmp slt i32 %10037, 0
  %10040 = icmp slt i32 %10038, 0
  %10041 = xor i1 %10039, %10040
  %10042 = zext i32 %10038 to i64
  store i64 %10042, i64* %RAX.i1098, align 8
  %10043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10044 = zext i1 %10039 to i8
  store i8 %10044, i8* %10043, align 1
  %10045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10046 = and i32 %10038, 254
  %10047 = call i32 @llvm.ctpop.i32(i32 %10046)
  %10048 = trunc i32 %10047 to i8
  %10049 = and i8 %10048, 1
  %10050 = xor i8 %10049, 1
  store i8 %10050, i8* %10045, align 1
  %10051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10051, align 1
  %10052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10053 = icmp eq i32 %10038, 0
  %10054 = zext i1 %10053 to i8
  store i8 %10054, i8* %10052, align 1
  %10055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10056 = lshr i32 %10038, 31
  %10057 = trunc i32 %10056 to i8
  store i8 %10057, i8* %10055, align 1
  %10058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10059 = zext i1 %10041 to i8
  store i8 %10059, i8* %10058, align 1
  store %struct.Memory* %loadMem_43ac12, %struct.Memory** %MEMORY
  %loadMem_43ac15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10061 = getelementptr inbounds %struct.GPR, %struct.GPR* %10060, i32 0, i32 33
  %10062 = getelementptr inbounds %struct.Reg, %struct.Reg* %10061, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %10062 to i64*
  %10063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10064 = getelementptr inbounds %struct.GPR, %struct.GPR* %10063, i32 0, i32 1
  %10065 = getelementptr inbounds %struct.Reg, %struct.Reg* %10064, i32 0, i32 0
  %RAX.i1095 = bitcast %union.anon* %10065 to i64*
  %10066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10067 = getelementptr inbounds %struct.GPR, %struct.GPR* %10066, i32 0, i32 15
  %10068 = getelementptr inbounds %struct.Reg, %struct.Reg* %10067, i32 0, i32 0
  %RBP.i1096 = bitcast %union.anon* %10068 to i64*
  %10069 = load i64, i64* %RAX.i1095
  %10070 = load i64, i64* %RBP.i1096
  %10071 = sub i64 %10070, 132
  %10072 = load i64, i64* %PC.i1094
  %10073 = add i64 %10072, 6
  store i64 %10073, i64* %PC.i1094
  %10074 = trunc i64 %10069 to i32
  %10075 = inttoptr i64 %10071 to i32*
  %10076 = load i32, i32* %10075
  %10077 = add i32 %10076, %10074
  %10078 = zext i32 %10077 to i64
  store i64 %10078, i64* %RAX.i1095, align 8
  %10079 = icmp ult i32 %10077, %10074
  %10080 = icmp ult i32 %10077, %10076
  %10081 = or i1 %10079, %10080
  %10082 = zext i1 %10081 to i8
  %10083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10082, i8* %10083, align 1
  %10084 = and i32 %10077, 255
  %10085 = call i32 @llvm.ctpop.i32(i32 %10084)
  %10086 = trunc i32 %10085 to i8
  %10087 = and i8 %10086, 1
  %10088 = xor i8 %10087, 1
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10088, i8* %10089, align 1
  %10090 = xor i32 %10076, %10074
  %10091 = xor i32 %10090, %10077
  %10092 = lshr i32 %10091, 4
  %10093 = trunc i32 %10092 to i8
  %10094 = and i8 %10093, 1
  %10095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10094, i8* %10095, align 1
  %10096 = icmp eq i32 %10077, 0
  %10097 = zext i1 %10096 to i8
  %10098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10097, i8* %10098, align 1
  %10099 = lshr i32 %10077, 31
  %10100 = trunc i32 %10099 to i8
  %10101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10100, i8* %10101, align 1
  %10102 = lshr i32 %10074, 31
  %10103 = lshr i32 %10076, 31
  %10104 = xor i32 %10099, %10102
  %10105 = xor i32 %10099, %10103
  %10106 = add i32 %10104, %10105
  %10107 = icmp eq i32 %10106, 2
  %10108 = zext i1 %10107 to i8
  %10109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10108, i8* %10109, align 1
  store %struct.Memory* %loadMem_43ac15, %struct.Memory** %MEMORY
  %loadMem_43ac1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10111 = getelementptr inbounds %struct.GPR, %struct.GPR* %10110, i32 0, i32 33
  %10112 = getelementptr inbounds %struct.Reg, %struct.Reg* %10111, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %10112 to i64*
  %10113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10114 = getelementptr inbounds %struct.GPR, %struct.GPR* %10113, i32 0, i32 1
  %10115 = getelementptr inbounds %struct.Reg, %struct.Reg* %10114, i32 0, i32 0
  %RAX.i1092 = bitcast %union.anon* %10115 to i64*
  %10116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10117 = getelementptr inbounds %struct.GPR, %struct.GPR* %10116, i32 0, i32 15
  %10118 = getelementptr inbounds %struct.Reg, %struct.Reg* %10117, i32 0, i32 0
  %RBP.i1093 = bitcast %union.anon* %10118 to i64*
  %10119 = load i64, i64* %RAX.i1092
  %10120 = load i64, i64* %RBP.i1093
  %10121 = sub i64 %10120, 124
  %10122 = load i64, i64* %PC.i1091
  %10123 = add i64 %10122, 3
  store i64 %10123, i64* %PC.i1091
  %10124 = trunc i64 %10119 to i32
  %10125 = inttoptr i64 %10121 to i32*
  %10126 = load i32, i32* %10125
  %10127 = add i32 %10126, %10124
  %10128 = zext i32 %10127 to i64
  store i64 %10128, i64* %RAX.i1092, align 8
  %10129 = icmp ult i32 %10127, %10124
  %10130 = icmp ult i32 %10127, %10126
  %10131 = or i1 %10129, %10130
  %10132 = zext i1 %10131 to i8
  %10133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10132, i8* %10133, align 1
  %10134 = and i32 %10127, 255
  %10135 = call i32 @llvm.ctpop.i32(i32 %10134)
  %10136 = trunc i32 %10135 to i8
  %10137 = and i8 %10136, 1
  %10138 = xor i8 %10137, 1
  %10139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10138, i8* %10139, align 1
  %10140 = xor i32 %10126, %10124
  %10141 = xor i32 %10140, %10127
  %10142 = lshr i32 %10141, 4
  %10143 = trunc i32 %10142 to i8
  %10144 = and i8 %10143, 1
  %10145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10144, i8* %10145, align 1
  %10146 = icmp eq i32 %10127, 0
  %10147 = zext i1 %10146 to i8
  %10148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10147, i8* %10148, align 1
  %10149 = lshr i32 %10127, 31
  %10150 = trunc i32 %10149 to i8
  %10151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10150, i8* %10151, align 1
  %10152 = lshr i32 %10124, 31
  %10153 = lshr i32 %10126, 31
  %10154 = xor i32 %10149, %10152
  %10155 = xor i32 %10149, %10153
  %10156 = add i32 %10154, %10155
  %10157 = icmp eq i32 %10156, 2
  %10158 = zext i1 %10157 to i8
  %10159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10158, i8* %10159, align 1
  store %struct.Memory* %loadMem_43ac1b, %struct.Memory** %MEMORY
  %loadMem_43ac1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10161 = getelementptr inbounds %struct.GPR, %struct.GPR* %10160, i32 0, i32 33
  %10162 = getelementptr inbounds %struct.Reg, %struct.Reg* %10161, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %10162 to i64*
  %10163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10164 = getelementptr inbounds %struct.GPR, %struct.GPR* %10163, i32 0, i32 1
  %10165 = getelementptr inbounds %struct.Reg, %struct.Reg* %10164, i32 0, i32 0
  %RAX.i1090 = bitcast %union.anon* %10165 to i64*
  %10166 = load i64, i64* %RAX.i1090
  %10167 = load i64, i64* %PC.i1089
  %10168 = add i64 %10167, 3
  store i64 %10168, i64* %PC.i1089
  %10169 = trunc i64 %10166 to i32
  %10170 = add i32 2, %10169
  %10171 = zext i32 %10170 to i64
  store i64 %10171, i64* %RAX.i1090, align 8
  %10172 = icmp ult i32 %10170, %10169
  %10173 = icmp ult i32 %10170, 2
  %10174 = or i1 %10172, %10173
  %10175 = zext i1 %10174 to i8
  %10176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10175, i8* %10176, align 1
  %10177 = and i32 %10170, 255
  %10178 = call i32 @llvm.ctpop.i32(i32 %10177)
  %10179 = trunc i32 %10178 to i8
  %10180 = and i8 %10179, 1
  %10181 = xor i8 %10180, 1
  %10182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10181, i8* %10182, align 1
  %10183 = xor i64 2, %10166
  %10184 = trunc i64 %10183 to i32
  %10185 = xor i32 %10184, %10170
  %10186 = lshr i32 %10185, 4
  %10187 = trunc i32 %10186 to i8
  %10188 = and i8 %10187, 1
  %10189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10188, i8* %10189, align 1
  %10190 = icmp eq i32 %10170, 0
  %10191 = zext i1 %10190 to i8
  %10192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10191, i8* %10192, align 1
  %10193 = lshr i32 %10170, 31
  %10194 = trunc i32 %10193 to i8
  %10195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10194, i8* %10195, align 1
  %10196 = lshr i32 %10169, 31
  %10197 = xor i32 %10193, %10196
  %10198 = add i32 %10197, %10193
  %10199 = icmp eq i32 %10198, 2
  %10200 = zext i1 %10199 to i8
  %10201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10200, i8* %10201, align 1
  store %struct.Memory* %loadMem_43ac1e, %struct.Memory** %MEMORY
  %loadMem_43ac21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10203 = getelementptr inbounds %struct.GPR, %struct.GPR* %10202, i32 0, i32 33
  %10204 = getelementptr inbounds %struct.Reg, %struct.Reg* %10203, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %10204 to i64*
  %10205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10206 = getelementptr inbounds %struct.GPR, %struct.GPR* %10205, i32 0, i32 1
  %10207 = getelementptr inbounds %struct.Reg, %struct.Reg* %10206, i32 0, i32 0
  %RAX.i1088 = bitcast %union.anon* %10207 to i64*
  %10208 = load i64, i64* %RAX.i1088
  %10209 = load i64, i64* %PC.i1087
  %10210 = add i64 %10209, 3
  store i64 %10210, i64* %PC.i1087
  %10211 = shl i64 %10208, 32
  %10212 = ashr exact i64 %10211, 32
  %10213 = ashr i64 %10212, 1
  %10214 = lshr i64 %10213, 1
  %10215 = trunc i64 %10213 to i8
  %10216 = and i8 %10215, 1
  %10217 = trunc i64 %10214 to i32
  %10218 = and i64 %10214, 4294967295
  store i64 %10218, i64* %RAX.i1088, align 8
  %10219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10216, i8* %10219, align 1
  %10220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10221 = and i32 %10217, 255
  %10222 = call i32 @llvm.ctpop.i32(i32 %10221)
  %10223 = trunc i32 %10222 to i8
  %10224 = and i8 %10223, 1
  %10225 = xor i8 %10224, 1
  store i8 %10225, i8* %10220, align 1
  %10226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10226, align 1
  %10227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10228 = icmp eq i32 %10217, 0
  %10229 = zext i1 %10228 to i8
  store i8 %10229, i8* %10227, align 1
  %10230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10231 = lshr i32 %10217, 31
  %10232 = trunc i32 %10231 to i8
  store i8 %10232, i8* %10230, align 1
  %10233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10233, align 1
  store %struct.Memory* %loadMem_43ac21, %struct.Memory** %MEMORY
  %loadMem_43ac24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10235 = getelementptr inbounds %struct.GPR, %struct.GPR* %10234, i32 0, i32 33
  %10236 = getelementptr inbounds %struct.Reg, %struct.Reg* %10235, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %10236 to i64*
  %10237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10238 = getelementptr inbounds %struct.GPR, %struct.GPR* %10237, i32 0, i32 1
  %10239 = getelementptr inbounds %struct.Reg, %struct.Reg* %10238, i32 0, i32 0
  %AX.i1085 = bitcast %union.anon* %10239 to i16*
  %10240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10241 = getelementptr inbounds %struct.GPR, %struct.GPR* %10240, i32 0, i32 5
  %10242 = getelementptr inbounds %struct.Reg, %struct.Reg* %10241, i32 0, i32 0
  %CX.i1086 = bitcast %union.anon* %10242 to i16*
  %10243 = load i16, i16* %AX.i1085
  %10244 = zext i16 %10243 to i64
  %10245 = load i64, i64* %PC.i1084
  %10246 = add i64 %10245, 3
  store i64 %10246, i64* %PC.i1084
  store i16 %10243, i16* %CX.i1086, align 2
  store %struct.Memory* %loadMem_43ac24, %struct.Memory** %MEMORY
  %loadMem_43ac27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10248 = getelementptr inbounds %struct.GPR, %struct.GPR* %10247, i32 0, i32 33
  %10249 = getelementptr inbounds %struct.Reg, %struct.Reg* %10248, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %10249 to i64*
  %10250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10251 = getelementptr inbounds %struct.GPR, %struct.GPR* %10250, i32 0, i32 7
  %10252 = getelementptr inbounds %struct.Reg, %struct.Reg* %10251, i32 0, i32 0
  %RDX.i1082 = bitcast %union.anon* %10252 to i64*
  %10253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10254 = getelementptr inbounds %struct.GPR, %struct.GPR* %10253, i32 0, i32 15
  %10255 = getelementptr inbounds %struct.Reg, %struct.Reg* %10254, i32 0, i32 0
  %RBP.i1083 = bitcast %union.anon* %10255 to i64*
  %10256 = load i64, i64* %RBP.i1083
  %10257 = sub i64 %10256, 208
  %10258 = load i64, i64* %PC.i1081
  %10259 = add i64 %10258, 7
  store i64 %10259, i64* %PC.i1081
  %10260 = inttoptr i64 %10257 to i64*
  %10261 = load i64, i64* %10260
  store i64 %10261, i64* %RDX.i1082, align 8
  store %struct.Memory* %loadMem_43ac27, %struct.Memory** %MEMORY
  %loadMem_43ac2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10263 = getelementptr inbounds %struct.GPR, %struct.GPR* %10262, i32 0, i32 33
  %10264 = getelementptr inbounds %struct.Reg, %struct.Reg* %10263, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %10264 to i64*
  %10265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10266 = getelementptr inbounds %struct.GPR, %struct.GPR* %10265, i32 0, i32 5
  %10267 = getelementptr inbounds %struct.Reg, %struct.Reg* %10266, i32 0, i32 0
  %CX.i1079 = bitcast %union.anon* %10267 to i16*
  %10268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10269 = getelementptr inbounds %struct.GPR, %struct.GPR* %10268, i32 0, i32 7
  %10270 = getelementptr inbounds %struct.Reg, %struct.Reg* %10269, i32 0, i32 0
  %RDX.i1080 = bitcast %union.anon* %10270 to i64*
  %10271 = load i64, i64* %RDX.i1080
  %10272 = load i16, i16* %CX.i1079
  %10273 = zext i16 %10272 to i64
  %10274 = load i64, i64* %PC.i1078
  %10275 = add i64 %10274, 3
  store i64 %10275, i64* %PC.i1078
  %10276 = inttoptr i64 %10271 to i16*
  store i16 %10272, i16* %10276
  store %struct.Memory* %loadMem_43ac2e, %struct.Memory** %MEMORY
  %loadMem_43ac31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10278 = getelementptr inbounds %struct.GPR, %struct.GPR* %10277, i32 0, i32 33
  %10279 = getelementptr inbounds %struct.Reg, %struct.Reg* %10278, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %10279 to i64*
  %10280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10281 = getelementptr inbounds %struct.GPR, %struct.GPR* %10280, i32 0, i32 1
  %10282 = getelementptr inbounds %struct.Reg, %struct.Reg* %10281, i32 0, i32 0
  %RAX.i1076 = bitcast %union.anon* %10282 to i64*
  %10283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10284 = getelementptr inbounds %struct.GPR, %struct.GPR* %10283, i32 0, i32 15
  %10285 = getelementptr inbounds %struct.Reg, %struct.Reg* %10284, i32 0, i32 0
  %RBP.i1077 = bitcast %union.anon* %10285 to i64*
  %10286 = load i64, i64* %RBP.i1077
  %10287 = sub i64 %10286, 124
  %10288 = load i64, i64* %PC.i1075
  %10289 = add i64 %10288, 3
  store i64 %10289, i64* %PC.i1075
  %10290 = inttoptr i64 %10287 to i32*
  %10291 = load i32, i32* %10290
  %10292 = zext i32 %10291 to i64
  store i64 %10292, i64* %RAX.i1076, align 8
  store %struct.Memory* %loadMem_43ac31, %struct.Memory** %MEMORY
  %loadMem_43ac34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10294 = getelementptr inbounds %struct.GPR, %struct.GPR* %10293, i32 0, i32 33
  %10295 = getelementptr inbounds %struct.Reg, %struct.Reg* %10294, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %10295 to i64*
  %10296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10297 = getelementptr inbounds %struct.GPR, %struct.GPR* %10296, i32 0, i32 1
  %10298 = getelementptr inbounds %struct.Reg, %struct.Reg* %10297, i32 0, i32 0
  %RAX.i1074 = bitcast %union.anon* %10298 to i64*
  %10299 = load i64, i64* %RAX.i1074
  %10300 = load i64, i64* %PC.i1073
  %10301 = add i64 %10300, 2
  store i64 %10301, i64* %PC.i1073
  %10302 = trunc i64 %10299 to i32
  %10303 = shl i32 %10302, 1
  %10304 = icmp slt i32 %10302, 0
  %10305 = icmp slt i32 %10303, 0
  %10306 = xor i1 %10304, %10305
  %10307 = zext i32 %10303 to i64
  store i64 %10307, i64* %RAX.i1074, align 8
  %10308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10309 = zext i1 %10304 to i8
  store i8 %10309, i8* %10308, align 1
  %10310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10311 = and i32 %10303, 254
  %10312 = call i32 @llvm.ctpop.i32(i32 %10311)
  %10313 = trunc i32 %10312 to i8
  %10314 = and i8 %10313, 1
  %10315 = xor i8 %10314, 1
  store i8 %10315, i8* %10310, align 1
  %10316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10316, align 1
  %10317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10318 = icmp eq i32 %10303, 0
  %10319 = zext i1 %10318 to i8
  store i8 %10319, i8* %10317, align 1
  %10320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10321 = lshr i32 %10303, 31
  %10322 = trunc i32 %10321 to i8
  store i8 %10322, i8* %10320, align 1
  %10323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10324 = zext i1 %10306 to i8
  store i8 %10324, i8* %10323, align 1
  store %struct.Memory* %loadMem_43ac34, %struct.Memory** %MEMORY
  %loadMem_43ac37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10326 = getelementptr inbounds %struct.GPR, %struct.GPR* %10325, i32 0, i32 33
  %10327 = getelementptr inbounds %struct.Reg, %struct.Reg* %10326, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %10327 to i64*
  %10328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10329 = getelementptr inbounds %struct.GPR, %struct.GPR* %10328, i32 0, i32 1
  %10330 = getelementptr inbounds %struct.Reg, %struct.Reg* %10329, i32 0, i32 0
  %RAX.i1071 = bitcast %union.anon* %10330 to i64*
  %10331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10332 = getelementptr inbounds %struct.GPR, %struct.GPR* %10331, i32 0, i32 15
  %10333 = getelementptr inbounds %struct.Reg, %struct.Reg* %10332, i32 0, i32 0
  %RBP.i1072 = bitcast %union.anon* %10333 to i64*
  %10334 = load i64, i64* %RAX.i1071
  %10335 = load i64, i64* %RBP.i1072
  %10336 = sub i64 %10335, 128
  %10337 = load i64, i64* %PC.i1070
  %10338 = add i64 %10337, 3
  store i64 %10338, i64* %PC.i1070
  %10339 = trunc i64 %10334 to i32
  %10340 = inttoptr i64 %10336 to i32*
  %10341 = load i32, i32* %10340
  %10342 = add i32 %10341, %10339
  %10343 = zext i32 %10342 to i64
  store i64 %10343, i64* %RAX.i1071, align 8
  %10344 = icmp ult i32 %10342, %10339
  %10345 = icmp ult i32 %10342, %10341
  %10346 = or i1 %10344, %10345
  %10347 = zext i1 %10346 to i8
  %10348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10347, i8* %10348, align 1
  %10349 = and i32 %10342, 255
  %10350 = call i32 @llvm.ctpop.i32(i32 %10349)
  %10351 = trunc i32 %10350 to i8
  %10352 = and i8 %10351, 1
  %10353 = xor i8 %10352, 1
  %10354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10353, i8* %10354, align 1
  %10355 = xor i32 %10341, %10339
  %10356 = xor i32 %10355, %10342
  %10357 = lshr i32 %10356, 4
  %10358 = trunc i32 %10357 to i8
  %10359 = and i8 %10358, 1
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10359, i8* %10360, align 1
  %10361 = icmp eq i32 %10342, 0
  %10362 = zext i1 %10361 to i8
  %10363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10362, i8* %10363, align 1
  %10364 = lshr i32 %10342, 31
  %10365 = trunc i32 %10364 to i8
  %10366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10365, i8* %10366, align 1
  %10367 = lshr i32 %10339, 31
  %10368 = lshr i32 %10341, 31
  %10369 = xor i32 %10364, %10367
  %10370 = xor i32 %10364, %10368
  %10371 = add i32 %10369, %10370
  %10372 = icmp eq i32 %10371, 2
  %10373 = zext i1 %10372 to i8
  %10374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10373, i8* %10374, align 1
  store %struct.Memory* %loadMem_43ac37, %struct.Memory** %MEMORY
  %loadMem_43ac3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10376 = getelementptr inbounds %struct.GPR, %struct.GPR* %10375, i32 0, i32 33
  %10377 = getelementptr inbounds %struct.Reg, %struct.Reg* %10376, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %10377 to i64*
  %10378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10379 = getelementptr inbounds %struct.GPR, %struct.GPR* %10378, i32 0, i32 1
  %10380 = getelementptr inbounds %struct.Reg, %struct.Reg* %10379, i32 0, i32 0
  %RAX.i1068 = bitcast %union.anon* %10380 to i64*
  %10381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10382 = getelementptr inbounds %struct.GPR, %struct.GPR* %10381, i32 0, i32 15
  %10383 = getelementptr inbounds %struct.Reg, %struct.Reg* %10382, i32 0, i32 0
  %RBP.i1069 = bitcast %union.anon* %10383 to i64*
  %10384 = load i64, i64* %RAX.i1068
  %10385 = load i64, i64* %RBP.i1069
  %10386 = sub i64 %10385, 136
  %10387 = load i64, i64* %PC.i1067
  %10388 = add i64 %10387, 6
  store i64 %10388, i64* %PC.i1067
  %10389 = trunc i64 %10384 to i32
  %10390 = inttoptr i64 %10386 to i32*
  %10391 = load i32, i32* %10390
  %10392 = add i32 %10391, %10389
  %10393 = zext i32 %10392 to i64
  store i64 %10393, i64* %RAX.i1068, align 8
  %10394 = icmp ult i32 %10392, %10389
  %10395 = icmp ult i32 %10392, %10391
  %10396 = or i1 %10394, %10395
  %10397 = zext i1 %10396 to i8
  %10398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10397, i8* %10398, align 1
  %10399 = and i32 %10392, 255
  %10400 = call i32 @llvm.ctpop.i32(i32 %10399)
  %10401 = trunc i32 %10400 to i8
  %10402 = and i8 %10401, 1
  %10403 = xor i8 %10402, 1
  %10404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10403, i8* %10404, align 1
  %10405 = xor i32 %10391, %10389
  %10406 = xor i32 %10405, %10392
  %10407 = lshr i32 %10406, 4
  %10408 = trunc i32 %10407 to i8
  %10409 = and i8 %10408, 1
  %10410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10409, i8* %10410, align 1
  %10411 = icmp eq i32 %10392, 0
  %10412 = zext i1 %10411 to i8
  %10413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10412, i8* %10413, align 1
  %10414 = lshr i32 %10392, 31
  %10415 = trunc i32 %10414 to i8
  %10416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10415, i8* %10416, align 1
  %10417 = lshr i32 %10389, 31
  %10418 = lshr i32 %10391, 31
  %10419 = xor i32 %10414, %10417
  %10420 = xor i32 %10414, %10418
  %10421 = add i32 %10419, %10420
  %10422 = icmp eq i32 %10421, 2
  %10423 = zext i1 %10422 to i8
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10423, i8* %10424, align 1
  store %struct.Memory* %loadMem_43ac3a, %struct.Memory** %MEMORY
  %loadMem_43ac40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10426 = getelementptr inbounds %struct.GPR, %struct.GPR* %10425, i32 0, i32 33
  %10427 = getelementptr inbounds %struct.Reg, %struct.Reg* %10426, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %10427 to i64*
  %10428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10429 = getelementptr inbounds %struct.GPR, %struct.GPR* %10428, i32 0, i32 1
  %10430 = getelementptr inbounds %struct.Reg, %struct.Reg* %10429, i32 0, i32 0
  %RAX.i1066 = bitcast %union.anon* %10430 to i64*
  %10431 = load i64, i64* %RAX.i1066
  %10432 = load i64, i64* %PC.i1065
  %10433 = add i64 %10432, 3
  store i64 %10433, i64* %PC.i1065
  %10434 = trunc i64 %10431 to i32
  %10435 = add i32 2, %10434
  %10436 = zext i32 %10435 to i64
  store i64 %10436, i64* %RAX.i1066, align 8
  %10437 = icmp ult i32 %10435, %10434
  %10438 = icmp ult i32 %10435, 2
  %10439 = or i1 %10437, %10438
  %10440 = zext i1 %10439 to i8
  %10441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10440, i8* %10441, align 1
  %10442 = and i32 %10435, 255
  %10443 = call i32 @llvm.ctpop.i32(i32 %10442)
  %10444 = trunc i32 %10443 to i8
  %10445 = and i8 %10444, 1
  %10446 = xor i8 %10445, 1
  %10447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10446, i8* %10447, align 1
  %10448 = xor i64 2, %10431
  %10449 = trunc i64 %10448 to i32
  %10450 = xor i32 %10449, %10435
  %10451 = lshr i32 %10450, 4
  %10452 = trunc i32 %10451 to i8
  %10453 = and i8 %10452, 1
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10453, i8* %10454, align 1
  %10455 = icmp eq i32 %10435, 0
  %10456 = zext i1 %10455 to i8
  %10457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10456, i8* %10457, align 1
  %10458 = lshr i32 %10435, 31
  %10459 = trunc i32 %10458 to i8
  %10460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10459, i8* %10460, align 1
  %10461 = lshr i32 %10434, 31
  %10462 = xor i32 %10458, %10461
  %10463 = add i32 %10462, %10458
  %10464 = icmp eq i32 %10463, 2
  %10465 = zext i1 %10464 to i8
  %10466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10465, i8* %10466, align 1
  store %struct.Memory* %loadMem_43ac40, %struct.Memory** %MEMORY
  %loadMem_43ac43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10468 = getelementptr inbounds %struct.GPR, %struct.GPR* %10467, i32 0, i32 33
  %10469 = getelementptr inbounds %struct.Reg, %struct.Reg* %10468, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %10469 to i64*
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10471 = getelementptr inbounds %struct.GPR, %struct.GPR* %10470, i32 0, i32 1
  %10472 = getelementptr inbounds %struct.Reg, %struct.Reg* %10471, i32 0, i32 0
  %RAX.i1064 = bitcast %union.anon* %10472 to i64*
  %10473 = load i64, i64* %RAX.i1064
  %10474 = load i64, i64* %PC.i1063
  %10475 = add i64 %10474, 3
  store i64 %10475, i64* %PC.i1063
  %10476 = shl i64 %10473, 32
  %10477 = ashr exact i64 %10476, 32
  %10478 = ashr i64 %10477, 1
  %10479 = lshr i64 %10478, 1
  %10480 = trunc i64 %10478 to i8
  %10481 = and i8 %10480, 1
  %10482 = trunc i64 %10479 to i32
  %10483 = and i64 %10479, 4294967295
  store i64 %10483, i64* %RAX.i1064, align 8
  %10484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10481, i8* %10484, align 1
  %10485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10486 = and i32 %10482, 255
  %10487 = call i32 @llvm.ctpop.i32(i32 %10486)
  %10488 = trunc i32 %10487 to i8
  %10489 = and i8 %10488, 1
  %10490 = xor i8 %10489, 1
  store i8 %10490, i8* %10485, align 1
  %10491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10491, align 1
  %10492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10493 = icmp eq i32 %10482, 0
  %10494 = zext i1 %10493 to i8
  store i8 %10494, i8* %10492, align 1
  %10495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10496 = lshr i32 %10482, 31
  %10497 = trunc i32 %10496 to i8
  store i8 %10497, i8* %10495, align 1
  %10498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10498, align 1
  store %struct.Memory* %loadMem_43ac43, %struct.Memory** %MEMORY
  %loadMem_43ac46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10500 = getelementptr inbounds %struct.GPR, %struct.GPR* %10499, i32 0, i32 33
  %10501 = getelementptr inbounds %struct.Reg, %struct.Reg* %10500, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %10501 to i64*
  %10502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10503 = getelementptr inbounds %struct.GPR, %struct.GPR* %10502, i32 0, i32 1
  %10504 = getelementptr inbounds %struct.Reg, %struct.Reg* %10503, i32 0, i32 0
  %AX.i1061 = bitcast %union.anon* %10504 to i16*
  %10505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10506 = getelementptr inbounds %struct.GPR, %struct.GPR* %10505, i32 0, i32 5
  %10507 = getelementptr inbounds %struct.Reg, %struct.Reg* %10506, i32 0, i32 0
  %CX.i1062 = bitcast %union.anon* %10507 to i16*
  %10508 = load i16, i16* %AX.i1061
  %10509 = zext i16 %10508 to i64
  %10510 = load i64, i64* %PC.i1060
  %10511 = add i64 %10510, 3
  store i64 %10511, i64* %PC.i1060
  store i16 %10508, i16* %CX.i1062, align 2
  store %struct.Memory* %loadMem_43ac46, %struct.Memory** %MEMORY
  %loadMem_43ac49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10513 = getelementptr inbounds %struct.GPR, %struct.GPR* %10512, i32 0, i32 33
  %10514 = getelementptr inbounds %struct.Reg, %struct.Reg* %10513, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %10514 to i64*
  %10515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10516 = getelementptr inbounds %struct.GPR, %struct.GPR* %10515, i32 0, i32 7
  %10517 = getelementptr inbounds %struct.Reg, %struct.Reg* %10516, i32 0, i32 0
  %RDX.i1058 = bitcast %union.anon* %10517 to i64*
  %10518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10519 = getelementptr inbounds %struct.GPR, %struct.GPR* %10518, i32 0, i32 15
  %10520 = getelementptr inbounds %struct.Reg, %struct.Reg* %10519, i32 0, i32 0
  %RBP.i1059 = bitcast %union.anon* %10520 to i64*
  %10521 = load i64, i64* %RBP.i1059
  %10522 = sub i64 %10521, 200
  %10523 = load i64, i64* %PC.i1057
  %10524 = add i64 %10523, 7
  store i64 %10524, i64* %PC.i1057
  %10525 = inttoptr i64 %10522 to i64*
  %10526 = load i64, i64* %10525
  store i64 %10526, i64* %RDX.i1058, align 8
  store %struct.Memory* %loadMem_43ac49, %struct.Memory** %MEMORY
  %loadMem_43ac50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10528 = getelementptr inbounds %struct.GPR, %struct.GPR* %10527, i32 0, i32 33
  %10529 = getelementptr inbounds %struct.Reg, %struct.Reg* %10528, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %10529 to i64*
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10531 = getelementptr inbounds %struct.GPR, %struct.GPR* %10530, i32 0, i32 5
  %10532 = getelementptr inbounds %struct.Reg, %struct.Reg* %10531, i32 0, i32 0
  %CX.i1055 = bitcast %union.anon* %10532 to i16*
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10534 = getelementptr inbounds %struct.GPR, %struct.GPR* %10533, i32 0, i32 7
  %10535 = getelementptr inbounds %struct.Reg, %struct.Reg* %10534, i32 0, i32 0
  %RDX.i1056 = bitcast %union.anon* %10535 to i64*
  %10536 = load i64, i64* %RDX.i1056
  %10537 = load i16, i16* %CX.i1055
  %10538 = zext i16 %10537 to i64
  %10539 = load i64, i64* %PC.i1054
  %10540 = add i64 %10539, 3
  store i64 %10540, i64* %PC.i1054
  %10541 = inttoptr i64 %10536 to i16*
  store i16 %10537, i16* %10541
  store %struct.Memory* %loadMem_43ac50, %struct.Memory** %MEMORY
  %loadMem_43ac53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10543 = getelementptr inbounds %struct.GPR, %struct.GPR* %10542, i32 0, i32 33
  %10544 = getelementptr inbounds %struct.Reg, %struct.Reg* %10543, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %10544 to i64*
  %10545 = load i64, i64* %PC.i1053
  %10546 = add i64 %10545, 614
  %10547 = load i64, i64* %PC.i1053
  %10548 = add i64 %10547, 5
  store i64 %10548, i64* %PC.i1053
  %10549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10546, i64* %10549, align 8
  store %struct.Memory* %loadMem_43ac53, %struct.Memory** %MEMORY
  br label %block_.L_43aeb9

block_.L_43ac58:                                  ; preds = %block_43ac02
  %loadMem_43ac58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10551 = getelementptr inbounds %struct.GPR, %struct.GPR* %10550, i32 0, i32 33
  %10552 = getelementptr inbounds %struct.Reg, %struct.Reg* %10551, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %10552 to i64*
  %10553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10554 = getelementptr inbounds %struct.GPR, %struct.GPR* %10553, i32 0, i32 1
  %10555 = getelementptr inbounds %struct.Reg, %struct.Reg* %10554, i32 0, i32 0
  %RAX.i1051 = bitcast %union.anon* %10555 to i64*
  %10556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10557 = getelementptr inbounds %struct.GPR, %struct.GPR* %10556, i32 0, i32 15
  %10558 = getelementptr inbounds %struct.Reg, %struct.Reg* %10557, i32 0, i32 0
  %RBP.i1052 = bitcast %union.anon* %10558 to i64*
  %10559 = load i64, i64* %RBP.i1052
  %10560 = sub i64 %10559, 116
  %10561 = load i64, i64* %PC.i1050
  %10562 = add i64 %10561, 3
  store i64 %10562, i64* %PC.i1050
  %10563 = inttoptr i64 %10560 to i32*
  %10564 = load i32, i32* %10563
  %10565 = zext i32 %10564 to i64
  store i64 %10565, i64* %RAX.i1051, align 8
  store %struct.Memory* %loadMem_43ac58, %struct.Memory** %MEMORY
  %loadMem_43ac5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10567 = getelementptr inbounds %struct.GPR, %struct.GPR* %10566, i32 0, i32 33
  %10568 = getelementptr inbounds %struct.Reg, %struct.Reg* %10567, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %10568 to i64*
  %10569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10570 = getelementptr inbounds %struct.GPR, %struct.GPR* %10569, i32 0, i32 5
  %10571 = getelementptr inbounds %struct.Reg, %struct.Reg* %10570, i32 0, i32 0
  %RCX.i1048 = bitcast %union.anon* %10571 to i64*
  %10572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10573 = getelementptr inbounds %struct.GPR, %struct.GPR* %10572, i32 0, i32 15
  %10574 = getelementptr inbounds %struct.Reg, %struct.Reg* %10573, i32 0, i32 0
  %RBP.i1049 = bitcast %union.anon* %10574 to i64*
  %10575 = load i64, i64* %RBP.i1049
  %10576 = sub i64 %10575, 156
  %10577 = load i64, i64* %PC.i1047
  %10578 = add i64 %10577, 6
  store i64 %10578, i64* %PC.i1047
  %10579 = inttoptr i64 %10576 to i32*
  %10580 = load i32, i32* %10579
  %10581 = zext i32 %10580 to i64
  store i64 %10581, i64* %RCX.i1048, align 8
  store %struct.Memory* %loadMem_43ac5b, %struct.Memory** %MEMORY
  %loadMem_43ac61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10583 = getelementptr inbounds %struct.GPR, %struct.GPR* %10582, i32 0, i32 33
  %10584 = getelementptr inbounds %struct.Reg, %struct.Reg* %10583, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %10584 to i64*
  %10585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10586 = getelementptr inbounds %struct.GPR, %struct.GPR* %10585, i32 0, i32 5
  %10587 = getelementptr inbounds %struct.Reg, %struct.Reg* %10586, i32 0, i32 0
  %RCX.i1046 = bitcast %union.anon* %10587 to i64*
  %10588 = load i64, i64* %RCX.i1046
  %10589 = load i64, i64* %PC.i1045
  %10590 = add i64 %10589, 3
  store i64 %10590, i64* %PC.i1045
  %10591 = shl i64 %10588, 32
  %10592 = ashr exact i64 %10591, 32
  %10593 = ashr i64 %10592, 1
  %10594 = lshr i64 %10593, 1
  %10595 = trunc i64 %10593 to i8
  %10596 = and i8 %10595, 1
  %10597 = trunc i64 %10594 to i32
  %10598 = and i64 %10594, 4294967295
  store i64 %10598, i64* %RCX.i1046, align 8
  %10599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10596, i8* %10599, align 1
  %10600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10601 = and i32 %10597, 255
  %10602 = call i32 @llvm.ctpop.i32(i32 %10601)
  %10603 = trunc i32 %10602 to i8
  %10604 = and i8 %10603, 1
  %10605 = xor i8 %10604, 1
  store i8 %10605, i8* %10600, align 1
  %10606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10606, align 1
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10608 = icmp eq i32 %10597, 0
  %10609 = zext i1 %10608 to i8
  store i8 %10609, i8* %10607, align 1
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10611 = lshr i32 %10597, 31
  %10612 = trunc i32 %10611 to i8
  store i8 %10612, i8* %10610, align 1
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10613, align 1
  store %struct.Memory* %loadMem_43ac61, %struct.Memory** %MEMORY
  %loadMem_43ac64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10615 = getelementptr inbounds %struct.GPR, %struct.GPR* %10614, i32 0, i32 33
  %10616 = getelementptr inbounds %struct.Reg, %struct.Reg* %10615, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %10616 to i64*
  %10617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10618 = getelementptr inbounds %struct.GPR, %struct.GPR* %10617, i32 0, i32 5
  %10619 = getelementptr inbounds %struct.Reg, %struct.Reg* %10618, i32 0, i32 0
  %RCX.i1044 = bitcast %union.anon* %10619 to i64*
  %10620 = load i64, i64* %RCX.i1044
  %10621 = load i64, i64* %PC.i1043
  %10622 = add i64 %10621, 3
  store i64 %10622, i64* %PC.i1043
  %10623 = trunc i64 %10620 to i32
  %10624 = add i32 2, %10623
  %10625 = zext i32 %10624 to i64
  store i64 %10625, i64* %RCX.i1044, align 8
  %10626 = icmp ult i32 %10624, %10623
  %10627 = icmp ult i32 %10624, 2
  %10628 = or i1 %10626, %10627
  %10629 = zext i1 %10628 to i8
  %10630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10629, i8* %10630, align 1
  %10631 = and i32 %10624, 255
  %10632 = call i32 @llvm.ctpop.i32(i32 %10631)
  %10633 = trunc i32 %10632 to i8
  %10634 = and i8 %10633, 1
  %10635 = xor i8 %10634, 1
  %10636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10635, i8* %10636, align 1
  %10637 = xor i64 2, %10620
  %10638 = trunc i64 %10637 to i32
  %10639 = xor i32 %10638, %10624
  %10640 = lshr i32 %10639, 4
  %10641 = trunc i32 %10640 to i8
  %10642 = and i8 %10641, 1
  %10643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10642, i8* %10643, align 1
  %10644 = icmp eq i32 %10624, 0
  %10645 = zext i1 %10644 to i8
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10645, i8* %10646, align 1
  %10647 = lshr i32 %10624, 31
  %10648 = trunc i32 %10647 to i8
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10648, i8* %10649, align 1
  %10650 = lshr i32 %10623, 31
  %10651 = xor i32 %10647, %10650
  %10652 = add i32 %10651, %10647
  %10653 = icmp eq i32 %10652, 2
  %10654 = zext i1 %10653 to i8
  %10655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10654, i8* %10655, align 1
  store %struct.Memory* %loadMem_43ac64, %struct.Memory** %MEMORY
  %loadMem_43ac67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10657 = getelementptr inbounds %struct.GPR, %struct.GPR* %10656, i32 0, i32 33
  %10658 = getelementptr inbounds %struct.Reg, %struct.Reg* %10657, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %10658 to i64*
  %10659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10660 = getelementptr inbounds %struct.GPR, %struct.GPR* %10659, i32 0, i32 1
  %10661 = getelementptr inbounds %struct.Reg, %struct.Reg* %10660, i32 0, i32 0
  %EAX.i1041 = bitcast %union.anon* %10661 to i32*
  %10662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10663 = getelementptr inbounds %struct.GPR, %struct.GPR* %10662, i32 0, i32 5
  %10664 = getelementptr inbounds %struct.Reg, %struct.Reg* %10663, i32 0, i32 0
  %ECX.i1042 = bitcast %union.anon* %10664 to i32*
  %10665 = load i32, i32* %EAX.i1041
  %10666 = zext i32 %10665 to i64
  %10667 = load i32, i32* %ECX.i1042
  %10668 = zext i32 %10667 to i64
  %10669 = load i64, i64* %PC.i1040
  %10670 = add i64 %10669, 2
  store i64 %10670, i64* %PC.i1040
  %10671 = sub i32 %10665, %10667
  %10672 = icmp ult i32 %10665, %10667
  %10673 = zext i1 %10672 to i8
  %10674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10673, i8* %10674, align 1
  %10675 = and i32 %10671, 255
  %10676 = call i32 @llvm.ctpop.i32(i32 %10675)
  %10677 = trunc i32 %10676 to i8
  %10678 = and i8 %10677, 1
  %10679 = xor i8 %10678, 1
  %10680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10679, i8* %10680, align 1
  %10681 = xor i64 %10668, %10666
  %10682 = trunc i64 %10681 to i32
  %10683 = xor i32 %10682, %10671
  %10684 = lshr i32 %10683, 4
  %10685 = trunc i32 %10684 to i8
  %10686 = and i8 %10685, 1
  %10687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10686, i8* %10687, align 1
  %10688 = icmp eq i32 %10671, 0
  %10689 = zext i1 %10688 to i8
  %10690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10689, i8* %10690, align 1
  %10691 = lshr i32 %10671, 31
  %10692 = trunc i32 %10691 to i8
  %10693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10692, i8* %10693, align 1
  %10694 = lshr i32 %10665, 31
  %10695 = lshr i32 %10667, 31
  %10696 = xor i32 %10695, %10694
  %10697 = xor i32 %10691, %10694
  %10698 = add i32 %10697, %10696
  %10699 = icmp eq i32 %10698, 2
  %10700 = zext i1 %10699 to i8
  %10701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10700, i8* %10701, align 1
  store %struct.Memory* %loadMem_43ac67, %struct.Memory** %MEMORY
  %loadMem_43ac69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10703 = getelementptr inbounds %struct.GPR, %struct.GPR* %10702, i32 0, i32 33
  %10704 = getelementptr inbounds %struct.Reg, %struct.Reg* %10703, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %10704 to i64*
  %10705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10706 = getelementptr inbounds %struct.GPR, %struct.GPR* %10705, i32 0, i32 7
  %10707 = getelementptr inbounds %struct.Reg, %struct.Reg* %10706, i32 0, i32 0
  %10708 = bitcast %union.anon* %10707 to %struct.anon.2*
  %DL.i1039 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10708, i32 0, i32 0
  %10709 = load i64, i64* %PC.i1038
  %10710 = add i64 %10709, 3
  store i64 %10710, i64* %PC.i1038
  %10711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10712 = load i8, i8* %10711, align 1
  %10713 = icmp ne i8 %10712, 0
  %10714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10715 = load i8, i8* %10714, align 1
  %10716 = icmp ne i8 %10715, 0
  %10717 = xor i1 %10713, %10716
  %10718 = zext i1 %10717 to i8
  store i8 %10718, i8* %DL.i1039, align 1
  store %struct.Memory* %loadMem_43ac69, %struct.Memory** %MEMORY
  %loadMem_43ac6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10720 = getelementptr inbounds %struct.GPR, %struct.GPR* %10719, i32 0, i32 33
  %10721 = getelementptr inbounds %struct.Reg, %struct.Reg* %10720, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %10721 to i64*
  %10722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10723 = getelementptr inbounds %struct.GPR, %struct.GPR* %10722, i32 0, i32 7
  %10724 = getelementptr inbounds %struct.Reg, %struct.Reg* %10723, i32 0, i32 0
  %10725 = bitcast %union.anon* %10724 to %struct.anon.2*
  %DL.i1037 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10725, i32 0, i32 0
  %10726 = load i8, i8* %DL.i1037
  %10727 = zext i8 %10726 to i64
  %10728 = load i64, i64* %PC.i1036
  %10729 = add i64 %10728, 3
  store i64 %10729, i64* %PC.i1036
  %10730 = and i64 1, %10727
  %10731 = trunc i64 %10730 to i8
  store i8 %10731, i8* %DL.i1037, align 1
  %10732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10732, align 1
  %10733 = trunc i64 %10730 to i32
  %10734 = and i32 %10733, 255
  %10735 = call i32 @llvm.ctpop.i32(i32 %10734)
  %10736 = trunc i32 %10735 to i8
  %10737 = and i8 %10736, 1
  %10738 = xor i8 %10737, 1
  %10739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10738, i8* %10739, align 1
  %10740 = icmp eq i8 %10731, 0
  %10741 = zext i1 %10740 to i8
  %10742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10741, i8* %10742, align 1
  %10743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10743, align 1
  %10744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10744, align 1
  %10745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10745, align 1
  store %struct.Memory* %loadMem_43ac6c, %struct.Memory** %MEMORY
  %loadMem_43ac6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10747 = getelementptr inbounds %struct.GPR, %struct.GPR* %10746, i32 0, i32 33
  %10748 = getelementptr inbounds %struct.Reg, %struct.Reg* %10747, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %10748 to i64*
  %10749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10750 = getelementptr inbounds %struct.GPR, %struct.GPR* %10749, i32 0, i32 7
  %10751 = getelementptr inbounds %struct.Reg, %struct.Reg* %10750, i32 0, i32 0
  %10752 = bitcast %union.anon* %10751 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10752, i32 0, i32 0
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10754 = getelementptr inbounds %struct.GPR, %struct.GPR* %10753, i32 0, i32 1
  %10755 = getelementptr inbounds %struct.Reg, %struct.Reg* %10754, i32 0, i32 0
  %RAX.i1035 = bitcast %union.anon* %10755 to i64*
  %10756 = load i8, i8* %DL.i
  %10757 = zext i8 %10756 to i64
  %10758 = load i64, i64* %PC.i1034
  %10759 = add i64 %10758, 3
  store i64 %10759, i64* %PC.i1034
  %10760 = and i64 %10757, 255
  store i64 %10760, i64* %RAX.i1035, align 8
  store %struct.Memory* %loadMem_43ac6f, %struct.Memory** %MEMORY
  %loadMem_43ac72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10762 = getelementptr inbounds %struct.GPR, %struct.GPR* %10761, i32 0, i32 33
  %10763 = getelementptr inbounds %struct.Reg, %struct.Reg* %10762, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %10763 to i64*
  %10764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10765 = getelementptr inbounds %struct.GPR, %struct.GPR* %10764, i32 0, i32 1
  %10766 = getelementptr inbounds %struct.Reg, %struct.Reg* %10765, i32 0, i32 0
  %EAX.i1032 = bitcast %union.anon* %10766 to i32*
  %10767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10768 = getelementptr inbounds %struct.GPR, %struct.GPR* %10767, i32 0, i32 15
  %10769 = getelementptr inbounds %struct.Reg, %struct.Reg* %10768, i32 0, i32 0
  %RBP.i1033 = bitcast %union.anon* %10769 to i64*
  %10770 = load i64, i64* %RBP.i1033
  %10771 = sub i64 %10770, 172
  %10772 = load i32, i32* %EAX.i1032
  %10773 = zext i32 %10772 to i64
  %10774 = load i64, i64* %PC.i1031
  %10775 = add i64 %10774, 6
  store i64 %10775, i64* %PC.i1031
  %10776 = inttoptr i64 %10771 to i32*
  store i32 %10772, i32* %10776
  store %struct.Memory* %loadMem_43ac72, %struct.Memory** %MEMORY
  %loadMem_43ac78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10778 = getelementptr inbounds %struct.GPR, %struct.GPR* %10777, i32 0, i32 33
  %10779 = getelementptr inbounds %struct.Reg, %struct.Reg* %10778, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %10779 to i64*
  %10780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10781 = getelementptr inbounds %struct.GPR, %struct.GPR* %10780, i32 0, i32 1
  %10782 = getelementptr inbounds %struct.Reg, %struct.Reg* %10781, i32 0, i32 0
  %RAX.i1029 = bitcast %union.anon* %10782 to i64*
  %10783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10784 = getelementptr inbounds %struct.GPR, %struct.GPR* %10783, i32 0, i32 15
  %10785 = getelementptr inbounds %struct.Reg, %struct.Reg* %10784, i32 0, i32 0
  %RBP.i1030 = bitcast %union.anon* %10785 to i64*
  %10786 = load i64, i64* %RBP.i1030
  %10787 = sub i64 %10786, 172
  %10788 = load i64, i64* %PC.i1028
  %10789 = add i64 %10788, 6
  store i64 %10789, i64* %PC.i1028
  %10790 = inttoptr i64 %10787 to i32*
  %10791 = load i32, i32* %10790
  %10792 = zext i32 %10791 to i64
  store i64 %10792, i64* %RAX.i1029, align 8
  store %struct.Memory* %loadMem_43ac78, %struct.Memory** %MEMORY
  %loadMem_43ac7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10794 = getelementptr inbounds %struct.GPR, %struct.GPR* %10793, i32 0, i32 33
  %10795 = getelementptr inbounds %struct.Reg, %struct.Reg* %10794, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %10795 to i64*
  %10796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10797 = getelementptr inbounds %struct.GPR, %struct.GPR* %10796, i32 0, i32 1
  %10798 = getelementptr inbounds %struct.Reg, %struct.Reg* %10797, i32 0, i32 0
  %RAX.i1026 = bitcast %union.anon* %10798 to i64*
  %10799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10800 = getelementptr inbounds %struct.GPR, %struct.GPR* %10799, i32 0, i32 15
  %10801 = getelementptr inbounds %struct.Reg, %struct.Reg* %10800, i32 0, i32 0
  %RBP.i1027 = bitcast %union.anon* %10801 to i64*
  %10802 = load i64, i64* %RAX.i1026
  %10803 = load i64, i64* %RBP.i1027
  %10804 = sub i64 %10803, 84
  %10805 = load i64, i64* %PC.i1025
  %10806 = add i64 %10805, 3
  store i64 %10806, i64* %PC.i1025
  %10807 = trunc i64 %10802 to i32
  %10808 = inttoptr i64 %10804 to i32*
  %10809 = load i32, i32* %10808
  %10810 = and i32 %10809, %10807
  %10811 = zext i32 %10810 to i64
  store i64 %10811, i64* %RAX.i1026, align 8
  %10812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10812, align 1
  %10813 = and i32 %10810, 255
  %10814 = call i32 @llvm.ctpop.i32(i32 %10813)
  %10815 = trunc i32 %10814 to i8
  %10816 = and i8 %10815, 1
  %10817 = xor i8 %10816, 1
  %10818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10817, i8* %10818, align 1
  %10819 = icmp eq i32 %10810, 0
  %10820 = zext i1 %10819 to i8
  %10821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10820, i8* %10821, align 1
  %10822 = lshr i32 %10810, 31
  %10823 = trunc i32 %10822 to i8
  %10824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10823, i8* %10824, align 1
  %10825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10825, align 1
  %10826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10826, align 1
  store %struct.Memory* %loadMem_43ac7e, %struct.Memory** %MEMORY
  %loadMem_43ac81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10828 = getelementptr inbounds %struct.GPR, %struct.GPR* %10827, i32 0, i32 33
  %10829 = getelementptr inbounds %struct.Reg, %struct.Reg* %10828, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %10829 to i64*
  %10830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10831 = getelementptr inbounds %struct.GPR, %struct.GPR* %10830, i32 0, i32 1
  %10832 = getelementptr inbounds %struct.Reg, %struct.Reg* %10831, i32 0, i32 0
  %EAX.i1023 = bitcast %union.anon* %10832 to i32*
  %10833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10834 = getelementptr inbounds %struct.GPR, %struct.GPR* %10833, i32 0, i32 15
  %10835 = getelementptr inbounds %struct.Reg, %struct.Reg* %10834, i32 0, i32 0
  %RBP.i1024 = bitcast %union.anon* %10835 to i64*
  %10836 = load i64, i64* %RBP.i1024
  %10837 = sub i64 %10836, 84
  %10838 = load i32, i32* %EAX.i1023
  %10839 = zext i32 %10838 to i64
  %10840 = load i64, i64* %PC.i1022
  %10841 = add i64 %10840, 3
  store i64 %10841, i64* %PC.i1022
  %10842 = inttoptr i64 %10837 to i32*
  store i32 %10838, i32* %10842
  store %struct.Memory* %loadMem_43ac81, %struct.Memory** %MEMORY
  %loadMem_43ac84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10844 = getelementptr inbounds %struct.GPR, %struct.GPR* %10843, i32 0, i32 33
  %10845 = getelementptr inbounds %struct.Reg, %struct.Reg* %10844, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %10845 to i64*
  %10846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10847 = getelementptr inbounds %struct.GPR, %struct.GPR* %10846, i32 0, i32 1
  %10848 = getelementptr inbounds %struct.Reg, %struct.Reg* %10847, i32 0, i32 0
  %RAX.i1020 = bitcast %union.anon* %10848 to i64*
  %10849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10850 = getelementptr inbounds %struct.GPR, %struct.GPR* %10849, i32 0, i32 15
  %10851 = getelementptr inbounds %struct.Reg, %struct.Reg* %10850, i32 0, i32 0
  %RBP.i1021 = bitcast %union.anon* %10851 to i64*
  %10852 = load i64, i64* %RBP.i1021
  %10853 = sub i64 %10852, 172
  %10854 = load i64, i64* %PC.i1019
  %10855 = add i64 %10854, 6
  store i64 %10855, i64* %PC.i1019
  %10856 = inttoptr i64 %10853 to i32*
  %10857 = load i32, i32* %10856
  %10858 = zext i32 %10857 to i64
  store i64 %10858, i64* %RAX.i1020, align 8
  store %struct.Memory* %loadMem_43ac84, %struct.Memory** %MEMORY
  %loadMem_43ac8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10860 = getelementptr inbounds %struct.GPR, %struct.GPR* %10859, i32 0, i32 33
  %10861 = getelementptr inbounds %struct.Reg, %struct.Reg* %10860, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %10861 to i64*
  %10862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10863 = getelementptr inbounds %struct.GPR, %struct.GPR* %10862, i32 0, i32 1
  %10864 = getelementptr inbounds %struct.Reg, %struct.Reg* %10863, i32 0, i32 0
  %RAX.i1017 = bitcast %union.anon* %10864 to i64*
  %10865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10866 = getelementptr inbounds %struct.GPR, %struct.GPR* %10865, i32 0, i32 15
  %10867 = getelementptr inbounds %struct.Reg, %struct.Reg* %10866, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %10867 to i64*
  %10868 = load i64, i64* %RAX.i1017
  %10869 = load i64, i64* %RBP.i1018
  %10870 = sub i64 %10869, 80
  %10871 = load i64, i64* %PC.i1016
  %10872 = add i64 %10871, 3
  store i64 %10872, i64* %PC.i1016
  %10873 = trunc i64 %10868 to i32
  %10874 = inttoptr i64 %10870 to i32*
  %10875 = load i32, i32* %10874
  %10876 = and i32 %10875, %10873
  %10877 = zext i32 %10876 to i64
  store i64 %10877, i64* %RAX.i1017, align 8
  %10878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10878, align 1
  %10879 = and i32 %10876, 255
  %10880 = call i32 @llvm.ctpop.i32(i32 %10879)
  %10881 = trunc i32 %10880 to i8
  %10882 = and i8 %10881, 1
  %10883 = xor i8 %10882, 1
  %10884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10883, i8* %10884, align 1
  %10885 = icmp eq i32 %10876, 0
  %10886 = zext i1 %10885 to i8
  %10887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10886, i8* %10887, align 1
  %10888 = lshr i32 %10876, 31
  %10889 = trunc i32 %10888 to i8
  %10890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10889, i8* %10890, align 1
  %10891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10891, align 1
  %10892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10892, align 1
  store %struct.Memory* %loadMem_43ac8a, %struct.Memory** %MEMORY
  %loadMem_43ac8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10894 = getelementptr inbounds %struct.GPR, %struct.GPR* %10893, i32 0, i32 33
  %10895 = getelementptr inbounds %struct.Reg, %struct.Reg* %10894, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %10895 to i64*
  %10896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10897 = getelementptr inbounds %struct.GPR, %struct.GPR* %10896, i32 0, i32 1
  %10898 = getelementptr inbounds %struct.Reg, %struct.Reg* %10897, i32 0, i32 0
  %EAX.i1014 = bitcast %union.anon* %10898 to i32*
  %10899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10900 = getelementptr inbounds %struct.GPR, %struct.GPR* %10899, i32 0, i32 15
  %10901 = getelementptr inbounds %struct.Reg, %struct.Reg* %10900, i32 0, i32 0
  %RBP.i1015 = bitcast %union.anon* %10901 to i64*
  %10902 = load i64, i64* %RBP.i1015
  %10903 = sub i64 %10902, 80
  %10904 = load i32, i32* %EAX.i1014
  %10905 = zext i32 %10904 to i64
  %10906 = load i64, i64* %PC.i1013
  %10907 = add i64 %10906, 3
  store i64 %10907, i64* %PC.i1013
  %10908 = inttoptr i64 %10903 to i32*
  store i32 %10904, i32* %10908
  store %struct.Memory* %loadMem_43ac8d, %struct.Memory** %MEMORY
  %loadMem_43ac90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10910 = getelementptr inbounds %struct.GPR, %struct.GPR* %10909, i32 0, i32 33
  %10911 = getelementptr inbounds %struct.Reg, %struct.Reg* %10910, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %10911 to i64*
  %10912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10913 = getelementptr inbounds %struct.GPR, %struct.GPR* %10912, i32 0, i32 15
  %10914 = getelementptr inbounds %struct.Reg, %struct.Reg* %10913, i32 0, i32 0
  %RBP.i1012 = bitcast %union.anon* %10914 to i64*
  %10915 = load i64, i64* %RBP.i1012
  %10916 = sub i64 %10915, 84
  %10917 = load i64, i64* %PC.i1011
  %10918 = add i64 %10917, 4
  store i64 %10918, i64* %PC.i1011
  %10919 = inttoptr i64 %10916 to i32*
  %10920 = load i32, i32* %10919
  %10921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10921, align 1
  %10922 = and i32 %10920, 255
  %10923 = call i32 @llvm.ctpop.i32(i32 %10922)
  %10924 = trunc i32 %10923 to i8
  %10925 = and i8 %10924, 1
  %10926 = xor i8 %10925, 1
  %10927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10926, i8* %10927, align 1
  %10928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10928, align 1
  %10929 = icmp eq i32 %10920, 0
  %10930 = zext i1 %10929 to i8
  %10931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10930, i8* %10931, align 1
  %10932 = lshr i32 %10920, 31
  %10933 = trunc i32 %10932 to i8
  %10934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10933, i8* %10934, align 1
  %10935 = lshr i32 %10920, 31
  %10936 = xor i32 %10932, %10935
  %10937 = add i32 %10936, %10935
  %10938 = icmp eq i32 %10937, 2
  %10939 = zext i1 %10938 to i8
  %10940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10939, i8* %10940, align 1
  store %struct.Memory* %loadMem_43ac90, %struct.Memory** %MEMORY
  %loadMem_43ac94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10942 = getelementptr inbounds %struct.GPR, %struct.GPR* %10941, i32 0, i32 33
  %10943 = getelementptr inbounds %struct.Reg, %struct.Reg* %10942, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %10943 to i64*
  %10944 = load i64, i64* %PC.i1010
  %10945 = add i64 %10944, 49
  %10946 = load i64, i64* %PC.i1010
  %10947 = add i64 %10946, 6
  %10948 = load i64, i64* %PC.i1010
  %10949 = add i64 %10948, 6
  store i64 %10949, i64* %PC.i1010
  %10950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10951 = load i8, i8* %10950, align 1
  store i8 %10951, i8* %BRANCH_TAKEN, align 1
  %10952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10953 = icmp ne i8 %10951, 0
  %10954 = select i1 %10953, i64 %10945, i64 %10947
  store i64 %10954, i64* %10952, align 8
  store %struct.Memory* %loadMem_43ac94, %struct.Memory** %MEMORY
  %loadBr_43ac94 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ac94 = icmp eq i8 %loadBr_43ac94, 1
  br i1 %cmpBr_43ac94, label %block_.L_43acc5, label %block_43ac9a

block_43ac9a:                                     ; preds = %block_.L_43ac58
  %loadMem_43ac9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10956 = getelementptr inbounds %struct.GPR, %struct.GPR* %10955, i32 0, i32 33
  %10957 = getelementptr inbounds %struct.Reg, %struct.Reg* %10956, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %10957 to i64*
  %10958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10959 = getelementptr inbounds %struct.GPR, %struct.GPR* %10958, i32 0, i32 1
  %10960 = getelementptr inbounds %struct.Reg, %struct.Reg* %10959, i32 0, i32 0
  %RAX.i1008 = bitcast %union.anon* %10960 to i64*
  %10961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10962 = getelementptr inbounds %struct.GPR, %struct.GPR* %10961, i32 0, i32 15
  %10963 = getelementptr inbounds %struct.Reg, %struct.Reg* %10962, i32 0, i32 0
  %RBP.i1009 = bitcast %union.anon* %10963 to i64*
  %10964 = load i64, i64* %RBP.i1009
  %10965 = sub i64 %10964, 124
  %10966 = load i64, i64* %PC.i1007
  %10967 = add i64 %10966, 3
  store i64 %10967, i64* %PC.i1007
  %10968 = inttoptr i64 %10965 to i32*
  %10969 = load i32, i32* %10968
  %10970 = zext i32 %10969 to i64
  store i64 %10970, i64* %RAX.i1008, align 8
  store %struct.Memory* %loadMem_43ac9a, %struct.Memory** %MEMORY
  %loadMem_43ac9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10972 = getelementptr inbounds %struct.GPR, %struct.GPR* %10971, i32 0, i32 33
  %10973 = getelementptr inbounds %struct.Reg, %struct.Reg* %10972, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %10973 to i64*
  %10974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10975 = getelementptr inbounds %struct.GPR, %struct.GPR* %10974, i32 0, i32 5
  %10976 = getelementptr inbounds %struct.Reg, %struct.Reg* %10975, i32 0, i32 0
  %RCX.i1005 = bitcast %union.anon* %10976 to i64*
  %10977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10978 = getelementptr inbounds %struct.GPR, %struct.GPR* %10977, i32 0, i32 15
  %10979 = getelementptr inbounds %struct.Reg, %struct.Reg* %10978, i32 0, i32 0
  %RBP.i1006 = bitcast %union.anon* %10979 to i64*
  %10980 = load i64, i64* %RBP.i1006
  %10981 = sub i64 %10980, 136
  %10982 = load i64, i64* %PC.i1004
  %10983 = add i64 %10982, 6
  store i64 %10983, i64* %PC.i1004
  %10984 = inttoptr i64 %10981 to i32*
  %10985 = load i32, i32* %10984
  %10986 = zext i32 %10985 to i64
  store i64 %10986, i64* %RCX.i1005, align 8
  store %struct.Memory* %loadMem_43ac9d, %struct.Memory** %MEMORY
  %loadMem_43aca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10988 = getelementptr inbounds %struct.GPR, %struct.GPR* %10987, i32 0, i32 33
  %10989 = getelementptr inbounds %struct.Reg, %struct.Reg* %10988, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %10989 to i64*
  %10990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10991 = getelementptr inbounds %struct.GPR, %struct.GPR* %10990, i32 0, i32 5
  %10992 = getelementptr inbounds %struct.Reg, %struct.Reg* %10991, i32 0, i32 0
  %RCX.i1002 = bitcast %union.anon* %10992 to i64*
  %10993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10994 = getelementptr inbounds %struct.GPR, %struct.GPR* %10993, i32 0, i32 15
  %10995 = getelementptr inbounds %struct.Reg, %struct.Reg* %10994, i32 0, i32 0
  %RBP.i1003 = bitcast %union.anon* %10995 to i64*
  %10996 = load i64, i64* %RCX.i1002
  %10997 = load i64, i64* %RBP.i1003
  %10998 = sub i64 %10997, 144
  %10999 = load i64, i64* %PC.i1001
  %11000 = add i64 %10999, 6
  store i64 %11000, i64* %PC.i1001
  %11001 = trunc i64 %10996 to i32
  %11002 = inttoptr i64 %10998 to i32*
  %11003 = load i32, i32* %11002
  %11004 = add i32 %11003, %11001
  %11005 = zext i32 %11004 to i64
  store i64 %11005, i64* %RCX.i1002, align 8
  %11006 = icmp ult i32 %11004, %11001
  %11007 = icmp ult i32 %11004, %11003
  %11008 = or i1 %11006, %11007
  %11009 = zext i1 %11008 to i8
  %11010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11009, i8* %11010, align 1
  %11011 = and i32 %11004, 255
  %11012 = call i32 @llvm.ctpop.i32(i32 %11011)
  %11013 = trunc i32 %11012 to i8
  %11014 = and i8 %11013, 1
  %11015 = xor i8 %11014, 1
  %11016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11015, i8* %11016, align 1
  %11017 = xor i32 %11003, %11001
  %11018 = xor i32 %11017, %11004
  %11019 = lshr i32 %11018, 4
  %11020 = trunc i32 %11019 to i8
  %11021 = and i8 %11020, 1
  %11022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11021, i8* %11022, align 1
  %11023 = icmp eq i32 %11004, 0
  %11024 = zext i1 %11023 to i8
  %11025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11024, i8* %11025, align 1
  %11026 = lshr i32 %11004, 31
  %11027 = trunc i32 %11026 to i8
  %11028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11027, i8* %11028, align 1
  %11029 = lshr i32 %11001, 31
  %11030 = lshr i32 %11003, 31
  %11031 = xor i32 %11026, %11029
  %11032 = xor i32 %11026, %11030
  %11033 = add i32 %11031, %11032
  %11034 = icmp eq i32 %11033, 2
  %11035 = zext i1 %11034 to i8
  %11036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11035, i8* %11036, align 1
  store %struct.Memory* %loadMem_43aca3, %struct.Memory** %MEMORY
  %loadMem_43aca9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11038 = getelementptr inbounds %struct.GPR, %struct.GPR* %11037, i32 0, i32 33
  %11039 = getelementptr inbounds %struct.Reg, %struct.Reg* %11038, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %11039 to i64*
  %11040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11041 = getelementptr inbounds %struct.GPR, %struct.GPR* %11040, i32 0, i32 5
  %11042 = getelementptr inbounds %struct.Reg, %struct.Reg* %11041, i32 0, i32 0
  %RCX.i1000 = bitcast %union.anon* %11042 to i64*
  %11043 = load i64, i64* %RCX.i1000
  %11044 = load i64, i64* %PC.i999
  %11045 = add i64 %11044, 2
  store i64 %11045, i64* %PC.i999
  %11046 = trunc i64 %11043 to i32
  %11047 = shl i32 %11046, 1
  %11048 = icmp slt i32 %11046, 0
  %11049 = icmp slt i32 %11047, 0
  %11050 = xor i1 %11048, %11049
  %11051 = zext i32 %11047 to i64
  store i64 %11051, i64* %RCX.i1000, align 8
  %11052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11053 = zext i1 %11048 to i8
  store i8 %11053, i8* %11052, align 1
  %11054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11055 = and i32 %11047, 254
  %11056 = call i32 @llvm.ctpop.i32(i32 %11055)
  %11057 = trunc i32 %11056 to i8
  %11058 = and i8 %11057, 1
  %11059 = xor i8 %11058, 1
  store i8 %11059, i8* %11054, align 1
  %11060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11060, align 1
  %11061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11062 = icmp eq i32 %11047, 0
  %11063 = zext i1 %11062 to i8
  store i8 %11063, i8* %11061, align 1
  %11064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11065 = lshr i32 %11047, 31
  %11066 = trunc i32 %11065 to i8
  store i8 %11066, i8* %11064, align 1
  %11067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11068 = zext i1 %11050 to i8
  store i8 %11068, i8* %11067, align 1
  store %struct.Memory* %loadMem_43aca9, %struct.Memory** %MEMORY
  %loadMem_43acac = load %struct.Memory*, %struct.Memory** %MEMORY
  %11069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11070 = getelementptr inbounds %struct.GPR, %struct.GPR* %11069, i32 0, i32 33
  %11071 = getelementptr inbounds %struct.Reg, %struct.Reg* %11070, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %11071 to i64*
  %11072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11073 = getelementptr inbounds %struct.GPR, %struct.GPR* %11072, i32 0, i32 5
  %11074 = getelementptr inbounds %struct.Reg, %struct.Reg* %11073, i32 0, i32 0
  %ECX.i997 = bitcast %union.anon* %11074 to i32*
  %11075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11076 = getelementptr inbounds %struct.GPR, %struct.GPR* %11075, i32 0, i32 1
  %11077 = getelementptr inbounds %struct.Reg, %struct.Reg* %11076, i32 0, i32 0
  %RAX.i998 = bitcast %union.anon* %11077 to i64*
  %11078 = load i64, i64* %RAX.i998
  %11079 = load i32, i32* %ECX.i997
  %11080 = zext i32 %11079 to i64
  %11081 = load i64, i64* %PC.i996
  %11082 = add i64 %11081, 2
  store i64 %11082, i64* %PC.i996
  %11083 = trunc i64 %11078 to i32
  %11084 = add i32 %11079, %11083
  %11085 = zext i32 %11084 to i64
  store i64 %11085, i64* %RAX.i998, align 8
  %11086 = icmp ult i32 %11084, %11083
  %11087 = icmp ult i32 %11084, %11079
  %11088 = or i1 %11086, %11087
  %11089 = zext i1 %11088 to i8
  %11090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11089, i8* %11090, align 1
  %11091 = and i32 %11084, 255
  %11092 = call i32 @llvm.ctpop.i32(i32 %11091)
  %11093 = trunc i32 %11092 to i8
  %11094 = and i8 %11093, 1
  %11095 = xor i8 %11094, 1
  %11096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11095, i8* %11096, align 1
  %11097 = xor i64 %11080, %11078
  %11098 = trunc i64 %11097 to i32
  %11099 = xor i32 %11098, %11084
  %11100 = lshr i32 %11099, 4
  %11101 = trunc i32 %11100 to i8
  %11102 = and i8 %11101, 1
  %11103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11102, i8* %11103, align 1
  %11104 = icmp eq i32 %11084, 0
  %11105 = zext i1 %11104 to i8
  %11106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11105, i8* %11106, align 1
  %11107 = lshr i32 %11084, 31
  %11108 = trunc i32 %11107 to i8
  %11109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11108, i8* %11109, align 1
  %11110 = lshr i32 %11083, 31
  %11111 = lshr i32 %11079, 31
  %11112 = xor i32 %11107, %11110
  %11113 = xor i32 %11107, %11111
  %11114 = add i32 %11112, %11113
  %11115 = icmp eq i32 %11114, 2
  %11116 = zext i1 %11115 to i8
  %11117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11116, i8* %11117, align 1
  store %struct.Memory* %loadMem_43acac, %struct.Memory** %MEMORY
  %loadMem_43acae = load %struct.Memory*, %struct.Memory** %MEMORY
  %11118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11119 = getelementptr inbounds %struct.GPR, %struct.GPR* %11118, i32 0, i32 33
  %11120 = getelementptr inbounds %struct.Reg, %struct.Reg* %11119, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %11120 to i64*
  %11121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11122 = getelementptr inbounds %struct.GPR, %struct.GPR* %11121, i32 0, i32 1
  %11123 = getelementptr inbounds %struct.Reg, %struct.Reg* %11122, i32 0, i32 0
  %RAX.i994 = bitcast %union.anon* %11123 to i64*
  %11124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11125 = getelementptr inbounds %struct.GPR, %struct.GPR* %11124, i32 0, i32 15
  %11126 = getelementptr inbounds %struct.Reg, %struct.Reg* %11125, i32 0, i32 0
  %RBP.i995 = bitcast %union.anon* %11126 to i64*
  %11127 = load i64, i64* %RAX.i994
  %11128 = load i64, i64* %RBP.i995
  %11129 = sub i64 %11128, 140
  %11130 = load i64, i64* %PC.i993
  %11131 = add i64 %11130, 6
  store i64 %11131, i64* %PC.i993
  %11132 = trunc i64 %11127 to i32
  %11133 = inttoptr i64 %11129 to i32*
  %11134 = load i32, i32* %11133
  %11135 = add i32 %11134, %11132
  %11136 = zext i32 %11135 to i64
  store i64 %11136, i64* %RAX.i994, align 8
  %11137 = icmp ult i32 %11135, %11132
  %11138 = icmp ult i32 %11135, %11134
  %11139 = or i1 %11137, %11138
  %11140 = zext i1 %11139 to i8
  %11141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11140, i8* %11141, align 1
  %11142 = and i32 %11135, 255
  %11143 = call i32 @llvm.ctpop.i32(i32 %11142)
  %11144 = trunc i32 %11143 to i8
  %11145 = and i8 %11144, 1
  %11146 = xor i8 %11145, 1
  %11147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11146, i8* %11147, align 1
  %11148 = xor i32 %11134, %11132
  %11149 = xor i32 %11148, %11135
  %11150 = lshr i32 %11149, 4
  %11151 = trunc i32 %11150 to i8
  %11152 = and i8 %11151, 1
  %11153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11152, i8* %11153, align 1
  %11154 = icmp eq i32 %11135, 0
  %11155 = zext i1 %11154 to i8
  %11156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11155, i8* %11156, align 1
  %11157 = lshr i32 %11135, 31
  %11158 = trunc i32 %11157 to i8
  %11159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11158, i8* %11159, align 1
  %11160 = lshr i32 %11132, 31
  %11161 = lshr i32 %11134, 31
  %11162 = xor i32 %11157, %11160
  %11163 = xor i32 %11157, %11161
  %11164 = add i32 %11162, %11163
  %11165 = icmp eq i32 %11164, 2
  %11166 = zext i1 %11165 to i8
  %11167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11166, i8* %11167, align 1
  store %struct.Memory* %loadMem_43acae, %struct.Memory** %MEMORY
  %loadMem_43acb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11169 = getelementptr inbounds %struct.GPR, %struct.GPR* %11168, i32 0, i32 33
  %11170 = getelementptr inbounds %struct.Reg, %struct.Reg* %11169, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %11170 to i64*
  %11171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11172 = getelementptr inbounds %struct.GPR, %struct.GPR* %11171, i32 0, i32 1
  %11173 = getelementptr inbounds %struct.Reg, %struct.Reg* %11172, i32 0, i32 0
  %RAX.i992 = bitcast %union.anon* %11173 to i64*
  %11174 = load i64, i64* %RAX.i992
  %11175 = load i64, i64* %PC.i991
  %11176 = add i64 %11175, 3
  store i64 %11176, i64* %PC.i991
  %11177 = trunc i64 %11174 to i32
  %11178 = add i32 4, %11177
  %11179 = zext i32 %11178 to i64
  store i64 %11179, i64* %RAX.i992, align 8
  %11180 = icmp ult i32 %11178, %11177
  %11181 = icmp ult i32 %11178, 4
  %11182 = or i1 %11180, %11181
  %11183 = zext i1 %11182 to i8
  %11184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11183, i8* %11184, align 1
  %11185 = and i32 %11178, 255
  %11186 = call i32 @llvm.ctpop.i32(i32 %11185)
  %11187 = trunc i32 %11186 to i8
  %11188 = and i8 %11187, 1
  %11189 = xor i8 %11188, 1
  %11190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11189, i8* %11190, align 1
  %11191 = xor i64 4, %11174
  %11192 = trunc i64 %11191 to i32
  %11193 = xor i32 %11192, %11178
  %11194 = lshr i32 %11193, 4
  %11195 = trunc i32 %11194 to i8
  %11196 = and i8 %11195, 1
  %11197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11196, i8* %11197, align 1
  %11198 = icmp eq i32 %11178, 0
  %11199 = zext i1 %11198 to i8
  %11200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11199, i8* %11200, align 1
  %11201 = lshr i32 %11178, 31
  %11202 = trunc i32 %11201 to i8
  %11203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11202, i8* %11203, align 1
  %11204 = lshr i32 %11177, 31
  %11205 = xor i32 %11201, %11204
  %11206 = add i32 %11205, %11201
  %11207 = icmp eq i32 %11206, 2
  %11208 = zext i1 %11207 to i8
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11208, i8* %11209, align 1
  store %struct.Memory* %loadMem_43acb4, %struct.Memory** %MEMORY
  %loadMem_43acb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11211 = getelementptr inbounds %struct.GPR, %struct.GPR* %11210, i32 0, i32 33
  %11212 = getelementptr inbounds %struct.Reg, %struct.Reg* %11211, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %11212 to i64*
  %11213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11214 = getelementptr inbounds %struct.GPR, %struct.GPR* %11213, i32 0, i32 1
  %11215 = getelementptr inbounds %struct.Reg, %struct.Reg* %11214, i32 0, i32 0
  %RAX.i990 = bitcast %union.anon* %11215 to i64*
  %11216 = load i64, i64* %RAX.i990
  %11217 = load i64, i64* %PC.i989
  %11218 = add i64 %11217, 3
  store i64 %11218, i64* %PC.i989
  %11219 = shl i64 %11216, 32
  %11220 = ashr exact i64 %11219, 32
  %11221 = ashr i64 %11220, 2
  %11222 = lshr i64 %11221, 1
  %11223 = trunc i64 %11221 to i8
  %11224 = and i8 %11223, 1
  %11225 = trunc i64 %11222 to i32
  %11226 = and i64 %11222, 4294967295
  store i64 %11226, i64* %RAX.i990, align 8
  %11227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11224, i8* %11227, align 1
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11229 = and i32 %11225, 255
  %11230 = call i32 @llvm.ctpop.i32(i32 %11229)
  %11231 = trunc i32 %11230 to i8
  %11232 = and i8 %11231, 1
  %11233 = xor i8 %11232, 1
  store i8 %11233, i8* %11228, align 1
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11234, align 1
  %11235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11236 = icmp eq i32 %11225, 0
  %11237 = zext i1 %11236 to i8
  store i8 %11237, i8* %11235, align 1
  %11238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11239 = lshr i32 %11225, 31
  %11240 = trunc i32 %11239 to i8
  store i8 %11240, i8* %11238, align 1
  %11241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11241, align 1
  store %struct.Memory* %loadMem_43acb7, %struct.Memory** %MEMORY
  %loadMem_43acba = load %struct.Memory*, %struct.Memory** %MEMORY
  %11242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11243 = getelementptr inbounds %struct.GPR, %struct.GPR* %11242, i32 0, i32 33
  %11244 = getelementptr inbounds %struct.Reg, %struct.Reg* %11243, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %11244 to i64*
  %11245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11246 = getelementptr inbounds %struct.GPR, %struct.GPR* %11245, i32 0, i32 1
  %11247 = getelementptr inbounds %struct.Reg, %struct.Reg* %11246, i32 0, i32 0
  %EAX.i987 = bitcast %union.anon* %11247 to i32*
  %11248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11249 = getelementptr inbounds %struct.GPR, %struct.GPR* %11248, i32 0, i32 15
  %11250 = getelementptr inbounds %struct.Reg, %struct.Reg* %11249, i32 0, i32 0
  %RBP.i988 = bitcast %union.anon* %11250 to i64*
  %11251 = load i64, i64* %RBP.i988
  %11252 = sub i64 %11251, 432
  %11253 = load i32, i32* %EAX.i987
  %11254 = zext i32 %11253 to i64
  %11255 = load i64, i64* %PC.i986
  %11256 = add i64 %11255, 6
  store i64 %11256, i64* %PC.i986
  %11257 = inttoptr i64 %11252 to i32*
  store i32 %11253, i32* %11257
  store %struct.Memory* %loadMem_43acba, %struct.Memory** %MEMORY
  %loadMem_43acc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11259 = getelementptr inbounds %struct.GPR, %struct.GPR* %11258, i32 0, i32 33
  %11260 = getelementptr inbounds %struct.Reg, %struct.Reg* %11259, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %11260 to i64*
  %11261 = load i64, i64* %PC.i985
  %11262 = add i64 %11261, 35
  %11263 = load i64, i64* %PC.i985
  %11264 = add i64 %11263, 5
  store i64 %11264, i64* %PC.i985
  %11265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11262, i64* %11265, align 8
  store %struct.Memory* %loadMem_43acc0, %struct.Memory** %MEMORY
  br label %block_.L_43ace3

block_.L_43acc5:                                  ; preds = %block_.L_43ac58
  %loadMem_43acc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11267 = getelementptr inbounds %struct.GPR, %struct.GPR* %11266, i32 0, i32 33
  %11268 = getelementptr inbounds %struct.Reg, %struct.Reg* %11267, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %11268 to i64*
  %11269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11270 = getelementptr inbounds %struct.GPR, %struct.GPR* %11269, i32 0, i32 1
  %11271 = getelementptr inbounds %struct.Reg, %struct.Reg* %11270, i32 0, i32 0
  %RAX.i983 = bitcast %union.anon* %11271 to i64*
  %11272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11273 = getelementptr inbounds %struct.GPR, %struct.GPR* %11272, i32 0, i32 15
  %11274 = getelementptr inbounds %struct.Reg, %struct.Reg* %11273, i32 0, i32 0
  %RBP.i984 = bitcast %union.anon* %11274 to i64*
  %11275 = load i64, i64* %RBP.i984
  %11276 = sub i64 %11275, 136
  %11277 = load i64, i64* %PC.i982
  %11278 = add i64 %11277, 6
  store i64 %11278, i64* %PC.i982
  %11279 = inttoptr i64 %11276 to i32*
  %11280 = load i32, i32* %11279
  %11281 = zext i32 %11280 to i64
  store i64 %11281, i64* %RAX.i983, align 8
  store %struct.Memory* %loadMem_43acc5, %struct.Memory** %MEMORY
  %loadMem_43accb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11283 = getelementptr inbounds %struct.GPR, %struct.GPR* %11282, i32 0, i32 33
  %11284 = getelementptr inbounds %struct.Reg, %struct.Reg* %11283, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %11284 to i64*
  %11285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11286 = getelementptr inbounds %struct.GPR, %struct.GPR* %11285, i32 0, i32 1
  %11287 = getelementptr inbounds %struct.Reg, %struct.Reg* %11286, i32 0, i32 0
  %RAX.i981 = bitcast %union.anon* %11287 to i64*
  %11288 = load i64, i64* %RAX.i981
  %11289 = load i64, i64* %PC.i980
  %11290 = add i64 %11289, 2
  store i64 %11290, i64* %PC.i980
  %11291 = trunc i64 %11288 to i32
  %11292 = shl i32 %11291, 1
  %11293 = icmp slt i32 %11291, 0
  %11294 = icmp slt i32 %11292, 0
  %11295 = xor i1 %11293, %11294
  %11296 = zext i32 %11292 to i64
  store i64 %11296, i64* %RAX.i981, align 8
  %11297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11298 = zext i1 %11293 to i8
  store i8 %11298, i8* %11297, align 1
  %11299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11300 = and i32 %11292, 254
  %11301 = call i32 @llvm.ctpop.i32(i32 %11300)
  %11302 = trunc i32 %11301 to i8
  %11303 = and i8 %11302, 1
  %11304 = xor i8 %11303, 1
  store i8 %11304, i8* %11299, align 1
  %11305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11305, align 1
  %11306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11307 = icmp eq i32 %11292, 0
  %11308 = zext i1 %11307 to i8
  store i8 %11308, i8* %11306, align 1
  %11309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11310 = lshr i32 %11292, 31
  %11311 = trunc i32 %11310 to i8
  store i8 %11311, i8* %11309, align 1
  %11312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11313 = zext i1 %11295 to i8
  store i8 %11313, i8* %11312, align 1
  store %struct.Memory* %loadMem_43accb, %struct.Memory** %MEMORY
  %loadMem_43acce = load %struct.Memory*, %struct.Memory** %MEMORY
  %11314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11315 = getelementptr inbounds %struct.GPR, %struct.GPR* %11314, i32 0, i32 33
  %11316 = getelementptr inbounds %struct.Reg, %struct.Reg* %11315, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %11316 to i64*
  %11317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11318 = getelementptr inbounds %struct.GPR, %struct.GPR* %11317, i32 0, i32 1
  %11319 = getelementptr inbounds %struct.Reg, %struct.Reg* %11318, i32 0, i32 0
  %RAX.i978 = bitcast %union.anon* %11319 to i64*
  %11320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11321 = getelementptr inbounds %struct.GPR, %struct.GPR* %11320, i32 0, i32 15
  %11322 = getelementptr inbounds %struct.Reg, %struct.Reg* %11321, i32 0, i32 0
  %RBP.i979 = bitcast %union.anon* %11322 to i64*
  %11323 = load i64, i64* %RAX.i978
  %11324 = load i64, i64* %RBP.i979
  %11325 = sub i64 %11324, 132
  %11326 = load i64, i64* %PC.i977
  %11327 = add i64 %11326, 6
  store i64 %11327, i64* %PC.i977
  %11328 = trunc i64 %11323 to i32
  %11329 = inttoptr i64 %11325 to i32*
  %11330 = load i32, i32* %11329
  %11331 = add i32 %11330, %11328
  %11332 = zext i32 %11331 to i64
  store i64 %11332, i64* %RAX.i978, align 8
  %11333 = icmp ult i32 %11331, %11328
  %11334 = icmp ult i32 %11331, %11330
  %11335 = or i1 %11333, %11334
  %11336 = zext i1 %11335 to i8
  %11337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11336, i8* %11337, align 1
  %11338 = and i32 %11331, 255
  %11339 = call i32 @llvm.ctpop.i32(i32 %11338)
  %11340 = trunc i32 %11339 to i8
  %11341 = and i8 %11340, 1
  %11342 = xor i8 %11341, 1
  %11343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11342, i8* %11343, align 1
  %11344 = xor i32 %11330, %11328
  %11345 = xor i32 %11344, %11331
  %11346 = lshr i32 %11345, 4
  %11347 = trunc i32 %11346 to i8
  %11348 = and i8 %11347, 1
  %11349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11348, i8* %11349, align 1
  %11350 = icmp eq i32 %11331, 0
  %11351 = zext i1 %11350 to i8
  %11352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11351, i8* %11352, align 1
  %11353 = lshr i32 %11331, 31
  %11354 = trunc i32 %11353 to i8
  %11355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11354, i8* %11355, align 1
  %11356 = lshr i32 %11328, 31
  %11357 = lshr i32 %11330, 31
  %11358 = xor i32 %11353, %11356
  %11359 = xor i32 %11353, %11357
  %11360 = add i32 %11358, %11359
  %11361 = icmp eq i32 %11360, 2
  %11362 = zext i1 %11361 to i8
  %11363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11362, i8* %11363, align 1
  store %struct.Memory* %loadMem_43acce, %struct.Memory** %MEMORY
  %loadMem_43acd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11365 = getelementptr inbounds %struct.GPR, %struct.GPR* %11364, i32 0, i32 33
  %11366 = getelementptr inbounds %struct.Reg, %struct.Reg* %11365, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %11366 to i64*
  %11367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11368 = getelementptr inbounds %struct.GPR, %struct.GPR* %11367, i32 0, i32 1
  %11369 = getelementptr inbounds %struct.Reg, %struct.Reg* %11368, i32 0, i32 0
  %RAX.i975 = bitcast %union.anon* %11369 to i64*
  %11370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11371 = getelementptr inbounds %struct.GPR, %struct.GPR* %11370, i32 0, i32 15
  %11372 = getelementptr inbounds %struct.Reg, %struct.Reg* %11371, i32 0, i32 0
  %RBP.i976 = bitcast %union.anon* %11372 to i64*
  %11373 = load i64, i64* %RAX.i975
  %11374 = load i64, i64* %RBP.i976
  %11375 = sub i64 %11374, 124
  %11376 = load i64, i64* %PC.i974
  %11377 = add i64 %11376, 3
  store i64 %11377, i64* %PC.i974
  %11378 = trunc i64 %11373 to i32
  %11379 = inttoptr i64 %11375 to i32*
  %11380 = load i32, i32* %11379
  %11381 = add i32 %11380, %11378
  %11382 = zext i32 %11381 to i64
  store i64 %11382, i64* %RAX.i975, align 8
  %11383 = icmp ult i32 %11381, %11378
  %11384 = icmp ult i32 %11381, %11380
  %11385 = or i1 %11383, %11384
  %11386 = zext i1 %11385 to i8
  %11387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11386, i8* %11387, align 1
  %11388 = and i32 %11381, 255
  %11389 = call i32 @llvm.ctpop.i32(i32 %11388)
  %11390 = trunc i32 %11389 to i8
  %11391 = and i8 %11390, 1
  %11392 = xor i8 %11391, 1
  %11393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11392, i8* %11393, align 1
  %11394 = xor i32 %11380, %11378
  %11395 = xor i32 %11394, %11381
  %11396 = lshr i32 %11395, 4
  %11397 = trunc i32 %11396 to i8
  %11398 = and i8 %11397, 1
  %11399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11398, i8* %11399, align 1
  %11400 = icmp eq i32 %11381, 0
  %11401 = zext i1 %11400 to i8
  %11402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11401, i8* %11402, align 1
  %11403 = lshr i32 %11381, 31
  %11404 = trunc i32 %11403 to i8
  %11405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11404, i8* %11405, align 1
  %11406 = lshr i32 %11378, 31
  %11407 = lshr i32 %11380, 31
  %11408 = xor i32 %11403, %11406
  %11409 = xor i32 %11403, %11407
  %11410 = add i32 %11408, %11409
  %11411 = icmp eq i32 %11410, 2
  %11412 = zext i1 %11411 to i8
  %11413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11412, i8* %11413, align 1
  store %struct.Memory* %loadMem_43acd4, %struct.Memory** %MEMORY
  %loadMem_43acd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11415 = getelementptr inbounds %struct.GPR, %struct.GPR* %11414, i32 0, i32 33
  %11416 = getelementptr inbounds %struct.Reg, %struct.Reg* %11415, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %11416 to i64*
  %11417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11418 = getelementptr inbounds %struct.GPR, %struct.GPR* %11417, i32 0, i32 1
  %11419 = getelementptr inbounds %struct.Reg, %struct.Reg* %11418, i32 0, i32 0
  %RAX.i973 = bitcast %union.anon* %11419 to i64*
  %11420 = load i64, i64* %RAX.i973
  %11421 = load i64, i64* %PC.i972
  %11422 = add i64 %11421, 3
  store i64 %11422, i64* %PC.i972
  %11423 = trunc i64 %11420 to i32
  %11424 = add i32 2, %11423
  %11425 = zext i32 %11424 to i64
  store i64 %11425, i64* %RAX.i973, align 8
  %11426 = icmp ult i32 %11424, %11423
  %11427 = icmp ult i32 %11424, 2
  %11428 = or i1 %11426, %11427
  %11429 = zext i1 %11428 to i8
  %11430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11429, i8* %11430, align 1
  %11431 = and i32 %11424, 255
  %11432 = call i32 @llvm.ctpop.i32(i32 %11431)
  %11433 = trunc i32 %11432 to i8
  %11434 = and i8 %11433, 1
  %11435 = xor i8 %11434, 1
  %11436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11435, i8* %11436, align 1
  %11437 = xor i64 2, %11420
  %11438 = trunc i64 %11437 to i32
  %11439 = xor i32 %11438, %11424
  %11440 = lshr i32 %11439, 4
  %11441 = trunc i32 %11440 to i8
  %11442 = and i8 %11441, 1
  %11443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11442, i8* %11443, align 1
  %11444 = icmp eq i32 %11424, 0
  %11445 = zext i1 %11444 to i8
  %11446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11445, i8* %11446, align 1
  %11447 = lshr i32 %11424, 31
  %11448 = trunc i32 %11447 to i8
  %11449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11448, i8* %11449, align 1
  %11450 = lshr i32 %11423, 31
  %11451 = xor i32 %11447, %11450
  %11452 = add i32 %11451, %11447
  %11453 = icmp eq i32 %11452, 2
  %11454 = zext i1 %11453 to i8
  %11455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11454, i8* %11455, align 1
  store %struct.Memory* %loadMem_43acd7, %struct.Memory** %MEMORY
  %loadMem_43acda = load %struct.Memory*, %struct.Memory** %MEMORY
  %11456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11457 = getelementptr inbounds %struct.GPR, %struct.GPR* %11456, i32 0, i32 33
  %11458 = getelementptr inbounds %struct.Reg, %struct.Reg* %11457, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %11458 to i64*
  %11459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11460 = getelementptr inbounds %struct.GPR, %struct.GPR* %11459, i32 0, i32 1
  %11461 = getelementptr inbounds %struct.Reg, %struct.Reg* %11460, i32 0, i32 0
  %RAX.i971 = bitcast %union.anon* %11461 to i64*
  %11462 = load i64, i64* %RAX.i971
  %11463 = load i64, i64* %PC.i970
  %11464 = add i64 %11463, 3
  store i64 %11464, i64* %PC.i970
  %11465 = shl i64 %11462, 32
  %11466 = ashr exact i64 %11465, 32
  %11467 = ashr i64 %11466, 1
  %11468 = lshr i64 %11467, 1
  %11469 = trunc i64 %11467 to i8
  %11470 = and i8 %11469, 1
  %11471 = trunc i64 %11468 to i32
  %11472 = and i64 %11468, 4294967295
  store i64 %11472, i64* %RAX.i971, align 8
  %11473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11470, i8* %11473, align 1
  %11474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11475 = and i32 %11471, 255
  %11476 = call i32 @llvm.ctpop.i32(i32 %11475)
  %11477 = trunc i32 %11476 to i8
  %11478 = and i8 %11477, 1
  %11479 = xor i8 %11478, 1
  store i8 %11479, i8* %11474, align 1
  %11480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11480, align 1
  %11481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11482 = icmp eq i32 %11471, 0
  %11483 = zext i1 %11482 to i8
  store i8 %11483, i8* %11481, align 1
  %11484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11485 = lshr i32 %11471, 31
  %11486 = trunc i32 %11485 to i8
  store i8 %11486, i8* %11484, align 1
  %11487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11487, align 1
  store %struct.Memory* %loadMem_43acda, %struct.Memory** %MEMORY
  %loadMem_43acdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11489 = getelementptr inbounds %struct.GPR, %struct.GPR* %11488, i32 0, i32 33
  %11490 = getelementptr inbounds %struct.Reg, %struct.Reg* %11489, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %11490 to i64*
  %11491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11492 = getelementptr inbounds %struct.GPR, %struct.GPR* %11491, i32 0, i32 1
  %11493 = getelementptr inbounds %struct.Reg, %struct.Reg* %11492, i32 0, i32 0
  %EAX.i968 = bitcast %union.anon* %11493 to i32*
  %11494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11495 = getelementptr inbounds %struct.GPR, %struct.GPR* %11494, i32 0, i32 15
  %11496 = getelementptr inbounds %struct.Reg, %struct.Reg* %11495, i32 0, i32 0
  %RBP.i969 = bitcast %union.anon* %11496 to i64*
  %11497 = load i64, i64* %RBP.i969
  %11498 = sub i64 %11497, 432
  %11499 = load i32, i32* %EAX.i968
  %11500 = zext i32 %11499 to i64
  %11501 = load i64, i64* %PC.i967
  %11502 = add i64 %11501, 6
  store i64 %11502, i64* %PC.i967
  %11503 = inttoptr i64 %11498 to i32*
  store i32 %11499, i32* %11503
  store %struct.Memory* %loadMem_43acdd, %struct.Memory** %MEMORY
  br label %block_.L_43ace3

block_.L_43ace3:                                  ; preds = %block_.L_43acc5, %block_43ac9a
  %loadMem_43ace3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11505 = getelementptr inbounds %struct.GPR, %struct.GPR* %11504, i32 0, i32 33
  %11506 = getelementptr inbounds %struct.Reg, %struct.Reg* %11505, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %11506 to i64*
  %11507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11508 = getelementptr inbounds %struct.GPR, %struct.GPR* %11507, i32 0, i32 1
  %11509 = getelementptr inbounds %struct.Reg, %struct.Reg* %11508, i32 0, i32 0
  %RAX.i965 = bitcast %union.anon* %11509 to i64*
  %11510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11511 = getelementptr inbounds %struct.GPR, %struct.GPR* %11510, i32 0, i32 15
  %11512 = getelementptr inbounds %struct.Reg, %struct.Reg* %11511, i32 0, i32 0
  %RBP.i966 = bitcast %union.anon* %11512 to i64*
  %11513 = load i64, i64* %RBP.i966
  %11514 = sub i64 %11513, 432
  %11515 = load i64, i64* %PC.i964
  %11516 = add i64 %11515, 6
  store i64 %11516, i64* %PC.i964
  %11517 = inttoptr i64 %11514 to i32*
  %11518 = load i32, i32* %11517
  %11519 = zext i32 %11518 to i64
  store i64 %11519, i64* %RAX.i965, align 8
  store %struct.Memory* %loadMem_43ace3, %struct.Memory** %MEMORY
  %loadMem_43ace9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11521 = getelementptr inbounds %struct.GPR, %struct.GPR* %11520, i32 0, i32 33
  %11522 = getelementptr inbounds %struct.Reg, %struct.Reg* %11521, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %11522 to i64*
  %11523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11524 = getelementptr inbounds %struct.GPR, %struct.GPR* %11523, i32 0, i32 1
  %11525 = getelementptr inbounds %struct.Reg, %struct.Reg* %11524, i32 0, i32 0
  %AX.i962 = bitcast %union.anon* %11525 to i16*
  %11526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11527 = getelementptr inbounds %struct.GPR, %struct.GPR* %11526, i32 0, i32 5
  %11528 = getelementptr inbounds %struct.Reg, %struct.Reg* %11527, i32 0, i32 0
  %CX.i963 = bitcast %union.anon* %11528 to i16*
  %11529 = load i16, i16* %AX.i962
  %11530 = zext i16 %11529 to i64
  %11531 = load i64, i64* %PC.i961
  %11532 = add i64 %11531, 3
  store i64 %11532, i64* %PC.i961
  store i16 %11529, i16* %CX.i963, align 2
  store %struct.Memory* %loadMem_43ace9, %struct.Memory** %MEMORY
  %loadMem_43acec = load %struct.Memory*, %struct.Memory** %MEMORY
  %11533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11534 = getelementptr inbounds %struct.GPR, %struct.GPR* %11533, i32 0, i32 33
  %11535 = getelementptr inbounds %struct.Reg, %struct.Reg* %11534, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %11535 to i64*
  %11536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11537 = getelementptr inbounds %struct.GPR, %struct.GPR* %11536, i32 0, i32 7
  %11538 = getelementptr inbounds %struct.Reg, %struct.Reg* %11537, i32 0, i32 0
  %RDX.i959 = bitcast %union.anon* %11538 to i64*
  %11539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11540 = getelementptr inbounds %struct.GPR, %struct.GPR* %11539, i32 0, i32 15
  %11541 = getelementptr inbounds %struct.Reg, %struct.Reg* %11540, i32 0, i32 0
  %RBP.i960 = bitcast %union.anon* %11541 to i64*
  %11542 = load i64, i64* %RBP.i960
  %11543 = sub i64 %11542, 208
  %11544 = load i64, i64* %PC.i958
  %11545 = add i64 %11544, 7
  store i64 %11545, i64* %PC.i958
  %11546 = inttoptr i64 %11543 to i64*
  %11547 = load i64, i64* %11546
  store i64 %11547, i64* %RDX.i959, align 8
  store %struct.Memory* %loadMem_43acec, %struct.Memory** %MEMORY
  %loadMem_43acf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11549 = getelementptr inbounds %struct.GPR, %struct.GPR* %11548, i32 0, i32 33
  %11550 = getelementptr inbounds %struct.Reg, %struct.Reg* %11549, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %11550 to i64*
  %11551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11552 = getelementptr inbounds %struct.GPR, %struct.GPR* %11551, i32 0, i32 5
  %11553 = getelementptr inbounds %struct.Reg, %struct.Reg* %11552, i32 0, i32 0
  %CX.i956 = bitcast %union.anon* %11553 to i16*
  %11554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11555 = getelementptr inbounds %struct.GPR, %struct.GPR* %11554, i32 0, i32 7
  %11556 = getelementptr inbounds %struct.Reg, %struct.Reg* %11555, i32 0, i32 0
  %RDX.i957 = bitcast %union.anon* %11556 to i64*
  %11557 = load i64, i64* %RDX.i957
  %11558 = load i16, i16* %CX.i956
  %11559 = zext i16 %11558 to i64
  %11560 = load i64, i64* %PC.i955
  %11561 = add i64 %11560, 3
  store i64 %11561, i64* %PC.i955
  %11562 = inttoptr i64 %11557 to i16*
  store i16 %11558, i16* %11562
  store %struct.Memory* %loadMem_43acf3, %struct.Memory** %MEMORY
  %loadMem_43acf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11564 = getelementptr inbounds %struct.GPR, %struct.GPR* %11563, i32 0, i32 33
  %11565 = getelementptr inbounds %struct.Reg, %struct.Reg* %11564, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %11565 to i64*
  %11566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11567 = getelementptr inbounds %struct.GPR, %struct.GPR* %11566, i32 0, i32 15
  %11568 = getelementptr inbounds %struct.Reg, %struct.Reg* %11567, i32 0, i32 0
  %RBP.i954 = bitcast %union.anon* %11568 to i64*
  %11569 = load i64, i64* %RBP.i954
  %11570 = sub i64 %11569, 80
  %11571 = load i64, i64* %PC.i953
  %11572 = add i64 %11571, 4
  store i64 %11572, i64* %PC.i953
  %11573 = inttoptr i64 %11570 to i32*
  %11574 = load i32, i32* %11573
  %11575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11575, align 1
  %11576 = and i32 %11574, 255
  %11577 = call i32 @llvm.ctpop.i32(i32 %11576)
  %11578 = trunc i32 %11577 to i8
  %11579 = and i8 %11578, 1
  %11580 = xor i8 %11579, 1
  %11581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11580, i8* %11581, align 1
  %11582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11582, align 1
  %11583 = icmp eq i32 %11574, 0
  %11584 = zext i1 %11583 to i8
  %11585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11584, i8* %11585, align 1
  %11586 = lshr i32 %11574, 31
  %11587 = trunc i32 %11586 to i8
  %11588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11587, i8* %11588, align 1
  %11589 = lshr i32 %11574, 31
  %11590 = xor i32 %11586, %11589
  %11591 = add i32 %11590, %11589
  %11592 = icmp eq i32 %11591, 2
  %11593 = zext i1 %11592 to i8
  %11594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11593, i8* %11594, align 1
  store %struct.Memory* %loadMem_43acf6, %struct.Memory** %MEMORY
  %loadMem_43acfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %11595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11596 = getelementptr inbounds %struct.GPR, %struct.GPR* %11595, i32 0, i32 33
  %11597 = getelementptr inbounds %struct.Reg, %struct.Reg* %11596, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %11597 to i64*
  %11598 = load i64, i64* %PC.i952
  %11599 = add i64 %11598, 46
  %11600 = load i64, i64* %PC.i952
  %11601 = add i64 %11600, 6
  %11602 = load i64, i64* %PC.i952
  %11603 = add i64 %11602, 6
  store i64 %11603, i64* %PC.i952
  %11604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11605 = load i8, i8* %11604, align 1
  store i8 %11605, i8* %BRANCH_TAKEN, align 1
  %11606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11607 = icmp ne i8 %11605, 0
  %11608 = select i1 %11607, i64 %11599, i64 %11601
  store i64 %11608, i64* %11606, align 8
  store %struct.Memory* %loadMem_43acfa, %struct.Memory** %MEMORY
  %loadBr_43acfa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43acfa = icmp eq i8 %loadBr_43acfa, 1
  br i1 %cmpBr_43acfa, label %block_.L_43ad28, label %block_43ad00

block_43ad00:                                     ; preds = %block_.L_43ace3
  %loadMem_43ad00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11610 = getelementptr inbounds %struct.GPR, %struct.GPR* %11609, i32 0, i32 33
  %11611 = getelementptr inbounds %struct.Reg, %struct.Reg* %11610, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %11611 to i64*
  %11612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11613 = getelementptr inbounds %struct.GPR, %struct.GPR* %11612, i32 0, i32 1
  %11614 = getelementptr inbounds %struct.Reg, %struct.Reg* %11613, i32 0, i32 0
  %RAX.i950 = bitcast %union.anon* %11614 to i64*
  %11615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11616 = getelementptr inbounds %struct.GPR, %struct.GPR* %11615, i32 0, i32 15
  %11617 = getelementptr inbounds %struct.Reg, %struct.Reg* %11616, i32 0, i32 0
  %RBP.i951 = bitcast %union.anon* %11617 to i64*
  %11618 = load i64, i64* %RBP.i951
  %11619 = sub i64 %11618, 136
  %11620 = load i64, i64* %PC.i949
  %11621 = add i64 %11620, 6
  store i64 %11621, i64* %PC.i949
  %11622 = inttoptr i64 %11619 to i32*
  %11623 = load i32, i32* %11622
  %11624 = zext i32 %11623 to i64
  store i64 %11624, i64* %RAX.i950, align 8
  store %struct.Memory* %loadMem_43ad00, %struct.Memory** %MEMORY
  %loadMem_43ad06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11626 = getelementptr inbounds %struct.GPR, %struct.GPR* %11625, i32 0, i32 33
  %11627 = getelementptr inbounds %struct.Reg, %struct.Reg* %11626, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %11627 to i64*
  %11628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11629 = getelementptr inbounds %struct.GPR, %struct.GPR* %11628, i32 0, i32 5
  %11630 = getelementptr inbounds %struct.Reg, %struct.Reg* %11629, i32 0, i32 0
  %RCX.i947 = bitcast %union.anon* %11630 to i64*
  %11631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11632 = getelementptr inbounds %struct.GPR, %struct.GPR* %11631, i32 0, i32 15
  %11633 = getelementptr inbounds %struct.Reg, %struct.Reg* %11632, i32 0, i32 0
  %RBP.i948 = bitcast %union.anon* %11633 to i64*
  %11634 = load i64, i64* %RBP.i948
  %11635 = sub i64 %11634, 124
  %11636 = load i64, i64* %PC.i946
  %11637 = add i64 %11636, 3
  store i64 %11637, i64* %PC.i946
  %11638 = inttoptr i64 %11635 to i32*
  %11639 = load i32, i32* %11638
  %11640 = zext i32 %11639 to i64
  store i64 %11640, i64* %RCX.i947, align 8
  store %struct.Memory* %loadMem_43ad06, %struct.Memory** %MEMORY
  %loadMem_43ad09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11642 = getelementptr inbounds %struct.GPR, %struct.GPR* %11641, i32 0, i32 33
  %11643 = getelementptr inbounds %struct.Reg, %struct.Reg* %11642, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %11643 to i64*
  %11644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11645 = getelementptr inbounds %struct.GPR, %struct.GPR* %11644, i32 0, i32 5
  %11646 = getelementptr inbounds %struct.Reg, %struct.Reg* %11645, i32 0, i32 0
  %RCX.i944 = bitcast %union.anon* %11646 to i64*
  %11647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11648 = getelementptr inbounds %struct.GPR, %struct.GPR* %11647, i32 0, i32 15
  %11649 = getelementptr inbounds %struct.Reg, %struct.Reg* %11648, i32 0, i32 0
  %RBP.i945 = bitcast %union.anon* %11649 to i64*
  %11650 = load i64, i64* %RCX.i944
  %11651 = load i64, i64* %RBP.i945
  %11652 = sub i64 %11651, 144
  %11653 = load i64, i64* %PC.i943
  %11654 = add i64 %11653, 6
  store i64 %11654, i64* %PC.i943
  %11655 = trunc i64 %11650 to i32
  %11656 = inttoptr i64 %11652 to i32*
  %11657 = load i32, i32* %11656
  %11658 = add i32 %11657, %11655
  %11659 = zext i32 %11658 to i64
  store i64 %11659, i64* %RCX.i944, align 8
  %11660 = icmp ult i32 %11658, %11655
  %11661 = icmp ult i32 %11658, %11657
  %11662 = or i1 %11660, %11661
  %11663 = zext i1 %11662 to i8
  %11664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11663, i8* %11664, align 1
  %11665 = and i32 %11658, 255
  %11666 = call i32 @llvm.ctpop.i32(i32 %11665)
  %11667 = trunc i32 %11666 to i8
  %11668 = and i8 %11667, 1
  %11669 = xor i8 %11668, 1
  %11670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11669, i8* %11670, align 1
  %11671 = xor i32 %11657, %11655
  %11672 = xor i32 %11671, %11658
  %11673 = lshr i32 %11672, 4
  %11674 = trunc i32 %11673 to i8
  %11675 = and i8 %11674, 1
  %11676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11675, i8* %11676, align 1
  %11677 = icmp eq i32 %11658, 0
  %11678 = zext i1 %11677 to i8
  %11679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11678, i8* %11679, align 1
  %11680 = lshr i32 %11658, 31
  %11681 = trunc i32 %11680 to i8
  %11682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11681, i8* %11682, align 1
  %11683 = lshr i32 %11655, 31
  %11684 = lshr i32 %11657, 31
  %11685 = xor i32 %11680, %11683
  %11686 = xor i32 %11680, %11684
  %11687 = add i32 %11685, %11686
  %11688 = icmp eq i32 %11687, 2
  %11689 = zext i1 %11688 to i8
  %11690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11689, i8* %11690, align 1
  store %struct.Memory* %loadMem_43ad09, %struct.Memory** %MEMORY
  %loadMem_43ad0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11692 = getelementptr inbounds %struct.GPR, %struct.GPR* %11691, i32 0, i32 33
  %11693 = getelementptr inbounds %struct.Reg, %struct.Reg* %11692, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %11693 to i64*
  %11694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11695 = getelementptr inbounds %struct.GPR, %struct.GPR* %11694, i32 0, i32 5
  %11696 = getelementptr inbounds %struct.Reg, %struct.Reg* %11695, i32 0, i32 0
  %RCX.i942 = bitcast %union.anon* %11696 to i64*
  %11697 = load i64, i64* %RCX.i942
  %11698 = load i64, i64* %PC.i941
  %11699 = add i64 %11698, 2
  store i64 %11699, i64* %PC.i941
  %11700 = trunc i64 %11697 to i32
  %11701 = shl i32 %11700, 1
  %11702 = icmp slt i32 %11700, 0
  %11703 = icmp slt i32 %11701, 0
  %11704 = xor i1 %11702, %11703
  %11705 = zext i32 %11701 to i64
  store i64 %11705, i64* %RCX.i942, align 8
  %11706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11707 = zext i1 %11702 to i8
  store i8 %11707, i8* %11706, align 1
  %11708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11709 = and i32 %11701, 254
  %11710 = call i32 @llvm.ctpop.i32(i32 %11709)
  %11711 = trunc i32 %11710 to i8
  %11712 = and i8 %11711, 1
  %11713 = xor i8 %11712, 1
  store i8 %11713, i8* %11708, align 1
  %11714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11714, align 1
  %11715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11716 = icmp eq i32 %11701, 0
  %11717 = zext i1 %11716 to i8
  store i8 %11717, i8* %11715, align 1
  %11718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11719 = lshr i32 %11701, 31
  %11720 = trunc i32 %11719 to i8
  store i8 %11720, i8* %11718, align 1
  %11721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11722 = zext i1 %11704 to i8
  store i8 %11722, i8* %11721, align 1
  store %struct.Memory* %loadMem_43ad0f, %struct.Memory** %MEMORY
  %loadMem_43ad12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11724 = getelementptr inbounds %struct.GPR, %struct.GPR* %11723, i32 0, i32 33
  %11725 = getelementptr inbounds %struct.Reg, %struct.Reg* %11724, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %11725 to i64*
  %11726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11727 = getelementptr inbounds %struct.GPR, %struct.GPR* %11726, i32 0, i32 5
  %11728 = getelementptr inbounds %struct.Reg, %struct.Reg* %11727, i32 0, i32 0
  %ECX.i939 = bitcast %union.anon* %11728 to i32*
  %11729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11730 = getelementptr inbounds %struct.GPR, %struct.GPR* %11729, i32 0, i32 1
  %11731 = getelementptr inbounds %struct.Reg, %struct.Reg* %11730, i32 0, i32 0
  %RAX.i940 = bitcast %union.anon* %11731 to i64*
  %11732 = load i64, i64* %RAX.i940
  %11733 = load i32, i32* %ECX.i939
  %11734 = zext i32 %11733 to i64
  %11735 = load i64, i64* %PC.i938
  %11736 = add i64 %11735, 2
  store i64 %11736, i64* %PC.i938
  %11737 = trunc i64 %11732 to i32
  %11738 = add i32 %11733, %11737
  %11739 = zext i32 %11738 to i64
  store i64 %11739, i64* %RAX.i940, align 8
  %11740 = icmp ult i32 %11738, %11737
  %11741 = icmp ult i32 %11738, %11733
  %11742 = or i1 %11740, %11741
  %11743 = zext i1 %11742 to i8
  %11744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11743, i8* %11744, align 1
  %11745 = and i32 %11738, 255
  %11746 = call i32 @llvm.ctpop.i32(i32 %11745)
  %11747 = trunc i32 %11746 to i8
  %11748 = and i8 %11747, 1
  %11749 = xor i8 %11748, 1
  %11750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11749, i8* %11750, align 1
  %11751 = xor i64 %11734, %11732
  %11752 = trunc i64 %11751 to i32
  %11753 = xor i32 %11752, %11738
  %11754 = lshr i32 %11753, 4
  %11755 = trunc i32 %11754 to i8
  %11756 = and i8 %11755, 1
  %11757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11756, i8* %11757, align 1
  %11758 = icmp eq i32 %11738, 0
  %11759 = zext i1 %11758 to i8
  %11760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11759, i8* %11760, align 1
  %11761 = lshr i32 %11738, 31
  %11762 = trunc i32 %11761 to i8
  %11763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11762, i8* %11763, align 1
  %11764 = lshr i32 %11737, 31
  %11765 = lshr i32 %11733, 31
  %11766 = xor i32 %11761, %11764
  %11767 = xor i32 %11761, %11765
  %11768 = add i32 %11766, %11767
  %11769 = icmp eq i32 %11768, 2
  %11770 = zext i1 %11769 to i8
  %11771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11770, i8* %11771, align 1
  store %struct.Memory* %loadMem_43ad12, %struct.Memory** %MEMORY
  %loadMem_43ad14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11773 = getelementptr inbounds %struct.GPR, %struct.GPR* %11772, i32 0, i32 33
  %11774 = getelementptr inbounds %struct.Reg, %struct.Reg* %11773, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %11774 to i64*
  %11775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11776 = getelementptr inbounds %struct.GPR, %struct.GPR* %11775, i32 0, i32 1
  %11777 = getelementptr inbounds %struct.Reg, %struct.Reg* %11776, i32 0, i32 0
  %RAX.i936 = bitcast %union.anon* %11777 to i64*
  %11778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11779 = getelementptr inbounds %struct.GPR, %struct.GPR* %11778, i32 0, i32 15
  %11780 = getelementptr inbounds %struct.Reg, %struct.Reg* %11779, i32 0, i32 0
  %RBP.i937 = bitcast %union.anon* %11780 to i64*
  %11781 = load i64, i64* %RAX.i936
  %11782 = load i64, i64* %RBP.i937
  %11783 = sub i64 %11782, 120
  %11784 = load i64, i64* %PC.i935
  %11785 = add i64 %11784, 3
  store i64 %11785, i64* %PC.i935
  %11786 = trunc i64 %11781 to i32
  %11787 = inttoptr i64 %11783 to i32*
  %11788 = load i32, i32* %11787
  %11789 = add i32 %11788, %11786
  %11790 = zext i32 %11789 to i64
  store i64 %11790, i64* %RAX.i936, align 8
  %11791 = icmp ult i32 %11789, %11786
  %11792 = icmp ult i32 %11789, %11788
  %11793 = or i1 %11791, %11792
  %11794 = zext i1 %11793 to i8
  %11795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11794, i8* %11795, align 1
  %11796 = and i32 %11789, 255
  %11797 = call i32 @llvm.ctpop.i32(i32 %11796)
  %11798 = trunc i32 %11797 to i8
  %11799 = and i8 %11798, 1
  %11800 = xor i8 %11799, 1
  %11801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11800, i8* %11801, align 1
  %11802 = xor i32 %11788, %11786
  %11803 = xor i32 %11802, %11789
  %11804 = lshr i32 %11803, 4
  %11805 = trunc i32 %11804 to i8
  %11806 = and i8 %11805, 1
  %11807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11806, i8* %11807, align 1
  %11808 = icmp eq i32 %11789, 0
  %11809 = zext i1 %11808 to i8
  %11810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11809, i8* %11810, align 1
  %11811 = lshr i32 %11789, 31
  %11812 = trunc i32 %11811 to i8
  %11813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11812, i8* %11813, align 1
  %11814 = lshr i32 %11786, 31
  %11815 = lshr i32 %11788, 31
  %11816 = xor i32 %11811, %11814
  %11817 = xor i32 %11811, %11815
  %11818 = add i32 %11816, %11817
  %11819 = icmp eq i32 %11818, 2
  %11820 = zext i1 %11819 to i8
  %11821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11820, i8* %11821, align 1
  store %struct.Memory* %loadMem_43ad14, %struct.Memory** %MEMORY
  %loadMem_43ad17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11823 = getelementptr inbounds %struct.GPR, %struct.GPR* %11822, i32 0, i32 33
  %11824 = getelementptr inbounds %struct.Reg, %struct.Reg* %11823, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %11824 to i64*
  %11825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11826 = getelementptr inbounds %struct.GPR, %struct.GPR* %11825, i32 0, i32 1
  %11827 = getelementptr inbounds %struct.Reg, %struct.Reg* %11826, i32 0, i32 0
  %RAX.i934 = bitcast %union.anon* %11827 to i64*
  %11828 = load i64, i64* %RAX.i934
  %11829 = load i64, i64* %PC.i933
  %11830 = add i64 %11829, 3
  store i64 %11830, i64* %PC.i933
  %11831 = trunc i64 %11828 to i32
  %11832 = add i32 4, %11831
  %11833 = zext i32 %11832 to i64
  store i64 %11833, i64* %RAX.i934, align 8
  %11834 = icmp ult i32 %11832, %11831
  %11835 = icmp ult i32 %11832, 4
  %11836 = or i1 %11834, %11835
  %11837 = zext i1 %11836 to i8
  %11838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11837, i8* %11838, align 1
  %11839 = and i32 %11832, 255
  %11840 = call i32 @llvm.ctpop.i32(i32 %11839)
  %11841 = trunc i32 %11840 to i8
  %11842 = and i8 %11841, 1
  %11843 = xor i8 %11842, 1
  %11844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11843, i8* %11844, align 1
  %11845 = xor i64 4, %11828
  %11846 = trunc i64 %11845 to i32
  %11847 = xor i32 %11846, %11832
  %11848 = lshr i32 %11847, 4
  %11849 = trunc i32 %11848 to i8
  %11850 = and i8 %11849, 1
  %11851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11850, i8* %11851, align 1
  %11852 = icmp eq i32 %11832, 0
  %11853 = zext i1 %11852 to i8
  %11854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11853, i8* %11854, align 1
  %11855 = lshr i32 %11832, 31
  %11856 = trunc i32 %11855 to i8
  %11857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11856, i8* %11857, align 1
  %11858 = lshr i32 %11831, 31
  %11859 = xor i32 %11855, %11858
  %11860 = add i32 %11859, %11855
  %11861 = icmp eq i32 %11860, 2
  %11862 = zext i1 %11861 to i8
  %11863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11862, i8* %11863, align 1
  store %struct.Memory* %loadMem_43ad17, %struct.Memory** %MEMORY
  %loadMem_43ad1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11865 = getelementptr inbounds %struct.GPR, %struct.GPR* %11864, i32 0, i32 33
  %11866 = getelementptr inbounds %struct.Reg, %struct.Reg* %11865, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %11866 to i64*
  %11867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11868 = getelementptr inbounds %struct.GPR, %struct.GPR* %11867, i32 0, i32 1
  %11869 = getelementptr inbounds %struct.Reg, %struct.Reg* %11868, i32 0, i32 0
  %RAX.i932 = bitcast %union.anon* %11869 to i64*
  %11870 = load i64, i64* %RAX.i932
  %11871 = load i64, i64* %PC.i931
  %11872 = add i64 %11871, 3
  store i64 %11872, i64* %PC.i931
  %11873 = shl i64 %11870, 32
  %11874 = ashr exact i64 %11873, 32
  %11875 = ashr i64 %11874, 2
  %11876 = lshr i64 %11875, 1
  %11877 = trunc i64 %11875 to i8
  %11878 = and i8 %11877, 1
  %11879 = trunc i64 %11876 to i32
  %11880 = and i64 %11876, 4294967295
  store i64 %11880, i64* %RAX.i932, align 8
  %11881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11878, i8* %11881, align 1
  %11882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11883 = and i32 %11879, 255
  %11884 = call i32 @llvm.ctpop.i32(i32 %11883)
  %11885 = trunc i32 %11884 to i8
  %11886 = and i8 %11885, 1
  %11887 = xor i8 %11886, 1
  store i8 %11887, i8* %11882, align 1
  %11888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11888, align 1
  %11889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11890 = icmp eq i32 %11879, 0
  %11891 = zext i1 %11890 to i8
  store i8 %11891, i8* %11889, align 1
  %11892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11893 = lshr i32 %11879, 31
  %11894 = trunc i32 %11893 to i8
  store i8 %11894, i8* %11892, align 1
  %11895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11895, align 1
  store %struct.Memory* %loadMem_43ad1a, %struct.Memory** %MEMORY
  %loadMem_43ad1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11897 = getelementptr inbounds %struct.GPR, %struct.GPR* %11896, i32 0, i32 33
  %11898 = getelementptr inbounds %struct.Reg, %struct.Reg* %11897, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %11898 to i64*
  %11899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11900 = getelementptr inbounds %struct.GPR, %struct.GPR* %11899, i32 0, i32 1
  %11901 = getelementptr inbounds %struct.Reg, %struct.Reg* %11900, i32 0, i32 0
  %EAX.i929 = bitcast %union.anon* %11901 to i32*
  %11902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11903 = getelementptr inbounds %struct.GPR, %struct.GPR* %11902, i32 0, i32 15
  %11904 = getelementptr inbounds %struct.Reg, %struct.Reg* %11903, i32 0, i32 0
  %RBP.i930 = bitcast %union.anon* %11904 to i64*
  %11905 = load i64, i64* %RBP.i930
  %11906 = sub i64 %11905, 436
  %11907 = load i32, i32* %EAX.i929
  %11908 = zext i32 %11907 to i64
  %11909 = load i64, i64* %PC.i928
  %11910 = add i64 %11909, 6
  store i64 %11910, i64* %PC.i928
  %11911 = inttoptr i64 %11906 to i32*
  store i32 %11907, i32* %11911
  store %struct.Memory* %loadMem_43ad1d, %struct.Memory** %MEMORY
  %loadMem_43ad23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11913 = getelementptr inbounds %struct.GPR, %struct.GPR* %11912, i32 0, i32 33
  %11914 = getelementptr inbounds %struct.Reg, %struct.Reg* %11913, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %11914 to i64*
  %11915 = load i64, i64* %PC.i927
  %11916 = add i64 %11915, 32
  %11917 = load i64, i64* %PC.i927
  %11918 = add i64 %11917, 5
  store i64 %11918, i64* %PC.i927
  %11919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11916, i64* %11919, align 8
  store %struct.Memory* %loadMem_43ad23, %struct.Memory** %MEMORY
  br label %block_.L_43ad43

block_.L_43ad28:                                  ; preds = %block_.L_43ace3
  %loadMem_43ad28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11921 = getelementptr inbounds %struct.GPR, %struct.GPR* %11920, i32 0, i32 33
  %11922 = getelementptr inbounds %struct.Reg, %struct.Reg* %11921, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %11922 to i64*
  %11923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11924 = getelementptr inbounds %struct.GPR, %struct.GPR* %11923, i32 0, i32 1
  %11925 = getelementptr inbounds %struct.Reg, %struct.Reg* %11924, i32 0, i32 0
  %RAX.i925 = bitcast %union.anon* %11925 to i64*
  %11926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11927 = getelementptr inbounds %struct.GPR, %struct.GPR* %11926, i32 0, i32 15
  %11928 = getelementptr inbounds %struct.Reg, %struct.Reg* %11927, i32 0, i32 0
  %RBP.i926 = bitcast %union.anon* %11928 to i64*
  %11929 = load i64, i64* %RBP.i926
  %11930 = sub i64 %11929, 124
  %11931 = load i64, i64* %PC.i924
  %11932 = add i64 %11931, 3
  store i64 %11932, i64* %PC.i924
  %11933 = inttoptr i64 %11930 to i32*
  %11934 = load i32, i32* %11933
  %11935 = zext i32 %11934 to i64
  store i64 %11935, i64* %RAX.i925, align 8
  store %struct.Memory* %loadMem_43ad28, %struct.Memory** %MEMORY
  %loadMem_43ad2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11937 = getelementptr inbounds %struct.GPR, %struct.GPR* %11936, i32 0, i32 33
  %11938 = getelementptr inbounds %struct.Reg, %struct.Reg* %11937, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %11938 to i64*
  %11939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11940 = getelementptr inbounds %struct.GPR, %struct.GPR* %11939, i32 0, i32 1
  %11941 = getelementptr inbounds %struct.Reg, %struct.Reg* %11940, i32 0, i32 0
  %RAX.i923 = bitcast %union.anon* %11941 to i64*
  %11942 = load i64, i64* %RAX.i923
  %11943 = load i64, i64* %PC.i922
  %11944 = add i64 %11943, 2
  store i64 %11944, i64* %PC.i922
  %11945 = trunc i64 %11942 to i32
  %11946 = shl i32 %11945, 1
  %11947 = icmp slt i32 %11945, 0
  %11948 = icmp slt i32 %11946, 0
  %11949 = xor i1 %11947, %11948
  %11950 = zext i32 %11946 to i64
  store i64 %11950, i64* %RAX.i923, align 8
  %11951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11952 = zext i1 %11947 to i8
  store i8 %11952, i8* %11951, align 1
  %11953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11954 = and i32 %11946, 254
  %11955 = call i32 @llvm.ctpop.i32(i32 %11954)
  %11956 = trunc i32 %11955 to i8
  %11957 = and i8 %11956, 1
  %11958 = xor i8 %11957, 1
  store i8 %11958, i8* %11953, align 1
  %11959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11959, align 1
  %11960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11961 = icmp eq i32 %11946, 0
  %11962 = zext i1 %11961 to i8
  store i8 %11962, i8* %11960, align 1
  %11963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11964 = lshr i32 %11946, 31
  %11965 = trunc i32 %11964 to i8
  store i8 %11965, i8* %11963, align 1
  %11966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11967 = zext i1 %11949 to i8
  store i8 %11967, i8* %11966, align 1
  store %struct.Memory* %loadMem_43ad2b, %struct.Memory** %MEMORY
  %loadMem_43ad2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11969 = getelementptr inbounds %struct.GPR, %struct.GPR* %11968, i32 0, i32 33
  %11970 = getelementptr inbounds %struct.Reg, %struct.Reg* %11969, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %11970 to i64*
  %11971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11972 = getelementptr inbounds %struct.GPR, %struct.GPR* %11971, i32 0, i32 1
  %11973 = getelementptr inbounds %struct.Reg, %struct.Reg* %11972, i32 0, i32 0
  %RAX.i920 = bitcast %union.anon* %11973 to i64*
  %11974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11975 = getelementptr inbounds %struct.GPR, %struct.GPR* %11974, i32 0, i32 15
  %11976 = getelementptr inbounds %struct.Reg, %struct.Reg* %11975, i32 0, i32 0
  %RBP.i921 = bitcast %union.anon* %11976 to i64*
  %11977 = load i64, i64* %RAX.i920
  %11978 = load i64, i64* %RBP.i921
  %11979 = sub i64 %11978, 128
  %11980 = load i64, i64* %PC.i919
  %11981 = add i64 %11980, 3
  store i64 %11981, i64* %PC.i919
  %11982 = trunc i64 %11977 to i32
  %11983 = inttoptr i64 %11979 to i32*
  %11984 = load i32, i32* %11983
  %11985 = add i32 %11984, %11982
  %11986 = zext i32 %11985 to i64
  store i64 %11986, i64* %RAX.i920, align 8
  %11987 = icmp ult i32 %11985, %11982
  %11988 = icmp ult i32 %11985, %11984
  %11989 = or i1 %11987, %11988
  %11990 = zext i1 %11989 to i8
  %11991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11990, i8* %11991, align 1
  %11992 = and i32 %11985, 255
  %11993 = call i32 @llvm.ctpop.i32(i32 %11992)
  %11994 = trunc i32 %11993 to i8
  %11995 = and i8 %11994, 1
  %11996 = xor i8 %11995, 1
  %11997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11996, i8* %11997, align 1
  %11998 = xor i32 %11984, %11982
  %11999 = xor i32 %11998, %11985
  %12000 = lshr i32 %11999, 4
  %12001 = trunc i32 %12000 to i8
  %12002 = and i8 %12001, 1
  %12003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12002, i8* %12003, align 1
  %12004 = icmp eq i32 %11985, 0
  %12005 = zext i1 %12004 to i8
  %12006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12005, i8* %12006, align 1
  %12007 = lshr i32 %11985, 31
  %12008 = trunc i32 %12007 to i8
  %12009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12008, i8* %12009, align 1
  %12010 = lshr i32 %11982, 31
  %12011 = lshr i32 %11984, 31
  %12012 = xor i32 %12007, %12010
  %12013 = xor i32 %12007, %12011
  %12014 = add i32 %12012, %12013
  %12015 = icmp eq i32 %12014, 2
  %12016 = zext i1 %12015 to i8
  %12017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12016, i8* %12017, align 1
  store %struct.Memory* %loadMem_43ad2e, %struct.Memory** %MEMORY
  %loadMem_43ad31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12019 = getelementptr inbounds %struct.GPR, %struct.GPR* %12018, i32 0, i32 33
  %12020 = getelementptr inbounds %struct.Reg, %struct.Reg* %12019, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %12020 to i64*
  %12021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12022 = getelementptr inbounds %struct.GPR, %struct.GPR* %12021, i32 0, i32 1
  %12023 = getelementptr inbounds %struct.Reg, %struct.Reg* %12022, i32 0, i32 0
  %RAX.i917 = bitcast %union.anon* %12023 to i64*
  %12024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12025 = getelementptr inbounds %struct.GPR, %struct.GPR* %12024, i32 0, i32 15
  %12026 = getelementptr inbounds %struct.Reg, %struct.Reg* %12025, i32 0, i32 0
  %RBP.i918 = bitcast %union.anon* %12026 to i64*
  %12027 = load i64, i64* %RAX.i917
  %12028 = load i64, i64* %RBP.i918
  %12029 = sub i64 %12028, 136
  %12030 = load i64, i64* %PC.i916
  %12031 = add i64 %12030, 6
  store i64 %12031, i64* %PC.i916
  %12032 = trunc i64 %12027 to i32
  %12033 = inttoptr i64 %12029 to i32*
  %12034 = load i32, i32* %12033
  %12035 = add i32 %12034, %12032
  %12036 = zext i32 %12035 to i64
  store i64 %12036, i64* %RAX.i917, align 8
  %12037 = icmp ult i32 %12035, %12032
  %12038 = icmp ult i32 %12035, %12034
  %12039 = or i1 %12037, %12038
  %12040 = zext i1 %12039 to i8
  %12041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12040, i8* %12041, align 1
  %12042 = and i32 %12035, 255
  %12043 = call i32 @llvm.ctpop.i32(i32 %12042)
  %12044 = trunc i32 %12043 to i8
  %12045 = and i8 %12044, 1
  %12046 = xor i8 %12045, 1
  %12047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12046, i8* %12047, align 1
  %12048 = xor i32 %12034, %12032
  %12049 = xor i32 %12048, %12035
  %12050 = lshr i32 %12049, 4
  %12051 = trunc i32 %12050 to i8
  %12052 = and i8 %12051, 1
  %12053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12052, i8* %12053, align 1
  %12054 = icmp eq i32 %12035, 0
  %12055 = zext i1 %12054 to i8
  %12056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12055, i8* %12056, align 1
  %12057 = lshr i32 %12035, 31
  %12058 = trunc i32 %12057 to i8
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12058, i8* %12059, align 1
  %12060 = lshr i32 %12032, 31
  %12061 = lshr i32 %12034, 31
  %12062 = xor i32 %12057, %12060
  %12063 = xor i32 %12057, %12061
  %12064 = add i32 %12062, %12063
  %12065 = icmp eq i32 %12064, 2
  %12066 = zext i1 %12065 to i8
  %12067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12066, i8* %12067, align 1
  store %struct.Memory* %loadMem_43ad31, %struct.Memory** %MEMORY
  %loadMem_43ad37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12069 = getelementptr inbounds %struct.GPR, %struct.GPR* %12068, i32 0, i32 33
  %12070 = getelementptr inbounds %struct.Reg, %struct.Reg* %12069, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %12070 to i64*
  %12071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12072 = getelementptr inbounds %struct.GPR, %struct.GPR* %12071, i32 0, i32 1
  %12073 = getelementptr inbounds %struct.Reg, %struct.Reg* %12072, i32 0, i32 0
  %RAX.i915 = bitcast %union.anon* %12073 to i64*
  %12074 = load i64, i64* %RAX.i915
  %12075 = load i64, i64* %PC.i914
  %12076 = add i64 %12075, 3
  store i64 %12076, i64* %PC.i914
  %12077 = trunc i64 %12074 to i32
  %12078 = add i32 2, %12077
  %12079 = zext i32 %12078 to i64
  store i64 %12079, i64* %RAX.i915, align 8
  %12080 = icmp ult i32 %12078, %12077
  %12081 = icmp ult i32 %12078, 2
  %12082 = or i1 %12080, %12081
  %12083 = zext i1 %12082 to i8
  %12084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12083, i8* %12084, align 1
  %12085 = and i32 %12078, 255
  %12086 = call i32 @llvm.ctpop.i32(i32 %12085)
  %12087 = trunc i32 %12086 to i8
  %12088 = and i8 %12087, 1
  %12089 = xor i8 %12088, 1
  %12090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12089, i8* %12090, align 1
  %12091 = xor i64 2, %12074
  %12092 = trunc i64 %12091 to i32
  %12093 = xor i32 %12092, %12078
  %12094 = lshr i32 %12093, 4
  %12095 = trunc i32 %12094 to i8
  %12096 = and i8 %12095, 1
  %12097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12096, i8* %12097, align 1
  %12098 = icmp eq i32 %12078, 0
  %12099 = zext i1 %12098 to i8
  %12100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12099, i8* %12100, align 1
  %12101 = lshr i32 %12078, 31
  %12102 = trunc i32 %12101 to i8
  %12103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12102, i8* %12103, align 1
  %12104 = lshr i32 %12077, 31
  %12105 = xor i32 %12101, %12104
  %12106 = add i32 %12105, %12101
  %12107 = icmp eq i32 %12106, 2
  %12108 = zext i1 %12107 to i8
  %12109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12108, i8* %12109, align 1
  store %struct.Memory* %loadMem_43ad37, %struct.Memory** %MEMORY
  %loadMem_43ad3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12111 = getelementptr inbounds %struct.GPR, %struct.GPR* %12110, i32 0, i32 33
  %12112 = getelementptr inbounds %struct.Reg, %struct.Reg* %12111, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %12112 to i64*
  %12113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12114 = getelementptr inbounds %struct.GPR, %struct.GPR* %12113, i32 0, i32 1
  %12115 = getelementptr inbounds %struct.Reg, %struct.Reg* %12114, i32 0, i32 0
  %RAX.i913 = bitcast %union.anon* %12115 to i64*
  %12116 = load i64, i64* %RAX.i913
  %12117 = load i64, i64* %PC.i912
  %12118 = add i64 %12117, 3
  store i64 %12118, i64* %PC.i912
  %12119 = shl i64 %12116, 32
  %12120 = ashr exact i64 %12119, 32
  %12121 = ashr i64 %12120, 1
  %12122 = lshr i64 %12121, 1
  %12123 = trunc i64 %12121 to i8
  %12124 = and i8 %12123, 1
  %12125 = trunc i64 %12122 to i32
  %12126 = and i64 %12122, 4294967295
  store i64 %12126, i64* %RAX.i913, align 8
  %12127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12124, i8* %12127, align 1
  %12128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12129 = and i32 %12125, 255
  %12130 = call i32 @llvm.ctpop.i32(i32 %12129)
  %12131 = trunc i32 %12130 to i8
  %12132 = and i8 %12131, 1
  %12133 = xor i8 %12132, 1
  store i8 %12133, i8* %12128, align 1
  %12134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12134, align 1
  %12135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12136 = icmp eq i32 %12125, 0
  %12137 = zext i1 %12136 to i8
  store i8 %12137, i8* %12135, align 1
  %12138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12139 = lshr i32 %12125, 31
  %12140 = trunc i32 %12139 to i8
  store i8 %12140, i8* %12138, align 1
  %12141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12141, align 1
  store %struct.Memory* %loadMem_43ad3a, %struct.Memory** %MEMORY
  %loadMem_43ad3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12143 = getelementptr inbounds %struct.GPR, %struct.GPR* %12142, i32 0, i32 33
  %12144 = getelementptr inbounds %struct.Reg, %struct.Reg* %12143, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %12144 to i64*
  %12145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12146 = getelementptr inbounds %struct.GPR, %struct.GPR* %12145, i32 0, i32 1
  %12147 = getelementptr inbounds %struct.Reg, %struct.Reg* %12146, i32 0, i32 0
  %EAX.i910 = bitcast %union.anon* %12147 to i32*
  %12148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12149 = getelementptr inbounds %struct.GPR, %struct.GPR* %12148, i32 0, i32 15
  %12150 = getelementptr inbounds %struct.Reg, %struct.Reg* %12149, i32 0, i32 0
  %RBP.i911 = bitcast %union.anon* %12150 to i64*
  %12151 = load i64, i64* %RBP.i911
  %12152 = sub i64 %12151, 436
  %12153 = load i32, i32* %EAX.i910
  %12154 = zext i32 %12153 to i64
  %12155 = load i64, i64* %PC.i909
  %12156 = add i64 %12155, 6
  store i64 %12156, i64* %PC.i909
  %12157 = inttoptr i64 %12152 to i32*
  store i32 %12153, i32* %12157
  store %struct.Memory* %loadMem_43ad3d, %struct.Memory** %MEMORY
  br label %block_.L_43ad43

block_.L_43ad43:                                  ; preds = %block_.L_43ad28, %block_43ad00
  %loadMem_43ad43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12159 = getelementptr inbounds %struct.GPR, %struct.GPR* %12158, i32 0, i32 33
  %12160 = getelementptr inbounds %struct.Reg, %struct.Reg* %12159, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %12160 to i64*
  %12161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12162 = getelementptr inbounds %struct.GPR, %struct.GPR* %12161, i32 0, i32 1
  %12163 = getelementptr inbounds %struct.Reg, %struct.Reg* %12162, i32 0, i32 0
  %RAX.i907 = bitcast %union.anon* %12163 to i64*
  %12164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12165 = getelementptr inbounds %struct.GPR, %struct.GPR* %12164, i32 0, i32 15
  %12166 = getelementptr inbounds %struct.Reg, %struct.Reg* %12165, i32 0, i32 0
  %RBP.i908 = bitcast %union.anon* %12166 to i64*
  %12167 = load i64, i64* %RBP.i908
  %12168 = sub i64 %12167, 436
  %12169 = load i64, i64* %PC.i906
  %12170 = add i64 %12169, 6
  store i64 %12170, i64* %PC.i906
  %12171 = inttoptr i64 %12168 to i32*
  %12172 = load i32, i32* %12171
  %12173 = zext i32 %12172 to i64
  store i64 %12173, i64* %RAX.i907, align 8
  store %struct.Memory* %loadMem_43ad43, %struct.Memory** %MEMORY
  %loadMem_43ad49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12175 = getelementptr inbounds %struct.GPR, %struct.GPR* %12174, i32 0, i32 33
  %12176 = getelementptr inbounds %struct.Reg, %struct.Reg* %12175, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %12176 to i64*
  %12177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12178 = getelementptr inbounds %struct.GPR, %struct.GPR* %12177, i32 0, i32 1
  %12179 = getelementptr inbounds %struct.Reg, %struct.Reg* %12178, i32 0, i32 0
  %AX.i904 = bitcast %union.anon* %12179 to i16*
  %12180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12181 = getelementptr inbounds %struct.GPR, %struct.GPR* %12180, i32 0, i32 5
  %12182 = getelementptr inbounds %struct.Reg, %struct.Reg* %12181, i32 0, i32 0
  %CX.i905 = bitcast %union.anon* %12182 to i16*
  %12183 = load i16, i16* %AX.i904
  %12184 = zext i16 %12183 to i64
  %12185 = load i64, i64* %PC.i903
  %12186 = add i64 %12185, 3
  store i64 %12186, i64* %PC.i903
  store i16 %12183, i16* %CX.i905, align 2
  store %struct.Memory* %loadMem_43ad49, %struct.Memory** %MEMORY
  %loadMem_43ad4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12188 = getelementptr inbounds %struct.GPR, %struct.GPR* %12187, i32 0, i32 33
  %12189 = getelementptr inbounds %struct.Reg, %struct.Reg* %12188, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %12189 to i64*
  %12190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12191 = getelementptr inbounds %struct.GPR, %struct.GPR* %12190, i32 0, i32 7
  %12192 = getelementptr inbounds %struct.Reg, %struct.Reg* %12191, i32 0, i32 0
  %RDX.i901 = bitcast %union.anon* %12192 to i64*
  %12193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12194 = getelementptr inbounds %struct.GPR, %struct.GPR* %12193, i32 0, i32 15
  %12195 = getelementptr inbounds %struct.Reg, %struct.Reg* %12194, i32 0, i32 0
  %RBP.i902 = bitcast %union.anon* %12195 to i64*
  %12196 = load i64, i64* %RBP.i902
  %12197 = sub i64 %12196, 200
  %12198 = load i64, i64* %PC.i900
  %12199 = add i64 %12198, 7
  store i64 %12199, i64* %PC.i900
  %12200 = inttoptr i64 %12197 to i64*
  %12201 = load i64, i64* %12200
  store i64 %12201, i64* %RDX.i901, align 8
  store %struct.Memory* %loadMem_43ad4c, %struct.Memory** %MEMORY
  %loadMem_43ad53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12203 = getelementptr inbounds %struct.GPR, %struct.GPR* %12202, i32 0, i32 33
  %12204 = getelementptr inbounds %struct.Reg, %struct.Reg* %12203, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %12204 to i64*
  %12205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12206 = getelementptr inbounds %struct.GPR, %struct.GPR* %12205, i32 0, i32 5
  %12207 = getelementptr inbounds %struct.Reg, %struct.Reg* %12206, i32 0, i32 0
  %CX.i898 = bitcast %union.anon* %12207 to i16*
  %12208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12209 = getelementptr inbounds %struct.GPR, %struct.GPR* %12208, i32 0, i32 7
  %12210 = getelementptr inbounds %struct.Reg, %struct.Reg* %12209, i32 0, i32 0
  %RDX.i899 = bitcast %union.anon* %12210 to i64*
  %12211 = load i64, i64* %RDX.i899
  %12212 = load i16, i16* %CX.i898
  %12213 = zext i16 %12212 to i64
  %12214 = load i64, i64* %PC.i897
  %12215 = add i64 %12214, 3
  store i64 %12215, i64* %PC.i897
  %12216 = inttoptr i64 %12211 to i16*
  store i16 %12212, i16* %12216
  store %struct.Memory* %loadMem_43ad53, %struct.Memory** %MEMORY
  %loadMem_43ad56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12218 = getelementptr inbounds %struct.GPR, %struct.GPR* %12217, i32 0, i32 33
  %12219 = getelementptr inbounds %struct.Reg, %struct.Reg* %12218, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %12219 to i64*
  %12220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12221 = getelementptr inbounds %struct.GPR, %struct.GPR* %12220, i32 0, i32 15
  %12222 = getelementptr inbounds %struct.Reg, %struct.Reg* %12221, i32 0, i32 0
  %RBP.i896 = bitcast %union.anon* %12222 to i64*
  %12223 = load i64, i64* %RBP.i896
  %12224 = sub i64 %12223, 84
  %12225 = load i64, i64* %PC.i895
  %12226 = add i64 %12225, 4
  store i64 %12226, i64* %PC.i895
  %12227 = inttoptr i64 %12224 to i32*
  %12228 = load i32, i32* %12227
  %12229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12229, align 1
  %12230 = and i32 %12228, 255
  %12231 = call i32 @llvm.ctpop.i32(i32 %12230)
  %12232 = trunc i32 %12231 to i8
  %12233 = and i8 %12232, 1
  %12234 = xor i8 %12233, 1
  %12235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12234, i8* %12235, align 1
  %12236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12236, align 1
  %12237 = icmp eq i32 %12228, 0
  %12238 = zext i1 %12237 to i8
  %12239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12238, i8* %12239, align 1
  %12240 = lshr i32 %12228, 31
  %12241 = trunc i32 %12240 to i8
  %12242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12241, i8* %12242, align 1
  %12243 = lshr i32 %12228, 31
  %12244 = xor i32 %12240, %12243
  %12245 = add i32 %12244, %12243
  %12246 = icmp eq i32 %12245, 2
  %12247 = zext i1 %12246 to i8
  %12248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12247, i8* %12248, align 1
  store %struct.Memory* %loadMem_43ad56, %struct.Memory** %MEMORY
  %loadMem_43ad5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12250 = getelementptr inbounds %struct.GPR, %struct.GPR* %12249, i32 0, i32 33
  %12251 = getelementptr inbounds %struct.Reg, %struct.Reg* %12250, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %12251 to i64*
  %12252 = load i64, i64* %PC.i894
  %12253 = add i64 %12252, 44
  %12254 = load i64, i64* %PC.i894
  %12255 = add i64 %12254, 6
  %12256 = load i64, i64* %PC.i894
  %12257 = add i64 %12256, 6
  store i64 %12257, i64* %PC.i894
  %12258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12259 = load i8, i8* %12258, align 1
  store i8 %12259, i8* %BRANCH_TAKEN, align 1
  %12260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12261 = icmp ne i8 %12259, 0
  %12262 = select i1 %12261, i64 %12253, i64 %12255
  store i64 %12262, i64* %12260, align 8
  store %struct.Memory* %loadMem_43ad5a, %struct.Memory** %MEMORY
  %loadBr_43ad5a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ad5a = icmp eq i8 %loadBr_43ad5a, 1
  br i1 %cmpBr_43ad5a, label %block_.L_43ad86, label %block_43ad60

block_43ad60:                                     ; preds = %block_.L_43ad43
  %loadMem_43ad60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12264 = getelementptr inbounds %struct.GPR, %struct.GPR* %12263, i32 0, i32 33
  %12265 = getelementptr inbounds %struct.Reg, %struct.Reg* %12264, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %12265 to i64*
  %12266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12267 = getelementptr inbounds %struct.GPR, %struct.GPR* %12266, i32 0, i32 1
  %12268 = getelementptr inbounds %struct.Reg, %struct.Reg* %12267, i32 0, i32 0
  %RAX.i892 = bitcast %union.anon* %12268 to i64*
  %12269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12270 = getelementptr inbounds %struct.GPR, %struct.GPR* %12269, i32 0, i32 15
  %12271 = getelementptr inbounds %struct.Reg, %struct.Reg* %12270, i32 0, i32 0
  %RBP.i893 = bitcast %union.anon* %12271 to i64*
  %12272 = load i64, i64* %RBP.i893
  %12273 = sub i64 %12272, 140
  %12274 = load i64, i64* %PC.i891
  %12275 = add i64 %12274, 6
  store i64 %12275, i64* %PC.i891
  %12276 = inttoptr i64 %12273 to i32*
  %12277 = load i32, i32* %12276
  %12278 = zext i32 %12277 to i64
  store i64 %12278, i64* %RAX.i892, align 8
  store %struct.Memory* %loadMem_43ad60, %struct.Memory** %MEMORY
  %loadMem_43ad66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12280 = getelementptr inbounds %struct.GPR, %struct.GPR* %12279, i32 0, i32 33
  %12281 = getelementptr inbounds %struct.Reg, %struct.Reg* %12280, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %12281 to i64*
  %12282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12283 = getelementptr inbounds %struct.GPR, %struct.GPR* %12282, i32 0, i32 1
  %12284 = getelementptr inbounds %struct.Reg, %struct.Reg* %12283, i32 0, i32 0
  %RAX.i889 = bitcast %union.anon* %12284 to i64*
  %12285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12286 = getelementptr inbounds %struct.GPR, %struct.GPR* %12285, i32 0, i32 15
  %12287 = getelementptr inbounds %struct.Reg, %struct.Reg* %12286, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %12287 to i64*
  %12288 = load i64, i64* %RAX.i889
  %12289 = load i64, i64* %RBP.i890
  %12290 = sub i64 %12289, 132
  %12291 = load i64, i64* %PC.i888
  %12292 = add i64 %12291, 6
  store i64 %12292, i64* %PC.i888
  %12293 = trunc i64 %12288 to i32
  %12294 = inttoptr i64 %12290 to i32*
  %12295 = load i32, i32* %12294
  %12296 = add i32 %12295, %12293
  %12297 = zext i32 %12296 to i64
  store i64 %12297, i64* %RAX.i889, align 8
  %12298 = icmp ult i32 %12296, %12293
  %12299 = icmp ult i32 %12296, %12295
  %12300 = or i1 %12298, %12299
  %12301 = zext i1 %12300 to i8
  %12302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12301, i8* %12302, align 1
  %12303 = and i32 %12296, 255
  %12304 = call i32 @llvm.ctpop.i32(i32 %12303)
  %12305 = trunc i32 %12304 to i8
  %12306 = and i8 %12305, 1
  %12307 = xor i8 %12306, 1
  %12308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12307, i8* %12308, align 1
  %12309 = xor i32 %12295, %12293
  %12310 = xor i32 %12309, %12296
  %12311 = lshr i32 %12310, 4
  %12312 = trunc i32 %12311 to i8
  %12313 = and i8 %12312, 1
  %12314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12313, i8* %12314, align 1
  %12315 = icmp eq i32 %12296, 0
  %12316 = zext i1 %12315 to i8
  %12317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12316, i8* %12317, align 1
  %12318 = lshr i32 %12296, 31
  %12319 = trunc i32 %12318 to i8
  %12320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12319, i8* %12320, align 1
  %12321 = lshr i32 %12293, 31
  %12322 = lshr i32 %12295, 31
  %12323 = xor i32 %12318, %12321
  %12324 = xor i32 %12318, %12322
  %12325 = add i32 %12323, %12324
  %12326 = icmp eq i32 %12325, 2
  %12327 = zext i1 %12326 to i8
  %12328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12327, i8* %12328, align 1
  store %struct.Memory* %loadMem_43ad66, %struct.Memory** %MEMORY
  %loadMem_43ad6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12330 = getelementptr inbounds %struct.GPR, %struct.GPR* %12329, i32 0, i32 33
  %12331 = getelementptr inbounds %struct.Reg, %struct.Reg* %12330, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %12331 to i64*
  %12332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12333 = getelementptr inbounds %struct.GPR, %struct.GPR* %12332, i32 0, i32 1
  %12334 = getelementptr inbounds %struct.Reg, %struct.Reg* %12333, i32 0, i32 0
  %RAX.i886 = bitcast %union.anon* %12334 to i64*
  %12335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12336 = getelementptr inbounds %struct.GPR, %struct.GPR* %12335, i32 0, i32 15
  %12337 = getelementptr inbounds %struct.Reg, %struct.Reg* %12336, i32 0, i32 0
  %RBP.i887 = bitcast %union.anon* %12337 to i64*
  %12338 = load i64, i64* %RAX.i886
  %12339 = load i64, i64* %RBP.i887
  %12340 = sub i64 %12339, 136
  %12341 = load i64, i64* %PC.i885
  %12342 = add i64 %12341, 6
  store i64 %12342, i64* %PC.i885
  %12343 = trunc i64 %12338 to i32
  %12344 = inttoptr i64 %12340 to i32*
  %12345 = load i32, i32* %12344
  %12346 = add i32 %12345, %12343
  %12347 = zext i32 %12346 to i64
  store i64 %12347, i64* %RAX.i886, align 8
  %12348 = icmp ult i32 %12346, %12343
  %12349 = icmp ult i32 %12346, %12345
  %12350 = or i1 %12348, %12349
  %12351 = zext i1 %12350 to i8
  %12352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12351, i8* %12352, align 1
  %12353 = and i32 %12346, 255
  %12354 = call i32 @llvm.ctpop.i32(i32 %12353)
  %12355 = trunc i32 %12354 to i8
  %12356 = and i8 %12355, 1
  %12357 = xor i8 %12356, 1
  %12358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12357, i8* %12358, align 1
  %12359 = xor i32 %12345, %12343
  %12360 = xor i32 %12359, %12346
  %12361 = lshr i32 %12360, 4
  %12362 = trunc i32 %12361 to i8
  %12363 = and i8 %12362, 1
  %12364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12363, i8* %12364, align 1
  %12365 = icmp eq i32 %12346, 0
  %12366 = zext i1 %12365 to i8
  %12367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12366, i8* %12367, align 1
  %12368 = lshr i32 %12346, 31
  %12369 = trunc i32 %12368 to i8
  %12370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12369, i8* %12370, align 1
  %12371 = lshr i32 %12343, 31
  %12372 = lshr i32 %12345, 31
  %12373 = xor i32 %12368, %12371
  %12374 = xor i32 %12368, %12372
  %12375 = add i32 %12373, %12374
  %12376 = icmp eq i32 %12375, 2
  %12377 = zext i1 %12376 to i8
  %12378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12377, i8* %12378, align 1
  store %struct.Memory* %loadMem_43ad6c, %struct.Memory** %MEMORY
  %loadMem_43ad72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12380 = getelementptr inbounds %struct.GPR, %struct.GPR* %12379, i32 0, i32 33
  %12381 = getelementptr inbounds %struct.Reg, %struct.Reg* %12380, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %12381 to i64*
  %12382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12383 = getelementptr inbounds %struct.GPR, %struct.GPR* %12382, i32 0, i32 1
  %12384 = getelementptr inbounds %struct.Reg, %struct.Reg* %12383, i32 0, i32 0
  %RAX.i883 = bitcast %union.anon* %12384 to i64*
  %12385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12386 = getelementptr inbounds %struct.GPR, %struct.GPR* %12385, i32 0, i32 15
  %12387 = getelementptr inbounds %struct.Reg, %struct.Reg* %12386, i32 0, i32 0
  %RBP.i884 = bitcast %union.anon* %12387 to i64*
  %12388 = load i64, i64* %RAX.i883
  %12389 = load i64, i64* %RBP.i884
  %12390 = sub i64 %12389, 128
  %12391 = load i64, i64* %PC.i882
  %12392 = add i64 %12391, 3
  store i64 %12392, i64* %PC.i882
  %12393 = trunc i64 %12388 to i32
  %12394 = inttoptr i64 %12390 to i32*
  %12395 = load i32, i32* %12394
  %12396 = add i32 %12395, %12393
  %12397 = zext i32 %12396 to i64
  store i64 %12397, i64* %RAX.i883, align 8
  %12398 = icmp ult i32 %12396, %12393
  %12399 = icmp ult i32 %12396, %12395
  %12400 = or i1 %12398, %12399
  %12401 = zext i1 %12400 to i8
  %12402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12401, i8* %12402, align 1
  %12403 = and i32 %12396, 255
  %12404 = call i32 @llvm.ctpop.i32(i32 %12403)
  %12405 = trunc i32 %12404 to i8
  %12406 = and i8 %12405, 1
  %12407 = xor i8 %12406, 1
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12407, i8* %12408, align 1
  %12409 = xor i32 %12395, %12393
  %12410 = xor i32 %12409, %12396
  %12411 = lshr i32 %12410, 4
  %12412 = trunc i32 %12411 to i8
  %12413 = and i8 %12412, 1
  %12414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12413, i8* %12414, align 1
  %12415 = icmp eq i32 %12396, 0
  %12416 = zext i1 %12415 to i8
  %12417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12416, i8* %12417, align 1
  %12418 = lshr i32 %12396, 31
  %12419 = trunc i32 %12418 to i8
  %12420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12419, i8* %12420, align 1
  %12421 = lshr i32 %12393, 31
  %12422 = lshr i32 %12395, 31
  %12423 = xor i32 %12418, %12421
  %12424 = xor i32 %12418, %12422
  %12425 = add i32 %12423, %12424
  %12426 = icmp eq i32 %12425, 2
  %12427 = zext i1 %12426 to i8
  %12428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12427, i8* %12428, align 1
  store %struct.Memory* %loadMem_43ad72, %struct.Memory** %MEMORY
  %loadMem_43ad75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12430 = getelementptr inbounds %struct.GPR, %struct.GPR* %12429, i32 0, i32 33
  %12431 = getelementptr inbounds %struct.Reg, %struct.Reg* %12430, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %12431 to i64*
  %12432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12433 = getelementptr inbounds %struct.GPR, %struct.GPR* %12432, i32 0, i32 1
  %12434 = getelementptr inbounds %struct.Reg, %struct.Reg* %12433, i32 0, i32 0
  %RAX.i881 = bitcast %union.anon* %12434 to i64*
  %12435 = load i64, i64* %RAX.i881
  %12436 = load i64, i64* %PC.i880
  %12437 = add i64 %12436, 3
  store i64 %12437, i64* %PC.i880
  %12438 = trunc i64 %12435 to i32
  %12439 = add i32 2, %12438
  %12440 = zext i32 %12439 to i64
  store i64 %12440, i64* %RAX.i881, align 8
  %12441 = icmp ult i32 %12439, %12438
  %12442 = icmp ult i32 %12439, 2
  %12443 = or i1 %12441, %12442
  %12444 = zext i1 %12443 to i8
  %12445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12444, i8* %12445, align 1
  %12446 = and i32 %12439, 255
  %12447 = call i32 @llvm.ctpop.i32(i32 %12446)
  %12448 = trunc i32 %12447 to i8
  %12449 = and i8 %12448, 1
  %12450 = xor i8 %12449, 1
  %12451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12450, i8* %12451, align 1
  %12452 = xor i64 2, %12435
  %12453 = trunc i64 %12452 to i32
  %12454 = xor i32 %12453, %12439
  %12455 = lshr i32 %12454, 4
  %12456 = trunc i32 %12455 to i8
  %12457 = and i8 %12456, 1
  %12458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12457, i8* %12458, align 1
  %12459 = icmp eq i32 %12439, 0
  %12460 = zext i1 %12459 to i8
  %12461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12460, i8* %12461, align 1
  %12462 = lshr i32 %12439, 31
  %12463 = trunc i32 %12462 to i8
  %12464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12463, i8* %12464, align 1
  %12465 = lshr i32 %12438, 31
  %12466 = xor i32 %12462, %12465
  %12467 = add i32 %12466, %12462
  %12468 = icmp eq i32 %12467, 2
  %12469 = zext i1 %12468 to i8
  %12470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12469, i8* %12470, align 1
  store %struct.Memory* %loadMem_43ad75, %struct.Memory** %MEMORY
  %loadMem_43ad78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12472 = getelementptr inbounds %struct.GPR, %struct.GPR* %12471, i32 0, i32 33
  %12473 = getelementptr inbounds %struct.Reg, %struct.Reg* %12472, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %12473 to i64*
  %12474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12475 = getelementptr inbounds %struct.GPR, %struct.GPR* %12474, i32 0, i32 1
  %12476 = getelementptr inbounds %struct.Reg, %struct.Reg* %12475, i32 0, i32 0
  %RAX.i879 = bitcast %union.anon* %12476 to i64*
  %12477 = load i64, i64* %RAX.i879
  %12478 = load i64, i64* %PC.i878
  %12479 = add i64 %12478, 3
  store i64 %12479, i64* %PC.i878
  %12480 = shl i64 %12477, 32
  %12481 = ashr exact i64 %12480, 32
  %12482 = ashr i64 %12481, 1
  %12483 = lshr i64 %12482, 1
  %12484 = trunc i64 %12482 to i8
  %12485 = and i8 %12484, 1
  %12486 = trunc i64 %12483 to i32
  %12487 = and i64 %12483, 4294967295
  store i64 %12487, i64* %RAX.i879, align 8
  %12488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12485, i8* %12488, align 1
  %12489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12490 = and i32 %12486, 255
  %12491 = call i32 @llvm.ctpop.i32(i32 %12490)
  %12492 = trunc i32 %12491 to i8
  %12493 = and i8 %12492, 1
  %12494 = xor i8 %12493, 1
  store i8 %12494, i8* %12489, align 1
  %12495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12495, align 1
  %12496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12497 = icmp eq i32 %12486, 0
  %12498 = zext i1 %12497 to i8
  store i8 %12498, i8* %12496, align 1
  %12499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12500 = lshr i32 %12486, 31
  %12501 = trunc i32 %12500 to i8
  store i8 %12501, i8* %12499, align 1
  %12502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12502, align 1
  store %struct.Memory* %loadMem_43ad78, %struct.Memory** %MEMORY
  %loadMem_43ad7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12504 = getelementptr inbounds %struct.GPR, %struct.GPR* %12503, i32 0, i32 33
  %12505 = getelementptr inbounds %struct.Reg, %struct.Reg* %12504, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %12505 to i64*
  %12506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12507 = getelementptr inbounds %struct.GPR, %struct.GPR* %12506, i32 0, i32 1
  %12508 = getelementptr inbounds %struct.Reg, %struct.Reg* %12507, i32 0, i32 0
  %EAX.i876 = bitcast %union.anon* %12508 to i32*
  %12509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12510 = getelementptr inbounds %struct.GPR, %struct.GPR* %12509, i32 0, i32 15
  %12511 = getelementptr inbounds %struct.Reg, %struct.Reg* %12510, i32 0, i32 0
  %RBP.i877 = bitcast %union.anon* %12511 to i64*
  %12512 = load i64, i64* %RBP.i877
  %12513 = sub i64 %12512, 440
  %12514 = load i32, i32* %EAX.i876
  %12515 = zext i32 %12514 to i64
  %12516 = load i64, i64* %PC.i875
  %12517 = add i64 %12516, 6
  store i64 %12517, i64* %PC.i875
  %12518 = inttoptr i64 %12513 to i32*
  store i32 %12514, i32* %12518
  store %struct.Memory* %loadMem_43ad7b, %struct.Memory** %MEMORY
  %loadMem_43ad81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12520 = getelementptr inbounds %struct.GPR, %struct.GPR* %12519, i32 0, i32 33
  %12521 = getelementptr inbounds %struct.Reg, %struct.Reg* %12520, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %12521 to i64*
  %12522 = load i64, i64* %PC.i874
  %12523 = add i64 %12522, 17
  %12524 = load i64, i64* %PC.i874
  %12525 = add i64 %12524, 5
  store i64 %12525, i64* %PC.i874
  %12526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12523, i64* %12526, align 8
  store %struct.Memory* %loadMem_43ad81, %struct.Memory** %MEMORY
  br label %block_.L_43ad92

block_.L_43ad86:                                  ; preds = %block_.L_43ad43
  %loadMem_43ad86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12528 = getelementptr inbounds %struct.GPR, %struct.GPR* %12527, i32 0, i32 33
  %12529 = getelementptr inbounds %struct.Reg, %struct.Reg* %12528, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %12529 to i64*
  %12530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12531 = getelementptr inbounds %struct.GPR, %struct.GPR* %12530, i32 0, i32 1
  %12532 = getelementptr inbounds %struct.Reg, %struct.Reg* %12531, i32 0, i32 0
  %RAX.i872 = bitcast %union.anon* %12532 to i64*
  %12533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12534 = getelementptr inbounds %struct.GPR, %struct.GPR* %12533, i32 0, i32 15
  %12535 = getelementptr inbounds %struct.Reg, %struct.Reg* %12534, i32 0, i32 0
  %RBP.i873 = bitcast %union.anon* %12535 to i64*
  %12536 = load i64, i64* %RBP.i873
  %12537 = sub i64 %12536, 136
  %12538 = load i64, i64* %PC.i871
  %12539 = add i64 %12538, 6
  store i64 %12539, i64* %PC.i871
  %12540 = inttoptr i64 %12537 to i32*
  %12541 = load i32, i32* %12540
  %12542 = zext i32 %12541 to i64
  store i64 %12542, i64* %RAX.i872, align 8
  store %struct.Memory* %loadMem_43ad86, %struct.Memory** %MEMORY
  %loadMem_43ad8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12544 = getelementptr inbounds %struct.GPR, %struct.GPR* %12543, i32 0, i32 33
  %12545 = getelementptr inbounds %struct.Reg, %struct.Reg* %12544, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %12545 to i64*
  %12546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12547 = getelementptr inbounds %struct.GPR, %struct.GPR* %12546, i32 0, i32 1
  %12548 = getelementptr inbounds %struct.Reg, %struct.Reg* %12547, i32 0, i32 0
  %EAX.i869 = bitcast %union.anon* %12548 to i32*
  %12549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12550 = getelementptr inbounds %struct.GPR, %struct.GPR* %12549, i32 0, i32 15
  %12551 = getelementptr inbounds %struct.Reg, %struct.Reg* %12550, i32 0, i32 0
  %RBP.i870 = bitcast %union.anon* %12551 to i64*
  %12552 = load i64, i64* %RBP.i870
  %12553 = sub i64 %12552, 440
  %12554 = load i32, i32* %EAX.i869
  %12555 = zext i32 %12554 to i64
  %12556 = load i64, i64* %PC.i868
  %12557 = add i64 %12556, 6
  store i64 %12557, i64* %PC.i868
  %12558 = inttoptr i64 %12553 to i32*
  store i32 %12554, i32* %12558
  store %struct.Memory* %loadMem_43ad8c, %struct.Memory** %MEMORY
  br label %block_.L_43ad92

block_.L_43ad92:                                  ; preds = %block_.L_43ad86, %block_43ad60
  %loadMem_43ad92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12560 = getelementptr inbounds %struct.GPR, %struct.GPR* %12559, i32 0, i32 33
  %12561 = getelementptr inbounds %struct.Reg, %struct.Reg* %12560, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %12561 to i64*
  %12562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12563 = getelementptr inbounds %struct.GPR, %struct.GPR* %12562, i32 0, i32 1
  %12564 = getelementptr inbounds %struct.Reg, %struct.Reg* %12563, i32 0, i32 0
  %RAX.i866 = bitcast %union.anon* %12564 to i64*
  %12565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12566 = getelementptr inbounds %struct.GPR, %struct.GPR* %12565, i32 0, i32 15
  %12567 = getelementptr inbounds %struct.Reg, %struct.Reg* %12566, i32 0, i32 0
  %RBP.i867 = bitcast %union.anon* %12567 to i64*
  %12568 = load i64, i64* %RBP.i867
  %12569 = sub i64 %12568, 440
  %12570 = load i64, i64* %PC.i865
  %12571 = add i64 %12570, 6
  store i64 %12571, i64* %PC.i865
  %12572 = inttoptr i64 %12569 to i32*
  %12573 = load i32, i32* %12572
  %12574 = zext i32 %12573 to i64
  store i64 %12574, i64* %RAX.i866, align 8
  store %struct.Memory* %loadMem_43ad92, %struct.Memory** %MEMORY
  %loadMem_43ad98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12576 = getelementptr inbounds %struct.GPR, %struct.GPR* %12575, i32 0, i32 33
  %12577 = getelementptr inbounds %struct.Reg, %struct.Reg* %12576, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %12577 to i64*
  %12578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12579 = getelementptr inbounds %struct.GPR, %struct.GPR* %12578, i32 0, i32 1
  %12580 = getelementptr inbounds %struct.Reg, %struct.Reg* %12579, i32 0, i32 0
  %AX.i863 = bitcast %union.anon* %12580 to i16*
  %12581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12582 = getelementptr inbounds %struct.GPR, %struct.GPR* %12581, i32 0, i32 5
  %12583 = getelementptr inbounds %struct.Reg, %struct.Reg* %12582, i32 0, i32 0
  %CX.i864 = bitcast %union.anon* %12583 to i16*
  %12584 = load i16, i16* %AX.i863
  %12585 = zext i16 %12584 to i64
  %12586 = load i64, i64* %PC.i862
  %12587 = add i64 %12586, 3
  store i64 %12587, i64* %PC.i862
  store i16 %12584, i16* %CX.i864, align 2
  store %struct.Memory* %loadMem_43ad98, %struct.Memory** %MEMORY
  %loadMem_43ad9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12589 = getelementptr inbounds %struct.GPR, %struct.GPR* %12588, i32 0, i32 33
  %12590 = getelementptr inbounds %struct.Reg, %struct.Reg* %12589, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %12590 to i64*
  %12591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12592 = getelementptr inbounds %struct.GPR, %struct.GPR* %12591, i32 0, i32 7
  %12593 = getelementptr inbounds %struct.Reg, %struct.Reg* %12592, i32 0, i32 0
  %RDX.i860 = bitcast %union.anon* %12593 to i64*
  %12594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12595 = getelementptr inbounds %struct.GPR, %struct.GPR* %12594, i32 0, i32 15
  %12596 = getelementptr inbounds %struct.Reg, %struct.Reg* %12595, i32 0, i32 0
  %RBP.i861 = bitcast %union.anon* %12596 to i64*
  %12597 = load i64, i64* %RBP.i861
  %12598 = sub i64 %12597, 208
  %12599 = load i64, i64* %PC.i859
  %12600 = add i64 %12599, 7
  store i64 %12600, i64* %PC.i859
  %12601 = inttoptr i64 %12598 to i64*
  %12602 = load i64, i64* %12601
  store i64 %12602, i64* %RDX.i860, align 8
  store %struct.Memory* %loadMem_43ad9b, %struct.Memory** %MEMORY
  %loadMem_43ada2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12604 = getelementptr inbounds %struct.GPR, %struct.GPR* %12603, i32 0, i32 33
  %12605 = getelementptr inbounds %struct.Reg, %struct.Reg* %12604, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %12605 to i64*
  %12606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12607 = getelementptr inbounds %struct.GPR, %struct.GPR* %12606, i32 0, i32 9
  %12608 = getelementptr inbounds %struct.Reg, %struct.Reg* %12607, i32 0, i32 0
  %RSI.i857 = bitcast %union.anon* %12608 to i64*
  %12609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12610 = getelementptr inbounds %struct.GPR, %struct.GPR* %12609, i32 0, i32 15
  %12611 = getelementptr inbounds %struct.Reg, %struct.Reg* %12610, i32 0, i32 0
  %RBP.i858 = bitcast %union.anon* %12611 to i64*
  %12612 = load i64, i64* %RBP.i858
  %12613 = sub i64 %12612, 96
  %12614 = load i64, i64* %PC.i856
  %12615 = add i64 %12614, 4
  store i64 %12615, i64* %PC.i856
  %12616 = inttoptr i64 %12613 to i32*
  %12617 = load i32, i32* %12616
  %12618 = sext i32 %12617 to i64
  store i64 %12618, i64* %RSI.i857, align 8
  store %struct.Memory* %loadMem_43ada2, %struct.Memory** %MEMORY
  %loadMem_43ada6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12620 = getelementptr inbounds %struct.GPR, %struct.GPR* %12619, i32 0, i32 33
  %12621 = getelementptr inbounds %struct.Reg, %struct.Reg* %12620, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %12621 to i64*
  %12622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12623 = getelementptr inbounds %struct.GPR, %struct.GPR* %12622, i32 0, i32 5
  %12624 = getelementptr inbounds %struct.Reg, %struct.Reg* %12623, i32 0, i32 0
  %CX.i853 = bitcast %union.anon* %12624 to i16*
  %12625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12626 = getelementptr inbounds %struct.GPR, %struct.GPR* %12625, i32 0, i32 7
  %12627 = getelementptr inbounds %struct.Reg, %struct.Reg* %12626, i32 0, i32 0
  %RDX.i854 = bitcast %union.anon* %12627 to i64*
  %12628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12629 = getelementptr inbounds %struct.GPR, %struct.GPR* %12628, i32 0, i32 9
  %12630 = getelementptr inbounds %struct.Reg, %struct.Reg* %12629, i32 0, i32 0
  %RSI.i855 = bitcast %union.anon* %12630 to i64*
  %12631 = load i64, i64* %RDX.i854
  %12632 = load i64, i64* %RSI.i855
  %12633 = mul i64 %12632, 2
  %12634 = add i64 %12633, %12631
  %12635 = load i16, i16* %CX.i853
  %12636 = zext i16 %12635 to i64
  %12637 = load i64, i64* %PC.i852
  %12638 = add i64 %12637, 4
  store i64 %12638, i64* %PC.i852
  %12639 = inttoptr i64 %12634 to i16*
  store i16 %12635, i16* %12639
  store %struct.Memory* %loadMem_43ada6, %struct.Memory** %MEMORY
  %loadMem_43adaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %12640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12641 = getelementptr inbounds %struct.GPR, %struct.GPR* %12640, i32 0, i32 33
  %12642 = getelementptr inbounds %struct.Reg, %struct.Reg* %12641, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %12642 to i64*
  %12643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12644 = getelementptr inbounds %struct.GPR, %struct.GPR* %12643, i32 0, i32 15
  %12645 = getelementptr inbounds %struct.Reg, %struct.Reg* %12644, i32 0, i32 0
  %RBP.i851 = bitcast %union.anon* %12645 to i64*
  %12646 = load i64, i64* %RBP.i851
  %12647 = sub i64 %12646, 80
  %12648 = load i64, i64* %PC.i850
  %12649 = add i64 %12648, 4
  store i64 %12649, i64* %PC.i850
  %12650 = inttoptr i64 %12647 to i32*
  %12651 = load i32, i32* %12650
  %12652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12652, align 1
  %12653 = and i32 %12651, 255
  %12654 = call i32 @llvm.ctpop.i32(i32 %12653)
  %12655 = trunc i32 %12654 to i8
  %12656 = and i8 %12655, 1
  %12657 = xor i8 %12656, 1
  %12658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12657, i8* %12658, align 1
  %12659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12659, align 1
  %12660 = icmp eq i32 %12651, 0
  %12661 = zext i1 %12660 to i8
  %12662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12661, i8* %12662, align 1
  %12663 = lshr i32 %12651, 31
  %12664 = trunc i32 %12663 to i8
  %12665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12664, i8* %12665, align 1
  %12666 = lshr i32 %12651, 31
  %12667 = xor i32 %12663, %12666
  %12668 = add i32 %12667, %12666
  %12669 = icmp eq i32 %12668, 2
  %12670 = zext i1 %12669 to i8
  %12671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12670, i8* %12671, align 1
  store %struct.Memory* %loadMem_43adaa, %struct.Memory** %MEMORY
  %loadMem_43adae = load %struct.Memory*, %struct.Memory** %MEMORY
  %12672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12673 = getelementptr inbounds %struct.GPR, %struct.GPR* %12672, i32 0, i32 33
  %12674 = getelementptr inbounds %struct.Reg, %struct.Reg* %12673, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %12674 to i64*
  %12675 = load i64, i64* %PC.i849
  %12676 = add i64 %12675, 38
  %12677 = load i64, i64* %PC.i849
  %12678 = add i64 %12677, 6
  %12679 = load i64, i64* %PC.i849
  %12680 = add i64 %12679, 6
  store i64 %12680, i64* %PC.i849
  %12681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12682 = load i8, i8* %12681, align 1
  store i8 %12682, i8* %BRANCH_TAKEN, align 1
  %12683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12684 = icmp ne i8 %12682, 0
  %12685 = select i1 %12684, i64 %12676, i64 %12678
  store i64 %12685, i64* %12683, align 8
  store %struct.Memory* %loadMem_43adae, %struct.Memory** %MEMORY
  %loadBr_43adae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43adae = icmp eq i8 %loadBr_43adae, 1
  br i1 %cmpBr_43adae, label %block_.L_43add4, label %block_43adb4

block_43adb4:                                     ; preds = %block_.L_43ad92
  %loadMem_43adb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12687 = getelementptr inbounds %struct.GPR, %struct.GPR* %12686, i32 0, i32 33
  %12688 = getelementptr inbounds %struct.Reg, %struct.Reg* %12687, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %12688 to i64*
  %12689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12690 = getelementptr inbounds %struct.GPR, %struct.GPR* %12689, i32 0, i32 1
  %12691 = getelementptr inbounds %struct.Reg, %struct.Reg* %12690, i32 0, i32 0
  %RAX.i847 = bitcast %union.anon* %12691 to i64*
  %12692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12693 = getelementptr inbounds %struct.GPR, %struct.GPR* %12692, i32 0, i32 15
  %12694 = getelementptr inbounds %struct.Reg, %struct.Reg* %12693, i32 0, i32 0
  %RBP.i848 = bitcast %union.anon* %12694 to i64*
  %12695 = load i64, i64* %RBP.i848
  %12696 = sub i64 %12695, 120
  %12697 = load i64, i64* %PC.i846
  %12698 = add i64 %12697, 3
  store i64 %12698, i64* %PC.i846
  %12699 = inttoptr i64 %12696 to i32*
  %12700 = load i32, i32* %12699
  %12701 = zext i32 %12700 to i64
  store i64 %12701, i64* %RAX.i847, align 8
  store %struct.Memory* %loadMem_43adb4, %struct.Memory** %MEMORY
  %loadMem_43adb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12703 = getelementptr inbounds %struct.GPR, %struct.GPR* %12702, i32 0, i32 33
  %12704 = getelementptr inbounds %struct.Reg, %struct.Reg* %12703, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %12704 to i64*
  %12705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12706 = getelementptr inbounds %struct.GPR, %struct.GPR* %12705, i32 0, i32 1
  %12707 = getelementptr inbounds %struct.Reg, %struct.Reg* %12706, i32 0, i32 0
  %RAX.i844 = bitcast %union.anon* %12707 to i64*
  %12708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12709 = getelementptr inbounds %struct.GPR, %struct.GPR* %12708, i32 0, i32 15
  %12710 = getelementptr inbounds %struct.Reg, %struct.Reg* %12709, i32 0, i32 0
  %RBP.i845 = bitcast %union.anon* %12710 to i64*
  %12711 = load i64, i64* %RAX.i844
  %12712 = load i64, i64* %RBP.i845
  %12713 = sub i64 %12712, 124
  %12714 = load i64, i64* %PC.i843
  %12715 = add i64 %12714, 3
  store i64 %12715, i64* %PC.i843
  %12716 = trunc i64 %12711 to i32
  %12717 = inttoptr i64 %12713 to i32*
  %12718 = load i32, i32* %12717
  %12719 = add i32 %12718, %12716
  %12720 = zext i32 %12719 to i64
  store i64 %12720, i64* %RAX.i844, align 8
  %12721 = icmp ult i32 %12719, %12716
  %12722 = icmp ult i32 %12719, %12718
  %12723 = or i1 %12721, %12722
  %12724 = zext i1 %12723 to i8
  %12725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12724, i8* %12725, align 1
  %12726 = and i32 %12719, 255
  %12727 = call i32 @llvm.ctpop.i32(i32 %12726)
  %12728 = trunc i32 %12727 to i8
  %12729 = and i8 %12728, 1
  %12730 = xor i8 %12729, 1
  %12731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12730, i8* %12731, align 1
  %12732 = xor i32 %12718, %12716
  %12733 = xor i32 %12732, %12719
  %12734 = lshr i32 %12733, 4
  %12735 = trunc i32 %12734 to i8
  %12736 = and i8 %12735, 1
  %12737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12736, i8* %12737, align 1
  %12738 = icmp eq i32 %12719, 0
  %12739 = zext i1 %12738 to i8
  %12740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12739, i8* %12740, align 1
  %12741 = lshr i32 %12719, 31
  %12742 = trunc i32 %12741 to i8
  %12743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12742, i8* %12743, align 1
  %12744 = lshr i32 %12716, 31
  %12745 = lshr i32 %12718, 31
  %12746 = xor i32 %12741, %12744
  %12747 = xor i32 %12741, %12745
  %12748 = add i32 %12746, %12747
  %12749 = icmp eq i32 %12748, 2
  %12750 = zext i1 %12749 to i8
  %12751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12750, i8* %12751, align 1
  store %struct.Memory* %loadMem_43adb7, %struct.Memory** %MEMORY
  %loadMem_43adba = load %struct.Memory*, %struct.Memory** %MEMORY
  %12752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12753 = getelementptr inbounds %struct.GPR, %struct.GPR* %12752, i32 0, i32 33
  %12754 = getelementptr inbounds %struct.Reg, %struct.Reg* %12753, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %12754 to i64*
  %12755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12756 = getelementptr inbounds %struct.GPR, %struct.GPR* %12755, i32 0, i32 1
  %12757 = getelementptr inbounds %struct.Reg, %struct.Reg* %12756, i32 0, i32 0
  %RAX.i841 = bitcast %union.anon* %12757 to i64*
  %12758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12759 = getelementptr inbounds %struct.GPR, %struct.GPR* %12758, i32 0, i32 15
  %12760 = getelementptr inbounds %struct.Reg, %struct.Reg* %12759, i32 0, i32 0
  %RBP.i842 = bitcast %union.anon* %12760 to i64*
  %12761 = load i64, i64* %RAX.i841
  %12762 = load i64, i64* %RBP.i842
  %12763 = sub i64 %12762, 128
  %12764 = load i64, i64* %PC.i840
  %12765 = add i64 %12764, 3
  store i64 %12765, i64* %PC.i840
  %12766 = trunc i64 %12761 to i32
  %12767 = inttoptr i64 %12763 to i32*
  %12768 = load i32, i32* %12767
  %12769 = add i32 %12768, %12766
  %12770 = zext i32 %12769 to i64
  store i64 %12770, i64* %RAX.i841, align 8
  %12771 = icmp ult i32 %12769, %12766
  %12772 = icmp ult i32 %12769, %12768
  %12773 = or i1 %12771, %12772
  %12774 = zext i1 %12773 to i8
  %12775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12774, i8* %12775, align 1
  %12776 = and i32 %12769, 255
  %12777 = call i32 @llvm.ctpop.i32(i32 %12776)
  %12778 = trunc i32 %12777 to i8
  %12779 = and i8 %12778, 1
  %12780 = xor i8 %12779, 1
  %12781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12780, i8* %12781, align 1
  %12782 = xor i32 %12768, %12766
  %12783 = xor i32 %12782, %12769
  %12784 = lshr i32 %12783, 4
  %12785 = trunc i32 %12784 to i8
  %12786 = and i8 %12785, 1
  %12787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12786, i8* %12787, align 1
  %12788 = icmp eq i32 %12769, 0
  %12789 = zext i1 %12788 to i8
  %12790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12789, i8* %12790, align 1
  %12791 = lshr i32 %12769, 31
  %12792 = trunc i32 %12791 to i8
  %12793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12792, i8* %12793, align 1
  %12794 = lshr i32 %12766, 31
  %12795 = lshr i32 %12768, 31
  %12796 = xor i32 %12791, %12794
  %12797 = xor i32 %12791, %12795
  %12798 = add i32 %12796, %12797
  %12799 = icmp eq i32 %12798, 2
  %12800 = zext i1 %12799 to i8
  %12801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12800, i8* %12801, align 1
  store %struct.Memory* %loadMem_43adba, %struct.Memory** %MEMORY
  %loadMem_43adbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12803 = getelementptr inbounds %struct.GPR, %struct.GPR* %12802, i32 0, i32 33
  %12804 = getelementptr inbounds %struct.Reg, %struct.Reg* %12803, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %12804 to i64*
  %12805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12806 = getelementptr inbounds %struct.GPR, %struct.GPR* %12805, i32 0, i32 1
  %12807 = getelementptr inbounds %struct.Reg, %struct.Reg* %12806, i32 0, i32 0
  %RAX.i838 = bitcast %union.anon* %12807 to i64*
  %12808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12809 = getelementptr inbounds %struct.GPR, %struct.GPR* %12808, i32 0, i32 15
  %12810 = getelementptr inbounds %struct.Reg, %struct.Reg* %12809, i32 0, i32 0
  %RBP.i839 = bitcast %union.anon* %12810 to i64*
  %12811 = load i64, i64* %RAX.i838
  %12812 = load i64, i64* %RBP.i839
  %12813 = sub i64 %12812, 132
  %12814 = load i64, i64* %PC.i837
  %12815 = add i64 %12814, 6
  store i64 %12815, i64* %PC.i837
  %12816 = trunc i64 %12811 to i32
  %12817 = inttoptr i64 %12813 to i32*
  %12818 = load i32, i32* %12817
  %12819 = add i32 %12818, %12816
  %12820 = zext i32 %12819 to i64
  store i64 %12820, i64* %RAX.i838, align 8
  %12821 = icmp ult i32 %12819, %12816
  %12822 = icmp ult i32 %12819, %12818
  %12823 = or i1 %12821, %12822
  %12824 = zext i1 %12823 to i8
  %12825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12824, i8* %12825, align 1
  %12826 = and i32 %12819, 255
  %12827 = call i32 @llvm.ctpop.i32(i32 %12826)
  %12828 = trunc i32 %12827 to i8
  %12829 = and i8 %12828, 1
  %12830 = xor i8 %12829, 1
  %12831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12830, i8* %12831, align 1
  %12832 = xor i32 %12818, %12816
  %12833 = xor i32 %12832, %12819
  %12834 = lshr i32 %12833, 4
  %12835 = trunc i32 %12834 to i8
  %12836 = and i8 %12835, 1
  %12837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12836, i8* %12837, align 1
  %12838 = icmp eq i32 %12819, 0
  %12839 = zext i1 %12838 to i8
  %12840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12839, i8* %12840, align 1
  %12841 = lshr i32 %12819, 31
  %12842 = trunc i32 %12841 to i8
  %12843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12842, i8* %12843, align 1
  %12844 = lshr i32 %12816, 31
  %12845 = lshr i32 %12818, 31
  %12846 = xor i32 %12841, %12844
  %12847 = xor i32 %12841, %12845
  %12848 = add i32 %12846, %12847
  %12849 = icmp eq i32 %12848, 2
  %12850 = zext i1 %12849 to i8
  %12851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12850, i8* %12851, align 1
  store %struct.Memory* %loadMem_43adbd, %struct.Memory** %MEMORY
  %loadMem_43adc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12853 = getelementptr inbounds %struct.GPR, %struct.GPR* %12852, i32 0, i32 33
  %12854 = getelementptr inbounds %struct.Reg, %struct.Reg* %12853, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %12854 to i64*
  %12855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12856 = getelementptr inbounds %struct.GPR, %struct.GPR* %12855, i32 0, i32 1
  %12857 = getelementptr inbounds %struct.Reg, %struct.Reg* %12856, i32 0, i32 0
  %RAX.i836 = bitcast %union.anon* %12857 to i64*
  %12858 = load i64, i64* %RAX.i836
  %12859 = load i64, i64* %PC.i835
  %12860 = add i64 %12859, 3
  store i64 %12860, i64* %PC.i835
  %12861 = trunc i64 %12858 to i32
  %12862 = add i32 2, %12861
  %12863 = zext i32 %12862 to i64
  store i64 %12863, i64* %RAX.i836, align 8
  %12864 = icmp ult i32 %12862, %12861
  %12865 = icmp ult i32 %12862, 2
  %12866 = or i1 %12864, %12865
  %12867 = zext i1 %12866 to i8
  %12868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12867, i8* %12868, align 1
  %12869 = and i32 %12862, 255
  %12870 = call i32 @llvm.ctpop.i32(i32 %12869)
  %12871 = trunc i32 %12870 to i8
  %12872 = and i8 %12871, 1
  %12873 = xor i8 %12872, 1
  %12874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12873, i8* %12874, align 1
  %12875 = xor i64 2, %12858
  %12876 = trunc i64 %12875 to i32
  %12877 = xor i32 %12876, %12862
  %12878 = lshr i32 %12877, 4
  %12879 = trunc i32 %12878 to i8
  %12880 = and i8 %12879, 1
  %12881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12880, i8* %12881, align 1
  %12882 = icmp eq i32 %12862, 0
  %12883 = zext i1 %12882 to i8
  %12884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12883, i8* %12884, align 1
  %12885 = lshr i32 %12862, 31
  %12886 = trunc i32 %12885 to i8
  %12887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12886, i8* %12887, align 1
  %12888 = lshr i32 %12861, 31
  %12889 = xor i32 %12885, %12888
  %12890 = add i32 %12889, %12885
  %12891 = icmp eq i32 %12890, 2
  %12892 = zext i1 %12891 to i8
  %12893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12892, i8* %12893, align 1
  store %struct.Memory* %loadMem_43adc3, %struct.Memory** %MEMORY
  %loadMem_43adc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12895 = getelementptr inbounds %struct.GPR, %struct.GPR* %12894, i32 0, i32 33
  %12896 = getelementptr inbounds %struct.Reg, %struct.Reg* %12895, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %12896 to i64*
  %12897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12898 = getelementptr inbounds %struct.GPR, %struct.GPR* %12897, i32 0, i32 1
  %12899 = getelementptr inbounds %struct.Reg, %struct.Reg* %12898, i32 0, i32 0
  %RAX.i834 = bitcast %union.anon* %12899 to i64*
  %12900 = load i64, i64* %RAX.i834
  %12901 = load i64, i64* %PC.i833
  %12902 = add i64 %12901, 3
  store i64 %12902, i64* %PC.i833
  %12903 = shl i64 %12900, 32
  %12904 = ashr exact i64 %12903, 32
  %12905 = ashr i64 %12904, 1
  %12906 = lshr i64 %12905, 1
  %12907 = trunc i64 %12905 to i8
  %12908 = and i8 %12907, 1
  %12909 = trunc i64 %12906 to i32
  %12910 = and i64 %12906, 4294967295
  store i64 %12910, i64* %RAX.i834, align 8
  %12911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12908, i8* %12911, align 1
  %12912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12913 = and i32 %12909, 255
  %12914 = call i32 @llvm.ctpop.i32(i32 %12913)
  %12915 = trunc i32 %12914 to i8
  %12916 = and i8 %12915, 1
  %12917 = xor i8 %12916, 1
  store i8 %12917, i8* %12912, align 1
  %12918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12918, align 1
  %12919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12920 = icmp eq i32 %12909, 0
  %12921 = zext i1 %12920 to i8
  store i8 %12921, i8* %12919, align 1
  %12922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12923 = lshr i32 %12909, 31
  %12924 = trunc i32 %12923 to i8
  store i8 %12924, i8* %12922, align 1
  %12925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12925, align 1
  store %struct.Memory* %loadMem_43adc6, %struct.Memory** %MEMORY
  %loadMem_43adc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12927 = getelementptr inbounds %struct.GPR, %struct.GPR* %12926, i32 0, i32 33
  %12928 = getelementptr inbounds %struct.Reg, %struct.Reg* %12927, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %12928 to i64*
  %12929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12930 = getelementptr inbounds %struct.GPR, %struct.GPR* %12929, i32 0, i32 1
  %12931 = getelementptr inbounds %struct.Reg, %struct.Reg* %12930, i32 0, i32 0
  %EAX.i831 = bitcast %union.anon* %12931 to i32*
  %12932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12933 = getelementptr inbounds %struct.GPR, %struct.GPR* %12932, i32 0, i32 15
  %12934 = getelementptr inbounds %struct.Reg, %struct.Reg* %12933, i32 0, i32 0
  %RBP.i832 = bitcast %union.anon* %12934 to i64*
  %12935 = load i64, i64* %RBP.i832
  %12936 = sub i64 %12935, 444
  %12937 = load i32, i32* %EAX.i831
  %12938 = zext i32 %12937 to i64
  %12939 = load i64, i64* %PC.i830
  %12940 = add i64 %12939, 6
  store i64 %12940, i64* %PC.i830
  %12941 = inttoptr i64 %12936 to i32*
  store i32 %12937, i32* %12941
  store %struct.Memory* %loadMem_43adc9, %struct.Memory** %MEMORY
  %loadMem_43adcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12943 = getelementptr inbounds %struct.GPR, %struct.GPR* %12942, i32 0, i32 33
  %12944 = getelementptr inbounds %struct.Reg, %struct.Reg* %12943, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %12944 to i64*
  %12945 = load i64, i64* %PC.i829
  %12946 = add i64 %12945, 14
  %12947 = load i64, i64* %PC.i829
  %12948 = add i64 %12947, 5
  store i64 %12948, i64* %PC.i829
  %12949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12946, i64* %12949, align 8
  store %struct.Memory* %loadMem_43adcf, %struct.Memory** %MEMORY
  br label %block_.L_43addd

block_.L_43add4:                                  ; preds = %block_.L_43ad92
  %loadMem_43add4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12951 = getelementptr inbounds %struct.GPR, %struct.GPR* %12950, i32 0, i32 33
  %12952 = getelementptr inbounds %struct.Reg, %struct.Reg* %12951, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %12952 to i64*
  %12953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12954 = getelementptr inbounds %struct.GPR, %struct.GPR* %12953, i32 0, i32 1
  %12955 = getelementptr inbounds %struct.Reg, %struct.Reg* %12954, i32 0, i32 0
  %RAX.i827 = bitcast %union.anon* %12955 to i64*
  %12956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12957 = getelementptr inbounds %struct.GPR, %struct.GPR* %12956, i32 0, i32 15
  %12958 = getelementptr inbounds %struct.Reg, %struct.Reg* %12957, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %12958 to i64*
  %12959 = load i64, i64* %RBP.i828
  %12960 = sub i64 %12959, 124
  %12961 = load i64, i64* %PC.i826
  %12962 = add i64 %12961, 3
  store i64 %12962, i64* %PC.i826
  %12963 = inttoptr i64 %12960 to i32*
  %12964 = load i32, i32* %12963
  %12965 = zext i32 %12964 to i64
  store i64 %12965, i64* %RAX.i827, align 8
  store %struct.Memory* %loadMem_43add4, %struct.Memory** %MEMORY
  %loadMem_43add7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12967 = getelementptr inbounds %struct.GPR, %struct.GPR* %12966, i32 0, i32 33
  %12968 = getelementptr inbounds %struct.Reg, %struct.Reg* %12967, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %12968 to i64*
  %12969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12970 = getelementptr inbounds %struct.GPR, %struct.GPR* %12969, i32 0, i32 1
  %12971 = getelementptr inbounds %struct.Reg, %struct.Reg* %12970, i32 0, i32 0
  %EAX.i824 = bitcast %union.anon* %12971 to i32*
  %12972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12973 = getelementptr inbounds %struct.GPR, %struct.GPR* %12972, i32 0, i32 15
  %12974 = getelementptr inbounds %struct.Reg, %struct.Reg* %12973, i32 0, i32 0
  %RBP.i825 = bitcast %union.anon* %12974 to i64*
  %12975 = load i64, i64* %RBP.i825
  %12976 = sub i64 %12975, 444
  %12977 = load i32, i32* %EAX.i824
  %12978 = zext i32 %12977 to i64
  %12979 = load i64, i64* %PC.i823
  %12980 = add i64 %12979, 6
  store i64 %12980, i64* %PC.i823
  %12981 = inttoptr i64 %12976 to i32*
  store i32 %12977, i32* %12981
  store %struct.Memory* %loadMem_43add7, %struct.Memory** %MEMORY
  br label %block_.L_43addd

block_.L_43addd:                                  ; preds = %block_.L_43add4, %block_43adb4
  %loadMem_43addd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12983 = getelementptr inbounds %struct.GPR, %struct.GPR* %12982, i32 0, i32 33
  %12984 = getelementptr inbounds %struct.Reg, %struct.Reg* %12983, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %12984 to i64*
  %12985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12986 = getelementptr inbounds %struct.GPR, %struct.GPR* %12985, i32 0, i32 1
  %12987 = getelementptr inbounds %struct.Reg, %struct.Reg* %12986, i32 0, i32 0
  %RAX.i821 = bitcast %union.anon* %12987 to i64*
  %12988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12989 = getelementptr inbounds %struct.GPR, %struct.GPR* %12988, i32 0, i32 15
  %12990 = getelementptr inbounds %struct.Reg, %struct.Reg* %12989, i32 0, i32 0
  %RBP.i822 = bitcast %union.anon* %12990 to i64*
  %12991 = load i64, i64* %RBP.i822
  %12992 = sub i64 %12991, 444
  %12993 = load i64, i64* %PC.i820
  %12994 = add i64 %12993, 6
  store i64 %12994, i64* %PC.i820
  %12995 = inttoptr i64 %12992 to i32*
  %12996 = load i32, i32* %12995
  %12997 = zext i32 %12996 to i64
  store i64 %12997, i64* %RAX.i821, align 8
  store %struct.Memory* %loadMem_43addd, %struct.Memory** %MEMORY
  %loadMem_43ade3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12999 = getelementptr inbounds %struct.GPR, %struct.GPR* %12998, i32 0, i32 33
  %13000 = getelementptr inbounds %struct.Reg, %struct.Reg* %12999, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %13000 to i64*
  %13001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13002 = getelementptr inbounds %struct.GPR, %struct.GPR* %13001, i32 0, i32 5
  %13003 = getelementptr inbounds %struct.Reg, %struct.Reg* %13002, i32 0, i32 0
  %ECX.i818 = bitcast %union.anon* %13003 to i32*
  %13004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13005 = getelementptr inbounds %struct.GPR, %struct.GPR* %13004, i32 0, i32 5
  %13006 = getelementptr inbounds %struct.Reg, %struct.Reg* %13005, i32 0, i32 0
  %RCX.i819 = bitcast %union.anon* %13006 to i64*
  %13007 = load i64, i64* %RCX.i819
  %13008 = load i32, i32* %ECX.i818
  %13009 = zext i32 %13008 to i64
  %13010 = load i64, i64* %PC.i817
  %13011 = add i64 %13010, 2
  store i64 %13011, i64* %PC.i817
  %13012 = xor i64 %13009, %13007
  %13013 = trunc i64 %13012 to i32
  %13014 = and i64 %13012, 4294967295
  store i64 %13014, i64* %RCX.i819, align 8
  %13015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13015, align 1
  %13016 = and i32 %13013, 255
  %13017 = call i32 @llvm.ctpop.i32(i32 %13016)
  %13018 = trunc i32 %13017 to i8
  %13019 = and i8 %13018, 1
  %13020 = xor i8 %13019, 1
  %13021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13020, i8* %13021, align 1
  %13022 = icmp eq i32 %13013, 0
  %13023 = zext i1 %13022 to i8
  %13024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13023, i8* %13024, align 1
  %13025 = lshr i32 %13013, 31
  %13026 = trunc i32 %13025 to i8
  %13027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13026, i8* %13027, align 1
  %13028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13028, align 1
  %13029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13029, align 1
  store %struct.Memory* %loadMem_43ade3, %struct.Memory** %MEMORY
  %loadMem_43ade5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13031 = getelementptr inbounds %struct.GPR, %struct.GPR* %13030, i32 0, i32 33
  %13032 = getelementptr inbounds %struct.Reg, %struct.Reg* %13031, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %13032 to i64*
  %13033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13034 = getelementptr inbounds %struct.GPR, %struct.GPR* %13033, i32 0, i32 1
  %13035 = getelementptr inbounds %struct.Reg, %struct.Reg* %13034, i32 0, i32 0
  %AX.i815 = bitcast %union.anon* %13035 to i16*
  %13036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13037 = getelementptr inbounds %struct.GPR, %struct.GPR* %13036, i32 0, i32 7
  %13038 = getelementptr inbounds %struct.Reg, %struct.Reg* %13037, i32 0, i32 0
  %DX.i816 = bitcast %union.anon* %13038 to i16*
  %13039 = load i16, i16* %AX.i815
  %13040 = zext i16 %13039 to i64
  %13041 = load i64, i64* %PC.i814
  %13042 = add i64 %13041, 3
  store i64 %13042, i64* %PC.i814
  store i16 %13039, i16* %DX.i816, align 2
  store %struct.Memory* %loadMem_43ade5, %struct.Memory** %MEMORY
  %loadMem_43ade8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13044 = getelementptr inbounds %struct.GPR, %struct.GPR* %13043, i32 0, i32 33
  %13045 = getelementptr inbounds %struct.Reg, %struct.Reg* %13044, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %13045 to i64*
  %13046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13047 = getelementptr inbounds %struct.GPR, %struct.GPR* %13046, i32 0, i32 9
  %13048 = getelementptr inbounds %struct.Reg, %struct.Reg* %13047, i32 0, i32 0
  %RSI.i812 = bitcast %union.anon* %13048 to i64*
  %13049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13050 = getelementptr inbounds %struct.GPR, %struct.GPR* %13049, i32 0, i32 15
  %13051 = getelementptr inbounds %struct.Reg, %struct.Reg* %13050, i32 0, i32 0
  %RBP.i813 = bitcast %union.anon* %13051 to i64*
  %13052 = load i64, i64* %RBP.i813
  %13053 = sub i64 %13052, 200
  %13054 = load i64, i64* %PC.i811
  %13055 = add i64 %13054, 7
  store i64 %13055, i64* %PC.i811
  %13056 = inttoptr i64 %13053 to i64*
  %13057 = load i64, i64* %13056
  store i64 %13057, i64* %RSI.i812, align 8
  store %struct.Memory* %loadMem_43ade8, %struct.Memory** %MEMORY
  %loadMem_43adef = load %struct.Memory*, %struct.Memory** %MEMORY
  %13058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13059 = getelementptr inbounds %struct.GPR, %struct.GPR* %13058, i32 0, i32 33
  %13060 = getelementptr inbounds %struct.Reg, %struct.Reg* %13059, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %13060 to i64*
  %13061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13062 = getelementptr inbounds %struct.GPR, %struct.GPR* %13061, i32 0, i32 5
  %13063 = getelementptr inbounds %struct.Reg, %struct.Reg* %13062, i32 0, i32 0
  %RCX.i809 = bitcast %union.anon* %13063 to i64*
  %13064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13065 = getelementptr inbounds %struct.GPR, %struct.GPR* %13064, i32 0, i32 15
  %13066 = getelementptr inbounds %struct.Reg, %struct.Reg* %13065, i32 0, i32 0
  %RBP.i810 = bitcast %union.anon* %13066 to i64*
  %13067 = load i64, i64* %RCX.i809
  %13068 = load i64, i64* %RBP.i810
  %13069 = sub i64 %13068, 92
  %13070 = load i64, i64* %PC.i808
  %13071 = add i64 %13070, 3
  store i64 %13071, i64* %PC.i808
  %13072 = trunc i64 %13067 to i32
  %13073 = inttoptr i64 %13069 to i32*
  %13074 = load i32, i32* %13073
  %13075 = sub i32 %13072, %13074
  %13076 = zext i32 %13075 to i64
  store i64 %13076, i64* %RCX.i809, align 8
  %13077 = icmp ult i32 %13072, %13074
  %13078 = zext i1 %13077 to i8
  %13079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13078, i8* %13079, align 1
  %13080 = and i32 %13075, 255
  %13081 = call i32 @llvm.ctpop.i32(i32 %13080)
  %13082 = trunc i32 %13081 to i8
  %13083 = and i8 %13082, 1
  %13084 = xor i8 %13083, 1
  %13085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13084, i8* %13085, align 1
  %13086 = xor i32 %13074, %13072
  %13087 = xor i32 %13086, %13075
  %13088 = lshr i32 %13087, 4
  %13089 = trunc i32 %13088 to i8
  %13090 = and i8 %13089, 1
  %13091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13090, i8* %13091, align 1
  %13092 = icmp eq i32 %13075, 0
  %13093 = zext i1 %13092 to i8
  %13094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13093, i8* %13094, align 1
  %13095 = lshr i32 %13075, 31
  %13096 = trunc i32 %13095 to i8
  %13097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13096, i8* %13097, align 1
  %13098 = lshr i32 %13072, 31
  %13099 = lshr i32 %13074, 31
  %13100 = xor i32 %13099, %13098
  %13101 = xor i32 %13095, %13098
  %13102 = add i32 %13101, %13100
  %13103 = icmp eq i32 %13102, 2
  %13104 = zext i1 %13103 to i8
  %13105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13104, i8* %13105, align 1
  store %struct.Memory* %loadMem_43adef, %struct.Memory** %MEMORY
  %loadMem_43adf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13107 = getelementptr inbounds %struct.GPR, %struct.GPR* %13106, i32 0, i32 33
  %13108 = getelementptr inbounds %struct.Reg, %struct.Reg* %13107, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %13108 to i64*
  %13109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13110 = getelementptr inbounds %struct.GPR, %struct.GPR* %13109, i32 0, i32 5
  %13111 = getelementptr inbounds %struct.Reg, %struct.Reg* %13110, i32 0, i32 0
  %ECX.i806 = bitcast %union.anon* %13111 to i32*
  %13112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13113 = getelementptr inbounds %struct.GPR, %struct.GPR* %13112, i32 0, i32 11
  %13114 = getelementptr inbounds %struct.Reg, %struct.Reg* %13113, i32 0, i32 0
  %RDI.i807 = bitcast %union.anon* %13114 to i64*
  %13115 = load i32, i32* %ECX.i806
  %13116 = zext i32 %13115 to i64
  %13117 = load i64, i64* %PC.i805
  %13118 = add i64 %13117, 3
  store i64 %13118, i64* %PC.i805
  %13119 = shl i64 %13116, 32
  %13120 = ashr exact i64 %13119, 32
  store i64 %13120, i64* %RDI.i807, align 8
  store %struct.Memory* %loadMem_43adf2, %struct.Memory** %MEMORY
  %loadMem_43adf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13122 = getelementptr inbounds %struct.GPR, %struct.GPR* %13121, i32 0, i32 33
  %13123 = getelementptr inbounds %struct.Reg, %struct.Reg* %13122, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %13123 to i64*
  %13124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13125 = getelementptr inbounds %struct.GPR, %struct.GPR* %13124, i32 0, i32 7
  %13126 = getelementptr inbounds %struct.Reg, %struct.Reg* %13125, i32 0, i32 0
  %DX.i802 = bitcast %union.anon* %13126 to i16*
  %13127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13128 = getelementptr inbounds %struct.GPR, %struct.GPR* %13127, i32 0, i32 9
  %13129 = getelementptr inbounds %struct.Reg, %struct.Reg* %13128, i32 0, i32 0
  %RSI.i803 = bitcast %union.anon* %13129 to i64*
  %13130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13131 = getelementptr inbounds %struct.GPR, %struct.GPR* %13130, i32 0, i32 11
  %13132 = getelementptr inbounds %struct.Reg, %struct.Reg* %13131, i32 0, i32 0
  %RDI.i804 = bitcast %union.anon* %13132 to i64*
  %13133 = load i64, i64* %RSI.i803
  %13134 = load i64, i64* %RDI.i804
  %13135 = mul i64 %13134, 2
  %13136 = add i64 %13135, %13133
  %13137 = load i16, i16* %DX.i802
  %13138 = zext i16 %13137 to i64
  %13139 = load i64, i64* %PC.i801
  %13140 = add i64 %13139, 4
  store i64 %13140, i64* %PC.i801
  %13141 = inttoptr i64 %13136 to i16*
  store i16 %13137, i16* %13141
  store %struct.Memory* %loadMem_43adf5, %struct.Memory** %MEMORY
  %loadMem_43adf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13143 = getelementptr inbounds %struct.GPR, %struct.GPR* %13142, i32 0, i32 33
  %13144 = getelementptr inbounds %struct.Reg, %struct.Reg* %13143, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %13144 to i64*
  %13145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13146 = getelementptr inbounds %struct.GPR, %struct.GPR* %13145, i32 0, i32 15
  %13147 = getelementptr inbounds %struct.Reg, %struct.Reg* %13146, i32 0, i32 0
  %RBP.i800 = bitcast %union.anon* %13147 to i64*
  %13148 = load i64, i64* %RBP.i800
  %13149 = sub i64 %13148, 84
  %13150 = load i64, i64* %PC.i799
  %13151 = add i64 %13150, 4
  store i64 %13151, i64* %PC.i799
  %13152 = inttoptr i64 %13149 to i32*
  %13153 = load i32, i32* %13152
  %13154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13154, align 1
  %13155 = and i32 %13153, 255
  %13156 = call i32 @llvm.ctpop.i32(i32 %13155)
  %13157 = trunc i32 %13156 to i8
  %13158 = and i8 %13157, 1
  %13159 = xor i8 %13158, 1
  %13160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13159, i8* %13160, align 1
  %13161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13161, align 1
  %13162 = icmp eq i32 %13153, 0
  %13163 = zext i1 %13162 to i8
  %13164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13163, i8* %13164, align 1
  %13165 = lshr i32 %13153, 31
  %13166 = trunc i32 %13165 to i8
  %13167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13166, i8* %13167, align 1
  %13168 = lshr i32 %13153, 31
  %13169 = xor i32 %13165, %13168
  %13170 = add i32 %13169, %13168
  %13171 = icmp eq i32 %13170, 2
  %13172 = zext i1 %13171 to i8
  %13173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13172, i8* %13173, align 1
  store %struct.Memory* %loadMem_43adf9, %struct.Memory** %MEMORY
  %loadMem_43adfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13175 = getelementptr inbounds %struct.GPR, %struct.GPR* %13174, i32 0, i32 33
  %13176 = getelementptr inbounds %struct.Reg, %struct.Reg* %13175, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %13176 to i64*
  %13177 = load i64, i64* %PC.i798
  %13178 = add i64 %13177, 56
  %13179 = load i64, i64* %PC.i798
  %13180 = add i64 %13179, 6
  %13181 = load i64, i64* %PC.i798
  %13182 = add i64 %13181, 6
  store i64 %13182, i64* %PC.i798
  %13183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13184 = load i8, i8* %13183, align 1
  store i8 %13184, i8* %BRANCH_TAKEN, align 1
  %13185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13186 = icmp ne i8 %13184, 0
  %13187 = select i1 %13186, i64 %13178, i64 %13180
  store i64 %13187, i64* %13185, align 8
  store %struct.Memory* %loadMem_43adfd, %struct.Memory** %MEMORY
  %loadBr_43adfd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43adfd = icmp eq i8 %loadBr_43adfd, 1
  br i1 %cmpBr_43adfd, label %block_.L_43ae35, label %block_43ae03

block_43ae03:                                     ; preds = %block_.L_43addd
  %loadMem_43ae03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13189 = getelementptr inbounds %struct.GPR, %struct.GPR* %13188, i32 0, i32 33
  %13190 = getelementptr inbounds %struct.Reg, %struct.Reg* %13189, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %13190 to i64*
  %13191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13192 = getelementptr inbounds %struct.GPR, %struct.GPR* %13191, i32 0, i32 1
  %13193 = getelementptr inbounds %struct.Reg, %struct.Reg* %13192, i32 0, i32 0
  %RAX.i796 = bitcast %union.anon* %13193 to i64*
  %13194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13195 = getelementptr inbounds %struct.GPR, %struct.GPR* %13194, i32 0, i32 15
  %13196 = getelementptr inbounds %struct.Reg, %struct.Reg* %13195, i32 0, i32 0
  %RBP.i797 = bitcast %union.anon* %13196 to i64*
  %13197 = load i64, i64* %RBP.i797
  %13198 = sub i64 %13197, 152
  %13199 = load i64, i64* %PC.i795
  %13200 = add i64 %13199, 6
  store i64 %13200, i64* %PC.i795
  %13201 = inttoptr i64 %13198 to i32*
  %13202 = load i32, i32* %13201
  %13203 = zext i32 %13202 to i64
  store i64 %13203, i64* %RAX.i796, align 8
  store %struct.Memory* %loadMem_43ae03, %struct.Memory** %MEMORY
  %loadMem_43ae09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13205 = getelementptr inbounds %struct.GPR, %struct.GPR* %13204, i32 0, i32 33
  %13206 = getelementptr inbounds %struct.Reg, %struct.Reg* %13205, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %13206 to i64*
  %13207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13208 = getelementptr inbounds %struct.GPR, %struct.GPR* %13207, i32 0, i32 1
  %13209 = getelementptr inbounds %struct.Reg, %struct.Reg* %13208, i32 0, i32 0
  %RAX.i793 = bitcast %union.anon* %13209 to i64*
  %13210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13211 = getelementptr inbounds %struct.GPR, %struct.GPR* %13210, i32 0, i32 15
  %13212 = getelementptr inbounds %struct.Reg, %struct.Reg* %13211, i32 0, i32 0
  %RBP.i794 = bitcast %union.anon* %13212 to i64*
  %13213 = load i64, i64* %RAX.i793
  %13214 = load i64, i64* %RBP.i794
  %13215 = sub i64 %13214, 140
  %13216 = load i64, i64* %PC.i792
  %13217 = add i64 %13216, 6
  store i64 %13217, i64* %PC.i792
  %13218 = trunc i64 %13213 to i32
  %13219 = inttoptr i64 %13215 to i32*
  %13220 = load i32, i32* %13219
  %13221 = add i32 %13220, %13218
  %13222 = zext i32 %13221 to i64
  store i64 %13222, i64* %RAX.i793, align 8
  %13223 = icmp ult i32 %13221, %13218
  %13224 = icmp ult i32 %13221, %13220
  %13225 = or i1 %13223, %13224
  %13226 = zext i1 %13225 to i8
  %13227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13226, i8* %13227, align 1
  %13228 = and i32 %13221, 255
  %13229 = call i32 @llvm.ctpop.i32(i32 %13228)
  %13230 = trunc i32 %13229 to i8
  %13231 = and i8 %13230, 1
  %13232 = xor i8 %13231, 1
  %13233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13232, i8* %13233, align 1
  %13234 = xor i32 %13220, %13218
  %13235 = xor i32 %13234, %13221
  %13236 = lshr i32 %13235, 4
  %13237 = trunc i32 %13236 to i8
  %13238 = and i8 %13237, 1
  %13239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13238, i8* %13239, align 1
  %13240 = icmp eq i32 %13221, 0
  %13241 = zext i1 %13240 to i8
  %13242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13241, i8* %13242, align 1
  %13243 = lshr i32 %13221, 31
  %13244 = trunc i32 %13243 to i8
  %13245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13244, i8* %13245, align 1
  %13246 = lshr i32 %13218, 31
  %13247 = lshr i32 %13220, 31
  %13248 = xor i32 %13243, %13246
  %13249 = xor i32 %13243, %13247
  %13250 = add i32 %13248, %13249
  %13251 = icmp eq i32 %13250, 2
  %13252 = zext i1 %13251 to i8
  %13253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13252, i8* %13253, align 1
  store %struct.Memory* %loadMem_43ae09, %struct.Memory** %MEMORY
  %loadMem_43ae0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13255 = getelementptr inbounds %struct.GPR, %struct.GPR* %13254, i32 0, i32 33
  %13256 = getelementptr inbounds %struct.Reg, %struct.Reg* %13255, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %13256 to i64*
  %13257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13258 = getelementptr inbounds %struct.GPR, %struct.GPR* %13257, i32 0, i32 1
  %13259 = getelementptr inbounds %struct.Reg, %struct.Reg* %13258, i32 0, i32 0
  %RAX.i791 = bitcast %union.anon* %13259 to i64*
  %13260 = load i64, i64* %RAX.i791
  %13261 = load i64, i64* %PC.i790
  %13262 = add i64 %13261, 2
  store i64 %13262, i64* %PC.i790
  %13263 = trunc i64 %13260 to i32
  %13264 = shl i32 %13263, 1
  %13265 = icmp slt i32 %13263, 0
  %13266 = icmp slt i32 %13264, 0
  %13267 = xor i1 %13265, %13266
  %13268 = zext i32 %13264 to i64
  store i64 %13268, i64* %RAX.i791, align 8
  %13269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13270 = zext i1 %13265 to i8
  store i8 %13270, i8* %13269, align 1
  %13271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13272 = and i32 %13264, 254
  %13273 = call i32 @llvm.ctpop.i32(i32 %13272)
  %13274 = trunc i32 %13273 to i8
  %13275 = and i8 %13274, 1
  %13276 = xor i8 %13275, 1
  store i8 %13276, i8* %13271, align 1
  %13277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13277, align 1
  %13278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13279 = icmp eq i32 %13264, 0
  %13280 = zext i1 %13279 to i8
  store i8 %13280, i8* %13278, align 1
  %13281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13282 = lshr i32 %13264, 31
  %13283 = trunc i32 %13282 to i8
  store i8 %13283, i8* %13281, align 1
  %13284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13285 = zext i1 %13267 to i8
  store i8 %13285, i8* %13284, align 1
  store %struct.Memory* %loadMem_43ae0f, %struct.Memory** %MEMORY
  %loadMem_43ae12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13287 = getelementptr inbounds %struct.GPR, %struct.GPR* %13286, i32 0, i32 33
  %13288 = getelementptr inbounds %struct.Reg, %struct.Reg* %13287, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %13288 to i64*
  %13289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13290 = getelementptr inbounds %struct.GPR, %struct.GPR* %13289, i32 0, i32 1
  %13291 = getelementptr inbounds %struct.Reg, %struct.Reg* %13290, i32 0, i32 0
  %RAX.i788 = bitcast %union.anon* %13291 to i64*
  %13292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13293 = getelementptr inbounds %struct.GPR, %struct.GPR* %13292, i32 0, i32 15
  %13294 = getelementptr inbounds %struct.Reg, %struct.Reg* %13293, i32 0, i32 0
  %RBP.i789 = bitcast %union.anon* %13294 to i64*
  %13295 = load i64, i64* %RAX.i788
  %13296 = load i64, i64* %RBP.i789
  %13297 = sub i64 %13296, 140
  %13298 = load i64, i64* %PC.i787
  %13299 = add i64 %13298, 6
  store i64 %13299, i64* %PC.i787
  %13300 = trunc i64 %13295 to i32
  %13301 = inttoptr i64 %13297 to i32*
  %13302 = load i32, i32* %13301
  %13303 = add i32 %13302, %13300
  %13304 = zext i32 %13303 to i64
  store i64 %13304, i64* %RAX.i788, align 8
  %13305 = icmp ult i32 %13303, %13300
  %13306 = icmp ult i32 %13303, %13302
  %13307 = or i1 %13305, %13306
  %13308 = zext i1 %13307 to i8
  %13309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13308, i8* %13309, align 1
  %13310 = and i32 %13303, 255
  %13311 = call i32 @llvm.ctpop.i32(i32 %13310)
  %13312 = trunc i32 %13311 to i8
  %13313 = and i8 %13312, 1
  %13314 = xor i8 %13313, 1
  %13315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13314, i8* %13315, align 1
  %13316 = xor i32 %13302, %13300
  %13317 = xor i32 %13316, %13303
  %13318 = lshr i32 %13317, 4
  %13319 = trunc i32 %13318 to i8
  %13320 = and i8 %13319, 1
  %13321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13320, i8* %13321, align 1
  %13322 = icmp eq i32 %13303, 0
  %13323 = zext i1 %13322 to i8
  %13324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13323, i8* %13324, align 1
  %13325 = lshr i32 %13303, 31
  %13326 = trunc i32 %13325 to i8
  %13327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13326, i8* %13327, align 1
  %13328 = lshr i32 %13300, 31
  %13329 = lshr i32 %13302, 31
  %13330 = xor i32 %13325, %13328
  %13331 = xor i32 %13325, %13329
  %13332 = add i32 %13330, %13331
  %13333 = icmp eq i32 %13332, 2
  %13334 = zext i1 %13333 to i8
  %13335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13334, i8* %13335, align 1
  store %struct.Memory* %loadMem_43ae12, %struct.Memory** %MEMORY
  %loadMem_43ae18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13337 = getelementptr inbounds %struct.GPR, %struct.GPR* %13336, i32 0, i32 33
  %13338 = getelementptr inbounds %struct.Reg, %struct.Reg* %13337, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %13338 to i64*
  %13339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13340 = getelementptr inbounds %struct.GPR, %struct.GPR* %13339, i32 0, i32 1
  %13341 = getelementptr inbounds %struct.Reg, %struct.Reg* %13340, i32 0, i32 0
  %RAX.i785 = bitcast %union.anon* %13341 to i64*
  %13342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13343 = getelementptr inbounds %struct.GPR, %struct.GPR* %13342, i32 0, i32 15
  %13344 = getelementptr inbounds %struct.Reg, %struct.Reg* %13343, i32 0, i32 0
  %RBP.i786 = bitcast %union.anon* %13344 to i64*
  %13345 = load i64, i64* %RAX.i785
  %13346 = load i64, i64* %RBP.i786
  %13347 = sub i64 %13346, 136
  %13348 = load i64, i64* %PC.i784
  %13349 = add i64 %13348, 6
  store i64 %13349, i64* %PC.i784
  %13350 = trunc i64 %13345 to i32
  %13351 = inttoptr i64 %13347 to i32*
  %13352 = load i32, i32* %13351
  %13353 = add i32 %13352, %13350
  %13354 = zext i32 %13353 to i64
  store i64 %13354, i64* %RAX.i785, align 8
  %13355 = icmp ult i32 %13353, %13350
  %13356 = icmp ult i32 %13353, %13352
  %13357 = or i1 %13355, %13356
  %13358 = zext i1 %13357 to i8
  %13359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13358, i8* %13359, align 1
  %13360 = and i32 %13353, 255
  %13361 = call i32 @llvm.ctpop.i32(i32 %13360)
  %13362 = trunc i32 %13361 to i8
  %13363 = and i8 %13362, 1
  %13364 = xor i8 %13363, 1
  %13365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13364, i8* %13365, align 1
  %13366 = xor i32 %13352, %13350
  %13367 = xor i32 %13366, %13353
  %13368 = lshr i32 %13367, 4
  %13369 = trunc i32 %13368 to i8
  %13370 = and i8 %13369, 1
  %13371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13370, i8* %13371, align 1
  %13372 = icmp eq i32 %13353, 0
  %13373 = zext i1 %13372 to i8
  %13374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13373, i8* %13374, align 1
  %13375 = lshr i32 %13353, 31
  %13376 = trunc i32 %13375 to i8
  %13377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13376, i8* %13377, align 1
  %13378 = lshr i32 %13350, 31
  %13379 = lshr i32 %13352, 31
  %13380 = xor i32 %13375, %13378
  %13381 = xor i32 %13375, %13379
  %13382 = add i32 %13380, %13381
  %13383 = icmp eq i32 %13382, 2
  %13384 = zext i1 %13383 to i8
  %13385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13384, i8* %13385, align 1
  store %struct.Memory* %loadMem_43ae18, %struct.Memory** %MEMORY
  %loadMem_43ae1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13387 = getelementptr inbounds %struct.GPR, %struct.GPR* %13386, i32 0, i32 33
  %13388 = getelementptr inbounds %struct.Reg, %struct.Reg* %13387, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %13388 to i64*
  %13389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13390 = getelementptr inbounds %struct.GPR, %struct.GPR* %13389, i32 0, i32 1
  %13391 = getelementptr inbounds %struct.Reg, %struct.Reg* %13390, i32 0, i32 0
  %RAX.i782 = bitcast %union.anon* %13391 to i64*
  %13392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13393 = getelementptr inbounds %struct.GPR, %struct.GPR* %13392, i32 0, i32 15
  %13394 = getelementptr inbounds %struct.Reg, %struct.Reg* %13393, i32 0, i32 0
  %RBP.i783 = bitcast %union.anon* %13394 to i64*
  %13395 = load i64, i64* %RAX.i782
  %13396 = load i64, i64* %RBP.i783
  %13397 = sub i64 %13396, 144
  %13398 = load i64, i64* %PC.i781
  %13399 = add i64 %13398, 6
  store i64 %13399, i64* %PC.i781
  %13400 = trunc i64 %13395 to i32
  %13401 = inttoptr i64 %13397 to i32*
  %13402 = load i32, i32* %13401
  %13403 = add i32 %13402, %13400
  %13404 = zext i32 %13403 to i64
  store i64 %13404, i64* %RAX.i782, align 8
  %13405 = icmp ult i32 %13403, %13400
  %13406 = icmp ult i32 %13403, %13402
  %13407 = or i1 %13405, %13406
  %13408 = zext i1 %13407 to i8
  %13409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13408, i8* %13409, align 1
  %13410 = and i32 %13403, 255
  %13411 = call i32 @llvm.ctpop.i32(i32 %13410)
  %13412 = trunc i32 %13411 to i8
  %13413 = and i8 %13412, 1
  %13414 = xor i8 %13413, 1
  %13415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13414, i8* %13415, align 1
  %13416 = xor i32 %13402, %13400
  %13417 = xor i32 %13416, %13403
  %13418 = lshr i32 %13417, 4
  %13419 = trunc i32 %13418 to i8
  %13420 = and i8 %13419, 1
  %13421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13420, i8* %13421, align 1
  %13422 = icmp eq i32 %13403, 0
  %13423 = zext i1 %13422 to i8
  %13424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13423, i8* %13424, align 1
  %13425 = lshr i32 %13403, 31
  %13426 = trunc i32 %13425 to i8
  %13427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13426, i8* %13427, align 1
  %13428 = lshr i32 %13400, 31
  %13429 = lshr i32 %13402, 31
  %13430 = xor i32 %13425, %13428
  %13431 = xor i32 %13425, %13429
  %13432 = add i32 %13430, %13431
  %13433 = icmp eq i32 %13432, 2
  %13434 = zext i1 %13433 to i8
  %13435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13434, i8* %13435, align 1
  store %struct.Memory* %loadMem_43ae1e, %struct.Memory** %MEMORY
  %loadMem_43ae24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13437 = getelementptr inbounds %struct.GPR, %struct.GPR* %13436, i32 0, i32 33
  %13438 = getelementptr inbounds %struct.Reg, %struct.Reg* %13437, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %13438 to i64*
  %13439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13440 = getelementptr inbounds %struct.GPR, %struct.GPR* %13439, i32 0, i32 1
  %13441 = getelementptr inbounds %struct.Reg, %struct.Reg* %13440, i32 0, i32 0
  %RAX.i780 = bitcast %union.anon* %13441 to i64*
  %13442 = load i64, i64* %RAX.i780
  %13443 = load i64, i64* %PC.i779
  %13444 = add i64 %13443, 3
  store i64 %13444, i64* %PC.i779
  %13445 = trunc i64 %13442 to i32
  %13446 = add i32 4, %13445
  %13447 = zext i32 %13446 to i64
  store i64 %13447, i64* %RAX.i780, align 8
  %13448 = icmp ult i32 %13446, %13445
  %13449 = icmp ult i32 %13446, 4
  %13450 = or i1 %13448, %13449
  %13451 = zext i1 %13450 to i8
  %13452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13451, i8* %13452, align 1
  %13453 = and i32 %13446, 255
  %13454 = call i32 @llvm.ctpop.i32(i32 %13453)
  %13455 = trunc i32 %13454 to i8
  %13456 = and i8 %13455, 1
  %13457 = xor i8 %13456, 1
  %13458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13457, i8* %13458, align 1
  %13459 = xor i64 4, %13442
  %13460 = trunc i64 %13459 to i32
  %13461 = xor i32 %13460, %13446
  %13462 = lshr i32 %13461, 4
  %13463 = trunc i32 %13462 to i8
  %13464 = and i8 %13463, 1
  %13465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13464, i8* %13465, align 1
  %13466 = icmp eq i32 %13446, 0
  %13467 = zext i1 %13466 to i8
  %13468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13467, i8* %13468, align 1
  %13469 = lshr i32 %13446, 31
  %13470 = trunc i32 %13469 to i8
  %13471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13470, i8* %13471, align 1
  %13472 = lshr i32 %13445, 31
  %13473 = xor i32 %13469, %13472
  %13474 = add i32 %13473, %13469
  %13475 = icmp eq i32 %13474, 2
  %13476 = zext i1 %13475 to i8
  %13477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13476, i8* %13477, align 1
  store %struct.Memory* %loadMem_43ae24, %struct.Memory** %MEMORY
  %loadMem_43ae27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13479 = getelementptr inbounds %struct.GPR, %struct.GPR* %13478, i32 0, i32 33
  %13480 = getelementptr inbounds %struct.Reg, %struct.Reg* %13479, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %13480 to i64*
  %13481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13482 = getelementptr inbounds %struct.GPR, %struct.GPR* %13481, i32 0, i32 1
  %13483 = getelementptr inbounds %struct.Reg, %struct.Reg* %13482, i32 0, i32 0
  %RAX.i778 = bitcast %union.anon* %13483 to i64*
  %13484 = load i64, i64* %RAX.i778
  %13485 = load i64, i64* %PC.i777
  %13486 = add i64 %13485, 3
  store i64 %13486, i64* %PC.i777
  %13487 = shl i64 %13484, 32
  %13488 = ashr exact i64 %13487, 32
  %13489 = ashr i64 %13488, 2
  %13490 = lshr i64 %13489, 1
  %13491 = trunc i64 %13489 to i8
  %13492 = and i8 %13491, 1
  %13493 = trunc i64 %13490 to i32
  %13494 = and i64 %13490, 4294967295
  store i64 %13494, i64* %RAX.i778, align 8
  %13495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13492, i8* %13495, align 1
  %13496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13497 = and i32 %13493, 255
  %13498 = call i32 @llvm.ctpop.i32(i32 %13497)
  %13499 = trunc i32 %13498 to i8
  %13500 = and i8 %13499, 1
  %13501 = xor i8 %13500, 1
  store i8 %13501, i8* %13496, align 1
  %13502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13502, align 1
  %13503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13504 = icmp eq i32 %13493, 0
  %13505 = zext i1 %13504 to i8
  store i8 %13505, i8* %13503, align 1
  %13506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13507 = lshr i32 %13493, 31
  %13508 = trunc i32 %13507 to i8
  store i8 %13508, i8* %13506, align 1
  %13509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13509, align 1
  store %struct.Memory* %loadMem_43ae27, %struct.Memory** %MEMORY
  %loadMem_43ae2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13511 = getelementptr inbounds %struct.GPR, %struct.GPR* %13510, i32 0, i32 33
  %13512 = getelementptr inbounds %struct.Reg, %struct.Reg* %13511, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %13512 to i64*
  %13513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13514 = getelementptr inbounds %struct.GPR, %struct.GPR* %13513, i32 0, i32 1
  %13515 = getelementptr inbounds %struct.Reg, %struct.Reg* %13514, i32 0, i32 0
  %EAX.i775 = bitcast %union.anon* %13515 to i32*
  %13516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13517 = getelementptr inbounds %struct.GPR, %struct.GPR* %13516, i32 0, i32 15
  %13518 = getelementptr inbounds %struct.Reg, %struct.Reg* %13517, i32 0, i32 0
  %RBP.i776 = bitcast %union.anon* %13518 to i64*
  %13519 = load i64, i64* %RBP.i776
  %13520 = sub i64 %13519, 448
  %13521 = load i32, i32* %EAX.i775
  %13522 = zext i32 %13521 to i64
  %13523 = load i64, i64* %PC.i774
  %13524 = add i64 %13523, 6
  store i64 %13524, i64* %PC.i774
  %13525 = inttoptr i64 %13520 to i32*
  store i32 %13521, i32* %13525
  store %struct.Memory* %loadMem_43ae2a, %struct.Memory** %MEMORY
  %loadMem_43ae30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13527 = getelementptr inbounds %struct.GPR, %struct.GPR* %13526, i32 0, i32 33
  %13528 = getelementptr inbounds %struct.Reg, %struct.Reg* %13527, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %13528 to i64*
  %13529 = load i64, i64* %PC.i773
  %13530 = add i64 %13529, 17
  %13531 = load i64, i64* %PC.i773
  %13532 = add i64 %13531, 5
  store i64 %13532, i64* %PC.i773
  %13533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13530, i64* %13533, align 8
  store %struct.Memory* %loadMem_43ae30, %struct.Memory** %MEMORY
  br label %block_.L_43ae41

block_.L_43ae35:                                  ; preds = %block_.L_43addd
  %loadMem_43ae35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13535 = getelementptr inbounds %struct.GPR, %struct.GPR* %13534, i32 0, i32 33
  %13536 = getelementptr inbounds %struct.Reg, %struct.Reg* %13535, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %13536 to i64*
  %13537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13538 = getelementptr inbounds %struct.GPR, %struct.GPR* %13537, i32 0, i32 1
  %13539 = getelementptr inbounds %struct.Reg, %struct.Reg* %13538, i32 0, i32 0
  %RAX.i771 = bitcast %union.anon* %13539 to i64*
  %13540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13541 = getelementptr inbounds %struct.GPR, %struct.GPR* %13540, i32 0, i32 15
  %13542 = getelementptr inbounds %struct.Reg, %struct.Reg* %13541, i32 0, i32 0
  %RBP.i772 = bitcast %union.anon* %13542 to i64*
  %13543 = load i64, i64* %RBP.i772
  %13544 = sub i64 %13543, 140
  %13545 = load i64, i64* %PC.i770
  %13546 = add i64 %13545, 6
  store i64 %13546, i64* %PC.i770
  %13547 = inttoptr i64 %13544 to i32*
  %13548 = load i32, i32* %13547
  %13549 = zext i32 %13548 to i64
  store i64 %13549, i64* %RAX.i771, align 8
  store %struct.Memory* %loadMem_43ae35, %struct.Memory** %MEMORY
  %loadMem_43ae3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13551 = getelementptr inbounds %struct.GPR, %struct.GPR* %13550, i32 0, i32 33
  %13552 = getelementptr inbounds %struct.Reg, %struct.Reg* %13551, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %13552 to i64*
  %13553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13554 = getelementptr inbounds %struct.GPR, %struct.GPR* %13553, i32 0, i32 1
  %13555 = getelementptr inbounds %struct.Reg, %struct.Reg* %13554, i32 0, i32 0
  %EAX.i768 = bitcast %union.anon* %13555 to i32*
  %13556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13557 = getelementptr inbounds %struct.GPR, %struct.GPR* %13556, i32 0, i32 15
  %13558 = getelementptr inbounds %struct.Reg, %struct.Reg* %13557, i32 0, i32 0
  %RBP.i769 = bitcast %union.anon* %13558 to i64*
  %13559 = load i64, i64* %RBP.i769
  %13560 = sub i64 %13559, 448
  %13561 = load i32, i32* %EAX.i768
  %13562 = zext i32 %13561 to i64
  %13563 = load i64, i64* %PC.i767
  %13564 = add i64 %13563, 6
  store i64 %13564, i64* %PC.i767
  %13565 = inttoptr i64 %13560 to i32*
  store i32 %13561, i32* %13565
  store %struct.Memory* %loadMem_43ae3b, %struct.Memory** %MEMORY
  br label %block_.L_43ae41

block_.L_43ae41:                                  ; preds = %block_.L_43ae35, %block_43ae03
  %loadMem_43ae41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13567 = getelementptr inbounds %struct.GPR, %struct.GPR* %13566, i32 0, i32 33
  %13568 = getelementptr inbounds %struct.Reg, %struct.Reg* %13567, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %13568 to i64*
  %13569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13570 = getelementptr inbounds %struct.GPR, %struct.GPR* %13569, i32 0, i32 1
  %13571 = getelementptr inbounds %struct.Reg, %struct.Reg* %13570, i32 0, i32 0
  %RAX.i765 = bitcast %union.anon* %13571 to i64*
  %13572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13573 = getelementptr inbounds %struct.GPR, %struct.GPR* %13572, i32 0, i32 15
  %13574 = getelementptr inbounds %struct.Reg, %struct.Reg* %13573, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %13574 to i64*
  %13575 = load i64, i64* %RBP.i766
  %13576 = sub i64 %13575, 448
  %13577 = load i64, i64* %PC.i764
  %13578 = add i64 %13577, 6
  store i64 %13578, i64* %PC.i764
  %13579 = inttoptr i64 %13576 to i32*
  %13580 = load i32, i32* %13579
  %13581 = zext i32 %13580 to i64
  store i64 %13581, i64* %RAX.i765, align 8
  store %struct.Memory* %loadMem_43ae41, %struct.Memory** %MEMORY
  %loadMem_43ae47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13583 = getelementptr inbounds %struct.GPR, %struct.GPR* %13582, i32 0, i32 33
  %13584 = getelementptr inbounds %struct.Reg, %struct.Reg* %13583, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %13584 to i64*
  %13585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13586 = getelementptr inbounds %struct.GPR, %struct.GPR* %13585, i32 0, i32 1
  %13587 = getelementptr inbounds %struct.Reg, %struct.Reg* %13586, i32 0, i32 0
  %AX.i762 = bitcast %union.anon* %13587 to i16*
  %13588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13589 = getelementptr inbounds %struct.GPR, %struct.GPR* %13588, i32 0, i32 5
  %13590 = getelementptr inbounds %struct.Reg, %struct.Reg* %13589, i32 0, i32 0
  %CX.i763 = bitcast %union.anon* %13590 to i16*
  %13591 = load i16, i16* %AX.i762
  %13592 = zext i16 %13591 to i64
  %13593 = load i64, i64* %PC.i761
  %13594 = add i64 %13593, 3
  store i64 %13594, i64* %PC.i761
  store i16 %13591, i16* %CX.i763, align 2
  store %struct.Memory* %loadMem_43ae47, %struct.Memory** %MEMORY
  %loadMem_43ae4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13596 = getelementptr inbounds %struct.GPR, %struct.GPR* %13595, i32 0, i32 33
  %13597 = getelementptr inbounds %struct.Reg, %struct.Reg* %13596, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %13597 to i64*
  %13598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13599 = getelementptr inbounds %struct.GPR, %struct.GPR* %13598, i32 0, i32 7
  %13600 = getelementptr inbounds %struct.Reg, %struct.Reg* %13599, i32 0, i32 0
  %RDX.i759 = bitcast %union.anon* %13600 to i64*
  %13601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13602 = getelementptr inbounds %struct.GPR, %struct.GPR* %13601, i32 0, i32 15
  %13603 = getelementptr inbounds %struct.Reg, %struct.Reg* %13602, i32 0, i32 0
  %RBP.i760 = bitcast %union.anon* %13603 to i64*
  %13604 = load i64, i64* %RBP.i760
  %13605 = sub i64 %13604, 208
  %13606 = load i64, i64* %PC.i758
  %13607 = add i64 %13606, 7
  store i64 %13607, i64* %PC.i758
  %13608 = inttoptr i64 %13605 to i64*
  %13609 = load i64, i64* %13608
  store i64 %13609, i64* %RDX.i759, align 8
  store %struct.Memory* %loadMem_43ae4a, %struct.Memory** %MEMORY
  %loadMem_43ae51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13611 = getelementptr inbounds %struct.GPR, %struct.GPR* %13610, i32 0, i32 33
  %13612 = getelementptr inbounds %struct.Reg, %struct.Reg* %13611, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %13612 to i64*
  %13613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13614 = getelementptr inbounds %struct.GPR, %struct.GPR* %13613, i32 0, i32 1
  %13615 = getelementptr inbounds %struct.Reg, %struct.Reg* %13614, i32 0, i32 0
  %RAX.i756 = bitcast %union.anon* %13615 to i64*
  %13616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13617 = getelementptr inbounds %struct.GPR, %struct.GPR* %13616, i32 0, i32 15
  %13618 = getelementptr inbounds %struct.Reg, %struct.Reg* %13617, i32 0, i32 0
  %RBP.i757 = bitcast %union.anon* %13618 to i64*
  %13619 = load i64, i64* %RBP.i757
  %13620 = sub i64 %13619, 96
  %13621 = load i64, i64* %PC.i755
  %13622 = add i64 %13621, 3
  store i64 %13622, i64* %PC.i755
  %13623 = inttoptr i64 %13620 to i32*
  %13624 = load i32, i32* %13623
  %13625 = zext i32 %13624 to i64
  store i64 %13625, i64* %RAX.i756, align 8
  store %struct.Memory* %loadMem_43ae51, %struct.Memory** %MEMORY
  %loadMem_43ae54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13627 = getelementptr inbounds %struct.GPR, %struct.GPR* %13626, i32 0, i32 33
  %13628 = getelementptr inbounds %struct.Reg, %struct.Reg* %13627, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %13628 to i64*
  %13629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13630 = getelementptr inbounds %struct.GPR, %struct.GPR* %13629, i32 0, i32 1
  %13631 = getelementptr inbounds %struct.Reg, %struct.Reg* %13630, i32 0, i32 0
  %RAX.i754 = bitcast %union.anon* %13631 to i64*
  %13632 = load i64, i64* %RAX.i754
  %13633 = load i64, i64* %PC.i753
  %13634 = add i64 %13633, 2
  store i64 %13634, i64* %PC.i753
  %13635 = trunc i64 %13632 to i32
  %13636 = shl i32 %13635, 1
  %13637 = icmp slt i32 %13635, 0
  %13638 = icmp slt i32 %13636, 0
  %13639 = xor i1 %13637, %13638
  %13640 = zext i32 %13636 to i64
  store i64 %13640, i64* %RAX.i754, align 8
  %13641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13642 = zext i1 %13637 to i8
  store i8 %13642, i8* %13641, align 1
  %13643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13644 = and i32 %13636, 254
  %13645 = call i32 @llvm.ctpop.i32(i32 %13644)
  %13646 = trunc i32 %13645 to i8
  %13647 = and i8 %13646, 1
  %13648 = xor i8 %13647, 1
  store i8 %13648, i8* %13643, align 1
  %13649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13649, align 1
  %13650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13651 = icmp eq i32 %13636, 0
  %13652 = zext i1 %13651 to i8
  store i8 %13652, i8* %13650, align 1
  %13653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13654 = lshr i32 %13636, 31
  %13655 = trunc i32 %13654 to i8
  store i8 %13655, i8* %13653, align 1
  %13656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13657 = zext i1 %13639 to i8
  store i8 %13657, i8* %13656, align 1
  store %struct.Memory* %loadMem_43ae54, %struct.Memory** %MEMORY
  %loadMem_43ae57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13659 = getelementptr inbounds %struct.GPR, %struct.GPR* %13658, i32 0, i32 33
  %13660 = getelementptr inbounds %struct.Reg, %struct.Reg* %13659, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %13660 to i64*
  %13661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13662 = getelementptr inbounds %struct.GPR, %struct.GPR* %13661, i32 0, i32 1
  %13663 = getelementptr inbounds %struct.Reg, %struct.Reg* %13662, i32 0, i32 0
  %EAX.i751 = bitcast %union.anon* %13663 to i32*
  %13664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13665 = getelementptr inbounds %struct.GPR, %struct.GPR* %13664, i32 0, i32 9
  %13666 = getelementptr inbounds %struct.Reg, %struct.Reg* %13665, i32 0, i32 0
  %RSI.i752 = bitcast %union.anon* %13666 to i64*
  %13667 = load i32, i32* %EAX.i751
  %13668 = zext i32 %13667 to i64
  %13669 = load i64, i64* %PC.i750
  %13670 = add i64 %13669, 3
  store i64 %13670, i64* %PC.i750
  %13671 = shl i64 %13668, 32
  %13672 = ashr exact i64 %13671, 32
  store i64 %13672, i64* %RSI.i752, align 8
  store %struct.Memory* %loadMem_43ae57, %struct.Memory** %MEMORY
  %loadMem_43ae5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13674 = getelementptr inbounds %struct.GPR, %struct.GPR* %13673, i32 0, i32 33
  %13675 = getelementptr inbounds %struct.Reg, %struct.Reg* %13674, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %13675 to i64*
  %13676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13677 = getelementptr inbounds %struct.GPR, %struct.GPR* %13676, i32 0, i32 5
  %13678 = getelementptr inbounds %struct.Reg, %struct.Reg* %13677, i32 0, i32 0
  %CX.i747 = bitcast %union.anon* %13678 to i16*
  %13679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13680 = getelementptr inbounds %struct.GPR, %struct.GPR* %13679, i32 0, i32 7
  %13681 = getelementptr inbounds %struct.Reg, %struct.Reg* %13680, i32 0, i32 0
  %RDX.i748 = bitcast %union.anon* %13681 to i64*
  %13682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13683 = getelementptr inbounds %struct.GPR, %struct.GPR* %13682, i32 0, i32 9
  %13684 = getelementptr inbounds %struct.Reg, %struct.Reg* %13683, i32 0, i32 0
  %RSI.i749 = bitcast %union.anon* %13684 to i64*
  %13685 = load i64, i64* %RDX.i748
  %13686 = load i64, i64* %RSI.i749
  %13687 = mul i64 %13686, 2
  %13688 = add i64 %13687, %13685
  %13689 = load i16, i16* %CX.i747
  %13690 = zext i16 %13689 to i64
  %13691 = load i64, i64* %PC.i746
  %13692 = add i64 %13691, 4
  store i64 %13692, i64* %PC.i746
  %13693 = inttoptr i64 %13688 to i16*
  store i16 %13689, i16* %13693
  store %struct.Memory* %loadMem_43ae5a, %struct.Memory** %MEMORY
  %loadMem_43ae5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13695 = getelementptr inbounds %struct.GPR, %struct.GPR* %13694, i32 0, i32 33
  %13696 = getelementptr inbounds %struct.Reg, %struct.Reg* %13695, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %13696 to i64*
  %13697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13698 = getelementptr inbounds %struct.GPR, %struct.GPR* %13697, i32 0, i32 15
  %13699 = getelementptr inbounds %struct.Reg, %struct.Reg* %13698, i32 0, i32 0
  %RBP.i745 = bitcast %union.anon* %13699 to i64*
  %13700 = load i64, i64* %RBP.i745
  %13701 = sub i64 %13700, 80
  %13702 = load i64, i64* %PC.i744
  %13703 = add i64 %13702, 4
  store i64 %13703, i64* %PC.i744
  %13704 = inttoptr i64 %13701 to i32*
  %13705 = load i32, i32* %13704
  %13706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13706, align 1
  %13707 = and i32 %13705, 255
  %13708 = call i32 @llvm.ctpop.i32(i32 %13707)
  %13709 = trunc i32 %13708 to i8
  %13710 = and i8 %13709, 1
  %13711 = xor i8 %13710, 1
  %13712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13711, i8* %13712, align 1
  %13713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13713, align 1
  %13714 = icmp eq i32 %13705, 0
  %13715 = zext i1 %13714 to i8
  %13716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13715, i8* %13716, align 1
  %13717 = lshr i32 %13705, 31
  %13718 = trunc i32 %13717 to i8
  %13719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13718, i8* %13719, align 1
  %13720 = lshr i32 %13705, 31
  %13721 = xor i32 %13717, %13720
  %13722 = add i32 %13721, %13720
  %13723 = icmp eq i32 %13722, 2
  %13724 = zext i1 %13723 to i8
  %13725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13724, i8* %13725, align 1
  store %struct.Memory* %loadMem_43ae5e, %struct.Memory** %MEMORY
  %loadMem_43ae62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13727 = getelementptr inbounds %struct.GPR, %struct.GPR* %13726, i32 0, i32 33
  %13728 = getelementptr inbounds %struct.Reg, %struct.Reg* %13727, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %13728 to i64*
  %13729 = load i64, i64* %PC.i743
  %13730 = add i64 %13729, 47
  %13731 = load i64, i64* %PC.i743
  %13732 = add i64 %13731, 6
  %13733 = load i64, i64* %PC.i743
  %13734 = add i64 %13733, 6
  store i64 %13734, i64* %PC.i743
  %13735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13736 = load i8, i8* %13735, align 1
  store i8 %13736, i8* %BRANCH_TAKEN, align 1
  %13737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13738 = icmp ne i8 %13736, 0
  %13739 = select i1 %13738, i64 %13730, i64 %13732
  store i64 %13739, i64* %13737, align 8
  store %struct.Memory* %loadMem_43ae62, %struct.Memory** %MEMORY
  %loadBr_43ae62 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ae62 = icmp eq i8 %loadBr_43ae62, 1
  br i1 %cmpBr_43ae62, label %block_.L_43ae91, label %block_43ae68

block_43ae68:                                     ; preds = %block_.L_43ae41
  %loadMem_43ae68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13741 = getelementptr inbounds %struct.GPR, %struct.GPR* %13740, i32 0, i32 33
  %13742 = getelementptr inbounds %struct.Reg, %struct.Reg* %13741, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %13742 to i64*
  %13743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13744 = getelementptr inbounds %struct.GPR, %struct.GPR* %13743, i32 0, i32 1
  %13745 = getelementptr inbounds %struct.Reg, %struct.Reg* %13744, i32 0, i32 0
  %RAX.i741 = bitcast %union.anon* %13745 to i64*
  %13746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13747 = getelementptr inbounds %struct.GPR, %struct.GPR* %13746, i32 0, i32 15
  %13748 = getelementptr inbounds %struct.Reg, %struct.Reg* %13747, i32 0, i32 0
  %RBP.i742 = bitcast %union.anon* %13748 to i64*
  %13749 = load i64, i64* %RBP.i742
  %13750 = sub i64 %13749, 148
  %13751 = load i64, i64* %PC.i740
  %13752 = add i64 %13751, 6
  store i64 %13752, i64* %PC.i740
  %13753 = inttoptr i64 %13750 to i32*
  %13754 = load i32, i32* %13753
  %13755 = zext i32 %13754 to i64
  store i64 %13755, i64* %RAX.i741, align 8
  store %struct.Memory* %loadMem_43ae68, %struct.Memory** %MEMORY
  %loadMem_43ae6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13757 = getelementptr inbounds %struct.GPR, %struct.GPR* %13756, i32 0, i32 33
  %13758 = getelementptr inbounds %struct.Reg, %struct.Reg* %13757, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %13758 to i64*
  %13759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13760 = getelementptr inbounds %struct.GPR, %struct.GPR* %13759, i32 0, i32 1
  %13761 = getelementptr inbounds %struct.Reg, %struct.Reg* %13760, i32 0, i32 0
  %RAX.i738 = bitcast %union.anon* %13761 to i64*
  %13762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13763 = getelementptr inbounds %struct.GPR, %struct.GPR* %13762, i32 0, i32 15
  %13764 = getelementptr inbounds %struct.Reg, %struct.Reg* %13763, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %13764 to i64*
  %13765 = load i64, i64* %RAX.i738
  %13766 = load i64, i64* %RBP.i739
  %13767 = sub i64 %13766, 120
  %13768 = load i64, i64* %PC.i737
  %13769 = add i64 %13768, 3
  store i64 %13769, i64* %PC.i737
  %13770 = trunc i64 %13765 to i32
  %13771 = inttoptr i64 %13767 to i32*
  %13772 = load i32, i32* %13771
  %13773 = add i32 %13772, %13770
  %13774 = zext i32 %13773 to i64
  store i64 %13774, i64* %RAX.i738, align 8
  %13775 = icmp ult i32 %13773, %13770
  %13776 = icmp ult i32 %13773, %13772
  %13777 = or i1 %13775, %13776
  %13778 = zext i1 %13777 to i8
  %13779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13778, i8* %13779, align 1
  %13780 = and i32 %13773, 255
  %13781 = call i32 @llvm.ctpop.i32(i32 %13780)
  %13782 = trunc i32 %13781 to i8
  %13783 = and i8 %13782, 1
  %13784 = xor i8 %13783, 1
  %13785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13784, i8* %13785, align 1
  %13786 = xor i32 %13772, %13770
  %13787 = xor i32 %13786, %13773
  %13788 = lshr i32 %13787, 4
  %13789 = trunc i32 %13788 to i8
  %13790 = and i8 %13789, 1
  %13791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13790, i8* %13791, align 1
  %13792 = icmp eq i32 %13773, 0
  %13793 = zext i1 %13792 to i8
  %13794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13793, i8* %13794, align 1
  %13795 = lshr i32 %13773, 31
  %13796 = trunc i32 %13795 to i8
  %13797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13796, i8* %13797, align 1
  %13798 = lshr i32 %13770, 31
  %13799 = lshr i32 %13772, 31
  %13800 = xor i32 %13795, %13798
  %13801 = xor i32 %13795, %13799
  %13802 = add i32 %13800, %13801
  %13803 = icmp eq i32 %13802, 2
  %13804 = zext i1 %13803 to i8
  %13805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13804, i8* %13805, align 1
  store %struct.Memory* %loadMem_43ae6e, %struct.Memory** %MEMORY
  %loadMem_43ae71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13807 = getelementptr inbounds %struct.GPR, %struct.GPR* %13806, i32 0, i32 33
  %13808 = getelementptr inbounds %struct.Reg, %struct.Reg* %13807, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %13808 to i64*
  %13809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13810 = getelementptr inbounds %struct.GPR, %struct.GPR* %13809, i32 0, i32 1
  %13811 = getelementptr inbounds %struct.Reg, %struct.Reg* %13810, i32 0, i32 0
  %RAX.i736 = bitcast %union.anon* %13811 to i64*
  %13812 = load i64, i64* %RAX.i736
  %13813 = load i64, i64* %PC.i735
  %13814 = add i64 %13813, 2
  store i64 %13814, i64* %PC.i735
  %13815 = trunc i64 %13812 to i32
  %13816 = shl i32 %13815, 1
  %13817 = icmp slt i32 %13815, 0
  %13818 = icmp slt i32 %13816, 0
  %13819 = xor i1 %13817, %13818
  %13820 = zext i32 %13816 to i64
  store i64 %13820, i64* %RAX.i736, align 8
  %13821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13822 = zext i1 %13817 to i8
  store i8 %13822, i8* %13821, align 1
  %13823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13824 = and i32 %13816, 254
  %13825 = call i32 @llvm.ctpop.i32(i32 %13824)
  %13826 = trunc i32 %13825 to i8
  %13827 = and i8 %13826, 1
  %13828 = xor i8 %13827, 1
  store i8 %13828, i8* %13823, align 1
  %13829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13829, align 1
  %13830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13831 = icmp eq i32 %13816, 0
  %13832 = zext i1 %13831 to i8
  store i8 %13832, i8* %13830, align 1
  %13833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13834 = lshr i32 %13816, 31
  %13835 = trunc i32 %13834 to i8
  store i8 %13835, i8* %13833, align 1
  %13836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13837 = zext i1 %13819 to i8
  store i8 %13837, i8* %13836, align 1
  store %struct.Memory* %loadMem_43ae71, %struct.Memory** %MEMORY
  %loadMem_43ae74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13839 = getelementptr inbounds %struct.GPR, %struct.GPR* %13838, i32 0, i32 33
  %13840 = getelementptr inbounds %struct.Reg, %struct.Reg* %13839, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %13840 to i64*
  %13841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13842 = getelementptr inbounds %struct.GPR, %struct.GPR* %13841, i32 0, i32 1
  %13843 = getelementptr inbounds %struct.Reg, %struct.Reg* %13842, i32 0, i32 0
  %RAX.i733 = bitcast %union.anon* %13843 to i64*
  %13844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13845 = getelementptr inbounds %struct.GPR, %struct.GPR* %13844, i32 0, i32 15
  %13846 = getelementptr inbounds %struct.Reg, %struct.Reg* %13845, i32 0, i32 0
  %RBP.i734 = bitcast %union.anon* %13846 to i64*
  %13847 = load i64, i64* %RAX.i733
  %13848 = load i64, i64* %RBP.i734
  %13849 = sub i64 %13848, 120
  %13850 = load i64, i64* %PC.i732
  %13851 = add i64 %13850, 3
  store i64 %13851, i64* %PC.i732
  %13852 = trunc i64 %13847 to i32
  %13853 = inttoptr i64 %13849 to i32*
  %13854 = load i32, i32* %13853
  %13855 = add i32 %13854, %13852
  %13856 = zext i32 %13855 to i64
  store i64 %13856, i64* %RAX.i733, align 8
  %13857 = icmp ult i32 %13855, %13852
  %13858 = icmp ult i32 %13855, %13854
  %13859 = or i1 %13857, %13858
  %13860 = zext i1 %13859 to i8
  %13861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13860, i8* %13861, align 1
  %13862 = and i32 %13855, 255
  %13863 = call i32 @llvm.ctpop.i32(i32 %13862)
  %13864 = trunc i32 %13863 to i8
  %13865 = and i8 %13864, 1
  %13866 = xor i8 %13865, 1
  %13867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13866, i8* %13867, align 1
  %13868 = xor i32 %13854, %13852
  %13869 = xor i32 %13868, %13855
  %13870 = lshr i32 %13869, 4
  %13871 = trunc i32 %13870 to i8
  %13872 = and i8 %13871, 1
  %13873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13872, i8* %13873, align 1
  %13874 = icmp eq i32 %13855, 0
  %13875 = zext i1 %13874 to i8
  %13876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13875, i8* %13876, align 1
  %13877 = lshr i32 %13855, 31
  %13878 = trunc i32 %13877 to i8
  %13879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13878, i8* %13879, align 1
  %13880 = lshr i32 %13852, 31
  %13881 = lshr i32 %13854, 31
  %13882 = xor i32 %13877, %13880
  %13883 = xor i32 %13877, %13881
  %13884 = add i32 %13882, %13883
  %13885 = icmp eq i32 %13884, 2
  %13886 = zext i1 %13885 to i8
  %13887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13886, i8* %13887, align 1
  store %struct.Memory* %loadMem_43ae74, %struct.Memory** %MEMORY
  %loadMem_43ae77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13889 = getelementptr inbounds %struct.GPR, %struct.GPR* %13888, i32 0, i32 33
  %13890 = getelementptr inbounds %struct.Reg, %struct.Reg* %13889, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %13890 to i64*
  %13891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13892 = getelementptr inbounds %struct.GPR, %struct.GPR* %13891, i32 0, i32 1
  %13893 = getelementptr inbounds %struct.Reg, %struct.Reg* %13892, i32 0, i32 0
  %RAX.i730 = bitcast %union.anon* %13893 to i64*
  %13894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13895 = getelementptr inbounds %struct.GPR, %struct.GPR* %13894, i32 0, i32 15
  %13896 = getelementptr inbounds %struct.Reg, %struct.Reg* %13895, i32 0, i32 0
  %RBP.i731 = bitcast %union.anon* %13896 to i64*
  %13897 = load i64, i64* %RAX.i730
  %13898 = load i64, i64* %RBP.i731
  %13899 = sub i64 %13898, 124
  %13900 = load i64, i64* %PC.i729
  %13901 = add i64 %13900, 3
  store i64 %13901, i64* %PC.i729
  %13902 = trunc i64 %13897 to i32
  %13903 = inttoptr i64 %13899 to i32*
  %13904 = load i32, i32* %13903
  %13905 = add i32 %13904, %13902
  %13906 = zext i32 %13905 to i64
  store i64 %13906, i64* %RAX.i730, align 8
  %13907 = icmp ult i32 %13905, %13902
  %13908 = icmp ult i32 %13905, %13904
  %13909 = or i1 %13907, %13908
  %13910 = zext i1 %13909 to i8
  %13911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13910, i8* %13911, align 1
  %13912 = and i32 %13905, 255
  %13913 = call i32 @llvm.ctpop.i32(i32 %13912)
  %13914 = trunc i32 %13913 to i8
  %13915 = and i8 %13914, 1
  %13916 = xor i8 %13915, 1
  %13917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13916, i8* %13917, align 1
  %13918 = xor i32 %13904, %13902
  %13919 = xor i32 %13918, %13905
  %13920 = lshr i32 %13919, 4
  %13921 = trunc i32 %13920 to i8
  %13922 = and i8 %13921, 1
  %13923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13922, i8* %13923, align 1
  %13924 = icmp eq i32 %13905, 0
  %13925 = zext i1 %13924 to i8
  %13926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13925, i8* %13926, align 1
  %13927 = lshr i32 %13905, 31
  %13928 = trunc i32 %13927 to i8
  %13929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13928, i8* %13929, align 1
  %13930 = lshr i32 %13902, 31
  %13931 = lshr i32 %13904, 31
  %13932 = xor i32 %13927, %13930
  %13933 = xor i32 %13927, %13931
  %13934 = add i32 %13932, %13933
  %13935 = icmp eq i32 %13934, 2
  %13936 = zext i1 %13935 to i8
  %13937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13936, i8* %13937, align 1
  store %struct.Memory* %loadMem_43ae77, %struct.Memory** %MEMORY
  %loadMem_43ae7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13939 = getelementptr inbounds %struct.GPR, %struct.GPR* %13938, i32 0, i32 33
  %13940 = getelementptr inbounds %struct.Reg, %struct.Reg* %13939, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %13940 to i64*
  %13941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13942 = getelementptr inbounds %struct.GPR, %struct.GPR* %13941, i32 0, i32 1
  %13943 = getelementptr inbounds %struct.Reg, %struct.Reg* %13942, i32 0, i32 0
  %RAX.i727 = bitcast %union.anon* %13943 to i64*
  %13944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13945 = getelementptr inbounds %struct.GPR, %struct.GPR* %13944, i32 0, i32 15
  %13946 = getelementptr inbounds %struct.Reg, %struct.Reg* %13945, i32 0, i32 0
  %RBP.i728 = bitcast %union.anon* %13946 to i64*
  %13947 = load i64, i64* %RAX.i727
  %13948 = load i64, i64* %RBP.i728
  %13949 = sub i64 %13948, 144
  %13950 = load i64, i64* %PC.i726
  %13951 = add i64 %13950, 6
  store i64 %13951, i64* %PC.i726
  %13952 = trunc i64 %13947 to i32
  %13953 = inttoptr i64 %13949 to i32*
  %13954 = load i32, i32* %13953
  %13955 = add i32 %13954, %13952
  %13956 = zext i32 %13955 to i64
  store i64 %13956, i64* %RAX.i727, align 8
  %13957 = icmp ult i32 %13955, %13952
  %13958 = icmp ult i32 %13955, %13954
  %13959 = or i1 %13957, %13958
  %13960 = zext i1 %13959 to i8
  %13961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13960, i8* %13961, align 1
  %13962 = and i32 %13955, 255
  %13963 = call i32 @llvm.ctpop.i32(i32 %13962)
  %13964 = trunc i32 %13963 to i8
  %13965 = and i8 %13964, 1
  %13966 = xor i8 %13965, 1
  %13967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13966, i8* %13967, align 1
  %13968 = xor i32 %13954, %13952
  %13969 = xor i32 %13968, %13955
  %13970 = lshr i32 %13969, 4
  %13971 = trunc i32 %13970 to i8
  %13972 = and i8 %13971, 1
  %13973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13972, i8* %13973, align 1
  %13974 = icmp eq i32 %13955, 0
  %13975 = zext i1 %13974 to i8
  %13976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13975, i8* %13976, align 1
  %13977 = lshr i32 %13955, 31
  %13978 = trunc i32 %13977 to i8
  %13979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13978, i8* %13979, align 1
  %13980 = lshr i32 %13952, 31
  %13981 = lshr i32 %13954, 31
  %13982 = xor i32 %13977, %13980
  %13983 = xor i32 %13977, %13981
  %13984 = add i32 %13982, %13983
  %13985 = icmp eq i32 %13984, 2
  %13986 = zext i1 %13985 to i8
  %13987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13986, i8* %13987, align 1
  store %struct.Memory* %loadMem_43ae7a, %struct.Memory** %MEMORY
  %loadMem_43ae80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13989 = getelementptr inbounds %struct.GPR, %struct.GPR* %13988, i32 0, i32 33
  %13990 = getelementptr inbounds %struct.Reg, %struct.Reg* %13989, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %13990 to i64*
  %13991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13992 = getelementptr inbounds %struct.GPR, %struct.GPR* %13991, i32 0, i32 1
  %13993 = getelementptr inbounds %struct.Reg, %struct.Reg* %13992, i32 0, i32 0
  %RAX.i725 = bitcast %union.anon* %13993 to i64*
  %13994 = load i64, i64* %RAX.i725
  %13995 = load i64, i64* %PC.i724
  %13996 = add i64 %13995, 3
  store i64 %13996, i64* %PC.i724
  %13997 = trunc i64 %13994 to i32
  %13998 = add i32 4, %13997
  %13999 = zext i32 %13998 to i64
  store i64 %13999, i64* %RAX.i725, align 8
  %14000 = icmp ult i32 %13998, %13997
  %14001 = icmp ult i32 %13998, 4
  %14002 = or i1 %14000, %14001
  %14003 = zext i1 %14002 to i8
  %14004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14003, i8* %14004, align 1
  %14005 = and i32 %13998, 255
  %14006 = call i32 @llvm.ctpop.i32(i32 %14005)
  %14007 = trunc i32 %14006 to i8
  %14008 = and i8 %14007, 1
  %14009 = xor i8 %14008, 1
  %14010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14009, i8* %14010, align 1
  %14011 = xor i64 4, %13994
  %14012 = trunc i64 %14011 to i32
  %14013 = xor i32 %14012, %13998
  %14014 = lshr i32 %14013, 4
  %14015 = trunc i32 %14014 to i8
  %14016 = and i8 %14015, 1
  %14017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14016, i8* %14017, align 1
  %14018 = icmp eq i32 %13998, 0
  %14019 = zext i1 %14018 to i8
  %14020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14019, i8* %14020, align 1
  %14021 = lshr i32 %13998, 31
  %14022 = trunc i32 %14021 to i8
  %14023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14022, i8* %14023, align 1
  %14024 = lshr i32 %13997, 31
  %14025 = xor i32 %14021, %14024
  %14026 = add i32 %14025, %14021
  %14027 = icmp eq i32 %14026, 2
  %14028 = zext i1 %14027 to i8
  %14029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14028, i8* %14029, align 1
  store %struct.Memory* %loadMem_43ae80, %struct.Memory** %MEMORY
  %loadMem_43ae83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14031 = getelementptr inbounds %struct.GPR, %struct.GPR* %14030, i32 0, i32 33
  %14032 = getelementptr inbounds %struct.Reg, %struct.Reg* %14031, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %14032 to i64*
  %14033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14034 = getelementptr inbounds %struct.GPR, %struct.GPR* %14033, i32 0, i32 1
  %14035 = getelementptr inbounds %struct.Reg, %struct.Reg* %14034, i32 0, i32 0
  %RAX.i723 = bitcast %union.anon* %14035 to i64*
  %14036 = load i64, i64* %RAX.i723
  %14037 = load i64, i64* %PC.i722
  %14038 = add i64 %14037, 3
  store i64 %14038, i64* %PC.i722
  %14039 = shl i64 %14036, 32
  %14040 = ashr exact i64 %14039, 32
  %14041 = ashr i64 %14040, 2
  %14042 = lshr i64 %14041, 1
  %14043 = trunc i64 %14041 to i8
  %14044 = and i8 %14043, 1
  %14045 = trunc i64 %14042 to i32
  %14046 = and i64 %14042, 4294967295
  store i64 %14046, i64* %RAX.i723, align 8
  %14047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14044, i8* %14047, align 1
  %14048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14049 = and i32 %14045, 255
  %14050 = call i32 @llvm.ctpop.i32(i32 %14049)
  %14051 = trunc i32 %14050 to i8
  %14052 = and i8 %14051, 1
  %14053 = xor i8 %14052, 1
  store i8 %14053, i8* %14048, align 1
  %14054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14054, align 1
  %14055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14056 = icmp eq i32 %14045, 0
  %14057 = zext i1 %14056 to i8
  store i8 %14057, i8* %14055, align 1
  %14058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14059 = lshr i32 %14045, 31
  %14060 = trunc i32 %14059 to i8
  store i8 %14060, i8* %14058, align 1
  %14061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14061, align 1
  store %struct.Memory* %loadMem_43ae83, %struct.Memory** %MEMORY
  %loadMem_43ae86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14063 = getelementptr inbounds %struct.GPR, %struct.GPR* %14062, i32 0, i32 33
  %14064 = getelementptr inbounds %struct.Reg, %struct.Reg* %14063, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %14064 to i64*
  %14065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14066 = getelementptr inbounds %struct.GPR, %struct.GPR* %14065, i32 0, i32 1
  %14067 = getelementptr inbounds %struct.Reg, %struct.Reg* %14066, i32 0, i32 0
  %EAX.i720 = bitcast %union.anon* %14067 to i32*
  %14068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14069 = getelementptr inbounds %struct.GPR, %struct.GPR* %14068, i32 0, i32 15
  %14070 = getelementptr inbounds %struct.Reg, %struct.Reg* %14069, i32 0, i32 0
  %RBP.i721 = bitcast %union.anon* %14070 to i64*
  %14071 = load i64, i64* %RBP.i721
  %14072 = sub i64 %14071, 452
  %14073 = load i32, i32* %EAX.i720
  %14074 = zext i32 %14073 to i64
  %14075 = load i64, i64* %PC.i719
  %14076 = add i64 %14075, 6
  store i64 %14076, i64* %PC.i719
  %14077 = inttoptr i64 %14072 to i32*
  store i32 %14073, i32* %14077
  store %struct.Memory* %loadMem_43ae86, %struct.Memory** %MEMORY
  %loadMem_43ae8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14079 = getelementptr inbounds %struct.GPR, %struct.GPR* %14078, i32 0, i32 33
  %14080 = getelementptr inbounds %struct.Reg, %struct.Reg* %14079, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %14080 to i64*
  %14081 = load i64, i64* %PC.i718
  %14082 = add i64 %14081, 14
  %14083 = load i64, i64* %PC.i718
  %14084 = add i64 %14083, 5
  store i64 %14084, i64* %PC.i718
  %14085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14082, i64* %14085, align 8
  store %struct.Memory* %loadMem_43ae8c, %struct.Memory** %MEMORY
  br label %block_.L_43ae9a

block_.L_43ae91:                                  ; preds = %block_.L_43ae41
  %loadMem_43ae91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14087 = getelementptr inbounds %struct.GPR, %struct.GPR* %14086, i32 0, i32 33
  %14088 = getelementptr inbounds %struct.Reg, %struct.Reg* %14087, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %14088 to i64*
  %14089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14090 = getelementptr inbounds %struct.GPR, %struct.GPR* %14089, i32 0, i32 1
  %14091 = getelementptr inbounds %struct.Reg, %struct.Reg* %14090, i32 0, i32 0
  %RAX.i716 = bitcast %union.anon* %14091 to i64*
  %14092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14093 = getelementptr inbounds %struct.GPR, %struct.GPR* %14092, i32 0, i32 15
  %14094 = getelementptr inbounds %struct.Reg, %struct.Reg* %14093, i32 0, i32 0
  %RBP.i717 = bitcast %union.anon* %14094 to i64*
  %14095 = load i64, i64* %RBP.i717
  %14096 = sub i64 %14095, 120
  %14097 = load i64, i64* %PC.i715
  %14098 = add i64 %14097, 3
  store i64 %14098, i64* %PC.i715
  %14099 = inttoptr i64 %14096 to i32*
  %14100 = load i32, i32* %14099
  %14101 = zext i32 %14100 to i64
  store i64 %14101, i64* %RAX.i716, align 8
  store %struct.Memory* %loadMem_43ae91, %struct.Memory** %MEMORY
  %loadMem_43ae94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14103 = getelementptr inbounds %struct.GPR, %struct.GPR* %14102, i32 0, i32 33
  %14104 = getelementptr inbounds %struct.Reg, %struct.Reg* %14103, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %14104 to i64*
  %14105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14106 = getelementptr inbounds %struct.GPR, %struct.GPR* %14105, i32 0, i32 1
  %14107 = getelementptr inbounds %struct.Reg, %struct.Reg* %14106, i32 0, i32 0
  %EAX.i713 = bitcast %union.anon* %14107 to i32*
  %14108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14109 = getelementptr inbounds %struct.GPR, %struct.GPR* %14108, i32 0, i32 15
  %14110 = getelementptr inbounds %struct.Reg, %struct.Reg* %14109, i32 0, i32 0
  %RBP.i714 = bitcast %union.anon* %14110 to i64*
  %14111 = load i64, i64* %RBP.i714
  %14112 = sub i64 %14111, 452
  %14113 = load i32, i32* %EAX.i713
  %14114 = zext i32 %14113 to i64
  %14115 = load i64, i64* %PC.i712
  %14116 = add i64 %14115, 6
  store i64 %14116, i64* %PC.i712
  %14117 = inttoptr i64 %14112 to i32*
  store i32 %14113, i32* %14117
  store %struct.Memory* %loadMem_43ae94, %struct.Memory** %MEMORY
  br label %block_.L_43ae9a

block_.L_43ae9a:                                  ; preds = %block_.L_43ae91, %block_43ae68
  %loadMem_43ae9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14119 = getelementptr inbounds %struct.GPR, %struct.GPR* %14118, i32 0, i32 33
  %14120 = getelementptr inbounds %struct.Reg, %struct.Reg* %14119, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %14120 to i64*
  %14121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14122 = getelementptr inbounds %struct.GPR, %struct.GPR* %14121, i32 0, i32 1
  %14123 = getelementptr inbounds %struct.Reg, %struct.Reg* %14122, i32 0, i32 0
  %RAX.i710 = bitcast %union.anon* %14123 to i64*
  %14124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14125 = getelementptr inbounds %struct.GPR, %struct.GPR* %14124, i32 0, i32 15
  %14126 = getelementptr inbounds %struct.Reg, %struct.Reg* %14125, i32 0, i32 0
  %RBP.i711 = bitcast %union.anon* %14126 to i64*
  %14127 = load i64, i64* %RBP.i711
  %14128 = sub i64 %14127, 452
  %14129 = load i64, i64* %PC.i709
  %14130 = add i64 %14129, 6
  store i64 %14130, i64* %PC.i709
  %14131 = inttoptr i64 %14128 to i32*
  %14132 = load i32, i32* %14131
  %14133 = zext i32 %14132 to i64
  store i64 %14133, i64* %RAX.i710, align 8
  store %struct.Memory* %loadMem_43ae9a, %struct.Memory** %MEMORY
  %loadMem_43aea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14135 = getelementptr inbounds %struct.GPR, %struct.GPR* %14134, i32 0, i32 33
  %14136 = getelementptr inbounds %struct.Reg, %struct.Reg* %14135, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %14136 to i64*
  %14137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14138 = getelementptr inbounds %struct.GPR, %struct.GPR* %14137, i32 0, i32 5
  %14139 = getelementptr inbounds %struct.Reg, %struct.Reg* %14138, i32 0, i32 0
  %ECX.i707 = bitcast %union.anon* %14139 to i32*
  %14140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14141 = getelementptr inbounds %struct.GPR, %struct.GPR* %14140, i32 0, i32 5
  %14142 = getelementptr inbounds %struct.Reg, %struct.Reg* %14141, i32 0, i32 0
  %RCX.i708 = bitcast %union.anon* %14142 to i64*
  %14143 = load i64, i64* %RCX.i708
  %14144 = load i32, i32* %ECX.i707
  %14145 = zext i32 %14144 to i64
  %14146 = load i64, i64* %PC.i706
  %14147 = add i64 %14146, 2
  store i64 %14147, i64* %PC.i706
  %14148 = xor i64 %14145, %14143
  %14149 = trunc i64 %14148 to i32
  %14150 = and i64 %14148, 4294967295
  store i64 %14150, i64* %RCX.i708, align 8
  %14151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14151, align 1
  %14152 = and i32 %14149, 255
  %14153 = call i32 @llvm.ctpop.i32(i32 %14152)
  %14154 = trunc i32 %14153 to i8
  %14155 = and i8 %14154, 1
  %14156 = xor i8 %14155, 1
  %14157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14156, i8* %14157, align 1
  %14158 = icmp eq i32 %14149, 0
  %14159 = zext i1 %14158 to i8
  %14160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14159, i8* %14160, align 1
  %14161 = lshr i32 %14149, 31
  %14162 = trunc i32 %14161 to i8
  %14163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14162, i8* %14163, align 1
  %14164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14164, align 1
  %14165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14165, align 1
  store %struct.Memory* %loadMem_43aea0, %struct.Memory** %MEMORY
  %loadMem_43aea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14167 = getelementptr inbounds %struct.GPR, %struct.GPR* %14166, i32 0, i32 33
  %14168 = getelementptr inbounds %struct.Reg, %struct.Reg* %14167, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %14168 to i64*
  %14169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14170 = getelementptr inbounds %struct.GPR, %struct.GPR* %14169, i32 0, i32 1
  %14171 = getelementptr inbounds %struct.Reg, %struct.Reg* %14170, i32 0, i32 0
  %AX.i704 = bitcast %union.anon* %14171 to i16*
  %14172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14173 = getelementptr inbounds %struct.GPR, %struct.GPR* %14172, i32 0, i32 7
  %14174 = getelementptr inbounds %struct.Reg, %struct.Reg* %14173, i32 0, i32 0
  %DX.i705 = bitcast %union.anon* %14174 to i16*
  %14175 = load i16, i16* %AX.i704
  %14176 = zext i16 %14175 to i64
  %14177 = load i64, i64* %PC.i703
  %14178 = add i64 %14177, 3
  store i64 %14178, i64* %PC.i703
  store i16 %14175, i16* %DX.i705, align 2
  store %struct.Memory* %loadMem_43aea2, %struct.Memory** %MEMORY
  %loadMem_43aea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14180 = getelementptr inbounds %struct.GPR, %struct.GPR* %14179, i32 0, i32 33
  %14181 = getelementptr inbounds %struct.Reg, %struct.Reg* %14180, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %14181 to i64*
  %14182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14183 = getelementptr inbounds %struct.GPR, %struct.GPR* %14182, i32 0, i32 9
  %14184 = getelementptr inbounds %struct.Reg, %struct.Reg* %14183, i32 0, i32 0
  %RSI.i701 = bitcast %union.anon* %14184 to i64*
  %14185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14186 = getelementptr inbounds %struct.GPR, %struct.GPR* %14185, i32 0, i32 15
  %14187 = getelementptr inbounds %struct.Reg, %struct.Reg* %14186, i32 0, i32 0
  %RBP.i702 = bitcast %union.anon* %14187 to i64*
  %14188 = load i64, i64* %RBP.i702
  %14189 = sub i64 %14188, 200
  %14190 = load i64, i64* %PC.i700
  %14191 = add i64 %14190, 7
  store i64 %14191, i64* %PC.i700
  %14192 = inttoptr i64 %14189 to i64*
  %14193 = load i64, i64* %14192
  store i64 %14193, i64* %RSI.i701, align 8
  store %struct.Memory* %loadMem_43aea5, %struct.Memory** %MEMORY
  %loadMem_43aeac = load %struct.Memory*, %struct.Memory** %MEMORY
  %14194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14195 = getelementptr inbounds %struct.GPR, %struct.GPR* %14194, i32 0, i32 33
  %14196 = getelementptr inbounds %struct.Reg, %struct.Reg* %14195, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %14196 to i64*
  %14197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14198 = getelementptr inbounds %struct.GPR, %struct.GPR* %14197, i32 0, i32 5
  %14199 = getelementptr inbounds %struct.Reg, %struct.Reg* %14198, i32 0, i32 0
  %RCX.i698 = bitcast %union.anon* %14199 to i64*
  %14200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14201 = getelementptr inbounds %struct.GPR, %struct.GPR* %14200, i32 0, i32 15
  %14202 = getelementptr inbounds %struct.Reg, %struct.Reg* %14201, i32 0, i32 0
  %RBP.i699 = bitcast %union.anon* %14202 to i64*
  %14203 = load i64, i64* %RCX.i698
  %14204 = load i64, i64* %RBP.i699
  %14205 = sub i64 %14204, 92
  %14206 = load i64, i64* %PC.i697
  %14207 = add i64 %14206, 3
  store i64 %14207, i64* %PC.i697
  %14208 = trunc i64 %14203 to i32
  %14209 = inttoptr i64 %14205 to i32*
  %14210 = load i32, i32* %14209
  %14211 = sub i32 %14208, %14210
  %14212 = zext i32 %14211 to i64
  store i64 %14212, i64* %RCX.i698, align 8
  %14213 = icmp ult i32 %14208, %14210
  %14214 = zext i1 %14213 to i8
  %14215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14214, i8* %14215, align 1
  %14216 = and i32 %14211, 255
  %14217 = call i32 @llvm.ctpop.i32(i32 %14216)
  %14218 = trunc i32 %14217 to i8
  %14219 = and i8 %14218, 1
  %14220 = xor i8 %14219, 1
  %14221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14220, i8* %14221, align 1
  %14222 = xor i32 %14210, %14208
  %14223 = xor i32 %14222, %14211
  %14224 = lshr i32 %14223, 4
  %14225 = trunc i32 %14224 to i8
  %14226 = and i8 %14225, 1
  %14227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14226, i8* %14227, align 1
  %14228 = icmp eq i32 %14211, 0
  %14229 = zext i1 %14228 to i8
  %14230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14229, i8* %14230, align 1
  %14231 = lshr i32 %14211, 31
  %14232 = trunc i32 %14231 to i8
  %14233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14232, i8* %14233, align 1
  %14234 = lshr i32 %14208, 31
  %14235 = lshr i32 %14210, 31
  %14236 = xor i32 %14235, %14234
  %14237 = xor i32 %14231, %14234
  %14238 = add i32 %14237, %14236
  %14239 = icmp eq i32 %14238, 2
  %14240 = zext i1 %14239 to i8
  %14241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14240, i8* %14241, align 1
  store %struct.Memory* %loadMem_43aeac, %struct.Memory** %MEMORY
  %loadMem_43aeaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %14242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14243 = getelementptr inbounds %struct.GPR, %struct.GPR* %14242, i32 0, i32 33
  %14244 = getelementptr inbounds %struct.Reg, %struct.Reg* %14243, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %14244 to i64*
  %14245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14246 = getelementptr inbounds %struct.GPR, %struct.GPR* %14245, i32 0, i32 5
  %14247 = getelementptr inbounds %struct.Reg, %struct.Reg* %14246, i32 0, i32 0
  %RCX.i696 = bitcast %union.anon* %14247 to i64*
  %14248 = load i64, i64* %RCX.i696
  %14249 = load i64, i64* %PC.i695
  %14250 = add i64 %14249, 2
  store i64 %14250, i64* %PC.i695
  %14251 = trunc i64 %14248 to i32
  %14252 = shl i32 %14251, 1
  %14253 = icmp slt i32 %14251, 0
  %14254 = icmp slt i32 %14252, 0
  %14255 = xor i1 %14253, %14254
  %14256 = zext i32 %14252 to i64
  store i64 %14256, i64* %RCX.i696, align 8
  %14257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14258 = zext i1 %14253 to i8
  store i8 %14258, i8* %14257, align 1
  %14259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14260 = and i32 %14252, 254
  %14261 = call i32 @llvm.ctpop.i32(i32 %14260)
  %14262 = trunc i32 %14261 to i8
  %14263 = and i8 %14262, 1
  %14264 = xor i8 %14263, 1
  store i8 %14264, i8* %14259, align 1
  %14265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14265, align 1
  %14266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14267 = icmp eq i32 %14252, 0
  %14268 = zext i1 %14267 to i8
  store i8 %14268, i8* %14266, align 1
  %14269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14270 = lshr i32 %14252, 31
  %14271 = trunc i32 %14270 to i8
  store i8 %14271, i8* %14269, align 1
  %14272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14273 = zext i1 %14255 to i8
  store i8 %14273, i8* %14272, align 1
  store %struct.Memory* %loadMem_43aeaf, %struct.Memory** %MEMORY
  %loadMem_43aeb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14275 = getelementptr inbounds %struct.GPR, %struct.GPR* %14274, i32 0, i32 33
  %14276 = getelementptr inbounds %struct.Reg, %struct.Reg* %14275, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %14276 to i64*
  %14277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14278 = getelementptr inbounds %struct.GPR, %struct.GPR* %14277, i32 0, i32 5
  %14279 = getelementptr inbounds %struct.Reg, %struct.Reg* %14278, i32 0, i32 0
  %ECX.i693 = bitcast %union.anon* %14279 to i32*
  %14280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14281 = getelementptr inbounds %struct.GPR, %struct.GPR* %14280, i32 0, i32 11
  %14282 = getelementptr inbounds %struct.Reg, %struct.Reg* %14281, i32 0, i32 0
  %RDI.i694 = bitcast %union.anon* %14282 to i64*
  %14283 = load i32, i32* %ECX.i693
  %14284 = zext i32 %14283 to i64
  %14285 = load i64, i64* %PC.i692
  %14286 = add i64 %14285, 3
  store i64 %14286, i64* %PC.i692
  %14287 = shl i64 %14284, 32
  %14288 = ashr exact i64 %14287, 32
  store i64 %14288, i64* %RDI.i694, align 8
  store %struct.Memory* %loadMem_43aeb2, %struct.Memory** %MEMORY
  %loadMem_43aeb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14290 = getelementptr inbounds %struct.GPR, %struct.GPR* %14289, i32 0, i32 33
  %14291 = getelementptr inbounds %struct.Reg, %struct.Reg* %14290, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %14291 to i64*
  %14292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14293 = getelementptr inbounds %struct.GPR, %struct.GPR* %14292, i32 0, i32 7
  %14294 = getelementptr inbounds %struct.Reg, %struct.Reg* %14293, i32 0, i32 0
  %DX.i = bitcast %union.anon* %14294 to i16*
  %14295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14296 = getelementptr inbounds %struct.GPR, %struct.GPR* %14295, i32 0, i32 9
  %14297 = getelementptr inbounds %struct.Reg, %struct.Reg* %14296, i32 0, i32 0
  %RSI.i691 = bitcast %union.anon* %14297 to i64*
  %14298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14299 = getelementptr inbounds %struct.GPR, %struct.GPR* %14298, i32 0, i32 11
  %14300 = getelementptr inbounds %struct.Reg, %struct.Reg* %14299, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %14300 to i64*
  %14301 = load i64, i64* %RSI.i691
  %14302 = load i64, i64* %RDI.i
  %14303 = mul i64 %14302, 2
  %14304 = add i64 %14303, %14301
  %14305 = load i16, i16* %DX.i
  %14306 = zext i16 %14305 to i64
  %14307 = load i64, i64* %PC.i690
  %14308 = add i64 %14307, 4
  store i64 %14308, i64* %PC.i690
  %14309 = inttoptr i64 %14304 to i16*
  store i16 %14305, i16* %14309
  store %struct.Memory* %loadMem_43aeb5, %struct.Memory** %MEMORY
  br label %block_.L_43aeb9

block_.L_43aeb9:                                  ; preds = %block_.L_43ae9a, %block_43ac0c
  %loadMem_43aeb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14311 = getelementptr inbounds %struct.GPR, %struct.GPR* %14310, i32 0, i32 33
  %14312 = getelementptr inbounds %struct.Reg, %struct.Reg* %14311, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %14312 to i64*
  %14313 = load i64, i64* %PC.i689
  %14314 = add i64 %14313, 1123
  %14315 = load i64, i64* %PC.i689
  %14316 = add i64 %14315, 5
  store i64 %14316, i64* %PC.i689
  %14317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14314, i64* %14317, align 8
  store %struct.Memory* %loadMem_43aeb9, %struct.Memory** %MEMORY
  br label %block_.L_43b31c

block_.L_43aebe:                                  ; preds = %block_.L_43abe9
  %loadMem_43aebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %14318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14319 = getelementptr inbounds %struct.GPR, %struct.GPR* %14318, i32 0, i32 33
  %14320 = getelementptr inbounds %struct.Reg, %struct.Reg* %14319, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %14320 to i64*
  %14321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14322 = getelementptr inbounds %struct.GPR, %struct.GPR* %14321, i32 0, i32 15
  %14323 = getelementptr inbounds %struct.Reg, %struct.Reg* %14322, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %14323 to i64*
  %14324 = load i64, i64* %RBP.i688
  %14325 = sub i64 %14324, 68
  %14326 = load i64, i64* %PC.i687
  %14327 = add i64 %14326, 4
  store i64 %14327, i64* %PC.i687
  %14328 = inttoptr i64 %14325 to i32*
  %14329 = load i32, i32* %14328
  %14330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14330, align 1
  %14331 = and i32 %14329, 255
  %14332 = call i32 @llvm.ctpop.i32(i32 %14331)
  %14333 = trunc i32 %14332 to i8
  %14334 = and i8 %14333, 1
  %14335 = xor i8 %14334, 1
  %14336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14335, i8* %14336, align 1
  %14337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14337, align 1
  %14338 = icmp eq i32 %14329, 0
  %14339 = zext i1 %14338 to i8
  %14340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14339, i8* %14340, align 1
  %14341 = lshr i32 %14329, 31
  %14342 = trunc i32 %14341 to i8
  %14343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14342, i8* %14343, align 1
  %14344 = lshr i32 %14329, 31
  %14345 = xor i32 %14341, %14344
  %14346 = add i32 %14345, %14344
  %14347 = icmp eq i32 %14346, 2
  %14348 = zext i1 %14347 to i8
  %14349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14348, i8* %14349, align 1
  store %struct.Memory* %loadMem_43aebe, %struct.Memory** %MEMORY
  %loadMem_43aec2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14351 = getelementptr inbounds %struct.GPR, %struct.GPR* %14350, i32 0, i32 33
  %14352 = getelementptr inbounds %struct.Reg, %struct.Reg* %14351, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %14352 to i64*
  %14353 = load i64, i64* %PC.i686
  %14354 = add i64 %14353, 23
  %14355 = load i64, i64* %PC.i686
  %14356 = add i64 %14355, 6
  %14357 = load i64, i64* %PC.i686
  %14358 = add i64 %14357, 6
  store i64 %14358, i64* %PC.i686
  %14359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14360 = load i8, i8* %14359, align 1
  store i8 %14360, i8* %BRANCH_TAKEN, align 1
  %14361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14362 = icmp ne i8 %14360, 0
  %14363 = select i1 %14362, i64 %14354, i64 %14356
  store i64 %14363, i64* %14361, align 8
  store %struct.Memory* %loadMem_43aec2, %struct.Memory** %MEMORY
  %loadBr_43aec2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aec2 = icmp eq i8 %loadBr_43aec2, 1
  br i1 %cmpBr_43aec2, label %block_.L_43aed9, label %block_43aec8

block_43aec8:                                     ; preds = %block_.L_43aebe
  %loadMem_43aec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14365 = getelementptr inbounds %struct.GPR, %struct.GPR* %14364, i32 0, i32 33
  %14366 = getelementptr inbounds %struct.Reg, %struct.Reg* %14365, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %14366 to i64*
  %14367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14368 = getelementptr inbounds %struct.GPR, %struct.GPR* %14367, i32 0, i32 1
  %14369 = getelementptr inbounds %struct.Reg, %struct.Reg* %14368, i32 0, i32 0
  %RAX.i684 = bitcast %union.anon* %14369 to i64*
  %14370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14371 = getelementptr inbounds %struct.GPR, %struct.GPR* %14370, i32 0, i32 15
  %14372 = getelementptr inbounds %struct.Reg, %struct.Reg* %14371, i32 0, i32 0
  %RBP.i685 = bitcast %union.anon* %14372 to i64*
  %14373 = load i64, i64* %RBP.i685
  %14374 = sub i64 %14373, 100
  %14375 = load i64, i64* %PC.i683
  %14376 = add i64 %14375, 3
  store i64 %14376, i64* %PC.i683
  %14377 = inttoptr i64 %14374 to i32*
  %14378 = load i32, i32* %14377
  %14379 = zext i32 %14378 to i64
  store i64 %14379, i64* %RAX.i684, align 8
  store %struct.Memory* %loadMem_43aec8, %struct.Memory** %MEMORY
  %loadMem_43aecb = load %struct.Memory*, %struct.Memory** %MEMORY
  %14380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14381 = getelementptr inbounds %struct.GPR, %struct.GPR* %14380, i32 0, i32 33
  %14382 = getelementptr inbounds %struct.Reg, %struct.Reg* %14381, i32 0, i32 0
  %PC.i681 = bitcast %union.anon* %14382 to i64*
  %14383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14384 = getelementptr inbounds %struct.GPR, %struct.GPR* %14383, i32 0, i32 1
  %14385 = getelementptr inbounds %struct.Reg, %struct.Reg* %14384, i32 0, i32 0
  %RAX.i682 = bitcast %union.anon* %14385 to i64*
  %14386 = load i64, i64* %RAX.i682
  %14387 = load i64, i64* %PC.i681
  %14388 = add i64 %14387, 3
  store i64 %14388, i64* %PC.i681
  %14389 = trunc i64 %14386 to i32
  %14390 = add i32 1, %14389
  %14391 = zext i32 %14390 to i64
  store i64 %14391, i64* %RAX.i682, align 8
  %14392 = icmp ult i32 %14390, %14389
  %14393 = icmp ult i32 %14390, 1
  %14394 = or i1 %14392, %14393
  %14395 = zext i1 %14394 to i8
  %14396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14395, i8* %14396, align 1
  %14397 = and i32 %14390, 255
  %14398 = call i32 @llvm.ctpop.i32(i32 %14397)
  %14399 = trunc i32 %14398 to i8
  %14400 = and i8 %14399, 1
  %14401 = xor i8 %14400, 1
  %14402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14401, i8* %14402, align 1
  %14403 = xor i64 1, %14386
  %14404 = trunc i64 %14403 to i32
  %14405 = xor i32 %14404, %14390
  %14406 = lshr i32 %14405, 4
  %14407 = trunc i32 %14406 to i8
  %14408 = and i8 %14407, 1
  %14409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14408, i8* %14409, align 1
  %14410 = icmp eq i32 %14390, 0
  %14411 = zext i1 %14410 to i8
  %14412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14411, i8* %14412, align 1
  %14413 = lshr i32 %14390, 31
  %14414 = trunc i32 %14413 to i8
  %14415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14414, i8* %14415, align 1
  %14416 = lshr i32 %14389, 31
  %14417 = xor i32 %14413, %14416
  %14418 = add i32 %14417, %14413
  %14419 = icmp eq i32 %14418, 2
  %14420 = zext i1 %14419 to i8
  %14421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14420, i8* %14421, align 1
  store %struct.Memory* %loadMem_43aecb, %struct.Memory** %MEMORY
  %loadMem_43aece = load %struct.Memory*, %struct.Memory** %MEMORY
  %14422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14423 = getelementptr inbounds %struct.GPR, %struct.GPR* %14422, i32 0, i32 33
  %14424 = getelementptr inbounds %struct.Reg, %struct.Reg* %14423, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %14424 to i64*
  %14425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14426 = getelementptr inbounds %struct.GPR, %struct.GPR* %14425, i32 0, i32 1
  %14427 = getelementptr inbounds %struct.Reg, %struct.Reg* %14426, i32 0, i32 0
  %EAX.i679 = bitcast %union.anon* %14427 to i32*
  %14428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14429 = getelementptr inbounds %struct.GPR, %struct.GPR* %14428, i32 0, i32 15
  %14430 = getelementptr inbounds %struct.Reg, %struct.Reg* %14429, i32 0, i32 0
  %RBP.i680 = bitcast %union.anon* %14430 to i64*
  %14431 = load i64, i64* %RBP.i680
  %14432 = sub i64 %14431, 456
  %14433 = load i32, i32* %EAX.i679
  %14434 = zext i32 %14433 to i64
  %14435 = load i64, i64* %PC.i678
  %14436 = add i64 %14435, 6
  store i64 %14436, i64* %PC.i678
  %14437 = inttoptr i64 %14432 to i32*
  store i32 %14433, i32* %14437
  store %struct.Memory* %loadMem_43aece, %struct.Memory** %MEMORY
  %loadMem_43aed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14439 = getelementptr inbounds %struct.GPR, %struct.GPR* %14438, i32 0, i32 33
  %14440 = getelementptr inbounds %struct.Reg, %struct.Reg* %14439, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %14440 to i64*
  %14441 = load i64, i64* %PC.i677
  %14442 = add i64 %14441, 20
  %14443 = load i64, i64* %PC.i677
  %14444 = add i64 %14443, 5
  store i64 %14444, i64* %PC.i677
  %14445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14442, i64* %14445, align 8
  store %struct.Memory* %loadMem_43aed4, %struct.Memory** %MEMORY
  br label %block_.L_43aee8

block_.L_43aed9:                                  ; preds = %block_.L_43aebe
  %loadMem_43aed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14447 = getelementptr inbounds %struct.GPR, %struct.GPR* %14446, i32 0, i32 33
  %14448 = getelementptr inbounds %struct.Reg, %struct.Reg* %14447, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %14448 to i64*
  %14449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14450 = getelementptr inbounds %struct.GPR, %struct.GPR* %14449, i32 0, i32 1
  %14451 = getelementptr inbounds %struct.Reg, %struct.Reg* %14450, i32 0, i32 0
  %RAX.i675 = bitcast %union.anon* %14451 to i64*
  %14452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14453 = getelementptr inbounds %struct.GPR, %struct.GPR* %14452, i32 0, i32 15
  %14454 = getelementptr inbounds %struct.Reg, %struct.Reg* %14453, i32 0, i32 0
  %RBP.i676 = bitcast %union.anon* %14454 to i64*
  %14455 = load i64, i64* %RBP.i676
  %14456 = sub i64 %14455, 100
  %14457 = load i64, i64* %PC.i674
  %14458 = add i64 %14457, 3
  store i64 %14458, i64* %PC.i674
  %14459 = inttoptr i64 %14456 to i32*
  %14460 = load i32, i32* %14459
  %14461 = zext i32 %14460 to i64
  store i64 %14461, i64* %RAX.i675, align 8
  store %struct.Memory* %loadMem_43aed9, %struct.Memory** %MEMORY
  %loadMem_43aedc = load %struct.Memory*, %struct.Memory** %MEMORY
  %14462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14463 = getelementptr inbounds %struct.GPR, %struct.GPR* %14462, i32 0, i32 33
  %14464 = getelementptr inbounds %struct.Reg, %struct.Reg* %14463, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %14464 to i64*
  %14465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14466 = getelementptr inbounds %struct.GPR, %struct.GPR* %14465, i32 0, i32 1
  %14467 = getelementptr inbounds %struct.Reg, %struct.Reg* %14466, i32 0, i32 0
  %RAX.i672 = bitcast %union.anon* %14467 to i64*
  %14468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14469 = getelementptr inbounds %struct.GPR, %struct.GPR* %14468, i32 0, i32 15
  %14470 = getelementptr inbounds %struct.Reg, %struct.Reg* %14469, i32 0, i32 0
  %RBP.i673 = bitcast %union.anon* %14470 to i64*
  %14471 = load i64, i64* %RAX.i672
  %14472 = load i64, i64* %RBP.i673
  %14473 = sub i64 %14472, 80
  %14474 = load i64, i64* %PC.i671
  %14475 = add i64 %14474, 3
  store i64 %14475, i64* %PC.i671
  %14476 = trunc i64 %14471 to i32
  %14477 = inttoptr i64 %14473 to i32*
  %14478 = load i32, i32* %14477
  %14479 = add i32 %14478, %14476
  %14480 = zext i32 %14479 to i64
  store i64 %14480, i64* %RAX.i672, align 8
  %14481 = icmp ult i32 %14479, %14476
  %14482 = icmp ult i32 %14479, %14478
  %14483 = or i1 %14481, %14482
  %14484 = zext i1 %14483 to i8
  %14485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14484, i8* %14485, align 1
  %14486 = and i32 %14479, 255
  %14487 = call i32 @llvm.ctpop.i32(i32 %14486)
  %14488 = trunc i32 %14487 to i8
  %14489 = and i8 %14488, 1
  %14490 = xor i8 %14489, 1
  %14491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14490, i8* %14491, align 1
  %14492 = xor i32 %14478, %14476
  %14493 = xor i32 %14492, %14479
  %14494 = lshr i32 %14493, 4
  %14495 = trunc i32 %14494 to i8
  %14496 = and i8 %14495, 1
  %14497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14496, i8* %14497, align 1
  %14498 = icmp eq i32 %14479, 0
  %14499 = zext i1 %14498 to i8
  %14500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14499, i8* %14500, align 1
  %14501 = lshr i32 %14479, 31
  %14502 = trunc i32 %14501 to i8
  %14503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14502, i8* %14503, align 1
  %14504 = lshr i32 %14476, 31
  %14505 = lshr i32 %14478, 31
  %14506 = xor i32 %14501, %14504
  %14507 = xor i32 %14501, %14505
  %14508 = add i32 %14506, %14507
  %14509 = icmp eq i32 %14508, 2
  %14510 = zext i1 %14509 to i8
  %14511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14510, i8* %14511, align 1
  store %struct.Memory* %loadMem_43aedc, %struct.Memory** %MEMORY
  %loadMem_43aedf = load %struct.Memory*, %struct.Memory** %MEMORY
  %14512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14513 = getelementptr inbounds %struct.GPR, %struct.GPR* %14512, i32 0, i32 33
  %14514 = getelementptr inbounds %struct.Reg, %struct.Reg* %14513, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %14514 to i64*
  %14515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14516 = getelementptr inbounds %struct.GPR, %struct.GPR* %14515, i32 0, i32 1
  %14517 = getelementptr inbounds %struct.Reg, %struct.Reg* %14516, i32 0, i32 0
  %RAX.i669 = bitcast %union.anon* %14517 to i64*
  %14518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14519 = getelementptr inbounds %struct.GPR, %struct.GPR* %14518, i32 0, i32 15
  %14520 = getelementptr inbounds %struct.Reg, %struct.Reg* %14519, i32 0, i32 0
  %RBP.i670 = bitcast %union.anon* %14520 to i64*
  %14521 = load i64, i64* %RAX.i669
  %14522 = load i64, i64* %RBP.i670
  %14523 = sub i64 %14522, 84
  %14524 = load i64, i64* %PC.i668
  %14525 = add i64 %14524, 3
  store i64 %14525, i64* %PC.i668
  %14526 = trunc i64 %14521 to i32
  %14527 = inttoptr i64 %14523 to i32*
  %14528 = load i32, i32* %14527
  %14529 = add i32 %14528, %14526
  %14530 = zext i32 %14529 to i64
  store i64 %14530, i64* %RAX.i669, align 8
  %14531 = icmp ult i32 %14529, %14526
  %14532 = icmp ult i32 %14529, %14528
  %14533 = or i1 %14531, %14532
  %14534 = zext i1 %14533 to i8
  %14535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14534, i8* %14535, align 1
  %14536 = and i32 %14529, 255
  %14537 = call i32 @llvm.ctpop.i32(i32 %14536)
  %14538 = trunc i32 %14537 to i8
  %14539 = and i8 %14538, 1
  %14540 = xor i8 %14539, 1
  %14541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14540, i8* %14541, align 1
  %14542 = xor i32 %14528, %14526
  %14543 = xor i32 %14542, %14529
  %14544 = lshr i32 %14543, 4
  %14545 = trunc i32 %14544 to i8
  %14546 = and i8 %14545, 1
  %14547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14546, i8* %14547, align 1
  %14548 = icmp eq i32 %14529, 0
  %14549 = zext i1 %14548 to i8
  %14550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14549, i8* %14550, align 1
  %14551 = lshr i32 %14529, 31
  %14552 = trunc i32 %14551 to i8
  %14553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14552, i8* %14553, align 1
  %14554 = lshr i32 %14526, 31
  %14555 = lshr i32 %14528, 31
  %14556 = xor i32 %14551, %14554
  %14557 = xor i32 %14551, %14555
  %14558 = add i32 %14556, %14557
  %14559 = icmp eq i32 %14558, 2
  %14560 = zext i1 %14559 to i8
  %14561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14560, i8* %14561, align 1
  store %struct.Memory* %loadMem_43aedf, %struct.Memory** %MEMORY
  %loadMem_43aee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14563 = getelementptr inbounds %struct.GPR, %struct.GPR* %14562, i32 0, i32 33
  %14564 = getelementptr inbounds %struct.Reg, %struct.Reg* %14563, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %14564 to i64*
  %14565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14566 = getelementptr inbounds %struct.GPR, %struct.GPR* %14565, i32 0, i32 1
  %14567 = getelementptr inbounds %struct.Reg, %struct.Reg* %14566, i32 0, i32 0
  %EAX.i666 = bitcast %union.anon* %14567 to i32*
  %14568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14569 = getelementptr inbounds %struct.GPR, %struct.GPR* %14568, i32 0, i32 15
  %14570 = getelementptr inbounds %struct.Reg, %struct.Reg* %14569, i32 0, i32 0
  %RBP.i667 = bitcast %union.anon* %14570 to i64*
  %14571 = load i64, i64* %RBP.i667
  %14572 = sub i64 %14571, 456
  %14573 = load i32, i32* %EAX.i666
  %14574 = zext i32 %14573 to i64
  %14575 = load i64, i64* %PC.i665
  %14576 = add i64 %14575, 6
  store i64 %14576, i64* %PC.i665
  %14577 = inttoptr i64 %14572 to i32*
  store i32 %14573, i32* %14577
  store %struct.Memory* %loadMem_43aee2, %struct.Memory** %MEMORY
  br label %block_.L_43aee8

block_.L_43aee8:                                  ; preds = %block_.L_43aed9, %block_43aec8
  %loadMem_43aee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14579 = getelementptr inbounds %struct.GPR, %struct.GPR* %14578, i32 0, i32 33
  %14580 = getelementptr inbounds %struct.Reg, %struct.Reg* %14579, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %14580 to i64*
  %14581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14582 = getelementptr inbounds %struct.GPR, %struct.GPR* %14581, i32 0, i32 1
  %14583 = getelementptr inbounds %struct.Reg, %struct.Reg* %14582, i32 0, i32 0
  %RAX.i663 = bitcast %union.anon* %14583 to i64*
  %14584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14585 = getelementptr inbounds %struct.GPR, %struct.GPR* %14584, i32 0, i32 15
  %14586 = getelementptr inbounds %struct.Reg, %struct.Reg* %14585, i32 0, i32 0
  %RBP.i664 = bitcast %union.anon* %14586 to i64*
  %14587 = load i64, i64* %RBP.i664
  %14588 = sub i64 %14587, 456
  %14589 = load i64, i64* %PC.i662
  %14590 = add i64 %14589, 6
  store i64 %14590, i64* %PC.i662
  %14591 = inttoptr i64 %14588 to i32*
  %14592 = load i32, i32* %14591
  %14593 = zext i32 %14592 to i64
  store i64 %14593, i64* %RAX.i663, align 8
  store %struct.Memory* %loadMem_43aee8, %struct.Memory** %MEMORY
  %loadMem_43aeee = load %struct.Memory*, %struct.Memory** %MEMORY
  %14594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14595 = getelementptr inbounds %struct.GPR, %struct.GPR* %14594, i32 0, i32 33
  %14596 = getelementptr inbounds %struct.Reg, %struct.Reg* %14595, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %14596 to i64*
  %14597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14598 = getelementptr inbounds %struct.GPR, %struct.GPR* %14597, i32 0, i32 5
  %14599 = getelementptr inbounds %struct.Reg, %struct.Reg* %14598, i32 0, i32 0
  %ECX.i660 = bitcast %union.anon* %14599 to i32*
  %14600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14601 = getelementptr inbounds %struct.GPR, %struct.GPR* %14600, i32 0, i32 5
  %14602 = getelementptr inbounds %struct.Reg, %struct.Reg* %14601, i32 0, i32 0
  %RCX.i661 = bitcast %union.anon* %14602 to i64*
  %14603 = load i64, i64* %RCX.i661
  %14604 = load i32, i32* %ECX.i660
  %14605 = zext i32 %14604 to i64
  %14606 = load i64, i64* %PC.i659
  %14607 = add i64 %14606, 2
  store i64 %14607, i64* %PC.i659
  %14608 = xor i64 %14605, %14603
  %14609 = trunc i64 %14608 to i32
  %14610 = and i64 %14608, 4294967295
  store i64 %14610, i64* %RCX.i661, align 8
  %14611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14611, align 1
  %14612 = and i32 %14609, 255
  %14613 = call i32 @llvm.ctpop.i32(i32 %14612)
  %14614 = trunc i32 %14613 to i8
  %14615 = and i8 %14614, 1
  %14616 = xor i8 %14615, 1
  %14617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14616, i8* %14617, align 1
  %14618 = icmp eq i32 %14609, 0
  %14619 = zext i1 %14618 to i8
  %14620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14619, i8* %14620, align 1
  %14621 = lshr i32 %14609, 31
  %14622 = trunc i32 %14621 to i8
  %14623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14622, i8* %14623, align 1
  %14624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14624, align 1
  %14625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14625, align 1
  store %struct.Memory* %loadMem_43aeee, %struct.Memory** %MEMORY
  %loadMem_43aef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14627 = getelementptr inbounds %struct.GPR, %struct.GPR* %14626, i32 0, i32 33
  %14628 = getelementptr inbounds %struct.Reg, %struct.Reg* %14627, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %14628 to i64*
  %14629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14630 = getelementptr inbounds %struct.GPR, %struct.GPR* %14629, i32 0, i32 1
  %14631 = getelementptr inbounds %struct.Reg, %struct.Reg* %14630, i32 0, i32 0
  %EAX.i657 = bitcast %union.anon* %14631 to i32*
  %14632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14633 = getelementptr inbounds %struct.GPR, %struct.GPR* %14632, i32 0, i32 15
  %14634 = getelementptr inbounds %struct.Reg, %struct.Reg* %14633, i32 0, i32 0
  %RBP.i658 = bitcast %union.anon* %14634 to i64*
  %14635 = load i64, i64* %RBP.i658
  %14636 = sub i64 %14635, 104
  %14637 = load i32, i32* %EAX.i657
  %14638 = zext i32 %14637 to i64
  %14639 = load i64, i64* %PC.i656
  %14640 = add i64 %14639, 3
  store i64 %14640, i64* %PC.i656
  %14641 = inttoptr i64 %14636 to i32*
  store i32 %14637, i32* %14641
  store %struct.Memory* %loadMem_43aef0, %struct.Memory** %MEMORY
  %loadMem_43aef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14643 = getelementptr inbounds %struct.GPR, %struct.GPR* %14642, i32 0, i32 33
  %14644 = getelementptr inbounds %struct.Reg, %struct.Reg* %14643, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %14644 to i64*
  %14645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14646 = getelementptr inbounds %struct.GPR, %struct.GPR* %14645, i32 0, i32 1
  %14647 = getelementptr inbounds %struct.Reg, %struct.Reg* %14646, i32 0, i32 0
  %RAX.i654 = bitcast %union.anon* %14647 to i64*
  %14648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14649 = getelementptr inbounds %struct.GPR, %struct.GPR* %14648, i32 0, i32 15
  %14650 = getelementptr inbounds %struct.Reg, %struct.Reg* %14649, i32 0, i32 0
  %RBP.i655 = bitcast %union.anon* %14650 to i64*
  %14651 = load i64, i64* %RBP.i655
  %14652 = sub i64 %14651, 108
  %14653 = load i64, i64* %PC.i653
  %14654 = add i64 %14653, 3
  store i64 %14654, i64* %PC.i653
  %14655 = inttoptr i64 %14652 to i32*
  %14656 = load i32, i32* %14655
  %14657 = zext i32 %14656 to i64
  store i64 %14657, i64* %RAX.i654, align 8
  store %struct.Memory* %loadMem_43aef3, %struct.Memory** %MEMORY
  %loadMem_43aef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14659 = getelementptr inbounds %struct.GPR, %struct.GPR* %14658, i32 0, i32 33
  %14660 = getelementptr inbounds %struct.Reg, %struct.Reg* %14659, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %14660 to i64*
  %14661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14662 = getelementptr inbounds %struct.GPR, %struct.GPR* %14661, i32 0, i32 1
  %14663 = getelementptr inbounds %struct.Reg, %struct.Reg* %14662, i32 0, i32 0
  %RAX.i652 = bitcast %union.anon* %14663 to i64*
  %14664 = load i64, i64* %RAX.i652
  %14665 = load i64, i64* %PC.i651
  %14666 = add i64 %14665, 3
  store i64 %14666, i64* %PC.i651
  %14667 = and i64 %14664, 4294967295
  %14668 = shl i64 %14667, 1
  %14669 = trunc i64 %14668 to i32
  %14670 = icmp slt i32 %14669, 0
  %14671 = shl i32 %14669, 1
  %14672 = zext i32 %14671 to i64
  store i64 %14672, i64* %RAX.i652, align 8
  %14673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14674 = zext i1 %14670 to i8
  store i8 %14674, i8* %14673, align 1
  %14675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14676 = and i32 %14671, 254
  %14677 = call i32 @llvm.ctpop.i32(i32 %14676)
  %14678 = trunc i32 %14677 to i8
  %14679 = and i8 %14678, 1
  %14680 = xor i8 %14679, 1
  store i8 %14680, i8* %14675, align 1
  %14681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14681, align 1
  %14682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14683 = icmp eq i32 %14671, 0
  %14684 = zext i1 %14683 to i8
  store i8 %14684, i8* %14682, align 1
  %14685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14686 = lshr i32 %14671, 31
  %14687 = trunc i32 %14686 to i8
  store i8 %14687, i8* %14685, align 1
  %14688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14688, align 1
  store %struct.Memory* %loadMem_43aef6, %struct.Memory** %MEMORY
  %loadMem_43aef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14690 = getelementptr inbounds %struct.GPR, %struct.GPR* %14689, i32 0, i32 33
  %14691 = getelementptr inbounds %struct.Reg, %struct.Reg* %14690, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %14691 to i64*
  %14692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14693 = getelementptr inbounds %struct.GPR, %struct.GPR* %14692, i32 0, i32 7
  %14694 = getelementptr inbounds %struct.Reg, %struct.Reg* %14693, i32 0, i32 0
  %RDX.i649 = bitcast %union.anon* %14694 to i64*
  %14695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14696 = getelementptr inbounds %struct.GPR, %struct.GPR* %14695, i32 0, i32 15
  %14697 = getelementptr inbounds %struct.Reg, %struct.Reg* %14696, i32 0, i32 0
  %RBP.i650 = bitcast %union.anon* %14697 to i64*
  %14698 = load i64, i64* %RBP.i650
  %14699 = sub i64 %14698, 124
  %14700 = load i64, i64* %PC.i648
  %14701 = add i64 %14700, 3
  store i64 %14701, i64* %PC.i648
  %14702 = inttoptr i64 %14699 to i32*
  %14703 = load i32, i32* %14702
  %14704 = zext i32 %14703 to i64
  store i64 %14704, i64* %RDX.i649, align 8
  store %struct.Memory* %loadMem_43aef9, %struct.Memory** %MEMORY
  %loadMem_43aefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %14705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14706 = getelementptr inbounds %struct.GPR, %struct.GPR* %14705, i32 0, i32 33
  %14707 = getelementptr inbounds %struct.Reg, %struct.Reg* %14706, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %14707 to i64*
  %14708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14709 = getelementptr inbounds %struct.GPR, %struct.GPR* %14708, i32 0, i32 7
  %14710 = getelementptr inbounds %struct.Reg, %struct.Reg* %14709, i32 0, i32 0
  %RDX.i646 = bitcast %union.anon* %14710 to i64*
  %14711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14712 = getelementptr inbounds %struct.GPR, %struct.GPR* %14711, i32 0, i32 15
  %14713 = getelementptr inbounds %struct.Reg, %struct.Reg* %14712, i32 0, i32 0
  %RBP.i647 = bitcast %union.anon* %14713 to i64*
  %14714 = load i64, i64* %RDX.i646
  %14715 = load i64, i64* %RBP.i647
  %14716 = sub i64 %14715, 136
  %14717 = load i64, i64* %PC.i645
  %14718 = add i64 %14717, 6
  store i64 %14718, i64* %PC.i645
  %14719 = trunc i64 %14714 to i32
  %14720 = inttoptr i64 %14716 to i32*
  %14721 = load i32, i32* %14720
  %14722 = sub i32 %14719, %14721
  %14723 = zext i32 %14722 to i64
  store i64 %14723, i64* %RDX.i646, align 8
  %14724 = icmp ult i32 %14719, %14721
  %14725 = zext i1 %14724 to i8
  %14726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14725, i8* %14726, align 1
  %14727 = and i32 %14722, 255
  %14728 = call i32 @llvm.ctpop.i32(i32 %14727)
  %14729 = trunc i32 %14728 to i8
  %14730 = and i8 %14729, 1
  %14731 = xor i8 %14730, 1
  %14732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14731, i8* %14732, align 1
  %14733 = xor i32 %14721, %14719
  %14734 = xor i32 %14733, %14722
  %14735 = lshr i32 %14734, 4
  %14736 = trunc i32 %14735 to i8
  %14737 = and i8 %14736, 1
  %14738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14737, i8* %14738, align 1
  %14739 = icmp eq i32 %14722, 0
  %14740 = zext i1 %14739 to i8
  %14741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14740, i8* %14741, align 1
  %14742 = lshr i32 %14722, 31
  %14743 = trunc i32 %14742 to i8
  %14744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14743, i8* %14744, align 1
  %14745 = lshr i32 %14719, 31
  %14746 = lshr i32 %14721, 31
  %14747 = xor i32 %14746, %14745
  %14748 = xor i32 %14742, %14745
  %14749 = add i32 %14748, %14747
  %14750 = icmp eq i32 %14749, 2
  %14751 = zext i1 %14750 to i8
  %14752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14751, i8* %14752, align 1
  store %struct.Memory* %loadMem_43aefc, %struct.Memory** %MEMORY
  %loadMem_43af02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14754 = getelementptr inbounds %struct.GPR, %struct.GPR* %14753, i32 0, i32 33
  %14755 = getelementptr inbounds %struct.Reg, %struct.Reg* %14754, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %14755 to i64*
  %14756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14757 = getelementptr inbounds %struct.GPR, %struct.GPR* %14756, i32 0, i32 7
  %14758 = getelementptr inbounds %struct.Reg, %struct.Reg* %14757, i32 0, i32 0
  %EDX.i643 = bitcast %union.anon* %14758 to i32*
  %14759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14760 = getelementptr inbounds %struct.GPR, %struct.GPR* %14759, i32 0, i32 1
  %14761 = getelementptr inbounds %struct.Reg, %struct.Reg* %14760, i32 0, i32 0
  %RAX.i644 = bitcast %union.anon* %14761 to i64*
  %14762 = load i64, i64* %RAX.i644
  %14763 = load i32, i32* %EDX.i643
  %14764 = zext i32 %14763 to i64
  %14765 = load i64, i64* %PC.i642
  %14766 = add i64 %14765, 2
  store i64 %14766, i64* %PC.i642
  %14767 = trunc i64 %14762 to i32
  %14768 = add i32 %14763, %14767
  %14769 = zext i32 %14768 to i64
  store i64 %14769, i64* %RAX.i644, align 8
  %14770 = icmp ult i32 %14768, %14767
  %14771 = icmp ult i32 %14768, %14763
  %14772 = or i1 %14770, %14771
  %14773 = zext i1 %14772 to i8
  %14774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14773, i8* %14774, align 1
  %14775 = and i32 %14768, 255
  %14776 = call i32 @llvm.ctpop.i32(i32 %14775)
  %14777 = trunc i32 %14776 to i8
  %14778 = and i8 %14777, 1
  %14779 = xor i8 %14778, 1
  %14780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14779, i8* %14780, align 1
  %14781 = xor i64 %14764, %14762
  %14782 = trunc i64 %14781 to i32
  %14783 = xor i32 %14782, %14768
  %14784 = lshr i32 %14783, 4
  %14785 = trunc i32 %14784 to i8
  %14786 = and i8 %14785, 1
  %14787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14786, i8* %14787, align 1
  %14788 = icmp eq i32 %14768, 0
  %14789 = zext i1 %14788 to i8
  %14790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14789, i8* %14790, align 1
  %14791 = lshr i32 %14768, 31
  %14792 = trunc i32 %14791 to i8
  %14793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14792, i8* %14793, align 1
  %14794 = lshr i32 %14767, 31
  %14795 = lshr i32 %14763, 31
  %14796 = xor i32 %14791, %14794
  %14797 = xor i32 %14791, %14795
  %14798 = add i32 %14796, %14797
  %14799 = icmp eq i32 %14798, 2
  %14800 = zext i1 %14799 to i8
  %14801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14800, i8* %14801, align 1
  store %struct.Memory* %loadMem_43af02, %struct.Memory** %MEMORY
  %loadMem_43af04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14803 = getelementptr inbounds %struct.GPR, %struct.GPR* %14802, i32 0, i32 33
  %14804 = getelementptr inbounds %struct.Reg, %struct.Reg* %14803, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %14804 to i64*
  %14805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14806 = getelementptr inbounds %struct.GPR, %struct.GPR* %14805, i32 0, i32 1
  %14807 = getelementptr inbounds %struct.Reg, %struct.Reg* %14806, i32 0, i32 0
  %RAX.i641 = bitcast %union.anon* %14807 to i64*
  %14808 = load i64, i64* %RAX.i641
  %14809 = load i64, i64* %PC.i640
  %14810 = add i64 %14809, 3
  store i64 %14810, i64* %PC.i640
  %14811 = trunc i64 %14808 to i32
  %14812 = add i32 4, %14811
  %14813 = zext i32 %14812 to i64
  store i64 %14813, i64* %RAX.i641, align 8
  %14814 = icmp ult i32 %14812, %14811
  %14815 = icmp ult i32 %14812, 4
  %14816 = or i1 %14814, %14815
  %14817 = zext i1 %14816 to i8
  %14818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14817, i8* %14818, align 1
  %14819 = and i32 %14812, 255
  %14820 = call i32 @llvm.ctpop.i32(i32 %14819)
  %14821 = trunc i32 %14820 to i8
  %14822 = and i8 %14821, 1
  %14823 = xor i8 %14822, 1
  %14824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14823, i8* %14824, align 1
  %14825 = xor i64 4, %14808
  %14826 = trunc i64 %14825 to i32
  %14827 = xor i32 %14826, %14812
  %14828 = lshr i32 %14827, 4
  %14829 = trunc i32 %14828 to i8
  %14830 = and i8 %14829, 1
  %14831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14830, i8* %14831, align 1
  %14832 = icmp eq i32 %14812, 0
  %14833 = zext i1 %14832 to i8
  %14834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14833, i8* %14834, align 1
  %14835 = lshr i32 %14812, 31
  %14836 = trunc i32 %14835 to i8
  %14837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14836, i8* %14837, align 1
  %14838 = lshr i32 %14811, 31
  %14839 = xor i32 %14835, %14838
  %14840 = add i32 %14839, %14835
  %14841 = icmp eq i32 %14840, 2
  %14842 = zext i1 %14841 to i8
  %14843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14842, i8* %14843, align 1
  store %struct.Memory* %loadMem_43af04, %struct.Memory** %MEMORY
  %loadMem_43af07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14845 = getelementptr inbounds %struct.GPR, %struct.GPR* %14844, i32 0, i32 33
  %14846 = getelementptr inbounds %struct.Reg, %struct.Reg* %14845, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %14846 to i64*
  %14847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14848 = getelementptr inbounds %struct.GPR, %struct.GPR* %14847, i32 0, i32 1
  %14849 = getelementptr inbounds %struct.Reg, %struct.Reg* %14848, i32 0, i32 0
  %RAX.i639 = bitcast %union.anon* %14849 to i64*
  %14850 = load i64, i64* %RAX.i639
  %14851 = load i64, i64* %PC.i638
  %14852 = add i64 %14851, 3
  store i64 %14852, i64* %PC.i638
  %14853 = shl i64 %14850, 32
  %14854 = ashr exact i64 %14853, 32
  %14855 = ashr i64 %14854, 2
  %14856 = lshr i64 %14855, 1
  %14857 = trunc i64 %14855 to i8
  %14858 = and i8 %14857, 1
  %14859 = trunc i64 %14856 to i32
  %14860 = and i64 %14856, 4294967295
  store i64 %14860, i64* %RAX.i639, align 8
  %14861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14858, i8* %14861, align 1
  %14862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14863 = and i32 %14859, 255
  %14864 = call i32 @llvm.ctpop.i32(i32 %14863)
  %14865 = trunc i32 %14864 to i8
  %14866 = and i8 %14865, 1
  %14867 = xor i8 %14866, 1
  store i8 %14867, i8* %14862, align 1
  %14868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14868, align 1
  %14869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14870 = icmp eq i32 %14859, 0
  %14871 = zext i1 %14870 to i8
  store i8 %14871, i8* %14869, align 1
  %14872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14873 = lshr i32 %14859, 31
  %14874 = trunc i32 %14873 to i8
  store i8 %14874, i8* %14872, align 1
  %14875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14875, align 1
  store %struct.Memory* %loadMem_43af07, %struct.Memory** %MEMORY
  %loadMem_43af0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14877 = getelementptr inbounds %struct.GPR, %struct.GPR* %14876, i32 0, i32 33
  %14878 = getelementptr inbounds %struct.Reg, %struct.Reg* %14877, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %14878 to i64*
  %14879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14880 = getelementptr inbounds %struct.GPR, %struct.GPR* %14879, i32 0, i32 5
  %14881 = getelementptr inbounds %struct.Reg, %struct.Reg* %14880, i32 0, i32 0
  %RCX.i636 = bitcast %union.anon* %14881 to i64*
  %14882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14883 = getelementptr inbounds %struct.GPR, %struct.GPR* %14882, i32 0, i32 15
  %14884 = getelementptr inbounds %struct.Reg, %struct.Reg* %14883, i32 0, i32 0
  %RBP.i637 = bitcast %union.anon* %14884 to i64*
  %14885 = load i64, i64* %RCX.i636
  %14886 = load i64, i64* %RBP.i637
  %14887 = sub i64 %14886, 104
  %14888 = load i64, i64* %PC.i635
  %14889 = add i64 %14888, 3
  store i64 %14889, i64* %PC.i635
  %14890 = trunc i64 %14885 to i32
  %14891 = inttoptr i64 %14887 to i32*
  %14892 = load i32, i32* %14891
  %14893 = sub i32 %14890, %14892
  %14894 = zext i32 %14893 to i64
  store i64 %14894, i64* %RCX.i636, align 8
  %14895 = icmp ult i32 %14890, %14892
  %14896 = zext i1 %14895 to i8
  %14897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14896, i8* %14897, align 1
  %14898 = and i32 %14893, 255
  %14899 = call i32 @llvm.ctpop.i32(i32 %14898)
  %14900 = trunc i32 %14899 to i8
  %14901 = and i8 %14900, 1
  %14902 = xor i8 %14901, 1
  %14903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14902, i8* %14903, align 1
  %14904 = xor i32 %14892, %14890
  %14905 = xor i32 %14904, %14893
  %14906 = lshr i32 %14905, 4
  %14907 = trunc i32 %14906 to i8
  %14908 = and i8 %14907, 1
  %14909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14908, i8* %14909, align 1
  %14910 = icmp eq i32 %14893, 0
  %14911 = zext i1 %14910 to i8
  %14912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14911, i8* %14912, align 1
  %14913 = lshr i32 %14893, 31
  %14914 = trunc i32 %14913 to i8
  %14915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14914, i8* %14915, align 1
  %14916 = lshr i32 %14890, 31
  %14917 = lshr i32 %14892, 31
  %14918 = xor i32 %14917, %14916
  %14919 = xor i32 %14913, %14916
  %14920 = add i32 %14919, %14918
  %14921 = icmp eq i32 %14920, 2
  %14922 = zext i1 %14921 to i8
  %14923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14922, i8* %14923, align 1
  store %struct.Memory* %loadMem_43af0a, %struct.Memory** %MEMORY
  %loadMem_43af0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14925 = getelementptr inbounds %struct.GPR, %struct.GPR* %14924, i32 0, i32 33
  %14926 = getelementptr inbounds %struct.Reg, %struct.Reg* %14925, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %14926 to i64*
  %14927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14928 = getelementptr inbounds %struct.GPR, %struct.GPR* %14927, i32 0, i32 1
  %14929 = getelementptr inbounds %struct.Reg, %struct.Reg* %14928, i32 0, i32 0
  %EAX.i633 = bitcast %union.anon* %14929 to i32*
  %14930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14931 = getelementptr inbounds %struct.GPR, %struct.GPR* %14930, i32 0, i32 5
  %14932 = getelementptr inbounds %struct.Reg, %struct.Reg* %14931, i32 0, i32 0
  %ECX.i634 = bitcast %union.anon* %14932 to i32*
  %14933 = load i32, i32* %EAX.i633
  %14934 = zext i32 %14933 to i64
  %14935 = load i32, i32* %ECX.i634
  %14936 = zext i32 %14935 to i64
  %14937 = load i64, i64* %PC.i632
  %14938 = add i64 %14937, 2
  store i64 %14938, i64* %PC.i632
  %14939 = sub i32 %14933, %14935
  %14940 = icmp ult i32 %14933, %14935
  %14941 = zext i1 %14940 to i8
  %14942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14941, i8* %14942, align 1
  %14943 = and i32 %14939, 255
  %14944 = call i32 @llvm.ctpop.i32(i32 %14943)
  %14945 = trunc i32 %14944 to i8
  %14946 = and i8 %14945, 1
  %14947 = xor i8 %14946, 1
  %14948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14947, i8* %14948, align 1
  %14949 = xor i64 %14936, %14934
  %14950 = trunc i64 %14949 to i32
  %14951 = xor i32 %14950, %14939
  %14952 = lshr i32 %14951, 4
  %14953 = trunc i32 %14952 to i8
  %14954 = and i8 %14953, 1
  %14955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14954, i8* %14955, align 1
  %14956 = icmp eq i32 %14939, 0
  %14957 = zext i1 %14956 to i8
  %14958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14957, i8* %14958, align 1
  %14959 = lshr i32 %14939, 31
  %14960 = trunc i32 %14959 to i8
  %14961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14960, i8* %14961, align 1
  %14962 = lshr i32 %14933, 31
  %14963 = lshr i32 %14935, 31
  %14964 = xor i32 %14963, %14962
  %14965 = xor i32 %14959, %14962
  %14966 = add i32 %14965, %14964
  %14967 = icmp eq i32 %14966, 2
  %14968 = zext i1 %14967 to i8
  %14969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14968, i8* %14969, align 1
  store %struct.Memory* %loadMem_43af0d, %struct.Memory** %MEMORY
  %loadMem_43af0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14971 = getelementptr inbounds %struct.GPR, %struct.GPR* %14970, i32 0, i32 33
  %14972 = getelementptr inbounds %struct.Reg, %struct.Reg* %14971, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %14972 to i64*
  %14973 = load i64, i64* %PC.i631
  %14974 = add i64 %14973, 22
  %14975 = load i64, i64* %PC.i631
  %14976 = add i64 %14975, 6
  %14977 = load i64, i64* %PC.i631
  %14978 = add i64 %14977, 6
  store i64 %14978, i64* %PC.i631
  %14979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14980 = load i8, i8* %14979, align 1
  %14981 = icmp ne i8 %14980, 0
  %14982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14983 = load i8, i8* %14982, align 1
  %14984 = icmp ne i8 %14983, 0
  %14985 = xor i1 %14981, %14984
  %14986 = xor i1 %14985, true
  %14987 = zext i1 %14986 to i8
  store i8 %14987, i8* %BRANCH_TAKEN, align 1
  %14988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14989 = select i1 %14985, i64 %14976, i64 %14974
  store i64 %14989, i64* %14988, align 8
  store %struct.Memory* %loadMem_43af0f, %struct.Memory** %MEMORY
  %loadBr_43af0f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43af0f = icmp eq i8 %loadBr_43af0f, 1
  br i1 %cmpBr_43af0f, label %block_.L_43af25, label %block_43af15

block_43af15:                                     ; preds = %block_.L_43aee8
  %loadMem_43af15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14991 = getelementptr inbounds %struct.GPR, %struct.GPR* %14990, i32 0, i32 33
  %14992 = getelementptr inbounds %struct.Reg, %struct.Reg* %14991, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %14992 to i64*
  %14993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14994 = getelementptr inbounds %struct.GPR, %struct.GPR* %14993, i32 0, i32 1
  %14995 = getelementptr inbounds %struct.Reg, %struct.Reg* %14994, i32 0, i32 0
  %EAX.i629 = bitcast %union.anon* %14995 to i32*
  %14996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14997 = getelementptr inbounds %struct.GPR, %struct.GPR* %14996, i32 0, i32 1
  %14998 = getelementptr inbounds %struct.Reg, %struct.Reg* %14997, i32 0, i32 0
  %RAX.i630 = bitcast %union.anon* %14998 to i64*
  %14999 = load i64, i64* %RAX.i630
  %15000 = load i32, i32* %EAX.i629
  %15001 = zext i32 %15000 to i64
  %15002 = load i64, i64* %PC.i628
  %15003 = add i64 %15002, 2
  store i64 %15003, i64* %PC.i628
  %15004 = xor i64 %15001, %14999
  %15005 = trunc i64 %15004 to i32
  %15006 = and i64 %15004, 4294967295
  store i64 %15006, i64* %RAX.i630, align 8
  %15007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15007, align 1
  %15008 = and i32 %15005, 255
  %15009 = call i32 @llvm.ctpop.i32(i32 %15008)
  %15010 = trunc i32 %15009 to i8
  %15011 = and i8 %15010, 1
  %15012 = xor i8 %15011, 1
  %15013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15012, i8* %15013, align 1
  %15014 = icmp eq i32 %15005, 0
  %15015 = zext i1 %15014 to i8
  %15016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15015, i8* %15016, align 1
  %15017 = lshr i32 %15005, 31
  %15018 = trunc i32 %15017 to i8
  %15019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15018, i8* %15019, align 1
  %15020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15020, align 1
  %15021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15021, align 1
  store %struct.Memory* %loadMem_43af15, %struct.Memory** %MEMORY
  %loadMem_43af17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15023 = getelementptr inbounds %struct.GPR, %struct.GPR* %15022, i32 0, i32 33
  %15024 = getelementptr inbounds %struct.Reg, %struct.Reg* %15023, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %15024 to i64*
  %15025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15026 = getelementptr inbounds %struct.GPR, %struct.GPR* %15025, i32 0, i32 1
  %15027 = getelementptr inbounds %struct.Reg, %struct.Reg* %15026, i32 0, i32 0
  %RAX.i626 = bitcast %union.anon* %15027 to i64*
  %15028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15029 = getelementptr inbounds %struct.GPR, %struct.GPR* %15028, i32 0, i32 15
  %15030 = getelementptr inbounds %struct.Reg, %struct.Reg* %15029, i32 0, i32 0
  %RBP.i627 = bitcast %union.anon* %15030 to i64*
  %15031 = load i64, i64* %RAX.i626
  %15032 = load i64, i64* %RBP.i627
  %15033 = sub i64 %15032, 104
  %15034 = load i64, i64* %PC.i625
  %15035 = add i64 %15034, 3
  store i64 %15035, i64* %PC.i625
  %15036 = trunc i64 %15031 to i32
  %15037 = inttoptr i64 %15033 to i32*
  %15038 = load i32, i32* %15037
  %15039 = sub i32 %15036, %15038
  %15040 = zext i32 %15039 to i64
  store i64 %15040, i64* %RAX.i626, align 8
  %15041 = icmp ult i32 %15036, %15038
  %15042 = zext i1 %15041 to i8
  %15043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15042, i8* %15043, align 1
  %15044 = and i32 %15039, 255
  %15045 = call i32 @llvm.ctpop.i32(i32 %15044)
  %15046 = trunc i32 %15045 to i8
  %15047 = and i8 %15046, 1
  %15048 = xor i8 %15047, 1
  %15049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15048, i8* %15049, align 1
  %15050 = xor i32 %15038, %15036
  %15051 = xor i32 %15050, %15039
  %15052 = lshr i32 %15051, 4
  %15053 = trunc i32 %15052 to i8
  %15054 = and i8 %15053, 1
  %15055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15054, i8* %15055, align 1
  %15056 = icmp eq i32 %15039, 0
  %15057 = zext i1 %15056 to i8
  %15058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15057, i8* %15058, align 1
  %15059 = lshr i32 %15039, 31
  %15060 = trunc i32 %15059 to i8
  %15061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15060, i8* %15061, align 1
  %15062 = lshr i32 %15036, 31
  %15063 = lshr i32 %15038, 31
  %15064 = xor i32 %15063, %15062
  %15065 = xor i32 %15059, %15062
  %15066 = add i32 %15065, %15064
  %15067 = icmp eq i32 %15066, 2
  %15068 = zext i1 %15067 to i8
  %15069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15068, i8* %15069, align 1
  store %struct.Memory* %loadMem_43af17, %struct.Memory** %MEMORY
  %loadMem_43af1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15071 = getelementptr inbounds %struct.GPR, %struct.GPR* %15070, i32 0, i32 33
  %15072 = getelementptr inbounds %struct.Reg, %struct.Reg* %15071, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %15072 to i64*
  %15073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15074 = getelementptr inbounds %struct.GPR, %struct.GPR* %15073, i32 0, i32 1
  %15075 = getelementptr inbounds %struct.Reg, %struct.Reg* %15074, i32 0, i32 0
  %EAX.i623 = bitcast %union.anon* %15075 to i32*
  %15076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15077 = getelementptr inbounds %struct.GPR, %struct.GPR* %15076, i32 0, i32 15
  %15078 = getelementptr inbounds %struct.Reg, %struct.Reg* %15077, i32 0, i32 0
  %RBP.i624 = bitcast %union.anon* %15078 to i64*
  %15079 = load i64, i64* %RBP.i624
  %15080 = sub i64 %15079, 460
  %15081 = load i32, i32* %EAX.i623
  %15082 = zext i32 %15081 to i64
  %15083 = load i64, i64* %PC.i622
  %15084 = add i64 %15083, 6
  store i64 %15084, i64* %PC.i622
  %15085 = inttoptr i64 %15080 to i32*
  store i32 %15081, i32* %15085
  store %struct.Memory* %loadMem_43af1a, %struct.Memory** %MEMORY
  %loadMem_43af20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15087 = getelementptr inbounds %struct.GPR, %struct.GPR* %15086, i32 0, i32 33
  %15088 = getelementptr inbounds %struct.Reg, %struct.Reg* %15087, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %15088 to i64*
  %15089 = load i64, i64* %PC.i621
  %15090 = add i64 %15089, 92
  %15091 = load i64, i64* %PC.i621
  %15092 = add i64 %15091, 5
  store i64 %15092, i64* %PC.i621
  %15093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15090, i64* %15093, align 8
  store %struct.Memory* %loadMem_43af20, %struct.Memory** %MEMORY
  br label %block_.L_43af7c

block_.L_43af25:                                  ; preds = %block_.L_43aee8
  %loadMem_43af25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15095 = getelementptr inbounds %struct.GPR, %struct.GPR* %15094, i32 0, i32 33
  %15096 = getelementptr inbounds %struct.Reg, %struct.Reg* %15095, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %15096 to i64*
  %15097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15098 = getelementptr inbounds %struct.GPR, %struct.GPR* %15097, i32 0, i32 1
  %15099 = getelementptr inbounds %struct.Reg, %struct.Reg* %15098, i32 0, i32 0
  %RAX.i619 = bitcast %union.anon* %15099 to i64*
  %15100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15101 = getelementptr inbounds %struct.GPR, %struct.GPR* %15100, i32 0, i32 15
  %15102 = getelementptr inbounds %struct.Reg, %struct.Reg* %15101, i32 0, i32 0
  %RBP.i620 = bitcast %union.anon* %15102 to i64*
  %15103 = load i64, i64* %RBP.i620
  %15104 = sub i64 %15103, 108
  %15105 = load i64, i64* %PC.i618
  %15106 = add i64 %15105, 3
  store i64 %15106, i64* %PC.i618
  %15107 = inttoptr i64 %15104 to i32*
  %15108 = load i32, i32* %15107
  %15109 = zext i32 %15108 to i64
  store i64 %15109, i64* %RAX.i619, align 8
  store %struct.Memory* %loadMem_43af25, %struct.Memory** %MEMORY
  %loadMem_43af28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15111 = getelementptr inbounds %struct.GPR, %struct.GPR* %15110, i32 0, i32 33
  %15112 = getelementptr inbounds %struct.Reg, %struct.Reg* %15111, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %15112 to i64*
  %15113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15114 = getelementptr inbounds %struct.GPR, %struct.GPR* %15113, i32 0, i32 1
  %15115 = getelementptr inbounds %struct.Reg, %struct.Reg* %15114, i32 0, i32 0
  %RAX.i617 = bitcast %union.anon* %15115 to i64*
  %15116 = load i64, i64* %RAX.i617
  %15117 = load i64, i64* %PC.i616
  %15118 = add i64 %15117, 3
  store i64 %15118, i64* %PC.i616
  %15119 = and i64 %15116, 4294967295
  %15120 = shl i64 %15119, 1
  %15121 = trunc i64 %15120 to i32
  %15122 = icmp slt i32 %15121, 0
  %15123 = shl i32 %15121, 1
  %15124 = zext i32 %15123 to i64
  store i64 %15124, i64* %RAX.i617, align 8
  %15125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15126 = zext i1 %15122 to i8
  store i8 %15126, i8* %15125, align 1
  %15127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15128 = and i32 %15123, 254
  %15129 = call i32 @llvm.ctpop.i32(i32 %15128)
  %15130 = trunc i32 %15129 to i8
  %15131 = and i8 %15130, 1
  %15132 = xor i8 %15131, 1
  store i8 %15132, i8* %15127, align 1
  %15133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15133, align 1
  %15134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15135 = icmp eq i32 %15123, 0
  %15136 = zext i1 %15135 to i8
  store i8 %15136, i8* %15134, align 1
  %15137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15138 = lshr i32 %15123, 31
  %15139 = trunc i32 %15138 to i8
  store i8 %15139, i8* %15137, align 1
  %15140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15140, align 1
  store %struct.Memory* %loadMem_43af28, %struct.Memory** %MEMORY
  %loadMem_43af2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15142 = getelementptr inbounds %struct.GPR, %struct.GPR* %15141, i32 0, i32 33
  %15143 = getelementptr inbounds %struct.Reg, %struct.Reg* %15142, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %15143 to i64*
  %15144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15145 = getelementptr inbounds %struct.GPR, %struct.GPR* %15144, i32 0, i32 5
  %15146 = getelementptr inbounds %struct.Reg, %struct.Reg* %15145, i32 0, i32 0
  %RCX.i614 = bitcast %union.anon* %15146 to i64*
  %15147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15148 = getelementptr inbounds %struct.GPR, %struct.GPR* %15147, i32 0, i32 15
  %15149 = getelementptr inbounds %struct.Reg, %struct.Reg* %15148, i32 0, i32 0
  %RBP.i615 = bitcast %union.anon* %15149 to i64*
  %15150 = load i64, i64* %RBP.i615
  %15151 = sub i64 %15150, 124
  %15152 = load i64, i64* %PC.i613
  %15153 = add i64 %15152, 3
  store i64 %15153, i64* %PC.i613
  %15154 = inttoptr i64 %15151 to i32*
  %15155 = load i32, i32* %15154
  %15156 = zext i32 %15155 to i64
  store i64 %15156, i64* %RCX.i614, align 8
  store %struct.Memory* %loadMem_43af2b, %struct.Memory** %MEMORY
  %loadMem_43af2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15158 = getelementptr inbounds %struct.GPR, %struct.GPR* %15157, i32 0, i32 33
  %15159 = getelementptr inbounds %struct.Reg, %struct.Reg* %15158, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %15159 to i64*
  %15160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15161 = getelementptr inbounds %struct.GPR, %struct.GPR* %15160, i32 0, i32 5
  %15162 = getelementptr inbounds %struct.Reg, %struct.Reg* %15161, i32 0, i32 0
  %RCX.i611 = bitcast %union.anon* %15162 to i64*
  %15163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15164 = getelementptr inbounds %struct.GPR, %struct.GPR* %15163, i32 0, i32 15
  %15165 = getelementptr inbounds %struct.Reg, %struct.Reg* %15164, i32 0, i32 0
  %RBP.i612 = bitcast %union.anon* %15165 to i64*
  %15166 = load i64, i64* %RCX.i611
  %15167 = load i64, i64* %RBP.i612
  %15168 = sub i64 %15167, 136
  %15169 = load i64, i64* %PC.i610
  %15170 = add i64 %15169, 6
  store i64 %15170, i64* %PC.i610
  %15171 = trunc i64 %15166 to i32
  %15172 = inttoptr i64 %15168 to i32*
  %15173 = load i32, i32* %15172
  %15174 = sub i32 %15171, %15173
  %15175 = zext i32 %15174 to i64
  store i64 %15175, i64* %RCX.i611, align 8
  %15176 = icmp ult i32 %15171, %15173
  %15177 = zext i1 %15176 to i8
  %15178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15177, i8* %15178, align 1
  %15179 = and i32 %15174, 255
  %15180 = call i32 @llvm.ctpop.i32(i32 %15179)
  %15181 = trunc i32 %15180 to i8
  %15182 = and i8 %15181, 1
  %15183 = xor i8 %15182, 1
  %15184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15183, i8* %15184, align 1
  %15185 = xor i32 %15173, %15171
  %15186 = xor i32 %15185, %15174
  %15187 = lshr i32 %15186, 4
  %15188 = trunc i32 %15187 to i8
  %15189 = and i8 %15188, 1
  %15190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15189, i8* %15190, align 1
  %15191 = icmp eq i32 %15174, 0
  %15192 = zext i1 %15191 to i8
  %15193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15192, i8* %15193, align 1
  %15194 = lshr i32 %15174, 31
  %15195 = trunc i32 %15194 to i8
  %15196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15195, i8* %15196, align 1
  %15197 = lshr i32 %15171, 31
  %15198 = lshr i32 %15173, 31
  %15199 = xor i32 %15198, %15197
  %15200 = xor i32 %15194, %15197
  %15201 = add i32 %15200, %15199
  %15202 = icmp eq i32 %15201, 2
  %15203 = zext i1 %15202 to i8
  %15204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15203, i8* %15204, align 1
  store %struct.Memory* %loadMem_43af2e, %struct.Memory** %MEMORY
  %loadMem_43af34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15206 = getelementptr inbounds %struct.GPR, %struct.GPR* %15205, i32 0, i32 33
  %15207 = getelementptr inbounds %struct.Reg, %struct.Reg* %15206, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %15207 to i64*
  %15208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15209 = getelementptr inbounds %struct.GPR, %struct.GPR* %15208, i32 0, i32 5
  %15210 = getelementptr inbounds %struct.Reg, %struct.Reg* %15209, i32 0, i32 0
  %ECX.i608 = bitcast %union.anon* %15210 to i32*
  %15211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15212 = getelementptr inbounds %struct.GPR, %struct.GPR* %15211, i32 0, i32 1
  %15213 = getelementptr inbounds %struct.Reg, %struct.Reg* %15212, i32 0, i32 0
  %RAX.i609 = bitcast %union.anon* %15213 to i64*
  %15214 = load i64, i64* %RAX.i609
  %15215 = load i32, i32* %ECX.i608
  %15216 = zext i32 %15215 to i64
  %15217 = load i64, i64* %PC.i607
  %15218 = add i64 %15217, 2
  store i64 %15218, i64* %PC.i607
  %15219 = trunc i64 %15214 to i32
  %15220 = add i32 %15215, %15219
  %15221 = zext i32 %15220 to i64
  store i64 %15221, i64* %RAX.i609, align 8
  %15222 = icmp ult i32 %15220, %15219
  %15223 = icmp ult i32 %15220, %15215
  %15224 = or i1 %15222, %15223
  %15225 = zext i1 %15224 to i8
  %15226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15225, i8* %15226, align 1
  %15227 = and i32 %15220, 255
  %15228 = call i32 @llvm.ctpop.i32(i32 %15227)
  %15229 = trunc i32 %15228 to i8
  %15230 = and i8 %15229, 1
  %15231 = xor i8 %15230, 1
  %15232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15231, i8* %15232, align 1
  %15233 = xor i64 %15216, %15214
  %15234 = trunc i64 %15233 to i32
  %15235 = xor i32 %15234, %15220
  %15236 = lshr i32 %15235, 4
  %15237 = trunc i32 %15236 to i8
  %15238 = and i8 %15237, 1
  %15239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15238, i8* %15239, align 1
  %15240 = icmp eq i32 %15220, 0
  %15241 = zext i1 %15240 to i8
  %15242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15241, i8* %15242, align 1
  %15243 = lshr i32 %15220, 31
  %15244 = trunc i32 %15243 to i8
  %15245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15244, i8* %15245, align 1
  %15246 = lshr i32 %15219, 31
  %15247 = lshr i32 %15215, 31
  %15248 = xor i32 %15243, %15246
  %15249 = xor i32 %15243, %15247
  %15250 = add i32 %15248, %15249
  %15251 = icmp eq i32 %15250, 2
  %15252 = zext i1 %15251 to i8
  %15253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15252, i8* %15253, align 1
  store %struct.Memory* %loadMem_43af34, %struct.Memory** %MEMORY
  %loadMem_43af36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15255 = getelementptr inbounds %struct.GPR, %struct.GPR* %15254, i32 0, i32 33
  %15256 = getelementptr inbounds %struct.Reg, %struct.Reg* %15255, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %15256 to i64*
  %15257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15258 = getelementptr inbounds %struct.GPR, %struct.GPR* %15257, i32 0, i32 1
  %15259 = getelementptr inbounds %struct.Reg, %struct.Reg* %15258, i32 0, i32 0
  %RAX.i606 = bitcast %union.anon* %15259 to i64*
  %15260 = load i64, i64* %RAX.i606
  %15261 = load i64, i64* %PC.i605
  %15262 = add i64 %15261, 3
  store i64 %15262, i64* %PC.i605
  %15263 = trunc i64 %15260 to i32
  %15264 = add i32 4, %15263
  %15265 = zext i32 %15264 to i64
  store i64 %15265, i64* %RAX.i606, align 8
  %15266 = icmp ult i32 %15264, %15263
  %15267 = icmp ult i32 %15264, 4
  %15268 = or i1 %15266, %15267
  %15269 = zext i1 %15268 to i8
  %15270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15269, i8* %15270, align 1
  %15271 = and i32 %15264, 255
  %15272 = call i32 @llvm.ctpop.i32(i32 %15271)
  %15273 = trunc i32 %15272 to i8
  %15274 = and i8 %15273, 1
  %15275 = xor i8 %15274, 1
  %15276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15275, i8* %15276, align 1
  %15277 = xor i64 4, %15260
  %15278 = trunc i64 %15277 to i32
  %15279 = xor i32 %15278, %15264
  %15280 = lshr i32 %15279, 4
  %15281 = trunc i32 %15280 to i8
  %15282 = and i8 %15281, 1
  %15283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15282, i8* %15283, align 1
  %15284 = icmp eq i32 %15264, 0
  %15285 = zext i1 %15284 to i8
  %15286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15285, i8* %15286, align 1
  %15287 = lshr i32 %15264, 31
  %15288 = trunc i32 %15287 to i8
  %15289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15288, i8* %15289, align 1
  %15290 = lshr i32 %15263, 31
  %15291 = xor i32 %15287, %15290
  %15292 = add i32 %15291, %15287
  %15293 = icmp eq i32 %15292, 2
  %15294 = zext i1 %15293 to i8
  %15295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15294, i8* %15295, align 1
  store %struct.Memory* %loadMem_43af36, %struct.Memory** %MEMORY
  %loadMem_43af39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15297 = getelementptr inbounds %struct.GPR, %struct.GPR* %15296, i32 0, i32 33
  %15298 = getelementptr inbounds %struct.Reg, %struct.Reg* %15297, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %15298 to i64*
  %15299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15300 = getelementptr inbounds %struct.GPR, %struct.GPR* %15299, i32 0, i32 1
  %15301 = getelementptr inbounds %struct.Reg, %struct.Reg* %15300, i32 0, i32 0
  %RAX.i604 = bitcast %union.anon* %15301 to i64*
  %15302 = load i64, i64* %RAX.i604
  %15303 = load i64, i64* %PC.i603
  %15304 = add i64 %15303, 3
  store i64 %15304, i64* %PC.i603
  %15305 = shl i64 %15302, 32
  %15306 = ashr exact i64 %15305, 32
  %15307 = ashr i64 %15306, 2
  %15308 = lshr i64 %15307, 1
  %15309 = trunc i64 %15307 to i8
  %15310 = and i8 %15309, 1
  %15311 = trunc i64 %15308 to i32
  %15312 = and i64 %15308, 4294967295
  store i64 %15312, i64* %RAX.i604, align 8
  %15313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15310, i8* %15313, align 1
  %15314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15315 = and i32 %15311, 255
  %15316 = call i32 @llvm.ctpop.i32(i32 %15315)
  %15317 = trunc i32 %15316 to i8
  %15318 = and i8 %15317, 1
  %15319 = xor i8 %15318, 1
  store i8 %15319, i8* %15314, align 1
  %15320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15320, align 1
  %15321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15322 = icmp eq i32 %15311, 0
  %15323 = zext i1 %15322 to i8
  store i8 %15323, i8* %15321, align 1
  %15324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15325 = lshr i32 %15311, 31
  %15326 = trunc i32 %15325 to i8
  store i8 %15326, i8* %15324, align 1
  %15327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15327, align 1
  store %struct.Memory* %loadMem_43af39, %struct.Memory** %MEMORY
  %loadMem_43af3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15329 = getelementptr inbounds %struct.GPR, %struct.GPR* %15328, i32 0, i32 33
  %15330 = getelementptr inbounds %struct.Reg, %struct.Reg* %15329, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %15330 to i64*
  %15331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15332 = getelementptr inbounds %struct.GPR, %struct.GPR* %15331, i32 0, i32 1
  %15333 = getelementptr inbounds %struct.Reg, %struct.Reg* %15332, i32 0, i32 0
  %EAX.i601 = bitcast %union.anon* %15333 to i32*
  %15334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15335 = getelementptr inbounds %struct.GPR, %struct.GPR* %15334, i32 0, i32 15
  %15336 = getelementptr inbounds %struct.Reg, %struct.Reg* %15335, i32 0, i32 0
  %RBP.i602 = bitcast %union.anon* %15336 to i64*
  %15337 = load i32, i32* %EAX.i601
  %15338 = zext i32 %15337 to i64
  %15339 = load i64, i64* %RBP.i602
  %15340 = sub i64 %15339, 104
  %15341 = load i64, i64* %PC.i600
  %15342 = add i64 %15341, 3
  store i64 %15342, i64* %PC.i600
  %15343 = inttoptr i64 %15340 to i32*
  %15344 = load i32, i32* %15343
  %15345 = sub i32 %15337, %15344
  %15346 = icmp ult i32 %15337, %15344
  %15347 = zext i1 %15346 to i8
  %15348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15347, i8* %15348, align 1
  %15349 = and i32 %15345, 255
  %15350 = call i32 @llvm.ctpop.i32(i32 %15349)
  %15351 = trunc i32 %15350 to i8
  %15352 = and i8 %15351, 1
  %15353 = xor i8 %15352, 1
  %15354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15353, i8* %15354, align 1
  %15355 = xor i32 %15344, %15337
  %15356 = xor i32 %15355, %15345
  %15357 = lshr i32 %15356, 4
  %15358 = trunc i32 %15357 to i8
  %15359 = and i8 %15358, 1
  %15360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15359, i8* %15360, align 1
  %15361 = icmp eq i32 %15345, 0
  %15362 = zext i1 %15361 to i8
  %15363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15362, i8* %15363, align 1
  %15364 = lshr i32 %15345, 31
  %15365 = trunc i32 %15364 to i8
  %15366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15365, i8* %15366, align 1
  %15367 = lshr i32 %15337, 31
  %15368 = lshr i32 %15344, 31
  %15369 = xor i32 %15368, %15367
  %15370 = xor i32 %15364, %15367
  %15371 = add i32 %15370, %15369
  %15372 = icmp eq i32 %15371, 2
  %15373 = zext i1 %15372 to i8
  %15374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15373, i8* %15374, align 1
  store %struct.Memory* %loadMem_43af3c, %struct.Memory** %MEMORY
  %loadMem_43af3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15376 = getelementptr inbounds %struct.GPR, %struct.GPR* %15375, i32 0, i32 33
  %15377 = getelementptr inbounds %struct.Reg, %struct.Reg* %15376, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %15377 to i64*
  %15378 = load i64, i64* %PC.i599
  %15379 = add i64 %15378, 20
  %15380 = load i64, i64* %PC.i599
  %15381 = add i64 %15380, 6
  %15382 = load i64, i64* %PC.i599
  %15383 = add i64 %15382, 6
  store i64 %15383, i64* %PC.i599
  %15384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15385 = load i8, i8* %15384, align 1
  %15386 = icmp ne i8 %15385, 0
  %15387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15388 = load i8, i8* %15387, align 1
  %15389 = icmp ne i8 %15388, 0
  %15390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15391 = load i8, i8* %15390, align 1
  %15392 = icmp ne i8 %15391, 0
  %15393 = xor i1 %15389, %15392
  %15394 = or i1 %15386, %15393
  %15395 = zext i1 %15394 to i8
  store i8 %15395, i8* %BRANCH_TAKEN, align 1
  %15396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15397 = select i1 %15394, i64 %15379, i64 %15381
  store i64 %15397, i64* %15396, align 8
  store %struct.Memory* %loadMem_43af3f, %struct.Memory** %MEMORY
  %loadBr_43af3f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43af3f = icmp eq i8 %loadBr_43af3f, 1
  br i1 %cmpBr_43af3f, label %block_.L_43af53, label %block_43af45

block_43af45:                                     ; preds = %block_.L_43af25
  %loadMem_43af45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15399 = getelementptr inbounds %struct.GPR, %struct.GPR* %15398, i32 0, i32 33
  %15400 = getelementptr inbounds %struct.Reg, %struct.Reg* %15399, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %15400 to i64*
  %15401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15402 = getelementptr inbounds %struct.GPR, %struct.GPR* %15401, i32 0, i32 1
  %15403 = getelementptr inbounds %struct.Reg, %struct.Reg* %15402, i32 0, i32 0
  %RAX.i597 = bitcast %union.anon* %15403 to i64*
  %15404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15405 = getelementptr inbounds %struct.GPR, %struct.GPR* %15404, i32 0, i32 15
  %15406 = getelementptr inbounds %struct.Reg, %struct.Reg* %15405, i32 0, i32 0
  %RBP.i598 = bitcast %union.anon* %15406 to i64*
  %15407 = load i64, i64* %RBP.i598
  %15408 = sub i64 %15407, 104
  %15409 = load i64, i64* %PC.i596
  %15410 = add i64 %15409, 3
  store i64 %15410, i64* %PC.i596
  %15411 = inttoptr i64 %15408 to i32*
  %15412 = load i32, i32* %15411
  %15413 = zext i32 %15412 to i64
  store i64 %15413, i64* %RAX.i597, align 8
  store %struct.Memory* %loadMem_43af45, %struct.Memory** %MEMORY
  %loadMem_43af48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15415 = getelementptr inbounds %struct.GPR, %struct.GPR* %15414, i32 0, i32 33
  %15416 = getelementptr inbounds %struct.Reg, %struct.Reg* %15415, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %15416 to i64*
  %15417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15418 = getelementptr inbounds %struct.GPR, %struct.GPR* %15417, i32 0, i32 1
  %15419 = getelementptr inbounds %struct.Reg, %struct.Reg* %15418, i32 0, i32 0
  %EAX.i594 = bitcast %union.anon* %15419 to i32*
  %15420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15421 = getelementptr inbounds %struct.GPR, %struct.GPR* %15420, i32 0, i32 15
  %15422 = getelementptr inbounds %struct.Reg, %struct.Reg* %15421, i32 0, i32 0
  %RBP.i595 = bitcast %union.anon* %15422 to i64*
  %15423 = load i64, i64* %RBP.i595
  %15424 = sub i64 %15423, 464
  %15425 = load i32, i32* %EAX.i594
  %15426 = zext i32 %15425 to i64
  %15427 = load i64, i64* %PC.i593
  %15428 = add i64 %15427, 6
  store i64 %15428, i64* %PC.i593
  %15429 = inttoptr i64 %15424 to i32*
  store i32 %15425, i32* %15429
  store %struct.Memory* %loadMem_43af48, %struct.Memory** %MEMORY
  %loadMem_43af4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15431 = getelementptr inbounds %struct.GPR, %struct.GPR* %15430, i32 0, i32 33
  %15432 = getelementptr inbounds %struct.Reg, %struct.Reg* %15431, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %15432 to i64*
  %15433 = load i64, i64* %PC.i592
  %15434 = add i64 %15433, 34
  %15435 = load i64, i64* %PC.i592
  %15436 = add i64 %15435, 5
  store i64 %15436, i64* %PC.i592
  %15437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15434, i64* %15437, align 8
  store %struct.Memory* %loadMem_43af4e, %struct.Memory** %MEMORY
  br label %block_.L_43af70

block_.L_43af53:                                  ; preds = %block_.L_43af25
  %loadMem_43af53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15439 = getelementptr inbounds %struct.GPR, %struct.GPR* %15438, i32 0, i32 33
  %15440 = getelementptr inbounds %struct.Reg, %struct.Reg* %15439, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %15440 to i64*
  %15441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15442 = getelementptr inbounds %struct.GPR, %struct.GPR* %15441, i32 0, i32 1
  %15443 = getelementptr inbounds %struct.Reg, %struct.Reg* %15442, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %15443 to i64*
  %15444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15445 = getelementptr inbounds %struct.GPR, %struct.GPR* %15444, i32 0, i32 15
  %15446 = getelementptr inbounds %struct.Reg, %struct.Reg* %15445, i32 0, i32 0
  %RBP.i591 = bitcast %union.anon* %15446 to i64*
  %15447 = load i64, i64* %RBP.i591
  %15448 = sub i64 %15447, 108
  %15449 = load i64, i64* %PC.i589
  %15450 = add i64 %15449, 3
  store i64 %15450, i64* %PC.i589
  %15451 = inttoptr i64 %15448 to i32*
  %15452 = load i32, i32* %15451
  %15453 = zext i32 %15452 to i64
  store i64 %15453, i64* %RAX.i590, align 8
  store %struct.Memory* %loadMem_43af53, %struct.Memory** %MEMORY
  %loadMem_43af56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15455 = getelementptr inbounds %struct.GPR, %struct.GPR* %15454, i32 0, i32 33
  %15456 = getelementptr inbounds %struct.Reg, %struct.Reg* %15455, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %15456 to i64*
  %15457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15458 = getelementptr inbounds %struct.GPR, %struct.GPR* %15457, i32 0, i32 1
  %15459 = getelementptr inbounds %struct.Reg, %struct.Reg* %15458, i32 0, i32 0
  %RAX.i588 = bitcast %union.anon* %15459 to i64*
  %15460 = load i64, i64* %RAX.i588
  %15461 = load i64, i64* %PC.i587
  %15462 = add i64 %15461, 3
  store i64 %15462, i64* %PC.i587
  %15463 = and i64 %15460, 4294967295
  %15464 = shl i64 %15463, 1
  %15465 = trunc i64 %15464 to i32
  %15466 = icmp slt i32 %15465, 0
  %15467 = shl i32 %15465, 1
  %15468 = zext i32 %15467 to i64
  store i64 %15468, i64* %RAX.i588, align 8
  %15469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15470 = zext i1 %15466 to i8
  store i8 %15470, i8* %15469, align 1
  %15471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15472 = and i32 %15467, 254
  %15473 = call i32 @llvm.ctpop.i32(i32 %15472)
  %15474 = trunc i32 %15473 to i8
  %15475 = and i8 %15474, 1
  %15476 = xor i8 %15475, 1
  store i8 %15476, i8* %15471, align 1
  %15477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15477, align 1
  %15478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15479 = icmp eq i32 %15467, 0
  %15480 = zext i1 %15479 to i8
  store i8 %15480, i8* %15478, align 1
  %15481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15482 = lshr i32 %15467, 31
  %15483 = trunc i32 %15482 to i8
  store i8 %15483, i8* %15481, align 1
  %15484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15484, align 1
  store %struct.Memory* %loadMem_43af56, %struct.Memory** %MEMORY
  %loadMem_43af59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15486 = getelementptr inbounds %struct.GPR, %struct.GPR* %15485, i32 0, i32 33
  %15487 = getelementptr inbounds %struct.Reg, %struct.Reg* %15486, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %15487 to i64*
  %15488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15489 = getelementptr inbounds %struct.GPR, %struct.GPR* %15488, i32 0, i32 5
  %15490 = getelementptr inbounds %struct.Reg, %struct.Reg* %15489, i32 0, i32 0
  %RCX.i585 = bitcast %union.anon* %15490 to i64*
  %15491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15492 = getelementptr inbounds %struct.GPR, %struct.GPR* %15491, i32 0, i32 15
  %15493 = getelementptr inbounds %struct.Reg, %struct.Reg* %15492, i32 0, i32 0
  %RBP.i586 = bitcast %union.anon* %15493 to i64*
  %15494 = load i64, i64* %RBP.i586
  %15495 = sub i64 %15494, 124
  %15496 = load i64, i64* %PC.i584
  %15497 = add i64 %15496, 3
  store i64 %15497, i64* %PC.i584
  %15498 = inttoptr i64 %15495 to i32*
  %15499 = load i32, i32* %15498
  %15500 = zext i32 %15499 to i64
  store i64 %15500, i64* %RCX.i585, align 8
  store %struct.Memory* %loadMem_43af59, %struct.Memory** %MEMORY
  %loadMem_43af5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15502 = getelementptr inbounds %struct.GPR, %struct.GPR* %15501, i32 0, i32 33
  %15503 = getelementptr inbounds %struct.Reg, %struct.Reg* %15502, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %15503 to i64*
  %15504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15505 = getelementptr inbounds %struct.GPR, %struct.GPR* %15504, i32 0, i32 5
  %15506 = getelementptr inbounds %struct.Reg, %struct.Reg* %15505, i32 0, i32 0
  %RCX.i582 = bitcast %union.anon* %15506 to i64*
  %15507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15508 = getelementptr inbounds %struct.GPR, %struct.GPR* %15507, i32 0, i32 15
  %15509 = getelementptr inbounds %struct.Reg, %struct.Reg* %15508, i32 0, i32 0
  %RBP.i583 = bitcast %union.anon* %15509 to i64*
  %15510 = load i64, i64* %RCX.i582
  %15511 = load i64, i64* %RBP.i583
  %15512 = sub i64 %15511, 136
  %15513 = load i64, i64* %PC.i581
  %15514 = add i64 %15513, 6
  store i64 %15514, i64* %PC.i581
  %15515 = trunc i64 %15510 to i32
  %15516 = inttoptr i64 %15512 to i32*
  %15517 = load i32, i32* %15516
  %15518 = sub i32 %15515, %15517
  %15519 = zext i32 %15518 to i64
  store i64 %15519, i64* %RCX.i582, align 8
  %15520 = icmp ult i32 %15515, %15517
  %15521 = zext i1 %15520 to i8
  %15522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15521, i8* %15522, align 1
  %15523 = and i32 %15518, 255
  %15524 = call i32 @llvm.ctpop.i32(i32 %15523)
  %15525 = trunc i32 %15524 to i8
  %15526 = and i8 %15525, 1
  %15527 = xor i8 %15526, 1
  %15528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15527, i8* %15528, align 1
  %15529 = xor i32 %15517, %15515
  %15530 = xor i32 %15529, %15518
  %15531 = lshr i32 %15530, 4
  %15532 = trunc i32 %15531 to i8
  %15533 = and i8 %15532, 1
  %15534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15533, i8* %15534, align 1
  %15535 = icmp eq i32 %15518, 0
  %15536 = zext i1 %15535 to i8
  %15537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15536, i8* %15537, align 1
  %15538 = lshr i32 %15518, 31
  %15539 = trunc i32 %15538 to i8
  %15540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15539, i8* %15540, align 1
  %15541 = lshr i32 %15515, 31
  %15542 = lshr i32 %15517, 31
  %15543 = xor i32 %15542, %15541
  %15544 = xor i32 %15538, %15541
  %15545 = add i32 %15544, %15543
  %15546 = icmp eq i32 %15545, 2
  %15547 = zext i1 %15546 to i8
  %15548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15547, i8* %15548, align 1
  store %struct.Memory* %loadMem_43af5c, %struct.Memory** %MEMORY
  %loadMem_43af62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15550 = getelementptr inbounds %struct.GPR, %struct.GPR* %15549, i32 0, i32 33
  %15551 = getelementptr inbounds %struct.Reg, %struct.Reg* %15550, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %15551 to i64*
  %15552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15553 = getelementptr inbounds %struct.GPR, %struct.GPR* %15552, i32 0, i32 5
  %15554 = getelementptr inbounds %struct.Reg, %struct.Reg* %15553, i32 0, i32 0
  %ECX.i579 = bitcast %union.anon* %15554 to i32*
  %15555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15556 = getelementptr inbounds %struct.GPR, %struct.GPR* %15555, i32 0, i32 1
  %15557 = getelementptr inbounds %struct.Reg, %struct.Reg* %15556, i32 0, i32 0
  %RAX.i580 = bitcast %union.anon* %15557 to i64*
  %15558 = load i64, i64* %RAX.i580
  %15559 = load i32, i32* %ECX.i579
  %15560 = zext i32 %15559 to i64
  %15561 = load i64, i64* %PC.i578
  %15562 = add i64 %15561, 2
  store i64 %15562, i64* %PC.i578
  %15563 = trunc i64 %15558 to i32
  %15564 = add i32 %15559, %15563
  %15565 = zext i32 %15564 to i64
  store i64 %15565, i64* %RAX.i580, align 8
  %15566 = icmp ult i32 %15564, %15563
  %15567 = icmp ult i32 %15564, %15559
  %15568 = or i1 %15566, %15567
  %15569 = zext i1 %15568 to i8
  %15570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15569, i8* %15570, align 1
  %15571 = and i32 %15564, 255
  %15572 = call i32 @llvm.ctpop.i32(i32 %15571)
  %15573 = trunc i32 %15572 to i8
  %15574 = and i8 %15573, 1
  %15575 = xor i8 %15574, 1
  %15576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15575, i8* %15576, align 1
  %15577 = xor i64 %15560, %15558
  %15578 = trunc i64 %15577 to i32
  %15579 = xor i32 %15578, %15564
  %15580 = lshr i32 %15579, 4
  %15581 = trunc i32 %15580 to i8
  %15582 = and i8 %15581, 1
  %15583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15582, i8* %15583, align 1
  %15584 = icmp eq i32 %15564, 0
  %15585 = zext i1 %15584 to i8
  %15586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15585, i8* %15586, align 1
  %15587 = lshr i32 %15564, 31
  %15588 = trunc i32 %15587 to i8
  %15589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15588, i8* %15589, align 1
  %15590 = lshr i32 %15563, 31
  %15591 = lshr i32 %15559, 31
  %15592 = xor i32 %15587, %15590
  %15593 = xor i32 %15587, %15591
  %15594 = add i32 %15592, %15593
  %15595 = icmp eq i32 %15594, 2
  %15596 = zext i1 %15595 to i8
  %15597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15596, i8* %15597, align 1
  store %struct.Memory* %loadMem_43af62, %struct.Memory** %MEMORY
  %loadMem_43af64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15599 = getelementptr inbounds %struct.GPR, %struct.GPR* %15598, i32 0, i32 33
  %15600 = getelementptr inbounds %struct.Reg, %struct.Reg* %15599, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %15600 to i64*
  %15601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15602 = getelementptr inbounds %struct.GPR, %struct.GPR* %15601, i32 0, i32 1
  %15603 = getelementptr inbounds %struct.Reg, %struct.Reg* %15602, i32 0, i32 0
  %RAX.i577 = bitcast %union.anon* %15603 to i64*
  %15604 = load i64, i64* %RAX.i577
  %15605 = load i64, i64* %PC.i576
  %15606 = add i64 %15605, 3
  store i64 %15606, i64* %PC.i576
  %15607 = trunc i64 %15604 to i32
  %15608 = add i32 4, %15607
  %15609 = zext i32 %15608 to i64
  store i64 %15609, i64* %RAX.i577, align 8
  %15610 = icmp ult i32 %15608, %15607
  %15611 = icmp ult i32 %15608, 4
  %15612 = or i1 %15610, %15611
  %15613 = zext i1 %15612 to i8
  %15614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15613, i8* %15614, align 1
  %15615 = and i32 %15608, 255
  %15616 = call i32 @llvm.ctpop.i32(i32 %15615)
  %15617 = trunc i32 %15616 to i8
  %15618 = and i8 %15617, 1
  %15619 = xor i8 %15618, 1
  %15620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15619, i8* %15620, align 1
  %15621 = xor i64 4, %15604
  %15622 = trunc i64 %15621 to i32
  %15623 = xor i32 %15622, %15608
  %15624 = lshr i32 %15623, 4
  %15625 = trunc i32 %15624 to i8
  %15626 = and i8 %15625, 1
  %15627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15626, i8* %15627, align 1
  %15628 = icmp eq i32 %15608, 0
  %15629 = zext i1 %15628 to i8
  %15630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15629, i8* %15630, align 1
  %15631 = lshr i32 %15608, 31
  %15632 = trunc i32 %15631 to i8
  %15633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15632, i8* %15633, align 1
  %15634 = lshr i32 %15607, 31
  %15635 = xor i32 %15631, %15634
  %15636 = add i32 %15635, %15631
  %15637 = icmp eq i32 %15636, 2
  %15638 = zext i1 %15637 to i8
  %15639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15638, i8* %15639, align 1
  store %struct.Memory* %loadMem_43af64, %struct.Memory** %MEMORY
  %loadMem_43af67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15641 = getelementptr inbounds %struct.GPR, %struct.GPR* %15640, i32 0, i32 33
  %15642 = getelementptr inbounds %struct.Reg, %struct.Reg* %15641, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %15642 to i64*
  %15643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15644 = getelementptr inbounds %struct.GPR, %struct.GPR* %15643, i32 0, i32 1
  %15645 = getelementptr inbounds %struct.Reg, %struct.Reg* %15644, i32 0, i32 0
  %RAX.i575 = bitcast %union.anon* %15645 to i64*
  %15646 = load i64, i64* %RAX.i575
  %15647 = load i64, i64* %PC.i574
  %15648 = add i64 %15647, 3
  store i64 %15648, i64* %PC.i574
  %15649 = shl i64 %15646, 32
  %15650 = ashr exact i64 %15649, 32
  %15651 = ashr i64 %15650, 2
  %15652 = lshr i64 %15651, 1
  %15653 = trunc i64 %15651 to i8
  %15654 = and i8 %15653, 1
  %15655 = trunc i64 %15652 to i32
  %15656 = and i64 %15652, 4294967295
  store i64 %15656, i64* %RAX.i575, align 8
  %15657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15654, i8* %15657, align 1
  %15658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15659 = and i32 %15655, 255
  %15660 = call i32 @llvm.ctpop.i32(i32 %15659)
  %15661 = trunc i32 %15660 to i8
  %15662 = and i8 %15661, 1
  %15663 = xor i8 %15662, 1
  store i8 %15663, i8* %15658, align 1
  %15664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15664, align 1
  %15665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15666 = icmp eq i32 %15655, 0
  %15667 = zext i1 %15666 to i8
  store i8 %15667, i8* %15665, align 1
  %15668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15669 = lshr i32 %15655, 31
  %15670 = trunc i32 %15669 to i8
  store i8 %15670, i8* %15668, align 1
  %15671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15671, align 1
  store %struct.Memory* %loadMem_43af67, %struct.Memory** %MEMORY
  %loadMem_43af6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15673 = getelementptr inbounds %struct.GPR, %struct.GPR* %15672, i32 0, i32 33
  %15674 = getelementptr inbounds %struct.Reg, %struct.Reg* %15673, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %15674 to i64*
  %15675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15676 = getelementptr inbounds %struct.GPR, %struct.GPR* %15675, i32 0, i32 1
  %15677 = getelementptr inbounds %struct.Reg, %struct.Reg* %15676, i32 0, i32 0
  %EAX.i572 = bitcast %union.anon* %15677 to i32*
  %15678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15679 = getelementptr inbounds %struct.GPR, %struct.GPR* %15678, i32 0, i32 15
  %15680 = getelementptr inbounds %struct.Reg, %struct.Reg* %15679, i32 0, i32 0
  %RBP.i573 = bitcast %union.anon* %15680 to i64*
  %15681 = load i64, i64* %RBP.i573
  %15682 = sub i64 %15681, 464
  %15683 = load i32, i32* %EAX.i572
  %15684 = zext i32 %15683 to i64
  %15685 = load i64, i64* %PC.i571
  %15686 = add i64 %15685, 6
  store i64 %15686, i64* %PC.i571
  %15687 = inttoptr i64 %15682 to i32*
  store i32 %15683, i32* %15687
  store %struct.Memory* %loadMem_43af6a, %struct.Memory** %MEMORY
  br label %block_.L_43af70

block_.L_43af70:                                  ; preds = %block_.L_43af53, %block_43af45
  %loadMem_43af70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15689 = getelementptr inbounds %struct.GPR, %struct.GPR* %15688, i32 0, i32 33
  %15690 = getelementptr inbounds %struct.Reg, %struct.Reg* %15689, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %15690 to i64*
  %15691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15692 = getelementptr inbounds %struct.GPR, %struct.GPR* %15691, i32 0, i32 1
  %15693 = getelementptr inbounds %struct.Reg, %struct.Reg* %15692, i32 0, i32 0
  %RAX.i569 = bitcast %union.anon* %15693 to i64*
  %15694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15695 = getelementptr inbounds %struct.GPR, %struct.GPR* %15694, i32 0, i32 15
  %15696 = getelementptr inbounds %struct.Reg, %struct.Reg* %15695, i32 0, i32 0
  %RBP.i570 = bitcast %union.anon* %15696 to i64*
  %15697 = load i64, i64* %RBP.i570
  %15698 = sub i64 %15697, 464
  %15699 = load i64, i64* %PC.i568
  %15700 = add i64 %15699, 6
  store i64 %15700, i64* %PC.i568
  %15701 = inttoptr i64 %15698 to i32*
  %15702 = load i32, i32* %15701
  %15703 = zext i32 %15702 to i64
  store i64 %15703, i64* %RAX.i569, align 8
  store %struct.Memory* %loadMem_43af70, %struct.Memory** %MEMORY
  %loadMem_43af76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15705 = getelementptr inbounds %struct.GPR, %struct.GPR* %15704, i32 0, i32 33
  %15706 = getelementptr inbounds %struct.Reg, %struct.Reg* %15705, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %15706 to i64*
  %15707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15708 = getelementptr inbounds %struct.GPR, %struct.GPR* %15707, i32 0, i32 1
  %15709 = getelementptr inbounds %struct.Reg, %struct.Reg* %15708, i32 0, i32 0
  %EAX.i566 = bitcast %union.anon* %15709 to i32*
  %15710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15711 = getelementptr inbounds %struct.GPR, %struct.GPR* %15710, i32 0, i32 15
  %15712 = getelementptr inbounds %struct.Reg, %struct.Reg* %15711, i32 0, i32 0
  %RBP.i567 = bitcast %union.anon* %15712 to i64*
  %15713 = load i64, i64* %RBP.i567
  %15714 = sub i64 %15713, 460
  %15715 = load i32, i32* %EAX.i566
  %15716 = zext i32 %15715 to i64
  %15717 = load i64, i64* %PC.i565
  %15718 = add i64 %15717, 6
  store i64 %15718, i64* %PC.i565
  %15719 = inttoptr i64 %15714 to i32*
  store i32 %15715, i32* %15719
  store %struct.Memory* %loadMem_43af76, %struct.Memory** %MEMORY
  br label %block_.L_43af7c

block_.L_43af7c:                                  ; preds = %block_.L_43af70, %block_43af15
  %loadMem_43af7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15721 = getelementptr inbounds %struct.GPR, %struct.GPR* %15720, i32 0, i32 33
  %15722 = getelementptr inbounds %struct.Reg, %struct.Reg* %15721, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %15722 to i64*
  %15723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15724 = getelementptr inbounds %struct.GPR, %struct.GPR* %15723, i32 0, i32 1
  %15725 = getelementptr inbounds %struct.Reg, %struct.Reg* %15724, i32 0, i32 0
  %RAX.i563 = bitcast %union.anon* %15725 to i64*
  %15726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15727 = getelementptr inbounds %struct.GPR, %struct.GPR* %15726, i32 0, i32 15
  %15728 = getelementptr inbounds %struct.Reg, %struct.Reg* %15727, i32 0, i32 0
  %RBP.i564 = bitcast %union.anon* %15728 to i64*
  %15729 = load i64, i64* %RBP.i564
  %15730 = sub i64 %15729, 460
  %15731 = load i64, i64* %PC.i562
  %15732 = add i64 %15731, 6
  store i64 %15732, i64* %PC.i562
  %15733 = inttoptr i64 %15730 to i32*
  %15734 = load i32, i32* %15733
  %15735 = zext i32 %15734 to i64
  store i64 %15735, i64* %RAX.i563, align 8
  store %struct.Memory* %loadMem_43af7c, %struct.Memory** %MEMORY
  %loadMem_43af82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15737 = getelementptr inbounds %struct.GPR, %struct.GPR* %15736, i32 0, i32 33
  %15738 = getelementptr inbounds %struct.Reg, %struct.Reg* %15737, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %15738 to i64*
  %15739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15740 = getelementptr inbounds %struct.GPR, %struct.GPR* %15739, i32 0, i32 1
  %15741 = getelementptr inbounds %struct.Reg, %struct.Reg* %15740, i32 0, i32 0
  %EAX.i560 = bitcast %union.anon* %15741 to i32*
  %15742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15743 = getelementptr inbounds %struct.GPR, %struct.GPR* %15742, i32 0, i32 15
  %15744 = getelementptr inbounds %struct.Reg, %struct.Reg* %15743, i32 0, i32 0
  %RBP.i561 = bitcast %union.anon* %15744 to i64*
  %15745 = load i64, i64* %RBP.i561
  %15746 = sub i64 %15745, 112
  %15747 = load i32, i32* %EAX.i560
  %15748 = zext i32 %15747 to i64
  %15749 = load i64, i64* %PC.i559
  %15750 = add i64 %15749, 3
  store i64 %15750, i64* %PC.i559
  %15751 = inttoptr i64 %15746 to i32*
  store i32 %15747, i32* %15751
  store %struct.Memory* %loadMem_43af82, %struct.Memory** %MEMORY
  %loadMem_43af85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15753 = getelementptr inbounds %struct.GPR, %struct.GPR* %15752, i32 0, i32 33
  %15754 = getelementptr inbounds %struct.Reg, %struct.Reg* %15753, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %15754 to i64*
  %15755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15756 = getelementptr inbounds %struct.GPR, %struct.GPR* %15755, i32 0, i32 15
  %15757 = getelementptr inbounds %struct.Reg, %struct.Reg* %15756, i32 0, i32 0
  %RBP.i558 = bitcast %union.anon* %15757 to i64*
  %15758 = load i64, i64* %RBP.i558
  %15759 = sub i64 %15758, 68
  %15760 = load i64, i64* %PC.i557
  %15761 = add i64 %15760, 4
  store i64 %15761, i64* %PC.i557
  %15762 = inttoptr i64 %15759 to i32*
  %15763 = load i32, i32* %15762
  %15764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15764, align 1
  %15765 = and i32 %15763, 255
  %15766 = call i32 @llvm.ctpop.i32(i32 %15765)
  %15767 = trunc i32 %15766 to i8
  %15768 = and i8 %15767, 1
  %15769 = xor i8 %15768, 1
  %15770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15769, i8* %15770, align 1
  %15771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15771, align 1
  %15772 = icmp eq i32 %15763, 0
  %15773 = zext i1 %15772 to i8
  %15774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15773, i8* %15774, align 1
  %15775 = lshr i32 %15763, 31
  %15776 = trunc i32 %15775 to i8
  %15777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15776, i8* %15777, align 1
  %15778 = lshr i32 %15763, 31
  %15779 = xor i32 %15775, %15778
  %15780 = add i32 %15779, %15778
  %15781 = icmp eq i32 %15780, 2
  %15782 = zext i1 %15781 to i8
  %15783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15782, i8* %15783, align 1
  store %struct.Memory* %loadMem_43af85, %struct.Memory** %MEMORY
  %loadMem_43af89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15785 = getelementptr inbounds %struct.GPR, %struct.GPR* %15784, i32 0, i32 33
  %15786 = getelementptr inbounds %struct.Reg, %struct.Reg* %15785, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %15786 to i64*
  %15787 = load i64, i64* %PC.i556
  %15788 = add i64 %15787, 248
  %15789 = load i64, i64* %PC.i556
  %15790 = add i64 %15789, 6
  %15791 = load i64, i64* %PC.i556
  %15792 = add i64 %15791, 6
  store i64 %15792, i64* %PC.i556
  %15793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15794 = load i8, i8* %15793, align 1
  %15795 = icmp eq i8 %15794, 0
  %15796 = zext i1 %15795 to i8
  store i8 %15796, i8* %BRANCH_TAKEN, align 1
  %15797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15798 = select i1 %15795, i64 %15788, i64 %15790
  store i64 %15798, i64* %15797, align 8
  store %struct.Memory* %loadMem_43af89, %struct.Memory** %MEMORY
  %loadBr_43af89 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43af89 = icmp eq i8 %loadBr_43af89, 1
  br i1 %cmpBr_43af89, label %block_.L_43b081, label %block_43af8f

block_43af8f:                                     ; preds = %block_.L_43af7c
  %loadMem_43af8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15800 = getelementptr inbounds %struct.GPR, %struct.GPR* %15799, i32 0, i32 33
  %15801 = getelementptr inbounds %struct.Reg, %struct.Reg* %15800, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %15801 to i64*
  %15802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15803 = getelementptr inbounds %struct.GPR, %struct.GPR* %15802, i32 0, i32 1
  %15804 = getelementptr inbounds %struct.Reg, %struct.Reg* %15803, i32 0, i32 0
  %RAX.i554 = bitcast %union.anon* %15804 to i64*
  %15805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15806 = getelementptr inbounds %struct.GPR, %struct.GPR* %15805, i32 0, i32 15
  %15807 = getelementptr inbounds %struct.Reg, %struct.Reg* %15806, i32 0, i32 0
  %RBP.i555 = bitcast %union.anon* %15807 to i64*
  %15808 = load i64, i64* %RBP.i555
  %15809 = sub i64 %15808, 128
  %15810 = load i64, i64* %PC.i553
  %15811 = add i64 %15810, 3
  store i64 %15811, i64* %PC.i553
  %15812 = inttoptr i64 %15809 to i32*
  %15813 = load i32, i32* %15812
  %15814 = zext i32 %15813 to i64
  store i64 %15814, i64* %RAX.i554, align 8
  store %struct.Memory* %loadMem_43af8f, %struct.Memory** %MEMORY
  %loadMem_43af92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15816 = getelementptr inbounds %struct.GPR, %struct.GPR* %15815, i32 0, i32 33
  %15817 = getelementptr inbounds %struct.Reg, %struct.Reg* %15816, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %15817 to i64*
  %15818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15819 = getelementptr inbounds %struct.GPR, %struct.GPR* %15818, i32 0, i32 1
  %15820 = getelementptr inbounds %struct.Reg, %struct.Reg* %15819, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %15820 to i64*
  %15821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15822 = getelementptr inbounds %struct.GPR, %struct.GPR* %15821, i32 0, i32 15
  %15823 = getelementptr inbounds %struct.Reg, %struct.Reg* %15822, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %15823 to i64*
  %15824 = load i64, i64* %RAX.i551
  %15825 = load i64, i64* %RBP.i552
  %15826 = sub i64 %15825, 112
  %15827 = load i64, i64* %PC.i550
  %15828 = add i64 %15827, 3
  store i64 %15828, i64* %PC.i550
  %15829 = trunc i64 %15824 to i32
  %15830 = inttoptr i64 %15826 to i32*
  %15831 = load i32, i32* %15830
  %15832 = add i32 %15831, %15829
  %15833 = zext i32 %15832 to i64
  store i64 %15833, i64* %RAX.i551, align 8
  %15834 = icmp ult i32 %15832, %15829
  %15835 = icmp ult i32 %15832, %15831
  %15836 = or i1 %15834, %15835
  %15837 = zext i1 %15836 to i8
  %15838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15837, i8* %15838, align 1
  %15839 = and i32 %15832, 255
  %15840 = call i32 @llvm.ctpop.i32(i32 %15839)
  %15841 = trunc i32 %15840 to i8
  %15842 = and i8 %15841, 1
  %15843 = xor i8 %15842, 1
  %15844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15843, i8* %15844, align 1
  %15845 = xor i32 %15831, %15829
  %15846 = xor i32 %15845, %15832
  %15847 = lshr i32 %15846, 4
  %15848 = trunc i32 %15847 to i8
  %15849 = and i8 %15848, 1
  %15850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15849, i8* %15850, align 1
  %15851 = icmp eq i32 %15832, 0
  %15852 = zext i1 %15851 to i8
  %15853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15852, i8* %15853, align 1
  %15854 = lshr i32 %15832, 31
  %15855 = trunc i32 %15854 to i8
  %15856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15855, i8* %15856, align 1
  %15857 = lshr i32 %15829, 31
  %15858 = lshr i32 %15831, 31
  %15859 = xor i32 %15854, %15857
  %15860 = xor i32 %15854, %15858
  %15861 = add i32 %15859, %15860
  %15862 = icmp eq i32 %15861, 2
  %15863 = zext i1 %15862 to i8
  %15864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15863, i8* %15864, align 1
  store %struct.Memory* %loadMem_43af92, %struct.Memory** %MEMORY
  %loadMem_43af95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15866 = getelementptr inbounds %struct.GPR, %struct.GPR* %15865, i32 0, i32 33
  %15867 = getelementptr inbounds %struct.Reg, %struct.Reg* %15866, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %15867 to i64*
  %15868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15869 = getelementptr inbounds %struct.GPR, %struct.GPR* %15868, i32 0, i32 1
  %15870 = getelementptr inbounds %struct.Reg, %struct.Reg* %15869, i32 0, i32 0
  %EAX.i549 = bitcast %union.anon* %15870 to i32*
  %15871 = load i32, i32* %EAX.i549
  %15872 = zext i32 %15871 to i64
  %15873 = load i64, i64* %PC.i548
  %15874 = add i64 %15873, 3
  store i64 %15874, i64* %PC.i548
  %15875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15875, align 1
  %15876 = and i32 %15871, 255
  %15877 = call i32 @llvm.ctpop.i32(i32 %15876)
  %15878 = trunc i32 %15877 to i8
  %15879 = and i8 %15878, 1
  %15880 = xor i8 %15879, 1
  %15881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15880, i8* %15881, align 1
  %15882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15882, align 1
  %15883 = icmp eq i32 %15871, 0
  %15884 = zext i1 %15883 to i8
  %15885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15884, i8* %15885, align 1
  %15886 = lshr i32 %15871, 31
  %15887 = trunc i32 %15886 to i8
  %15888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15887, i8* %15888, align 1
  %15889 = lshr i32 %15871, 31
  %15890 = xor i32 %15886, %15889
  %15891 = add i32 %15890, %15889
  %15892 = icmp eq i32 %15891, 2
  %15893 = zext i1 %15892 to i8
  %15894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15893, i8* %15894, align 1
  store %struct.Memory* %loadMem_43af95, %struct.Memory** %MEMORY
  %loadMem_43af98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15896 = getelementptr inbounds %struct.GPR, %struct.GPR* %15895, i32 0, i32 33
  %15897 = getelementptr inbounds %struct.Reg, %struct.Reg* %15896, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %15897 to i64*
  %15898 = load i64, i64* %PC.i547
  %15899 = add i64 %15898, 19
  %15900 = load i64, i64* %PC.i547
  %15901 = add i64 %15900, 6
  %15902 = load i64, i64* %PC.i547
  %15903 = add i64 %15902, 6
  store i64 %15903, i64* %PC.i547
  %15904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15905 = load i8, i8* %15904, align 1
  %15906 = icmp ne i8 %15905, 0
  %15907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15908 = load i8, i8* %15907, align 1
  %15909 = icmp ne i8 %15908, 0
  %15910 = xor i1 %15906, %15909
  %15911 = xor i1 %15910, true
  %15912 = zext i1 %15911 to i8
  store i8 %15912, i8* %BRANCH_TAKEN, align 1
  %15913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15914 = select i1 %15910, i64 %15901, i64 %15899
  store i64 %15914, i64* %15913, align 8
  store %struct.Memory* %loadMem_43af98, %struct.Memory** %MEMORY
  %loadBr_43af98 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43af98 = icmp eq i8 %loadBr_43af98, 1
  br i1 %cmpBr_43af98, label %block_.L_43afab, label %block_43af9e

block_43af9e:                                     ; preds = %block_43af8f
  %loadMem_43af9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15916 = getelementptr inbounds %struct.GPR, %struct.GPR* %15915, i32 0, i32 33
  %15917 = getelementptr inbounds %struct.Reg, %struct.Reg* %15916, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %15917 to i64*
  %15918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15919 = getelementptr inbounds %struct.GPR, %struct.GPR* %15918, i32 0, i32 1
  %15920 = getelementptr inbounds %struct.Reg, %struct.Reg* %15919, i32 0, i32 0
  %EAX.i545 = bitcast %union.anon* %15920 to i32*
  %15921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15922 = getelementptr inbounds %struct.GPR, %struct.GPR* %15921, i32 0, i32 1
  %15923 = getelementptr inbounds %struct.Reg, %struct.Reg* %15922, i32 0, i32 0
  %RAX.i546 = bitcast %union.anon* %15923 to i64*
  %15924 = load i64, i64* %RAX.i546
  %15925 = load i32, i32* %EAX.i545
  %15926 = zext i32 %15925 to i64
  %15927 = load i64, i64* %PC.i544
  %15928 = add i64 %15927, 2
  store i64 %15928, i64* %PC.i544
  %15929 = xor i64 %15926, %15924
  %15930 = trunc i64 %15929 to i32
  %15931 = and i64 %15929, 4294967295
  store i64 %15931, i64* %RAX.i546, align 8
  %15932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15932, align 1
  %15933 = and i32 %15930, 255
  %15934 = call i32 @llvm.ctpop.i32(i32 %15933)
  %15935 = trunc i32 %15934 to i8
  %15936 = and i8 %15935, 1
  %15937 = xor i8 %15936, 1
  %15938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15937, i8* %15938, align 1
  %15939 = icmp eq i32 %15930, 0
  %15940 = zext i1 %15939 to i8
  %15941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15940, i8* %15941, align 1
  %15942 = lshr i32 %15930, 31
  %15943 = trunc i32 %15942 to i8
  %15944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15943, i8* %15944, align 1
  %15945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15945, align 1
  %15946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15946, align 1
  store %struct.Memory* %loadMem_43af9e, %struct.Memory** %MEMORY
  %loadMem_43afa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15948 = getelementptr inbounds %struct.GPR, %struct.GPR* %15947, i32 0, i32 33
  %15949 = getelementptr inbounds %struct.Reg, %struct.Reg* %15948, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %15949 to i64*
  %15950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15951 = getelementptr inbounds %struct.GPR, %struct.GPR* %15950, i32 0, i32 1
  %15952 = getelementptr inbounds %struct.Reg, %struct.Reg* %15951, i32 0, i32 0
  %EAX.i542 = bitcast %union.anon* %15952 to i32*
  %15953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15954 = getelementptr inbounds %struct.GPR, %struct.GPR* %15953, i32 0, i32 15
  %15955 = getelementptr inbounds %struct.Reg, %struct.Reg* %15954, i32 0, i32 0
  %RBP.i543 = bitcast %union.anon* %15955 to i64*
  %15956 = load i64, i64* %RBP.i543
  %15957 = sub i64 %15956, 468
  %15958 = load i32, i32* %EAX.i542
  %15959 = zext i32 %15958 to i64
  %15960 = load i64, i64* %PC.i541
  %15961 = add i64 %15960, 6
  store i64 %15961, i64* %PC.i541
  %15962 = inttoptr i64 %15957 to i32*
  store i32 %15958, i32* %15962
  store %struct.Memory* %loadMem_43afa0, %struct.Memory** %MEMORY
  %loadMem_43afa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15964 = getelementptr inbounds %struct.GPR, %struct.GPR* %15963, i32 0, i32 33
  %15965 = getelementptr inbounds %struct.Reg, %struct.Reg* %15964, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %15965 to i64*
  %15966 = load i64, i64* %PC.i540
  %15967 = add i64 %15966, 72
  %15968 = load i64, i64* %PC.i540
  %15969 = add i64 %15968, 5
  store i64 %15969, i64* %PC.i540
  %15970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15967, i64* %15970, align 8
  store %struct.Memory* %loadMem_43afa6, %struct.Memory** %MEMORY
  br label %block_.L_43afee

block_.L_43afab:                                  ; preds = %block_43af8f
  %loadMem_43afab = load %struct.Memory*, %struct.Memory** %MEMORY
  %15971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15972 = getelementptr inbounds %struct.GPR, %struct.GPR* %15971, i32 0, i32 33
  %15973 = getelementptr inbounds %struct.Reg, %struct.Reg* %15972, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %15973 to i64*
  %15974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15975 = getelementptr inbounds %struct.GPR, %struct.GPR* %15974, i32 0, i32 1
  %15976 = getelementptr inbounds %struct.Reg, %struct.Reg* %15975, i32 0, i32 0
  %RAX.i538 = bitcast %union.anon* %15976 to i64*
  %15977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15978 = getelementptr inbounds %struct.GPR, %struct.GPR* %15977, i32 0, i32 15
  %15979 = getelementptr inbounds %struct.Reg, %struct.Reg* %15978, i32 0, i32 0
  %RBP.i539 = bitcast %union.anon* %15979 to i64*
  %15980 = load i64, i64* %RBP.i539
  %15981 = sub i64 %15980, 128
  %15982 = load i64, i64* %PC.i537
  %15983 = add i64 %15982, 3
  store i64 %15983, i64* %PC.i537
  %15984 = inttoptr i64 %15981 to i32*
  %15985 = load i32, i32* %15984
  %15986 = zext i32 %15985 to i64
  store i64 %15986, i64* %RAX.i538, align 8
  store %struct.Memory* %loadMem_43afab, %struct.Memory** %MEMORY
  %loadMem_43afae = load %struct.Memory*, %struct.Memory** %MEMORY
  %15987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15988 = getelementptr inbounds %struct.GPR, %struct.GPR* %15987, i32 0, i32 33
  %15989 = getelementptr inbounds %struct.Reg, %struct.Reg* %15988, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %15989 to i64*
  %15990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15991 = getelementptr inbounds %struct.GPR, %struct.GPR* %15990, i32 0, i32 1
  %15992 = getelementptr inbounds %struct.Reg, %struct.Reg* %15991, i32 0, i32 0
  %RAX.i535 = bitcast %union.anon* %15992 to i64*
  %15993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15994 = getelementptr inbounds %struct.GPR, %struct.GPR* %15993, i32 0, i32 15
  %15995 = getelementptr inbounds %struct.Reg, %struct.Reg* %15994, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %15995 to i64*
  %15996 = load i64, i64* %RAX.i535
  %15997 = load i64, i64* %RBP.i536
  %15998 = sub i64 %15997, 112
  %15999 = load i64, i64* %PC.i534
  %16000 = add i64 %15999, 3
  store i64 %16000, i64* %PC.i534
  %16001 = trunc i64 %15996 to i32
  %16002 = inttoptr i64 %15998 to i32*
  %16003 = load i32, i32* %16002
  %16004 = add i32 %16003, %16001
  %16005 = zext i32 %16004 to i64
  store i64 %16005, i64* %RAX.i535, align 8
  %16006 = icmp ult i32 %16004, %16001
  %16007 = icmp ult i32 %16004, %16003
  %16008 = or i1 %16006, %16007
  %16009 = zext i1 %16008 to i8
  %16010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16009, i8* %16010, align 1
  %16011 = and i32 %16004, 255
  %16012 = call i32 @llvm.ctpop.i32(i32 %16011)
  %16013 = trunc i32 %16012 to i8
  %16014 = and i8 %16013, 1
  %16015 = xor i8 %16014, 1
  %16016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16015, i8* %16016, align 1
  %16017 = xor i32 %16003, %16001
  %16018 = xor i32 %16017, %16004
  %16019 = lshr i32 %16018, 4
  %16020 = trunc i32 %16019 to i8
  %16021 = and i8 %16020, 1
  %16022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16021, i8* %16022, align 1
  %16023 = icmp eq i32 %16004, 0
  %16024 = zext i1 %16023 to i8
  %16025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16024, i8* %16025, align 1
  %16026 = lshr i32 %16004, 31
  %16027 = trunc i32 %16026 to i8
  %16028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16027, i8* %16028, align 1
  %16029 = lshr i32 %16001, 31
  %16030 = lshr i32 %16003, 31
  %16031 = xor i32 %16026, %16029
  %16032 = xor i32 %16026, %16030
  %16033 = add i32 %16031, %16032
  %16034 = icmp eq i32 %16033, 2
  %16035 = zext i1 %16034 to i8
  %16036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16035, i8* %16036, align 1
  store %struct.Memory* %loadMem_43afae, %struct.Memory** %MEMORY
  %loadMem_43afb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16038 = getelementptr inbounds %struct.GPR, %struct.GPR* %16037, i32 0, i32 33
  %16039 = getelementptr inbounds %struct.Reg, %struct.Reg* %16038, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %16039 to i64*
  %16040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16041 = getelementptr inbounds %struct.GPR, %struct.GPR* %16040, i32 0, i32 5
  %16042 = getelementptr inbounds %struct.Reg, %struct.Reg* %16041, i32 0, i32 0
  %RCX.i532 = bitcast %union.anon* %16042 to i64*
  %16043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16044 = getelementptr inbounds %struct.GPR, %struct.GPR* %16043, i32 0, i32 15
  %16045 = getelementptr inbounds %struct.Reg, %struct.Reg* %16044, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %16045 to i64*
  %16046 = load i64, i64* %RBP.i533
  %16047 = sub i64 %16046, 40
  %16048 = load i64, i64* %PC.i531
  %16049 = add i64 %16048, 4
  store i64 %16049, i64* %PC.i531
  %16050 = inttoptr i64 %16047 to i64*
  %16051 = load i64, i64* %16050
  store i64 %16051, i64* %RCX.i532, align 8
  store %struct.Memory* %loadMem_43afb1, %struct.Memory** %MEMORY
  %loadMem_43afb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16053 = getelementptr inbounds %struct.GPR, %struct.GPR* %16052, i32 0, i32 33
  %16054 = getelementptr inbounds %struct.Reg, %struct.Reg* %16053, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %16054 to i64*
  %16055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16056 = getelementptr inbounds %struct.GPR, %struct.GPR* %16055, i32 0, i32 1
  %16057 = getelementptr inbounds %struct.Reg, %struct.Reg* %16056, i32 0, i32 0
  %EAX.i529 = bitcast %union.anon* %16057 to i32*
  %16058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16059 = getelementptr inbounds %struct.GPR, %struct.GPR* %16058, i32 0, i32 5
  %16060 = getelementptr inbounds %struct.Reg, %struct.Reg* %16059, i32 0, i32 0
  %RCX.i530 = bitcast %union.anon* %16060 to i64*
  %16061 = load i32, i32* %EAX.i529
  %16062 = zext i32 %16061 to i64
  %16063 = load i64, i64* %RCX.i530
  %16064 = add i64 %16063, 72684
  %16065 = load i64, i64* %PC.i528
  %16066 = add i64 %16065, 6
  store i64 %16066, i64* %PC.i528
  %16067 = inttoptr i64 %16064 to i32*
  %16068 = load i32, i32* %16067
  %16069 = sub i32 %16061, %16068
  %16070 = icmp ult i32 %16061, %16068
  %16071 = zext i1 %16070 to i8
  %16072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16071, i8* %16072, align 1
  %16073 = and i32 %16069, 255
  %16074 = call i32 @llvm.ctpop.i32(i32 %16073)
  %16075 = trunc i32 %16074 to i8
  %16076 = and i8 %16075, 1
  %16077 = xor i8 %16076, 1
  %16078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16077, i8* %16078, align 1
  %16079 = xor i32 %16068, %16061
  %16080 = xor i32 %16079, %16069
  %16081 = lshr i32 %16080, 4
  %16082 = trunc i32 %16081 to i8
  %16083 = and i8 %16082, 1
  %16084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16083, i8* %16084, align 1
  %16085 = icmp eq i32 %16069, 0
  %16086 = zext i1 %16085 to i8
  %16087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16086, i8* %16087, align 1
  %16088 = lshr i32 %16069, 31
  %16089 = trunc i32 %16088 to i8
  %16090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16089, i8* %16090, align 1
  %16091 = lshr i32 %16061, 31
  %16092 = lshr i32 %16068, 31
  %16093 = xor i32 %16092, %16091
  %16094 = xor i32 %16088, %16091
  %16095 = add i32 %16094, %16093
  %16096 = icmp eq i32 %16095, 2
  %16097 = zext i1 %16096 to i8
  %16098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16097, i8* %16098, align 1
  store %struct.Memory* %loadMem_43afb5, %struct.Memory** %MEMORY
  %loadMem_43afbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16100 = getelementptr inbounds %struct.GPR, %struct.GPR* %16099, i32 0, i32 33
  %16101 = getelementptr inbounds %struct.Reg, %struct.Reg* %16100, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %16101 to i64*
  %16102 = load i64, i64* %PC.i527
  %16103 = add i64 %16102, 27
  %16104 = load i64, i64* %PC.i527
  %16105 = add i64 %16104, 6
  %16106 = load i64, i64* %PC.i527
  %16107 = add i64 %16106, 6
  store i64 %16107, i64* %PC.i527
  %16108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16109 = load i8, i8* %16108, align 1
  %16110 = icmp ne i8 %16109, 0
  %16111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16112 = load i8, i8* %16111, align 1
  %16113 = icmp ne i8 %16112, 0
  %16114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16115 = load i8, i8* %16114, align 1
  %16116 = icmp ne i8 %16115, 0
  %16117 = xor i1 %16113, %16116
  %16118 = or i1 %16110, %16117
  %16119 = zext i1 %16118 to i8
  store i8 %16119, i8* %BRANCH_TAKEN, align 1
  %16120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16121 = select i1 %16118, i64 %16103, i64 %16105
  store i64 %16121, i64* %16120, align 8
  store %struct.Memory* %loadMem_43afbb, %struct.Memory** %MEMORY
  %loadBr_43afbb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43afbb = icmp eq i8 %loadBr_43afbb, 1
  br i1 %cmpBr_43afbb, label %block_.L_43afd6, label %block_43afc1

block_43afc1:                                     ; preds = %block_.L_43afab
  %loadMem_43afc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16123 = getelementptr inbounds %struct.GPR, %struct.GPR* %16122, i32 0, i32 33
  %16124 = getelementptr inbounds %struct.Reg, %struct.Reg* %16123, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %16124 to i64*
  %16125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16126 = getelementptr inbounds %struct.GPR, %struct.GPR* %16125, i32 0, i32 1
  %16127 = getelementptr inbounds %struct.Reg, %struct.Reg* %16126, i32 0, i32 0
  %RAX.i525 = bitcast %union.anon* %16127 to i64*
  %16128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16129 = getelementptr inbounds %struct.GPR, %struct.GPR* %16128, i32 0, i32 15
  %16130 = getelementptr inbounds %struct.Reg, %struct.Reg* %16129, i32 0, i32 0
  %RBP.i526 = bitcast %union.anon* %16130 to i64*
  %16131 = load i64, i64* %RBP.i526
  %16132 = sub i64 %16131, 40
  %16133 = load i64, i64* %PC.i524
  %16134 = add i64 %16133, 4
  store i64 %16134, i64* %PC.i524
  %16135 = inttoptr i64 %16132 to i64*
  %16136 = load i64, i64* %16135
  store i64 %16136, i64* %RAX.i525, align 8
  store %struct.Memory* %loadMem_43afc1, %struct.Memory** %MEMORY
  %loadMem_43afc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16138 = getelementptr inbounds %struct.GPR, %struct.GPR* %16137, i32 0, i32 33
  %16139 = getelementptr inbounds %struct.Reg, %struct.Reg* %16138, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %16139 to i64*
  %16140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16141 = getelementptr inbounds %struct.GPR, %struct.GPR* %16140, i32 0, i32 1
  %16142 = getelementptr inbounds %struct.Reg, %struct.Reg* %16141, i32 0, i32 0
  %RAX.i522 = bitcast %union.anon* %16142 to i64*
  %16143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16144 = getelementptr inbounds %struct.GPR, %struct.GPR* %16143, i32 0, i32 5
  %16145 = getelementptr inbounds %struct.Reg, %struct.Reg* %16144, i32 0, i32 0
  %RCX.i523 = bitcast %union.anon* %16145 to i64*
  %16146 = load i64, i64* %RAX.i522
  %16147 = add i64 %16146, 72684
  %16148 = load i64, i64* %PC.i521
  %16149 = add i64 %16148, 6
  store i64 %16149, i64* %PC.i521
  %16150 = inttoptr i64 %16147 to i32*
  %16151 = load i32, i32* %16150
  %16152 = zext i32 %16151 to i64
  store i64 %16152, i64* %RCX.i523, align 8
  store %struct.Memory* %loadMem_43afc5, %struct.Memory** %MEMORY
  %loadMem_43afcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16154 = getelementptr inbounds %struct.GPR, %struct.GPR* %16153, i32 0, i32 33
  %16155 = getelementptr inbounds %struct.Reg, %struct.Reg* %16154, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %16155 to i64*
  %16156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16157 = getelementptr inbounds %struct.GPR, %struct.GPR* %16156, i32 0, i32 5
  %16158 = getelementptr inbounds %struct.Reg, %struct.Reg* %16157, i32 0, i32 0
  %ECX.i519 = bitcast %union.anon* %16158 to i32*
  %16159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16160 = getelementptr inbounds %struct.GPR, %struct.GPR* %16159, i32 0, i32 15
  %16161 = getelementptr inbounds %struct.Reg, %struct.Reg* %16160, i32 0, i32 0
  %RBP.i520 = bitcast %union.anon* %16161 to i64*
  %16162 = load i64, i64* %RBP.i520
  %16163 = sub i64 %16162, 472
  %16164 = load i32, i32* %ECX.i519
  %16165 = zext i32 %16164 to i64
  %16166 = load i64, i64* %PC.i518
  %16167 = add i64 %16166, 6
  store i64 %16167, i64* %PC.i518
  %16168 = inttoptr i64 %16163 to i32*
  store i32 %16164, i32* %16168
  store %struct.Memory* %loadMem_43afcb, %struct.Memory** %MEMORY
  %loadMem_43afd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16170 = getelementptr inbounds %struct.GPR, %struct.GPR* %16169, i32 0, i32 33
  %16171 = getelementptr inbounds %struct.Reg, %struct.Reg* %16170, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %16171 to i64*
  %16172 = load i64, i64* %PC.i517
  %16173 = add i64 %16172, 17
  %16174 = load i64, i64* %PC.i517
  %16175 = add i64 %16174, 5
  store i64 %16175, i64* %PC.i517
  %16176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16173, i64* %16176, align 8
  store %struct.Memory* %loadMem_43afd1, %struct.Memory** %MEMORY
  br label %block_.L_43afe2

block_.L_43afd6:                                  ; preds = %block_.L_43afab
  %loadMem_43afd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16178 = getelementptr inbounds %struct.GPR, %struct.GPR* %16177, i32 0, i32 33
  %16179 = getelementptr inbounds %struct.Reg, %struct.Reg* %16178, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %16179 to i64*
  %16180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16181 = getelementptr inbounds %struct.GPR, %struct.GPR* %16180, i32 0, i32 1
  %16182 = getelementptr inbounds %struct.Reg, %struct.Reg* %16181, i32 0, i32 0
  %RAX.i515 = bitcast %union.anon* %16182 to i64*
  %16183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16184 = getelementptr inbounds %struct.GPR, %struct.GPR* %16183, i32 0, i32 15
  %16185 = getelementptr inbounds %struct.Reg, %struct.Reg* %16184, i32 0, i32 0
  %RBP.i516 = bitcast %union.anon* %16185 to i64*
  %16186 = load i64, i64* %RBP.i516
  %16187 = sub i64 %16186, 128
  %16188 = load i64, i64* %PC.i514
  %16189 = add i64 %16188, 3
  store i64 %16189, i64* %PC.i514
  %16190 = inttoptr i64 %16187 to i32*
  %16191 = load i32, i32* %16190
  %16192 = zext i32 %16191 to i64
  store i64 %16192, i64* %RAX.i515, align 8
  store %struct.Memory* %loadMem_43afd6, %struct.Memory** %MEMORY
  %loadMem_43afd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16194 = getelementptr inbounds %struct.GPR, %struct.GPR* %16193, i32 0, i32 33
  %16195 = getelementptr inbounds %struct.Reg, %struct.Reg* %16194, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %16195 to i64*
  %16196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16197 = getelementptr inbounds %struct.GPR, %struct.GPR* %16196, i32 0, i32 1
  %16198 = getelementptr inbounds %struct.Reg, %struct.Reg* %16197, i32 0, i32 0
  %RAX.i512 = bitcast %union.anon* %16198 to i64*
  %16199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16200 = getelementptr inbounds %struct.GPR, %struct.GPR* %16199, i32 0, i32 15
  %16201 = getelementptr inbounds %struct.Reg, %struct.Reg* %16200, i32 0, i32 0
  %RBP.i513 = bitcast %union.anon* %16201 to i64*
  %16202 = load i64, i64* %RAX.i512
  %16203 = load i64, i64* %RBP.i513
  %16204 = sub i64 %16203, 112
  %16205 = load i64, i64* %PC.i511
  %16206 = add i64 %16205, 3
  store i64 %16206, i64* %PC.i511
  %16207 = trunc i64 %16202 to i32
  %16208 = inttoptr i64 %16204 to i32*
  %16209 = load i32, i32* %16208
  %16210 = add i32 %16209, %16207
  %16211 = zext i32 %16210 to i64
  store i64 %16211, i64* %RAX.i512, align 8
  %16212 = icmp ult i32 %16210, %16207
  %16213 = icmp ult i32 %16210, %16209
  %16214 = or i1 %16212, %16213
  %16215 = zext i1 %16214 to i8
  %16216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16215, i8* %16216, align 1
  %16217 = and i32 %16210, 255
  %16218 = call i32 @llvm.ctpop.i32(i32 %16217)
  %16219 = trunc i32 %16218 to i8
  %16220 = and i8 %16219, 1
  %16221 = xor i8 %16220, 1
  %16222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16221, i8* %16222, align 1
  %16223 = xor i32 %16209, %16207
  %16224 = xor i32 %16223, %16210
  %16225 = lshr i32 %16224, 4
  %16226 = trunc i32 %16225 to i8
  %16227 = and i8 %16226, 1
  %16228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16227, i8* %16228, align 1
  %16229 = icmp eq i32 %16210, 0
  %16230 = zext i1 %16229 to i8
  %16231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16230, i8* %16231, align 1
  %16232 = lshr i32 %16210, 31
  %16233 = trunc i32 %16232 to i8
  %16234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16233, i8* %16234, align 1
  %16235 = lshr i32 %16207, 31
  %16236 = lshr i32 %16209, 31
  %16237 = xor i32 %16232, %16235
  %16238 = xor i32 %16232, %16236
  %16239 = add i32 %16237, %16238
  %16240 = icmp eq i32 %16239, 2
  %16241 = zext i1 %16240 to i8
  %16242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16241, i8* %16242, align 1
  store %struct.Memory* %loadMem_43afd9, %struct.Memory** %MEMORY
  %loadMem_43afdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %16243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16244 = getelementptr inbounds %struct.GPR, %struct.GPR* %16243, i32 0, i32 33
  %16245 = getelementptr inbounds %struct.Reg, %struct.Reg* %16244, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %16245 to i64*
  %16246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16247 = getelementptr inbounds %struct.GPR, %struct.GPR* %16246, i32 0, i32 1
  %16248 = getelementptr inbounds %struct.Reg, %struct.Reg* %16247, i32 0, i32 0
  %EAX.i509 = bitcast %union.anon* %16248 to i32*
  %16249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16250 = getelementptr inbounds %struct.GPR, %struct.GPR* %16249, i32 0, i32 15
  %16251 = getelementptr inbounds %struct.Reg, %struct.Reg* %16250, i32 0, i32 0
  %RBP.i510 = bitcast %union.anon* %16251 to i64*
  %16252 = load i64, i64* %RBP.i510
  %16253 = sub i64 %16252, 472
  %16254 = load i32, i32* %EAX.i509
  %16255 = zext i32 %16254 to i64
  %16256 = load i64, i64* %PC.i508
  %16257 = add i64 %16256, 6
  store i64 %16257, i64* %PC.i508
  %16258 = inttoptr i64 %16253 to i32*
  store i32 %16254, i32* %16258
  store %struct.Memory* %loadMem_43afdc, %struct.Memory** %MEMORY
  br label %block_.L_43afe2

block_.L_43afe2:                                  ; preds = %block_.L_43afd6, %block_43afc1
  %loadMem_43afe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16260 = getelementptr inbounds %struct.GPR, %struct.GPR* %16259, i32 0, i32 33
  %16261 = getelementptr inbounds %struct.Reg, %struct.Reg* %16260, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %16261 to i64*
  %16262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16263 = getelementptr inbounds %struct.GPR, %struct.GPR* %16262, i32 0, i32 1
  %16264 = getelementptr inbounds %struct.Reg, %struct.Reg* %16263, i32 0, i32 0
  %RAX.i506 = bitcast %union.anon* %16264 to i64*
  %16265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16266 = getelementptr inbounds %struct.GPR, %struct.GPR* %16265, i32 0, i32 15
  %16267 = getelementptr inbounds %struct.Reg, %struct.Reg* %16266, i32 0, i32 0
  %RBP.i507 = bitcast %union.anon* %16267 to i64*
  %16268 = load i64, i64* %RBP.i507
  %16269 = sub i64 %16268, 472
  %16270 = load i64, i64* %PC.i505
  %16271 = add i64 %16270, 6
  store i64 %16271, i64* %PC.i505
  %16272 = inttoptr i64 %16269 to i32*
  %16273 = load i32, i32* %16272
  %16274 = zext i32 %16273 to i64
  store i64 %16274, i64* %RAX.i506, align 8
  store %struct.Memory* %loadMem_43afe2, %struct.Memory** %MEMORY
  %loadMem_43afe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16276 = getelementptr inbounds %struct.GPR, %struct.GPR* %16275, i32 0, i32 33
  %16277 = getelementptr inbounds %struct.Reg, %struct.Reg* %16276, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %16277 to i64*
  %16278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16279 = getelementptr inbounds %struct.GPR, %struct.GPR* %16278, i32 0, i32 1
  %16280 = getelementptr inbounds %struct.Reg, %struct.Reg* %16279, i32 0, i32 0
  %EAX.i503 = bitcast %union.anon* %16280 to i32*
  %16281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16282 = getelementptr inbounds %struct.GPR, %struct.GPR* %16281, i32 0, i32 15
  %16283 = getelementptr inbounds %struct.Reg, %struct.Reg* %16282, i32 0, i32 0
  %RBP.i504 = bitcast %union.anon* %16283 to i64*
  %16284 = load i64, i64* %RBP.i504
  %16285 = sub i64 %16284, 468
  %16286 = load i32, i32* %EAX.i503
  %16287 = zext i32 %16286 to i64
  %16288 = load i64, i64* %PC.i502
  %16289 = add i64 %16288, 6
  store i64 %16289, i64* %PC.i502
  %16290 = inttoptr i64 %16285 to i32*
  store i32 %16286, i32* %16290
  store %struct.Memory* %loadMem_43afe8, %struct.Memory** %MEMORY
  br label %block_.L_43afee

block_.L_43afee:                                  ; preds = %block_.L_43afe2, %block_43af9e
  %loadMem_43afee = load %struct.Memory*, %struct.Memory** %MEMORY
  %16291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16292 = getelementptr inbounds %struct.GPR, %struct.GPR* %16291, i32 0, i32 33
  %16293 = getelementptr inbounds %struct.Reg, %struct.Reg* %16292, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %16293 to i64*
  %16294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16295 = getelementptr inbounds %struct.GPR, %struct.GPR* %16294, i32 0, i32 1
  %16296 = getelementptr inbounds %struct.Reg, %struct.Reg* %16295, i32 0, i32 0
  %RAX.i500 = bitcast %union.anon* %16296 to i64*
  %16297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16298 = getelementptr inbounds %struct.GPR, %struct.GPR* %16297, i32 0, i32 15
  %16299 = getelementptr inbounds %struct.Reg, %struct.Reg* %16298, i32 0, i32 0
  %RBP.i501 = bitcast %union.anon* %16299 to i64*
  %16300 = load i64, i64* %RBP.i501
  %16301 = sub i64 %16300, 468
  %16302 = load i64, i64* %PC.i499
  %16303 = add i64 %16302, 6
  store i64 %16303, i64* %PC.i499
  %16304 = inttoptr i64 %16301 to i32*
  %16305 = load i32, i32* %16304
  %16306 = zext i32 %16305 to i64
  store i64 %16306, i64* %RAX.i500, align 8
  store %struct.Memory* %loadMem_43afee, %struct.Memory** %MEMORY
  %loadMem_43aff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16308 = getelementptr inbounds %struct.GPR, %struct.GPR* %16307, i32 0, i32 33
  %16309 = getelementptr inbounds %struct.Reg, %struct.Reg* %16308, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %16309 to i64*
  %16310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16311 = getelementptr inbounds %struct.GPR, %struct.GPR* %16310, i32 0, i32 1
  %16312 = getelementptr inbounds %struct.Reg, %struct.Reg* %16311, i32 0, i32 0
  %AX.i497 = bitcast %union.anon* %16312 to i16*
  %16313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16314 = getelementptr inbounds %struct.GPR, %struct.GPR* %16313, i32 0, i32 5
  %16315 = getelementptr inbounds %struct.Reg, %struct.Reg* %16314, i32 0, i32 0
  %CX.i498 = bitcast %union.anon* %16315 to i16*
  %16316 = load i16, i16* %AX.i497
  %16317 = zext i16 %16316 to i64
  %16318 = load i64, i64* %PC.i496
  %16319 = add i64 %16318, 3
  store i64 %16319, i64* %PC.i496
  store i16 %16316, i16* %CX.i498, align 2
  store %struct.Memory* %loadMem_43aff4, %struct.Memory** %MEMORY
  %loadMem_43aff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16321 = getelementptr inbounds %struct.GPR, %struct.GPR* %16320, i32 0, i32 33
  %16322 = getelementptr inbounds %struct.Reg, %struct.Reg* %16321, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %16322 to i64*
  %16323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16324 = getelementptr inbounds %struct.GPR, %struct.GPR* %16323, i32 0, i32 7
  %16325 = getelementptr inbounds %struct.Reg, %struct.Reg* %16324, i32 0, i32 0
  %RDX.i494 = bitcast %union.anon* %16325 to i64*
  %16326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16327 = getelementptr inbounds %struct.GPR, %struct.GPR* %16326, i32 0, i32 15
  %16328 = getelementptr inbounds %struct.Reg, %struct.Reg* %16327, i32 0, i32 0
  %RBP.i495 = bitcast %union.anon* %16328 to i64*
  %16329 = load i64, i64* %RBP.i495
  %16330 = sub i64 %16329, 200
  %16331 = load i64, i64* %PC.i493
  %16332 = add i64 %16331, 7
  store i64 %16332, i64* %PC.i493
  %16333 = inttoptr i64 %16330 to i64*
  %16334 = load i64, i64* %16333
  store i64 %16334, i64* %RDX.i494, align 8
  store %struct.Memory* %loadMem_43aff7, %struct.Memory** %MEMORY
  %loadMem_43affe = load %struct.Memory*, %struct.Memory** %MEMORY
  %16335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16336 = getelementptr inbounds %struct.GPR, %struct.GPR* %16335, i32 0, i32 33
  %16337 = getelementptr inbounds %struct.Reg, %struct.Reg* %16336, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %16337 to i64*
  %16338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16339 = getelementptr inbounds %struct.GPR, %struct.GPR* %16338, i32 0, i32 5
  %16340 = getelementptr inbounds %struct.Reg, %struct.Reg* %16339, i32 0, i32 0
  %CX.i491 = bitcast %union.anon* %16340 to i16*
  %16341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16342 = getelementptr inbounds %struct.GPR, %struct.GPR* %16341, i32 0, i32 7
  %16343 = getelementptr inbounds %struct.Reg, %struct.Reg* %16342, i32 0, i32 0
  %RDX.i492 = bitcast %union.anon* %16343 to i64*
  %16344 = load i64, i64* %RDX.i492
  %16345 = load i16, i16* %CX.i491
  %16346 = zext i16 %16345 to i64
  %16347 = load i64, i64* %PC.i490
  %16348 = add i64 %16347, 3
  store i64 %16348, i64* %PC.i490
  %16349 = inttoptr i64 %16344 to i16*
  store i16 %16345, i16* %16349
  store %struct.Memory* %loadMem_43affe, %struct.Memory** %MEMORY
  %loadMem_43b001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16351 = getelementptr inbounds %struct.GPR, %struct.GPR* %16350, i32 0, i32 33
  %16352 = getelementptr inbounds %struct.Reg, %struct.Reg* %16351, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %16352 to i64*
  %16353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16354 = getelementptr inbounds %struct.GPR, %struct.GPR* %16353, i32 0, i32 1
  %16355 = getelementptr inbounds %struct.Reg, %struct.Reg* %16354, i32 0, i32 0
  %RAX.i488 = bitcast %union.anon* %16355 to i64*
  %16356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16357 = getelementptr inbounds %struct.GPR, %struct.GPR* %16356, i32 0, i32 15
  %16358 = getelementptr inbounds %struct.Reg, %struct.Reg* %16357, i32 0, i32 0
  %RBP.i489 = bitcast %union.anon* %16358 to i64*
  %16359 = load i64, i64* %RBP.i489
  %16360 = sub i64 %16359, 132
  %16361 = load i64, i64* %PC.i487
  %16362 = add i64 %16361, 6
  store i64 %16362, i64* %PC.i487
  %16363 = inttoptr i64 %16360 to i32*
  %16364 = load i32, i32* %16363
  %16365 = zext i32 %16364 to i64
  store i64 %16365, i64* %RAX.i488, align 8
  store %struct.Memory* %loadMem_43b001, %struct.Memory** %MEMORY
  %loadMem_43b007 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16367 = getelementptr inbounds %struct.GPR, %struct.GPR* %16366, i32 0, i32 33
  %16368 = getelementptr inbounds %struct.Reg, %struct.Reg* %16367, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %16368 to i64*
  %16369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16370 = getelementptr inbounds %struct.GPR, %struct.GPR* %16369, i32 0, i32 1
  %16371 = getelementptr inbounds %struct.Reg, %struct.Reg* %16370, i32 0, i32 0
  %RAX.i485 = bitcast %union.anon* %16371 to i64*
  %16372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16373 = getelementptr inbounds %struct.GPR, %struct.GPR* %16372, i32 0, i32 15
  %16374 = getelementptr inbounds %struct.Reg, %struct.Reg* %16373, i32 0, i32 0
  %RBP.i486 = bitcast %union.anon* %16374 to i64*
  %16375 = load i64, i64* %RAX.i485
  %16376 = load i64, i64* %RBP.i486
  %16377 = sub i64 %16376, 112
  %16378 = load i64, i64* %PC.i484
  %16379 = add i64 %16378, 3
  store i64 %16379, i64* %PC.i484
  %16380 = trunc i64 %16375 to i32
  %16381 = inttoptr i64 %16377 to i32*
  %16382 = load i32, i32* %16381
  %16383 = sub i32 %16380, %16382
  %16384 = zext i32 %16383 to i64
  store i64 %16384, i64* %RAX.i485, align 8
  %16385 = icmp ult i32 %16380, %16382
  %16386 = zext i1 %16385 to i8
  %16387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16386, i8* %16387, align 1
  %16388 = and i32 %16383, 255
  %16389 = call i32 @llvm.ctpop.i32(i32 %16388)
  %16390 = trunc i32 %16389 to i8
  %16391 = and i8 %16390, 1
  %16392 = xor i8 %16391, 1
  %16393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16392, i8* %16393, align 1
  %16394 = xor i32 %16382, %16380
  %16395 = xor i32 %16394, %16383
  %16396 = lshr i32 %16395, 4
  %16397 = trunc i32 %16396 to i8
  %16398 = and i8 %16397, 1
  %16399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16398, i8* %16399, align 1
  %16400 = icmp eq i32 %16383, 0
  %16401 = zext i1 %16400 to i8
  %16402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16401, i8* %16402, align 1
  %16403 = lshr i32 %16383, 31
  %16404 = trunc i32 %16403 to i8
  %16405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16404, i8* %16405, align 1
  %16406 = lshr i32 %16380, 31
  %16407 = lshr i32 %16382, 31
  %16408 = xor i32 %16407, %16406
  %16409 = xor i32 %16403, %16406
  %16410 = add i32 %16409, %16408
  %16411 = icmp eq i32 %16410, 2
  %16412 = zext i1 %16411 to i8
  %16413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16412, i8* %16413, align 1
  store %struct.Memory* %loadMem_43b007, %struct.Memory** %MEMORY
  %loadMem_43b00a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16415 = getelementptr inbounds %struct.GPR, %struct.GPR* %16414, i32 0, i32 33
  %16416 = getelementptr inbounds %struct.Reg, %struct.Reg* %16415, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %16416 to i64*
  %16417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16418 = getelementptr inbounds %struct.GPR, %struct.GPR* %16417, i32 0, i32 1
  %16419 = getelementptr inbounds %struct.Reg, %struct.Reg* %16418, i32 0, i32 0
  %EAX.i483 = bitcast %union.anon* %16419 to i32*
  %16420 = load i32, i32* %EAX.i483
  %16421 = zext i32 %16420 to i64
  %16422 = load i64, i64* %PC.i482
  %16423 = add i64 %16422, 3
  store i64 %16423, i64* %PC.i482
  %16424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16424, align 1
  %16425 = and i32 %16420, 255
  %16426 = call i32 @llvm.ctpop.i32(i32 %16425)
  %16427 = trunc i32 %16426 to i8
  %16428 = and i8 %16427, 1
  %16429 = xor i8 %16428, 1
  %16430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16429, i8* %16430, align 1
  %16431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16431, align 1
  %16432 = icmp eq i32 %16420, 0
  %16433 = zext i1 %16432 to i8
  %16434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16433, i8* %16434, align 1
  %16435 = lshr i32 %16420, 31
  %16436 = trunc i32 %16435 to i8
  %16437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16436, i8* %16437, align 1
  %16438 = lshr i32 %16420, 31
  %16439 = xor i32 %16435, %16438
  %16440 = add i32 %16439, %16438
  %16441 = icmp eq i32 %16440, 2
  %16442 = zext i1 %16441 to i8
  %16443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16442, i8* %16443, align 1
  store %struct.Memory* %loadMem_43b00a, %struct.Memory** %MEMORY
  %loadMem_43b00d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16445 = getelementptr inbounds %struct.GPR, %struct.GPR* %16444, i32 0, i32 33
  %16446 = getelementptr inbounds %struct.Reg, %struct.Reg* %16445, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %16446 to i64*
  %16447 = load i64, i64* %PC.i481
  %16448 = add i64 %16447, 19
  %16449 = load i64, i64* %PC.i481
  %16450 = add i64 %16449, 6
  %16451 = load i64, i64* %PC.i481
  %16452 = add i64 %16451, 6
  store i64 %16452, i64* %PC.i481
  %16453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16454 = load i8, i8* %16453, align 1
  %16455 = icmp ne i8 %16454, 0
  %16456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16457 = load i8, i8* %16456, align 1
  %16458 = icmp ne i8 %16457, 0
  %16459 = xor i1 %16455, %16458
  %16460 = xor i1 %16459, true
  %16461 = zext i1 %16460 to i8
  store i8 %16461, i8* %BRANCH_TAKEN, align 1
  %16462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16463 = select i1 %16459, i64 %16450, i64 %16448
  store i64 %16463, i64* %16462, align 8
  store %struct.Memory* %loadMem_43b00d, %struct.Memory** %MEMORY
  %loadBr_43b00d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b00d = icmp eq i8 %loadBr_43b00d, 1
  br i1 %cmpBr_43b00d, label %block_.L_43b020, label %block_43b013

block_43b013:                                     ; preds = %block_.L_43afee
  %loadMem_43b013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16465 = getelementptr inbounds %struct.GPR, %struct.GPR* %16464, i32 0, i32 33
  %16466 = getelementptr inbounds %struct.Reg, %struct.Reg* %16465, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %16466 to i64*
  %16467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16468 = getelementptr inbounds %struct.GPR, %struct.GPR* %16467, i32 0, i32 1
  %16469 = getelementptr inbounds %struct.Reg, %struct.Reg* %16468, i32 0, i32 0
  %EAX.i479 = bitcast %union.anon* %16469 to i32*
  %16470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16471 = getelementptr inbounds %struct.GPR, %struct.GPR* %16470, i32 0, i32 1
  %16472 = getelementptr inbounds %struct.Reg, %struct.Reg* %16471, i32 0, i32 0
  %RAX.i480 = bitcast %union.anon* %16472 to i64*
  %16473 = load i64, i64* %RAX.i480
  %16474 = load i32, i32* %EAX.i479
  %16475 = zext i32 %16474 to i64
  %16476 = load i64, i64* %PC.i478
  %16477 = add i64 %16476, 2
  store i64 %16477, i64* %PC.i478
  %16478 = xor i64 %16475, %16473
  %16479 = trunc i64 %16478 to i32
  %16480 = and i64 %16478, 4294967295
  store i64 %16480, i64* %RAX.i480, align 8
  %16481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16481, align 1
  %16482 = and i32 %16479, 255
  %16483 = call i32 @llvm.ctpop.i32(i32 %16482)
  %16484 = trunc i32 %16483 to i8
  %16485 = and i8 %16484, 1
  %16486 = xor i8 %16485, 1
  %16487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16486, i8* %16487, align 1
  %16488 = icmp eq i32 %16479, 0
  %16489 = zext i1 %16488 to i8
  %16490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16489, i8* %16490, align 1
  %16491 = lshr i32 %16479, 31
  %16492 = trunc i32 %16491 to i8
  %16493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16492, i8* %16493, align 1
  %16494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16494, align 1
  %16495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16495, align 1
  store %struct.Memory* %loadMem_43b013, %struct.Memory** %MEMORY
  %loadMem_43b015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16497 = getelementptr inbounds %struct.GPR, %struct.GPR* %16496, i32 0, i32 33
  %16498 = getelementptr inbounds %struct.Reg, %struct.Reg* %16497, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %16498 to i64*
  %16499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16500 = getelementptr inbounds %struct.GPR, %struct.GPR* %16499, i32 0, i32 1
  %16501 = getelementptr inbounds %struct.Reg, %struct.Reg* %16500, i32 0, i32 0
  %EAX.i476 = bitcast %union.anon* %16501 to i32*
  %16502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16503 = getelementptr inbounds %struct.GPR, %struct.GPR* %16502, i32 0, i32 15
  %16504 = getelementptr inbounds %struct.Reg, %struct.Reg* %16503, i32 0, i32 0
  %RBP.i477 = bitcast %union.anon* %16504 to i64*
  %16505 = load i64, i64* %RBP.i477
  %16506 = sub i64 %16505, 476
  %16507 = load i32, i32* %EAX.i476
  %16508 = zext i32 %16507 to i64
  %16509 = load i64, i64* %PC.i475
  %16510 = add i64 %16509, 6
  store i64 %16510, i64* %PC.i475
  %16511 = inttoptr i64 %16506 to i32*
  store i32 %16507, i32* %16511
  store %struct.Memory* %loadMem_43b015, %struct.Memory** %MEMORY
  %loadMem_43b01b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16513 = getelementptr inbounds %struct.GPR, %struct.GPR* %16512, i32 0, i32 33
  %16514 = getelementptr inbounds %struct.Reg, %struct.Reg* %16513, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %16514 to i64*
  %16515 = load i64, i64* %PC.i474
  %16516 = add i64 %16515, 78
  %16517 = load i64, i64* %PC.i474
  %16518 = add i64 %16517, 5
  store i64 %16518, i64* %PC.i474
  %16519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16516, i64* %16519, align 8
  store %struct.Memory* %loadMem_43b01b, %struct.Memory** %MEMORY
  br label %block_.L_43b069

block_.L_43b020:                                  ; preds = %block_.L_43afee
  %loadMem_43b020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16521 = getelementptr inbounds %struct.GPR, %struct.GPR* %16520, i32 0, i32 33
  %16522 = getelementptr inbounds %struct.Reg, %struct.Reg* %16521, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %16522 to i64*
  %16523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16524 = getelementptr inbounds %struct.GPR, %struct.GPR* %16523, i32 0, i32 1
  %16525 = getelementptr inbounds %struct.Reg, %struct.Reg* %16524, i32 0, i32 0
  %RAX.i472 = bitcast %union.anon* %16525 to i64*
  %16526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16527 = getelementptr inbounds %struct.GPR, %struct.GPR* %16526, i32 0, i32 15
  %16528 = getelementptr inbounds %struct.Reg, %struct.Reg* %16527, i32 0, i32 0
  %RBP.i473 = bitcast %union.anon* %16528 to i64*
  %16529 = load i64, i64* %RBP.i473
  %16530 = sub i64 %16529, 132
  %16531 = load i64, i64* %PC.i471
  %16532 = add i64 %16531, 6
  store i64 %16532, i64* %PC.i471
  %16533 = inttoptr i64 %16530 to i32*
  %16534 = load i32, i32* %16533
  %16535 = zext i32 %16534 to i64
  store i64 %16535, i64* %RAX.i472, align 8
  store %struct.Memory* %loadMem_43b020, %struct.Memory** %MEMORY
  %loadMem_43b026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16537 = getelementptr inbounds %struct.GPR, %struct.GPR* %16536, i32 0, i32 33
  %16538 = getelementptr inbounds %struct.Reg, %struct.Reg* %16537, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %16538 to i64*
  %16539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16540 = getelementptr inbounds %struct.GPR, %struct.GPR* %16539, i32 0, i32 1
  %16541 = getelementptr inbounds %struct.Reg, %struct.Reg* %16540, i32 0, i32 0
  %RAX.i469 = bitcast %union.anon* %16541 to i64*
  %16542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16543 = getelementptr inbounds %struct.GPR, %struct.GPR* %16542, i32 0, i32 15
  %16544 = getelementptr inbounds %struct.Reg, %struct.Reg* %16543, i32 0, i32 0
  %RBP.i470 = bitcast %union.anon* %16544 to i64*
  %16545 = load i64, i64* %RAX.i469
  %16546 = load i64, i64* %RBP.i470
  %16547 = sub i64 %16546, 112
  %16548 = load i64, i64* %PC.i468
  %16549 = add i64 %16548, 3
  store i64 %16549, i64* %PC.i468
  %16550 = trunc i64 %16545 to i32
  %16551 = inttoptr i64 %16547 to i32*
  %16552 = load i32, i32* %16551
  %16553 = sub i32 %16550, %16552
  %16554 = zext i32 %16553 to i64
  store i64 %16554, i64* %RAX.i469, align 8
  %16555 = icmp ult i32 %16550, %16552
  %16556 = zext i1 %16555 to i8
  %16557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16556, i8* %16557, align 1
  %16558 = and i32 %16553, 255
  %16559 = call i32 @llvm.ctpop.i32(i32 %16558)
  %16560 = trunc i32 %16559 to i8
  %16561 = and i8 %16560, 1
  %16562 = xor i8 %16561, 1
  %16563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16562, i8* %16563, align 1
  %16564 = xor i32 %16552, %16550
  %16565 = xor i32 %16564, %16553
  %16566 = lshr i32 %16565, 4
  %16567 = trunc i32 %16566 to i8
  %16568 = and i8 %16567, 1
  %16569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16568, i8* %16569, align 1
  %16570 = icmp eq i32 %16553, 0
  %16571 = zext i1 %16570 to i8
  %16572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16571, i8* %16572, align 1
  %16573 = lshr i32 %16553, 31
  %16574 = trunc i32 %16573 to i8
  %16575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16574, i8* %16575, align 1
  %16576 = lshr i32 %16550, 31
  %16577 = lshr i32 %16552, 31
  %16578 = xor i32 %16577, %16576
  %16579 = xor i32 %16573, %16576
  %16580 = add i32 %16579, %16578
  %16581 = icmp eq i32 %16580, 2
  %16582 = zext i1 %16581 to i8
  %16583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16582, i8* %16583, align 1
  store %struct.Memory* %loadMem_43b026, %struct.Memory** %MEMORY
  %loadMem_43b029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16585 = getelementptr inbounds %struct.GPR, %struct.GPR* %16584, i32 0, i32 33
  %16586 = getelementptr inbounds %struct.Reg, %struct.Reg* %16585, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %16586 to i64*
  %16587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16588 = getelementptr inbounds %struct.GPR, %struct.GPR* %16587, i32 0, i32 5
  %16589 = getelementptr inbounds %struct.Reg, %struct.Reg* %16588, i32 0, i32 0
  %RCX.i466 = bitcast %union.anon* %16589 to i64*
  %16590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16591 = getelementptr inbounds %struct.GPR, %struct.GPR* %16590, i32 0, i32 15
  %16592 = getelementptr inbounds %struct.Reg, %struct.Reg* %16591, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %16592 to i64*
  %16593 = load i64, i64* %RBP.i467
  %16594 = sub i64 %16593, 40
  %16595 = load i64, i64* %PC.i465
  %16596 = add i64 %16595, 4
  store i64 %16596, i64* %PC.i465
  %16597 = inttoptr i64 %16594 to i64*
  %16598 = load i64, i64* %16597
  store i64 %16598, i64* %RCX.i466, align 8
  store %struct.Memory* %loadMem_43b029, %struct.Memory** %MEMORY
  %loadMem_43b02d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16600 = getelementptr inbounds %struct.GPR, %struct.GPR* %16599, i32 0, i32 33
  %16601 = getelementptr inbounds %struct.Reg, %struct.Reg* %16600, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %16601 to i64*
  %16602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16603 = getelementptr inbounds %struct.GPR, %struct.GPR* %16602, i32 0, i32 1
  %16604 = getelementptr inbounds %struct.Reg, %struct.Reg* %16603, i32 0, i32 0
  %EAX.i463 = bitcast %union.anon* %16604 to i32*
  %16605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16606 = getelementptr inbounds %struct.GPR, %struct.GPR* %16605, i32 0, i32 5
  %16607 = getelementptr inbounds %struct.Reg, %struct.Reg* %16606, i32 0, i32 0
  %RCX.i464 = bitcast %union.anon* %16607 to i64*
  %16608 = load i32, i32* %EAX.i463
  %16609 = zext i32 %16608 to i64
  %16610 = load i64, i64* %RCX.i464
  %16611 = add i64 %16610, 72684
  %16612 = load i64, i64* %PC.i462
  %16613 = add i64 %16612, 6
  store i64 %16613, i64* %PC.i462
  %16614 = inttoptr i64 %16611 to i32*
  %16615 = load i32, i32* %16614
  %16616 = sub i32 %16608, %16615
  %16617 = icmp ult i32 %16608, %16615
  %16618 = zext i1 %16617 to i8
  %16619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16618, i8* %16619, align 1
  %16620 = and i32 %16616, 255
  %16621 = call i32 @llvm.ctpop.i32(i32 %16620)
  %16622 = trunc i32 %16621 to i8
  %16623 = and i8 %16622, 1
  %16624 = xor i8 %16623, 1
  %16625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16624, i8* %16625, align 1
  %16626 = xor i32 %16615, %16608
  %16627 = xor i32 %16626, %16616
  %16628 = lshr i32 %16627, 4
  %16629 = trunc i32 %16628 to i8
  %16630 = and i8 %16629, 1
  %16631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16630, i8* %16631, align 1
  %16632 = icmp eq i32 %16616, 0
  %16633 = zext i1 %16632 to i8
  %16634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16633, i8* %16634, align 1
  %16635 = lshr i32 %16616, 31
  %16636 = trunc i32 %16635 to i8
  %16637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16636, i8* %16637, align 1
  %16638 = lshr i32 %16608, 31
  %16639 = lshr i32 %16615, 31
  %16640 = xor i32 %16639, %16638
  %16641 = xor i32 %16635, %16638
  %16642 = add i32 %16641, %16640
  %16643 = icmp eq i32 %16642, 2
  %16644 = zext i1 %16643 to i8
  %16645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16644, i8* %16645, align 1
  store %struct.Memory* %loadMem_43b02d, %struct.Memory** %MEMORY
  %loadMem_43b033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16647 = getelementptr inbounds %struct.GPR, %struct.GPR* %16646, i32 0, i32 33
  %16648 = getelementptr inbounds %struct.Reg, %struct.Reg* %16647, i32 0, i32 0
  %PC.i461 = bitcast %union.anon* %16648 to i64*
  %16649 = load i64, i64* %PC.i461
  %16650 = add i64 %16649, 27
  %16651 = load i64, i64* %PC.i461
  %16652 = add i64 %16651, 6
  %16653 = load i64, i64* %PC.i461
  %16654 = add i64 %16653, 6
  store i64 %16654, i64* %PC.i461
  %16655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16656 = load i8, i8* %16655, align 1
  %16657 = icmp ne i8 %16656, 0
  %16658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16659 = load i8, i8* %16658, align 1
  %16660 = icmp ne i8 %16659, 0
  %16661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16662 = load i8, i8* %16661, align 1
  %16663 = icmp ne i8 %16662, 0
  %16664 = xor i1 %16660, %16663
  %16665 = or i1 %16657, %16664
  %16666 = zext i1 %16665 to i8
  store i8 %16666, i8* %BRANCH_TAKEN, align 1
  %16667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16668 = select i1 %16665, i64 %16650, i64 %16652
  store i64 %16668, i64* %16667, align 8
  store %struct.Memory* %loadMem_43b033, %struct.Memory** %MEMORY
  %loadBr_43b033 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b033 = icmp eq i8 %loadBr_43b033, 1
  br i1 %cmpBr_43b033, label %block_.L_43b04e, label %block_43b039

block_43b039:                                     ; preds = %block_.L_43b020
  %loadMem_43b039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16670 = getelementptr inbounds %struct.GPR, %struct.GPR* %16669, i32 0, i32 33
  %16671 = getelementptr inbounds %struct.Reg, %struct.Reg* %16670, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %16671 to i64*
  %16672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16673 = getelementptr inbounds %struct.GPR, %struct.GPR* %16672, i32 0, i32 1
  %16674 = getelementptr inbounds %struct.Reg, %struct.Reg* %16673, i32 0, i32 0
  %RAX.i459 = bitcast %union.anon* %16674 to i64*
  %16675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16676 = getelementptr inbounds %struct.GPR, %struct.GPR* %16675, i32 0, i32 15
  %16677 = getelementptr inbounds %struct.Reg, %struct.Reg* %16676, i32 0, i32 0
  %RBP.i460 = bitcast %union.anon* %16677 to i64*
  %16678 = load i64, i64* %RBP.i460
  %16679 = sub i64 %16678, 40
  %16680 = load i64, i64* %PC.i458
  %16681 = add i64 %16680, 4
  store i64 %16681, i64* %PC.i458
  %16682 = inttoptr i64 %16679 to i64*
  %16683 = load i64, i64* %16682
  store i64 %16683, i64* %RAX.i459, align 8
  store %struct.Memory* %loadMem_43b039, %struct.Memory** %MEMORY
  %loadMem_43b03d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16685 = getelementptr inbounds %struct.GPR, %struct.GPR* %16684, i32 0, i32 33
  %16686 = getelementptr inbounds %struct.Reg, %struct.Reg* %16685, i32 0, i32 0
  %PC.i455 = bitcast %union.anon* %16686 to i64*
  %16687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16688 = getelementptr inbounds %struct.GPR, %struct.GPR* %16687, i32 0, i32 1
  %16689 = getelementptr inbounds %struct.Reg, %struct.Reg* %16688, i32 0, i32 0
  %RAX.i456 = bitcast %union.anon* %16689 to i64*
  %16690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16691 = getelementptr inbounds %struct.GPR, %struct.GPR* %16690, i32 0, i32 5
  %16692 = getelementptr inbounds %struct.Reg, %struct.Reg* %16691, i32 0, i32 0
  %RCX.i457 = bitcast %union.anon* %16692 to i64*
  %16693 = load i64, i64* %RAX.i456
  %16694 = add i64 %16693, 72684
  %16695 = load i64, i64* %PC.i455
  %16696 = add i64 %16695, 6
  store i64 %16696, i64* %PC.i455
  %16697 = inttoptr i64 %16694 to i32*
  %16698 = load i32, i32* %16697
  %16699 = zext i32 %16698 to i64
  store i64 %16699, i64* %RCX.i457, align 8
  store %struct.Memory* %loadMem_43b03d, %struct.Memory** %MEMORY
  %loadMem_43b043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16701 = getelementptr inbounds %struct.GPR, %struct.GPR* %16700, i32 0, i32 33
  %16702 = getelementptr inbounds %struct.Reg, %struct.Reg* %16701, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %16702 to i64*
  %16703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16704 = getelementptr inbounds %struct.GPR, %struct.GPR* %16703, i32 0, i32 5
  %16705 = getelementptr inbounds %struct.Reg, %struct.Reg* %16704, i32 0, i32 0
  %ECX.i453 = bitcast %union.anon* %16705 to i32*
  %16706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16707 = getelementptr inbounds %struct.GPR, %struct.GPR* %16706, i32 0, i32 15
  %16708 = getelementptr inbounds %struct.Reg, %struct.Reg* %16707, i32 0, i32 0
  %RBP.i454 = bitcast %union.anon* %16708 to i64*
  %16709 = load i64, i64* %RBP.i454
  %16710 = sub i64 %16709, 480
  %16711 = load i32, i32* %ECX.i453
  %16712 = zext i32 %16711 to i64
  %16713 = load i64, i64* %PC.i452
  %16714 = add i64 %16713, 6
  store i64 %16714, i64* %PC.i452
  %16715 = inttoptr i64 %16710 to i32*
  store i32 %16711, i32* %16715
  store %struct.Memory* %loadMem_43b043, %struct.Memory** %MEMORY
  %loadMem_43b049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16717 = getelementptr inbounds %struct.GPR, %struct.GPR* %16716, i32 0, i32 33
  %16718 = getelementptr inbounds %struct.Reg, %struct.Reg* %16717, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %16718 to i64*
  %16719 = load i64, i64* %PC.i451
  %16720 = add i64 %16719, 20
  %16721 = load i64, i64* %PC.i451
  %16722 = add i64 %16721, 5
  store i64 %16722, i64* %PC.i451
  %16723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16720, i64* %16723, align 8
  store %struct.Memory* %loadMem_43b049, %struct.Memory** %MEMORY
  br label %block_.L_43b05d

block_.L_43b04e:                                  ; preds = %block_.L_43b020
  %loadMem_43b04e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16725 = getelementptr inbounds %struct.GPR, %struct.GPR* %16724, i32 0, i32 33
  %16726 = getelementptr inbounds %struct.Reg, %struct.Reg* %16725, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %16726 to i64*
  %16727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16728 = getelementptr inbounds %struct.GPR, %struct.GPR* %16727, i32 0, i32 1
  %16729 = getelementptr inbounds %struct.Reg, %struct.Reg* %16728, i32 0, i32 0
  %RAX.i449 = bitcast %union.anon* %16729 to i64*
  %16730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16731 = getelementptr inbounds %struct.GPR, %struct.GPR* %16730, i32 0, i32 15
  %16732 = getelementptr inbounds %struct.Reg, %struct.Reg* %16731, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %16732 to i64*
  %16733 = load i64, i64* %RBP.i450
  %16734 = sub i64 %16733, 132
  %16735 = load i64, i64* %PC.i448
  %16736 = add i64 %16735, 6
  store i64 %16736, i64* %PC.i448
  %16737 = inttoptr i64 %16734 to i32*
  %16738 = load i32, i32* %16737
  %16739 = zext i32 %16738 to i64
  store i64 %16739, i64* %RAX.i449, align 8
  store %struct.Memory* %loadMem_43b04e, %struct.Memory** %MEMORY
  %loadMem_43b054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16741 = getelementptr inbounds %struct.GPR, %struct.GPR* %16740, i32 0, i32 33
  %16742 = getelementptr inbounds %struct.Reg, %struct.Reg* %16741, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %16742 to i64*
  %16743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16744 = getelementptr inbounds %struct.GPR, %struct.GPR* %16743, i32 0, i32 1
  %16745 = getelementptr inbounds %struct.Reg, %struct.Reg* %16744, i32 0, i32 0
  %RAX.i446 = bitcast %union.anon* %16745 to i64*
  %16746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16747 = getelementptr inbounds %struct.GPR, %struct.GPR* %16746, i32 0, i32 15
  %16748 = getelementptr inbounds %struct.Reg, %struct.Reg* %16747, i32 0, i32 0
  %RBP.i447 = bitcast %union.anon* %16748 to i64*
  %16749 = load i64, i64* %RAX.i446
  %16750 = load i64, i64* %RBP.i447
  %16751 = sub i64 %16750, 112
  %16752 = load i64, i64* %PC.i445
  %16753 = add i64 %16752, 3
  store i64 %16753, i64* %PC.i445
  %16754 = trunc i64 %16749 to i32
  %16755 = inttoptr i64 %16751 to i32*
  %16756 = load i32, i32* %16755
  %16757 = sub i32 %16754, %16756
  %16758 = zext i32 %16757 to i64
  store i64 %16758, i64* %RAX.i446, align 8
  %16759 = icmp ult i32 %16754, %16756
  %16760 = zext i1 %16759 to i8
  %16761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16760, i8* %16761, align 1
  %16762 = and i32 %16757, 255
  %16763 = call i32 @llvm.ctpop.i32(i32 %16762)
  %16764 = trunc i32 %16763 to i8
  %16765 = and i8 %16764, 1
  %16766 = xor i8 %16765, 1
  %16767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16766, i8* %16767, align 1
  %16768 = xor i32 %16756, %16754
  %16769 = xor i32 %16768, %16757
  %16770 = lshr i32 %16769, 4
  %16771 = trunc i32 %16770 to i8
  %16772 = and i8 %16771, 1
  %16773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16772, i8* %16773, align 1
  %16774 = icmp eq i32 %16757, 0
  %16775 = zext i1 %16774 to i8
  %16776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16775, i8* %16776, align 1
  %16777 = lshr i32 %16757, 31
  %16778 = trunc i32 %16777 to i8
  %16779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16778, i8* %16779, align 1
  %16780 = lshr i32 %16754, 31
  %16781 = lshr i32 %16756, 31
  %16782 = xor i32 %16781, %16780
  %16783 = xor i32 %16777, %16780
  %16784 = add i32 %16783, %16782
  %16785 = icmp eq i32 %16784, 2
  %16786 = zext i1 %16785 to i8
  %16787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16786, i8* %16787, align 1
  store %struct.Memory* %loadMem_43b054, %struct.Memory** %MEMORY
  %loadMem_43b057 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16789 = getelementptr inbounds %struct.GPR, %struct.GPR* %16788, i32 0, i32 33
  %16790 = getelementptr inbounds %struct.Reg, %struct.Reg* %16789, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %16790 to i64*
  %16791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16792 = getelementptr inbounds %struct.GPR, %struct.GPR* %16791, i32 0, i32 1
  %16793 = getelementptr inbounds %struct.Reg, %struct.Reg* %16792, i32 0, i32 0
  %EAX.i443 = bitcast %union.anon* %16793 to i32*
  %16794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16795 = getelementptr inbounds %struct.GPR, %struct.GPR* %16794, i32 0, i32 15
  %16796 = getelementptr inbounds %struct.Reg, %struct.Reg* %16795, i32 0, i32 0
  %RBP.i444 = bitcast %union.anon* %16796 to i64*
  %16797 = load i64, i64* %RBP.i444
  %16798 = sub i64 %16797, 480
  %16799 = load i32, i32* %EAX.i443
  %16800 = zext i32 %16799 to i64
  %16801 = load i64, i64* %PC.i442
  %16802 = add i64 %16801, 6
  store i64 %16802, i64* %PC.i442
  %16803 = inttoptr i64 %16798 to i32*
  store i32 %16799, i32* %16803
  store %struct.Memory* %loadMem_43b057, %struct.Memory** %MEMORY
  br label %block_.L_43b05d

block_.L_43b05d:                                  ; preds = %block_.L_43b04e, %block_43b039
  %loadMem_43b05d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16805 = getelementptr inbounds %struct.GPR, %struct.GPR* %16804, i32 0, i32 33
  %16806 = getelementptr inbounds %struct.Reg, %struct.Reg* %16805, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %16806 to i64*
  %16807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16808 = getelementptr inbounds %struct.GPR, %struct.GPR* %16807, i32 0, i32 1
  %16809 = getelementptr inbounds %struct.Reg, %struct.Reg* %16808, i32 0, i32 0
  %RAX.i440 = bitcast %union.anon* %16809 to i64*
  %16810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16811 = getelementptr inbounds %struct.GPR, %struct.GPR* %16810, i32 0, i32 15
  %16812 = getelementptr inbounds %struct.Reg, %struct.Reg* %16811, i32 0, i32 0
  %RBP.i441 = bitcast %union.anon* %16812 to i64*
  %16813 = load i64, i64* %RBP.i441
  %16814 = sub i64 %16813, 480
  %16815 = load i64, i64* %PC.i439
  %16816 = add i64 %16815, 6
  store i64 %16816, i64* %PC.i439
  %16817 = inttoptr i64 %16814 to i32*
  %16818 = load i32, i32* %16817
  %16819 = zext i32 %16818 to i64
  store i64 %16819, i64* %RAX.i440, align 8
  store %struct.Memory* %loadMem_43b05d, %struct.Memory** %MEMORY
  %loadMem_43b063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16821 = getelementptr inbounds %struct.GPR, %struct.GPR* %16820, i32 0, i32 33
  %16822 = getelementptr inbounds %struct.Reg, %struct.Reg* %16821, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %16822 to i64*
  %16823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16824 = getelementptr inbounds %struct.GPR, %struct.GPR* %16823, i32 0, i32 1
  %16825 = getelementptr inbounds %struct.Reg, %struct.Reg* %16824, i32 0, i32 0
  %EAX.i437 = bitcast %union.anon* %16825 to i32*
  %16826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16827 = getelementptr inbounds %struct.GPR, %struct.GPR* %16826, i32 0, i32 15
  %16828 = getelementptr inbounds %struct.Reg, %struct.Reg* %16827, i32 0, i32 0
  %RBP.i438 = bitcast %union.anon* %16828 to i64*
  %16829 = load i64, i64* %RBP.i438
  %16830 = sub i64 %16829, 476
  %16831 = load i32, i32* %EAX.i437
  %16832 = zext i32 %16831 to i64
  %16833 = load i64, i64* %PC.i436
  %16834 = add i64 %16833, 6
  store i64 %16834, i64* %PC.i436
  %16835 = inttoptr i64 %16830 to i32*
  store i32 %16831, i32* %16835
  store %struct.Memory* %loadMem_43b063, %struct.Memory** %MEMORY
  br label %block_.L_43b069

block_.L_43b069:                                  ; preds = %block_.L_43b05d, %block_43b013
  %loadMem_43b069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16837 = getelementptr inbounds %struct.GPR, %struct.GPR* %16836, i32 0, i32 33
  %16838 = getelementptr inbounds %struct.Reg, %struct.Reg* %16837, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %16838 to i64*
  %16839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16840 = getelementptr inbounds %struct.GPR, %struct.GPR* %16839, i32 0, i32 1
  %16841 = getelementptr inbounds %struct.Reg, %struct.Reg* %16840, i32 0, i32 0
  %RAX.i434 = bitcast %union.anon* %16841 to i64*
  %16842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16843 = getelementptr inbounds %struct.GPR, %struct.GPR* %16842, i32 0, i32 15
  %16844 = getelementptr inbounds %struct.Reg, %struct.Reg* %16843, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %16844 to i64*
  %16845 = load i64, i64* %RBP.i435
  %16846 = sub i64 %16845, 476
  %16847 = load i64, i64* %PC.i433
  %16848 = add i64 %16847, 6
  store i64 %16848, i64* %PC.i433
  %16849 = inttoptr i64 %16846 to i32*
  %16850 = load i32, i32* %16849
  %16851 = zext i32 %16850 to i64
  store i64 %16851, i64* %RAX.i434, align 8
  store %struct.Memory* %loadMem_43b069, %struct.Memory** %MEMORY
  %loadMem_43b06f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16853 = getelementptr inbounds %struct.GPR, %struct.GPR* %16852, i32 0, i32 33
  %16854 = getelementptr inbounds %struct.Reg, %struct.Reg* %16853, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %16854 to i64*
  %16855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16856 = getelementptr inbounds %struct.GPR, %struct.GPR* %16855, i32 0, i32 1
  %16857 = getelementptr inbounds %struct.Reg, %struct.Reg* %16856, i32 0, i32 0
  %AX.i431 = bitcast %union.anon* %16857 to i16*
  %16858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16859 = getelementptr inbounds %struct.GPR, %struct.GPR* %16858, i32 0, i32 5
  %16860 = getelementptr inbounds %struct.Reg, %struct.Reg* %16859, i32 0, i32 0
  %CX.i432 = bitcast %union.anon* %16860 to i16*
  %16861 = load i16, i16* %AX.i431
  %16862 = zext i16 %16861 to i64
  %16863 = load i64, i64* %PC.i430
  %16864 = add i64 %16863, 3
  store i64 %16864, i64* %PC.i430
  store i16 %16861, i16* %CX.i432, align 2
  store %struct.Memory* %loadMem_43b06f, %struct.Memory** %MEMORY
  %loadMem_43b072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16866 = getelementptr inbounds %struct.GPR, %struct.GPR* %16865, i32 0, i32 33
  %16867 = getelementptr inbounds %struct.Reg, %struct.Reg* %16866, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %16867 to i64*
  %16868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16869 = getelementptr inbounds %struct.GPR, %struct.GPR* %16868, i32 0, i32 7
  %16870 = getelementptr inbounds %struct.Reg, %struct.Reg* %16869, i32 0, i32 0
  %RDX.i428 = bitcast %union.anon* %16870 to i64*
  %16871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16872 = getelementptr inbounds %struct.GPR, %struct.GPR* %16871, i32 0, i32 15
  %16873 = getelementptr inbounds %struct.Reg, %struct.Reg* %16872, i32 0, i32 0
  %RBP.i429 = bitcast %union.anon* %16873 to i64*
  %16874 = load i64, i64* %RBP.i429
  %16875 = sub i64 %16874, 208
  %16876 = load i64, i64* %PC.i427
  %16877 = add i64 %16876, 7
  store i64 %16877, i64* %PC.i427
  %16878 = inttoptr i64 %16875 to i64*
  %16879 = load i64, i64* %16878
  store i64 %16879, i64* %RDX.i428, align 8
  store %struct.Memory* %loadMem_43b072, %struct.Memory** %MEMORY
  %loadMem_43b079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16881 = getelementptr inbounds %struct.GPR, %struct.GPR* %16880, i32 0, i32 33
  %16882 = getelementptr inbounds %struct.Reg, %struct.Reg* %16881, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %16882 to i64*
  %16883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16884 = getelementptr inbounds %struct.GPR, %struct.GPR* %16883, i32 0, i32 5
  %16885 = getelementptr inbounds %struct.Reg, %struct.Reg* %16884, i32 0, i32 0
  %CX.i425 = bitcast %union.anon* %16885 to i16*
  %16886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16887 = getelementptr inbounds %struct.GPR, %struct.GPR* %16886, i32 0, i32 7
  %16888 = getelementptr inbounds %struct.Reg, %struct.Reg* %16887, i32 0, i32 0
  %RDX.i426 = bitcast %union.anon* %16888 to i64*
  %16889 = load i64, i64* %RDX.i426
  %16890 = load i16, i16* %CX.i425
  %16891 = zext i16 %16890 to i64
  %16892 = load i64, i64* %PC.i424
  %16893 = add i64 %16892, 3
  store i64 %16893, i64* %PC.i424
  %16894 = inttoptr i64 %16889 to i16*
  store i16 %16890, i16* %16894
  store %struct.Memory* %loadMem_43b079, %struct.Memory** %MEMORY
  %loadMem_43b07c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16896 = getelementptr inbounds %struct.GPR, %struct.GPR* %16895, i32 0, i32 33
  %16897 = getelementptr inbounds %struct.Reg, %struct.Reg* %16896, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %16897 to i64*
  %16898 = load i64, i64* %PC.i423
  %16899 = add i64 %16898, 242
  %16900 = load i64, i64* %PC.i423
  %16901 = add i64 %16900, 5
  store i64 %16901, i64* %PC.i423
  %16902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16899, i64* %16902, align 8
  store %struct.Memory* %loadMem_43b07c, %struct.Memory** %MEMORY
  br label %block_.L_43b16e

block_.L_43b081:                                  ; preds = %block_.L_43af7c
  %loadMem_43b081 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16904 = getelementptr inbounds %struct.GPR, %struct.GPR* %16903, i32 0, i32 33
  %16905 = getelementptr inbounds %struct.Reg, %struct.Reg* %16904, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %16905 to i64*
  %16906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16907 = getelementptr inbounds %struct.GPR, %struct.GPR* %16906, i32 0, i32 1
  %16908 = getelementptr inbounds %struct.Reg, %struct.Reg* %16907, i32 0, i32 0
  %RAX.i421 = bitcast %union.anon* %16908 to i64*
  %16909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16910 = getelementptr inbounds %struct.GPR, %struct.GPR* %16909, i32 0, i32 15
  %16911 = getelementptr inbounds %struct.Reg, %struct.Reg* %16910, i32 0, i32 0
  %RBP.i422 = bitcast %union.anon* %16911 to i64*
  %16912 = load i64, i64* %RBP.i422
  %16913 = sub i64 %16912, 128
  %16914 = load i64, i64* %PC.i420
  %16915 = add i64 %16914, 3
  store i64 %16915, i64* %PC.i420
  %16916 = inttoptr i64 %16913 to i32*
  %16917 = load i32, i32* %16916
  %16918 = zext i32 %16917 to i64
  store i64 %16918, i64* %RAX.i421, align 8
  store %struct.Memory* %loadMem_43b081, %struct.Memory** %MEMORY
  %loadMem_43b084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16920 = getelementptr inbounds %struct.GPR, %struct.GPR* %16919, i32 0, i32 33
  %16921 = getelementptr inbounds %struct.Reg, %struct.Reg* %16920, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %16921 to i64*
  %16922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16923 = getelementptr inbounds %struct.GPR, %struct.GPR* %16922, i32 0, i32 1
  %16924 = getelementptr inbounds %struct.Reg, %struct.Reg* %16923, i32 0, i32 0
  %RAX.i418 = bitcast %union.anon* %16924 to i64*
  %16925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16926 = getelementptr inbounds %struct.GPR, %struct.GPR* %16925, i32 0, i32 15
  %16927 = getelementptr inbounds %struct.Reg, %struct.Reg* %16926, i32 0, i32 0
  %RBP.i419 = bitcast %union.anon* %16927 to i64*
  %16928 = load i64, i64* %RAX.i418
  %16929 = load i64, i64* %RBP.i419
  %16930 = sub i64 %16929, 112
  %16931 = load i64, i64* %PC.i417
  %16932 = add i64 %16931, 3
  store i64 %16932, i64* %PC.i417
  %16933 = trunc i64 %16928 to i32
  %16934 = inttoptr i64 %16930 to i32*
  %16935 = load i32, i32* %16934
  %16936 = add i32 %16935, %16933
  %16937 = zext i32 %16936 to i64
  store i64 %16937, i64* %RAX.i418, align 8
  %16938 = icmp ult i32 %16936, %16933
  %16939 = icmp ult i32 %16936, %16935
  %16940 = or i1 %16938, %16939
  %16941 = zext i1 %16940 to i8
  %16942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16941, i8* %16942, align 1
  %16943 = and i32 %16936, 255
  %16944 = call i32 @llvm.ctpop.i32(i32 %16943)
  %16945 = trunc i32 %16944 to i8
  %16946 = and i8 %16945, 1
  %16947 = xor i8 %16946, 1
  %16948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16947, i8* %16948, align 1
  %16949 = xor i32 %16935, %16933
  %16950 = xor i32 %16949, %16936
  %16951 = lshr i32 %16950, 4
  %16952 = trunc i32 %16951 to i8
  %16953 = and i8 %16952, 1
  %16954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16953, i8* %16954, align 1
  %16955 = icmp eq i32 %16936, 0
  %16956 = zext i1 %16955 to i8
  %16957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16956, i8* %16957, align 1
  %16958 = lshr i32 %16936, 31
  %16959 = trunc i32 %16958 to i8
  %16960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16959, i8* %16960, align 1
  %16961 = lshr i32 %16933, 31
  %16962 = lshr i32 %16935, 31
  %16963 = xor i32 %16958, %16961
  %16964 = xor i32 %16958, %16962
  %16965 = add i32 %16963, %16964
  %16966 = icmp eq i32 %16965, 2
  %16967 = zext i1 %16966 to i8
  %16968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16967, i8* %16968, align 1
  store %struct.Memory* %loadMem_43b084, %struct.Memory** %MEMORY
  %loadMem_43b087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16970 = getelementptr inbounds %struct.GPR, %struct.GPR* %16969, i32 0, i32 33
  %16971 = getelementptr inbounds %struct.Reg, %struct.Reg* %16970, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %16971 to i64*
  %16972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16973 = getelementptr inbounds %struct.GPR, %struct.GPR* %16972, i32 0, i32 1
  %16974 = getelementptr inbounds %struct.Reg, %struct.Reg* %16973, i32 0, i32 0
  %EAX.i416 = bitcast %union.anon* %16974 to i32*
  %16975 = load i32, i32* %EAX.i416
  %16976 = zext i32 %16975 to i64
  %16977 = load i64, i64* %PC.i415
  %16978 = add i64 %16977, 3
  store i64 %16978, i64* %PC.i415
  %16979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16979, align 1
  %16980 = and i32 %16975, 255
  %16981 = call i32 @llvm.ctpop.i32(i32 %16980)
  %16982 = trunc i32 %16981 to i8
  %16983 = and i8 %16982, 1
  %16984 = xor i8 %16983, 1
  %16985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16984, i8* %16985, align 1
  %16986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16986, align 1
  %16987 = icmp eq i32 %16975, 0
  %16988 = zext i1 %16987 to i8
  %16989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16988, i8* %16989, align 1
  %16990 = lshr i32 %16975, 31
  %16991 = trunc i32 %16990 to i8
  %16992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16991, i8* %16992, align 1
  %16993 = lshr i32 %16975, 31
  %16994 = xor i32 %16990, %16993
  %16995 = add i32 %16994, %16993
  %16996 = icmp eq i32 %16995, 2
  %16997 = zext i1 %16996 to i8
  %16998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16997, i8* %16998, align 1
  store %struct.Memory* %loadMem_43b087, %struct.Memory** %MEMORY
  %loadMem_43b08a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17000 = getelementptr inbounds %struct.GPR, %struct.GPR* %16999, i32 0, i32 33
  %17001 = getelementptr inbounds %struct.Reg, %struct.Reg* %17000, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %17001 to i64*
  %17002 = load i64, i64* %PC.i414
  %17003 = add i64 %17002, 19
  %17004 = load i64, i64* %PC.i414
  %17005 = add i64 %17004, 6
  %17006 = load i64, i64* %PC.i414
  %17007 = add i64 %17006, 6
  store i64 %17007, i64* %PC.i414
  %17008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17009 = load i8, i8* %17008, align 1
  %17010 = icmp ne i8 %17009, 0
  %17011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17012 = load i8, i8* %17011, align 1
  %17013 = icmp ne i8 %17012, 0
  %17014 = xor i1 %17010, %17013
  %17015 = xor i1 %17014, true
  %17016 = zext i1 %17015 to i8
  store i8 %17016, i8* %BRANCH_TAKEN, align 1
  %17017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17018 = select i1 %17014, i64 %17005, i64 %17003
  store i64 %17018, i64* %17017, align 8
  store %struct.Memory* %loadMem_43b08a, %struct.Memory** %MEMORY
  %loadBr_43b08a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b08a = icmp eq i8 %loadBr_43b08a, 1
  br i1 %cmpBr_43b08a, label %block_.L_43b09d, label %block_43b090

block_43b090:                                     ; preds = %block_.L_43b081
  %loadMem_43b090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17020 = getelementptr inbounds %struct.GPR, %struct.GPR* %17019, i32 0, i32 33
  %17021 = getelementptr inbounds %struct.Reg, %struct.Reg* %17020, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %17021 to i64*
  %17022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17023 = getelementptr inbounds %struct.GPR, %struct.GPR* %17022, i32 0, i32 1
  %17024 = getelementptr inbounds %struct.Reg, %struct.Reg* %17023, i32 0, i32 0
  %EAX.i412 = bitcast %union.anon* %17024 to i32*
  %17025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17026 = getelementptr inbounds %struct.GPR, %struct.GPR* %17025, i32 0, i32 1
  %17027 = getelementptr inbounds %struct.Reg, %struct.Reg* %17026, i32 0, i32 0
  %RAX.i413 = bitcast %union.anon* %17027 to i64*
  %17028 = load i64, i64* %RAX.i413
  %17029 = load i32, i32* %EAX.i412
  %17030 = zext i32 %17029 to i64
  %17031 = load i64, i64* %PC.i411
  %17032 = add i64 %17031, 2
  store i64 %17032, i64* %PC.i411
  %17033 = xor i64 %17030, %17028
  %17034 = trunc i64 %17033 to i32
  %17035 = and i64 %17033, 4294967295
  store i64 %17035, i64* %RAX.i413, align 8
  %17036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17036, align 1
  %17037 = and i32 %17034, 255
  %17038 = call i32 @llvm.ctpop.i32(i32 %17037)
  %17039 = trunc i32 %17038 to i8
  %17040 = and i8 %17039, 1
  %17041 = xor i8 %17040, 1
  %17042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17041, i8* %17042, align 1
  %17043 = icmp eq i32 %17034, 0
  %17044 = zext i1 %17043 to i8
  %17045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17044, i8* %17045, align 1
  %17046 = lshr i32 %17034, 31
  %17047 = trunc i32 %17046 to i8
  %17048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17047, i8* %17048, align 1
  %17049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17049, align 1
  %17050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17050, align 1
  store %struct.Memory* %loadMem_43b090, %struct.Memory** %MEMORY
  %loadMem_43b092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17052 = getelementptr inbounds %struct.GPR, %struct.GPR* %17051, i32 0, i32 33
  %17053 = getelementptr inbounds %struct.Reg, %struct.Reg* %17052, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %17053 to i64*
  %17054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17055 = getelementptr inbounds %struct.GPR, %struct.GPR* %17054, i32 0, i32 1
  %17056 = getelementptr inbounds %struct.Reg, %struct.Reg* %17055, i32 0, i32 0
  %EAX.i409 = bitcast %union.anon* %17056 to i32*
  %17057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17058 = getelementptr inbounds %struct.GPR, %struct.GPR* %17057, i32 0, i32 15
  %17059 = getelementptr inbounds %struct.Reg, %struct.Reg* %17058, i32 0, i32 0
  %RBP.i410 = bitcast %union.anon* %17059 to i64*
  %17060 = load i64, i64* %RBP.i410
  %17061 = sub i64 %17060, 484
  %17062 = load i32, i32* %EAX.i409
  %17063 = zext i32 %17062 to i64
  %17064 = load i64, i64* %PC.i408
  %17065 = add i64 %17064, 6
  store i64 %17065, i64* %PC.i408
  %17066 = inttoptr i64 %17061 to i32*
  store i32 %17062, i32* %17066
  store %struct.Memory* %loadMem_43b092, %struct.Memory** %MEMORY
  %loadMem_43b098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17068 = getelementptr inbounds %struct.GPR, %struct.GPR* %17067, i32 0, i32 33
  %17069 = getelementptr inbounds %struct.Reg, %struct.Reg* %17068, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %17069 to i64*
  %17070 = load i64, i64* %PC.i407
  %17071 = add i64 %17070, 72
  %17072 = load i64, i64* %PC.i407
  %17073 = add i64 %17072, 5
  store i64 %17073, i64* %PC.i407
  %17074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17071, i64* %17074, align 8
  store %struct.Memory* %loadMem_43b098, %struct.Memory** %MEMORY
  br label %block_.L_43b0e0

block_.L_43b09d:                                  ; preds = %block_.L_43b081
  %loadMem_43b09d = load %struct.Memory*, %struct.Memory** %MEMORY
  %17075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17076 = getelementptr inbounds %struct.GPR, %struct.GPR* %17075, i32 0, i32 33
  %17077 = getelementptr inbounds %struct.Reg, %struct.Reg* %17076, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %17077 to i64*
  %17078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17079 = getelementptr inbounds %struct.GPR, %struct.GPR* %17078, i32 0, i32 1
  %17080 = getelementptr inbounds %struct.Reg, %struct.Reg* %17079, i32 0, i32 0
  %RAX.i405 = bitcast %union.anon* %17080 to i64*
  %17081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17082 = getelementptr inbounds %struct.GPR, %struct.GPR* %17081, i32 0, i32 15
  %17083 = getelementptr inbounds %struct.Reg, %struct.Reg* %17082, i32 0, i32 0
  %RBP.i406 = bitcast %union.anon* %17083 to i64*
  %17084 = load i64, i64* %RBP.i406
  %17085 = sub i64 %17084, 128
  %17086 = load i64, i64* %PC.i404
  %17087 = add i64 %17086, 3
  store i64 %17087, i64* %PC.i404
  %17088 = inttoptr i64 %17085 to i32*
  %17089 = load i32, i32* %17088
  %17090 = zext i32 %17089 to i64
  store i64 %17090, i64* %RAX.i405, align 8
  store %struct.Memory* %loadMem_43b09d, %struct.Memory** %MEMORY
  %loadMem_43b0a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17092 = getelementptr inbounds %struct.GPR, %struct.GPR* %17091, i32 0, i32 33
  %17093 = getelementptr inbounds %struct.Reg, %struct.Reg* %17092, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %17093 to i64*
  %17094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17095 = getelementptr inbounds %struct.GPR, %struct.GPR* %17094, i32 0, i32 1
  %17096 = getelementptr inbounds %struct.Reg, %struct.Reg* %17095, i32 0, i32 0
  %RAX.i402 = bitcast %union.anon* %17096 to i64*
  %17097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17098 = getelementptr inbounds %struct.GPR, %struct.GPR* %17097, i32 0, i32 15
  %17099 = getelementptr inbounds %struct.Reg, %struct.Reg* %17098, i32 0, i32 0
  %RBP.i403 = bitcast %union.anon* %17099 to i64*
  %17100 = load i64, i64* %RAX.i402
  %17101 = load i64, i64* %RBP.i403
  %17102 = sub i64 %17101, 112
  %17103 = load i64, i64* %PC.i401
  %17104 = add i64 %17103, 3
  store i64 %17104, i64* %PC.i401
  %17105 = trunc i64 %17100 to i32
  %17106 = inttoptr i64 %17102 to i32*
  %17107 = load i32, i32* %17106
  %17108 = add i32 %17107, %17105
  %17109 = zext i32 %17108 to i64
  store i64 %17109, i64* %RAX.i402, align 8
  %17110 = icmp ult i32 %17108, %17105
  %17111 = icmp ult i32 %17108, %17107
  %17112 = or i1 %17110, %17111
  %17113 = zext i1 %17112 to i8
  %17114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17113, i8* %17114, align 1
  %17115 = and i32 %17108, 255
  %17116 = call i32 @llvm.ctpop.i32(i32 %17115)
  %17117 = trunc i32 %17116 to i8
  %17118 = and i8 %17117, 1
  %17119 = xor i8 %17118, 1
  %17120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17119, i8* %17120, align 1
  %17121 = xor i32 %17107, %17105
  %17122 = xor i32 %17121, %17108
  %17123 = lshr i32 %17122, 4
  %17124 = trunc i32 %17123 to i8
  %17125 = and i8 %17124, 1
  %17126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17125, i8* %17126, align 1
  %17127 = icmp eq i32 %17108, 0
  %17128 = zext i1 %17127 to i8
  %17129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17128, i8* %17129, align 1
  %17130 = lshr i32 %17108, 31
  %17131 = trunc i32 %17130 to i8
  %17132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17131, i8* %17132, align 1
  %17133 = lshr i32 %17105, 31
  %17134 = lshr i32 %17107, 31
  %17135 = xor i32 %17130, %17133
  %17136 = xor i32 %17130, %17134
  %17137 = add i32 %17135, %17136
  %17138 = icmp eq i32 %17137, 2
  %17139 = zext i1 %17138 to i8
  %17140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17139, i8* %17140, align 1
  store %struct.Memory* %loadMem_43b0a0, %struct.Memory** %MEMORY
  %loadMem_43b0a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17142 = getelementptr inbounds %struct.GPR, %struct.GPR* %17141, i32 0, i32 33
  %17143 = getelementptr inbounds %struct.Reg, %struct.Reg* %17142, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %17143 to i64*
  %17144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17145 = getelementptr inbounds %struct.GPR, %struct.GPR* %17144, i32 0, i32 5
  %17146 = getelementptr inbounds %struct.Reg, %struct.Reg* %17145, i32 0, i32 0
  %RCX.i399 = bitcast %union.anon* %17146 to i64*
  %17147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17148 = getelementptr inbounds %struct.GPR, %struct.GPR* %17147, i32 0, i32 15
  %17149 = getelementptr inbounds %struct.Reg, %struct.Reg* %17148, i32 0, i32 0
  %RBP.i400 = bitcast %union.anon* %17149 to i64*
  %17150 = load i64, i64* %RBP.i400
  %17151 = sub i64 %17150, 40
  %17152 = load i64, i64* %PC.i398
  %17153 = add i64 %17152, 4
  store i64 %17153, i64* %PC.i398
  %17154 = inttoptr i64 %17151 to i64*
  %17155 = load i64, i64* %17154
  store i64 %17155, i64* %RCX.i399, align 8
  store %struct.Memory* %loadMem_43b0a3, %struct.Memory** %MEMORY
  %loadMem_43b0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17157 = getelementptr inbounds %struct.GPR, %struct.GPR* %17156, i32 0, i32 33
  %17158 = getelementptr inbounds %struct.Reg, %struct.Reg* %17157, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %17158 to i64*
  %17159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17160 = getelementptr inbounds %struct.GPR, %struct.GPR* %17159, i32 0, i32 1
  %17161 = getelementptr inbounds %struct.Reg, %struct.Reg* %17160, i32 0, i32 0
  %EAX.i396 = bitcast %union.anon* %17161 to i32*
  %17162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17163 = getelementptr inbounds %struct.GPR, %struct.GPR* %17162, i32 0, i32 5
  %17164 = getelementptr inbounds %struct.Reg, %struct.Reg* %17163, i32 0, i32 0
  %RCX.i397 = bitcast %union.anon* %17164 to i64*
  %17165 = load i32, i32* %EAX.i396
  %17166 = zext i32 %17165 to i64
  %17167 = load i64, i64* %RCX.i397
  %17168 = add i64 %17167, 72688
  %17169 = load i64, i64* %PC.i395
  %17170 = add i64 %17169, 6
  store i64 %17170, i64* %PC.i395
  %17171 = inttoptr i64 %17168 to i32*
  %17172 = load i32, i32* %17171
  %17173 = sub i32 %17165, %17172
  %17174 = icmp ult i32 %17165, %17172
  %17175 = zext i1 %17174 to i8
  %17176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17175, i8* %17176, align 1
  %17177 = and i32 %17173, 255
  %17178 = call i32 @llvm.ctpop.i32(i32 %17177)
  %17179 = trunc i32 %17178 to i8
  %17180 = and i8 %17179, 1
  %17181 = xor i8 %17180, 1
  %17182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17181, i8* %17182, align 1
  %17183 = xor i32 %17172, %17165
  %17184 = xor i32 %17183, %17173
  %17185 = lshr i32 %17184, 4
  %17186 = trunc i32 %17185 to i8
  %17187 = and i8 %17186, 1
  %17188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17187, i8* %17188, align 1
  %17189 = icmp eq i32 %17173, 0
  %17190 = zext i1 %17189 to i8
  %17191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17190, i8* %17191, align 1
  %17192 = lshr i32 %17173, 31
  %17193 = trunc i32 %17192 to i8
  %17194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17193, i8* %17194, align 1
  %17195 = lshr i32 %17165, 31
  %17196 = lshr i32 %17172, 31
  %17197 = xor i32 %17196, %17195
  %17198 = xor i32 %17192, %17195
  %17199 = add i32 %17198, %17197
  %17200 = icmp eq i32 %17199, 2
  %17201 = zext i1 %17200 to i8
  %17202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17201, i8* %17202, align 1
  store %struct.Memory* %loadMem_43b0a7, %struct.Memory** %MEMORY
  %loadMem_43b0ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %17203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17204 = getelementptr inbounds %struct.GPR, %struct.GPR* %17203, i32 0, i32 33
  %17205 = getelementptr inbounds %struct.Reg, %struct.Reg* %17204, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %17205 to i64*
  %17206 = load i64, i64* %PC.i394
  %17207 = add i64 %17206, 27
  %17208 = load i64, i64* %PC.i394
  %17209 = add i64 %17208, 6
  %17210 = load i64, i64* %PC.i394
  %17211 = add i64 %17210, 6
  store i64 %17211, i64* %PC.i394
  %17212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17213 = load i8, i8* %17212, align 1
  %17214 = icmp ne i8 %17213, 0
  %17215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17216 = load i8, i8* %17215, align 1
  %17217 = icmp ne i8 %17216, 0
  %17218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17219 = load i8, i8* %17218, align 1
  %17220 = icmp ne i8 %17219, 0
  %17221 = xor i1 %17217, %17220
  %17222 = or i1 %17214, %17221
  %17223 = zext i1 %17222 to i8
  store i8 %17223, i8* %BRANCH_TAKEN, align 1
  %17224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17225 = select i1 %17222, i64 %17207, i64 %17209
  store i64 %17225, i64* %17224, align 8
  store %struct.Memory* %loadMem_43b0ad, %struct.Memory** %MEMORY
  %loadBr_43b0ad = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b0ad = icmp eq i8 %loadBr_43b0ad, 1
  br i1 %cmpBr_43b0ad, label %block_.L_43b0c8, label %block_43b0b3

block_43b0b3:                                     ; preds = %block_.L_43b09d
  %loadMem_43b0b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17227 = getelementptr inbounds %struct.GPR, %struct.GPR* %17226, i32 0, i32 33
  %17228 = getelementptr inbounds %struct.Reg, %struct.Reg* %17227, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %17228 to i64*
  %17229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17230 = getelementptr inbounds %struct.GPR, %struct.GPR* %17229, i32 0, i32 1
  %17231 = getelementptr inbounds %struct.Reg, %struct.Reg* %17230, i32 0, i32 0
  %RAX.i392 = bitcast %union.anon* %17231 to i64*
  %17232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17233 = getelementptr inbounds %struct.GPR, %struct.GPR* %17232, i32 0, i32 15
  %17234 = getelementptr inbounds %struct.Reg, %struct.Reg* %17233, i32 0, i32 0
  %RBP.i393 = bitcast %union.anon* %17234 to i64*
  %17235 = load i64, i64* %RBP.i393
  %17236 = sub i64 %17235, 40
  %17237 = load i64, i64* %PC.i391
  %17238 = add i64 %17237, 4
  store i64 %17238, i64* %PC.i391
  %17239 = inttoptr i64 %17236 to i64*
  %17240 = load i64, i64* %17239
  store i64 %17240, i64* %RAX.i392, align 8
  store %struct.Memory* %loadMem_43b0b3, %struct.Memory** %MEMORY
  %loadMem_43b0b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17242 = getelementptr inbounds %struct.GPR, %struct.GPR* %17241, i32 0, i32 33
  %17243 = getelementptr inbounds %struct.Reg, %struct.Reg* %17242, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %17243 to i64*
  %17244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17245 = getelementptr inbounds %struct.GPR, %struct.GPR* %17244, i32 0, i32 1
  %17246 = getelementptr inbounds %struct.Reg, %struct.Reg* %17245, i32 0, i32 0
  %RAX.i389 = bitcast %union.anon* %17246 to i64*
  %17247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17248 = getelementptr inbounds %struct.GPR, %struct.GPR* %17247, i32 0, i32 5
  %17249 = getelementptr inbounds %struct.Reg, %struct.Reg* %17248, i32 0, i32 0
  %RCX.i390 = bitcast %union.anon* %17249 to i64*
  %17250 = load i64, i64* %RAX.i389
  %17251 = add i64 %17250, 72688
  %17252 = load i64, i64* %PC.i388
  %17253 = add i64 %17252, 6
  store i64 %17253, i64* %PC.i388
  %17254 = inttoptr i64 %17251 to i32*
  %17255 = load i32, i32* %17254
  %17256 = zext i32 %17255 to i64
  store i64 %17256, i64* %RCX.i390, align 8
  store %struct.Memory* %loadMem_43b0b7, %struct.Memory** %MEMORY
  %loadMem_43b0bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17258 = getelementptr inbounds %struct.GPR, %struct.GPR* %17257, i32 0, i32 33
  %17259 = getelementptr inbounds %struct.Reg, %struct.Reg* %17258, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %17259 to i64*
  %17260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17261 = getelementptr inbounds %struct.GPR, %struct.GPR* %17260, i32 0, i32 5
  %17262 = getelementptr inbounds %struct.Reg, %struct.Reg* %17261, i32 0, i32 0
  %ECX.i386 = bitcast %union.anon* %17262 to i32*
  %17263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17264 = getelementptr inbounds %struct.GPR, %struct.GPR* %17263, i32 0, i32 15
  %17265 = getelementptr inbounds %struct.Reg, %struct.Reg* %17264, i32 0, i32 0
  %RBP.i387 = bitcast %union.anon* %17265 to i64*
  %17266 = load i64, i64* %RBP.i387
  %17267 = sub i64 %17266, 488
  %17268 = load i32, i32* %ECX.i386
  %17269 = zext i32 %17268 to i64
  %17270 = load i64, i64* %PC.i385
  %17271 = add i64 %17270, 6
  store i64 %17271, i64* %PC.i385
  %17272 = inttoptr i64 %17267 to i32*
  store i32 %17268, i32* %17272
  store %struct.Memory* %loadMem_43b0bd, %struct.Memory** %MEMORY
  %loadMem_43b0c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17274 = getelementptr inbounds %struct.GPR, %struct.GPR* %17273, i32 0, i32 33
  %17275 = getelementptr inbounds %struct.Reg, %struct.Reg* %17274, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %17275 to i64*
  %17276 = load i64, i64* %PC.i384
  %17277 = add i64 %17276, 17
  %17278 = load i64, i64* %PC.i384
  %17279 = add i64 %17278, 5
  store i64 %17279, i64* %PC.i384
  %17280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17277, i64* %17280, align 8
  store %struct.Memory* %loadMem_43b0c3, %struct.Memory** %MEMORY
  br label %block_.L_43b0d4

block_.L_43b0c8:                                  ; preds = %block_.L_43b09d
  %loadMem_43b0c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17282 = getelementptr inbounds %struct.GPR, %struct.GPR* %17281, i32 0, i32 33
  %17283 = getelementptr inbounds %struct.Reg, %struct.Reg* %17282, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %17283 to i64*
  %17284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17285 = getelementptr inbounds %struct.GPR, %struct.GPR* %17284, i32 0, i32 1
  %17286 = getelementptr inbounds %struct.Reg, %struct.Reg* %17285, i32 0, i32 0
  %RAX.i382 = bitcast %union.anon* %17286 to i64*
  %17287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17288 = getelementptr inbounds %struct.GPR, %struct.GPR* %17287, i32 0, i32 15
  %17289 = getelementptr inbounds %struct.Reg, %struct.Reg* %17288, i32 0, i32 0
  %RBP.i383 = bitcast %union.anon* %17289 to i64*
  %17290 = load i64, i64* %RBP.i383
  %17291 = sub i64 %17290, 128
  %17292 = load i64, i64* %PC.i381
  %17293 = add i64 %17292, 3
  store i64 %17293, i64* %PC.i381
  %17294 = inttoptr i64 %17291 to i32*
  %17295 = load i32, i32* %17294
  %17296 = zext i32 %17295 to i64
  store i64 %17296, i64* %RAX.i382, align 8
  store %struct.Memory* %loadMem_43b0c8, %struct.Memory** %MEMORY
  %loadMem_43b0cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %17297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17298 = getelementptr inbounds %struct.GPR, %struct.GPR* %17297, i32 0, i32 33
  %17299 = getelementptr inbounds %struct.Reg, %struct.Reg* %17298, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %17299 to i64*
  %17300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17301 = getelementptr inbounds %struct.GPR, %struct.GPR* %17300, i32 0, i32 1
  %17302 = getelementptr inbounds %struct.Reg, %struct.Reg* %17301, i32 0, i32 0
  %RAX.i379 = bitcast %union.anon* %17302 to i64*
  %17303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17304 = getelementptr inbounds %struct.GPR, %struct.GPR* %17303, i32 0, i32 15
  %17305 = getelementptr inbounds %struct.Reg, %struct.Reg* %17304, i32 0, i32 0
  %RBP.i380 = bitcast %union.anon* %17305 to i64*
  %17306 = load i64, i64* %RAX.i379
  %17307 = load i64, i64* %RBP.i380
  %17308 = sub i64 %17307, 112
  %17309 = load i64, i64* %PC.i378
  %17310 = add i64 %17309, 3
  store i64 %17310, i64* %PC.i378
  %17311 = trunc i64 %17306 to i32
  %17312 = inttoptr i64 %17308 to i32*
  %17313 = load i32, i32* %17312
  %17314 = add i32 %17313, %17311
  %17315 = zext i32 %17314 to i64
  store i64 %17315, i64* %RAX.i379, align 8
  %17316 = icmp ult i32 %17314, %17311
  %17317 = icmp ult i32 %17314, %17313
  %17318 = or i1 %17316, %17317
  %17319 = zext i1 %17318 to i8
  %17320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17319, i8* %17320, align 1
  %17321 = and i32 %17314, 255
  %17322 = call i32 @llvm.ctpop.i32(i32 %17321)
  %17323 = trunc i32 %17322 to i8
  %17324 = and i8 %17323, 1
  %17325 = xor i8 %17324, 1
  %17326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17325, i8* %17326, align 1
  %17327 = xor i32 %17313, %17311
  %17328 = xor i32 %17327, %17314
  %17329 = lshr i32 %17328, 4
  %17330 = trunc i32 %17329 to i8
  %17331 = and i8 %17330, 1
  %17332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17331, i8* %17332, align 1
  %17333 = icmp eq i32 %17314, 0
  %17334 = zext i1 %17333 to i8
  %17335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17334, i8* %17335, align 1
  %17336 = lshr i32 %17314, 31
  %17337 = trunc i32 %17336 to i8
  %17338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17337, i8* %17338, align 1
  %17339 = lshr i32 %17311, 31
  %17340 = lshr i32 %17313, 31
  %17341 = xor i32 %17336, %17339
  %17342 = xor i32 %17336, %17340
  %17343 = add i32 %17341, %17342
  %17344 = icmp eq i32 %17343, 2
  %17345 = zext i1 %17344 to i8
  %17346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17345, i8* %17346, align 1
  store %struct.Memory* %loadMem_43b0cb, %struct.Memory** %MEMORY
  %loadMem_43b0ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %17347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17348 = getelementptr inbounds %struct.GPR, %struct.GPR* %17347, i32 0, i32 33
  %17349 = getelementptr inbounds %struct.Reg, %struct.Reg* %17348, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %17349 to i64*
  %17350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17351 = getelementptr inbounds %struct.GPR, %struct.GPR* %17350, i32 0, i32 1
  %17352 = getelementptr inbounds %struct.Reg, %struct.Reg* %17351, i32 0, i32 0
  %EAX.i376 = bitcast %union.anon* %17352 to i32*
  %17353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17354 = getelementptr inbounds %struct.GPR, %struct.GPR* %17353, i32 0, i32 15
  %17355 = getelementptr inbounds %struct.Reg, %struct.Reg* %17354, i32 0, i32 0
  %RBP.i377 = bitcast %union.anon* %17355 to i64*
  %17356 = load i64, i64* %RBP.i377
  %17357 = sub i64 %17356, 488
  %17358 = load i32, i32* %EAX.i376
  %17359 = zext i32 %17358 to i64
  %17360 = load i64, i64* %PC.i375
  %17361 = add i64 %17360, 6
  store i64 %17361, i64* %PC.i375
  %17362 = inttoptr i64 %17357 to i32*
  store i32 %17358, i32* %17362
  store %struct.Memory* %loadMem_43b0ce, %struct.Memory** %MEMORY
  br label %block_.L_43b0d4

block_.L_43b0d4:                                  ; preds = %block_.L_43b0c8, %block_43b0b3
  %loadMem_43b0d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17364 = getelementptr inbounds %struct.GPR, %struct.GPR* %17363, i32 0, i32 33
  %17365 = getelementptr inbounds %struct.Reg, %struct.Reg* %17364, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %17365 to i64*
  %17366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17367 = getelementptr inbounds %struct.GPR, %struct.GPR* %17366, i32 0, i32 1
  %17368 = getelementptr inbounds %struct.Reg, %struct.Reg* %17367, i32 0, i32 0
  %RAX.i373 = bitcast %union.anon* %17368 to i64*
  %17369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17370 = getelementptr inbounds %struct.GPR, %struct.GPR* %17369, i32 0, i32 15
  %17371 = getelementptr inbounds %struct.Reg, %struct.Reg* %17370, i32 0, i32 0
  %RBP.i374 = bitcast %union.anon* %17371 to i64*
  %17372 = load i64, i64* %RBP.i374
  %17373 = sub i64 %17372, 488
  %17374 = load i64, i64* %PC.i372
  %17375 = add i64 %17374, 6
  store i64 %17375, i64* %PC.i372
  %17376 = inttoptr i64 %17373 to i32*
  %17377 = load i32, i32* %17376
  %17378 = zext i32 %17377 to i64
  store i64 %17378, i64* %RAX.i373, align 8
  store %struct.Memory* %loadMem_43b0d4, %struct.Memory** %MEMORY
  %loadMem_43b0da = load %struct.Memory*, %struct.Memory** %MEMORY
  %17379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17380 = getelementptr inbounds %struct.GPR, %struct.GPR* %17379, i32 0, i32 33
  %17381 = getelementptr inbounds %struct.Reg, %struct.Reg* %17380, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %17381 to i64*
  %17382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17383 = getelementptr inbounds %struct.GPR, %struct.GPR* %17382, i32 0, i32 1
  %17384 = getelementptr inbounds %struct.Reg, %struct.Reg* %17383, i32 0, i32 0
  %EAX.i370 = bitcast %union.anon* %17384 to i32*
  %17385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17386 = getelementptr inbounds %struct.GPR, %struct.GPR* %17385, i32 0, i32 15
  %17387 = getelementptr inbounds %struct.Reg, %struct.Reg* %17386, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %17387 to i64*
  %17388 = load i64, i64* %RBP.i371
  %17389 = sub i64 %17388, 484
  %17390 = load i32, i32* %EAX.i370
  %17391 = zext i32 %17390 to i64
  %17392 = load i64, i64* %PC.i369
  %17393 = add i64 %17392, 6
  store i64 %17393, i64* %PC.i369
  %17394 = inttoptr i64 %17389 to i32*
  store i32 %17390, i32* %17394
  store %struct.Memory* %loadMem_43b0da, %struct.Memory** %MEMORY
  br label %block_.L_43b0e0

block_.L_43b0e0:                                  ; preds = %block_.L_43b0d4, %block_43b090
  %loadMem_43b0e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17396 = getelementptr inbounds %struct.GPR, %struct.GPR* %17395, i32 0, i32 33
  %17397 = getelementptr inbounds %struct.Reg, %struct.Reg* %17396, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %17397 to i64*
  %17398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17399 = getelementptr inbounds %struct.GPR, %struct.GPR* %17398, i32 0, i32 1
  %17400 = getelementptr inbounds %struct.Reg, %struct.Reg* %17399, i32 0, i32 0
  %RAX.i367 = bitcast %union.anon* %17400 to i64*
  %17401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17402 = getelementptr inbounds %struct.GPR, %struct.GPR* %17401, i32 0, i32 15
  %17403 = getelementptr inbounds %struct.Reg, %struct.Reg* %17402, i32 0, i32 0
  %RBP.i368 = bitcast %union.anon* %17403 to i64*
  %17404 = load i64, i64* %RBP.i368
  %17405 = sub i64 %17404, 484
  %17406 = load i64, i64* %PC.i366
  %17407 = add i64 %17406, 6
  store i64 %17407, i64* %PC.i366
  %17408 = inttoptr i64 %17405 to i32*
  %17409 = load i32, i32* %17408
  %17410 = zext i32 %17409 to i64
  store i64 %17410, i64* %RAX.i367, align 8
  store %struct.Memory* %loadMem_43b0e0, %struct.Memory** %MEMORY
  %loadMem_43b0e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17412 = getelementptr inbounds %struct.GPR, %struct.GPR* %17411, i32 0, i32 33
  %17413 = getelementptr inbounds %struct.Reg, %struct.Reg* %17412, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %17413 to i64*
  %17414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17415 = getelementptr inbounds %struct.GPR, %struct.GPR* %17414, i32 0, i32 1
  %17416 = getelementptr inbounds %struct.Reg, %struct.Reg* %17415, i32 0, i32 0
  %AX.i364 = bitcast %union.anon* %17416 to i16*
  %17417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17418 = getelementptr inbounds %struct.GPR, %struct.GPR* %17417, i32 0, i32 5
  %17419 = getelementptr inbounds %struct.Reg, %struct.Reg* %17418, i32 0, i32 0
  %CX.i365 = bitcast %union.anon* %17419 to i16*
  %17420 = load i16, i16* %AX.i364
  %17421 = zext i16 %17420 to i64
  %17422 = load i64, i64* %PC.i363
  %17423 = add i64 %17422, 3
  store i64 %17423, i64* %PC.i363
  store i16 %17420, i16* %CX.i365, align 2
  store %struct.Memory* %loadMem_43b0e6, %struct.Memory** %MEMORY
  %loadMem_43b0e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17425 = getelementptr inbounds %struct.GPR, %struct.GPR* %17424, i32 0, i32 33
  %17426 = getelementptr inbounds %struct.Reg, %struct.Reg* %17425, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %17426 to i64*
  %17427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17428 = getelementptr inbounds %struct.GPR, %struct.GPR* %17427, i32 0, i32 7
  %17429 = getelementptr inbounds %struct.Reg, %struct.Reg* %17428, i32 0, i32 0
  %RDX.i361 = bitcast %union.anon* %17429 to i64*
  %17430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17431 = getelementptr inbounds %struct.GPR, %struct.GPR* %17430, i32 0, i32 15
  %17432 = getelementptr inbounds %struct.Reg, %struct.Reg* %17431, i32 0, i32 0
  %RBP.i362 = bitcast %union.anon* %17432 to i64*
  %17433 = load i64, i64* %RBP.i362
  %17434 = sub i64 %17433, 200
  %17435 = load i64, i64* %PC.i360
  %17436 = add i64 %17435, 7
  store i64 %17436, i64* %PC.i360
  %17437 = inttoptr i64 %17434 to i64*
  %17438 = load i64, i64* %17437
  store i64 %17438, i64* %RDX.i361, align 8
  store %struct.Memory* %loadMem_43b0e9, %struct.Memory** %MEMORY
  %loadMem_43b0f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17440 = getelementptr inbounds %struct.GPR, %struct.GPR* %17439, i32 0, i32 33
  %17441 = getelementptr inbounds %struct.Reg, %struct.Reg* %17440, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %17441 to i64*
  %17442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17443 = getelementptr inbounds %struct.GPR, %struct.GPR* %17442, i32 0, i32 5
  %17444 = getelementptr inbounds %struct.Reg, %struct.Reg* %17443, i32 0, i32 0
  %CX.i358 = bitcast %union.anon* %17444 to i16*
  %17445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17446 = getelementptr inbounds %struct.GPR, %struct.GPR* %17445, i32 0, i32 7
  %17447 = getelementptr inbounds %struct.Reg, %struct.Reg* %17446, i32 0, i32 0
  %RDX.i359 = bitcast %union.anon* %17447 to i64*
  %17448 = load i64, i64* %RDX.i359
  %17449 = load i16, i16* %CX.i358
  %17450 = zext i16 %17449 to i64
  %17451 = load i64, i64* %PC.i357
  %17452 = add i64 %17451, 3
  store i64 %17452, i64* %PC.i357
  %17453 = inttoptr i64 %17448 to i16*
  store i16 %17449, i16* %17453
  store %struct.Memory* %loadMem_43b0f0, %struct.Memory** %MEMORY
  %loadMem_43b0f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17455 = getelementptr inbounds %struct.GPR, %struct.GPR* %17454, i32 0, i32 33
  %17456 = getelementptr inbounds %struct.Reg, %struct.Reg* %17455, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %17456 to i64*
  %17457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17458 = getelementptr inbounds %struct.GPR, %struct.GPR* %17457, i32 0, i32 1
  %17459 = getelementptr inbounds %struct.Reg, %struct.Reg* %17458, i32 0, i32 0
  %RAX.i355 = bitcast %union.anon* %17459 to i64*
  %17460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17461 = getelementptr inbounds %struct.GPR, %struct.GPR* %17460, i32 0, i32 15
  %17462 = getelementptr inbounds %struct.Reg, %struct.Reg* %17461, i32 0, i32 0
  %RBP.i356 = bitcast %union.anon* %17462 to i64*
  %17463 = load i64, i64* %RBP.i356
  %17464 = sub i64 %17463, 132
  %17465 = load i64, i64* %PC.i354
  %17466 = add i64 %17465, 6
  store i64 %17466, i64* %PC.i354
  %17467 = inttoptr i64 %17464 to i32*
  %17468 = load i32, i32* %17467
  %17469 = zext i32 %17468 to i64
  store i64 %17469, i64* %RAX.i355, align 8
  store %struct.Memory* %loadMem_43b0f3, %struct.Memory** %MEMORY
  %loadMem_43b0f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17471 = getelementptr inbounds %struct.GPR, %struct.GPR* %17470, i32 0, i32 33
  %17472 = getelementptr inbounds %struct.Reg, %struct.Reg* %17471, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %17472 to i64*
  %17473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17474 = getelementptr inbounds %struct.GPR, %struct.GPR* %17473, i32 0, i32 1
  %17475 = getelementptr inbounds %struct.Reg, %struct.Reg* %17474, i32 0, i32 0
  %RAX.i352 = bitcast %union.anon* %17475 to i64*
  %17476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17477 = getelementptr inbounds %struct.GPR, %struct.GPR* %17476, i32 0, i32 15
  %17478 = getelementptr inbounds %struct.Reg, %struct.Reg* %17477, i32 0, i32 0
  %RBP.i353 = bitcast %union.anon* %17478 to i64*
  %17479 = load i64, i64* %RAX.i352
  %17480 = load i64, i64* %RBP.i353
  %17481 = sub i64 %17480, 112
  %17482 = load i64, i64* %PC.i351
  %17483 = add i64 %17482, 3
  store i64 %17483, i64* %PC.i351
  %17484 = trunc i64 %17479 to i32
  %17485 = inttoptr i64 %17481 to i32*
  %17486 = load i32, i32* %17485
  %17487 = sub i32 %17484, %17486
  %17488 = zext i32 %17487 to i64
  store i64 %17488, i64* %RAX.i352, align 8
  %17489 = icmp ult i32 %17484, %17486
  %17490 = zext i1 %17489 to i8
  %17491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17490, i8* %17491, align 1
  %17492 = and i32 %17487, 255
  %17493 = call i32 @llvm.ctpop.i32(i32 %17492)
  %17494 = trunc i32 %17493 to i8
  %17495 = and i8 %17494, 1
  %17496 = xor i8 %17495, 1
  %17497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17496, i8* %17497, align 1
  %17498 = xor i32 %17486, %17484
  %17499 = xor i32 %17498, %17487
  %17500 = lshr i32 %17499, 4
  %17501 = trunc i32 %17500 to i8
  %17502 = and i8 %17501, 1
  %17503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17502, i8* %17503, align 1
  %17504 = icmp eq i32 %17487, 0
  %17505 = zext i1 %17504 to i8
  %17506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17505, i8* %17506, align 1
  %17507 = lshr i32 %17487, 31
  %17508 = trunc i32 %17507 to i8
  %17509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17508, i8* %17509, align 1
  %17510 = lshr i32 %17484, 31
  %17511 = lshr i32 %17486, 31
  %17512 = xor i32 %17511, %17510
  %17513 = xor i32 %17507, %17510
  %17514 = add i32 %17513, %17512
  %17515 = icmp eq i32 %17514, 2
  %17516 = zext i1 %17515 to i8
  %17517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17516, i8* %17517, align 1
  store %struct.Memory* %loadMem_43b0f9, %struct.Memory** %MEMORY
  %loadMem_43b0fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %17518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17519 = getelementptr inbounds %struct.GPR, %struct.GPR* %17518, i32 0, i32 33
  %17520 = getelementptr inbounds %struct.Reg, %struct.Reg* %17519, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %17520 to i64*
  %17521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17522 = getelementptr inbounds %struct.GPR, %struct.GPR* %17521, i32 0, i32 1
  %17523 = getelementptr inbounds %struct.Reg, %struct.Reg* %17522, i32 0, i32 0
  %EAX.i350 = bitcast %union.anon* %17523 to i32*
  %17524 = load i32, i32* %EAX.i350
  %17525 = zext i32 %17524 to i64
  %17526 = load i64, i64* %PC.i349
  %17527 = add i64 %17526, 3
  store i64 %17527, i64* %PC.i349
  %17528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17528, align 1
  %17529 = and i32 %17524, 255
  %17530 = call i32 @llvm.ctpop.i32(i32 %17529)
  %17531 = trunc i32 %17530 to i8
  %17532 = and i8 %17531, 1
  %17533 = xor i8 %17532, 1
  %17534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17533, i8* %17534, align 1
  %17535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17535, align 1
  %17536 = icmp eq i32 %17524, 0
  %17537 = zext i1 %17536 to i8
  %17538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17537, i8* %17538, align 1
  %17539 = lshr i32 %17524, 31
  %17540 = trunc i32 %17539 to i8
  %17541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17540, i8* %17541, align 1
  %17542 = lshr i32 %17524, 31
  %17543 = xor i32 %17539, %17542
  %17544 = add i32 %17543, %17542
  %17545 = icmp eq i32 %17544, 2
  %17546 = zext i1 %17545 to i8
  %17547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17546, i8* %17547, align 1
  store %struct.Memory* %loadMem_43b0fc, %struct.Memory** %MEMORY
  %loadMem_43b0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %17548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17549 = getelementptr inbounds %struct.GPR, %struct.GPR* %17548, i32 0, i32 33
  %17550 = getelementptr inbounds %struct.Reg, %struct.Reg* %17549, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %17550 to i64*
  %17551 = load i64, i64* %PC.i348
  %17552 = add i64 %17551, 19
  %17553 = load i64, i64* %PC.i348
  %17554 = add i64 %17553, 6
  %17555 = load i64, i64* %PC.i348
  %17556 = add i64 %17555, 6
  store i64 %17556, i64* %PC.i348
  %17557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17558 = load i8, i8* %17557, align 1
  %17559 = icmp ne i8 %17558, 0
  %17560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17561 = load i8, i8* %17560, align 1
  %17562 = icmp ne i8 %17561, 0
  %17563 = xor i1 %17559, %17562
  %17564 = xor i1 %17563, true
  %17565 = zext i1 %17564 to i8
  store i8 %17565, i8* %BRANCH_TAKEN, align 1
  %17566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17567 = select i1 %17563, i64 %17554, i64 %17552
  store i64 %17567, i64* %17566, align 8
  store %struct.Memory* %loadMem_43b0ff, %struct.Memory** %MEMORY
  %loadBr_43b0ff = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b0ff = icmp eq i8 %loadBr_43b0ff, 1
  br i1 %cmpBr_43b0ff, label %block_.L_43b112, label %block_43b105

block_43b105:                                     ; preds = %block_.L_43b0e0
  %loadMem_43b105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17569 = getelementptr inbounds %struct.GPR, %struct.GPR* %17568, i32 0, i32 33
  %17570 = getelementptr inbounds %struct.Reg, %struct.Reg* %17569, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %17570 to i64*
  %17571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17572 = getelementptr inbounds %struct.GPR, %struct.GPR* %17571, i32 0, i32 1
  %17573 = getelementptr inbounds %struct.Reg, %struct.Reg* %17572, i32 0, i32 0
  %EAX.i346 = bitcast %union.anon* %17573 to i32*
  %17574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17575 = getelementptr inbounds %struct.GPR, %struct.GPR* %17574, i32 0, i32 1
  %17576 = getelementptr inbounds %struct.Reg, %struct.Reg* %17575, i32 0, i32 0
  %RAX.i347 = bitcast %union.anon* %17576 to i64*
  %17577 = load i64, i64* %RAX.i347
  %17578 = load i32, i32* %EAX.i346
  %17579 = zext i32 %17578 to i64
  %17580 = load i64, i64* %PC.i345
  %17581 = add i64 %17580, 2
  store i64 %17581, i64* %PC.i345
  %17582 = xor i64 %17579, %17577
  %17583 = trunc i64 %17582 to i32
  %17584 = and i64 %17582, 4294967295
  store i64 %17584, i64* %RAX.i347, align 8
  %17585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17585, align 1
  %17586 = and i32 %17583, 255
  %17587 = call i32 @llvm.ctpop.i32(i32 %17586)
  %17588 = trunc i32 %17587 to i8
  %17589 = and i8 %17588, 1
  %17590 = xor i8 %17589, 1
  %17591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17590, i8* %17591, align 1
  %17592 = icmp eq i32 %17583, 0
  %17593 = zext i1 %17592 to i8
  %17594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17593, i8* %17594, align 1
  %17595 = lshr i32 %17583, 31
  %17596 = trunc i32 %17595 to i8
  %17597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17596, i8* %17597, align 1
  %17598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17598, align 1
  %17599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17599, align 1
  store %struct.Memory* %loadMem_43b105, %struct.Memory** %MEMORY
  %loadMem_43b107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17601 = getelementptr inbounds %struct.GPR, %struct.GPR* %17600, i32 0, i32 33
  %17602 = getelementptr inbounds %struct.Reg, %struct.Reg* %17601, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %17602 to i64*
  %17603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17604 = getelementptr inbounds %struct.GPR, %struct.GPR* %17603, i32 0, i32 1
  %17605 = getelementptr inbounds %struct.Reg, %struct.Reg* %17604, i32 0, i32 0
  %EAX.i343 = bitcast %union.anon* %17605 to i32*
  %17606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17607 = getelementptr inbounds %struct.GPR, %struct.GPR* %17606, i32 0, i32 15
  %17608 = getelementptr inbounds %struct.Reg, %struct.Reg* %17607, i32 0, i32 0
  %RBP.i344 = bitcast %union.anon* %17608 to i64*
  %17609 = load i64, i64* %RBP.i344
  %17610 = sub i64 %17609, 492
  %17611 = load i32, i32* %EAX.i343
  %17612 = zext i32 %17611 to i64
  %17613 = load i64, i64* %PC.i342
  %17614 = add i64 %17613, 6
  store i64 %17614, i64* %PC.i342
  %17615 = inttoptr i64 %17610 to i32*
  store i32 %17611, i32* %17615
  store %struct.Memory* %loadMem_43b107, %struct.Memory** %MEMORY
  %loadMem_43b10d = load %struct.Memory*, %struct.Memory** %MEMORY
  %17616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17617 = getelementptr inbounds %struct.GPR, %struct.GPR* %17616, i32 0, i32 33
  %17618 = getelementptr inbounds %struct.Reg, %struct.Reg* %17617, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %17618 to i64*
  %17619 = load i64, i64* %PC.i341
  %17620 = add i64 %17619, 78
  %17621 = load i64, i64* %PC.i341
  %17622 = add i64 %17621, 5
  store i64 %17622, i64* %PC.i341
  %17623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17620, i64* %17623, align 8
  store %struct.Memory* %loadMem_43b10d, %struct.Memory** %MEMORY
  br label %block_.L_43b15b

block_.L_43b112:                                  ; preds = %block_.L_43b0e0
  %loadMem_43b112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17625 = getelementptr inbounds %struct.GPR, %struct.GPR* %17624, i32 0, i32 33
  %17626 = getelementptr inbounds %struct.Reg, %struct.Reg* %17625, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %17626 to i64*
  %17627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17628 = getelementptr inbounds %struct.GPR, %struct.GPR* %17627, i32 0, i32 1
  %17629 = getelementptr inbounds %struct.Reg, %struct.Reg* %17628, i32 0, i32 0
  %RAX.i339 = bitcast %union.anon* %17629 to i64*
  %17630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17631 = getelementptr inbounds %struct.GPR, %struct.GPR* %17630, i32 0, i32 15
  %17632 = getelementptr inbounds %struct.Reg, %struct.Reg* %17631, i32 0, i32 0
  %RBP.i340 = bitcast %union.anon* %17632 to i64*
  %17633 = load i64, i64* %RBP.i340
  %17634 = sub i64 %17633, 132
  %17635 = load i64, i64* %PC.i338
  %17636 = add i64 %17635, 6
  store i64 %17636, i64* %PC.i338
  %17637 = inttoptr i64 %17634 to i32*
  %17638 = load i32, i32* %17637
  %17639 = zext i32 %17638 to i64
  store i64 %17639, i64* %RAX.i339, align 8
  store %struct.Memory* %loadMem_43b112, %struct.Memory** %MEMORY
  %loadMem_43b118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17641 = getelementptr inbounds %struct.GPR, %struct.GPR* %17640, i32 0, i32 33
  %17642 = getelementptr inbounds %struct.Reg, %struct.Reg* %17641, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %17642 to i64*
  %17643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17644 = getelementptr inbounds %struct.GPR, %struct.GPR* %17643, i32 0, i32 1
  %17645 = getelementptr inbounds %struct.Reg, %struct.Reg* %17644, i32 0, i32 0
  %RAX.i336 = bitcast %union.anon* %17645 to i64*
  %17646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17647 = getelementptr inbounds %struct.GPR, %struct.GPR* %17646, i32 0, i32 15
  %17648 = getelementptr inbounds %struct.Reg, %struct.Reg* %17647, i32 0, i32 0
  %RBP.i337 = bitcast %union.anon* %17648 to i64*
  %17649 = load i64, i64* %RAX.i336
  %17650 = load i64, i64* %RBP.i337
  %17651 = sub i64 %17650, 112
  %17652 = load i64, i64* %PC.i335
  %17653 = add i64 %17652, 3
  store i64 %17653, i64* %PC.i335
  %17654 = trunc i64 %17649 to i32
  %17655 = inttoptr i64 %17651 to i32*
  %17656 = load i32, i32* %17655
  %17657 = sub i32 %17654, %17656
  %17658 = zext i32 %17657 to i64
  store i64 %17658, i64* %RAX.i336, align 8
  %17659 = icmp ult i32 %17654, %17656
  %17660 = zext i1 %17659 to i8
  %17661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17660, i8* %17661, align 1
  %17662 = and i32 %17657, 255
  %17663 = call i32 @llvm.ctpop.i32(i32 %17662)
  %17664 = trunc i32 %17663 to i8
  %17665 = and i8 %17664, 1
  %17666 = xor i8 %17665, 1
  %17667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17666, i8* %17667, align 1
  %17668 = xor i32 %17656, %17654
  %17669 = xor i32 %17668, %17657
  %17670 = lshr i32 %17669, 4
  %17671 = trunc i32 %17670 to i8
  %17672 = and i8 %17671, 1
  %17673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17672, i8* %17673, align 1
  %17674 = icmp eq i32 %17657, 0
  %17675 = zext i1 %17674 to i8
  %17676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17675, i8* %17676, align 1
  %17677 = lshr i32 %17657, 31
  %17678 = trunc i32 %17677 to i8
  %17679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17678, i8* %17679, align 1
  %17680 = lshr i32 %17654, 31
  %17681 = lshr i32 %17656, 31
  %17682 = xor i32 %17681, %17680
  %17683 = xor i32 %17677, %17680
  %17684 = add i32 %17683, %17682
  %17685 = icmp eq i32 %17684, 2
  %17686 = zext i1 %17685 to i8
  %17687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17686, i8* %17687, align 1
  store %struct.Memory* %loadMem_43b118, %struct.Memory** %MEMORY
  %loadMem_43b11b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17689 = getelementptr inbounds %struct.GPR, %struct.GPR* %17688, i32 0, i32 33
  %17690 = getelementptr inbounds %struct.Reg, %struct.Reg* %17689, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %17690 to i64*
  %17691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17692 = getelementptr inbounds %struct.GPR, %struct.GPR* %17691, i32 0, i32 5
  %17693 = getelementptr inbounds %struct.Reg, %struct.Reg* %17692, i32 0, i32 0
  %RCX.i333 = bitcast %union.anon* %17693 to i64*
  %17694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17695 = getelementptr inbounds %struct.GPR, %struct.GPR* %17694, i32 0, i32 15
  %17696 = getelementptr inbounds %struct.Reg, %struct.Reg* %17695, i32 0, i32 0
  %RBP.i334 = bitcast %union.anon* %17696 to i64*
  %17697 = load i64, i64* %RBP.i334
  %17698 = sub i64 %17697, 40
  %17699 = load i64, i64* %PC.i332
  %17700 = add i64 %17699, 4
  store i64 %17700, i64* %PC.i332
  %17701 = inttoptr i64 %17698 to i64*
  %17702 = load i64, i64* %17701
  store i64 %17702, i64* %RCX.i333, align 8
  store %struct.Memory* %loadMem_43b11b, %struct.Memory** %MEMORY
  %loadMem_43b11f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17704 = getelementptr inbounds %struct.GPR, %struct.GPR* %17703, i32 0, i32 33
  %17705 = getelementptr inbounds %struct.Reg, %struct.Reg* %17704, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %17705 to i64*
  %17706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17707 = getelementptr inbounds %struct.GPR, %struct.GPR* %17706, i32 0, i32 1
  %17708 = getelementptr inbounds %struct.Reg, %struct.Reg* %17707, i32 0, i32 0
  %EAX.i330 = bitcast %union.anon* %17708 to i32*
  %17709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17710 = getelementptr inbounds %struct.GPR, %struct.GPR* %17709, i32 0, i32 5
  %17711 = getelementptr inbounds %struct.Reg, %struct.Reg* %17710, i32 0, i32 0
  %RCX.i331 = bitcast %union.anon* %17711 to i64*
  %17712 = load i32, i32* %EAX.i330
  %17713 = zext i32 %17712 to i64
  %17714 = load i64, i64* %RCX.i331
  %17715 = add i64 %17714, 72688
  %17716 = load i64, i64* %PC.i329
  %17717 = add i64 %17716, 6
  store i64 %17717, i64* %PC.i329
  %17718 = inttoptr i64 %17715 to i32*
  %17719 = load i32, i32* %17718
  %17720 = sub i32 %17712, %17719
  %17721 = icmp ult i32 %17712, %17719
  %17722 = zext i1 %17721 to i8
  %17723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17722, i8* %17723, align 1
  %17724 = and i32 %17720, 255
  %17725 = call i32 @llvm.ctpop.i32(i32 %17724)
  %17726 = trunc i32 %17725 to i8
  %17727 = and i8 %17726, 1
  %17728 = xor i8 %17727, 1
  %17729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17728, i8* %17729, align 1
  %17730 = xor i32 %17719, %17712
  %17731 = xor i32 %17730, %17720
  %17732 = lshr i32 %17731, 4
  %17733 = trunc i32 %17732 to i8
  %17734 = and i8 %17733, 1
  %17735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17734, i8* %17735, align 1
  %17736 = icmp eq i32 %17720, 0
  %17737 = zext i1 %17736 to i8
  %17738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17737, i8* %17738, align 1
  %17739 = lshr i32 %17720, 31
  %17740 = trunc i32 %17739 to i8
  %17741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17740, i8* %17741, align 1
  %17742 = lshr i32 %17712, 31
  %17743 = lshr i32 %17719, 31
  %17744 = xor i32 %17743, %17742
  %17745 = xor i32 %17739, %17742
  %17746 = add i32 %17745, %17744
  %17747 = icmp eq i32 %17746, 2
  %17748 = zext i1 %17747 to i8
  %17749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17748, i8* %17749, align 1
  store %struct.Memory* %loadMem_43b11f, %struct.Memory** %MEMORY
  %loadMem_43b125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17751 = getelementptr inbounds %struct.GPR, %struct.GPR* %17750, i32 0, i32 33
  %17752 = getelementptr inbounds %struct.Reg, %struct.Reg* %17751, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %17752 to i64*
  %17753 = load i64, i64* %PC.i328
  %17754 = add i64 %17753, 27
  %17755 = load i64, i64* %PC.i328
  %17756 = add i64 %17755, 6
  %17757 = load i64, i64* %PC.i328
  %17758 = add i64 %17757, 6
  store i64 %17758, i64* %PC.i328
  %17759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17760 = load i8, i8* %17759, align 1
  %17761 = icmp ne i8 %17760, 0
  %17762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17763 = load i8, i8* %17762, align 1
  %17764 = icmp ne i8 %17763, 0
  %17765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17766 = load i8, i8* %17765, align 1
  %17767 = icmp ne i8 %17766, 0
  %17768 = xor i1 %17764, %17767
  %17769 = or i1 %17761, %17768
  %17770 = zext i1 %17769 to i8
  store i8 %17770, i8* %BRANCH_TAKEN, align 1
  %17771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17772 = select i1 %17769, i64 %17754, i64 %17756
  store i64 %17772, i64* %17771, align 8
  store %struct.Memory* %loadMem_43b125, %struct.Memory** %MEMORY
  %loadBr_43b125 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b125 = icmp eq i8 %loadBr_43b125, 1
  br i1 %cmpBr_43b125, label %block_.L_43b140, label %block_43b12b

block_43b12b:                                     ; preds = %block_.L_43b112
  %loadMem_43b12b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17774 = getelementptr inbounds %struct.GPR, %struct.GPR* %17773, i32 0, i32 33
  %17775 = getelementptr inbounds %struct.Reg, %struct.Reg* %17774, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %17775 to i64*
  %17776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17777 = getelementptr inbounds %struct.GPR, %struct.GPR* %17776, i32 0, i32 1
  %17778 = getelementptr inbounds %struct.Reg, %struct.Reg* %17777, i32 0, i32 0
  %RAX.i326 = bitcast %union.anon* %17778 to i64*
  %17779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17780 = getelementptr inbounds %struct.GPR, %struct.GPR* %17779, i32 0, i32 15
  %17781 = getelementptr inbounds %struct.Reg, %struct.Reg* %17780, i32 0, i32 0
  %RBP.i327 = bitcast %union.anon* %17781 to i64*
  %17782 = load i64, i64* %RBP.i327
  %17783 = sub i64 %17782, 40
  %17784 = load i64, i64* %PC.i325
  %17785 = add i64 %17784, 4
  store i64 %17785, i64* %PC.i325
  %17786 = inttoptr i64 %17783 to i64*
  %17787 = load i64, i64* %17786
  store i64 %17787, i64* %RAX.i326, align 8
  store %struct.Memory* %loadMem_43b12b, %struct.Memory** %MEMORY
  %loadMem_43b12f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17789 = getelementptr inbounds %struct.GPR, %struct.GPR* %17788, i32 0, i32 33
  %17790 = getelementptr inbounds %struct.Reg, %struct.Reg* %17789, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %17790 to i64*
  %17791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17792 = getelementptr inbounds %struct.GPR, %struct.GPR* %17791, i32 0, i32 1
  %17793 = getelementptr inbounds %struct.Reg, %struct.Reg* %17792, i32 0, i32 0
  %RAX.i323 = bitcast %union.anon* %17793 to i64*
  %17794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17795 = getelementptr inbounds %struct.GPR, %struct.GPR* %17794, i32 0, i32 5
  %17796 = getelementptr inbounds %struct.Reg, %struct.Reg* %17795, i32 0, i32 0
  %RCX.i324 = bitcast %union.anon* %17796 to i64*
  %17797 = load i64, i64* %RAX.i323
  %17798 = add i64 %17797, 72688
  %17799 = load i64, i64* %PC.i322
  %17800 = add i64 %17799, 6
  store i64 %17800, i64* %PC.i322
  %17801 = inttoptr i64 %17798 to i32*
  %17802 = load i32, i32* %17801
  %17803 = zext i32 %17802 to i64
  store i64 %17803, i64* %RCX.i324, align 8
  store %struct.Memory* %loadMem_43b12f, %struct.Memory** %MEMORY
  %loadMem_43b135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17805 = getelementptr inbounds %struct.GPR, %struct.GPR* %17804, i32 0, i32 33
  %17806 = getelementptr inbounds %struct.Reg, %struct.Reg* %17805, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %17806 to i64*
  %17807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17808 = getelementptr inbounds %struct.GPR, %struct.GPR* %17807, i32 0, i32 5
  %17809 = getelementptr inbounds %struct.Reg, %struct.Reg* %17808, i32 0, i32 0
  %ECX.i320 = bitcast %union.anon* %17809 to i32*
  %17810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17811 = getelementptr inbounds %struct.GPR, %struct.GPR* %17810, i32 0, i32 15
  %17812 = getelementptr inbounds %struct.Reg, %struct.Reg* %17811, i32 0, i32 0
  %RBP.i321 = bitcast %union.anon* %17812 to i64*
  %17813 = load i64, i64* %RBP.i321
  %17814 = sub i64 %17813, 496
  %17815 = load i32, i32* %ECX.i320
  %17816 = zext i32 %17815 to i64
  %17817 = load i64, i64* %PC.i319
  %17818 = add i64 %17817, 6
  store i64 %17818, i64* %PC.i319
  %17819 = inttoptr i64 %17814 to i32*
  store i32 %17815, i32* %17819
  store %struct.Memory* %loadMem_43b135, %struct.Memory** %MEMORY
  %loadMem_43b13b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17821 = getelementptr inbounds %struct.GPR, %struct.GPR* %17820, i32 0, i32 33
  %17822 = getelementptr inbounds %struct.Reg, %struct.Reg* %17821, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %17822 to i64*
  %17823 = load i64, i64* %PC.i318
  %17824 = add i64 %17823, 20
  %17825 = load i64, i64* %PC.i318
  %17826 = add i64 %17825, 5
  store i64 %17826, i64* %PC.i318
  %17827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17824, i64* %17827, align 8
  store %struct.Memory* %loadMem_43b13b, %struct.Memory** %MEMORY
  br label %block_.L_43b14f

block_.L_43b140:                                  ; preds = %block_.L_43b112
  %loadMem_43b140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17829 = getelementptr inbounds %struct.GPR, %struct.GPR* %17828, i32 0, i32 33
  %17830 = getelementptr inbounds %struct.Reg, %struct.Reg* %17829, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %17830 to i64*
  %17831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17832 = getelementptr inbounds %struct.GPR, %struct.GPR* %17831, i32 0, i32 1
  %17833 = getelementptr inbounds %struct.Reg, %struct.Reg* %17832, i32 0, i32 0
  %RAX.i316 = bitcast %union.anon* %17833 to i64*
  %17834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17835 = getelementptr inbounds %struct.GPR, %struct.GPR* %17834, i32 0, i32 15
  %17836 = getelementptr inbounds %struct.Reg, %struct.Reg* %17835, i32 0, i32 0
  %RBP.i317 = bitcast %union.anon* %17836 to i64*
  %17837 = load i64, i64* %RBP.i317
  %17838 = sub i64 %17837, 132
  %17839 = load i64, i64* %PC.i315
  %17840 = add i64 %17839, 6
  store i64 %17840, i64* %PC.i315
  %17841 = inttoptr i64 %17838 to i32*
  %17842 = load i32, i32* %17841
  %17843 = zext i32 %17842 to i64
  store i64 %17843, i64* %RAX.i316, align 8
  store %struct.Memory* %loadMem_43b140, %struct.Memory** %MEMORY
  %loadMem_43b146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17845 = getelementptr inbounds %struct.GPR, %struct.GPR* %17844, i32 0, i32 33
  %17846 = getelementptr inbounds %struct.Reg, %struct.Reg* %17845, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %17846 to i64*
  %17847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17848 = getelementptr inbounds %struct.GPR, %struct.GPR* %17847, i32 0, i32 1
  %17849 = getelementptr inbounds %struct.Reg, %struct.Reg* %17848, i32 0, i32 0
  %RAX.i313 = bitcast %union.anon* %17849 to i64*
  %17850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17851 = getelementptr inbounds %struct.GPR, %struct.GPR* %17850, i32 0, i32 15
  %17852 = getelementptr inbounds %struct.Reg, %struct.Reg* %17851, i32 0, i32 0
  %RBP.i314 = bitcast %union.anon* %17852 to i64*
  %17853 = load i64, i64* %RAX.i313
  %17854 = load i64, i64* %RBP.i314
  %17855 = sub i64 %17854, 112
  %17856 = load i64, i64* %PC.i312
  %17857 = add i64 %17856, 3
  store i64 %17857, i64* %PC.i312
  %17858 = trunc i64 %17853 to i32
  %17859 = inttoptr i64 %17855 to i32*
  %17860 = load i32, i32* %17859
  %17861 = sub i32 %17858, %17860
  %17862 = zext i32 %17861 to i64
  store i64 %17862, i64* %RAX.i313, align 8
  %17863 = icmp ult i32 %17858, %17860
  %17864 = zext i1 %17863 to i8
  %17865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17864, i8* %17865, align 1
  %17866 = and i32 %17861, 255
  %17867 = call i32 @llvm.ctpop.i32(i32 %17866)
  %17868 = trunc i32 %17867 to i8
  %17869 = and i8 %17868, 1
  %17870 = xor i8 %17869, 1
  %17871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17870, i8* %17871, align 1
  %17872 = xor i32 %17860, %17858
  %17873 = xor i32 %17872, %17861
  %17874 = lshr i32 %17873, 4
  %17875 = trunc i32 %17874 to i8
  %17876 = and i8 %17875, 1
  %17877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17876, i8* %17877, align 1
  %17878 = icmp eq i32 %17861, 0
  %17879 = zext i1 %17878 to i8
  %17880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17879, i8* %17880, align 1
  %17881 = lshr i32 %17861, 31
  %17882 = trunc i32 %17881 to i8
  %17883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17882, i8* %17883, align 1
  %17884 = lshr i32 %17858, 31
  %17885 = lshr i32 %17860, 31
  %17886 = xor i32 %17885, %17884
  %17887 = xor i32 %17881, %17884
  %17888 = add i32 %17887, %17886
  %17889 = icmp eq i32 %17888, 2
  %17890 = zext i1 %17889 to i8
  %17891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17890, i8* %17891, align 1
  store %struct.Memory* %loadMem_43b146, %struct.Memory** %MEMORY
  %loadMem_43b149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17893 = getelementptr inbounds %struct.GPR, %struct.GPR* %17892, i32 0, i32 33
  %17894 = getelementptr inbounds %struct.Reg, %struct.Reg* %17893, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %17894 to i64*
  %17895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17896 = getelementptr inbounds %struct.GPR, %struct.GPR* %17895, i32 0, i32 1
  %17897 = getelementptr inbounds %struct.Reg, %struct.Reg* %17896, i32 0, i32 0
  %EAX.i310 = bitcast %union.anon* %17897 to i32*
  %17898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17899 = getelementptr inbounds %struct.GPR, %struct.GPR* %17898, i32 0, i32 15
  %17900 = getelementptr inbounds %struct.Reg, %struct.Reg* %17899, i32 0, i32 0
  %RBP.i311 = bitcast %union.anon* %17900 to i64*
  %17901 = load i64, i64* %RBP.i311
  %17902 = sub i64 %17901, 496
  %17903 = load i32, i32* %EAX.i310
  %17904 = zext i32 %17903 to i64
  %17905 = load i64, i64* %PC.i309
  %17906 = add i64 %17905, 6
  store i64 %17906, i64* %PC.i309
  %17907 = inttoptr i64 %17902 to i32*
  store i32 %17903, i32* %17907
  store %struct.Memory* %loadMem_43b149, %struct.Memory** %MEMORY
  br label %block_.L_43b14f

block_.L_43b14f:                                  ; preds = %block_.L_43b140, %block_43b12b
  %loadMem_43b14f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17909 = getelementptr inbounds %struct.GPR, %struct.GPR* %17908, i32 0, i32 33
  %17910 = getelementptr inbounds %struct.Reg, %struct.Reg* %17909, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %17910 to i64*
  %17911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17912 = getelementptr inbounds %struct.GPR, %struct.GPR* %17911, i32 0, i32 1
  %17913 = getelementptr inbounds %struct.Reg, %struct.Reg* %17912, i32 0, i32 0
  %RAX.i307 = bitcast %union.anon* %17913 to i64*
  %17914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17915 = getelementptr inbounds %struct.GPR, %struct.GPR* %17914, i32 0, i32 15
  %17916 = getelementptr inbounds %struct.Reg, %struct.Reg* %17915, i32 0, i32 0
  %RBP.i308 = bitcast %union.anon* %17916 to i64*
  %17917 = load i64, i64* %RBP.i308
  %17918 = sub i64 %17917, 496
  %17919 = load i64, i64* %PC.i306
  %17920 = add i64 %17919, 6
  store i64 %17920, i64* %PC.i306
  %17921 = inttoptr i64 %17918 to i32*
  %17922 = load i32, i32* %17921
  %17923 = zext i32 %17922 to i64
  store i64 %17923, i64* %RAX.i307, align 8
  store %struct.Memory* %loadMem_43b14f, %struct.Memory** %MEMORY
  %loadMem_43b155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17925 = getelementptr inbounds %struct.GPR, %struct.GPR* %17924, i32 0, i32 33
  %17926 = getelementptr inbounds %struct.Reg, %struct.Reg* %17925, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %17926 to i64*
  %17927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17928 = getelementptr inbounds %struct.GPR, %struct.GPR* %17927, i32 0, i32 1
  %17929 = getelementptr inbounds %struct.Reg, %struct.Reg* %17928, i32 0, i32 0
  %EAX.i304 = bitcast %union.anon* %17929 to i32*
  %17930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17931 = getelementptr inbounds %struct.GPR, %struct.GPR* %17930, i32 0, i32 15
  %17932 = getelementptr inbounds %struct.Reg, %struct.Reg* %17931, i32 0, i32 0
  %RBP.i305 = bitcast %union.anon* %17932 to i64*
  %17933 = load i64, i64* %RBP.i305
  %17934 = sub i64 %17933, 492
  %17935 = load i32, i32* %EAX.i304
  %17936 = zext i32 %17935 to i64
  %17937 = load i64, i64* %PC.i303
  %17938 = add i64 %17937, 6
  store i64 %17938, i64* %PC.i303
  %17939 = inttoptr i64 %17934 to i32*
  store i32 %17935, i32* %17939
  store %struct.Memory* %loadMem_43b155, %struct.Memory** %MEMORY
  br label %block_.L_43b15b

block_.L_43b15b:                                  ; preds = %block_.L_43b14f, %block_43b105
  %loadMem_43b15b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17941 = getelementptr inbounds %struct.GPR, %struct.GPR* %17940, i32 0, i32 33
  %17942 = getelementptr inbounds %struct.Reg, %struct.Reg* %17941, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %17942 to i64*
  %17943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17944 = getelementptr inbounds %struct.GPR, %struct.GPR* %17943, i32 0, i32 1
  %17945 = getelementptr inbounds %struct.Reg, %struct.Reg* %17944, i32 0, i32 0
  %RAX.i301 = bitcast %union.anon* %17945 to i64*
  %17946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17947 = getelementptr inbounds %struct.GPR, %struct.GPR* %17946, i32 0, i32 15
  %17948 = getelementptr inbounds %struct.Reg, %struct.Reg* %17947, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %17948 to i64*
  %17949 = load i64, i64* %RBP.i302
  %17950 = sub i64 %17949, 492
  %17951 = load i64, i64* %PC.i300
  %17952 = add i64 %17951, 6
  store i64 %17952, i64* %PC.i300
  %17953 = inttoptr i64 %17950 to i32*
  %17954 = load i32, i32* %17953
  %17955 = zext i32 %17954 to i64
  store i64 %17955, i64* %RAX.i301, align 8
  store %struct.Memory* %loadMem_43b15b, %struct.Memory** %MEMORY
  %loadMem_43b161 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17957 = getelementptr inbounds %struct.GPR, %struct.GPR* %17956, i32 0, i32 33
  %17958 = getelementptr inbounds %struct.Reg, %struct.Reg* %17957, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %17958 to i64*
  %17959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17960 = getelementptr inbounds %struct.GPR, %struct.GPR* %17959, i32 0, i32 1
  %17961 = getelementptr inbounds %struct.Reg, %struct.Reg* %17960, i32 0, i32 0
  %AX.i = bitcast %union.anon* %17961 to i16*
  %17962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17963 = getelementptr inbounds %struct.GPR, %struct.GPR* %17962, i32 0, i32 5
  %17964 = getelementptr inbounds %struct.Reg, %struct.Reg* %17963, i32 0, i32 0
  %CX.i299 = bitcast %union.anon* %17964 to i16*
  %17965 = load i16, i16* %AX.i
  %17966 = zext i16 %17965 to i64
  %17967 = load i64, i64* %PC.i298
  %17968 = add i64 %17967, 3
  store i64 %17968, i64* %PC.i298
  store i16 %17965, i16* %CX.i299, align 2
  store %struct.Memory* %loadMem_43b161, %struct.Memory** %MEMORY
  %loadMem_43b164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17970 = getelementptr inbounds %struct.GPR, %struct.GPR* %17969, i32 0, i32 33
  %17971 = getelementptr inbounds %struct.Reg, %struct.Reg* %17970, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %17971 to i64*
  %17972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17973 = getelementptr inbounds %struct.GPR, %struct.GPR* %17972, i32 0, i32 7
  %17974 = getelementptr inbounds %struct.Reg, %struct.Reg* %17973, i32 0, i32 0
  %RDX.i296 = bitcast %union.anon* %17974 to i64*
  %17975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17976 = getelementptr inbounds %struct.GPR, %struct.GPR* %17975, i32 0, i32 15
  %17977 = getelementptr inbounds %struct.Reg, %struct.Reg* %17976, i32 0, i32 0
  %RBP.i297 = bitcast %union.anon* %17977 to i64*
  %17978 = load i64, i64* %RBP.i297
  %17979 = sub i64 %17978, 208
  %17980 = load i64, i64* %PC.i295
  %17981 = add i64 %17980, 7
  store i64 %17981, i64* %PC.i295
  %17982 = inttoptr i64 %17979 to i64*
  %17983 = load i64, i64* %17982
  store i64 %17983, i64* %RDX.i296, align 8
  store %struct.Memory* %loadMem_43b164, %struct.Memory** %MEMORY
  %loadMem_43b16b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17985 = getelementptr inbounds %struct.GPR, %struct.GPR* %17984, i32 0, i32 33
  %17986 = getelementptr inbounds %struct.Reg, %struct.Reg* %17985, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %17986 to i64*
  %17987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17988 = getelementptr inbounds %struct.GPR, %struct.GPR* %17987, i32 0, i32 5
  %17989 = getelementptr inbounds %struct.Reg, %struct.Reg* %17988, i32 0, i32 0
  %CX.i293 = bitcast %union.anon* %17989 to i16*
  %17990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17991 = getelementptr inbounds %struct.GPR, %struct.GPR* %17990, i32 0, i32 7
  %17992 = getelementptr inbounds %struct.Reg, %struct.Reg* %17991, i32 0, i32 0
  %RDX.i294 = bitcast %union.anon* %17992 to i64*
  %17993 = load i64, i64* %RDX.i294
  %17994 = load i16, i16* %CX.i293
  %17995 = zext i16 %17994 to i64
  %17996 = load i64, i64* %PC.i292
  %17997 = add i64 %17996, 3
  store i64 %17997, i64* %PC.i292
  %17998 = inttoptr i64 %17993 to i16*
  store i16 %17994, i16* %17998
  store %struct.Memory* %loadMem_43b16b, %struct.Memory** %MEMORY
  br label %block_.L_43b16e

block_.L_43b16e:                                  ; preds = %block_.L_43b15b, %block_.L_43b069
  %loadMem_43b16e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18000 = getelementptr inbounds %struct.GPR, %struct.GPR* %17999, i32 0, i32 33
  %18001 = getelementptr inbounds %struct.Reg, %struct.Reg* %18000, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %18001 to i64*
  %18002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18003 = getelementptr inbounds %struct.GPR, %struct.GPR* %18002, i32 0, i32 15
  %18004 = getelementptr inbounds %struct.Reg, %struct.Reg* %18003, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %18004 to i64*
  %18005 = load i64, i64* %RBP.i291
  %18006 = sub i64 %18005, 68
  %18007 = load i64, i64* %PC.i290
  %18008 = add i64 %18007, 4
  store i64 %18008, i64* %PC.i290
  %18009 = inttoptr i64 %18006 to i32*
  %18010 = load i32, i32* %18009
  %18011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18011, align 1
  %18012 = and i32 %18010, 255
  %18013 = call i32 @llvm.ctpop.i32(i32 %18012)
  %18014 = trunc i32 %18013 to i8
  %18015 = and i8 %18014, 1
  %18016 = xor i8 %18015, 1
  %18017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18016, i8* %18017, align 1
  %18018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18018, align 1
  %18019 = icmp eq i32 %18010, 0
  %18020 = zext i1 %18019 to i8
  %18021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18020, i8* %18021, align 1
  %18022 = lshr i32 %18010, 31
  %18023 = trunc i32 %18022 to i8
  %18024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18023, i8* %18024, align 1
  %18025 = lshr i32 %18010, 31
  %18026 = xor i32 %18022, %18025
  %18027 = add i32 %18026, %18025
  %18028 = icmp eq i32 %18027, 2
  %18029 = zext i1 %18028 to i8
  %18030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18029, i8* %18030, align 1
  store %struct.Memory* %loadMem_43b16e, %struct.Memory** %MEMORY
  %loadMem_43b172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18032 = getelementptr inbounds %struct.GPR, %struct.GPR* %18031, i32 0, i32 33
  %18033 = getelementptr inbounds %struct.Reg, %struct.Reg* %18032, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %18033 to i64*
  %18034 = load i64, i64* %PC.i289
  %18035 = add i64 %18034, 421
  %18036 = load i64, i64* %PC.i289
  %18037 = add i64 %18036, 6
  %18038 = load i64, i64* %PC.i289
  %18039 = add i64 %18038, 6
  store i64 %18039, i64* %PC.i289
  %18040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18041 = load i8, i8* %18040, align 1
  %18042 = icmp eq i8 %18041, 0
  %18043 = zext i1 %18042 to i8
  store i8 %18043, i8* %BRANCH_TAKEN, align 1
  %18044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18045 = select i1 %18042, i64 %18035, i64 %18037
  store i64 %18045, i64* %18044, align 8
  store %struct.Memory* %loadMem_43b172, %struct.Memory** %MEMORY
  %loadBr_43b172 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b172 = icmp eq i8 %loadBr_43b172, 1
  br i1 %cmpBr_43b172, label %block_.L_43b317, label %block_43b178

block_43b178:                                     ; preds = %block_.L_43b16e
  %loadMem_43b178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18047 = getelementptr inbounds %struct.GPR, %struct.GPR* %18046, i32 0, i32 33
  %18048 = getelementptr inbounds %struct.Reg, %struct.Reg* %18047, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %18048 to i64*
  %18049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18050 = getelementptr inbounds %struct.GPR, %struct.GPR* %18049, i32 0, i32 15
  %18051 = getelementptr inbounds %struct.Reg, %struct.Reg* %18050, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %18051 to i64*
  %18052 = load i64, i64* %RBP.i288
  %18053 = sub i64 %18052, 80
  %18054 = load i64, i64* %PC.i287
  %18055 = add i64 %18054, 4
  store i64 %18055, i64* %PC.i287
  %18056 = inttoptr i64 %18053 to i32*
  %18057 = load i32, i32* %18056
  %18058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18058, align 1
  %18059 = and i32 %18057, 255
  %18060 = call i32 @llvm.ctpop.i32(i32 %18059)
  %18061 = trunc i32 %18060 to i8
  %18062 = and i8 %18061, 1
  %18063 = xor i8 %18062, 1
  %18064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18063, i8* %18064, align 1
  %18065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18065, align 1
  %18066 = icmp eq i32 %18057, 0
  %18067 = zext i1 %18066 to i8
  %18068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18067, i8* %18068, align 1
  %18069 = lshr i32 %18057, 31
  %18070 = trunc i32 %18069 to i8
  %18071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18070, i8* %18071, align 1
  %18072 = lshr i32 %18057, 31
  %18073 = xor i32 %18069, %18072
  %18074 = add i32 %18073, %18072
  %18075 = icmp eq i32 %18074, 2
  %18076 = zext i1 %18075 to i8
  %18077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18076, i8* %18077, align 1
  store %struct.Memory* %loadMem_43b178, %struct.Memory** %MEMORY
  %loadMem_43b17c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18079 = getelementptr inbounds %struct.GPR, %struct.GPR* %18078, i32 0, i32 33
  %18080 = getelementptr inbounds %struct.Reg, %struct.Reg* %18079, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %18080 to i64*
  %18081 = load i64, i64* %PC.i286
  %18082 = add i64 %18081, 194
  %18083 = load i64, i64* %PC.i286
  %18084 = add i64 %18083, 6
  %18085 = load i64, i64* %PC.i286
  %18086 = add i64 %18085, 6
  store i64 %18086, i64* %PC.i286
  %18087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18088 = load i8, i8* %18087, align 1
  store i8 %18088, i8* %BRANCH_TAKEN, align 1
  %18089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18090 = icmp ne i8 %18088, 0
  %18091 = select i1 %18090, i64 %18082, i64 %18084
  store i64 %18091, i64* %18089, align 8
  store %struct.Memory* %loadMem_43b17c, %struct.Memory** %MEMORY
  %loadBr_43b17c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b17c = icmp eq i8 %loadBr_43b17c, 1
  br i1 %cmpBr_43b17c, label %block_.L_43b23e, label %block_43b182

block_43b182:                                     ; preds = %block_43b178
  %loadMem_43b182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18093 = getelementptr inbounds %struct.GPR, %struct.GPR* %18092, i32 0, i32 33
  %18094 = getelementptr inbounds %struct.Reg, %struct.Reg* %18093, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %18094 to i64*
  %18095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18096 = getelementptr inbounds %struct.GPR, %struct.GPR* %18095, i32 0, i32 1
  %18097 = getelementptr inbounds %struct.Reg, %struct.Reg* %18096, i32 0, i32 0
  %EAX.i284 = bitcast %union.anon* %18097 to i32*
  %18098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18099 = getelementptr inbounds %struct.GPR, %struct.GPR* %18098, i32 0, i32 1
  %18100 = getelementptr inbounds %struct.Reg, %struct.Reg* %18099, i32 0, i32 0
  %RAX.i285 = bitcast %union.anon* %18100 to i64*
  %18101 = load i64, i64* %RAX.i285
  %18102 = load i32, i32* %EAX.i284
  %18103 = zext i32 %18102 to i64
  %18104 = load i64, i64* %PC.i283
  %18105 = add i64 %18104, 2
  store i64 %18105, i64* %PC.i283
  %18106 = xor i64 %18103, %18101
  %18107 = trunc i64 %18106 to i32
  %18108 = and i64 %18106, 4294967295
  store i64 %18108, i64* %RAX.i285, align 8
  %18109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18109, align 1
  %18110 = and i32 %18107, 255
  %18111 = call i32 @llvm.ctpop.i32(i32 %18110)
  %18112 = trunc i32 %18111 to i8
  %18113 = and i8 %18112, 1
  %18114 = xor i8 %18113, 1
  %18115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18114, i8* %18115, align 1
  %18116 = icmp eq i32 %18107, 0
  %18117 = zext i1 %18116 to i8
  %18118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18117, i8* %18118, align 1
  %18119 = lshr i32 %18107, 31
  %18120 = trunc i32 %18119 to i8
  %18121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18120, i8* %18121, align 1
  %18122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18122, align 1
  %18123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18123, align 1
  store %struct.Memory* %loadMem_43b182, %struct.Memory** %MEMORY
  %loadMem_43b184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18125 = getelementptr inbounds %struct.GPR, %struct.GPR* %18124, i32 0, i32 33
  %18126 = getelementptr inbounds %struct.Reg, %struct.Reg* %18125, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %18126 to i64*
  %18127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18128 = getelementptr inbounds %struct.GPR, %struct.GPR* %18127, i32 0, i32 5
  %18129 = getelementptr inbounds %struct.Reg, %struct.Reg* %18128, i32 0, i32 0
  %RCX.i281 = bitcast %union.anon* %18129 to i64*
  %18130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18131 = getelementptr inbounds %struct.GPR, %struct.GPR* %18130, i32 0, i32 15
  %18132 = getelementptr inbounds %struct.Reg, %struct.Reg* %18131, i32 0, i32 0
  %RBP.i282 = bitcast %union.anon* %18132 to i64*
  %18133 = load i64, i64* %RBP.i282
  %18134 = sub i64 %18133, 120
  %18135 = load i64, i64* %PC.i280
  %18136 = add i64 %18135, 3
  store i64 %18136, i64* %PC.i280
  %18137 = inttoptr i64 %18134 to i32*
  %18138 = load i32, i32* %18137
  %18139 = zext i32 %18138 to i64
  store i64 %18139, i64* %RCX.i281, align 8
  store %struct.Memory* %loadMem_43b184, %struct.Memory** %MEMORY
  %loadMem_43b187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18141 = getelementptr inbounds %struct.GPR, %struct.GPR* %18140, i32 0, i32 33
  %18142 = getelementptr inbounds %struct.Reg, %struct.Reg* %18141, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %18142 to i64*
  %18143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18144 = getelementptr inbounds %struct.GPR, %struct.GPR* %18143, i32 0, i32 7
  %18145 = getelementptr inbounds %struct.Reg, %struct.Reg* %18144, i32 0, i32 0
  %RDX.i278 = bitcast %union.anon* %18145 to i64*
  %18146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18147 = getelementptr inbounds %struct.GPR, %struct.GPR* %18146, i32 0, i32 15
  %18148 = getelementptr inbounds %struct.Reg, %struct.Reg* %18147, i32 0, i32 0
  %RBP.i279 = bitcast %union.anon* %18148 to i64*
  %18149 = load i64, i64* %RBP.i279
  %18150 = sub i64 %18149, 144
  %18151 = load i64, i64* %PC.i277
  %18152 = add i64 %18151, 6
  store i64 %18152, i64* %PC.i277
  %18153 = inttoptr i64 %18150 to i32*
  %18154 = load i32, i32* %18153
  %18155 = zext i32 %18154 to i64
  store i64 %18155, i64* %RDX.i278, align 8
  store %struct.Memory* %loadMem_43b187, %struct.Memory** %MEMORY
  %loadMem_43b18d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18157 = getelementptr inbounds %struct.GPR, %struct.GPR* %18156, i32 0, i32 33
  %18158 = getelementptr inbounds %struct.Reg, %struct.Reg* %18157, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %18158 to i64*
  %18159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18160 = getelementptr inbounds %struct.GPR, %struct.GPR* %18159, i32 0, i32 7
  %18161 = getelementptr inbounds %struct.Reg, %struct.Reg* %18160, i32 0, i32 0
  %RDX.i276 = bitcast %union.anon* %18161 to i64*
  %18162 = load i64, i64* %RDX.i276
  %18163 = load i64, i64* %PC.i275
  %18164 = add i64 %18163, 3
  store i64 %18164, i64* %PC.i275
  %18165 = trunc i64 %18162 to i32
  %18166 = add i32 1, %18165
  %18167 = zext i32 %18166 to i64
  store i64 %18167, i64* %RDX.i276, align 8
  %18168 = icmp ult i32 %18166, %18165
  %18169 = icmp ult i32 %18166, 1
  %18170 = or i1 %18168, %18169
  %18171 = zext i1 %18170 to i8
  %18172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18171, i8* %18172, align 1
  %18173 = and i32 %18166, 255
  %18174 = call i32 @llvm.ctpop.i32(i32 %18173)
  %18175 = trunc i32 %18174 to i8
  %18176 = and i8 %18175, 1
  %18177 = xor i8 %18176, 1
  %18178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18177, i8* %18178, align 1
  %18179 = xor i64 1, %18162
  %18180 = trunc i64 %18179 to i32
  %18181 = xor i32 %18180, %18166
  %18182 = lshr i32 %18181, 4
  %18183 = trunc i32 %18182 to i8
  %18184 = and i8 %18183, 1
  %18185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18184, i8* %18185, align 1
  %18186 = icmp eq i32 %18166, 0
  %18187 = zext i1 %18186 to i8
  %18188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18187, i8* %18188, align 1
  %18189 = lshr i32 %18166, 31
  %18190 = trunc i32 %18189 to i8
  %18191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18190, i8* %18191, align 1
  %18192 = lshr i32 %18165, 31
  %18193 = xor i32 %18189, %18192
  %18194 = add i32 %18193, %18189
  %18195 = icmp eq i32 %18194, 2
  %18196 = zext i1 %18195 to i8
  %18197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18196, i8* %18197, align 1
  store %struct.Memory* %loadMem_43b18d, %struct.Memory** %MEMORY
  %loadMem_43b190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18199 = getelementptr inbounds %struct.GPR, %struct.GPR* %18198, i32 0, i32 33
  %18200 = getelementptr inbounds %struct.Reg, %struct.Reg* %18199, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %18200 to i64*
  %18201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18202 = getelementptr inbounds %struct.GPR, %struct.GPR* %18201, i32 0, i32 7
  %18203 = getelementptr inbounds %struct.Reg, %struct.Reg* %18202, i32 0, i32 0
  %RDX.i274 = bitcast %union.anon* %18203 to i64*
  %18204 = load i64, i64* %RDX.i274
  %18205 = load i64, i64* %PC.i273
  %18206 = add i64 %18205, 2
  store i64 %18206, i64* %PC.i273
  %18207 = shl i64 %18204, 32
  %18208 = ashr i64 %18207, 33
  %18209 = trunc i64 %18204 to i8
  %18210 = and i8 %18209, 1
  %18211 = trunc i64 %18208 to i32
  %18212 = and i64 %18208, 4294967295
  store i64 %18212, i64* %RDX.i274, align 8
  %18213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18210, i8* %18213, align 1
  %18214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18215 = and i32 %18211, 255
  %18216 = call i32 @llvm.ctpop.i32(i32 %18215)
  %18217 = trunc i32 %18216 to i8
  %18218 = and i8 %18217, 1
  %18219 = xor i8 %18218, 1
  store i8 %18219, i8* %18214, align 1
  %18220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18220, align 1
  %18221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18222 = icmp eq i32 %18211, 0
  %18223 = zext i1 %18222 to i8
  store i8 %18223, i8* %18221, align 1
  %18224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18225 = lshr i32 %18211, 31
  %18226 = trunc i32 %18225 to i8
  store i8 %18226, i8* %18224, align 1
  %18227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18227, align 1
  store %struct.Memory* %loadMem_43b190, %struct.Memory** %MEMORY
  %loadMem_43b193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18229 = getelementptr inbounds %struct.GPR, %struct.GPR* %18228, i32 0, i32 33
  %18230 = getelementptr inbounds %struct.Reg, %struct.Reg* %18229, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %18230 to i64*
  %18231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18232 = getelementptr inbounds %struct.GPR, %struct.GPR* %18231, i32 0, i32 7
  %18233 = getelementptr inbounds %struct.Reg, %struct.Reg* %18232, i32 0, i32 0
  %EDX.i271 = bitcast %union.anon* %18233 to i32*
  %18234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18235 = getelementptr inbounds %struct.GPR, %struct.GPR* %18234, i32 0, i32 5
  %18236 = getelementptr inbounds %struct.Reg, %struct.Reg* %18235, i32 0, i32 0
  %RCX.i272 = bitcast %union.anon* %18236 to i64*
  %18237 = load i64, i64* %RCX.i272
  %18238 = load i32, i32* %EDX.i271
  %18239 = zext i32 %18238 to i64
  %18240 = load i64, i64* %PC.i270
  %18241 = add i64 %18240, 2
  store i64 %18241, i64* %PC.i270
  %18242 = trunc i64 %18237 to i32
  %18243 = add i32 %18238, %18242
  %18244 = zext i32 %18243 to i64
  store i64 %18244, i64* %RCX.i272, align 8
  %18245 = icmp ult i32 %18243, %18242
  %18246 = icmp ult i32 %18243, %18238
  %18247 = or i1 %18245, %18246
  %18248 = zext i1 %18247 to i8
  %18249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18248, i8* %18249, align 1
  %18250 = and i32 %18243, 255
  %18251 = call i32 @llvm.ctpop.i32(i32 %18250)
  %18252 = trunc i32 %18251 to i8
  %18253 = and i8 %18252, 1
  %18254 = xor i8 %18253, 1
  %18255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18254, i8* %18255, align 1
  %18256 = xor i64 %18239, %18237
  %18257 = trunc i64 %18256 to i32
  %18258 = xor i32 %18257, %18243
  %18259 = lshr i32 %18258, 4
  %18260 = trunc i32 %18259 to i8
  %18261 = and i8 %18260, 1
  %18262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18261, i8* %18262, align 1
  %18263 = icmp eq i32 %18243, 0
  %18264 = zext i1 %18263 to i8
  %18265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18264, i8* %18265, align 1
  %18266 = lshr i32 %18243, 31
  %18267 = trunc i32 %18266 to i8
  %18268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18267, i8* %18268, align 1
  %18269 = lshr i32 %18242, 31
  %18270 = lshr i32 %18238, 31
  %18271 = xor i32 %18266, %18269
  %18272 = xor i32 %18266, %18270
  %18273 = add i32 %18271, %18272
  %18274 = icmp eq i32 %18273, 2
  %18275 = zext i1 %18274 to i8
  %18276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18275, i8* %18276, align 1
  store %struct.Memory* %loadMem_43b193, %struct.Memory** %MEMORY
  %loadMem_43b195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18278 = getelementptr inbounds %struct.GPR, %struct.GPR* %18277, i32 0, i32 33
  %18279 = getelementptr inbounds %struct.Reg, %struct.Reg* %18278, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %18279 to i64*
  %18280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18281 = getelementptr inbounds %struct.GPR, %struct.GPR* %18280, i32 0, i32 7
  %18282 = getelementptr inbounds %struct.Reg, %struct.Reg* %18281, i32 0, i32 0
  %RDX.i268 = bitcast %union.anon* %18282 to i64*
  %18283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18284 = getelementptr inbounds %struct.GPR, %struct.GPR* %18283, i32 0, i32 15
  %18285 = getelementptr inbounds %struct.Reg, %struct.Reg* %18284, i32 0, i32 0
  %RBP.i269 = bitcast %union.anon* %18285 to i64*
  %18286 = load i64, i64* %RBP.i269
  %18287 = sub i64 %18286, 124
  %18288 = load i64, i64* %PC.i267
  %18289 = add i64 %18288, 3
  store i64 %18289, i64* %PC.i267
  %18290 = inttoptr i64 %18287 to i32*
  %18291 = load i32, i32* %18290
  %18292 = zext i32 %18291 to i64
  store i64 %18292, i64* %RDX.i268, align 8
  store %struct.Memory* %loadMem_43b195, %struct.Memory** %MEMORY
  %loadMem_43b198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18294 = getelementptr inbounds %struct.GPR, %struct.GPR* %18293, i32 0, i32 33
  %18295 = getelementptr inbounds %struct.Reg, %struct.Reg* %18294, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %18295 to i64*
  %18296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18297 = getelementptr inbounds %struct.GPR, %struct.GPR* %18296, i32 0, i32 7
  %18298 = getelementptr inbounds %struct.Reg, %struct.Reg* %18297, i32 0, i32 0
  %RDX.i266 = bitcast %union.anon* %18298 to i64*
  %18299 = load i64, i64* %RDX.i266
  %18300 = load i64, i64* %PC.i265
  %18301 = add i64 %18300, 2
  store i64 %18301, i64* %PC.i265
  %18302 = trunc i64 %18299 to i32
  %18303 = shl i32 %18302, 1
  %18304 = icmp slt i32 %18302, 0
  %18305 = icmp slt i32 %18303, 0
  %18306 = xor i1 %18304, %18305
  %18307 = zext i32 %18303 to i64
  store i64 %18307, i64* %RDX.i266, align 8
  %18308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18309 = zext i1 %18304 to i8
  store i8 %18309, i8* %18308, align 1
  %18310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18311 = and i32 %18303, 254
  %18312 = call i32 @llvm.ctpop.i32(i32 %18311)
  %18313 = trunc i32 %18312 to i8
  %18314 = and i8 %18313, 1
  %18315 = xor i8 %18314, 1
  store i8 %18315, i8* %18310, align 1
  %18316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18316, align 1
  %18317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18318 = icmp eq i32 %18303, 0
  %18319 = zext i1 %18318 to i8
  store i8 %18319, i8* %18317, align 1
  %18320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18321 = lshr i32 %18303, 31
  %18322 = trunc i32 %18321 to i8
  store i8 %18322, i8* %18320, align 1
  %18323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18324 = zext i1 %18306 to i8
  store i8 %18324, i8* %18323, align 1
  store %struct.Memory* %loadMem_43b198, %struct.Memory** %MEMORY
  %loadMem_43b19b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18326 = getelementptr inbounds %struct.GPR, %struct.GPR* %18325, i32 0, i32 33
  %18327 = getelementptr inbounds %struct.Reg, %struct.Reg* %18326, i32 0, i32 0
  %PC.i262 = bitcast %union.anon* %18327 to i64*
  %18328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18329 = getelementptr inbounds %struct.GPR, %struct.GPR* %18328, i32 0, i32 7
  %18330 = getelementptr inbounds %struct.Reg, %struct.Reg* %18329, i32 0, i32 0
  %EDX.i263 = bitcast %union.anon* %18330 to i32*
  %18331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18332 = getelementptr inbounds %struct.GPR, %struct.GPR* %18331, i32 0, i32 5
  %18333 = getelementptr inbounds %struct.Reg, %struct.Reg* %18332, i32 0, i32 0
  %RCX.i264 = bitcast %union.anon* %18333 to i64*
  %18334 = load i64, i64* %RCX.i264
  %18335 = load i32, i32* %EDX.i263
  %18336 = zext i32 %18335 to i64
  %18337 = load i64, i64* %PC.i262
  %18338 = add i64 %18337, 2
  store i64 %18338, i64* %PC.i262
  %18339 = trunc i64 %18334 to i32
  %18340 = sub i32 %18339, %18335
  %18341 = zext i32 %18340 to i64
  store i64 %18341, i64* %RCX.i264, align 8
  %18342 = icmp ult i32 %18339, %18335
  %18343 = zext i1 %18342 to i8
  %18344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18343, i8* %18344, align 1
  %18345 = and i32 %18340, 255
  %18346 = call i32 @llvm.ctpop.i32(i32 %18345)
  %18347 = trunc i32 %18346 to i8
  %18348 = and i8 %18347, 1
  %18349 = xor i8 %18348, 1
  %18350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18349, i8* %18350, align 1
  %18351 = xor i64 %18336, %18334
  %18352 = trunc i64 %18351 to i32
  %18353 = xor i32 %18352, %18340
  %18354 = lshr i32 %18353, 4
  %18355 = trunc i32 %18354 to i8
  %18356 = and i8 %18355, 1
  %18357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18356, i8* %18357, align 1
  %18358 = icmp eq i32 %18340, 0
  %18359 = zext i1 %18358 to i8
  %18360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18359, i8* %18360, align 1
  %18361 = lshr i32 %18340, 31
  %18362 = trunc i32 %18361 to i8
  %18363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18362, i8* %18363, align 1
  %18364 = lshr i32 %18339, 31
  %18365 = lshr i32 %18335, 31
  %18366 = xor i32 %18365, %18364
  %18367 = xor i32 %18361, %18364
  %18368 = add i32 %18367, %18366
  %18369 = icmp eq i32 %18368, 2
  %18370 = zext i1 %18369 to i8
  %18371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18370, i8* %18371, align 1
  store %struct.Memory* %loadMem_43b19b, %struct.Memory** %MEMORY
  %loadMem_43b19d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18373 = getelementptr inbounds %struct.GPR, %struct.GPR* %18372, i32 0, i32 33
  %18374 = getelementptr inbounds %struct.Reg, %struct.Reg* %18373, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %18374 to i64*
  %18375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18376 = getelementptr inbounds %struct.GPR, %struct.GPR* %18375, i32 0, i32 5
  %18377 = getelementptr inbounds %struct.Reg, %struct.Reg* %18376, i32 0, i32 0
  %RCX.i261 = bitcast %union.anon* %18377 to i64*
  %18378 = load i64, i64* %RCX.i261
  %18379 = load i64, i64* %PC.i260
  %18380 = add i64 %18379, 2
  store i64 %18380, i64* %PC.i260
  %18381 = shl i64 %18378, 32
  %18382 = ashr i64 %18381, 33
  %18383 = trunc i64 %18378 to i8
  %18384 = and i8 %18383, 1
  %18385 = trunc i64 %18382 to i32
  %18386 = and i64 %18382, 4294967295
  store i64 %18386, i64* %RCX.i261, align 8
  %18387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18384, i8* %18387, align 1
  %18388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18389 = and i32 %18385, 255
  %18390 = call i32 @llvm.ctpop.i32(i32 %18389)
  %18391 = trunc i32 %18390 to i8
  %18392 = and i8 %18391, 1
  %18393 = xor i8 %18392, 1
  store i8 %18393, i8* %18388, align 1
  %18394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18394, align 1
  %18395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18396 = icmp eq i32 %18385, 0
  %18397 = zext i1 %18396 to i8
  store i8 %18397, i8* %18395, align 1
  %18398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18399 = lshr i32 %18385, 31
  %18400 = trunc i32 %18399 to i8
  store i8 %18400, i8* %18398, align 1
  %18401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18401, align 1
  store %struct.Memory* %loadMem_43b19d, %struct.Memory** %MEMORY
  %loadMem_43b1a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18403 = getelementptr inbounds %struct.GPR, %struct.GPR* %18402, i32 0, i32 33
  %18404 = getelementptr inbounds %struct.Reg, %struct.Reg* %18403, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %18404 to i64*
  %18405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18406 = getelementptr inbounds %struct.GPR, %struct.GPR* %18405, i32 0, i32 1
  %18407 = getelementptr inbounds %struct.Reg, %struct.Reg* %18406, i32 0, i32 0
  %RAX.i258 = bitcast %union.anon* %18407 to i64*
  %18408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18409 = getelementptr inbounds %struct.GPR, %struct.GPR* %18408, i32 0, i32 15
  %18410 = getelementptr inbounds %struct.Reg, %struct.Reg* %18409, i32 0, i32 0
  %RBP.i259 = bitcast %union.anon* %18410 to i64*
  %18411 = load i64, i64* %RAX.i258
  %18412 = load i64, i64* %RBP.i259
  %18413 = sub i64 %18412, 100
  %18414 = load i64, i64* %PC.i257
  %18415 = add i64 %18414, 3
  store i64 %18415, i64* %PC.i257
  %18416 = trunc i64 %18411 to i32
  %18417 = inttoptr i64 %18413 to i32*
  %18418 = load i32, i32* %18417
  %18419 = sub i32 %18416, %18418
  %18420 = zext i32 %18419 to i64
  store i64 %18420, i64* %RAX.i258, align 8
  %18421 = icmp ult i32 %18416, %18418
  %18422 = zext i1 %18421 to i8
  %18423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18422, i8* %18423, align 1
  %18424 = and i32 %18419, 255
  %18425 = call i32 @llvm.ctpop.i32(i32 %18424)
  %18426 = trunc i32 %18425 to i8
  %18427 = and i8 %18426, 1
  %18428 = xor i8 %18427, 1
  %18429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18428, i8* %18429, align 1
  %18430 = xor i32 %18418, %18416
  %18431 = xor i32 %18430, %18419
  %18432 = lshr i32 %18431, 4
  %18433 = trunc i32 %18432 to i8
  %18434 = and i8 %18433, 1
  %18435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18434, i8* %18435, align 1
  %18436 = icmp eq i32 %18419, 0
  %18437 = zext i1 %18436 to i8
  %18438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18437, i8* %18438, align 1
  %18439 = lshr i32 %18419, 31
  %18440 = trunc i32 %18439 to i8
  %18441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18440, i8* %18441, align 1
  %18442 = lshr i32 %18416, 31
  %18443 = lshr i32 %18418, 31
  %18444 = xor i32 %18443, %18442
  %18445 = xor i32 %18439, %18442
  %18446 = add i32 %18445, %18444
  %18447 = icmp eq i32 %18446, 2
  %18448 = zext i1 %18447 to i8
  %18449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18448, i8* %18449, align 1
  store %struct.Memory* %loadMem_43b1a0, %struct.Memory** %MEMORY
  %loadMem_43b1a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18451 = getelementptr inbounds %struct.GPR, %struct.GPR* %18450, i32 0, i32 33
  %18452 = getelementptr inbounds %struct.Reg, %struct.Reg* %18451, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %18452 to i64*
  %18453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18454 = getelementptr inbounds %struct.GPR, %struct.GPR* %18453, i32 0, i32 1
  %18455 = getelementptr inbounds %struct.Reg, %struct.Reg* %18454, i32 0, i32 0
  %EAX.i255 = bitcast %union.anon* %18455 to i32*
  %18456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18457 = getelementptr inbounds %struct.GPR, %struct.GPR* %18456, i32 0, i32 5
  %18458 = getelementptr inbounds %struct.Reg, %struct.Reg* %18457, i32 0, i32 0
  %ECX.i256 = bitcast %union.anon* %18458 to i32*
  %18459 = load i32, i32* %ECX.i256
  %18460 = zext i32 %18459 to i64
  %18461 = load i32, i32* %EAX.i255
  %18462 = zext i32 %18461 to i64
  %18463 = load i64, i64* %PC.i254
  %18464 = add i64 %18463, 2
  store i64 %18464, i64* %PC.i254
  %18465 = sub i32 %18459, %18461
  %18466 = icmp ult i32 %18459, %18461
  %18467 = zext i1 %18466 to i8
  %18468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18467, i8* %18468, align 1
  %18469 = and i32 %18465, 255
  %18470 = call i32 @llvm.ctpop.i32(i32 %18469)
  %18471 = trunc i32 %18470 to i8
  %18472 = and i8 %18471, 1
  %18473 = xor i8 %18472, 1
  %18474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18473, i8* %18474, align 1
  %18475 = xor i64 %18462, %18460
  %18476 = trunc i64 %18475 to i32
  %18477 = xor i32 %18476, %18465
  %18478 = lshr i32 %18477, 4
  %18479 = trunc i32 %18478 to i8
  %18480 = and i8 %18479, 1
  %18481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18480, i8* %18481, align 1
  %18482 = icmp eq i32 %18465, 0
  %18483 = zext i1 %18482 to i8
  %18484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18483, i8* %18484, align 1
  %18485 = lshr i32 %18465, 31
  %18486 = trunc i32 %18485 to i8
  %18487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18486, i8* %18487, align 1
  %18488 = lshr i32 %18459, 31
  %18489 = lshr i32 %18461, 31
  %18490 = xor i32 %18489, %18488
  %18491 = xor i32 %18485, %18488
  %18492 = add i32 %18491, %18490
  %18493 = icmp eq i32 %18492, 2
  %18494 = zext i1 %18493 to i8
  %18495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18494, i8* %18495, align 1
  store %struct.Memory* %loadMem_43b1a3, %struct.Memory** %MEMORY
  %loadMem_43b1a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18497 = getelementptr inbounds %struct.GPR, %struct.GPR* %18496, i32 0, i32 33
  %18498 = getelementptr inbounds %struct.Reg, %struct.Reg* %18497, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %18498 to i64*
  %18499 = load i64, i64* %PC.i253
  %18500 = add i64 %18499, 22
  %18501 = load i64, i64* %PC.i253
  %18502 = add i64 %18501, 6
  %18503 = load i64, i64* %PC.i253
  %18504 = add i64 %18503, 6
  store i64 %18504, i64* %PC.i253
  %18505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18506 = load i8, i8* %18505, align 1
  %18507 = icmp ne i8 %18506, 0
  %18508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18509 = load i8, i8* %18508, align 1
  %18510 = icmp ne i8 %18509, 0
  %18511 = xor i1 %18507, %18510
  %18512 = xor i1 %18511, true
  %18513 = zext i1 %18512 to i8
  store i8 %18513, i8* %BRANCH_TAKEN, align 1
  %18514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18515 = select i1 %18511, i64 %18502, i64 %18500
  store i64 %18515, i64* %18514, align 8
  store %struct.Memory* %loadMem_43b1a5, %struct.Memory** %MEMORY
  %loadBr_43b1a5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b1a5 = icmp eq i8 %loadBr_43b1a5, 1
  br i1 %cmpBr_43b1a5, label %block_.L_43b1bb, label %block_43b1ab

block_43b1ab:                                     ; preds = %block_43b182
  %loadMem_43b1ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %18516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18517 = getelementptr inbounds %struct.GPR, %struct.GPR* %18516, i32 0, i32 33
  %18518 = getelementptr inbounds %struct.Reg, %struct.Reg* %18517, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %18518 to i64*
  %18519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18520 = getelementptr inbounds %struct.GPR, %struct.GPR* %18519, i32 0, i32 1
  %18521 = getelementptr inbounds %struct.Reg, %struct.Reg* %18520, i32 0, i32 0
  %EAX.i251 = bitcast %union.anon* %18521 to i32*
  %18522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18523 = getelementptr inbounds %struct.GPR, %struct.GPR* %18522, i32 0, i32 1
  %18524 = getelementptr inbounds %struct.Reg, %struct.Reg* %18523, i32 0, i32 0
  %RAX.i252 = bitcast %union.anon* %18524 to i64*
  %18525 = load i64, i64* %RAX.i252
  %18526 = load i32, i32* %EAX.i251
  %18527 = zext i32 %18526 to i64
  %18528 = load i64, i64* %PC.i250
  %18529 = add i64 %18528, 2
  store i64 %18529, i64* %PC.i250
  %18530 = xor i64 %18527, %18525
  %18531 = trunc i64 %18530 to i32
  %18532 = and i64 %18530, 4294967295
  store i64 %18532, i64* %RAX.i252, align 8
  %18533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18533, align 1
  %18534 = and i32 %18531, 255
  %18535 = call i32 @llvm.ctpop.i32(i32 %18534)
  %18536 = trunc i32 %18535 to i8
  %18537 = and i8 %18536, 1
  %18538 = xor i8 %18537, 1
  %18539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18538, i8* %18539, align 1
  %18540 = icmp eq i32 %18531, 0
  %18541 = zext i1 %18540 to i8
  %18542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18541, i8* %18542, align 1
  %18543 = lshr i32 %18531, 31
  %18544 = trunc i32 %18543 to i8
  %18545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18544, i8* %18545, align 1
  %18546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18546, align 1
  %18547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18547, align 1
  store %struct.Memory* %loadMem_43b1ab, %struct.Memory** %MEMORY
  %loadMem_43b1ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %18548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18549 = getelementptr inbounds %struct.GPR, %struct.GPR* %18548, i32 0, i32 33
  %18550 = getelementptr inbounds %struct.Reg, %struct.Reg* %18549, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %18550 to i64*
  %18551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18552 = getelementptr inbounds %struct.GPR, %struct.GPR* %18551, i32 0, i32 1
  %18553 = getelementptr inbounds %struct.Reg, %struct.Reg* %18552, i32 0, i32 0
  %RAX.i248 = bitcast %union.anon* %18553 to i64*
  %18554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18555 = getelementptr inbounds %struct.GPR, %struct.GPR* %18554, i32 0, i32 15
  %18556 = getelementptr inbounds %struct.Reg, %struct.Reg* %18555, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %18556 to i64*
  %18557 = load i64, i64* %RAX.i248
  %18558 = load i64, i64* %RBP.i249
  %18559 = sub i64 %18558, 100
  %18560 = load i64, i64* %PC.i247
  %18561 = add i64 %18560, 3
  store i64 %18561, i64* %PC.i247
  %18562 = trunc i64 %18557 to i32
  %18563 = inttoptr i64 %18559 to i32*
  %18564 = load i32, i32* %18563
  %18565 = sub i32 %18562, %18564
  %18566 = zext i32 %18565 to i64
  store i64 %18566, i64* %RAX.i248, align 8
  %18567 = icmp ult i32 %18562, %18564
  %18568 = zext i1 %18567 to i8
  %18569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18568, i8* %18569, align 1
  %18570 = and i32 %18565, 255
  %18571 = call i32 @llvm.ctpop.i32(i32 %18570)
  %18572 = trunc i32 %18571 to i8
  %18573 = and i8 %18572, 1
  %18574 = xor i8 %18573, 1
  %18575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18574, i8* %18575, align 1
  %18576 = xor i32 %18564, %18562
  %18577 = xor i32 %18576, %18565
  %18578 = lshr i32 %18577, 4
  %18579 = trunc i32 %18578 to i8
  %18580 = and i8 %18579, 1
  %18581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18580, i8* %18581, align 1
  %18582 = icmp eq i32 %18565, 0
  %18583 = zext i1 %18582 to i8
  %18584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18583, i8* %18584, align 1
  %18585 = lshr i32 %18565, 31
  %18586 = trunc i32 %18585 to i8
  %18587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18586, i8* %18587, align 1
  %18588 = lshr i32 %18562, 31
  %18589 = lshr i32 %18564, 31
  %18590 = xor i32 %18589, %18588
  %18591 = xor i32 %18585, %18588
  %18592 = add i32 %18591, %18590
  %18593 = icmp eq i32 %18592, 2
  %18594 = zext i1 %18593 to i8
  %18595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18594, i8* %18595, align 1
  store %struct.Memory* %loadMem_43b1ad, %struct.Memory** %MEMORY
  %loadMem_43b1b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18597 = getelementptr inbounds %struct.GPR, %struct.GPR* %18596, i32 0, i32 33
  %18598 = getelementptr inbounds %struct.Reg, %struct.Reg* %18597, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %18598 to i64*
  %18599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18600 = getelementptr inbounds %struct.GPR, %struct.GPR* %18599, i32 0, i32 1
  %18601 = getelementptr inbounds %struct.Reg, %struct.Reg* %18600, i32 0, i32 0
  %EAX.i245 = bitcast %union.anon* %18601 to i32*
  %18602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18603 = getelementptr inbounds %struct.GPR, %struct.GPR* %18602, i32 0, i32 15
  %18604 = getelementptr inbounds %struct.Reg, %struct.Reg* %18603, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %18604 to i64*
  %18605 = load i64, i64* %RBP.i246
  %18606 = sub i64 %18605, 500
  %18607 = load i32, i32* %EAX.i245
  %18608 = zext i32 %18607 to i64
  %18609 = load i64, i64* %PC.i244
  %18610 = add i64 %18609, 6
  store i64 %18610, i64* %PC.i244
  %18611 = inttoptr i64 %18606 to i32*
  store i32 %18607, i32* %18611
  store %struct.Memory* %loadMem_43b1b0, %struct.Memory** %MEMORY
  %loadMem_43b1b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18613 = getelementptr inbounds %struct.GPR, %struct.GPR* %18612, i32 0, i32 33
  %18614 = getelementptr inbounds %struct.Reg, %struct.Reg* %18613, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %18614 to i64*
  %18615 = load i64, i64* %PC.i243
  %18616 = add i64 %18615, 102
  %18617 = load i64, i64* %PC.i243
  %18618 = add i64 %18617, 5
  store i64 %18618, i64* %PC.i243
  %18619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18616, i64* %18619, align 8
  store %struct.Memory* %loadMem_43b1b6, %struct.Memory** %MEMORY
  br label %block_.L_43b21c

block_.L_43b1bb:                                  ; preds = %block_43b182
  %loadMem_43b1bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %18620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18621 = getelementptr inbounds %struct.GPR, %struct.GPR* %18620, i32 0, i32 33
  %18622 = getelementptr inbounds %struct.Reg, %struct.Reg* %18621, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %18622 to i64*
  %18623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18624 = getelementptr inbounds %struct.GPR, %struct.GPR* %18623, i32 0, i32 1
  %18625 = getelementptr inbounds %struct.Reg, %struct.Reg* %18624, i32 0, i32 0
  %RAX.i241 = bitcast %union.anon* %18625 to i64*
  %18626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18627 = getelementptr inbounds %struct.GPR, %struct.GPR* %18626, i32 0, i32 15
  %18628 = getelementptr inbounds %struct.Reg, %struct.Reg* %18627, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %18628 to i64*
  %18629 = load i64, i64* %RBP.i242
  %18630 = sub i64 %18629, 120
  %18631 = load i64, i64* %PC.i240
  %18632 = add i64 %18631, 3
  store i64 %18632, i64* %PC.i240
  %18633 = inttoptr i64 %18630 to i32*
  %18634 = load i32, i32* %18633
  %18635 = zext i32 %18634 to i64
  store i64 %18635, i64* %RAX.i241, align 8
  store %struct.Memory* %loadMem_43b1bb, %struct.Memory** %MEMORY
  %loadMem_43b1be = load %struct.Memory*, %struct.Memory** %MEMORY
  %18636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18637 = getelementptr inbounds %struct.GPR, %struct.GPR* %18636, i32 0, i32 33
  %18638 = getelementptr inbounds %struct.Reg, %struct.Reg* %18637, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %18638 to i64*
  %18639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18640 = getelementptr inbounds %struct.GPR, %struct.GPR* %18639, i32 0, i32 5
  %18641 = getelementptr inbounds %struct.Reg, %struct.Reg* %18640, i32 0, i32 0
  %RCX.i238 = bitcast %union.anon* %18641 to i64*
  %18642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18643 = getelementptr inbounds %struct.GPR, %struct.GPR* %18642, i32 0, i32 15
  %18644 = getelementptr inbounds %struct.Reg, %struct.Reg* %18643, i32 0, i32 0
  %RBP.i239 = bitcast %union.anon* %18644 to i64*
  %18645 = load i64, i64* %RBP.i239
  %18646 = sub i64 %18645, 144
  %18647 = load i64, i64* %PC.i237
  %18648 = add i64 %18647, 6
  store i64 %18648, i64* %PC.i237
  %18649 = inttoptr i64 %18646 to i32*
  %18650 = load i32, i32* %18649
  %18651 = zext i32 %18650 to i64
  store i64 %18651, i64* %RCX.i238, align 8
  store %struct.Memory* %loadMem_43b1be, %struct.Memory** %MEMORY
  %loadMem_43b1c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18653 = getelementptr inbounds %struct.GPR, %struct.GPR* %18652, i32 0, i32 33
  %18654 = getelementptr inbounds %struct.Reg, %struct.Reg* %18653, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %18654 to i64*
  %18655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18656 = getelementptr inbounds %struct.GPR, %struct.GPR* %18655, i32 0, i32 5
  %18657 = getelementptr inbounds %struct.Reg, %struct.Reg* %18656, i32 0, i32 0
  %RCX.i236 = bitcast %union.anon* %18657 to i64*
  %18658 = load i64, i64* %RCX.i236
  %18659 = load i64, i64* %PC.i235
  %18660 = add i64 %18659, 3
  store i64 %18660, i64* %PC.i235
  %18661 = trunc i64 %18658 to i32
  %18662 = add i32 1, %18661
  %18663 = zext i32 %18662 to i64
  store i64 %18663, i64* %RCX.i236, align 8
  %18664 = icmp ult i32 %18662, %18661
  %18665 = icmp ult i32 %18662, 1
  %18666 = or i1 %18664, %18665
  %18667 = zext i1 %18666 to i8
  %18668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18667, i8* %18668, align 1
  %18669 = and i32 %18662, 255
  %18670 = call i32 @llvm.ctpop.i32(i32 %18669)
  %18671 = trunc i32 %18670 to i8
  %18672 = and i8 %18671, 1
  %18673 = xor i8 %18672, 1
  %18674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18673, i8* %18674, align 1
  %18675 = xor i64 1, %18658
  %18676 = trunc i64 %18675 to i32
  %18677 = xor i32 %18676, %18662
  %18678 = lshr i32 %18677, 4
  %18679 = trunc i32 %18678 to i8
  %18680 = and i8 %18679, 1
  %18681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18680, i8* %18681, align 1
  %18682 = icmp eq i32 %18662, 0
  %18683 = zext i1 %18682 to i8
  %18684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18683, i8* %18684, align 1
  %18685 = lshr i32 %18662, 31
  %18686 = trunc i32 %18685 to i8
  %18687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18686, i8* %18687, align 1
  %18688 = lshr i32 %18661, 31
  %18689 = xor i32 %18685, %18688
  %18690 = add i32 %18689, %18685
  %18691 = icmp eq i32 %18690, 2
  %18692 = zext i1 %18691 to i8
  %18693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18692, i8* %18693, align 1
  store %struct.Memory* %loadMem_43b1c4, %struct.Memory** %MEMORY
  %loadMem_43b1c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18695 = getelementptr inbounds %struct.GPR, %struct.GPR* %18694, i32 0, i32 33
  %18696 = getelementptr inbounds %struct.Reg, %struct.Reg* %18695, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %18696 to i64*
  %18697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18698 = getelementptr inbounds %struct.GPR, %struct.GPR* %18697, i32 0, i32 5
  %18699 = getelementptr inbounds %struct.Reg, %struct.Reg* %18698, i32 0, i32 0
  %RCX.i234 = bitcast %union.anon* %18699 to i64*
  %18700 = load i64, i64* %RCX.i234
  %18701 = load i64, i64* %PC.i233
  %18702 = add i64 %18701, 2
  store i64 %18702, i64* %PC.i233
  %18703 = shl i64 %18700, 32
  %18704 = ashr i64 %18703, 33
  %18705 = trunc i64 %18700 to i8
  %18706 = and i8 %18705, 1
  %18707 = trunc i64 %18704 to i32
  %18708 = and i64 %18704, 4294967295
  store i64 %18708, i64* %RCX.i234, align 8
  %18709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18706, i8* %18709, align 1
  %18710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18711 = and i32 %18707, 255
  %18712 = call i32 @llvm.ctpop.i32(i32 %18711)
  %18713 = trunc i32 %18712 to i8
  %18714 = and i8 %18713, 1
  %18715 = xor i8 %18714, 1
  store i8 %18715, i8* %18710, align 1
  %18716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18716, align 1
  %18717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18718 = icmp eq i32 %18707, 0
  %18719 = zext i1 %18718 to i8
  store i8 %18719, i8* %18717, align 1
  %18720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18721 = lshr i32 %18707, 31
  %18722 = trunc i32 %18721 to i8
  store i8 %18722, i8* %18720, align 1
  %18723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18723, align 1
  store %struct.Memory* %loadMem_43b1c7, %struct.Memory** %MEMORY
  %loadMem_43b1ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %18724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18725 = getelementptr inbounds %struct.GPR, %struct.GPR* %18724, i32 0, i32 33
  %18726 = getelementptr inbounds %struct.Reg, %struct.Reg* %18725, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %18726 to i64*
  %18727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18728 = getelementptr inbounds %struct.GPR, %struct.GPR* %18727, i32 0, i32 5
  %18729 = getelementptr inbounds %struct.Reg, %struct.Reg* %18728, i32 0, i32 0
  %ECX.i231 = bitcast %union.anon* %18729 to i32*
  %18730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18731 = getelementptr inbounds %struct.GPR, %struct.GPR* %18730, i32 0, i32 1
  %18732 = getelementptr inbounds %struct.Reg, %struct.Reg* %18731, i32 0, i32 0
  %RAX.i232 = bitcast %union.anon* %18732 to i64*
  %18733 = load i64, i64* %RAX.i232
  %18734 = load i32, i32* %ECX.i231
  %18735 = zext i32 %18734 to i64
  %18736 = load i64, i64* %PC.i230
  %18737 = add i64 %18736, 2
  store i64 %18737, i64* %PC.i230
  %18738 = trunc i64 %18733 to i32
  %18739 = add i32 %18734, %18738
  %18740 = zext i32 %18739 to i64
  store i64 %18740, i64* %RAX.i232, align 8
  %18741 = icmp ult i32 %18739, %18738
  %18742 = icmp ult i32 %18739, %18734
  %18743 = or i1 %18741, %18742
  %18744 = zext i1 %18743 to i8
  %18745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18744, i8* %18745, align 1
  %18746 = and i32 %18739, 255
  %18747 = call i32 @llvm.ctpop.i32(i32 %18746)
  %18748 = trunc i32 %18747 to i8
  %18749 = and i8 %18748, 1
  %18750 = xor i8 %18749, 1
  %18751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18750, i8* %18751, align 1
  %18752 = xor i64 %18735, %18733
  %18753 = trunc i64 %18752 to i32
  %18754 = xor i32 %18753, %18739
  %18755 = lshr i32 %18754, 4
  %18756 = trunc i32 %18755 to i8
  %18757 = and i8 %18756, 1
  %18758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18757, i8* %18758, align 1
  %18759 = icmp eq i32 %18739, 0
  %18760 = zext i1 %18759 to i8
  %18761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18760, i8* %18761, align 1
  %18762 = lshr i32 %18739, 31
  %18763 = trunc i32 %18762 to i8
  %18764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18763, i8* %18764, align 1
  %18765 = lshr i32 %18738, 31
  %18766 = lshr i32 %18734, 31
  %18767 = xor i32 %18762, %18765
  %18768 = xor i32 %18762, %18766
  %18769 = add i32 %18767, %18768
  %18770 = icmp eq i32 %18769, 2
  %18771 = zext i1 %18770 to i8
  %18772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18771, i8* %18772, align 1
  store %struct.Memory* %loadMem_43b1ca, %struct.Memory** %MEMORY
  %loadMem_43b1cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %18773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18774 = getelementptr inbounds %struct.GPR, %struct.GPR* %18773, i32 0, i32 33
  %18775 = getelementptr inbounds %struct.Reg, %struct.Reg* %18774, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %18775 to i64*
  %18776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18777 = getelementptr inbounds %struct.GPR, %struct.GPR* %18776, i32 0, i32 5
  %18778 = getelementptr inbounds %struct.Reg, %struct.Reg* %18777, i32 0, i32 0
  %RCX.i228 = bitcast %union.anon* %18778 to i64*
  %18779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18780 = getelementptr inbounds %struct.GPR, %struct.GPR* %18779, i32 0, i32 15
  %18781 = getelementptr inbounds %struct.Reg, %struct.Reg* %18780, i32 0, i32 0
  %RBP.i229 = bitcast %union.anon* %18781 to i64*
  %18782 = load i64, i64* %RBP.i229
  %18783 = sub i64 %18782, 124
  %18784 = load i64, i64* %PC.i227
  %18785 = add i64 %18784, 3
  store i64 %18785, i64* %PC.i227
  %18786 = inttoptr i64 %18783 to i32*
  %18787 = load i32, i32* %18786
  %18788 = zext i32 %18787 to i64
  store i64 %18788, i64* %RCX.i228, align 8
  store %struct.Memory* %loadMem_43b1cc, %struct.Memory** %MEMORY
  %loadMem_43b1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %18789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18790 = getelementptr inbounds %struct.GPR, %struct.GPR* %18789, i32 0, i32 33
  %18791 = getelementptr inbounds %struct.Reg, %struct.Reg* %18790, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %18791 to i64*
  %18792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18793 = getelementptr inbounds %struct.GPR, %struct.GPR* %18792, i32 0, i32 5
  %18794 = getelementptr inbounds %struct.Reg, %struct.Reg* %18793, i32 0, i32 0
  %RCX.i226 = bitcast %union.anon* %18794 to i64*
  %18795 = load i64, i64* %RCX.i226
  %18796 = load i64, i64* %PC.i225
  %18797 = add i64 %18796, 2
  store i64 %18797, i64* %PC.i225
  %18798 = trunc i64 %18795 to i32
  %18799 = shl i32 %18798, 1
  %18800 = icmp slt i32 %18798, 0
  %18801 = icmp slt i32 %18799, 0
  %18802 = xor i1 %18800, %18801
  %18803 = zext i32 %18799 to i64
  store i64 %18803, i64* %RCX.i226, align 8
  %18804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18805 = zext i1 %18800 to i8
  store i8 %18805, i8* %18804, align 1
  %18806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18807 = and i32 %18799, 254
  %18808 = call i32 @llvm.ctpop.i32(i32 %18807)
  %18809 = trunc i32 %18808 to i8
  %18810 = and i8 %18809, 1
  %18811 = xor i8 %18810, 1
  store i8 %18811, i8* %18806, align 1
  %18812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18812, align 1
  %18813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18814 = icmp eq i32 %18799, 0
  %18815 = zext i1 %18814 to i8
  store i8 %18815, i8* %18813, align 1
  %18816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18817 = lshr i32 %18799, 31
  %18818 = trunc i32 %18817 to i8
  store i8 %18818, i8* %18816, align 1
  %18819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18820 = zext i1 %18802 to i8
  store i8 %18820, i8* %18819, align 1
  store %struct.Memory* %loadMem_43b1cf, %struct.Memory** %MEMORY
  %loadMem_43b1d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18822 = getelementptr inbounds %struct.GPR, %struct.GPR* %18821, i32 0, i32 33
  %18823 = getelementptr inbounds %struct.Reg, %struct.Reg* %18822, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %18823 to i64*
  %18824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18825 = getelementptr inbounds %struct.GPR, %struct.GPR* %18824, i32 0, i32 5
  %18826 = getelementptr inbounds %struct.Reg, %struct.Reg* %18825, i32 0, i32 0
  %ECX.i223 = bitcast %union.anon* %18826 to i32*
  %18827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18828 = getelementptr inbounds %struct.GPR, %struct.GPR* %18827, i32 0, i32 1
  %18829 = getelementptr inbounds %struct.Reg, %struct.Reg* %18828, i32 0, i32 0
  %RAX.i224 = bitcast %union.anon* %18829 to i64*
  %18830 = load i64, i64* %RAX.i224
  %18831 = load i32, i32* %ECX.i223
  %18832 = zext i32 %18831 to i64
  %18833 = load i64, i64* %PC.i222
  %18834 = add i64 %18833, 2
  store i64 %18834, i64* %PC.i222
  %18835 = trunc i64 %18830 to i32
  %18836 = sub i32 %18835, %18831
  %18837 = zext i32 %18836 to i64
  store i64 %18837, i64* %RAX.i224, align 8
  %18838 = icmp ult i32 %18835, %18831
  %18839 = zext i1 %18838 to i8
  %18840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18839, i8* %18840, align 1
  %18841 = and i32 %18836, 255
  %18842 = call i32 @llvm.ctpop.i32(i32 %18841)
  %18843 = trunc i32 %18842 to i8
  %18844 = and i8 %18843, 1
  %18845 = xor i8 %18844, 1
  %18846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18845, i8* %18846, align 1
  %18847 = xor i64 %18832, %18830
  %18848 = trunc i64 %18847 to i32
  %18849 = xor i32 %18848, %18836
  %18850 = lshr i32 %18849, 4
  %18851 = trunc i32 %18850 to i8
  %18852 = and i8 %18851, 1
  %18853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18852, i8* %18853, align 1
  %18854 = icmp eq i32 %18836, 0
  %18855 = zext i1 %18854 to i8
  %18856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18855, i8* %18856, align 1
  %18857 = lshr i32 %18836, 31
  %18858 = trunc i32 %18857 to i8
  %18859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18858, i8* %18859, align 1
  %18860 = lshr i32 %18835, 31
  %18861 = lshr i32 %18831, 31
  %18862 = xor i32 %18861, %18860
  %18863 = xor i32 %18857, %18860
  %18864 = add i32 %18863, %18862
  %18865 = icmp eq i32 %18864, 2
  %18866 = zext i1 %18865 to i8
  %18867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18866, i8* %18867, align 1
  store %struct.Memory* %loadMem_43b1d2, %struct.Memory** %MEMORY
  %loadMem_43b1d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18869 = getelementptr inbounds %struct.GPR, %struct.GPR* %18868, i32 0, i32 33
  %18870 = getelementptr inbounds %struct.Reg, %struct.Reg* %18869, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %18870 to i64*
  %18871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18872 = getelementptr inbounds %struct.GPR, %struct.GPR* %18871, i32 0, i32 1
  %18873 = getelementptr inbounds %struct.Reg, %struct.Reg* %18872, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %18873 to i64*
  %18874 = load i64, i64* %RAX.i221
  %18875 = load i64, i64* %PC.i220
  %18876 = add i64 %18875, 2
  store i64 %18876, i64* %PC.i220
  %18877 = shl i64 %18874, 32
  %18878 = ashr i64 %18877, 33
  %18879 = trunc i64 %18874 to i8
  %18880 = and i8 %18879, 1
  %18881 = trunc i64 %18878 to i32
  %18882 = and i64 %18878, 4294967295
  store i64 %18882, i64* %RAX.i221, align 8
  %18883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18880, i8* %18883, align 1
  %18884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18885 = and i32 %18881, 255
  %18886 = call i32 @llvm.ctpop.i32(i32 %18885)
  %18887 = trunc i32 %18886 to i8
  %18888 = and i8 %18887, 1
  %18889 = xor i8 %18888, 1
  store i8 %18889, i8* %18884, align 1
  %18890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18890, align 1
  %18891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18892 = icmp eq i32 %18881, 0
  %18893 = zext i1 %18892 to i8
  store i8 %18893, i8* %18891, align 1
  %18894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18895 = lshr i32 %18881, 31
  %18896 = trunc i32 %18895 to i8
  store i8 %18896, i8* %18894, align 1
  %18897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18897, align 1
  store %struct.Memory* %loadMem_43b1d4, %struct.Memory** %MEMORY
  %loadMem_43b1d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18899 = getelementptr inbounds %struct.GPR, %struct.GPR* %18898, i32 0, i32 33
  %18900 = getelementptr inbounds %struct.Reg, %struct.Reg* %18899, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %18900 to i64*
  %18901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18902 = getelementptr inbounds %struct.GPR, %struct.GPR* %18901, i32 0, i32 1
  %18903 = getelementptr inbounds %struct.Reg, %struct.Reg* %18902, i32 0, i32 0
  %EAX.i218 = bitcast %union.anon* %18903 to i32*
  %18904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18905 = getelementptr inbounds %struct.GPR, %struct.GPR* %18904, i32 0, i32 15
  %18906 = getelementptr inbounds %struct.Reg, %struct.Reg* %18905, i32 0, i32 0
  %RBP.i219 = bitcast %union.anon* %18906 to i64*
  %18907 = load i32, i32* %EAX.i218
  %18908 = zext i32 %18907 to i64
  %18909 = load i64, i64* %RBP.i219
  %18910 = sub i64 %18909, 100
  %18911 = load i64, i64* %PC.i217
  %18912 = add i64 %18911, 3
  store i64 %18912, i64* %PC.i217
  %18913 = inttoptr i64 %18910 to i32*
  %18914 = load i32, i32* %18913
  %18915 = sub i32 %18907, %18914
  %18916 = icmp ult i32 %18907, %18914
  %18917 = zext i1 %18916 to i8
  %18918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18917, i8* %18918, align 1
  %18919 = and i32 %18915, 255
  %18920 = call i32 @llvm.ctpop.i32(i32 %18919)
  %18921 = trunc i32 %18920 to i8
  %18922 = and i8 %18921, 1
  %18923 = xor i8 %18922, 1
  %18924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18923, i8* %18924, align 1
  %18925 = xor i32 %18914, %18907
  %18926 = xor i32 %18925, %18915
  %18927 = lshr i32 %18926, 4
  %18928 = trunc i32 %18927 to i8
  %18929 = and i8 %18928, 1
  %18930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18929, i8* %18930, align 1
  %18931 = icmp eq i32 %18915, 0
  %18932 = zext i1 %18931 to i8
  %18933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18932, i8* %18933, align 1
  %18934 = lshr i32 %18915, 31
  %18935 = trunc i32 %18934 to i8
  %18936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18935, i8* %18936, align 1
  %18937 = lshr i32 %18907, 31
  %18938 = lshr i32 %18914, 31
  %18939 = xor i32 %18938, %18937
  %18940 = xor i32 %18934, %18937
  %18941 = add i32 %18940, %18939
  %18942 = icmp eq i32 %18941, 2
  %18943 = zext i1 %18942 to i8
  %18944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18943, i8* %18944, align 1
  store %struct.Memory* %loadMem_43b1d7, %struct.Memory** %MEMORY
  %loadMem_43b1da = load %struct.Memory*, %struct.Memory** %MEMORY
  %18945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18946 = getelementptr inbounds %struct.GPR, %struct.GPR* %18945, i32 0, i32 33
  %18947 = getelementptr inbounds %struct.Reg, %struct.Reg* %18946, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %18947 to i64*
  %18948 = load i64, i64* %PC.i216
  %18949 = add i64 %18948, 20
  %18950 = load i64, i64* %PC.i216
  %18951 = add i64 %18950, 6
  %18952 = load i64, i64* %PC.i216
  %18953 = add i64 %18952, 6
  store i64 %18953, i64* %PC.i216
  %18954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18955 = load i8, i8* %18954, align 1
  %18956 = icmp ne i8 %18955, 0
  %18957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18958 = load i8, i8* %18957, align 1
  %18959 = icmp ne i8 %18958, 0
  %18960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18961 = load i8, i8* %18960, align 1
  %18962 = icmp ne i8 %18961, 0
  %18963 = xor i1 %18959, %18962
  %18964 = or i1 %18956, %18963
  %18965 = zext i1 %18964 to i8
  store i8 %18965, i8* %BRANCH_TAKEN, align 1
  %18966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18967 = select i1 %18964, i64 %18949, i64 %18951
  store i64 %18967, i64* %18966, align 8
  store %struct.Memory* %loadMem_43b1da, %struct.Memory** %MEMORY
  %loadBr_43b1da = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b1da = icmp eq i8 %loadBr_43b1da, 1
  br i1 %cmpBr_43b1da, label %block_.L_43b1ee, label %block_43b1e0

block_43b1e0:                                     ; preds = %block_.L_43b1bb
  %loadMem_43b1e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18969 = getelementptr inbounds %struct.GPR, %struct.GPR* %18968, i32 0, i32 33
  %18970 = getelementptr inbounds %struct.Reg, %struct.Reg* %18969, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %18970 to i64*
  %18971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18972 = getelementptr inbounds %struct.GPR, %struct.GPR* %18971, i32 0, i32 1
  %18973 = getelementptr inbounds %struct.Reg, %struct.Reg* %18972, i32 0, i32 0
  %RAX.i214 = bitcast %union.anon* %18973 to i64*
  %18974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18975 = getelementptr inbounds %struct.GPR, %struct.GPR* %18974, i32 0, i32 15
  %18976 = getelementptr inbounds %struct.Reg, %struct.Reg* %18975, i32 0, i32 0
  %RBP.i215 = bitcast %union.anon* %18976 to i64*
  %18977 = load i64, i64* %RBP.i215
  %18978 = sub i64 %18977, 100
  %18979 = load i64, i64* %PC.i213
  %18980 = add i64 %18979, 3
  store i64 %18980, i64* %PC.i213
  %18981 = inttoptr i64 %18978 to i32*
  %18982 = load i32, i32* %18981
  %18983 = zext i32 %18982 to i64
  store i64 %18983, i64* %RAX.i214, align 8
  store %struct.Memory* %loadMem_43b1e0, %struct.Memory** %MEMORY
  %loadMem_43b1e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18985 = getelementptr inbounds %struct.GPR, %struct.GPR* %18984, i32 0, i32 33
  %18986 = getelementptr inbounds %struct.Reg, %struct.Reg* %18985, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %18986 to i64*
  %18987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18988 = getelementptr inbounds %struct.GPR, %struct.GPR* %18987, i32 0, i32 1
  %18989 = getelementptr inbounds %struct.Reg, %struct.Reg* %18988, i32 0, i32 0
  %EAX.i211 = bitcast %union.anon* %18989 to i32*
  %18990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18991 = getelementptr inbounds %struct.GPR, %struct.GPR* %18990, i32 0, i32 15
  %18992 = getelementptr inbounds %struct.Reg, %struct.Reg* %18991, i32 0, i32 0
  %RBP.i212 = bitcast %union.anon* %18992 to i64*
  %18993 = load i64, i64* %RBP.i212
  %18994 = sub i64 %18993, 504
  %18995 = load i32, i32* %EAX.i211
  %18996 = zext i32 %18995 to i64
  %18997 = load i64, i64* %PC.i210
  %18998 = add i64 %18997, 6
  store i64 %18998, i64* %PC.i210
  %18999 = inttoptr i64 %18994 to i32*
  store i32 %18995, i32* %18999
  store %struct.Memory* %loadMem_43b1e3, %struct.Memory** %MEMORY
  %loadMem_43b1e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19001 = getelementptr inbounds %struct.GPR, %struct.GPR* %19000, i32 0, i32 33
  %19002 = getelementptr inbounds %struct.Reg, %struct.Reg* %19001, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %19002 to i64*
  %19003 = load i64, i64* %PC.i209
  %19004 = add i64 %19003, 39
  %19005 = load i64, i64* %PC.i209
  %19006 = add i64 %19005, 5
  store i64 %19006, i64* %PC.i209
  %19007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19004, i64* %19007, align 8
  store %struct.Memory* %loadMem_43b1e9, %struct.Memory** %MEMORY
  br label %block_.L_43b210

block_.L_43b1ee:                                  ; preds = %block_.L_43b1bb
  %loadMem_43b1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %19008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19009 = getelementptr inbounds %struct.GPR, %struct.GPR* %19008, i32 0, i32 33
  %19010 = getelementptr inbounds %struct.Reg, %struct.Reg* %19009, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %19010 to i64*
  %19011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19012 = getelementptr inbounds %struct.GPR, %struct.GPR* %19011, i32 0, i32 1
  %19013 = getelementptr inbounds %struct.Reg, %struct.Reg* %19012, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %19013 to i64*
  %19014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19015 = getelementptr inbounds %struct.GPR, %struct.GPR* %19014, i32 0, i32 15
  %19016 = getelementptr inbounds %struct.Reg, %struct.Reg* %19015, i32 0, i32 0
  %RBP.i208 = bitcast %union.anon* %19016 to i64*
  %19017 = load i64, i64* %RBP.i208
  %19018 = sub i64 %19017, 120
  %19019 = load i64, i64* %PC.i206
  %19020 = add i64 %19019, 3
  store i64 %19020, i64* %PC.i206
  %19021 = inttoptr i64 %19018 to i32*
  %19022 = load i32, i32* %19021
  %19023 = zext i32 %19022 to i64
  store i64 %19023, i64* %RAX.i207, align 8
  store %struct.Memory* %loadMem_43b1ee, %struct.Memory** %MEMORY
  %loadMem_43b1f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19025 = getelementptr inbounds %struct.GPR, %struct.GPR* %19024, i32 0, i32 33
  %19026 = getelementptr inbounds %struct.Reg, %struct.Reg* %19025, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %19026 to i64*
  %19027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19028 = getelementptr inbounds %struct.GPR, %struct.GPR* %19027, i32 0, i32 5
  %19029 = getelementptr inbounds %struct.Reg, %struct.Reg* %19028, i32 0, i32 0
  %RCX.i204 = bitcast %union.anon* %19029 to i64*
  %19030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19031 = getelementptr inbounds %struct.GPR, %struct.GPR* %19030, i32 0, i32 15
  %19032 = getelementptr inbounds %struct.Reg, %struct.Reg* %19031, i32 0, i32 0
  %RBP.i205 = bitcast %union.anon* %19032 to i64*
  %19033 = load i64, i64* %RBP.i205
  %19034 = sub i64 %19033, 144
  %19035 = load i64, i64* %PC.i203
  %19036 = add i64 %19035, 6
  store i64 %19036, i64* %PC.i203
  %19037 = inttoptr i64 %19034 to i32*
  %19038 = load i32, i32* %19037
  %19039 = zext i32 %19038 to i64
  store i64 %19039, i64* %RCX.i204, align 8
  store %struct.Memory* %loadMem_43b1f1, %struct.Memory** %MEMORY
  %loadMem_43b1f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19041 = getelementptr inbounds %struct.GPR, %struct.GPR* %19040, i32 0, i32 33
  %19042 = getelementptr inbounds %struct.Reg, %struct.Reg* %19041, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %19042 to i64*
  %19043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19044 = getelementptr inbounds %struct.GPR, %struct.GPR* %19043, i32 0, i32 5
  %19045 = getelementptr inbounds %struct.Reg, %struct.Reg* %19044, i32 0, i32 0
  %RCX.i202 = bitcast %union.anon* %19045 to i64*
  %19046 = load i64, i64* %RCX.i202
  %19047 = load i64, i64* %PC.i201
  %19048 = add i64 %19047, 3
  store i64 %19048, i64* %PC.i201
  %19049 = trunc i64 %19046 to i32
  %19050 = add i32 1, %19049
  %19051 = zext i32 %19050 to i64
  store i64 %19051, i64* %RCX.i202, align 8
  %19052 = icmp ult i32 %19050, %19049
  %19053 = icmp ult i32 %19050, 1
  %19054 = or i1 %19052, %19053
  %19055 = zext i1 %19054 to i8
  %19056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19055, i8* %19056, align 1
  %19057 = and i32 %19050, 255
  %19058 = call i32 @llvm.ctpop.i32(i32 %19057)
  %19059 = trunc i32 %19058 to i8
  %19060 = and i8 %19059, 1
  %19061 = xor i8 %19060, 1
  %19062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19061, i8* %19062, align 1
  %19063 = xor i64 1, %19046
  %19064 = trunc i64 %19063 to i32
  %19065 = xor i32 %19064, %19050
  %19066 = lshr i32 %19065, 4
  %19067 = trunc i32 %19066 to i8
  %19068 = and i8 %19067, 1
  %19069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19068, i8* %19069, align 1
  %19070 = icmp eq i32 %19050, 0
  %19071 = zext i1 %19070 to i8
  %19072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19071, i8* %19072, align 1
  %19073 = lshr i32 %19050, 31
  %19074 = trunc i32 %19073 to i8
  %19075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19074, i8* %19075, align 1
  %19076 = lshr i32 %19049, 31
  %19077 = xor i32 %19073, %19076
  %19078 = add i32 %19077, %19073
  %19079 = icmp eq i32 %19078, 2
  %19080 = zext i1 %19079 to i8
  %19081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19080, i8* %19081, align 1
  store %struct.Memory* %loadMem_43b1f7, %struct.Memory** %MEMORY
  %loadMem_43b1fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %19082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19083 = getelementptr inbounds %struct.GPR, %struct.GPR* %19082, i32 0, i32 33
  %19084 = getelementptr inbounds %struct.Reg, %struct.Reg* %19083, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %19084 to i64*
  %19085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19086 = getelementptr inbounds %struct.GPR, %struct.GPR* %19085, i32 0, i32 5
  %19087 = getelementptr inbounds %struct.Reg, %struct.Reg* %19086, i32 0, i32 0
  %RCX.i200 = bitcast %union.anon* %19087 to i64*
  %19088 = load i64, i64* %RCX.i200
  %19089 = load i64, i64* %PC.i199
  %19090 = add i64 %19089, 2
  store i64 %19090, i64* %PC.i199
  %19091 = shl i64 %19088, 32
  %19092 = ashr i64 %19091, 33
  %19093 = trunc i64 %19088 to i8
  %19094 = and i8 %19093, 1
  %19095 = trunc i64 %19092 to i32
  %19096 = and i64 %19092, 4294967295
  store i64 %19096, i64* %RCX.i200, align 8
  %19097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19094, i8* %19097, align 1
  %19098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19099 = and i32 %19095, 255
  %19100 = call i32 @llvm.ctpop.i32(i32 %19099)
  %19101 = trunc i32 %19100 to i8
  %19102 = and i8 %19101, 1
  %19103 = xor i8 %19102, 1
  store i8 %19103, i8* %19098, align 1
  %19104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19104, align 1
  %19105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19106 = icmp eq i32 %19095, 0
  %19107 = zext i1 %19106 to i8
  store i8 %19107, i8* %19105, align 1
  %19108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19109 = lshr i32 %19095, 31
  %19110 = trunc i32 %19109 to i8
  store i8 %19110, i8* %19108, align 1
  %19111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19111, align 1
  store %struct.Memory* %loadMem_43b1fa, %struct.Memory** %MEMORY
  %loadMem_43b1fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %19112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19113 = getelementptr inbounds %struct.GPR, %struct.GPR* %19112, i32 0, i32 33
  %19114 = getelementptr inbounds %struct.Reg, %struct.Reg* %19113, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %19114 to i64*
  %19115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19116 = getelementptr inbounds %struct.GPR, %struct.GPR* %19115, i32 0, i32 5
  %19117 = getelementptr inbounds %struct.Reg, %struct.Reg* %19116, i32 0, i32 0
  %ECX.i197 = bitcast %union.anon* %19117 to i32*
  %19118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19119 = getelementptr inbounds %struct.GPR, %struct.GPR* %19118, i32 0, i32 1
  %19120 = getelementptr inbounds %struct.Reg, %struct.Reg* %19119, i32 0, i32 0
  %RAX.i198 = bitcast %union.anon* %19120 to i64*
  %19121 = load i64, i64* %RAX.i198
  %19122 = load i32, i32* %ECX.i197
  %19123 = zext i32 %19122 to i64
  %19124 = load i64, i64* %PC.i196
  %19125 = add i64 %19124, 2
  store i64 %19125, i64* %PC.i196
  %19126 = trunc i64 %19121 to i32
  %19127 = add i32 %19122, %19126
  %19128 = zext i32 %19127 to i64
  store i64 %19128, i64* %RAX.i198, align 8
  %19129 = icmp ult i32 %19127, %19126
  %19130 = icmp ult i32 %19127, %19122
  %19131 = or i1 %19129, %19130
  %19132 = zext i1 %19131 to i8
  %19133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19132, i8* %19133, align 1
  %19134 = and i32 %19127, 255
  %19135 = call i32 @llvm.ctpop.i32(i32 %19134)
  %19136 = trunc i32 %19135 to i8
  %19137 = and i8 %19136, 1
  %19138 = xor i8 %19137, 1
  %19139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19138, i8* %19139, align 1
  %19140 = xor i64 %19123, %19121
  %19141 = trunc i64 %19140 to i32
  %19142 = xor i32 %19141, %19127
  %19143 = lshr i32 %19142, 4
  %19144 = trunc i32 %19143 to i8
  %19145 = and i8 %19144, 1
  %19146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19145, i8* %19146, align 1
  %19147 = icmp eq i32 %19127, 0
  %19148 = zext i1 %19147 to i8
  %19149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19148, i8* %19149, align 1
  %19150 = lshr i32 %19127, 31
  %19151 = trunc i32 %19150 to i8
  %19152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19151, i8* %19152, align 1
  %19153 = lshr i32 %19126, 31
  %19154 = lshr i32 %19122, 31
  %19155 = xor i32 %19150, %19153
  %19156 = xor i32 %19150, %19154
  %19157 = add i32 %19155, %19156
  %19158 = icmp eq i32 %19157, 2
  %19159 = zext i1 %19158 to i8
  %19160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19159, i8* %19160, align 1
  store %struct.Memory* %loadMem_43b1fd, %struct.Memory** %MEMORY
  %loadMem_43b1ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %19161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19162 = getelementptr inbounds %struct.GPR, %struct.GPR* %19161, i32 0, i32 33
  %19163 = getelementptr inbounds %struct.Reg, %struct.Reg* %19162, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %19163 to i64*
  %19164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19165 = getelementptr inbounds %struct.GPR, %struct.GPR* %19164, i32 0, i32 5
  %19166 = getelementptr inbounds %struct.Reg, %struct.Reg* %19165, i32 0, i32 0
  %RCX.i194 = bitcast %union.anon* %19166 to i64*
  %19167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19168 = getelementptr inbounds %struct.GPR, %struct.GPR* %19167, i32 0, i32 15
  %19169 = getelementptr inbounds %struct.Reg, %struct.Reg* %19168, i32 0, i32 0
  %RBP.i195 = bitcast %union.anon* %19169 to i64*
  %19170 = load i64, i64* %RBP.i195
  %19171 = sub i64 %19170, 124
  %19172 = load i64, i64* %PC.i193
  %19173 = add i64 %19172, 3
  store i64 %19173, i64* %PC.i193
  %19174 = inttoptr i64 %19171 to i32*
  %19175 = load i32, i32* %19174
  %19176 = zext i32 %19175 to i64
  store i64 %19176, i64* %RCX.i194, align 8
  store %struct.Memory* %loadMem_43b1ff, %struct.Memory** %MEMORY
  %loadMem_43b202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19178 = getelementptr inbounds %struct.GPR, %struct.GPR* %19177, i32 0, i32 33
  %19179 = getelementptr inbounds %struct.Reg, %struct.Reg* %19178, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %19179 to i64*
  %19180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19181 = getelementptr inbounds %struct.GPR, %struct.GPR* %19180, i32 0, i32 5
  %19182 = getelementptr inbounds %struct.Reg, %struct.Reg* %19181, i32 0, i32 0
  %RCX.i192 = bitcast %union.anon* %19182 to i64*
  %19183 = load i64, i64* %RCX.i192
  %19184 = load i64, i64* %PC.i191
  %19185 = add i64 %19184, 2
  store i64 %19185, i64* %PC.i191
  %19186 = trunc i64 %19183 to i32
  %19187 = shl i32 %19186, 1
  %19188 = icmp slt i32 %19186, 0
  %19189 = icmp slt i32 %19187, 0
  %19190 = xor i1 %19188, %19189
  %19191 = zext i32 %19187 to i64
  store i64 %19191, i64* %RCX.i192, align 8
  %19192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19193 = zext i1 %19188 to i8
  store i8 %19193, i8* %19192, align 1
  %19194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19195 = and i32 %19187, 254
  %19196 = call i32 @llvm.ctpop.i32(i32 %19195)
  %19197 = trunc i32 %19196 to i8
  %19198 = and i8 %19197, 1
  %19199 = xor i8 %19198, 1
  store i8 %19199, i8* %19194, align 1
  %19200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19200, align 1
  %19201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19202 = icmp eq i32 %19187, 0
  %19203 = zext i1 %19202 to i8
  store i8 %19203, i8* %19201, align 1
  %19204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19205 = lshr i32 %19187, 31
  %19206 = trunc i32 %19205 to i8
  store i8 %19206, i8* %19204, align 1
  %19207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19208 = zext i1 %19190 to i8
  store i8 %19208, i8* %19207, align 1
  store %struct.Memory* %loadMem_43b202, %struct.Memory** %MEMORY
  %loadMem_43b205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19210 = getelementptr inbounds %struct.GPR, %struct.GPR* %19209, i32 0, i32 33
  %19211 = getelementptr inbounds %struct.Reg, %struct.Reg* %19210, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %19211 to i64*
  %19212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19213 = getelementptr inbounds %struct.GPR, %struct.GPR* %19212, i32 0, i32 5
  %19214 = getelementptr inbounds %struct.Reg, %struct.Reg* %19213, i32 0, i32 0
  %ECX.i189 = bitcast %union.anon* %19214 to i32*
  %19215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19216 = getelementptr inbounds %struct.GPR, %struct.GPR* %19215, i32 0, i32 1
  %19217 = getelementptr inbounds %struct.Reg, %struct.Reg* %19216, i32 0, i32 0
  %RAX.i190 = bitcast %union.anon* %19217 to i64*
  %19218 = load i64, i64* %RAX.i190
  %19219 = load i32, i32* %ECX.i189
  %19220 = zext i32 %19219 to i64
  %19221 = load i64, i64* %PC.i188
  %19222 = add i64 %19221, 2
  store i64 %19222, i64* %PC.i188
  %19223 = trunc i64 %19218 to i32
  %19224 = sub i32 %19223, %19219
  %19225 = zext i32 %19224 to i64
  store i64 %19225, i64* %RAX.i190, align 8
  %19226 = icmp ult i32 %19223, %19219
  %19227 = zext i1 %19226 to i8
  %19228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19227, i8* %19228, align 1
  %19229 = and i32 %19224, 255
  %19230 = call i32 @llvm.ctpop.i32(i32 %19229)
  %19231 = trunc i32 %19230 to i8
  %19232 = and i8 %19231, 1
  %19233 = xor i8 %19232, 1
  %19234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19233, i8* %19234, align 1
  %19235 = xor i64 %19220, %19218
  %19236 = trunc i64 %19235 to i32
  %19237 = xor i32 %19236, %19224
  %19238 = lshr i32 %19237, 4
  %19239 = trunc i32 %19238 to i8
  %19240 = and i8 %19239, 1
  %19241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19240, i8* %19241, align 1
  %19242 = icmp eq i32 %19224, 0
  %19243 = zext i1 %19242 to i8
  %19244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19243, i8* %19244, align 1
  %19245 = lshr i32 %19224, 31
  %19246 = trunc i32 %19245 to i8
  %19247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19246, i8* %19247, align 1
  %19248 = lshr i32 %19223, 31
  %19249 = lshr i32 %19219, 31
  %19250 = xor i32 %19249, %19248
  %19251 = xor i32 %19245, %19248
  %19252 = add i32 %19251, %19250
  %19253 = icmp eq i32 %19252, 2
  %19254 = zext i1 %19253 to i8
  %19255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19254, i8* %19255, align 1
  store %struct.Memory* %loadMem_43b205, %struct.Memory** %MEMORY
  %loadMem_43b207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19257 = getelementptr inbounds %struct.GPR, %struct.GPR* %19256, i32 0, i32 33
  %19258 = getelementptr inbounds %struct.Reg, %struct.Reg* %19257, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %19258 to i64*
  %19259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19260 = getelementptr inbounds %struct.GPR, %struct.GPR* %19259, i32 0, i32 1
  %19261 = getelementptr inbounds %struct.Reg, %struct.Reg* %19260, i32 0, i32 0
  %RAX.i187 = bitcast %union.anon* %19261 to i64*
  %19262 = load i64, i64* %RAX.i187
  %19263 = load i64, i64* %PC.i186
  %19264 = add i64 %19263, 2
  store i64 %19264, i64* %PC.i186
  %19265 = shl i64 %19262, 32
  %19266 = ashr i64 %19265, 33
  %19267 = trunc i64 %19262 to i8
  %19268 = and i8 %19267, 1
  %19269 = trunc i64 %19266 to i32
  %19270 = and i64 %19266, 4294967295
  store i64 %19270, i64* %RAX.i187, align 8
  %19271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19268, i8* %19271, align 1
  %19272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19273 = and i32 %19269, 255
  %19274 = call i32 @llvm.ctpop.i32(i32 %19273)
  %19275 = trunc i32 %19274 to i8
  %19276 = and i8 %19275, 1
  %19277 = xor i8 %19276, 1
  store i8 %19277, i8* %19272, align 1
  %19278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19278, align 1
  %19279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19280 = icmp eq i32 %19269, 0
  %19281 = zext i1 %19280 to i8
  store i8 %19281, i8* %19279, align 1
  %19282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19283 = lshr i32 %19269, 31
  %19284 = trunc i32 %19283 to i8
  store i8 %19284, i8* %19282, align 1
  %19285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19285, align 1
  store %struct.Memory* %loadMem_43b207, %struct.Memory** %MEMORY
  %loadMem_43b20a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19287 = getelementptr inbounds %struct.GPR, %struct.GPR* %19286, i32 0, i32 33
  %19288 = getelementptr inbounds %struct.Reg, %struct.Reg* %19287, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %19288 to i64*
  %19289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19290 = getelementptr inbounds %struct.GPR, %struct.GPR* %19289, i32 0, i32 1
  %19291 = getelementptr inbounds %struct.Reg, %struct.Reg* %19290, i32 0, i32 0
  %EAX.i184 = bitcast %union.anon* %19291 to i32*
  %19292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19293 = getelementptr inbounds %struct.GPR, %struct.GPR* %19292, i32 0, i32 15
  %19294 = getelementptr inbounds %struct.Reg, %struct.Reg* %19293, i32 0, i32 0
  %RBP.i185 = bitcast %union.anon* %19294 to i64*
  %19295 = load i64, i64* %RBP.i185
  %19296 = sub i64 %19295, 504
  %19297 = load i32, i32* %EAX.i184
  %19298 = zext i32 %19297 to i64
  %19299 = load i64, i64* %PC.i183
  %19300 = add i64 %19299, 6
  store i64 %19300, i64* %PC.i183
  %19301 = inttoptr i64 %19296 to i32*
  store i32 %19297, i32* %19301
  store %struct.Memory* %loadMem_43b20a, %struct.Memory** %MEMORY
  br label %block_.L_43b210

block_.L_43b210:                                  ; preds = %block_.L_43b1ee, %block_43b1e0
  %loadMem_43b210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19303 = getelementptr inbounds %struct.GPR, %struct.GPR* %19302, i32 0, i32 33
  %19304 = getelementptr inbounds %struct.Reg, %struct.Reg* %19303, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %19304 to i64*
  %19305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19306 = getelementptr inbounds %struct.GPR, %struct.GPR* %19305, i32 0, i32 1
  %19307 = getelementptr inbounds %struct.Reg, %struct.Reg* %19306, i32 0, i32 0
  %RAX.i181 = bitcast %union.anon* %19307 to i64*
  %19308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19309 = getelementptr inbounds %struct.GPR, %struct.GPR* %19308, i32 0, i32 15
  %19310 = getelementptr inbounds %struct.Reg, %struct.Reg* %19309, i32 0, i32 0
  %RBP.i182 = bitcast %union.anon* %19310 to i64*
  %19311 = load i64, i64* %RBP.i182
  %19312 = sub i64 %19311, 504
  %19313 = load i64, i64* %PC.i180
  %19314 = add i64 %19313, 6
  store i64 %19314, i64* %PC.i180
  %19315 = inttoptr i64 %19312 to i32*
  %19316 = load i32, i32* %19315
  %19317 = zext i32 %19316 to i64
  store i64 %19317, i64* %RAX.i181, align 8
  store %struct.Memory* %loadMem_43b210, %struct.Memory** %MEMORY
  %loadMem_43b216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19319 = getelementptr inbounds %struct.GPR, %struct.GPR* %19318, i32 0, i32 33
  %19320 = getelementptr inbounds %struct.Reg, %struct.Reg* %19319, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %19320 to i64*
  %19321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19322 = getelementptr inbounds %struct.GPR, %struct.GPR* %19321, i32 0, i32 1
  %19323 = getelementptr inbounds %struct.Reg, %struct.Reg* %19322, i32 0, i32 0
  %EAX.i178 = bitcast %union.anon* %19323 to i32*
  %19324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19325 = getelementptr inbounds %struct.GPR, %struct.GPR* %19324, i32 0, i32 15
  %19326 = getelementptr inbounds %struct.Reg, %struct.Reg* %19325, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %19326 to i64*
  %19327 = load i64, i64* %RBP.i179
  %19328 = sub i64 %19327, 500
  %19329 = load i32, i32* %EAX.i178
  %19330 = zext i32 %19329 to i64
  %19331 = load i64, i64* %PC.i177
  %19332 = add i64 %19331, 6
  store i64 %19332, i64* %PC.i177
  %19333 = inttoptr i64 %19328 to i32*
  store i32 %19329, i32* %19333
  store %struct.Memory* %loadMem_43b216, %struct.Memory** %MEMORY
  br label %block_.L_43b21c

block_.L_43b21c:                                  ; preds = %block_.L_43b210, %block_43b1ab
  %loadMem_43b21c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19335 = getelementptr inbounds %struct.GPR, %struct.GPR* %19334, i32 0, i32 33
  %19336 = getelementptr inbounds %struct.Reg, %struct.Reg* %19335, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %19336 to i64*
  %19337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19338 = getelementptr inbounds %struct.GPR, %struct.GPR* %19337, i32 0, i32 1
  %19339 = getelementptr inbounds %struct.Reg, %struct.Reg* %19338, i32 0, i32 0
  %RAX.i175 = bitcast %union.anon* %19339 to i64*
  %19340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19341 = getelementptr inbounds %struct.GPR, %struct.GPR* %19340, i32 0, i32 15
  %19342 = getelementptr inbounds %struct.Reg, %struct.Reg* %19341, i32 0, i32 0
  %RBP.i176 = bitcast %union.anon* %19342 to i64*
  %19343 = load i64, i64* %RBP.i176
  %19344 = sub i64 %19343, 500
  %19345 = load i64, i64* %PC.i174
  %19346 = add i64 %19345, 6
  store i64 %19346, i64* %PC.i174
  %19347 = inttoptr i64 %19344 to i32*
  %19348 = load i32, i32* %19347
  %19349 = zext i32 %19348 to i64
  store i64 %19349, i64* %RAX.i175, align 8
  store %struct.Memory* %loadMem_43b21c, %struct.Memory** %MEMORY
  %loadMem_43b222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19351 = getelementptr inbounds %struct.GPR, %struct.GPR* %19350, i32 0, i32 33
  %19352 = getelementptr inbounds %struct.Reg, %struct.Reg* %19351, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %19352 to i64*
  %19353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19354 = getelementptr inbounds %struct.GPR, %struct.GPR* %19353, i32 0, i32 5
  %19355 = getelementptr inbounds %struct.Reg, %struct.Reg* %19354, i32 0, i32 0
  %ECX.i172 = bitcast %union.anon* %19355 to i32*
  %19356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19357 = getelementptr inbounds %struct.GPR, %struct.GPR* %19356, i32 0, i32 5
  %19358 = getelementptr inbounds %struct.Reg, %struct.Reg* %19357, i32 0, i32 0
  %RCX.i173 = bitcast %union.anon* %19358 to i64*
  %19359 = load i64, i64* %RCX.i173
  %19360 = load i32, i32* %ECX.i172
  %19361 = zext i32 %19360 to i64
  %19362 = load i64, i64* %PC.i171
  %19363 = add i64 %19362, 2
  store i64 %19363, i64* %PC.i171
  %19364 = xor i64 %19361, %19359
  %19365 = trunc i64 %19364 to i32
  %19366 = and i64 %19364, 4294967295
  store i64 %19366, i64* %RCX.i173, align 8
  %19367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19367, align 1
  %19368 = and i32 %19365, 255
  %19369 = call i32 @llvm.ctpop.i32(i32 %19368)
  %19370 = trunc i32 %19369 to i8
  %19371 = and i8 %19370, 1
  %19372 = xor i8 %19371, 1
  %19373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19372, i8* %19373, align 1
  %19374 = icmp eq i32 %19365, 0
  %19375 = zext i1 %19374 to i8
  %19376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19375, i8* %19376, align 1
  %19377 = lshr i32 %19365, 31
  %19378 = trunc i32 %19377 to i8
  %19379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19378, i8* %19379, align 1
  %19380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19380, align 1
  %19381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19381, align 1
  store %struct.Memory* %loadMem_43b222, %struct.Memory** %MEMORY
  %loadMem_43b224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19383 = getelementptr inbounds %struct.GPR, %struct.GPR* %19382, i32 0, i32 33
  %19384 = getelementptr inbounds %struct.Reg, %struct.Reg* %19383, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %19384 to i64*
  %19385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19386 = getelementptr inbounds %struct.GPR, %struct.GPR* %19385, i32 0, i32 7
  %19387 = getelementptr inbounds %struct.Reg, %struct.Reg* %19386, i32 0, i32 0
  %RDX.i169 = bitcast %union.anon* %19387 to i64*
  %19388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19389 = getelementptr inbounds %struct.GPR, %struct.GPR* %19388, i32 0, i32 15
  %19390 = getelementptr inbounds %struct.Reg, %struct.Reg* %19389, i32 0, i32 0
  %RBP.i170 = bitcast %union.anon* %19390 to i64*
  %19391 = load i64, i64* %RBP.i170
  %19392 = sub i64 %19391, 200
  %19393 = load i64, i64* %PC.i168
  %19394 = add i64 %19393, 7
  store i64 %19394, i64* %PC.i168
  %19395 = inttoptr i64 %19392 to i64*
  %19396 = load i64, i64* %19395
  store i64 %19396, i64* %RDX.i169, align 8
  store %struct.Memory* %loadMem_43b224, %struct.Memory** %MEMORY
  %loadMem_43b22b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19398 = getelementptr inbounds %struct.GPR, %struct.GPR* %19397, i32 0, i32 33
  %19399 = getelementptr inbounds %struct.Reg, %struct.Reg* %19398, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %19399 to i64*
  %19400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19401 = getelementptr inbounds %struct.GPR, %struct.GPR* %19400, i32 0, i32 5
  %19402 = getelementptr inbounds %struct.Reg, %struct.Reg* %19401, i32 0, i32 0
  %RCX.i166 = bitcast %union.anon* %19402 to i64*
  %19403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19404 = getelementptr inbounds %struct.GPR, %struct.GPR* %19403, i32 0, i32 15
  %19405 = getelementptr inbounds %struct.Reg, %struct.Reg* %19404, i32 0, i32 0
  %RBP.i167 = bitcast %union.anon* %19405 to i64*
  %19406 = load i64, i64* %RCX.i166
  %19407 = load i64, i64* %RBP.i167
  %19408 = sub i64 %19407, 92
  %19409 = load i64, i64* %PC.i165
  %19410 = add i64 %19409, 3
  store i64 %19410, i64* %PC.i165
  %19411 = trunc i64 %19406 to i32
  %19412 = inttoptr i64 %19408 to i32*
  %19413 = load i32, i32* %19412
  %19414 = sub i32 %19411, %19413
  %19415 = zext i32 %19414 to i64
  store i64 %19415, i64* %RCX.i166, align 8
  %19416 = icmp ult i32 %19411, %19413
  %19417 = zext i1 %19416 to i8
  %19418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19417, i8* %19418, align 1
  %19419 = and i32 %19414, 255
  %19420 = call i32 @llvm.ctpop.i32(i32 %19419)
  %19421 = trunc i32 %19420 to i8
  %19422 = and i8 %19421, 1
  %19423 = xor i8 %19422, 1
  %19424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19423, i8* %19424, align 1
  %19425 = xor i32 %19413, %19411
  %19426 = xor i32 %19425, %19414
  %19427 = lshr i32 %19426, 4
  %19428 = trunc i32 %19427 to i8
  %19429 = and i8 %19428, 1
  %19430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19429, i8* %19430, align 1
  %19431 = icmp eq i32 %19414, 0
  %19432 = zext i1 %19431 to i8
  %19433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19432, i8* %19433, align 1
  %19434 = lshr i32 %19414, 31
  %19435 = trunc i32 %19434 to i8
  %19436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19435, i8* %19436, align 1
  %19437 = lshr i32 %19411, 31
  %19438 = lshr i32 %19413, 31
  %19439 = xor i32 %19438, %19437
  %19440 = xor i32 %19434, %19437
  %19441 = add i32 %19440, %19439
  %19442 = icmp eq i32 %19441, 2
  %19443 = zext i1 %19442 to i8
  %19444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19443, i8* %19444, align 1
  store %struct.Memory* %loadMem_43b22b, %struct.Memory** %MEMORY
  %loadMem_43b22e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19446 = getelementptr inbounds %struct.GPR, %struct.GPR* %19445, i32 0, i32 33
  %19447 = getelementptr inbounds %struct.Reg, %struct.Reg* %19446, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %19447 to i64*
  %19448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19449 = getelementptr inbounds %struct.GPR, %struct.GPR* %19448, i32 0, i32 5
  %19450 = getelementptr inbounds %struct.Reg, %struct.Reg* %19449, i32 0, i32 0
  %ECX.i163 = bitcast %union.anon* %19450 to i32*
  %19451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19452 = getelementptr inbounds %struct.GPR, %struct.GPR* %19451, i32 0, i32 9
  %19453 = getelementptr inbounds %struct.Reg, %struct.Reg* %19452, i32 0, i32 0
  %RSI.i164 = bitcast %union.anon* %19453 to i64*
  %19454 = load i32, i32* %ECX.i163
  %19455 = zext i32 %19454 to i64
  %19456 = load i64, i64* %PC.i162
  %19457 = add i64 %19456, 3
  store i64 %19457, i64* %PC.i162
  %19458 = shl i64 %19455, 32
  %19459 = ashr exact i64 %19458, 32
  store i64 %19459, i64* %RSI.i164, align 8
  store %struct.Memory* %loadMem_43b22e, %struct.Memory** %MEMORY
  %loadMem_43b231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19461 = getelementptr inbounds %struct.GPR, %struct.GPR* %19460, i32 0, i32 33
  %19462 = getelementptr inbounds %struct.Reg, %struct.Reg* %19461, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %19462 to i64*
  %19463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19464 = getelementptr inbounds %struct.GPR, %struct.GPR* %19463, i32 0, i32 5
  %19465 = getelementptr inbounds %struct.Reg, %struct.Reg* %19464, i32 0, i32 0
  %RCX.i159 = bitcast %union.anon* %19465 to i64*
  %19466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19467 = getelementptr inbounds %struct.GPR, %struct.GPR* %19466, i32 0, i32 7
  %19468 = getelementptr inbounds %struct.Reg, %struct.Reg* %19467, i32 0, i32 0
  %RDX.i160 = bitcast %union.anon* %19468 to i64*
  %19469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19470 = getelementptr inbounds %struct.GPR, %struct.GPR* %19469, i32 0, i32 9
  %19471 = getelementptr inbounds %struct.Reg, %struct.Reg* %19470, i32 0, i32 0
  %RSI.i161 = bitcast %union.anon* %19471 to i64*
  %19472 = load i64, i64* %RDX.i160
  %19473 = load i64, i64* %RSI.i161
  %19474 = mul i64 %19473, 2
  %19475 = add i64 %19474, %19472
  %19476 = load i64, i64* %PC.i158
  %19477 = add i64 %19476, 4
  store i64 %19477, i64* %PC.i158
  %19478 = inttoptr i64 %19475 to i16*
  %19479 = load i16, i16* %19478
  %19480 = zext i16 %19479 to i64
  store i64 %19480, i64* %RCX.i159, align 8
  store %struct.Memory* %loadMem_43b231, %struct.Memory** %MEMORY
  %loadMem_43b235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19482 = getelementptr inbounds %struct.GPR, %struct.GPR* %19481, i32 0, i32 33
  %19483 = getelementptr inbounds %struct.Reg, %struct.Reg* %19482, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %19483 to i64*
  %19484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19485 = getelementptr inbounds %struct.GPR, %struct.GPR* %19484, i32 0, i32 1
  %19486 = getelementptr inbounds %struct.Reg, %struct.Reg* %19485, i32 0, i32 0
  %EAX.i156 = bitcast %union.anon* %19486 to i32*
  %19487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19488 = getelementptr inbounds %struct.GPR, %struct.GPR* %19487, i32 0, i32 5
  %19489 = getelementptr inbounds %struct.Reg, %struct.Reg* %19488, i32 0, i32 0
  %RCX.i157 = bitcast %union.anon* %19489 to i64*
  %19490 = load i64, i64* %RCX.i157
  %19491 = load i32, i32* %EAX.i156
  %19492 = zext i32 %19491 to i64
  %19493 = load i64, i64* %PC.i155
  %19494 = add i64 %19493, 2
  store i64 %19494, i64* %PC.i155
  %19495 = trunc i64 %19490 to i32
  %19496 = add i32 %19491, %19495
  %19497 = zext i32 %19496 to i64
  store i64 %19497, i64* %RCX.i157, align 8
  %19498 = icmp ult i32 %19496, %19495
  %19499 = icmp ult i32 %19496, %19491
  %19500 = or i1 %19498, %19499
  %19501 = zext i1 %19500 to i8
  %19502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19501, i8* %19502, align 1
  %19503 = and i32 %19496, 255
  %19504 = call i32 @llvm.ctpop.i32(i32 %19503)
  %19505 = trunc i32 %19504 to i8
  %19506 = and i8 %19505, 1
  %19507 = xor i8 %19506, 1
  %19508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19507, i8* %19508, align 1
  %19509 = xor i64 %19492, %19490
  %19510 = trunc i64 %19509 to i32
  %19511 = xor i32 %19510, %19496
  %19512 = lshr i32 %19511, 4
  %19513 = trunc i32 %19512 to i8
  %19514 = and i8 %19513, 1
  %19515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19514, i8* %19515, align 1
  %19516 = icmp eq i32 %19496, 0
  %19517 = zext i1 %19516 to i8
  %19518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19517, i8* %19518, align 1
  %19519 = lshr i32 %19496, 31
  %19520 = trunc i32 %19519 to i8
  %19521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19520, i8* %19521, align 1
  %19522 = lshr i32 %19495, 31
  %19523 = lshr i32 %19491, 31
  %19524 = xor i32 %19519, %19522
  %19525 = xor i32 %19519, %19523
  %19526 = add i32 %19524, %19525
  %19527 = icmp eq i32 %19526, 2
  %19528 = zext i1 %19527 to i8
  %19529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19528, i8* %19529, align 1
  store %struct.Memory* %loadMem_43b235, %struct.Memory** %MEMORY
  %loadMem_43b237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19531 = getelementptr inbounds %struct.GPR, %struct.GPR* %19530, i32 0, i32 33
  %19532 = getelementptr inbounds %struct.Reg, %struct.Reg* %19531, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %19532 to i64*
  %19533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19534 = getelementptr inbounds %struct.GPR, %struct.GPR* %19533, i32 0, i32 5
  %19535 = getelementptr inbounds %struct.Reg, %struct.Reg* %19534, i32 0, i32 0
  %CX.i = bitcast %union.anon* %19535 to i16*
  %19536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19537 = getelementptr inbounds %struct.GPR, %struct.GPR* %19536, i32 0, i32 11
  %19538 = getelementptr inbounds %struct.Reg, %struct.Reg* %19537, i32 0, i32 0
  %DI.i154 = bitcast %union.anon* %19538 to i16*
  %19539 = load i16, i16* %CX.i
  %19540 = zext i16 %19539 to i64
  %19541 = load i64, i64* %PC.i153
  %19542 = add i64 %19541, 3
  store i64 %19542, i64* %PC.i153
  store i16 %19539, i16* %DI.i154, align 2
  store %struct.Memory* %loadMem_43b237, %struct.Memory** %MEMORY
  %loadMem_43b23a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19544 = getelementptr inbounds %struct.GPR, %struct.GPR* %19543, i32 0, i32 33
  %19545 = getelementptr inbounds %struct.Reg, %struct.Reg* %19544, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %19545 to i64*
  %19546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19547 = getelementptr inbounds %struct.GPR, %struct.GPR* %19546, i32 0, i32 11
  %19548 = getelementptr inbounds %struct.Reg, %struct.Reg* %19547, i32 0, i32 0
  %DI.i150 = bitcast %union.anon* %19548 to i16*
  %19549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19550 = getelementptr inbounds %struct.GPR, %struct.GPR* %19549, i32 0, i32 7
  %19551 = getelementptr inbounds %struct.Reg, %struct.Reg* %19550, i32 0, i32 0
  %RDX.i151 = bitcast %union.anon* %19551 to i64*
  %19552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19553 = getelementptr inbounds %struct.GPR, %struct.GPR* %19552, i32 0, i32 9
  %19554 = getelementptr inbounds %struct.Reg, %struct.Reg* %19553, i32 0, i32 0
  %RSI.i152 = bitcast %union.anon* %19554 to i64*
  %19555 = load i64, i64* %RDX.i151
  %19556 = load i64, i64* %RSI.i152
  %19557 = mul i64 %19556, 2
  %19558 = add i64 %19557, %19555
  %19559 = load i16, i16* %DI.i150
  %19560 = zext i16 %19559 to i64
  %19561 = load i64, i64* %PC.i149
  %19562 = add i64 %19561, 4
  store i64 %19562, i64* %PC.i149
  %19563 = inttoptr i64 %19558 to i16*
  store i16 %19559, i16* %19563
  store %struct.Memory* %loadMem_43b23a, %struct.Memory** %MEMORY
  br label %block_.L_43b23e

block_.L_43b23e:                                  ; preds = %block_.L_43b21c, %block_43b178
  %loadMem_43b23e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19565 = getelementptr inbounds %struct.GPR, %struct.GPR* %19564, i32 0, i32 33
  %19566 = getelementptr inbounds %struct.Reg, %struct.Reg* %19565, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %19566 to i64*
  %19567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19568 = getelementptr inbounds %struct.GPR, %struct.GPR* %19567, i32 0, i32 15
  %19569 = getelementptr inbounds %struct.Reg, %struct.Reg* %19568, i32 0, i32 0
  %RBP.i148 = bitcast %union.anon* %19569 to i64*
  %19570 = load i64, i64* %RBP.i148
  %19571 = sub i64 %19570, 84
  %19572 = load i64, i64* %PC.i147
  %19573 = add i64 %19572, 4
  store i64 %19573, i64* %PC.i147
  %19574 = inttoptr i64 %19571 to i32*
  %19575 = load i32, i32* %19574
  %19576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19576, align 1
  %19577 = and i32 %19575, 255
  %19578 = call i32 @llvm.ctpop.i32(i32 %19577)
  %19579 = trunc i32 %19578 to i8
  %19580 = and i8 %19579, 1
  %19581 = xor i8 %19580, 1
  %19582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19581, i8* %19582, align 1
  %19583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19583, align 1
  %19584 = icmp eq i32 %19575, 0
  %19585 = zext i1 %19584 to i8
  %19586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19585, i8* %19586, align 1
  %19587 = lshr i32 %19575, 31
  %19588 = trunc i32 %19587 to i8
  %19589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19588, i8* %19589, align 1
  %19590 = lshr i32 %19575, 31
  %19591 = xor i32 %19587, %19590
  %19592 = add i32 %19591, %19590
  %19593 = icmp eq i32 %19592, 2
  %19594 = zext i1 %19593 to i8
  %19595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19594, i8* %19595, align 1
  store %struct.Memory* %loadMem_43b23e, %struct.Memory** %MEMORY
  %loadMem_43b242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19597 = getelementptr inbounds %struct.GPR, %struct.GPR* %19596, i32 0, i32 33
  %19598 = getelementptr inbounds %struct.Reg, %struct.Reg* %19597, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %19598 to i64*
  %19599 = load i64, i64* %PC.i146
  %19600 = add i64 %19599, 208
  %19601 = load i64, i64* %PC.i146
  %19602 = add i64 %19601, 6
  %19603 = load i64, i64* %PC.i146
  %19604 = add i64 %19603, 6
  store i64 %19604, i64* %PC.i146
  %19605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19606 = load i8, i8* %19605, align 1
  store i8 %19606, i8* %BRANCH_TAKEN, align 1
  %19607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19608 = icmp ne i8 %19606, 0
  %19609 = select i1 %19608, i64 %19600, i64 %19602
  store i64 %19609, i64* %19607, align 8
  store %struct.Memory* %loadMem_43b242, %struct.Memory** %MEMORY
  %loadBr_43b242 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b242 = icmp eq i8 %loadBr_43b242, 1
  br i1 %cmpBr_43b242, label %block_.L_43b312, label %block_43b248

block_43b248:                                     ; preds = %block_.L_43b23e
  %loadMem_43b248 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19611 = getelementptr inbounds %struct.GPR, %struct.GPR* %19610, i32 0, i32 33
  %19612 = getelementptr inbounds %struct.Reg, %struct.Reg* %19611, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %19612 to i64*
  %19613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19614 = getelementptr inbounds %struct.GPR, %struct.GPR* %19613, i32 0, i32 1
  %19615 = getelementptr inbounds %struct.Reg, %struct.Reg* %19614, i32 0, i32 0
  %EAX.i144 = bitcast %union.anon* %19615 to i32*
  %19616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19617 = getelementptr inbounds %struct.GPR, %struct.GPR* %19616, i32 0, i32 1
  %19618 = getelementptr inbounds %struct.Reg, %struct.Reg* %19617, i32 0, i32 0
  %RAX.i145 = bitcast %union.anon* %19618 to i64*
  %19619 = load i64, i64* %RAX.i145
  %19620 = load i32, i32* %EAX.i144
  %19621 = zext i32 %19620 to i64
  %19622 = load i64, i64* %PC.i143
  %19623 = add i64 %19622, 2
  store i64 %19623, i64* %PC.i143
  %19624 = xor i64 %19621, %19619
  %19625 = trunc i64 %19624 to i32
  %19626 = and i64 %19624, 4294967295
  store i64 %19626, i64* %RAX.i145, align 8
  %19627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19627, align 1
  %19628 = and i32 %19625, 255
  %19629 = call i32 @llvm.ctpop.i32(i32 %19628)
  %19630 = trunc i32 %19629 to i8
  %19631 = and i8 %19630, 1
  %19632 = xor i8 %19631, 1
  %19633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19632, i8* %19633, align 1
  %19634 = icmp eq i32 %19625, 0
  %19635 = zext i1 %19634 to i8
  %19636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19635, i8* %19636, align 1
  %19637 = lshr i32 %19625, 31
  %19638 = trunc i32 %19637 to i8
  %19639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19638, i8* %19639, align 1
  %19640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19640, align 1
  %19641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19641, align 1
  store %struct.Memory* %loadMem_43b248, %struct.Memory** %MEMORY
  %loadMem_43b24a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19643 = getelementptr inbounds %struct.GPR, %struct.GPR* %19642, i32 0, i32 33
  %19644 = getelementptr inbounds %struct.Reg, %struct.Reg* %19643, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %19644 to i64*
  %19645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19646 = getelementptr inbounds %struct.GPR, %struct.GPR* %19645, i32 0, i32 5
  %19647 = getelementptr inbounds %struct.Reg, %struct.Reg* %19646, i32 0, i32 0
  %RCX.i141 = bitcast %union.anon* %19647 to i64*
  %19648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19649 = getelementptr inbounds %struct.GPR, %struct.GPR* %19648, i32 0, i32 15
  %19650 = getelementptr inbounds %struct.Reg, %struct.Reg* %19649, i32 0, i32 0
  %RBP.i142 = bitcast %union.anon* %19650 to i64*
  %19651 = load i64, i64* %RBP.i142
  %19652 = sub i64 %19651, 140
  %19653 = load i64, i64* %PC.i140
  %19654 = add i64 %19653, 6
  store i64 %19654, i64* %PC.i140
  %19655 = inttoptr i64 %19652 to i32*
  %19656 = load i32, i32* %19655
  %19657 = zext i32 %19656 to i64
  store i64 %19657, i64* %RCX.i141, align 8
  store %struct.Memory* %loadMem_43b24a, %struct.Memory** %MEMORY
  %loadMem_43b250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19659 = getelementptr inbounds %struct.GPR, %struct.GPR* %19658, i32 0, i32 33
  %19660 = getelementptr inbounds %struct.Reg, %struct.Reg* %19659, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %19660 to i64*
  %19661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19662 = getelementptr inbounds %struct.GPR, %struct.GPR* %19661, i32 0, i32 7
  %19663 = getelementptr inbounds %struct.Reg, %struct.Reg* %19662, i32 0, i32 0
  %RDX.i138 = bitcast %union.anon* %19663 to i64*
  %19664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19665 = getelementptr inbounds %struct.GPR, %struct.GPR* %19664, i32 0, i32 15
  %19666 = getelementptr inbounds %struct.Reg, %struct.Reg* %19665, i32 0, i32 0
  %RBP.i139 = bitcast %union.anon* %19666 to i64*
  %19667 = load i64, i64* %RBP.i139
  %19668 = sub i64 %19667, 144
  %19669 = load i64, i64* %PC.i137
  %19670 = add i64 %19669, 6
  store i64 %19670, i64* %PC.i137
  %19671 = inttoptr i64 %19668 to i32*
  %19672 = load i32, i32* %19671
  %19673 = zext i32 %19672 to i64
  store i64 %19673, i64* %RDX.i138, align 8
  store %struct.Memory* %loadMem_43b250, %struct.Memory** %MEMORY
  %loadMem_43b256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19675 = getelementptr inbounds %struct.GPR, %struct.GPR* %19674, i32 0, i32 33
  %19676 = getelementptr inbounds %struct.Reg, %struct.Reg* %19675, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %19676 to i64*
  %19677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19678 = getelementptr inbounds %struct.GPR, %struct.GPR* %19677, i32 0, i32 7
  %19679 = getelementptr inbounds %struct.Reg, %struct.Reg* %19678, i32 0, i32 0
  %RDX.i136 = bitcast %union.anon* %19679 to i64*
  %19680 = load i64, i64* %RDX.i136
  %19681 = load i64, i64* %PC.i135
  %19682 = add i64 %19681, 3
  store i64 %19682, i64* %PC.i135
  %19683 = trunc i64 %19680 to i32
  %19684 = add i32 1, %19683
  %19685 = zext i32 %19684 to i64
  store i64 %19685, i64* %RDX.i136, align 8
  %19686 = icmp ult i32 %19684, %19683
  %19687 = icmp ult i32 %19684, 1
  %19688 = or i1 %19686, %19687
  %19689 = zext i1 %19688 to i8
  %19690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19689, i8* %19690, align 1
  %19691 = and i32 %19684, 255
  %19692 = call i32 @llvm.ctpop.i32(i32 %19691)
  %19693 = trunc i32 %19692 to i8
  %19694 = and i8 %19693, 1
  %19695 = xor i8 %19694, 1
  %19696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19695, i8* %19696, align 1
  %19697 = xor i64 1, %19680
  %19698 = trunc i64 %19697 to i32
  %19699 = xor i32 %19698, %19684
  %19700 = lshr i32 %19699, 4
  %19701 = trunc i32 %19700 to i8
  %19702 = and i8 %19701, 1
  %19703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19702, i8* %19703, align 1
  %19704 = icmp eq i32 %19684, 0
  %19705 = zext i1 %19704 to i8
  %19706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19705, i8* %19706, align 1
  %19707 = lshr i32 %19684, 31
  %19708 = trunc i32 %19707 to i8
  %19709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19708, i8* %19709, align 1
  %19710 = lshr i32 %19683, 31
  %19711 = xor i32 %19707, %19710
  %19712 = add i32 %19711, %19707
  %19713 = icmp eq i32 %19712, 2
  %19714 = zext i1 %19713 to i8
  %19715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19714, i8* %19715, align 1
  store %struct.Memory* %loadMem_43b256, %struct.Memory** %MEMORY
  %loadMem_43b259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19717 = getelementptr inbounds %struct.GPR, %struct.GPR* %19716, i32 0, i32 33
  %19718 = getelementptr inbounds %struct.Reg, %struct.Reg* %19717, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %19718 to i64*
  %19719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19720 = getelementptr inbounds %struct.GPR, %struct.GPR* %19719, i32 0, i32 7
  %19721 = getelementptr inbounds %struct.Reg, %struct.Reg* %19720, i32 0, i32 0
  %RDX.i134 = bitcast %union.anon* %19721 to i64*
  %19722 = load i64, i64* %RDX.i134
  %19723 = load i64, i64* %PC.i133
  %19724 = add i64 %19723, 2
  store i64 %19724, i64* %PC.i133
  %19725 = shl i64 %19722, 32
  %19726 = ashr i64 %19725, 33
  %19727 = trunc i64 %19722 to i8
  %19728 = and i8 %19727, 1
  %19729 = trunc i64 %19726 to i32
  %19730 = and i64 %19726, 4294967295
  store i64 %19730, i64* %RDX.i134, align 8
  %19731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19728, i8* %19731, align 1
  %19732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19733 = and i32 %19729, 255
  %19734 = call i32 @llvm.ctpop.i32(i32 %19733)
  %19735 = trunc i32 %19734 to i8
  %19736 = and i8 %19735, 1
  %19737 = xor i8 %19736, 1
  store i8 %19737, i8* %19732, align 1
  %19738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19738, align 1
  %19739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19740 = icmp eq i32 %19729, 0
  %19741 = zext i1 %19740 to i8
  store i8 %19741, i8* %19739, align 1
  %19742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19743 = lshr i32 %19729, 31
  %19744 = trunc i32 %19743 to i8
  store i8 %19744, i8* %19742, align 1
  %19745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19745, align 1
  store %struct.Memory* %loadMem_43b259, %struct.Memory** %MEMORY
  %loadMem_43b25c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19747 = getelementptr inbounds %struct.GPR, %struct.GPR* %19746, i32 0, i32 33
  %19748 = getelementptr inbounds %struct.Reg, %struct.Reg* %19747, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %19748 to i64*
  %19749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19750 = getelementptr inbounds %struct.GPR, %struct.GPR* %19749, i32 0, i32 7
  %19751 = getelementptr inbounds %struct.Reg, %struct.Reg* %19750, i32 0, i32 0
  %EDX.i131 = bitcast %union.anon* %19751 to i32*
  %19752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19753 = getelementptr inbounds %struct.GPR, %struct.GPR* %19752, i32 0, i32 5
  %19754 = getelementptr inbounds %struct.Reg, %struct.Reg* %19753, i32 0, i32 0
  %RCX.i132 = bitcast %union.anon* %19754 to i64*
  %19755 = load i64, i64* %RCX.i132
  %19756 = load i32, i32* %EDX.i131
  %19757 = zext i32 %19756 to i64
  %19758 = load i64, i64* %PC.i130
  %19759 = add i64 %19758, 2
  store i64 %19759, i64* %PC.i130
  %19760 = trunc i64 %19755 to i32
  %19761 = add i32 %19756, %19760
  %19762 = zext i32 %19761 to i64
  store i64 %19762, i64* %RCX.i132, align 8
  %19763 = icmp ult i32 %19761, %19760
  %19764 = icmp ult i32 %19761, %19756
  %19765 = or i1 %19763, %19764
  %19766 = zext i1 %19765 to i8
  %19767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19766, i8* %19767, align 1
  %19768 = and i32 %19761, 255
  %19769 = call i32 @llvm.ctpop.i32(i32 %19768)
  %19770 = trunc i32 %19769 to i8
  %19771 = and i8 %19770, 1
  %19772 = xor i8 %19771, 1
  %19773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19772, i8* %19773, align 1
  %19774 = xor i64 %19757, %19755
  %19775 = trunc i64 %19774 to i32
  %19776 = xor i32 %19775, %19761
  %19777 = lshr i32 %19776, 4
  %19778 = trunc i32 %19777 to i8
  %19779 = and i8 %19778, 1
  %19780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19779, i8* %19780, align 1
  %19781 = icmp eq i32 %19761, 0
  %19782 = zext i1 %19781 to i8
  %19783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19782, i8* %19783, align 1
  %19784 = lshr i32 %19761, 31
  %19785 = trunc i32 %19784 to i8
  %19786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19785, i8* %19786, align 1
  %19787 = lshr i32 %19760, 31
  %19788 = lshr i32 %19756, 31
  %19789 = xor i32 %19784, %19787
  %19790 = xor i32 %19784, %19788
  %19791 = add i32 %19789, %19790
  %19792 = icmp eq i32 %19791, 2
  %19793 = zext i1 %19792 to i8
  %19794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19793, i8* %19794, align 1
  store %struct.Memory* %loadMem_43b25c, %struct.Memory** %MEMORY
  %loadMem_43b25e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19796 = getelementptr inbounds %struct.GPR, %struct.GPR* %19795, i32 0, i32 33
  %19797 = getelementptr inbounds %struct.Reg, %struct.Reg* %19796, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %19797 to i64*
  %19798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19799 = getelementptr inbounds %struct.GPR, %struct.GPR* %19798, i32 0, i32 7
  %19800 = getelementptr inbounds %struct.Reg, %struct.Reg* %19799, i32 0, i32 0
  %RDX.i128 = bitcast %union.anon* %19800 to i64*
  %19801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19802 = getelementptr inbounds %struct.GPR, %struct.GPR* %19801, i32 0, i32 15
  %19803 = getelementptr inbounds %struct.Reg, %struct.Reg* %19802, i32 0, i32 0
  %RBP.i129 = bitcast %union.anon* %19803 to i64*
  %19804 = load i64, i64* %RBP.i129
  %19805 = sub i64 %19804, 136
  %19806 = load i64, i64* %PC.i127
  %19807 = add i64 %19806, 6
  store i64 %19807, i64* %PC.i127
  %19808 = inttoptr i64 %19805 to i32*
  %19809 = load i32, i32* %19808
  %19810 = zext i32 %19809 to i64
  store i64 %19810, i64* %RDX.i128, align 8
  store %struct.Memory* %loadMem_43b25e, %struct.Memory** %MEMORY
  %loadMem_43b264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19812 = getelementptr inbounds %struct.GPR, %struct.GPR* %19811, i32 0, i32 33
  %19813 = getelementptr inbounds %struct.Reg, %struct.Reg* %19812, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %19813 to i64*
  %19814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19815 = getelementptr inbounds %struct.GPR, %struct.GPR* %19814, i32 0, i32 7
  %19816 = getelementptr inbounds %struct.Reg, %struct.Reg* %19815, i32 0, i32 0
  %RDX.i126 = bitcast %union.anon* %19816 to i64*
  %19817 = load i64, i64* %RDX.i126
  %19818 = load i64, i64* %PC.i125
  %19819 = add i64 %19818, 2
  store i64 %19819, i64* %PC.i125
  %19820 = trunc i64 %19817 to i32
  %19821 = shl i32 %19820, 1
  %19822 = icmp slt i32 %19820, 0
  %19823 = icmp slt i32 %19821, 0
  %19824 = xor i1 %19822, %19823
  %19825 = zext i32 %19821 to i64
  store i64 %19825, i64* %RDX.i126, align 8
  %19826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19827 = zext i1 %19822 to i8
  store i8 %19827, i8* %19826, align 1
  %19828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19829 = and i32 %19821, 254
  %19830 = call i32 @llvm.ctpop.i32(i32 %19829)
  %19831 = trunc i32 %19830 to i8
  %19832 = and i8 %19831, 1
  %19833 = xor i8 %19832, 1
  store i8 %19833, i8* %19828, align 1
  %19834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19834, align 1
  %19835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19836 = icmp eq i32 %19821, 0
  %19837 = zext i1 %19836 to i8
  store i8 %19837, i8* %19835, align 1
  %19838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19839 = lshr i32 %19821, 31
  %19840 = trunc i32 %19839 to i8
  store i8 %19840, i8* %19838, align 1
  %19841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19842 = zext i1 %19824 to i8
  store i8 %19842, i8* %19841, align 1
  store %struct.Memory* %loadMem_43b264, %struct.Memory** %MEMORY
  %loadMem_43b267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19844 = getelementptr inbounds %struct.GPR, %struct.GPR* %19843, i32 0, i32 33
  %19845 = getelementptr inbounds %struct.Reg, %struct.Reg* %19844, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %19845 to i64*
  %19846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19847 = getelementptr inbounds %struct.GPR, %struct.GPR* %19846, i32 0, i32 7
  %19848 = getelementptr inbounds %struct.Reg, %struct.Reg* %19847, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %19848 to i32*
  %19849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19850 = getelementptr inbounds %struct.GPR, %struct.GPR* %19849, i32 0, i32 5
  %19851 = getelementptr inbounds %struct.Reg, %struct.Reg* %19850, i32 0, i32 0
  %RCX.i124 = bitcast %union.anon* %19851 to i64*
  %19852 = load i64, i64* %RCX.i124
  %19853 = load i32, i32* %EDX.i
  %19854 = zext i32 %19853 to i64
  %19855 = load i64, i64* %PC.i123
  %19856 = add i64 %19855, 2
  store i64 %19856, i64* %PC.i123
  %19857 = trunc i64 %19852 to i32
  %19858 = sub i32 %19857, %19853
  %19859 = zext i32 %19858 to i64
  store i64 %19859, i64* %RCX.i124, align 8
  %19860 = icmp ult i32 %19857, %19853
  %19861 = zext i1 %19860 to i8
  %19862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19861, i8* %19862, align 1
  %19863 = and i32 %19858, 255
  %19864 = call i32 @llvm.ctpop.i32(i32 %19863)
  %19865 = trunc i32 %19864 to i8
  %19866 = and i8 %19865, 1
  %19867 = xor i8 %19866, 1
  %19868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19867, i8* %19868, align 1
  %19869 = xor i64 %19854, %19852
  %19870 = trunc i64 %19869 to i32
  %19871 = xor i32 %19870, %19858
  %19872 = lshr i32 %19871, 4
  %19873 = trunc i32 %19872 to i8
  %19874 = and i8 %19873, 1
  %19875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19874, i8* %19875, align 1
  %19876 = icmp eq i32 %19858, 0
  %19877 = zext i1 %19876 to i8
  %19878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19877, i8* %19878, align 1
  %19879 = lshr i32 %19858, 31
  %19880 = trunc i32 %19879 to i8
  %19881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19880, i8* %19881, align 1
  %19882 = lshr i32 %19857, 31
  %19883 = lshr i32 %19853, 31
  %19884 = xor i32 %19883, %19882
  %19885 = xor i32 %19879, %19882
  %19886 = add i32 %19885, %19884
  %19887 = icmp eq i32 %19886, 2
  %19888 = zext i1 %19887 to i8
  %19889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19888, i8* %19889, align 1
  store %struct.Memory* %loadMem_43b267, %struct.Memory** %MEMORY
  %loadMem_43b269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19891 = getelementptr inbounds %struct.GPR, %struct.GPR* %19890, i32 0, i32 33
  %19892 = getelementptr inbounds %struct.Reg, %struct.Reg* %19891, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %19892 to i64*
  %19893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19894 = getelementptr inbounds %struct.GPR, %struct.GPR* %19893, i32 0, i32 5
  %19895 = getelementptr inbounds %struct.Reg, %struct.Reg* %19894, i32 0, i32 0
  %RCX.i122 = bitcast %union.anon* %19895 to i64*
  %19896 = load i64, i64* %RCX.i122
  %19897 = load i64, i64* %PC.i121
  %19898 = add i64 %19897, 2
  store i64 %19898, i64* %PC.i121
  %19899 = shl i64 %19896, 32
  %19900 = ashr i64 %19899, 33
  %19901 = trunc i64 %19896 to i8
  %19902 = and i8 %19901, 1
  %19903 = trunc i64 %19900 to i32
  %19904 = and i64 %19900, 4294967295
  store i64 %19904, i64* %RCX.i122, align 8
  %19905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19902, i8* %19905, align 1
  %19906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19907 = and i32 %19903, 255
  %19908 = call i32 @llvm.ctpop.i32(i32 %19907)
  %19909 = trunc i32 %19908 to i8
  %19910 = and i8 %19909, 1
  %19911 = xor i8 %19910, 1
  store i8 %19911, i8* %19906, align 1
  %19912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19912, align 1
  %19913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19914 = icmp eq i32 %19903, 0
  %19915 = zext i1 %19914 to i8
  store i8 %19915, i8* %19913, align 1
  %19916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19917 = lshr i32 %19903, 31
  %19918 = trunc i32 %19917 to i8
  store i8 %19918, i8* %19916, align 1
  %19919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19919, align 1
  store %struct.Memory* %loadMem_43b269, %struct.Memory** %MEMORY
  %loadMem_43b26c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19921 = getelementptr inbounds %struct.GPR, %struct.GPR* %19920, i32 0, i32 33
  %19922 = getelementptr inbounds %struct.Reg, %struct.Reg* %19921, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %19922 to i64*
  %19923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19924 = getelementptr inbounds %struct.GPR, %struct.GPR* %19923, i32 0, i32 1
  %19925 = getelementptr inbounds %struct.Reg, %struct.Reg* %19924, i32 0, i32 0
  %RAX.i119 = bitcast %union.anon* %19925 to i64*
  %19926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19927 = getelementptr inbounds %struct.GPR, %struct.GPR* %19926, i32 0, i32 15
  %19928 = getelementptr inbounds %struct.Reg, %struct.Reg* %19927, i32 0, i32 0
  %RBP.i120 = bitcast %union.anon* %19928 to i64*
  %19929 = load i64, i64* %RAX.i119
  %19930 = load i64, i64* %RBP.i120
  %19931 = sub i64 %19930, 100
  %19932 = load i64, i64* %PC.i118
  %19933 = add i64 %19932, 3
  store i64 %19933, i64* %PC.i118
  %19934 = trunc i64 %19929 to i32
  %19935 = inttoptr i64 %19931 to i32*
  %19936 = load i32, i32* %19935
  %19937 = sub i32 %19934, %19936
  %19938 = zext i32 %19937 to i64
  store i64 %19938, i64* %RAX.i119, align 8
  %19939 = icmp ult i32 %19934, %19936
  %19940 = zext i1 %19939 to i8
  %19941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19940, i8* %19941, align 1
  %19942 = and i32 %19937, 255
  %19943 = call i32 @llvm.ctpop.i32(i32 %19942)
  %19944 = trunc i32 %19943 to i8
  %19945 = and i8 %19944, 1
  %19946 = xor i8 %19945, 1
  %19947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19946, i8* %19947, align 1
  %19948 = xor i32 %19936, %19934
  %19949 = xor i32 %19948, %19937
  %19950 = lshr i32 %19949, 4
  %19951 = trunc i32 %19950 to i8
  %19952 = and i8 %19951, 1
  %19953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19952, i8* %19953, align 1
  %19954 = icmp eq i32 %19937, 0
  %19955 = zext i1 %19954 to i8
  %19956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19955, i8* %19956, align 1
  %19957 = lshr i32 %19937, 31
  %19958 = trunc i32 %19957 to i8
  %19959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19958, i8* %19959, align 1
  %19960 = lshr i32 %19934, 31
  %19961 = lshr i32 %19936, 31
  %19962 = xor i32 %19961, %19960
  %19963 = xor i32 %19957, %19960
  %19964 = add i32 %19963, %19962
  %19965 = icmp eq i32 %19964, 2
  %19966 = zext i1 %19965 to i8
  %19967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19966, i8* %19967, align 1
  store %struct.Memory* %loadMem_43b26c, %struct.Memory** %MEMORY
  %loadMem_43b26f = load %struct.Memory*, %struct.Memory** %MEMORY
  %19968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19969 = getelementptr inbounds %struct.GPR, %struct.GPR* %19968, i32 0, i32 33
  %19970 = getelementptr inbounds %struct.Reg, %struct.Reg* %19969, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %19970 to i64*
  %19971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19972 = getelementptr inbounds %struct.GPR, %struct.GPR* %19971, i32 0, i32 1
  %19973 = getelementptr inbounds %struct.Reg, %struct.Reg* %19972, i32 0, i32 0
  %EAX.i116 = bitcast %union.anon* %19973 to i32*
  %19974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19975 = getelementptr inbounds %struct.GPR, %struct.GPR* %19974, i32 0, i32 5
  %19976 = getelementptr inbounds %struct.Reg, %struct.Reg* %19975, i32 0, i32 0
  %ECX.i117 = bitcast %union.anon* %19976 to i32*
  %19977 = load i32, i32* %ECX.i117
  %19978 = zext i32 %19977 to i64
  %19979 = load i32, i32* %EAX.i116
  %19980 = zext i32 %19979 to i64
  %19981 = load i64, i64* %PC.i115
  %19982 = add i64 %19981, 2
  store i64 %19982, i64* %PC.i115
  %19983 = sub i32 %19977, %19979
  %19984 = icmp ult i32 %19977, %19979
  %19985 = zext i1 %19984 to i8
  %19986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19985, i8* %19986, align 1
  %19987 = and i32 %19983, 255
  %19988 = call i32 @llvm.ctpop.i32(i32 %19987)
  %19989 = trunc i32 %19988 to i8
  %19990 = and i8 %19989, 1
  %19991 = xor i8 %19990, 1
  %19992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19991, i8* %19992, align 1
  %19993 = xor i64 %19980, %19978
  %19994 = trunc i64 %19993 to i32
  %19995 = xor i32 %19994, %19983
  %19996 = lshr i32 %19995, 4
  %19997 = trunc i32 %19996 to i8
  %19998 = and i8 %19997, 1
  %19999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19998, i8* %19999, align 1
  %20000 = icmp eq i32 %19983, 0
  %20001 = zext i1 %20000 to i8
  %20002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20001, i8* %20002, align 1
  %20003 = lshr i32 %19983, 31
  %20004 = trunc i32 %20003 to i8
  %20005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20004, i8* %20005, align 1
  %20006 = lshr i32 %19977, 31
  %20007 = lshr i32 %19979, 31
  %20008 = xor i32 %20007, %20006
  %20009 = xor i32 %20003, %20006
  %20010 = add i32 %20009, %20008
  %20011 = icmp eq i32 %20010, 2
  %20012 = zext i1 %20011 to i8
  %20013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20012, i8* %20013, align 1
  store %struct.Memory* %loadMem_43b26f, %struct.Memory** %MEMORY
  %loadMem_43b271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20015 = getelementptr inbounds %struct.GPR, %struct.GPR* %20014, i32 0, i32 33
  %20016 = getelementptr inbounds %struct.Reg, %struct.Reg* %20015, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %20016 to i64*
  %20017 = load i64, i64* %PC.i114
  %20018 = add i64 %20017, 22
  %20019 = load i64, i64* %PC.i114
  %20020 = add i64 %20019, 6
  %20021 = load i64, i64* %PC.i114
  %20022 = add i64 %20021, 6
  store i64 %20022, i64* %PC.i114
  %20023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20024 = load i8, i8* %20023, align 1
  %20025 = icmp ne i8 %20024, 0
  %20026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %20027 = load i8, i8* %20026, align 1
  %20028 = icmp ne i8 %20027, 0
  %20029 = xor i1 %20025, %20028
  %20030 = xor i1 %20029, true
  %20031 = zext i1 %20030 to i8
  store i8 %20031, i8* %BRANCH_TAKEN, align 1
  %20032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20033 = select i1 %20029, i64 %20020, i64 %20018
  store i64 %20033, i64* %20032, align 8
  store %struct.Memory* %loadMem_43b271, %struct.Memory** %MEMORY
  %loadBr_43b271 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b271 = icmp eq i8 %loadBr_43b271, 1
  br i1 %cmpBr_43b271, label %block_.L_43b287, label %block_43b277

block_43b277:                                     ; preds = %block_43b248
  %loadMem_43b277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20035 = getelementptr inbounds %struct.GPR, %struct.GPR* %20034, i32 0, i32 33
  %20036 = getelementptr inbounds %struct.Reg, %struct.Reg* %20035, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %20036 to i64*
  %20037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20038 = getelementptr inbounds %struct.GPR, %struct.GPR* %20037, i32 0, i32 1
  %20039 = getelementptr inbounds %struct.Reg, %struct.Reg* %20038, i32 0, i32 0
  %EAX.i112 = bitcast %union.anon* %20039 to i32*
  %20040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20041 = getelementptr inbounds %struct.GPR, %struct.GPR* %20040, i32 0, i32 1
  %20042 = getelementptr inbounds %struct.Reg, %struct.Reg* %20041, i32 0, i32 0
  %RAX.i113 = bitcast %union.anon* %20042 to i64*
  %20043 = load i64, i64* %RAX.i113
  %20044 = load i32, i32* %EAX.i112
  %20045 = zext i32 %20044 to i64
  %20046 = load i64, i64* %PC.i111
  %20047 = add i64 %20046, 2
  store i64 %20047, i64* %PC.i111
  %20048 = xor i64 %20045, %20043
  %20049 = trunc i64 %20048 to i32
  %20050 = and i64 %20048, 4294967295
  store i64 %20050, i64* %RAX.i113, align 8
  %20051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20051, align 1
  %20052 = and i32 %20049, 255
  %20053 = call i32 @llvm.ctpop.i32(i32 %20052)
  %20054 = trunc i32 %20053 to i8
  %20055 = and i8 %20054, 1
  %20056 = xor i8 %20055, 1
  %20057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20056, i8* %20057, align 1
  %20058 = icmp eq i32 %20049, 0
  %20059 = zext i1 %20058 to i8
  %20060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20059, i8* %20060, align 1
  %20061 = lshr i32 %20049, 31
  %20062 = trunc i32 %20061 to i8
  %20063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20062, i8* %20063, align 1
  %20064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20064, align 1
  %20065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20065, align 1
  store %struct.Memory* %loadMem_43b277, %struct.Memory** %MEMORY
  %loadMem_43b279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20067 = getelementptr inbounds %struct.GPR, %struct.GPR* %20066, i32 0, i32 33
  %20068 = getelementptr inbounds %struct.Reg, %struct.Reg* %20067, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %20068 to i64*
  %20069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20070 = getelementptr inbounds %struct.GPR, %struct.GPR* %20069, i32 0, i32 1
  %20071 = getelementptr inbounds %struct.Reg, %struct.Reg* %20070, i32 0, i32 0
  %RAX.i109 = bitcast %union.anon* %20071 to i64*
  %20072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20073 = getelementptr inbounds %struct.GPR, %struct.GPR* %20072, i32 0, i32 15
  %20074 = getelementptr inbounds %struct.Reg, %struct.Reg* %20073, i32 0, i32 0
  %RBP.i110 = bitcast %union.anon* %20074 to i64*
  %20075 = load i64, i64* %RAX.i109
  %20076 = load i64, i64* %RBP.i110
  %20077 = sub i64 %20076, 100
  %20078 = load i64, i64* %PC.i108
  %20079 = add i64 %20078, 3
  store i64 %20079, i64* %PC.i108
  %20080 = trunc i64 %20075 to i32
  %20081 = inttoptr i64 %20077 to i32*
  %20082 = load i32, i32* %20081
  %20083 = sub i32 %20080, %20082
  %20084 = zext i32 %20083 to i64
  store i64 %20084, i64* %RAX.i109, align 8
  %20085 = icmp ult i32 %20080, %20082
  %20086 = zext i1 %20085 to i8
  %20087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20086, i8* %20087, align 1
  %20088 = and i32 %20083, 255
  %20089 = call i32 @llvm.ctpop.i32(i32 %20088)
  %20090 = trunc i32 %20089 to i8
  %20091 = and i8 %20090, 1
  %20092 = xor i8 %20091, 1
  %20093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20092, i8* %20093, align 1
  %20094 = xor i32 %20082, %20080
  %20095 = xor i32 %20094, %20083
  %20096 = lshr i32 %20095, 4
  %20097 = trunc i32 %20096 to i8
  %20098 = and i8 %20097, 1
  %20099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20098, i8* %20099, align 1
  %20100 = icmp eq i32 %20083, 0
  %20101 = zext i1 %20100 to i8
  %20102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20101, i8* %20102, align 1
  %20103 = lshr i32 %20083, 31
  %20104 = trunc i32 %20103 to i8
  %20105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20104, i8* %20105, align 1
  %20106 = lshr i32 %20080, 31
  %20107 = lshr i32 %20082, 31
  %20108 = xor i32 %20107, %20106
  %20109 = xor i32 %20103, %20106
  %20110 = add i32 %20109, %20108
  %20111 = icmp eq i32 %20110, 2
  %20112 = zext i1 %20111 to i8
  %20113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20112, i8* %20113, align 1
  store %struct.Memory* %loadMem_43b279, %struct.Memory** %MEMORY
  %loadMem_43b27c = load %struct.Memory*, %struct.Memory** %MEMORY
  %20114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20115 = getelementptr inbounds %struct.GPR, %struct.GPR* %20114, i32 0, i32 33
  %20116 = getelementptr inbounds %struct.Reg, %struct.Reg* %20115, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %20116 to i64*
  %20117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20118 = getelementptr inbounds %struct.GPR, %struct.GPR* %20117, i32 0, i32 1
  %20119 = getelementptr inbounds %struct.Reg, %struct.Reg* %20118, i32 0, i32 0
  %EAX.i106 = bitcast %union.anon* %20119 to i32*
  %20120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20121 = getelementptr inbounds %struct.GPR, %struct.GPR* %20120, i32 0, i32 15
  %20122 = getelementptr inbounds %struct.Reg, %struct.Reg* %20121, i32 0, i32 0
  %RBP.i107 = bitcast %union.anon* %20122 to i64*
  %20123 = load i64, i64* %RBP.i107
  %20124 = sub i64 %20123, 508
  %20125 = load i32, i32* %EAX.i106
  %20126 = zext i32 %20125 to i64
  %20127 = load i64, i64* %PC.i105
  %20128 = add i64 %20127, 6
  store i64 %20128, i64* %PC.i105
  %20129 = inttoptr i64 %20124 to i32*
  store i32 %20125, i32* %20129
  store %struct.Memory* %loadMem_43b27c, %struct.Memory** %MEMORY
  %loadMem_43b282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20131 = getelementptr inbounds %struct.GPR, %struct.GPR* %20130, i32 0, i32 33
  %20132 = getelementptr inbounds %struct.Reg, %struct.Reg* %20131, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %20132 to i64*
  %20133 = load i64, i64* %PC.i104
  %20134 = add i64 %20133, 114
  %20135 = load i64, i64* %PC.i104
  %20136 = add i64 %20135, 5
  store i64 %20136, i64* %PC.i104
  %20137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20134, i64* %20137, align 8
  store %struct.Memory* %loadMem_43b282, %struct.Memory** %MEMORY
  br label %block_.L_43b2f4

block_.L_43b287:                                  ; preds = %block_43b248
  %loadMem_43b287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20139 = getelementptr inbounds %struct.GPR, %struct.GPR* %20138, i32 0, i32 33
  %20140 = getelementptr inbounds %struct.Reg, %struct.Reg* %20139, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %20140 to i64*
  %20141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20142 = getelementptr inbounds %struct.GPR, %struct.GPR* %20141, i32 0, i32 1
  %20143 = getelementptr inbounds %struct.Reg, %struct.Reg* %20142, i32 0, i32 0
  %RAX.i102 = bitcast %union.anon* %20143 to i64*
  %20144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20145 = getelementptr inbounds %struct.GPR, %struct.GPR* %20144, i32 0, i32 15
  %20146 = getelementptr inbounds %struct.Reg, %struct.Reg* %20145, i32 0, i32 0
  %RBP.i103 = bitcast %union.anon* %20146 to i64*
  %20147 = load i64, i64* %RBP.i103
  %20148 = sub i64 %20147, 140
  %20149 = load i64, i64* %PC.i101
  %20150 = add i64 %20149, 6
  store i64 %20150, i64* %PC.i101
  %20151 = inttoptr i64 %20148 to i32*
  %20152 = load i32, i32* %20151
  %20153 = zext i32 %20152 to i64
  store i64 %20153, i64* %RAX.i102, align 8
  store %struct.Memory* %loadMem_43b287, %struct.Memory** %MEMORY
  %loadMem_43b28d = load %struct.Memory*, %struct.Memory** %MEMORY
  %20154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20155 = getelementptr inbounds %struct.GPR, %struct.GPR* %20154, i32 0, i32 33
  %20156 = getelementptr inbounds %struct.Reg, %struct.Reg* %20155, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %20156 to i64*
  %20157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20158 = getelementptr inbounds %struct.GPR, %struct.GPR* %20157, i32 0, i32 5
  %20159 = getelementptr inbounds %struct.Reg, %struct.Reg* %20158, i32 0, i32 0
  %RCX.i99 = bitcast %union.anon* %20159 to i64*
  %20160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20161 = getelementptr inbounds %struct.GPR, %struct.GPR* %20160, i32 0, i32 15
  %20162 = getelementptr inbounds %struct.Reg, %struct.Reg* %20161, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %20162 to i64*
  %20163 = load i64, i64* %RBP.i100
  %20164 = sub i64 %20163, 144
  %20165 = load i64, i64* %PC.i98
  %20166 = add i64 %20165, 6
  store i64 %20166, i64* %PC.i98
  %20167 = inttoptr i64 %20164 to i32*
  %20168 = load i32, i32* %20167
  %20169 = zext i32 %20168 to i64
  store i64 %20169, i64* %RCX.i99, align 8
  store %struct.Memory* %loadMem_43b28d, %struct.Memory** %MEMORY
  %loadMem_43b293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20171 = getelementptr inbounds %struct.GPR, %struct.GPR* %20170, i32 0, i32 33
  %20172 = getelementptr inbounds %struct.Reg, %struct.Reg* %20171, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %20172 to i64*
  %20173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20174 = getelementptr inbounds %struct.GPR, %struct.GPR* %20173, i32 0, i32 5
  %20175 = getelementptr inbounds %struct.Reg, %struct.Reg* %20174, i32 0, i32 0
  %RCX.i97 = bitcast %union.anon* %20175 to i64*
  %20176 = load i64, i64* %RCX.i97
  %20177 = load i64, i64* %PC.i96
  %20178 = add i64 %20177, 3
  store i64 %20178, i64* %PC.i96
  %20179 = trunc i64 %20176 to i32
  %20180 = add i32 1, %20179
  %20181 = zext i32 %20180 to i64
  store i64 %20181, i64* %RCX.i97, align 8
  %20182 = icmp ult i32 %20180, %20179
  %20183 = icmp ult i32 %20180, 1
  %20184 = or i1 %20182, %20183
  %20185 = zext i1 %20184 to i8
  %20186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20185, i8* %20186, align 1
  %20187 = and i32 %20180, 255
  %20188 = call i32 @llvm.ctpop.i32(i32 %20187)
  %20189 = trunc i32 %20188 to i8
  %20190 = and i8 %20189, 1
  %20191 = xor i8 %20190, 1
  %20192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20191, i8* %20192, align 1
  %20193 = xor i64 1, %20176
  %20194 = trunc i64 %20193 to i32
  %20195 = xor i32 %20194, %20180
  %20196 = lshr i32 %20195, 4
  %20197 = trunc i32 %20196 to i8
  %20198 = and i8 %20197, 1
  %20199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20198, i8* %20199, align 1
  %20200 = icmp eq i32 %20180, 0
  %20201 = zext i1 %20200 to i8
  %20202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20201, i8* %20202, align 1
  %20203 = lshr i32 %20180, 31
  %20204 = trunc i32 %20203 to i8
  %20205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20204, i8* %20205, align 1
  %20206 = lshr i32 %20179, 31
  %20207 = xor i32 %20203, %20206
  %20208 = add i32 %20207, %20203
  %20209 = icmp eq i32 %20208, 2
  %20210 = zext i1 %20209 to i8
  %20211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20210, i8* %20211, align 1
  store %struct.Memory* %loadMem_43b293, %struct.Memory** %MEMORY
  %loadMem_43b296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20213 = getelementptr inbounds %struct.GPR, %struct.GPR* %20212, i32 0, i32 33
  %20214 = getelementptr inbounds %struct.Reg, %struct.Reg* %20213, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %20214 to i64*
  %20215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20216 = getelementptr inbounds %struct.GPR, %struct.GPR* %20215, i32 0, i32 5
  %20217 = getelementptr inbounds %struct.Reg, %struct.Reg* %20216, i32 0, i32 0
  %RCX.i95 = bitcast %union.anon* %20217 to i64*
  %20218 = load i64, i64* %RCX.i95
  %20219 = load i64, i64* %PC.i94
  %20220 = add i64 %20219, 2
  store i64 %20220, i64* %PC.i94
  %20221 = shl i64 %20218, 32
  %20222 = ashr i64 %20221, 33
  %20223 = trunc i64 %20218 to i8
  %20224 = and i8 %20223, 1
  %20225 = trunc i64 %20222 to i32
  %20226 = and i64 %20222, 4294967295
  store i64 %20226, i64* %RCX.i95, align 8
  %20227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20224, i8* %20227, align 1
  %20228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20229 = and i32 %20225, 255
  %20230 = call i32 @llvm.ctpop.i32(i32 %20229)
  %20231 = trunc i32 %20230 to i8
  %20232 = and i8 %20231, 1
  %20233 = xor i8 %20232, 1
  store i8 %20233, i8* %20228, align 1
  %20234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20234, align 1
  %20235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20236 = icmp eq i32 %20225, 0
  %20237 = zext i1 %20236 to i8
  store i8 %20237, i8* %20235, align 1
  %20238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20239 = lshr i32 %20225, 31
  %20240 = trunc i32 %20239 to i8
  store i8 %20240, i8* %20238, align 1
  %20241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20241, align 1
  store %struct.Memory* %loadMem_43b296, %struct.Memory** %MEMORY
  %loadMem_43b299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20243 = getelementptr inbounds %struct.GPR, %struct.GPR* %20242, i32 0, i32 33
  %20244 = getelementptr inbounds %struct.Reg, %struct.Reg* %20243, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %20244 to i64*
  %20245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20246 = getelementptr inbounds %struct.GPR, %struct.GPR* %20245, i32 0, i32 5
  %20247 = getelementptr inbounds %struct.Reg, %struct.Reg* %20246, i32 0, i32 0
  %ECX.i92 = bitcast %union.anon* %20247 to i32*
  %20248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20249 = getelementptr inbounds %struct.GPR, %struct.GPR* %20248, i32 0, i32 1
  %20250 = getelementptr inbounds %struct.Reg, %struct.Reg* %20249, i32 0, i32 0
  %RAX.i93 = bitcast %union.anon* %20250 to i64*
  %20251 = load i64, i64* %RAX.i93
  %20252 = load i32, i32* %ECX.i92
  %20253 = zext i32 %20252 to i64
  %20254 = load i64, i64* %PC.i91
  %20255 = add i64 %20254, 2
  store i64 %20255, i64* %PC.i91
  %20256 = trunc i64 %20251 to i32
  %20257 = add i32 %20252, %20256
  %20258 = zext i32 %20257 to i64
  store i64 %20258, i64* %RAX.i93, align 8
  %20259 = icmp ult i32 %20257, %20256
  %20260 = icmp ult i32 %20257, %20252
  %20261 = or i1 %20259, %20260
  %20262 = zext i1 %20261 to i8
  %20263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20262, i8* %20263, align 1
  %20264 = and i32 %20257, 255
  %20265 = call i32 @llvm.ctpop.i32(i32 %20264)
  %20266 = trunc i32 %20265 to i8
  %20267 = and i8 %20266, 1
  %20268 = xor i8 %20267, 1
  %20269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20268, i8* %20269, align 1
  %20270 = xor i64 %20253, %20251
  %20271 = trunc i64 %20270 to i32
  %20272 = xor i32 %20271, %20257
  %20273 = lshr i32 %20272, 4
  %20274 = trunc i32 %20273 to i8
  %20275 = and i8 %20274, 1
  %20276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20275, i8* %20276, align 1
  %20277 = icmp eq i32 %20257, 0
  %20278 = zext i1 %20277 to i8
  %20279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20278, i8* %20279, align 1
  %20280 = lshr i32 %20257, 31
  %20281 = trunc i32 %20280 to i8
  %20282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20281, i8* %20282, align 1
  %20283 = lshr i32 %20256, 31
  %20284 = lshr i32 %20252, 31
  %20285 = xor i32 %20280, %20283
  %20286 = xor i32 %20280, %20284
  %20287 = add i32 %20285, %20286
  %20288 = icmp eq i32 %20287, 2
  %20289 = zext i1 %20288 to i8
  %20290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20289, i8* %20290, align 1
  store %struct.Memory* %loadMem_43b299, %struct.Memory** %MEMORY
  %loadMem_43b29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20292 = getelementptr inbounds %struct.GPR, %struct.GPR* %20291, i32 0, i32 33
  %20293 = getelementptr inbounds %struct.Reg, %struct.Reg* %20292, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %20293 to i64*
  %20294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20295 = getelementptr inbounds %struct.GPR, %struct.GPR* %20294, i32 0, i32 5
  %20296 = getelementptr inbounds %struct.Reg, %struct.Reg* %20295, i32 0, i32 0
  %RCX.i89 = bitcast %union.anon* %20296 to i64*
  %20297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20298 = getelementptr inbounds %struct.GPR, %struct.GPR* %20297, i32 0, i32 15
  %20299 = getelementptr inbounds %struct.Reg, %struct.Reg* %20298, i32 0, i32 0
  %RBP.i90 = bitcast %union.anon* %20299 to i64*
  %20300 = load i64, i64* %RBP.i90
  %20301 = sub i64 %20300, 136
  %20302 = load i64, i64* %PC.i88
  %20303 = add i64 %20302, 6
  store i64 %20303, i64* %PC.i88
  %20304 = inttoptr i64 %20301 to i32*
  %20305 = load i32, i32* %20304
  %20306 = zext i32 %20305 to i64
  store i64 %20306, i64* %RCX.i89, align 8
  store %struct.Memory* %loadMem_43b29b, %struct.Memory** %MEMORY
  %loadMem_43b2a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20308 = getelementptr inbounds %struct.GPR, %struct.GPR* %20307, i32 0, i32 33
  %20309 = getelementptr inbounds %struct.Reg, %struct.Reg* %20308, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %20309 to i64*
  %20310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20311 = getelementptr inbounds %struct.GPR, %struct.GPR* %20310, i32 0, i32 5
  %20312 = getelementptr inbounds %struct.Reg, %struct.Reg* %20311, i32 0, i32 0
  %RCX.i87 = bitcast %union.anon* %20312 to i64*
  %20313 = load i64, i64* %RCX.i87
  %20314 = load i64, i64* %PC.i86
  %20315 = add i64 %20314, 2
  store i64 %20315, i64* %PC.i86
  %20316 = trunc i64 %20313 to i32
  %20317 = shl i32 %20316, 1
  %20318 = icmp slt i32 %20316, 0
  %20319 = icmp slt i32 %20317, 0
  %20320 = xor i1 %20318, %20319
  %20321 = zext i32 %20317 to i64
  store i64 %20321, i64* %RCX.i87, align 8
  %20322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %20323 = zext i1 %20318 to i8
  store i8 %20323, i8* %20322, align 1
  %20324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20325 = and i32 %20317, 254
  %20326 = call i32 @llvm.ctpop.i32(i32 %20325)
  %20327 = trunc i32 %20326 to i8
  %20328 = and i8 %20327, 1
  %20329 = xor i8 %20328, 1
  store i8 %20329, i8* %20324, align 1
  %20330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20330, align 1
  %20331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20332 = icmp eq i32 %20317, 0
  %20333 = zext i1 %20332 to i8
  store i8 %20333, i8* %20331, align 1
  %20334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20335 = lshr i32 %20317, 31
  %20336 = trunc i32 %20335 to i8
  store i8 %20336, i8* %20334, align 1
  %20337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %20338 = zext i1 %20320 to i8
  store i8 %20338, i8* %20337, align 1
  store %struct.Memory* %loadMem_43b2a1, %struct.Memory** %MEMORY
  %loadMem_43b2a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20340 = getelementptr inbounds %struct.GPR, %struct.GPR* %20339, i32 0, i32 33
  %20341 = getelementptr inbounds %struct.Reg, %struct.Reg* %20340, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %20341 to i64*
  %20342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20343 = getelementptr inbounds %struct.GPR, %struct.GPR* %20342, i32 0, i32 5
  %20344 = getelementptr inbounds %struct.Reg, %struct.Reg* %20343, i32 0, i32 0
  %ECX.i84 = bitcast %union.anon* %20344 to i32*
  %20345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20346 = getelementptr inbounds %struct.GPR, %struct.GPR* %20345, i32 0, i32 1
  %20347 = getelementptr inbounds %struct.Reg, %struct.Reg* %20346, i32 0, i32 0
  %RAX.i85 = bitcast %union.anon* %20347 to i64*
  %20348 = load i64, i64* %RAX.i85
  %20349 = load i32, i32* %ECX.i84
  %20350 = zext i32 %20349 to i64
  %20351 = load i64, i64* %PC.i83
  %20352 = add i64 %20351, 2
  store i64 %20352, i64* %PC.i83
  %20353 = trunc i64 %20348 to i32
  %20354 = sub i32 %20353, %20349
  %20355 = zext i32 %20354 to i64
  store i64 %20355, i64* %RAX.i85, align 8
  %20356 = icmp ult i32 %20353, %20349
  %20357 = zext i1 %20356 to i8
  %20358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20357, i8* %20358, align 1
  %20359 = and i32 %20354, 255
  %20360 = call i32 @llvm.ctpop.i32(i32 %20359)
  %20361 = trunc i32 %20360 to i8
  %20362 = and i8 %20361, 1
  %20363 = xor i8 %20362, 1
  %20364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20363, i8* %20364, align 1
  %20365 = xor i64 %20350, %20348
  %20366 = trunc i64 %20365 to i32
  %20367 = xor i32 %20366, %20354
  %20368 = lshr i32 %20367, 4
  %20369 = trunc i32 %20368 to i8
  %20370 = and i8 %20369, 1
  %20371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20370, i8* %20371, align 1
  %20372 = icmp eq i32 %20354, 0
  %20373 = zext i1 %20372 to i8
  %20374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20373, i8* %20374, align 1
  %20375 = lshr i32 %20354, 31
  %20376 = trunc i32 %20375 to i8
  %20377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20376, i8* %20377, align 1
  %20378 = lshr i32 %20353, 31
  %20379 = lshr i32 %20349, 31
  %20380 = xor i32 %20379, %20378
  %20381 = xor i32 %20375, %20378
  %20382 = add i32 %20381, %20380
  %20383 = icmp eq i32 %20382, 2
  %20384 = zext i1 %20383 to i8
  %20385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20384, i8* %20385, align 1
  store %struct.Memory* %loadMem_43b2a4, %struct.Memory** %MEMORY
  %loadMem_43b2a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20387 = getelementptr inbounds %struct.GPR, %struct.GPR* %20386, i32 0, i32 33
  %20388 = getelementptr inbounds %struct.Reg, %struct.Reg* %20387, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %20388 to i64*
  %20389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20390 = getelementptr inbounds %struct.GPR, %struct.GPR* %20389, i32 0, i32 1
  %20391 = getelementptr inbounds %struct.Reg, %struct.Reg* %20390, i32 0, i32 0
  %RAX.i82 = bitcast %union.anon* %20391 to i64*
  %20392 = load i64, i64* %RAX.i82
  %20393 = load i64, i64* %PC.i81
  %20394 = add i64 %20393, 2
  store i64 %20394, i64* %PC.i81
  %20395 = shl i64 %20392, 32
  %20396 = ashr i64 %20395, 33
  %20397 = trunc i64 %20392 to i8
  %20398 = and i8 %20397, 1
  %20399 = trunc i64 %20396 to i32
  %20400 = and i64 %20396, 4294967295
  store i64 %20400, i64* %RAX.i82, align 8
  %20401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20398, i8* %20401, align 1
  %20402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20403 = and i32 %20399, 255
  %20404 = call i32 @llvm.ctpop.i32(i32 %20403)
  %20405 = trunc i32 %20404 to i8
  %20406 = and i8 %20405, 1
  %20407 = xor i8 %20406, 1
  store i8 %20407, i8* %20402, align 1
  %20408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20408, align 1
  %20409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20410 = icmp eq i32 %20399, 0
  %20411 = zext i1 %20410 to i8
  store i8 %20411, i8* %20409, align 1
  %20412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20413 = lshr i32 %20399, 31
  %20414 = trunc i32 %20413 to i8
  store i8 %20414, i8* %20412, align 1
  %20415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20415, align 1
  store %struct.Memory* %loadMem_43b2a6, %struct.Memory** %MEMORY
  %loadMem_43b2a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20417 = getelementptr inbounds %struct.GPR, %struct.GPR* %20416, i32 0, i32 33
  %20418 = getelementptr inbounds %struct.Reg, %struct.Reg* %20417, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %20418 to i64*
  %20419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20420 = getelementptr inbounds %struct.GPR, %struct.GPR* %20419, i32 0, i32 1
  %20421 = getelementptr inbounds %struct.Reg, %struct.Reg* %20420, i32 0, i32 0
  %EAX.i79 = bitcast %union.anon* %20421 to i32*
  %20422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20423 = getelementptr inbounds %struct.GPR, %struct.GPR* %20422, i32 0, i32 15
  %20424 = getelementptr inbounds %struct.Reg, %struct.Reg* %20423, i32 0, i32 0
  %RBP.i80 = bitcast %union.anon* %20424 to i64*
  %20425 = load i32, i32* %EAX.i79
  %20426 = zext i32 %20425 to i64
  %20427 = load i64, i64* %RBP.i80
  %20428 = sub i64 %20427, 100
  %20429 = load i64, i64* %PC.i78
  %20430 = add i64 %20429, 3
  store i64 %20430, i64* %PC.i78
  %20431 = inttoptr i64 %20428 to i32*
  %20432 = load i32, i32* %20431
  %20433 = sub i32 %20425, %20432
  %20434 = icmp ult i32 %20425, %20432
  %20435 = zext i1 %20434 to i8
  %20436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20435, i8* %20436, align 1
  %20437 = and i32 %20433, 255
  %20438 = call i32 @llvm.ctpop.i32(i32 %20437)
  %20439 = trunc i32 %20438 to i8
  %20440 = and i8 %20439, 1
  %20441 = xor i8 %20440, 1
  %20442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20441, i8* %20442, align 1
  %20443 = xor i32 %20432, %20425
  %20444 = xor i32 %20443, %20433
  %20445 = lshr i32 %20444, 4
  %20446 = trunc i32 %20445 to i8
  %20447 = and i8 %20446, 1
  %20448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20447, i8* %20448, align 1
  %20449 = icmp eq i32 %20433, 0
  %20450 = zext i1 %20449 to i8
  %20451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20450, i8* %20451, align 1
  %20452 = lshr i32 %20433, 31
  %20453 = trunc i32 %20452 to i8
  %20454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20453, i8* %20454, align 1
  %20455 = lshr i32 %20425, 31
  %20456 = lshr i32 %20432, 31
  %20457 = xor i32 %20456, %20455
  %20458 = xor i32 %20452, %20455
  %20459 = add i32 %20458, %20457
  %20460 = icmp eq i32 %20459, 2
  %20461 = zext i1 %20460 to i8
  %20462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20461, i8* %20462, align 1
  store %struct.Memory* %loadMem_43b2a9, %struct.Memory** %MEMORY
  %loadMem_43b2ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %20463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20464 = getelementptr inbounds %struct.GPR, %struct.GPR* %20463, i32 0, i32 33
  %20465 = getelementptr inbounds %struct.Reg, %struct.Reg* %20464, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %20465 to i64*
  %20466 = load i64, i64* %PC.i77
  %20467 = add i64 %20466, 20
  %20468 = load i64, i64* %PC.i77
  %20469 = add i64 %20468, 6
  %20470 = load i64, i64* %PC.i77
  %20471 = add i64 %20470, 6
  store i64 %20471, i64* %PC.i77
  %20472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20473 = load i8, i8* %20472, align 1
  %20474 = icmp ne i8 %20473, 0
  %20475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20476 = load i8, i8* %20475, align 1
  %20477 = icmp ne i8 %20476, 0
  %20478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %20479 = load i8, i8* %20478, align 1
  %20480 = icmp ne i8 %20479, 0
  %20481 = xor i1 %20477, %20480
  %20482 = or i1 %20474, %20481
  %20483 = zext i1 %20482 to i8
  store i8 %20483, i8* %BRANCH_TAKEN, align 1
  %20484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20485 = select i1 %20482, i64 %20467, i64 %20469
  store i64 %20485, i64* %20484, align 8
  store %struct.Memory* %loadMem_43b2ac, %struct.Memory** %MEMORY
  %loadBr_43b2ac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b2ac = icmp eq i8 %loadBr_43b2ac, 1
  br i1 %cmpBr_43b2ac, label %block_.L_43b2c0, label %block_43b2b2

block_43b2b2:                                     ; preds = %block_.L_43b287
  %loadMem_43b2b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20487 = getelementptr inbounds %struct.GPR, %struct.GPR* %20486, i32 0, i32 33
  %20488 = getelementptr inbounds %struct.Reg, %struct.Reg* %20487, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %20488 to i64*
  %20489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20490 = getelementptr inbounds %struct.GPR, %struct.GPR* %20489, i32 0, i32 1
  %20491 = getelementptr inbounds %struct.Reg, %struct.Reg* %20490, i32 0, i32 0
  %RAX.i75 = bitcast %union.anon* %20491 to i64*
  %20492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20493 = getelementptr inbounds %struct.GPR, %struct.GPR* %20492, i32 0, i32 15
  %20494 = getelementptr inbounds %struct.Reg, %struct.Reg* %20493, i32 0, i32 0
  %RBP.i76 = bitcast %union.anon* %20494 to i64*
  %20495 = load i64, i64* %RBP.i76
  %20496 = sub i64 %20495, 100
  %20497 = load i64, i64* %PC.i74
  %20498 = add i64 %20497, 3
  store i64 %20498, i64* %PC.i74
  %20499 = inttoptr i64 %20496 to i32*
  %20500 = load i32, i32* %20499
  %20501 = zext i32 %20500 to i64
  store i64 %20501, i64* %RAX.i75, align 8
  store %struct.Memory* %loadMem_43b2b2, %struct.Memory** %MEMORY
  %loadMem_43b2b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20503 = getelementptr inbounds %struct.GPR, %struct.GPR* %20502, i32 0, i32 33
  %20504 = getelementptr inbounds %struct.Reg, %struct.Reg* %20503, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %20504 to i64*
  %20505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20506 = getelementptr inbounds %struct.GPR, %struct.GPR* %20505, i32 0, i32 1
  %20507 = getelementptr inbounds %struct.Reg, %struct.Reg* %20506, i32 0, i32 0
  %EAX.i72 = bitcast %union.anon* %20507 to i32*
  %20508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20509 = getelementptr inbounds %struct.GPR, %struct.GPR* %20508, i32 0, i32 15
  %20510 = getelementptr inbounds %struct.Reg, %struct.Reg* %20509, i32 0, i32 0
  %RBP.i73 = bitcast %union.anon* %20510 to i64*
  %20511 = load i64, i64* %RBP.i73
  %20512 = sub i64 %20511, 512
  %20513 = load i32, i32* %EAX.i72
  %20514 = zext i32 %20513 to i64
  %20515 = load i64, i64* %PC.i71
  %20516 = add i64 %20515, 6
  store i64 %20516, i64* %PC.i71
  %20517 = inttoptr i64 %20512 to i32*
  store i32 %20513, i32* %20517
  store %struct.Memory* %loadMem_43b2b5, %struct.Memory** %MEMORY
  %loadMem_43b2bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %20518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20519 = getelementptr inbounds %struct.GPR, %struct.GPR* %20518, i32 0, i32 33
  %20520 = getelementptr inbounds %struct.Reg, %struct.Reg* %20519, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %20520 to i64*
  %20521 = load i64, i64* %PC.i70
  %20522 = add i64 %20521, 45
  %20523 = load i64, i64* %PC.i70
  %20524 = add i64 %20523, 5
  store i64 %20524, i64* %PC.i70
  %20525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20522, i64* %20525, align 8
  store %struct.Memory* %loadMem_43b2bb, %struct.Memory** %MEMORY
  br label %block_.L_43b2e8

block_.L_43b2c0:                                  ; preds = %block_.L_43b287
  %loadMem_43b2c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20527 = getelementptr inbounds %struct.GPR, %struct.GPR* %20526, i32 0, i32 33
  %20528 = getelementptr inbounds %struct.Reg, %struct.Reg* %20527, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %20528 to i64*
  %20529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20530 = getelementptr inbounds %struct.GPR, %struct.GPR* %20529, i32 0, i32 1
  %20531 = getelementptr inbounds %struct.Reg, %struct.Reg* %20530, i32 0, i32 0
  %RAX.i68 = bitcast %union.anon* %20531 to i64*
  %20532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20533 = getelementptr inbounds %struct.GPR, %struct.GPR* %20532, i32 0, i32 15
  %20534 = getelementptr inbounds %struct.Reg, %struct.Reg* %20533, i32 0, i32 0
  %RBP.i69 = bitcast %union.anon* %20534 to i64*
  %20535 = load i64, i64* %RBP.i69
  %20536 = sub i64 %20535, 140
  %20537 = load i64, i64* %PC.i67
  %20538 = add i64 %20537, 6
  store i64 %20538, i64* %PC.i67
  %20539 = inttoptr i64 %20536 to i32*
  %20540 = load i32, i32* %20539
  %20541 = zext i32 %20540 to i64
  store i64 %20541, i64* %RAX.i68, align 8
  store %struct.Memory* %loadMem_43b2c0, %struct.Memory** %MEMORY
  %loadMem_43b2c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20543 = getelementptr inbounds %struct.GPR, %struct.GPR* %20542, i32 0, i32 33
  %20544 = getelementptr inbounds %struct.Reg, %struct.Reg* %20543, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %20544 to i64*
  %20545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20546 = getelementptr inbounds %struct.GPR, %struct.GPR* %20545, i32 0, i32 5
  %20547 = getelementptr inbounds %struct.Reg, %struct.Reg* %20546, i32 0, i32 0
  %RCX.i65 = bitcast %union.anon* %20547 to i64*
  %20548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20549 = getelementptr inbounds %struct.GPR, %struct.GPR* %20548, i32 0, i32 15
  %20550 = getelementptr inbounds %struct.Reg, %struct.Reg* %20549, i32 0, i32 0
  %RBP.i66 = bitcast %union.anon* %20550 to i64*
  %20551 = load i64, i64* %RBP.i66
  %20552 = sub i64 %20551, 144
  %20553 = load i64, i64* %PC.i64
  %20554 = add i64 %20553, 6
  store i64 %20554, i64* %PC.i64
  %20555 = inttoptr i64 %20552 to i32*
  %20556 = load i32, i32* %20555
  %20557 = zext i32 %20556 to i64
  store i64 %20557, i64* %RCX.i65, align 8
  store %struct.Memory* %loadMem_43b2c6, %struct.Memory** %MEMORY
  %loadMem_43b2cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %20558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20559 = getelementptr inbounds %struct.GPR, %struct.GPR* %20558, i32 0, i32 33
  %20560 = getelementptr inbounds %struct.Reg, %struct.Reg* %20559, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %20560 to i64*
  %20561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20562 = getelementptr inbounds %struct.GPR, %struct.GPR* %20561, i32 0, i32 5
  %20563 = getelementptr inbounds %struct.Reg, %struct.Reg* %20562, i32 0, i32 0
  %RCX.i63 = bitcast %union.anon* %20563 to i64*
  %20564 = load i64, i64* %RCX.i63
  %20565 = load i64, i64* %PC.i62
  %20566 = add i64 %20565, 3
  store i64 %20566, i64* %PC.i62
  %20567 = trunc i64 %20564 to i32
  %20568 = add i32 1, %20567
  %20569 = zext i32 %20568 to i64
  store i64 %20569, i64* %RCX.i63, align 8
  %20570 = icmp ult i32 %20568, %20567
  %20571 = icmp ult i32 %20568, 1
  %20572 = or i1 %20570, %20571
  %20573 = zext i1 %20572 to i8
  %20574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20573, i8* %20574, align 1
  %20575 = and i32 %20568, 255
  %20576 = call i32 @llvm.ctpop.i32(i32 %20575)
  %20577 = trunc i32 %20576 to i8
  %20578 = and i8 %20577, 1
  %20579 = xor i8 %20578, 1
  %20580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20579, i8* %20580, align 1
  %20581 = xor i64 1, %20564
  %20582 = trunc i64 %20581 to i32
  %20583 = xor i32 %20582, %20568
  %20584 = lshr i32 %20583, 4
  %20585 = trunc i32 %20584 to i8
  %20586 = and i8 %20585, 1
  %20587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20586, i8* %20587, align 1
  %20588 = icmp eq i32 %20568, 0
  %20589 = zext i1 %20588 to i8
  %20590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20589, i8* %20590, align 1
  %20591 = lshr i32 %20568, 31
  %20592 = trunc i32 %20591 to i8
  %20593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20592, i8* %20593, align 1
  %20594 = lshr i32 %20567, 31
  %20595 = xor i32 %20591, %20594
  %20596 = add i32 %20595, %20591
  %20597 = icmp eq i32 %20596, 2
  %20598 = zext i1 %20597 to i8
  %20599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20598, i8* %20599, align 1
  store %struct.Memory* %loadMem_43b2cc, %struct.Memory** %MEMORY
  %loadMem_43b2cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %20600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20601 = getelementptr inbounds %struct.GPR, %struct.GPR* %20600, i32 0, i32 33
  %20602 = getelementptr inbounds %struct.Reg, %struct.Reg* %20601, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %20602 to i64*
  %20603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20604 = getelementptr inbounds %struct.GPR, %struct.GPR* %20603, i32 0, i32 5
  %20605 = getelementptr inbounds %struct.Reg, %struct.Reg* %20604, i32 0, i32 0
  %RCX.i61 = bitcast %union.anon* %20605 to i64*
  %20606 = load i64, i64* %RCX.i61
  %20607 = load i64, i64* %PC.i60
  %20608 = add i64 %20607, 2
  store i64 %20608, i64* %PC.i60
  %20609 = shl i64 %20606, 32
  %20610 = ashr i64 %20609, 33
  %20611 = trunc i64 %20606 to i8
  %20612 = and i8 %20611, 1
  %20613 = trunc i64 %20610 to i32
  %20614 = and i64 %20610, 4294967295
  store i64 %20614, i64* %RCX.i61, align 8
  %20615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20612, i8* %20615, align 1
  %20616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20617 = and i32 %20613, 255
  %20618 = call i32 @llvm.ctpop.i32(i32 %20617)
  %20619 = trunc i32 %20618 to i8
  %20620 = and i8 %20619, 1
  %20621 = xor i8 %20620, 1
  store i8 %20621, i8* %20616, align 1
  %20622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20622, align 1
  %20623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20624 = icmp eq i32 %20613, 0
  %20625 = zext i1 %20624 to i8
  store i8 %20625, i8* %20623, align 1
  %20626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20627 = lshr i32 %20613, 31
  %20628 = trunc i32 %20627 to i8
  store i8 %20628, i8* %20626, align 1
  %20629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20629, align 1
  store %struct.Memory* %loadMem_43b2cf, %struct.Memory** %MEMORY
  %loadMem_43b2d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20631 = getelementptr inbounds %struct.GPR, %struct.GPR* %20630, i32 0, i32 33
  %20632 = getelementptr inbounds %struct.Reg, %struct.Reg* %20631, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %20632 to i64*
  %20633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20634 = getelementptr inbounds %struct.GPR, %struct.GPR* %20633, i32 0, i32 5
  %20635 = getelementptr inbounds %struct.Reg, %struct.Reg* %20634, i32 0, i32 0
  %ECX.i58 = bitcast %union.anon* %20635 to i32*
  %20636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20637 = getelementptr inbounds %struct.GPR, %struct.GPR* %20636, i32 0, i32 1
  %20638 = getelementptr inbounds %struct.Reg, %struct.Reg* %20637, i32 0, i32 0
  %RAX.i59 = bitcast %union.anon* %20638 to i64*
  %20639 = load i64, i64* %RAX.i59
  %20640 = load i32, i32* %ECX.i58
  %20641 = zext i32 %20640 to i64
  %20642 = load i64, i64* %PC.i57
  %20643 = add i64 %20642, 2
  store i64 %20643, i64* %PC.i57
  %20644 = trunc i64 %20639 to i32
  %20645 = add i32 %20640, %20644
  %20646 = zext i32 %20645 to i64
  store i64 %20646, i64* %RAX.i59, align 8
  %20647 = icmp ult i32 %20645, %20644
  %20648 = icmp ult i32 %20645, %20640
  %20649 = or i1 %20647, %20648
  %20650 = zext i1 %20649 to i8
  %20651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20650, i8* %20651, align 1
  %20652 = and i32 %20645, 255
  %20653 = call i32 @llvm.ctpop.i32(i32 %20652)
  %20654 = trunc i32 %20653 to i8
  %20655 = and i8 %20654, 1
  %20656 = xor i8 %20655, 1
  %20657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20656, i8* %20657, align 1
  %20658 = xor i64 %20641, %20639
  %20659 = trunc i64 %20658 to i32
  %20660 = xor i32 %20659, %20645
  %20661 = lshr i32 %20660, 4
  %20662 = trunc i32 %20661 to i8
  %20663 = and i8 %20662, 1
  %20664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20663, i8* %20664, align 1
  %20665 = icmp eq i32 %20645, 0
  %20666 = zext i1 %20665 to i8
  %20667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20666, i8* %20667, align 1
  %20668 = lshr i32 %20645, 31
  %20669 = trunc i32 %20668 to i8
  %20670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20669, i8* %20670, align 1
  %20671 = lshr i32 %20644, 31
  %20672 = lshr i32 %20640, 31
  %20673 = xor i32 %20668, %20671
  %20674 = xor i32 %20668, %20672
  %20675 = add i32 %20673, %20674
  %20676 = icmp eq i32 %20675, 2
  %20677 = zext i1 %20676 to i8
  %20678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20677, i8* %20678, align 1
  store %struct.Memory* %loadMem_43b2d2, %struct.Memory** %MEMORY
  %loadMem_43b2d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20680 = getelementptr inbounds %struct.GPR, %struct.GPR* %20679, i32 0, i32 33
  %20681 = getelementptr inbounds %struct.Reg, %struct.Reg* %20680, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %20681 to i64*
  %20682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20683 = getelementptr inbounds %struct.GPR, %struct.GPR* %20682, i32 0, i32 5
  %20684 = getelementptr inbounds %struct.Reg, %struct.Reg* %20683, i32 0, i32 0
  %RCX.i55 = bitcast %union.anon* %20684 to i64*
  %20685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20686 = getelementptr inbounds %struct.GPR, %struct.GPR* %20685, i32 0, i32 15
  %20687 = getelementptr inbounds %struct.Reg, %struct.Reg* %20686, i32 0, i32 0
  %RBP.i56 = bitcast %union.anon* %20687 to i64*
  %20688 = load i64, i64* %RBP.i56
  %20689 = sub i64 %20688, 136
  %20690 = load i64, i64* %PC.i54
  %20691 = add i64 %20690, 6
  store i64 %20691, i64* %PC.i54
  %20692 = inttoptr i64 %20689 to i32*
  %20693 = load i32, i32* %20692
  %20694 = zext i32 %20693 to i64
  store i64 %20694, i64* %RCX.i55, align 8
  store %struct.Memory* %loadMem_43b2d4, %struct.Memory** %MEMORY
  %loadMem_43b2da = load %struct.Memory*, %struct.Memory** %MEMORY
  %20695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20696 = getelementptr inbounds %struct.GPR, %struct.GPR* %20695, i32 0, i32 33
  %20697 = getelementptr inbounds %struct.Reg, %struct.Reg* %20696, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %20697 to i64*
  %20698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20699 = getelementptr inbounds %struct.GPR, %struct.GPR* %20698, i32 0, i32 5
  %20700 = getelementptr inbounds %struct.Reg, %struct.Reg* %20699, i32 0, i32 0
  %RCX.i53 = bitcast %union.anon* %20700 to i64*
  %20701 = load i64, i64* %RCX.i53
  %20702 = load i64, i64* %PC.i52
  %20703 = add i64 %20702, 2
  store i64 %20703, i64* %PC.i52
  %20704 = trunc i64 %20701 to i32
  %20705 = shl i32 %20704, 1
  %20706 = icmp slt i32 %20704, 0
  %20707 = icmp slt i32 %20705, 0
  %20708 = xor i1 %20706, %20707
  %20709 = zext i32 %20705 to i64
  store i64 %20709, i64* %RCX.i53, align 8
  %20710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %20711 = zext i1 %20706 to i8
  store i8 %20711, i8* %20710, align 1
  %20712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20713 = and i32 %20705, 254
  %20714 = call i32 @llvm.ctpop.i32(i32 %20713)
  %20715 = trunc i32 %20714 to i8
  %20716 = and i8 %20715, 1
  %20717 = xor i8 %20716, 1
  store i8 %20717, i8* %20712, align 1
  %20718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20718, align 1
  %20719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20720 = icmp eq i32 %20705, 0
  %20721 = zext i1 %20720 to i8
  store i8 %20721, i8* %20719, align 1
  %20722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20723 = lshr i32 %20705, 31
  %20724 = trunc i32 %20723 to i8
  store i8 %20724, i8* %20722, align 1
  %20725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %20726 = zext i1 %20708 to i8
  store i8 %20726, i8* %20725, align 1
  store %struct.Memory* %loadMem_43b2da, %struct.Memory** %MEMORY
  %loadMem_43b2dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %20727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20728 = getelementptr inbounds %struct.GPR, %struct.GPR* %20727, i32 0, i32 33
  %20729 = getelementptr inbounds %struct.Reg, %struct.Reg* %20728, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %20729 to i64*
  %20730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20731 = getelementptr inbounds %struct.GPR, %struct.GPR* %20730, i32 0, i32 5
  %20732 = getelementptr inbounds %struct.Reg, %struct.Reg* %20731, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %20732 to i32*
  %20733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20734 = getelementptr inbounds %struct.GPR, %struct.GPR* %20733, i32 0, i32 1
  %20735 = getelementptr inbounds %struct.Reg, %struct.Reg* %20734, i32 0, i32 0
  %RAX.i51 = bitcast %union.anon* %20735 to i64*
  %20736 = load i64, i64* %RAX.i51
  %20737 = load i32, i32* %ECX.i
  %20738 = zext i32 %20737 to i64
  %20739 = load i64, i64* %PC.i50
  %20740 = add i64 %20739, 2
  store i64 %20740, i64* %PC.i50
  %20741 = trunc i64 %20736 to i32
  %20742 = sub i32 %20741, %20737
  %20743 = zext i32 %20742 to i64
  store i64 %20743, i64* %RAX.i51, align 8
  %20744 = icmp ult i32 %20741, %20737
  %20745 = zext i1 %20744 to i8
  %20746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20745, i8* %20746, align 1
  %20747 = and i32 %20742, 255
  %20748 = call i32 @llvm.ctpop.i32(i32 %20747)
  %20749 = trunc i32 %20748 to i8
  %20750 = and i8 %20749, 1
  %20751 = xor i8 %20750, 1
  %20752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20751, i8* %20752, align 1
  %20753 = xor i64 %20738, %20736
  %20754 = trunc i64 %20753 to i32
  %20755 = xor i32 %20754, %20742
  %20756 = lshr i32 %20755, 4
  %20757 = trunc i32 %20756 to i8
  %20758 = and i8 %20757, 1
  %20759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20758, i8* %20759, align 1
  %20760 = icmp eq i32 %20742, 0
  %20761 = zext i1 %20760 to i8
  %20762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20761, i8* %20762, align 1
  %20763 = lshr i32 %20742, 31
  %20764 = trunc i32 %20763 to i8
  %20765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20764, i8* %20765, align 1
  %20766 = lshr i32 %20741, 31
  %20767 = lshr i32 %20737, 31
  %20768 = xor i32 %20767, %20766
  %20769 = xor i32 %20763, %20766
  %20770 = add i32 %20769, %20768
  %20771 = icmp eq i32 %20770, 2
  %20772 = zext i1 %20771 to i8
  %20773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20772, i8* %20773, align 1
  store %struct.Memory* %loadMem_43b2dd, %struct.Memory** %MEMORY
  %loadMem_43b2df = load %struct.Memory*, %struct.Memory** %MEMORY
  %20774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20775 = getelementptr inbounds %struct.GPR, %struct.GPR* %20774, i32 0, i32 33
  %20776 = getelementptr inbounds %struct.Reg, %struct.Reg* %20775, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %20776 to i64*
  %20777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20778 = getelementptr inbounds %struct.GPR, %struct.GPR* %20777, i32 0, i32 1
  %20779 = getelementptr inbounds %struct.Reg, %struct.Reg* %20778, i32 0, i32 0
  %RAX.i49 = bitcast %union.anon* %20779 to i64*
  %20780 = load i64, i64* %RAX.i49
  %20781 = load i64, i64* %PC.i48
  %20782 = add i64 %20781, 2
  store i64 %20782, i64* %PC.i48
  %20783 = shl i64 %20780, 32
  %20784 = ashr i64 %20783, 33
  %20785 = trunc i64 %20780 to i8
  %20786 = and i8 %20785, 1
  %20787 = trunc i64 %20784 to i32
  %20788 = and i64 %20784, 4294967295
  store i64 %20788, i64* %RAX.i49, align 8
  %20789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20786, i8* %20789, align 1
  %20790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20791 = and i32 %20787, 255
  %20792 = call i32 @llvm.ctpop.i32(i32 %20791)
  %20793 = trunc i32 %20792 to i8
  %20794 = and i8 %20793, 1
  %20795 = xor i8 %20794, 1
  store i8 %20795, i8* %20790, align 1
  %20796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20796, align 1
  %20797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20798 = icmp eq i32 %20787, 0
  %20799 = zext i1 %20798 to i8
  store i8 %20799, i8* %20797, align 1
  %20800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20801 = lshr i32 %20787, 31
  %20802 = trunc i32 %20801 to i8
  store i8 %20802, i8* %20800, align 1
  %20803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20803, align 1
  store %struct.Memory* %loadMem_43b2df, %struct.Memory** %MEMORY
  %loadMem_43b2e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20805 = getelementptr inbounds %struct.GPR, %struct.GPR* %20804, i32 0, i32 33
  %20806 = getelementptr inbounds %struct.Reg, %struct.Reg* %20805, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %20806 to i64*
  %20807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20808 = getelementptr inbounds %struct.GPR, %struct.GPR* %20807, i32 0, i32 1
  %20809 = getelementptr inbounds %struct.Reg, %struct.Reg* %20808, i32 0, i32 0
  %EAX.i46 = bitcast %union.anon* %20809 to i32*
  %20810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20811 = getelementptr inbounds %struct.GPR, %struct.GPR* %20810, i32 0, i32 15
  %20812 = getelementptr inbounds %struct.Reg, %struct.Reg* %20811, i32 0, i32 0
  %RBP.i47 = bitcast %union.anon* %20812 to i64*
  %20813 = load i64, i64* %RBP.i47
  %20814 = sub i64 %20813, 512
  %20815 = load i32, i32* %EAX.i46
  %20816 = zext i32 %20815 to i64
  %20817 = load i64, i64* %PC.i45
  %20818 = add i64 %20817, 6
  store i64 %20818, i64* %PC.i45
  %20819 = inttoptr i64 %20814 to i32*
  store i32 %20815, i32* %20819
  store %struct.Memory* %loadMem_43b2e2, %struct.Memory** %MEMORY
  br label %block_.L_43b2e8

block_.L_43b2e8:                                  ; preds = %block_.L_43b2c0, %block_43b2b2
  %loadMem_43b2e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20821 = getelementptr inbounds %struct.GPR, %struct.GPR* %20820, i32 0, i32 33
  %20822 = getelementptr inbounds %struct.Reg, %struct.Reg* %20821, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %20822 to i64*
  %20823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20824 = getelementptr inbounds %struct.GPR, %struct.GPR* %20823, i32 0, i32 1
  %20825 = getelementptr inbounds %struct.Reg, %struct.Reg* %20824, i32 0, i32 0
  %RAX.i43 = bitcast %union.anon* %20825 to i64*
  %20826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20827 = getelementptr inbounds %struct.GPR, %struct.GPR* %20826, i32 0, i32 15
  %20828 = getelementptr inbounds %struct.Reg, %struct.Reg* %20827, i32 0, i32 0
  %RBP.i44 = bitcast %union.anon* %20828 to i64*
  %20829 = load i64, i64* %RBP.i44
  %20830 = sub i64 %20829, 512
  %20831 = load i64, i64* %PC.i42
  %20832 = add i64 %20831, 6
  store i64 %20832, i64* %PC.i42
  %20833 = inttoptr i64 %20830 to i32*
  %20834 = load i32, i32* %20833
  %20835 = zext i32 %20834 to i64
  store i64 %20835, i64* %RAX.i43, align 8
  store %struct.Memory* %loadMem_43b2e8, %struct.Memory** %MEMORY
  %loadMem_43b2ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %20836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20837 = getelementptr inbounds %struct.GPR, %struct.GPR* %20836, i32 0, i32 33
  %20838 = getelementptr inbounds %struct.Reg, %struct.Reg* %20837, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %20838 to i64*
  %20839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20840 = getelementptr inbounds %struct.GPR, %struct.GPR* %20839, i32 0, i32 1
  %20841 = getelementptr inbounds %struct.Reg, %struct.Reg* %20840, i32 0, i32 0
  %EAX.i40 = bitcast %union.anon* %20841 to i32*
  %20842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20843 = getelementptr inbounds %struct.GPR, %struct.GPR* %20842, i32 0, i32 15
  %20844 = getelementptr inbounds %struct.Reg, %struct.Reg* %20843, i32 0, i32 0
  %RBP.i41 = bitcast %union.anon* %20844 to i64*
  %20845 = load i64, i64* %RBP.i41
  %20846 = sub i64 %20845, 508
  %20847 = load i32, i32* %EAX.i40
  %20848 = zext i32 %20847 to i64
  %20849 = load i64, i64* %PC.i39
  %20850 = add i64 %20849, 6
  store i64 %20850, i64* %PC.i39
  %20851 = inttoptr i64 %20846 to i32*
  store i32 %20847, i32* %20851
  store %struct.Memory* %loadMem_43b2ee, %struct.Memory** %MEMORY
  br label %block_.L_43b2f4

block_.L_43b2f4:                                  ; preds = %block_.L_43b2e8, %block_43b277
  %loadMem_43b2f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20853 = getelementptr inbounds %struct.GPR, %struct.GPR* %20852, i32 0, i32 33
  %20854 = getelementptr inbounds %struct.Reg, %struct.Reg* %20853, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %20854 to i64*
  %20855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20856 = getelementptr inbounds %struct.GPR, %struct.GPR* %20855, i32 0, i32 1
  %20857 = getelementptr inbounds %struct.Reg, %struct.Reg* %20856, i32 0, i32 0
  %RAX.i37 = bitcast %union.anon* %20857 to i64*
  %20858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20859 = getelementptr inbounds %struct.GPR, %struct.GPR* %20858, i32 0, i32 15
  %20860 = getelementptr inbounds %struct.Reg, %struct.Reg* %20859, i32 0, i32 0
  %RBP.i38 = bitcast %union.anon* %20860 to i64*
  %20861 = load i64, i64* %RBP.i38
  %20862 = sub i64 %20861, 508
  %20863 = load i64, i64* %PC.i36
  %20864 = add i64 %20863, 6
  store i64 %20864, i64* %PC.i36
  %20865 = inttoptr i64 %20862 to i32*
  %20866 = load i32, i32* %20865
  %20867 = zext i32 %20866 to i64
  store i64 %20867, i64* %RAX.i37, align 8
  store %struct.Memory* %loadMem_43b2f4, %struct.Memory** %MEMORY
  %loadMem_43b2fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %20868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20869 = getelementptr inbounds %struct.GPR, %struct.GPR* %20868, i32 0, i32 33
  %20870 = getelementptr inbounds %struct.Reg, %struct.Reg* %20869, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %20870 to i64*
  %20871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20872 = getelementptr inbounds %struct.GPR, %struct.GPR* %20871, i32 0, i32 5
  %20873 = getelementptr inbounds %struct.Reg, %struct.Reg* %20872, i32 0, i32 0
  %RCX.i34 = bitcast %union.anon* %20873 to i64*
  %20874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20875 = getelementptr inbounds %struct.GPR, %struct.GPR* %20874, i32 0, i32 15
  %20876 = getelementptr inbounds %struct.Reg, %struct.Reg* %20875, i32 0, i32 0
  %RBP.i35 = bitcast %union.anon* %20876 to i64*
  %20877 = load i64, i64* %RBP.i35
  %20878 = sub i64 %20877, 208
  %20879 = load i64, i64* %PC.i33
  %20880 = add i64 %20879, 7
  store i64 %20880, i64* %PC.i33
  %20881 = inttoptr i64 %20878 to i64*
  %20882 = load i64, i64* %20881
  store i64 %20882, i64* %RCX.i34, align 8
  store %struct.Memory* %loadMem_43b2fa, %struct.Memory** %MEMORY
  %loadMem_43b301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20884 = getelementptr inbounds %struct.GPR, %struct.GPR* %20883, i32 0, i32 33
  %20885 = getelementptr inbounds %struct.Reg, %struct.Reg* %20884, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %20885 to i64*
  %20886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20887 = getelementptr inbounds %struct.GPR, %struct.GPR* %20886, i32 0, i32 7
  %20888 = getelementptr inbounds %struct.Reg, %struct.Reg* %20887, i32 0, i32 0
  %RDX.i31 = bitcast %union.anon* %20888 to i64*
  %20889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20890 = getelementptr inbounds %struct.GPR, %struct.GPR* %20889, i32 0, i32 15
  %20891 = getelementptr inbounds %struct.Reg, %struct.Reg* %20890, i32 0, i32 0
  %RBP.i32 = bitcast %union.anon* %20891 to i64*
  %20892 = load i64, i64* %RBP.i32
  %20893 = sub i64 %20892, 96
  %20894 = load i64, i64* %PC.i30
  %20895 = add i64 %20894, 4
  store i64 %20895, i64* %PC.i30
  %20896 = inttoptr i64 %20893 to i32*
  %20897 = load i32, i32* %20896
  %20898 = sext i32 %20897 to i64
  store i64 %20898, i64* %RDX.i31, align 8
  store %struct.Memory* %loadMem_43b301, %struct.Memory** %MEMORY
  %loadMem_43b305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20900 = getelementptr inbounds %struct.GPR, %struct.GPR* %20899, i32 0, i32 33
  %20901 = getelementptr inbounds %struct.Reg, %struct.Reg* %20900, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %20901 to i64*
  %20902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20903 = getelementptr inbounds %struct.GPR, %struct.GPR* %20902, i32 0, i32 5
  %20904 = getelementptr inbounds %struct.Reg, %struct.Reg* %20903, i32 0, i32 0
  %RCX.i27 = bitcast %union.anon* %20904 to i64*
  %20905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20906 = getelementptr inbounds %struct.GPR, %struct.GPR* %20905, i32 0, i32 7
  %20907 = getelementptr inbounds %struct.Reg, %struct.Reg* %20906, i32 0, i32 0
  %RDX.i28 = bitcast %union.anon* %20907 to i64*
  %20908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20909 = getelementptr inbounds %struct.GPR, %struct.GPR* %20908, i32 0, i32 9
  %20910 = getelementptr inbounds %struct.Reg, %struct.Reg* %20909, i32 0, i32 0
  %RSI.i29 = bitcast %union.anon* %20910 to i64*
  %20911 = load i64, i64* %RCX.i27
  %20912 = load i64, i64* %RDX.i28
  %20913 = mul i64 %20912, 2
  %20914 = add i64 %20913, %20911
  %20915 = load i64, i64* %PC.i26
  %20916 = add i64 %20915, 4
  store i64 %20916, i64* %PC.i26
  %20917 = inttoptr i64 %20914 to i16*
  %20918 = load i16, i16* %20917
  %20919 = zext i16 %20918 to i64
  store i64 %20919, i64* %RSI.i29, align 8
  store %struct.Memory* %loadMem_43b305, %struct.Memory** %MEMORY
  %loadMem_43b309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20921 = getelementptr inbounds %struct.GPR, %struct.GPR* %20920, i32 0, i32 33
  %20922 = getelementptr inbounds %struct.Reg, %struct.Reg* %20921, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %20922 to i64*
  %20923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20924 = getelementptr inbounds %struct.GPR, %struct.GPR* %20923, i32 0, i32 1
  %20925 = getelementptr inbounds %struct.Reg, %struct.Reg* %20924, i32 0, i32 0
  %EAX.i25 = bitcast %union.anon* %20925 to i32*
  %20926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20927 = getelementptr inbounds %struct.GPR, %struct.GPR* %20926, i32 0, i32 9
  %20928 = getelementptr inbounds %struct.Reg, %struct.Reg* %20927, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %20928 to i64*
  %20929 = load i64, i64* %RSI.i
  %20930 = load i32, i32* %EAX.i25
  %20931 = zext i32 %20930 to i64
  %20932 = load i64, i64* %PC.i24
  %20933 = add i64 %20932, 2
  store i64 %20933, i64* %PC.i24
  %20934 = trunc i64 %20929 to i32
  %20935 = add i32 %20930, %20934
  %20936 = zext i32 %20935 to i64
  store i64 %20936, i64* %RSI.i, align 8
  %20937 = icmp ult i32 %20935, %20934
  %20938 = icmp ult i32 %20935, %20930
  %20939 = or i1 %20937, %20938
  %20940 = zext i1 %20939 to i8
  %20941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20940, i8* %20941, align 1
  %20942 = and i32 %20935, 255
  %20943 = call i32 @llvm.ctpop.i32(i32 %20942)
  %20944 = trunc i32 %20943 to i8
  %20945 = and i8 %20944, 1
  %20946 = xor i8 %20945, 1
  %20947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20946, i8* %20947, align 1
  %20948 = xor i64 %20931, %20929
  %20949 = trunc i64 %20948 to i32
  %20950 = xor i32 %20949, %20935
  %20951 = lshr i32 %20950, 4
  %20952 = trunc i32 %20951 to i8
  %20953 = and i8 %20952, 1
  %20954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20953, i8* %20954, align 1
  %20955 = icmp eq i32 %20935, 0
  %20956 = zext i1 %20955 to i8
  %20957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20956, i8* %20957, align 1
  %20958 = lshr i32 %20935, 31
  %20959 = trunc i32 %20958 to i8
  %20960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20959, i8* %20960, align 1
  %20961 = lshr i32 %20934, 31
  %20962 = lshr i32 %20930, 31
  %20963 = xor i32 %20958, %20961
  %20964 = xor i32 %20958, %20962
  %20965 = add i32 %20963, %20964
  %20966 = icmp eq i32 %20965, 2
  %20967 = zext i1 %20966 to i8
  %20968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20967, i8* %20968, align 1
  store %struct.Memory* %loadMem_43b309, %struct.Memory** %MEMORY
  %loadMem_43b30b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20970 = getelementptr inbounds %struct.GPR, %struct.GPR* %20969, i32 0, i32 33
  %20971 = getelementptr inbounds %struct.Reg, %struct.Reg* %20970, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %20971 to i64*
  %20972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20973 = getelementptr inbounds %struct.GPR, %struct.GPR* %20972, i32 0, i32 9
  %20974 = getelementptr inbounds %struct.Reg, %struct.Reg* %20973, i32 0, i32 0
  %SI.i = bitcast %union.anon* %20974 to i16*
  %20975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20976 = getelementptr inbounds %struct.GPR, %struct.GPR* %20975, i32 0, i32 11
  %20977 = getelementptr inbounds %struct.Reg, %struct.Reg* %20976, i32 0, i32 0
  %DI.i23 = bitcast %union.anon* %20977 to i16*
  %20978 = load i16, i16* %SI.i
  %20979 = zext i16 %20978 to i64
  %20980 = load i64, i64* %PC.i22
  %20981 = add i64 %20980, 3
  store i64 %20981, i64* %PC.i22
  store i16 %20978, i16* %DI.i23, align 2
  store %struct.Memory* %loadMem_43b30b, %struct.Memory** %MEMORY
  %loadMem_43b30e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20983 = getelementptr inbounds %struct.GPR, %struct.GPR* %20982, i32 0, i32 33
  %20984 = getelementptr inbounds %struct.Reg, %struct.Reg* %20983, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %20984 to i64*
  %20985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20986 = getelementptr inbounds %struct.GPR, %struct.GPR* %20985, i32 0, i32 11
  %20987 = getelementptr inbounds %struct.Reg, %struct.Reg* %20986, i32 0, i32 0
  %DI.i = bitcast %union.anon* %20987 to i16*
  %20988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20989 = getelementptr inbounds %struct.GPR, %struct.GPR* %20988, i32 0, i32 5
  %20990 = getelementptr inbounds %struct.Reg, %struct.Reg* %20989, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %20990 to i64*
  %20991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20992 = getelementptr inbounds %struct.GPR, %struct.GPR* %20991, i32 0, i32 7
  %20993 = getelementptr inbounds %struct.Reg, %struct.Reg* %20992, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %20993 to i64*
  %20994 = load i64, i64* %RCX.i
  %20995 = load i64, i64* %RDX.i
  %20996 = mul i64 %20995, 2
  %20997 = add i64 %20996, %20994
  %20998 = load i16, i16* %DI.i
  %20999 = zext i16 %20998 to i64
  %21000 = load i64, i64* %PC.i21
  %21001 = add i64 %21000, 4
  store i64 %21001, i64* %PC.i21
  %21002 = inttoptr i64 %20997 to i16*
  store i16 %20998, i16* %21002
  store %struct.Memory* %loadMem_43b30e, %struct.Memory** %MEMORY
  br label %block_.L_43b312

block_.L_43b312:                                  ; preds = %block_.L_43b2f4, %block_.L_43b23e
  %loadMem_43b312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21004 = getelementptr inbounds %struct.GPR, %struct.GPR* %21003, i32 0, i32 33
  %21005 = getelementptr inbounds %struct.Reg, %struct.Reg* %21004, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %21005 to i64*
  %21006 = load i64, i64* %PC.i20
  %21007 = add i64 %21006, 5
  %21008 = load i64, i64* %PC.i20
  %21009 = add i64 %21008, 5
  store i64 %21009, i64* %PC.i20
  %21010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21007, i64* %21010, align 8
  store %struct.Memory* %loadMem_43b312, %struct.Memory** %MEMORY
  br label %block_.L_43b317

block_.L_43b317:                                  ; preds = %block_.L_43b312, %block_.L_43b16e
  %loadMem_43b317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21012 = getelementptr inbounds %struct.GPR, %struct.GPR* %21011, i32 0, i32 33
  %21013 = getelementptr inbounds %struct.Reg, %struct.Reg* %21012, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %21013 to i64*
  %21014 = load i64, i64* %PC.i19
  %21015 = add i64 %21014, 5
  %21016 = load i64, i64* %PC.i19
  %21017 = add i64 %21016, 5
  store i64 %21017, i64* %PC.i19
  %21018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21015, i64* %21018, align 8
  store %struct.Memory* %loadMem_43b317, %struct.Memory** %MEMORY
  br label %block_.L_43b31c

block_.L_43b31c:                                  ; preds = %block_.L_43b317, %block_.L_43aeb9
  %loadMem_43b31c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21020 = getelementptr inbounds %struct.GPR, %struct.GPR* %21019, i32 0, i32 33
  %21021 = getelementptr inbounds %struct.Reg, %struct.Reg* %21020, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %21021 to i64*
  %21022 = load i64, i64* %PC.i18
  %21023 = add i64 %21022, 5
  %21024 = load i64, i64* %PC.i18
  %21025 = add i64 %21024, 5
  store i64 %21025, i64* %PC.i18
  %21026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21023, i64* %21026, align 8
  store %struct.Memory* %loadMem_43b31c, %struct.Memory** %MEMORY
  br label %block_.L_43b321

block_.L_43b321:                                  ; preds = %block_.L_43b31c, %block_43ab39
  %loadMem_43b321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21028 = getelementptr inbounds %struct.GPR, %struct.GPR* %21027, i32 0, i32 33
  %21029 = getelementptr inbounds %struct.Reg, %struct.Reg* %21028, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %21029 to i64*
  %21030 = load i64, i64* %PC.i17
  %21031 = add i64 %21030, 5
  %21032 = load i64, i64* %PC.i17
  %21033 = add i64 %21032, 5
  store i64 %21033, i64* %PC.i17
  %21034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21031, i64* %21034, align 8
  store %struct.Memory* %loadMem_43b321, %struct.Memory** %MEMORY
  br label %block_.L_43b326

block_.L_43b326:                                  ; preds = %block_.L_43b321, %block_43ab14
  %loadMem_43b326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21036 = getelementptr inbounds %struct.GPR, %struct.GPR* %21035, i32 0, i32 33
  %21037 = getelementptr inbounds %struct.Reg, %struct.Reg* %21036, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %21037 to i64*
  %21038 = load i64, i64* %PC.i16
  %21039 = add i64 %21038, 5
  %21040 = load i64, i64* %PC.i16
  %21041 = add i64 %21040, 5
  store i64 %21041, i64* %PC.i16
  %21042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21039, i64* %21042, align 8
  store %struct.Memory* %loadMem_43b326, %struct.Memory** %MEMORY
  br label %block_.L_43b32b

block_.L_43b32b:                                  ; preds = %block_.L_43b326, %block_.L_43a9e7
  %loadMem_43b32b = load %struct.Memory*, %struct.Memory** %MEMORY
  %21043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21044 = getelementptr inbounds %struct.GPR, %struct.GPR* %21043, i32 0, i32 33
  %21045 = getelementptr inbounds %struct.Reg, %struct.Reg* %21044, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %21045 to i64*
  %21046 = load i64, i64* %PC.i15
  %21047 = add i64 %21046, 5
  %21048 = load i64, i64* %PC.i15
  %21049 = add i64 %21048, 5
  store i64 %21049, i64* %PC.i15
  %21050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21047, i64* %21050, align 8
  store %struct.Memory* %loadMem_43b32b, %struct.Memory** %MEMORY
  br label %block_.L_43b330

block_.L_43b330:                                  ; preds = %block_.L_43b32b, %block_43a652
  %loadMem_43b330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21052 = getelementptr inbounds %struct.GPR, %struct.GPR* %21051, i32 0, i32 33
  %21053 = getelementptr inbounds %struct.Reg, %struct.Reg* %21052, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %21053 to i64*
  %21054 = load i64, i64* %PC.i14
  %21055 = add i64 %21054, 5
  %21056 = load i64, i64* %PC.i14
  %21057 = add i64 %21056, 5
  store i64 %21057, i64* %PC.i14
  %21058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21055, i64* %21058, align 8
  store %struct.Memory* %loadMem_43b330, %struct.Memory** %MEMORY
  br label %block_.L_43b335

block_.L_43b335:                                  ; preds = %block_.L_43b330
  %loadMem_43b335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21060 = getelementptr inbounds %struct.GPR, %struct.GPR* %21059, i32 0, i32 33
  %21061 = getelementptr inbounds %struct.Reg, %struct.Reg* %21060, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %21061 to i64*
  %21062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21063 = getelementptr inbounds %struct.GPR, %struct.GPR* %21062, i32 0, i32 1
  %21064 = getelementptr inbounds %struct.Reg, %struct.Reg* %21063, i32 0, i32 0
  %RAX.i12 = bitcast %union.anon* %21064 to i64*
  %21065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21066 = getelementptr inbounds %struct.GPR, %struct.GPR* %21065, i32 0, i32 15
  %21067 = getelementptr inbounds %struct.Reg, %struct.Reg* %21066, i32 0, i32 0
  %RBP.i13 = bitcast %union.anon* %21067 to i64*
  %21068 = load i64, i64* %RBP.i13
  %21069 = sub i64 %21068, 76
  %21070 = load i64, i64* %PC.i11
  %21071 = add i64 %21070, 3
  store i64 %21071, i64* %PC.i11
  %21072 = inttoptr i64 %21069 to i32*
  %21073 = load i32, i32* %21072
  %21074 = zext i32 %21073 to i64
  store i64 %21074, i64* %RAX.i12, align 8
  store %struct.Memory* %loadMem_43b335, %struct.Memory** %MEMORY
  %loadMem_43b338 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21076 = getelementptr inbounds %struct.GPR, %struct.GPR* %21075, i32 0, i32 33
  %21077 = getelementptr inbounds %struct.Reg, %struct.Reg* %21076, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %21077 to i64*
  %21078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21079 = getelementptr inbounds %struct.GPR, %struct.GPR* %21078, i32 0, i32 1
  %21080 = getelementptr inbounds %struct.Reg, %struct.Reg* %21079, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %21080 to i64*
  %21081 = load i64, i64* %RAX.i
  %21082 = load i64, i64* %PC.i10
  %21083 = add i64 %21082, 3
  store i64 %21083, i64* %PC.i10
  %21084 = trunc i64 %21081 to i32
  %21085 = add i32 1, %21084
  %21086 = zext i32 %21085 to i64
  store i64 %21086, i64* %RAX.i, align 8
  %21087 = icmp ult i32 %21085, %21084
  %21088 = icmp ult i32 %21085, 1
  %21089 = or i1 %21087, %21088
  %21090 = zext i1 %21089 to i8
  %21091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21090, i8* %21091, align 1
  %21092 = and i32 %21085, 255
  %21093 = call i32 @llvm.ctpop.i32(i32 %21092)
  %21094 = trunc i32 %21093 to i8
  %21095 = and i8 %21094, 1
  %21096 = xor i8 %21095, 1
  %21097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21096, i8* %21097, align 1
  %21098 = xor i64 1, %21081
  %21099 = trunc i64 %21098 to i32
  %21100 = xor i32 %21099, %21085
  %21101 = lshr i32 %21100, 4
  %21102 = trunc i32 %21101 to i8
  %21103 = and i8 %21102, 1
  %21104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21103, i8* %21104, align 1
  %21105 = icmp eq i32 %21085, 0
  %21106 = zext i1 %21105 to i8
  %21107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21106, i8* %21107, align 1
  %21108 = lshr i32 %21085, 31
  %21109 = trunc i32 %21108 to i8
  %21110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21109, i8* %21110, align 1
  %21111 = lshr i32 %21084, 31
  %21112 = xor i32 %21108, %21111
  %21113 = add i32 %21112, %21108
  %21114 = icmp eq i32 %21113, 2
  %21115 = zext i1 %21114 to i8
  %21116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21115, i8* %21116, align 1
  store %struct.Memory* %loadMem_43b338, %struct.Memory** %MEMORY
  %loadMem_43b33b = load %struct.Memory*, %struct.Memory** %MEMORY
  %21117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21118 = getelementptr inbounds %struct.GPR, %struct.GPR* %21117, i32 0, i32 33
  %21119 = getelementptr inbounds %struct.Reg, %struct.Reg* %21118, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %21119 to i64*
  %21120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21121 = getelementptr inbounds %struct.GPR, %struct.GPR* %21120, i32 0, i32 1
  %21122 = getelementptr inbounds %struct.Reg, %struct.Reg* %21121, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %21122 to i32*
  %21123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21124 = getelementptr inbounds %struct.GPR, %struct.GPR* %21123, i32 0, i32 15
  %21125 = getelementptr inbounds %struct.Reg, %struct.Reg* %21124, i32 0, i32 0
  %RBP.i9 = bitcast %union.anon* %21125 to i64*
  %21126 = load i64, i64* %RBP.i9
  %21127 = sub i64 %21126, 76
  %21128 = load i32, i32* %EAX.i
  %21129 = zext i32 %21128 to i64
  %21130 = load i64, i64* %PC.i8
  %21131 = add i64 %21130, 3
  store i64 %21131, i64* %PC.i8
  %21132 = inttoptr i64 %21127 to i32*
  store i32 %21128, i32* %21132
  store %struct.Memory* %loadMem_43b33b, %struct.Memory** %MEMORY
  %loadMem_43b33e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21134 = getelementptr inbounds %struct.GPR, %struct.GPR* %21133, i32 0, i32 33
  %21135 = getelementptr inbounds %struct.Reg, %struct.Reg* %21134, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %21135 to i64*
  %21136 = load i64, i64* %PC.i7
  %21137 = add i64 %21136, -3884
  %21138 = load i64, i64* %PC.i7
  %21139 = add i64 %21138, 5
  store i64 %21139, i64* %PC.i7
  %21140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21137, i64* %21140, align 8
  store %struct.Memory* %loadMem_43b33e, %struct.Memory** %MEMORY
  br label %block_.L_43a412

block_.L_43b343:                                  ; preds = %block_.L_43a412
  %loadMem_43b343 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21142 = getelementptr inbounds %struct.GPR, %struct.GPR* %21141, i32 0, i32 33
  %21143 = getelementptr inbounds %struct.Reg, %struct.Reg* %21142, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %21143 to i64*
  %21144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21145 = getelementptr inbounds %struct.GPR, %struct.GPR* %21144, i32 0, i32 13
  %21146 = getelementptr inbounds %struct.Reg, %struct.Reg* %21145, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %21146 to i64*
  %21147 = load i64, i64* %RSP.i
  %21148 = load i64, i64* %PC.i6
  %21149 = add i64 %21148, 7
  store i64 %21149, i64* %PC.i6
  %21150 = add i64 496, %21147
  store i64 %21150, i64* %RSP.i, align 8
  %21151 = icmp ult i64 %21150, %21147
  %21152 = icmp ult i64 %21150, 496
  %21153 = or i1 %21151, %21152
  %21154 = zext i1 %21153 to i8
  %21155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21154, i8* %21155, align 1
  %21156 = trunc i64 %21150 to i32
  %21157 = and i32 %21156, 255
  %21158 = call i32 @llvm.ctpop.i32(i32 %21157)
  %21159 = trunc i32 %21158 to i8
  %21160 = and i8 %21159, 1
  %21161 = xor i8 %21160, 1
  %21162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21161, i8* %21162, align 1
  %21163 = xor i64 496, %21147
  %21164 = xor i64 %21163, %21150
  %21165 = lshr i64 %21164, 4
  %21166 = trunc i64 %21165 to i8
  %21167 = and i8 %21166, 1
  %21168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21167, i8* %21168, align 1
  %21169 = icmp eq i64 %21150, 0
  %21170 = zext i1 %21169 to i8
  %21171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21170, i8* %21171, align 1
  %21172 = lshr i64 %21150, 63
  %21173 = trunc i64 %21172 to i8
  %21174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21173, i8* %21174, align 1
  %21175 = lshr i64 %21147, 63
  %21176 = xor i64 %21172, %21175
  %21177 = add i64 %21176, %21172
  %21178 = icmp eq i64 %21177, 2
  %21179 = zext i1 %21178 to i8
  %21180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21179, i8* %21180, align 1
  store %struct.Memory* %loadMem_43b343, %struct.Memory** %MEMORY
  %loadMem_43b34a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21182 = getelementptr inbounds %struct.GPR, %struct.GPR* %21181, i32 0, i32 33
  %21183 = getelementptr inbounds %struct.Reg, %struct.Reg* %21182, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %21183 to i64*
  %21184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21185 = getelementptr inbounds %struct.GPR, %struct.GPR* %21184, i32 0, i32 3
  %21186 = getelementptr inbounds %struct.Reg, %struct.Reg* %21185, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %21186 to i64*
  %21187 = load i64, i64* %PC.i5
  %21188 = add i64 %21187, 1
  store i64 %21188, i64* %PC.i5
  %21189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %21190 = load i64, i64* %21189, align 8
  %21191 = add i64 %21190, 8
  %21192 = inttoptr i64 %21190 to i64*
  %21193 = load i64, i64* %21192
  store i64 %21193, i64* %RBX.i, align 8
  store i64 %21191, i64* %21189, align 8
  store %struct.Memory* %loadMem_43b34a, %struct.Memory** %MEMORY
  %loadMem_43b34b = load %struct.Memory*, %struct.Memory** %MEMORY
  %21194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21195 = getelementptr inbounds %struct.GPR, %struct.GPR* %21194, i32 0, i32 33
  %21196 = getelementptr inbounds %struct.Reg, %struct.Reg* %21195, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %21196 to i64*
  %21197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21198 = getelementptr inbounds %struct.GPR, %struct.GPR* %21197, i32 0, i32 29
  %21199 = getelementptr inbounds %struct.Reg, %struct.Reg* %21198, i32 0, i32 0
  %R14.i = bitcast %union.anon* %21199 to i64*
  %21200 = load i64, i64* %PC.i4
  %21201 = add i64 %21200, 2
  store i64 %21201, i64* %PC.i4
  %21202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %21203 = load i64, i64* %21202, align 8
  %21204 = add i64 %21203, 8
  %21205 = inttoptr i64 %21203 to i64*
  %21206 = load i64, i64* %21205
  store i64 %21206, i64* %R14.i, align 8
  store i64 %21204, i64* %21202, align 8
  store %struct.Memory* %loadMem_43b34b, %struct.Memory** %MEMORY
  %loadMem_43b34d = load %struct.Memory*, %struct.Memory** %MEMORY
  %21207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21208 = getelementptr inbounds %struct.GPR, %struct.GPR* %21207, i32 0, i32 33
  %21209 = getelementptr inbounds %struct.Reg, %struct.Reg* %21208, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %21209 to i64*
  %21210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21211 = getelementptr inbounds %struct.GPR, %struct.GPR* %21210, i32 0, i32 15
  %21212 = getelementptr inbounds %struct.Reg, %struct.Reg* %21211, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %21212 to i64*
  %21213 = load i64, i64* %PC.i2
  %21214 = add i64 %21213, 1
  store i64 %21214, i64* %PC.i2
  %21215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %21216 = load i64, i64* %21215, align 8
  %21217 = add i64 %21216, 8
  %21218 = inttoptr i64 %21216 to i64*
  %21219 = load i64, i64* %21218
  store i64 %21219, i64* %RBP.i3, align 8
  store i64 %21217, i64* %21215, align 8
  store %struct.Memory* %loadMem_43b34d, %struct.Memory** %MEMORY
  %loadMem_43b34e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21221 = getelementptr inbounds %struct.GPR, %struct.GPR* %21220, i32 0, i32 33
  %21222 = getelementptr inbounds %struct.Reg, %struct.Reg* %21221, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %21222 to i64*
  %21223 = load i64, i64* %PC.i1
  %21224 = add i64 %21223, 1
  store i64 %21224, i64* %PC.i1
  %21225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %21227 = load i64, i64* %21226, align 8
  %21228 = inttoptr i64 %21227 to i64*
  %21229 = load i64, i64* %21228
  store i64 %21229, i64* %21225, align 8
  %21230 = add i64 %21227, 8
  store i64 %21230, i64* %21226, align 8
  store %struct.Memory* %loadMem_43b34e, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_43b34e
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x1f0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 496
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 496
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 496, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x30__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x28__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = add i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x20__rbp____r11d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = add i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x18__rbp____ebx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__rbp____r14d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R14D to i64*
  %13 = load i64, i64* %RBP
  %14 = add i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r14d__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %R14D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ebx__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EBX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r11d__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %R11D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 120
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 156
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 160
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 11
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 0, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x4c37e0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x4c37e0_type* @G_0x4c37e0 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x150__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x4c37e8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x4c37e8_type* @G_0x4c37e8 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x148__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 328
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x4c37f0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x4c37f0_type* @G_0x4c37f0 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x140__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x4c37f8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x4c37f8_type* @G_0x4c37f8 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x138__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 68
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a39e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bd4__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72660
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x8___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 8
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 8
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 8, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RAX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x12c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a3ba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bd8__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a3ef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x150__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x11bfc__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x154__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a3ff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x10___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x154__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x154__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xb8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 184
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b343(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a439(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x158__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a445(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x158__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a497(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43a476(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x15c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a486(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x15c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x160__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a4a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x160__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x128__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xe4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x44__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 68
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.getNeighbour(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x110__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xdc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x38__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 68
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___r9b(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  store i8 1, i8* %R9B, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x108__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x104__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__r8____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___r10___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R10, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r10___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %R10
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R8, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r8__MINUS0xf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10c__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r8__MINUS0xf8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xf0__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x214__r8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = add i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__r9b__MINUS0x161__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 353
  %15 = load i8, i8* %R9B
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a591(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xf8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setne__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x161__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 353
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x161__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 353
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__0x723694(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 7
  store i64 %13, i64* %PC
  store i8 %10, i8* getelementptr inbounds (%G_0x723694_type, %G_0x723694_type* @G_0x723694, i32 0, i32 0, i32 0)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a630(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 184
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a630(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xf0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a5f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a5f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x168__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a61f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x16c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x16c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_addl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x168__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x168__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x170__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a639(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x170__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x110__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 272
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a666(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x264__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 612
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b330(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a6c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x723694___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i8, i8* getelementptr inbounds (%G_0x723694_type, %G_0x723694_type* @G_0x723694, i32 0, i32 0, i32 0)
  %12 = zext i8 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a6a6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a6a6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x174__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a6af(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x174__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x178__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 376
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a6d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x178__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 376
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a733(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a719(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43a719(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x17c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 380
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a722(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x17c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 380
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x180__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a743(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x180__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x114__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 276
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x118__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x1___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 1
  %13 = icmp slt i64 %9, 0
  %14 = icmp slt i64 %12, 0
  %15 = xor i1 %13, %14
  store i64 %12, i64* %RDX, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17 = zext i1 %13 to i8
  store i8 %17, i8* %16, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19 = trunc i64 %12 to i32
  %20 = and i32 %19, 254
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %18, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i64 %12, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i64 %12, 63
  %31 = trunc i64 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %33 = zext i1 %15 to i8
  store i8 %33, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xfc__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x100__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43a8f7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x48__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11c0c__rax__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 72716
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43a7cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x184__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a82a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x33___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 51
  %14 = icmp ult i32 %9, 51
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 51, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43a7ff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x33___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 51, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x188__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 392
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a81e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x188__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 392
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x188__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x184__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4b2320___rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4924192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xf0__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x48__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11c0c__rcx__rsi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 72716
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RDX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 396
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43a870(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x190__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a8cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43a8a2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x194__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a8c1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x194__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x194__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x190__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x198__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a917(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0xc__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x198__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x198__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43a942(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x19c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 412
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a97f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x33___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 51
  %14 = icmp ult i32 %9, 51
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 51, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43a964(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1a0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a973(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1a0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x19c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 412
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x34__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43a9aa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1a4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a9e7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43a9cc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1a8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 424
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a9db(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1a8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 424
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1a4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cb9c0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cb9c0_type* @G__0x6cb9c0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xb0__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x6cb940___rsi_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 7125312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_MINUS0x12c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 300
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RAX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xb4__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x6cb980___rsi_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 7125376
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x5___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 5, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xc8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rdx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i16*
  %16 = load i16, i16* %15
  %17 = zext i16 %16 to i64
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xd0__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x5c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 92
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rdx__rsi_2____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x60__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x5c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 92
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x3___ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  %18 = mul i64 3, %17
  %19 = trunc i64 %18 to i32
  %20 = and i64 %18, 4294967295
  store i64 %20, i64* %RAX, align 8
  %21 = shl i64 %18, 32
  %22 = ashr exact i64 %21, 32
  %23 = icmp ne i64 %22, %18
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = lshr i32 %19, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24, i8* %37, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x3__MINUS0x60__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 3
  %20 = trunc i64 %19 to i32
  %21 = and i64 %19, 4294967295
  store i64 %21, i64* %RAX, align 8
  %22 = shl i64 %19, 32
  %23 = ashr exact i64 %22, 32
  %24 = icmp ne i64 %23, %19
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xbc__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl___rdx__rsi_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = inttoptr i64 %17 to i8*
  %21 = load i8, i8* %20
  %22 = zext i8 %21 to i64
  store i64 %22, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b32b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x80__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abs_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x9c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 156
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b326(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x58__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl___rax__rcx_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = inttoptr i64 %17 to i8*
  %21 = load i8, i8* %20
  %22 = zext i8 %21 to i64
  store i64 %22, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_MINUS0x12c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 300
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RDX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x84__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x88__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0xa0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 160
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x7c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 124
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1ac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 428
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1ac__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 428
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = and i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RDX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b321(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43abe9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x8c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 140
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setl__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %CL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %CL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %CL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x78__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 120
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x84__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 132
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 88
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43aebe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43ac58(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x88__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x7c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 124
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 2, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 2
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 2, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 1
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___cx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %CX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__cx____rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i16, i16* %CX
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i16*
  store i16 %13, i16* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x7c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x80__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x88__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43aeb9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x9c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 1
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 2, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 2
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 2, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setl__dl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %DL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___dl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %DL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %DL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__dl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %DL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl_MINUS0x54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = and i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %22, align 1
  %23 = and i32 %20, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i32 %20, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %20, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andl_MINUS0x50__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 80
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = and i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %22, align 1
  %23 = and i32 %20, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i32 %20, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %20, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43acc5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x90__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 144
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x8c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 140
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 4, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 4
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 4, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 2
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1b0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ace3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1b0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43ad28(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x7c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x78__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 120
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ad43(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1b4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43ad86(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ad92(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1b8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %CX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43add4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x78__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1bc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43addd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___dx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %DX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xc8__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx____rsi__rdi_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43ae35(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x90__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 144
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ae41(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43ae91(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 452
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ae9a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 452
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b31c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43aed9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43aee8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x50__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 80
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x6c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x7c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x68__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43af25(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1cc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43af7c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x88__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 104
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43af53(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1d0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43af70(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1d0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1cc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b081(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x70__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 112
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43afab(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1d4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 468
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43afee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x11bec__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 72684
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43afd6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1d8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43afe2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1d8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1d8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1d4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 468
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x70__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 112
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b020(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1dc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 476
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b069(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43b04e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1e0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b05d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1e0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1e0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1dc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 476
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b16e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b09d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1e4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b0e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x11bf0__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 72688
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43b0c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1e8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b0d4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1e8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1e8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1e4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b112(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1ec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b15b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43b140(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1f0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b14f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1f0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1f0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43b317(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b23e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x78__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x90__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b1bb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1f4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 500
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b21c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x90__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 100
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43b1ee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1f8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b210(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1f8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1f4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 500
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rdx__rsi_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__cx___di(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %CX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %DI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__di____rdx__rsi_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43b312(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x88__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_43b287(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1fc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b2f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_43b2c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x200__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b2e8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x200__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1fc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xd0__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x60__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__si___di(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %SI
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %DI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__di____rcx__rdx_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b317(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b321(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b326(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b32b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b330(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43b335(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43a412(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x1f0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 496, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 496
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 496, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBX, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R14, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
