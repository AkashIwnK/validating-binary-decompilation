; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x99da00_type = type <{ [4 x i8] }>
%G_0x99da04_type = type <{ [4 x i8] }>
%G_0x99da08_type = type <{ [4 x i8] }>
%G_0xa0e710_type = type <{ [8 x i8] }>
%G__0x57a16e_type = type <{ [8 x i8] }>
%G__0x57a321_type = type <{ [8 x i8] }>
%G__0x99da00_type = type <{ [8 x i8] }>
%G__0xa7f430_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x99da00 = global %G_0x99da00_type zeroinitializer
@G_0x99da04 = global %G_0x99da04_type zeroinitializer
@G_0x99da08 = global %G_0x99da08_type zeroinitializer
@G_0xa0e710 = global %G_0xa0e710_type zeroinitializer
@G__0x57a16e = global %G__0x57a16e_type zeroinitializer
@G__0x57a321 = global %G__0x57a321_type zeroinitializer
@G__0x99da00 = global %G__0x99da00_type zeroinitializer
@G__0xa7f430 = global %G__0xa7f430_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_452090.abortgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40cd50.assimilate_string(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @assimilate_neighbor_strings(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_40c070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_40c070, %struct.Memory** %MEMORY
  %loadMem_40c071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1647 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1648 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1649 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1648
  %27 = load i64, i64* %PC.i1647
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1647
  store i64 %26, i64* %RBP.i1649, align 8
  store %struct.Memory* %loadMem_40c071, %struct.Memory** %MEMORY
  %loadMem_40c074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1665 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1666 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1666
  %36 = load i64, i64* %PC.i1665
  %37 = add i64 %36, 4
  store i64 %37, i64* %PC.i1665
  %38 = sub i64 %35, 48
  store i64 %38, i64* %RSP.i1666, align 8
  %39 = icmp ult i64 %35, 48
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 48, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_40c074, %struct.Memory** %MEMORY
  %loadMem_40c078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1745 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RAX.i1746 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %PC.i1745
  %74 = add i64 %73, 10
  store i64 %74, i64* %PC.i1745
  store i64 ptrtoint (%G__0x99da00_type* @G__0x99da00 to i64), i64* %RAX.i1746, align 8
  store %struct.Memory* %loadMem_40c078, %struct.Memory** %MEMORY
  %loadMem_40c082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 33
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %PC.i1743 = bitcast %union.anon* %77 to i64*
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %79 = getelementptr inbounds %struct.GPR, %struct.GPR* %78, i32 0, i32 5
  %80 = getelementptr inbounds %struct.Reg, %struct.Reg* %79, i32 0, i32 0
  %RCX.i1744 = bitcast %union.anon* %80 to i64*
  %81 = load i64, i64* %PC.i1743
  %82 = add i64 %81, 5
  store i64 %82, i64* %PC.i1743
  store i64 3, i64* %RCX.i1744, align 8
  store %struct.Memory* %loadMem_40c082, %struct.Memory** %MEMORY
  %loadMem_40c087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 33
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %PC.i1740 = bitcast %union.anon* %85 to i64*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 11
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %EDI.i1741 = bitcast %union.anon* %88 to i32*
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %90 = getelementptr inbounds %struct.GPR, %struct.GPR* %89, i32 0, i32 15
  %91 = getelementptr inbounds %struct.Reg, %struct.Reg* %90, i32 0, i32 0
  %RBP.i1742 = bitcast %union.anon* %91 to i64*
  %92 = load i64, i64* %RBP.i1742
  %93 = sub i64 %92, 4
  %94 = load i32, i32* %EDI.i1741
  %95 = zext i32 %94 to i64
  %96 = load i64, i64* %PC.i1740
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC.i1740
  %98 = inttoptr i64 %93 to i32*
  store i32 %94, i32* %98
  store %struct.Memory* %loadMem_40c087, %struct.Memory** %MEMORY
  %loadMem_40c08a = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i1737 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 7
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %RDX.i1738 = bitcast %union.anon* %104 to i64*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 15
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %RBP.i1739 = bitcast %union.anon* %107 to i64*
  %108 = load i64, i64* %RBP.i1739
  %109 = sub i64 %108, 4
  %110 = load i64, i64* %PC.i1737
  %111 = add i64 %110, 4
  store i64 %111, i64* %PC.i1737
  %112 = inttoptr i64 %109 to i32*
  %113 = load i32, i32* %112
  %114 = sext i32 %113 to i64
  store i64 %114, i64* %RDX.i1738, align 8
  store %struct.Memory* %loadMem_40c08a, %struct.Memory** %MEMORY
  %loadMem_40c08e = load %struct.Memory*, %struct.Memory** %MEMORY
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %116 = getelementptr inbounds %struct.GPR, %struct.GPR* %115, i32 0, i32 33
  %117 = getelementptr inbounds %struct.Reg, %struct.Reg* %116, i32 0, i32 0
  %PC.i1734 = bitcast %union.anon* %117 to i64*
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %119 = getelementptr inbounds %struct.GPR, %struct.GPR* %118, i32 0, i32 7
  %120 = getelementptr inbounds %struct.Reg, %struct.Reg* %119, i32 0, i32 0
  %RDX.i1735 = bitcast %union.anon* %120 to i64*
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %122 = getelementptr inbounds %struct.GPR, %struct.GPR* %121, i32 0, i32 11
  %123 = getelementptr inbounds %struct.Reg, %struct.Reg* %122, i32 0, i32 0
  %RDI.i1736 = bitcast %union.anon* %123 to i64*
  %124 = load i64, i64* %RDX.i1735
  %125 = add i64 %124, 12099168
  %126 = load i64, i64* %PC.i1734
  %127 = add i64 %126, 8
  store i64 %127, i64* %PC.i1734
  %128 = inttoptr i64 %125 to i8*
  %129 = load i8, i8* %128
  %130 = zext i8 %129 to i64
  store i64 %130, i64* %RDI.i1736, align 8
  store %struct.Memory* %loadMem_40c08e, %struct.Memory** %MEMORY
  %loadMem_40c096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %132 = getelementptr inbounds %struct.GPR, %struct.GPR* %131, i32 0, i32 33
  %133 = getelementptr inbounds %struct.Reg, %struct.Reg* %132, i32 0, i32 0
  %PC.i1731 = bitcast %union.anon* %133 to i64*
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 11
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %EDI.i1732 = bitcast %union.anon* %136 to i32*
  %137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %138 = getelementptr inbounds %struct.GPR, %struct.GPR* %137, i32 0, i32 15
  %139 = getelementptr inbounds %struct.Reg, %struct.Reg* %138, i32 0, i32 0
  %RBP.i1733 = bitcast %union.anon* %139 to i64*
  %140 = load i64, i64* %RBP.i1733
  %141 = sub i64 %140, 12
  %142 = load i32, i32* %EDI.i1732
  %143 = zext i32 %142 to i64
  %144 = load i64, i64* %PC.i1731
  %145 = add i64 %144, 3
  store i64 %145, i64* %PC.i1731
  %146 = inttoptr i64 %141 to i32*
  store i32 %142, i32* %146
  store %struct.Memory* %loadMem_40c096, %struct.Memory** %MEMORY
  %loadMem_40c099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 33
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %PC.i1728 = bitcast %union.anon* %149 to i64*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 5
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %RCX.i1729 = bitcast %union.anon* %152 to i64*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 15
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %RBP.i1730 = bitcast %union.anon* %155 to i64*
  %156 = load i64, i64* %RCX.i1729
  %157 = load i64, i64* %RBP.i1730
  %158 = sub i64 %157, 12
  %159 = load i64, i64* %PC.i1728
  %160 = add i64 %159, 3
  store i64 %160, i64* %PC.i1728
  %161 = trunc i64 %156 to i32
  %162 = inttoptr i64 %158 to i32*
  %163 = load i32, i32* %162
  %164 = sub i32 %161, %163
  %165 = zext i32 %164 to i64
  store i64 %165, i64* %RCX.i1729, align 8
  %166 = icmp ult i32 %161, %163
  %167 = zext i1 %166 to i8
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %167, i8* %168, align 1
  %169 = and i32 %164, 255
  %170 = call i32 @llvm.ctpop.i32(i32 %169)
  %171 = trunc i32 %170 to i8
  %172 = and i8 %171, 1
  %173 = xor i8 %172, 1
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %173, i8* %174, align 1
  %175 = xor i32 %163, %161
  %176 = xor i32 %175, %164
  %177 = lshr i32 %176, 4
  %178 = trunc i32 %177 to i8
  %179 = and i8 %178, 1
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %179, i8* %180, align 1
  %181 = icmp eq i32 %164, 0
  %182 = zext i1 %181 to i8
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %182, i8* %183, align 1
  %184 = lshr i32 %164, 31
  %185 = trunc i32 %184 to i8
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %185, i8* %186, align 1
  %187 = lshr i32 %161, 31
  %188 = lshr i32 %163, 31
  %189 = xor i32 %188, %187
  %190 = xor i32 %184, %187
  %191 = add i32 %190, %189
  %192 = icmp eq i32 %191, 2
  %193 = zext i1 %192 to i8
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %193, i8* %194, align 1
  store %struct.Memory* %loadMem_40c099, %struct.Memory** %MEMORY
  %loadMem_40c09c = load %struct.Memory*, %struct.Memory** %MEMORY
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 33
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %PC.i1725 = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 5
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %ECX.i1726 = bitcast %union.anon* %200 to i32*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 15
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RBP.i1727 = bitcast %union.anon* %203 to i64*
  %204 = load i64, i64* %RBP.i1727
  %205 = sub i64 %204, 16
  %206 = load i32, i32* %ECX.i1726
  %207 = zext i32 %206 to i64
  %208 = load i64, i64* %PC.i1725
  %209 = add i64 %208, 3
  store i64 %209, i64* %PC.i1725
  %210 = inttoptr i64 %205 to i32*
  store i32 %206, i32* %210
  store %struct.Memory* %loadMem_40c09c, %struct.Memory** %MEMORY
  %loadMem_40c09f = load %struct.Memory*, %struct.Memory** %MEMORY
  %211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %212 = getelementptr inbounds %struct.GPR, %struct.GPR* %211, i32 0, i32 33
  %213 = getelementptr inbounds %struct.Reg, %struct.Reg* %212, i32 0, i32 0
  %PC.i1723 = bitcast %union.anon* %213 to i64*
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %215 = getelementptr inbounds %struct.GPR, %struct.GPR* %214, i32 0, i32 7
  %216 = getelementptr inbounds %struct.Reg, %struct.Reg* %215, i32 0, i32 0
  %RDX.i1724 = bitcast %union.anon* %216 to i64*
  %217 = load i64, i64* %PC.i1723
  %218 = add i64 %217, 8
  store i64 %218, i64* %PC.i1723
  %219 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %219, i64* %RDX.i1724, align 8
  store %struct.Memory* %loadMem_40c09f, %struct.Memory** %MEMORY
  %loadMem_40c0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %221 = getelementptr inbounds %struct.GPR, %struct.GPR* %220, i32 0, i32 33
  %222 = getelementptr inbounds %struct.Reg, %struct.Reg* %221, i32 0, i32 0
  %PC.i1720 = bitcast %union.anon* %222 to i64*
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %224 = getelementptr inbounds %struct.GPR, %struct.GPR* %223, i32 0, i32 1
  %225 = getelementptr inbounds %struct.Reg, %struct.Reg* %224, i32 0, i32 0
  %RAX.i1721 = bitcast %union.anon* %225 to i64*
  %226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %227 = getelementptr inbounds %struct.GPR, %struct.GPR* %226, i32 0, i32 7
  %228 = getelementptr inbounds %struct.Reg, %struct.Reg* %227, i32 0, i32 0
  %RDX.i1722 = bitcast %union.anon* %228 to i64*
  %229 = load i64, i64* %RDX.i1722
  %230 = load i64, i64* %RAX.i1721
  %231 = load i64, i64* %PC.i1720
  %232 = add i64 %231, 3
  store i64 %232, i64* %PC.i1720
  %233 = inttoptr i64 %229 to i64*
  store i64 %230, i64* %233
  store %struct.Memory* %loadMem_40c0a7, %struct.Memory** %MEMORY
  %loadMem_40c0aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 33
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %PC.i1718 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 5
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RCX.i1719 = bitcast %union.anon* %239 to i64*
  %240 = load i64, i64* %PC.i1718
  %241 = add i64 %240, 7
  store i64 %241, i64* %PC.i1718
  %242 = load i32, i32* bitcast (%G_0x99da00_type* @G_0x99da00 to i32*)
  %243 = zext i32 %242 to i64
  store i64 %243, i64* %RCX.i1719, align 8
  store %struct.Memory* %loadMem_40c0aa, %struct.Memory** %MEMORY
  %loadMem_40c0b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %245 = getelementptr inbounds %struct.GPR, %struct.GPR* %244, i32 0, i32 33
  %246 = getelementptr inbounds %struct.Reg, %struct.Reg* %245, i32 0, i32 0
  %PC.i1716 = bitcast %union.anon* %246 to i64*
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %248 = getelementptr inbounds %struct.GPR, %struct.GPR* %247, i32 0, i32 1
  %249 = getelementptr inbounds %struct.Reg, %struct.Reg* %248, i32 0, i32 0
  %RAX.i1717 = bitcast %union.anon* %249 to i64*
  %250 = load i64, i64* %PC.i1716
  %251 = add i64 %250, 8
  store i64 %251, i64* %PC.i1716
  %252 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %252, i64* %RAX.i1717, align 8
  store %struct.Memory* %loadMem_40c0b1, %struct.Memory** %MEMORY
  %loadMem_40c0b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %254 = getelementptr inbounds %struct.GPR, %struct.GPR* %253, i32 0, i32 33
  %255 = getelementptr inbounds %struct.Reg, %struct.Reg* %254, i32 0, i32 0
  %PC.i1713 = bitcast %union.anon* %255 to i64*
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %257 = getelementptr inbounds %struct.GPR, %struct.GPR* %256, i32 0, i32 1
  %258 = getelementptr inbounds %struct.Reg, %struct.Reg* %257, i32 0, i32 0
  %RAX.i1714 = bitcast %union.anon* %258 to i64*
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %260 = getelementptr inbounds %struct.GPR, %struct.GPR* %259, i32 0, i32 7
  %261 = getelementptr inbounds %struct.Reg, %struct.Reg* %260, i32 0, i32 0
  %RDX.i1715 = bitcast %union.anon* %261 to i64*
  %262 = load i64, i64* %RAX.i1714
  %263 = load i64, i64* %PC.i1713
  %264 = add i64 %263, 3
  store i64 %264, i64* %PC.i1713
  store i64 %262, i64* %RDX.i1715, align 8
  store %struct.Memory* %loadMem_40c0b9, %struct.Memory** %MEMORY
  %loadMem_40c0bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %266 = getelementptr inbounds %struct.GPR, %struct.GPR* %265, i32 0, i32 33
  %267 = getelementptr inbounds %struct.Reg, %struct.Reg* %266, i32 0, i32 0
  %PC.i1711 = bitcast %union.anon* %267 to i64*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %269 = getelementptr inbounds %struct.GPR, %struct.GPR* %268, i32 0, i32 7
  %270 = getelementptr inbounds %struct.Reg, %struct.Reg* %269, i32 0, i32 0
  %RDX.i1712 = bitcast %union.anon* %270 to i64*
  %271 = load i64, i64* %RDX.i1712
  %272 = load i64, i64* %PC.i1711
  %273 = add i64 %272, 4
  store i64 %273, i64* %PC.i1711
  %274 = add i64 16, %271
  store i64 %274, i64* %RDX.i1712, align 8
  %275 = icmp ult i64 %274, %271
  %276 = icmp ult i64 %274, 16
  %277 = or i1 %275, %276
  %278 = zext i1 %277 to i8
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %278, i8* %279, align 1
  %280 = trunc i64 %274 to i32
  %281 = and i32 %280, 255
  %282 = call i32 @llvm.ctpop.i32(i32 %281)
  %283 = trunc i32 %282 to i8
  %284 = and i8 %283, 1
  %285 = xor i8 %284, 1
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %285, i8* %286, align 1
  %287 = xor i64 16, %271
  %288 = xor i64 %287, %274
  %289 = lshr i64 %288, 4
  %290 = trunc i64 %289 to i8
  %291 = and i8 %290, 1
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %291, i8* %292, align 1
  %293 = icmp eq i64 %274, 0
  %294 = zext i1 %293 to i8
  %295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %294, i8* %295, align 1
  %296 = lshr i64 %274, 63
  %297 = trunc i64 %296 to i8
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %297, i8* %298, align 1
  %299 = lshr i64 %271, 63
  %300 = xor i64 %296, %299
  %301 = add i64 %300, %296
  %302 = icmp eq i64 %301, 2
  %303 = zext i1 %302 to i8
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %303, i8* %304, align 1
  store %struct.Memory* %loadMem_40c0bc, %struct.Memory** %MEMORY
  %loadMem_40c0c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %306 = getelementptr inbounds %struct.GPR, %struct.GPR* %305, i32 0, i32 33
  %307 = getelementptr inbounds %struct.Reg, %struct.Reg* %306, i32 0, i32 0
  %PC.i1709 = bitcast %union.anon* %307 to i64*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %309 = getelementptr inbounds %struct.GPR, %struct.GPR* %308, i32 0, i32 7
  %310 = getelementptr inbounds %struct.Reg, %struct.Reg* %309, i32 0, i32 0
  %RDX.i1710 = bitcast %union.anon* %310 to i64*
  %311 = load i64, i64* %RDX.i1710
  %312 = load i64, i64* %PC.i1709
  %313 = add i64 %312, 8
  store i64 %313, i64* %PC.i1709
  store i64 %311, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40c0c0, %struct.Memory** %MEMORY
  %loadMem_40c0c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %315 = getelementptr inbounds %struct.GPR, %struct.GPR* %314, i32 0, i32 33
  %316 = getelementptr inbounds %struct.Reg, %struct.Reg* %315, i32 0, i32 0
  %PC.i1706 = bitcast %union.anon* %316 to i64*
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %318 = getelementptr inbounds %struct.GPR, %struct.GPR* %317, i32 0, i32 5
  %319 = getelementptr inbounds %struct.Reg, %struct.Reg* %318, i32 0, i32 0
  %ECX.i1707 = bitcast %union.anon* %319 to i32*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %321 = getelementptr inbounds %struct.GPR, %struct.GPR* %320, i32 0, i32 1
  %322 = getelementptr inbounds %struct.Reg, %struct.Reg* %321, i32 0, i32 0
  %RAX.i1708 = bitcast %union.anon* %322 to i64*
  %323 = load i64, i64* %RAX.i1708
  %324 = add i64 %323, 8
  %325 = load i32, i32* %ECX.i1707
  %326 = zext i32 %325 to i64
  %327 = load i64, i64* %PC.i1706
  %328 = add i64 %327, 3
  store i64 %328, i64* %PC.i1706
  %329 = inttoptr i64 %324 to i32*
  store i32 %325, i32* %329
  store %struct.Memory* %loadMem_40c0c8, %struct.Memory** %MEMORY
  %loadMem_40c0cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %331 = getelementptr inbounds %struct.GPR, %struct.GPR* %330, i32 0, i32 33
  %332 = getelementptr inbounds %struct.Reg, %struct.Reg* %331, i32 0, i32 0
  %PC.i1704 = bitcast %union.anon* %332 to i64*
  %333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %334 = getelementptr inbounds %struct.GPR, %struct.GPR* %333, i32 0, i32 5
  %335 = getelementptr inbounds %struct.Reg, %struct.Reg* %334, i32 0, i32 0
  %RCX.i1705 = bitcast %union.anon* %335 to i64*
  %336 = load i64, i64* %PC.i1704
  %337 = add i64 %336, 7
  store i64 %337, i64* %PC.i1704
  %338 = load i32, i32* bitcast (%G_0x99da00_type* @G_0x99da00 to i32*)
  %339 = zext i32 %338 to i64
  store i64 %339, i64* %RCX.i1705, align 8
  store %struct.Memory* %loadMem_40c0cb, %struct.Memory** %MEMORY
  %loadMem_40c0d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %341 = getelementptr inbounds %struct.GPR, %struct.GPR* %340, i32 0, i32 33
  %342 = getelementptr inbounds %struct.Reg, %struct.Reg* %341, i32 0, i32 0
  %PC.i1701 = bitcast %union.anon* %342 to i64*
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %344 = getelementptr inbounds %struct.GPR, %struct.GPR* %343, i32 0, i32 5
  %345 = getelementptr inbounds %struct.Reg, %struct.Reg* %344, i32 0, i32 0
  %ECX.i1702 = bitcast %union.anon* %345 to i32*
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %347 = getelementptr inbounds %struct.GPR, %struct.GPR* %346, i32 0, i32 11
  %348 = getelementptr inbounds %struct.Reg, %struct.Reg* %347, i32 0, i32 0
  %RDI.i1703 = bitcast %union.anon* %348 to i64*
  %349 = load i32, i32* %ECX.i1702
  %350 = zext i32 %349 to i64
  %351 = load i64, i64* %PC.i1701
  %352 = add i64 %351, 2
  store i64 %352, i64* %PC.i1701
  %353 = and i64 %350, 4294967295
  store i64 %353, i64* %RDI.i1703, align 8
  store %struct.Memory* %loadMem_40c0d2, %struct.Memory** %MEMORY
  %loadMem_40c0d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %355 = getelementptr inbounds %struct.GPR, %struct.GPR* %354, i32 0, i32 33
  %356 = getelementptr inbounds %struct.Reg, %struct.Reg* %355, i32 0, i32 0
  %PC.i1699 = bitcast %union.anon* %356 to i64*
  %357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %358 = getelementptr inbounds %struct.GPR, %struct.GPR* %357, i32 0, i32 11
  %359 = getelementptr inbounds %struct.Reg, %struct.Reg* %358, i32 0, i32 0
  %RDI.i1700 = bitcast %union.anon* %359 to i64*
  %360 = load i64, i64* %RDI.i1700
  %361 = load i64, i64* %PC.i1699
  %362 = add i64 %361, 3
  store i64 %362, i64* %PC.i1699
  %363 = trunc i64 %360 to i32
  %364 = add i32 1, %363
  %365 = zext i32 %364 to i64
  store i64 %365, i64* %RDI.i1700, align 8
  %366 = icmp ult i32 %364, %363
  %367 = icmp ult i32 %364, 1
  %368 = or i1 %366, %367
  %369 = zext i1 %368 to i8
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %369, i8* %370, align 1
  %371 = and i32 %364, 255
  %372 = call i32 @llvm.ctpop.i32(i32 %371)
  %373 = trunc i32 %372 to i8
  %374 = and i8 %373, 1
  %375 = xor i8 %374, 1
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %375, i8* %376, align 1
  %377 = xor i64 1, %360
  %378 = trunc i64 %377 to i32
  %379 = xor i32 %378, %364
  %380 = lshr i32 %379, 4
  %381 = trunc i32 %380 to i8
  %382 = and i8 %381, 1
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %382, i8* %383, align 1
  %384 = icmp eq i32 %364, 0
  %385 = zext i1 %384 to i8
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %385, i8* %386, align 1
  %387 = lshr i32 %364, 31
  %388 = trunc i32 %387 to i8
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %388, i8* %389, align 1
  %390 = lshr i32 %363, 31
  %391 = xor i32 %387, %390
  %392 = add i32 %391, %387
  %393 = icmp eq i32 %392, 2
  %394 = zext i1 %393 to i8
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %394, i8* %395, align 1
  store %struct.Memory* %loadMem_40c0d4, %struct.Memory** %MEMORY
  %loadMem_40c0d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %397 = getelementptr inbounds %struct.GPR, %struct.GPR* %396, i32 0, i32 33
  %398 = getelementptr inbounds %struct.Reg, %struct.Reg* %397, i32 0, i32 0
  %PC.i1698 = bitcast %union.anon* %398 to i64*
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %400 = getelementptr inbounds %struct.GPR, %struct.GPR* %399, i32 0, i32 11
  %401 = getelementptr inbounds %struct.Reg, %struct.Reg* %400, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %401 to i32*
  %402 = load i32, i32* %EDI.i
  %403 = zext i32 %402 to i64
  %404 = load i64, i64* %PC.i1698
  %405 = add i64 %404, 7
  store i64 %405, i64* %PC.i1698
  store i32 %402, i32* bitcast (%G_0x99da00_type* @G_0x99da00 to i32*)
  store %struct.Memory* %loadMem_40c0d7, %struct.Memory** %MEMORY
  %loadMem_40c0de = load %struct.Memory*, %struct.Memory** %MEMORY
  %406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %407 = getelementptr inbounds %struct.GPR, %struct.GPR* %406, i32 0, i32 33
  %408 = getelementptr inbounds %struct.Reg, %struct.Reg* %407, i32 0, i32 0
  %PC.i1695 = bitcast %union.anon* %408 to i64*
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %410 = getelementptr inbounds %struct.GPR, %struct.GPR* %409, i32 0, i32 5
  %411 = getelementptr inbounds %struct.Reg, %struct.Reg* %410, i32 0, i32 0
  %ECX.i1696 = bitcast %union.anon* %411 to i32*
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %413 = getelementptr inbounds %struct.GPR, %struct.GPR* %412, i32 0, i32 15
  %414 = getelementptr inbounds %struct.Reg, %struct.Reg* %413, i32 0, i32 0
  %RBP.i1697 = bitcast %union.anon* %414 to i64*
  %415 = load i64, i64* %RBP.i1697
  %416 = sub i64 %415, 8
  %417 = load i32, i32* %ECX.i1696
  %418 = zext i32 %417 to i64
  %419 = load i64, i64* %PC.i1695
  %420 = add i64 %419, 3
  store i64 %420, i64* %PC.i1695
  %421 = inttoptr i64 %416 to i32*
  store i32 %417, i32* %421
  store %struct.Memory* %loadMem_40c0de, %struct.Memory** %MEMORY
  %loadMem_40c0e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %423 = getelementptr inbounds %struct.GPR, %struct.GPR* %422, i32 0, i32 33
  %424 = getelementptr inbounds %struct.Reg, %struct.Reg* %423, i32 0, i32 0
  %PC.i1693 = bitcast %union.anon* %424 to i64*
  %425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %426 = getelementptr inbounds %struct.GPR, %struct.GPR* %425, i32 0, i32 15
  %427 = getelementptr inbounds %struct.Reg, %struct.Reg* %426, i32 0, i32 0
  %RBP.i1694 = bitcast %union.anon* %427 to i64*
  %428 = load i64, i64* %RBP.i1694
  %429 = sub i64 %428, 8
  %430 = load i64, i64* %PC.i1693
  %431 = add i64 %430, 7
  store i64 %431, i64* %PC.i1693
  %432 = inttoptr i64 %429 to i32*
  %433 = load i32, i32* %432
  %434 = sub i32 %433, 240
  %435 = icmp ult i32 %433, 240
  %436 = zext i1 %435 to i8
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %436, i8* %437, align 1
  %438 = and i32 %434, 255
  %439 = call i32 @llvm.ctpop.i32(i32 %438)
  %440 = trunc i32 %439 to i8
  %441 = and i8 %440, 1
  %442 = xor i8 %441, 1
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %442, i8* %443, align 1
  %444 = xor i32 %433, 240
  %445 = xor i32 %444, %434
  %446 = lshr i32 %445, 4
  %447 = trunc i32 %446 to i8
  %448 = and i8 %447, 1
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %448, i8* %449, align 1
  %450 = icmp eq i32 %434, 0
  %451 = zext i1 %450 to i8
  %452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %451, i8* %452, align 1
  %453 = lshr i32 %434, 31
  %454 = trunc i32 %453 to i8
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %454, i8* %455, align 1
  %456 = lshr i32 %433, 31
  %457 = xor i32 %453, %456
  %458 = add i32 %457, %456
  %459 = icmp eq i32 %458, 2
  %460 = zext i1 %459 to i8
  %461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %460, i8* %461, align 1
  store %struct.Memory* %loadMem_40c0e1, %struct.Memory** %MEMORY
  %loadMem_40c0e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %463 = getelementptr inbounds %struct.GPR, %struct.GPR* %462, i32 0, i32 33
  %464 = getelementptr inbounds %struct.Reg, %struct.Reg* %463, i32 0, i32 0
  %PC.i1692 = bitcast %union.anon* %464 to i64*
  %465 = load i64, i64* %PC.i1692
  %466 = add i64 %465, 11
  %467 = load i64, i64* %PC.i1692
  %468 = add i64 %467, 6
  %469 = load i64, i64* %PC.i1692
  %470 = add i64 %469, 6
  store i64 %470, i64* %PC.i1692
  %471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %472 = load i8, i8* %471, align 1
  %473 = icmp ne i8 %472, 0
  %474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %475 = load i8, i8* %474, align 1
  %476 = icmp ne i8 %475, 0
  %477 = xor i1 %473, %476
  %478 = xor i1 %477, true
  %479 = zext i1 %478 to i8
  store i8 %479, i8* %BRANCH_TAKEN, align 1
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %481 = select i1 %477, i64 %468, i64 %466
  store i64 %481, i64* %480, align 8
  store %struct.Memory* %loadMem_40c0e8, %struct.Memory** %MEMORY
  %loadBr_40c0e8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c0e8 = icmp eq i8 %loadBr_40c0e8, 1
  br i1 %cmpBr_40c0e8, label %block_.L_40c0f3, label %block_40c0ee

block_40c0ee:                                     ; preds = %entry
  %loadMem_40c0ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %483 = getelementptr inbounds %struct.GPR, %struct.GPR* %482, i32 0, i32 33
  %484 = getelementptr inbounds %struct.Reg, %struct.Reg* %483, i32 0, i32 0
  %PC.i1691 = bitcast %union.anon* %484 to i64*
  %485 = load i64, i64* %PC.i1691
  %486 = add i64 %485, 94
  %487 = load i64, i64* %PC.i1691
  %488 = add i64 %487, 5
  store i64 %488, i64* %PC.i1691
  %489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %486, i64* %489, align 8
  store %struct.Memory* %loadMem_40c0ee, %struct.Memory** %MEMORY
  br label %block_.L_40c14c

block_.L_40c0f3:                                  ; preds = %entry
  %loadMem_40c0f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %491 = getelementptr inbounds %struct.GPR, %struct.GPR* %490, i32 0, i32 33
  %492 = getelementptr inbounds %struct.Reg, %struct.Reg* %491, i32 0, i32 0
  %PC.i1689 = bitcast %union.anon* %492 to i64*
  %493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %494 = getelementptr inbounds %struct.GPR, %struct.GPR* %493, i32 0, i32 11
  %495 = getelementptr inbounds %struct.Reg, %struct.Reg* %494, i32 0, i32 0
  %RDI.i1690 = bitcast %union.anon* %495 to i64*
  %496 = load i64, i64* %PC.i1689
  %497 = add i64 %496, 10
  store i64 %497, i64* %PC.i1689
  store i64 ptrtoint (%G__0x57a16e_type* @G__0x57a16e to i64), i64* %RDI.i1690, align 8
  store %struct.Memory* %loadMem_40c0f3, %struct.Memory** %MEMORY
  %loadMem_40c0fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %499 = getelementptr inbounds %struct.GPR, %struct.GPR* %498, i32 0, i32 33
  %500 = getelementptr inbounds %struct.Reg, %struct.Reg* %499, i32 0, i32 0
  %PC.i1687 = bitcast %union.anon* %500 to i64*
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %502 = getelementptr inbounds %struct.GPR, %struct.GPR* %501, i32 0, i32 9
  %503 = getelementptr inbounds %struct.Reg, %struct.Reg* %502, i32 0, i32 0
  %RSI.i1688 = bitcast %union.anon* %503 to i64*
  %504 = load i64, i64* %PC.i1687
  %505 = add i64 %504, 5
  store i64 %505, i64* %PC.i1687
  store i64 3296, i64* %RSI.i1688, align 8
  store %struct.Memory* %loadMem_40c0fd, %struct.Memory** %MEMORY
  %loadMem_40c102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %507 = getelementptr inbounds %struct.GPR, %struct.GPR* %506, i32 0, i32 33
  %508 = getelementptr inbounds %struct.Reg, %struct.Reg* %507, i32 0, i32 0
  %PC.i1685 = bitcast %union.anon* %508 to i64*
  %509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %510 = getelementptr inbounds %struct.GPR, %struct.GPR* %509, i32 0, i32 7
  %511 = getelementptr inbounds %struct.Reg, %struct.Reg* %510, i32 0, i32 0
  %RDX.i1686 = bitcast %union.anon* %511 to i64*
  %512 = load i64, i64* %PC.i1685
  %513 = add i64 %512, 10
  store i64 %513, i64* %PC.i1685
  store i64 ptrtoint (%G__0x57a321_type* @G__0x57a321 to i64), i64* %RDX.i1686, align 8
  store %struct.Memory* %loadMem_40c102, %struct.Memory** %MEMORY
  %loadMem_40c10c = load %struct.Memory*, %struct.Memory** %MEMORY
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %515 = getelementptr inbounds %struct.GPR, %struct.GPR* %514, i32 0, i32 33
  %516 = getelementptr inbounds %struct.Reg, %struct.Reg* %515, i32 0, i32 0
  %PC.i1683 = bitcast %union.anon* %516 to i64*
  %517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %518 = getelementptr inbounds %struct.GPR, %struct.GPR* %517, i32 0, i32 1
  %519 = getelementptr inbounds %struct.Reg, %struct.Reg* %518, i32 0, i32 0
  %RAX.i1684 = bitcast %union.anon* %519 to i64*
  %520 = load i64, i64* %PC.i1683
  %521 = add i64 %520, 5
  store i64 %521, i64* %PC.i1683
  store i64 20, i64* %RAX.i1684, align 8
  store %struct.Memory* %loadMem_40c10c, %struct.Memory** %MEMORY
  %loadMem_40c111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %523 = getelementptr inbounds %struct.GPR, %struct.GPR* %522, i32 0, i32 33
  %524 = getelementptr inbounds %struct.Reg, %struct.Reg* %523, i32 0, i32 0
  %PC.i1680 = bitcast %union.anon* %524 to i64*
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %526 = getelementptr inbounds %struct.GPR, %struct.GPR* %525, i32 0, i32 5
  %527 = getelementptr inbounds %struct.Reg, %struct.Reg* %526, i32 0, i32 0
  %RCX.i1681 = bitcast %union.anon* %527 to i64*
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %529 = getelementptr inbounds %struct.GPR, %struct.GPR* %528, i32 0, i32 15
  %530 = getelementptr inbounds %struct.Reg, %struct.Reg* %529, i32 0, i32 0
  %RBP.i1682 = bitcast %union.anon* %530 to i64*
  %531 = load i64, i64* %RBP.i1682
  %532 = sub i64 %531, 4
  %533 = load i64, i64* %PC.i1680
  %534 = add i64 %533, 3
  store i64 %534, i64* %PC.i1680
  %535 = inttoptr i64 %532 to i32*
  %536 = load i32, i32* %535
  %537 = zext i32 %536 to i64
  store i64 %537, i64* %RCX.i1681, align 8
  store %struct.Memory* %loadMem_40c111, %struct.Memory** %MEMORY
  %loadMem_40c114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %539 = getelementptr inbounds %struct.GPR, %struct.GPR* %538, i32 0, i32 33
  %540 = getelementptr inbounds %struct.Reg, %struct.Reg* %539, i32 0, i32 0
  %PC.i1677 = bitcast %union.anon* %540 to i64*
  %541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %542 = getelementptr inbounds %struct.GPR, %struct.GPR* %541, i32 0, i32 1
  %543 = getelementptr inbounds %struct.Reg, %struct.Reg* %542, i32 0, i32 0
  %EAX.i1678 = bitcast %union.anon* %543 to i32*
  %544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %545 = getelementptr inbounds %struct.GPR, %struct.GPR* %544, i32 0, i32 15
  %546 = getelementptr inbounds %struct.Reg, %struct.Reg* %545, i32 0, i32 0
  %RBP.i1679 = bitcast %union.anon* %546 to i64*
  %547 = load i64, i64* %RBP.i1679
  %548 = sub i64 %547, 20
  %549 = load i32, i32* %EAX.i1678
  %550 = zext i32 %549 to i64
  %551 = load i64, i64* %PC.i1677
  %552 = add i64 %551, 3
  store i64 %552, i64* %PC.i1677
  %553 = inttoptr i64 %548 to i32*
  store i32 %549, i32* %553
  store %struct.Memory* %loadMem_40c114, %struct.Memory** %MEMORY
  %loadMem_40c117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %555 = getelementptr inbounds %struct.GPR, %struct.GPR* %554, i32 0, i32 33
  %556 = getelementptr inbounds %struct.Reg, %struct.Reg* %555, i32 0, i32 0
  %PC.i1674 = bitcast %union.anon* %556 to i64*
  %557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %558 = getelementptr inbounds %struct.GPR, %struct.GPR* %557, i32 0, i32 5
  %559 = getelementptr inbounds %struct.Reg, %struct.Reg* %558, i32 0, i32 0
  %ECX.i1675 = bitcast %union.anon* %559 to i32*
  %560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %561 = getelementptr inbounds %struct.GPR, %struct.GPR* %560, i32 0, i32 1
  %562 = getelementptr inbounds %struct.Reg, %struct.Reg* %561, i32 0, i32 0
  %RAX.i1676 = bitcast %union.anon* %562 to i64*
  %563 = load i32, i32* %ECX.i1675
  %564 = zext i32 %563 to i64
  %565 = load i64, i64* %PC.i1674
  %566 = add i64 %565, 2
  store i64 %566, i64* %PC.i1674
  %567 = and i64 %564, 4294967295
  store i64 %567, i64* %RAX.i1676, align 8
  store %struct.Memory* %loadMem_40c117, %struct.Memory** %MEMORY
  %loadMem_40c119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %569 = getelementptr inbounds %struct.GPR, %struct.GPR* %568, i32 0, i32 33
  %570 = getelementptr inbounds %struct.Reg, %struct.Reg* %569, i32 0, i32 0
  %PC.i1671 = bitcast %union.anon* %570 to i64*
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %572 = getelementptr inbounds %struct.GPR, %struct.GPR* %571, i32 0, i32 7
  %573 = getelementptr inbounds %struct.Reg, %struct.Reg* %572, i32 0, i32 0
  %RDX.i1672 = bitcast %union.anon* %573 to i64*
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %575 = getelementptr inbounds %struct.GPR, %struct.GPR* %574, i32 0, i32 15
  %576 = getelementptr inbounds %struct.Reg, %struct.Reg* %575, i32 0, i32 0
  %RBP.i1673 = bitcast %union.anon* %576 to i64*
  %577 = load i64, i64* %RBP.i1673
  %578 = sub i64 %577, 32
  %579 = load i64, i64* %RDX.i1672
  %580 = load i64, i64* %PC.i1671
  %581 = add i64 %580, 4
  store i64 %581, i64* %PC.i1671
  %582 = inttoptr i64 %578 to i64*
  store i64 %579, i64* %582
  store %struct.Memory* %loadMem_40c119, %struct.Memory** %MEMORY
  %loadMem_40c11d = load %struct.Memory*, %struct.Memory** %MEMORY
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %584 = getelementptr inbounds %struct.GPR, %struct.GPR* %583, i32 0, i32 33
  %585 = getelementptr inbounds %struct.Reg, %struct.Reg* %584, i32 0, i32 0
  %PC.i1670 = bitcast %union.anon* %585 to i64*
  %586 = load i64, i64* %PC.i1670
  %587 = add i64 %586, 1
  store i64 %587, i64* %PC.i1670
  %588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %590 = bitcast %union.anon* %589 to i32*
  %591 = load i32, i32* %590, align 8
  %592 = sext i32 %591 to i64
  %593 = lshr i64 %592, 32
  store i64 %593, i64* %588, align 8
  store %struct.Memory* %loadMem_40c11d, %struct.Memory** %MEMORY
  %loadMem_40c11e = load %struct.Memory*, %struct.Memory** %MEMORY
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %595 = getelementptr inbounds %struct.GPR, %struct.GPR* %594, i32 0, i32 33
  %596 = getelementptr inbounds %struct.Reg, %struct.Reg* %595, i32 0, i32 0
  %PC.i1667 = bitcast %union.anon* %596 to i64*
  %597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %598 = getelementptr inbounds %struct.GPR, %struct.GPR* %597, i32 0, i32 5
  %599 = getelementptr inbounds %struct.Reg, %struct.Reg* %598, i32 0, i32 0
  %RCX.i1668 = bitcast %union.anon* %599 to i64*
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %601 = getelementptr inbounds %struct.GPR, %struct.GPR* %600, i32 0, i32 15
  %602 = getelementptr inbounds %struct.Reg, %struct.Reg* %601, i32 0, i32 0
  %RBP.i1669 = bitcast %union.anon* %602 to i64*
  %603 = load i64, i64* %RBP.i1669
  %604 = sub i64 %603, 20
  %605 = load i64, i64* %PC.i1667
  %606 = add i64 %605, 3
  store i64 %606, i64* %PC.i1667
  %607 = inttoptr i64 %604 to i32*
  %608 = load i32, i32* %607
  %609 = zext i32 %608 to i64
  store i64 %609, i64* %RCX.i1668, align 8
  store %struct.Memory* %loadMem_40c11e, %struct.Memory** %MEMORY
  %loadMem_40c121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %611 = getelementptr inbounds %struct.GPR, %struct.GPR* %610, i32 0, i32 33
  %612 = getelementptr inbounds %struct.Reg, %struct.Reg* %611, i32 0, i32 0
  %PC.i1662 = bitcast %union.anon* %612 to i64*
  %613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %614 = getelementptr inbounds %struct.GPR, %struct.GPR* %613, i32 0, i32 5
  %615 = getelementptr inbounds %struct.Reg, %struct.Reg* %614, i32 0, i32 0
  %ECX.i1663 = bitcast %union.anon* %615 to i32*
  %616 = load i32, i32* %ECX.i1663
  %617 = zext i32 %616 to i64
  %618 = load i64, i64* %PC.i1662
  %619 = add i64 %618, 2
  store i64 %619, i64* %PC.i1662
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %621 = bitcast %union.anon* %620 to i32*
  %622 = load i32, i32* %621, align 8
  %623 = zext i32 %622 to i64
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %625 = bitcast %union.anon* %624 to i32*
  %626 = load i32, i32* %625, align 8
  %627 = zext i32 %626 to i64
  %628 = shl i64 %617, 32
  %629 = ashr exact i64 %628, 32
  %630 = shl i64 %627, 32
  %631 = or i64 %630, %623
  %632 = sdiv i64 %631, %629
  %633 = shl i64 %632, 32
  %634 = ashr exact i64 %633, 32
  %635 = icmp eq i64 %632, %634
  br i1 %635, label %640, label %636

; <label>:636:                                    ; preds = %block_.L_40c0f3
  %637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %638 = load i64, i64* %637, align 8
  %639 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %638, %struct.Memory* %loadMem_40c121)
  br label %routine_idivl__ecx.exit1664

; <label>:640:                                    ; preds = %block_.L_40c0f3
  %641 = srem i64 %631, %629
  %642 = getelementptr inbounds %union.anon, %union.anon* %620, i64 0, i32 0
  %643 = and i64 %632, 4294967295
  store i64 %643, i64* %642, align 8
  %644 = getelementptr inbounds %union.anon, %union.anon* %624, i64 0, i32 0
  %645 = and i64 %641, 4294967295
  store i64 %645, i64* %644, align 8
  %646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %646, align 1
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %647, align 1
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %648, align 1
  %649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %649, align 1
  %650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %650, align 1
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %651, align 1
  br label %routine_idivl__ecx.exit1664

routine_idivl__ecx.exit1664:                      ; preds = %636, %640
  %652 = phi %struct.Memory* [ %639, %636 ], [ %loadMem_40c121, %640 ]
  store %struct.Memory* %652, %struct.Memory** %MEMORY
  %loadMem_40c123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %654 = getelementptr inbounds %struct.GPR, %struct.GPR* %653, i32 0, i32 33
  %655 = getelementptr inbounds %struct.Reg, %struct.Reg* %654, i32 0, i32 0
  %PC.i1660 = bitcast %union.anon* %655 to i64*
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %657 = getelementptr inbounds %struct.GPR, %struct.GPR* %656, i32 0, i32 1
  %658 = getelementptr inbounds %struct.Reg, %struct.Reg* %657, i32 0, i32 0
  %RAX.i1661 = bitcast %union.anon* %658 to i64*
  %659 = load i64, i64* %RAX.i1661
  %660 = load i64, i64* %PC.i1660
  %661 = add i64 %660, 3
  store i64 %661, i64* %PC.i1660
  %662 = trunc i64 %659 to i32
  %663 = sub i32 %662, 1
  %664 = zext i32 %663 to i64
  store i64 %664, i64* %RAX.i1661, align 8
  %665 = icmp ult i32 %662, 1
  %666 = zext i1 %665 to i8
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %666, i8* %667, align 1
  %668 = and i32 %663, 255
  %669 = call i32 @llvm.ctpop.i32(i32 %668)
  %670 = trunc i32 %669 to i8
  %671 = and i8 %670, 1
  %672 = xor i8 %671, 1
  %673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %672, i8* %673, align 1
  %674 = xor i64 1, %659
  %675 = trunc i64 %674 to i32
  %676 = xor i32 %675, %663
  %677 = lshr i32 %676, 4
  %678 = trunc i32 %677 to i8
  %679 = and i8 %678, 1
  %680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %679, i8* %680, align 1
  %681 = icmp eq i32 %663, 0
  %682 = zext i1 %681 to i8
  %683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %682, i8* %683, align 1
  %684 = lshr i32 %663, 31
  %685 = trunc i32 %684 to i8
  %686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %685, i8* %686, align 1
  %687 = lshr i32 %662, 31
  %688 = xor i32 %684, %687
  %689 = add i32 %688, %687
  %690 = icmp eq i32 %689, 2
  %691 = zext i1 %690 to i8
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %691, i8* %692, align 1
  store %struct.Memory* %loadMem_40c123, %struct.Memory** %MEMORY
  %loadMem_40c126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %694 = getelementptr inbounds %struct.GPR, %struct.GPR* %693, i32 0, i32 33
  %695 = getelementptr inbounds %struct.Reg, %struct.Reg* %694, i32 0, i32 0
  %PC.i1657 = bitcast %union.anon* %695 to i64*
  %696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %697 = getelementptr inbounds %struct.GPR, %struct.GPR* %696, i32 0, i32 17
  %698 = getelementptr inbounds %struct.Reg, %struct.Reg* %697, i32 0, i32 0
  %R8D.i1658 = bitcast %union.anon* %698 to i32*
  %699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %700 = getelementptr inbounds %struct.GPR, %struct.GPR* %699, i32 0, i32 15
  %701 = getelementptr inbounds %struct.Reg, %struct.Reg* %700, i32 0, i32 0
  %RBP.i1659 = bitcast %union.anon* %701 to i64*
  %702 = bitcast i32* %R8D.i1658 to i64*
  %703 = load i64, i64* %RBP.i1659
  %704 = sub i64 %703, 4
  %705 = load i64, i64* %PC.i1657
  %706 = add i64 %705, 4
  store i64 %706, i64* %PC.i1657
  %707 = inttoptr i64 %704 to i32*
  %708 = load i32, i32* %707
  %709 = zext i32 %708 to i64
  store i64 %709, i64* %702, align 8
  store %struct.Memory* %loadMem_40c126, %struct.Memory** %MEMORY
  %loadMem_40c12a = load %struct.Memory*, %struct.Memory** %MEMORY
  %710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %711 = getelementptr inbounds %struct.GPR, %struct.GPR* %710, i32 0, i32 33
  %712 = getelementptr inbounds %struct.Reg, %struct.Reg* %711, i32 0, i32 0
  %PC.i1654 = bitcast %union.anon* %712 to i64*
  %713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %714 = getelementptr inbounds %struct.GPR, %struct.GPR* %713, i32 0, i32 1
  %715 = getelementptr inbounds %struct.Reg, %struct.Reg* %714, i32 0, i32 0
  %EAX.i1655 = bitcast %union.anon* %715 to i32*
  %716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %717 = getelementptr inbounds %struct.GPR, %struct.GPR* %716, i32 0, i32 15
  %718 = getelementptr inbounds %struct.Reg, %struct.Reg* %717, i32 0, i32 0
  %RBP.i1656 = bitcast %union.anon* %718 to i64*
  %719 = load i64, i64* %RBP.i1656
  %720 = sub i64 %719, 36
  %721 = load i32, i32* %EAX.i1655
  %722 = zext i32 %721 to i64
  %723 = load i64, i64* %PC.i1654
  %724 = add i64 %723, 3
  store i64 %724, i64* %PC.i1654
  %725 = inttoptr i64 %720 to i32*
  store i32 %721, i32* %725
  store %struct.Memory* %loadMem_40c12a, %struct.Memory** %MEMORY
  %loadMem_40c12d = load %struct.Memory*, %struct.Memory** %MEMORY
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %727 = getelementptr inbounds %struct.GPR, %struct.GPR* %726, i32 0, i32 33
  %728 = getelementptr inbounds %struct.Reg, %struct.Reg* %727, i32 0, i32 0
  %PC.i1651 = bitcast %union.anon* %728 to i64*
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %730 = getelementptr inbounds %struct.GPR, %struct.GPR* %729, i32 0, i32 17
  %731 = getelementptr inbounds %struct.Reg, %struct.Reg* %730, i32 0, i32 0
  %R8D.i1652 = bitcast %union.anon* %731 to i32*
  %732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %733 = getelementptr inbounds %struct.GPR, %struct.GPR* %732, i32 0, i32 1
  %734 = getelementptr inbounds %struct.Reg, %struct.Reg* %733, i32 0, i32 0
  %RAX.i1653 = bitcast %union.anon* %734 to i64*
  %735 = load i32, i32* %R8D.i1652
  %736 = zext i32 %735 to i64
  %737 = load i64, i64* %PC.i1651
  %738 = add i64 %737, 3
  store i64 %738, i64* %PC.i1651
  %739 = and i64 %736, 4294967295
  store i64 %739, i64* %RAX.i1653, align 8
  store %struct.Memory* %loadMem_40c12d, %struct.Memory** %MEMORY
  %loadMem_40c130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %741 = getelementptr inbounds %struct.GPR, %struct.GPR* %740, i32 0, i32 33
  %742 = getelementptr inbounds %struct.Reg, %struct.Reg* %741, i32 0, i32 0
  %PC.i1650 = bitcast %union.anon* %742 to i64*
  %743 = load i64, i64* %PC.i1650
  %744 = add i64 %743, 1
  store i64 %744, i64* %PC.i1650
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %747 = bitcast %union.anon* %746 to i32*
  %748 = load i32, i32* %747, align 8
  %749 = sext i32 %748 to i64
  %750 = lshr i64 %749, 32
  store i64 %750, i64* %745, align 8
  store %struct.Memory* %loadMem_40c130, %struct.Memory** %MEMORY
  %loadMem_40c131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %752 = getelementptr inbounds %struct.GPR, %struct.GPR* %751, i32 0, i32 33
  %753 = getelementptr inbounds %struct.Reg, %struct.Reg* %752, i32 0, i32 0
  %PC.i1645 = bitcast %union.anon* %753 to i64*
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %755 = getelementptr inbounds %struct.GPR, %struct.GPR* %754, i32 0, i32 5
  %756 = getelementptr inbounds %struct.Reg, %struct.Reg* %755, i32 0, i32 0
  %ECX.i1646 = bitcast %union.anon* %756 to i32*
  %757 = load i32, i32* %ECX.i1646
  %758 = zext i32 %757 to i64
  %759 = load i64, i64* %PC.i1645
  %760 = add i64 %759, 2
  store i64 %760, i64* %PC.i1645
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %762 = bitcast %union.anon* %761 to i32*
  %763 = load i32, i32* %762, align 8
  %764 = zext i32 %763 to i64
  %765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %766 = bitcast %union.anon* %765 to i32*
  %767 = load i32, i32* %766, align 8
  %768 = zext i32 %767 to i64
  %769 = shl i64 %758, 32
  %770 = ashr exact i64 %769, 32
  %771 = shl i64 %768, 32
  %772 = or i64 %771, %764
  %773 = sdiv i64 %772, %770
  %774 = shl i64 %773, 32
  %775 = ashr exact i64 %774, 32
  %776 = icmp eq i64 %773, %775
  br i1 %776, label %781, label %777

; <label>:777:                                    ; preds = %routine_idivl__ecx.exit1664
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %779 = load i64, i64* %778, align 8
  %780 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %779, %struct.Memory* %loadMem_40c131)
  br label %routine_idivl__ecx.exit

; <label>:781:                                    ; preds = %routine_idivl__ecx.exit1664
  %782 = srem i64 %772, %770
  %783 = getelementptr inbounds %union.anon, %union.anon* %761, i64 0, i32 0
  %784 = and i64 %773, 4294967295
  store i64 %784, i64* %783, align 8
  %785 = getelementptr inbounds %union.anon, %union.anon* %765, i64 0, i32 0
  %786 = and i64 %782, 4294967295
  store i64 %786, i64* %785, align 8
  %787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %787, align 1
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %788, align 1
  %789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %789, align 1
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %790, align 1
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %791, align 1
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %792, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %777, %781
  %793 = phi %struct.Memory* [ %780, %777 ], [ %loadMem_40c131, %781 ]
  store %struct.Memory* %793, %struct.Memory** %MEMORY
  %loadMem_40c133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %795 = getelementptr inbounds %struct.GPR, %struct.GPR* %794, i32 0, i32 33
  %796 = getelementptr inbounds %struct.Reg, %struct.Reg* %795, i32 0, i32 0
  %PC.i1643 = bitcast %union.anon* %796 to i64*
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %798 = getelementptr inbounds %struct.GPR, %struct.GPR* %797, i32 0, i32 7
  %799 = getelementptr inbounds %struct.Reg, %struct.Reg* %798, i32 0, i32 0
  %RDX.i1644 = bitcast %union.anon* %799 to i64*
  %800 = load i64, i64* %RDX.i1644
  %801 = load i64, i64* %PC.i1643
  %802 = add i64 %801, 3
  store i64 %802, i64* %PC.i1643
  %803 = trunc i64 %800 to i32
  %804 = sub i32 %803, 1
  %805 = zext i32 %804 to i64
  store i64 %805, i64* %RDX.i1644, align 8
  %806 = icmp ult i32 %803, 1
  %807 = zext i1 %806 to i8
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %807, i8* %808, align 1
  %809 = and i32 %804, 255
  %810 = call i32 @llvm.ctpop.i32(i32 %809)
  %811 = trunc i32 %810 to i8
  %812 = and i8 %811, 1
  %813 = xor i8 %812, 1
  %814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %813, i8* %814, align 1
  %815 = xor i64 1, %800
  %816 = trunc i64 %815 to i32
  %817 = xor i32 %816, %804
  %818 = lshr i32 %817, 4
  %819 = trunc i32 %818 to i8
  %820 = and i8 %819, 1
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %820, i8* %821, align 1
  %822 = icmp eq i32 %804, 0
  %823 = zext i1 %822 to i8
  %824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %823, i8* %824, align 1
  %825 = lshr i32 %804, 31
  %826 = trunc i32 %825 to i8
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %826, i8* %827, align 1
  %828 = lshr i32 %803, 31
  %829 = xor i32 %825, %828
  %830 = add i32 %829, %828
  %831 = icmp eq i32 %830, 2
  %832 = zext i1 %831 to i8
  %833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %832, i8* %833, align 1
  store %struct.Memory* %loadMem_40c133, %struct.Memory** %MEMORY
  %loadMem_40c136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %835 = getelementptr inbounds %struct.GPR, %struct.GPR* %834, i32 0, i32 33
  %836 = getelementptr inbounds %struct.Reg, %struct.Reg* %835, i32 0, i32 0
  %PC.i1640 = bitcast %union.anon* %836 to i64*
  %837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %838 = getelementptr inbounds %struct.GPR, %struct.GPR* %837, i32 0, i32 15
  %839 = getelementptr inbounds %struct.Reg, %struct.Reg* %838, i32 0, i32 0
  %RBP.i1641 = bitcast %union.anon* %839 to i64*
  %840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %841 = getelementptr inbounds %struct.GPR, %struct.GPR* %840, i32 0, i32 19
  %842 = getelementptr inbounds %struct.Reg, %struct.Reg* %841, i32 0, i32 0
  %R9.i1642 = bitcast %union.anon* %842 to i64*
  %843 = load i64, i64* %RBP.i1641
  %844 = sub i64 %843, 32
  %845 = load i64, i64* %PC.i1640
  %846 = add i64 %845, 4
  store i64 %846, i64* %PC.i1640
  %847 = inttoptr i64 %844 to i64*
  %848 = load i64, i64* %847
  store i64 %848, i64* %R9.i1642, align 8
  store %struct.Memory* %loadMem_40c136, %struct.Memory** %MEMORY
  %loadMem_40c13a = load %struct.Memory*, %struct.Memory** %MEMORY
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %850 = getelementptr inbounds %struct.GPR, %struct.GPR* %849, i32 0, i32 33
  %851 = getelementptr inbounds %struct.Reg, %struct.Reg* %850, i32 0, i32 0
  %PC.i1637 = bitcast %union.anon* %851 to i64*
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 7
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %EDX.i1638 = bitcast %union.anon* %854 to i32*
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 15
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %RBP.i1639 = bitcast %union.anon* %857 to i64*
  %858 = load i64, i64* %RBP.i1639
  %859 = sub i64 %858, 40
  %860 = load i32, i32* %EDX.i1638
  %861 = zext i32 %860 to i64
  %862 = load i64, i64* %PC.i1637
  %863 = add i64 %862, 3
  store i64 %863, i64* %PC.i1637
  %864 = inttoptr i64 %859 to i32*
  store i32 %860, i32* %864
  store %struct.Memory* %loadMem_40c13a, %struct.Memory** %MEMORY
  %loadMem_40c13d = load %struct.Memory*, %struct.Memory** %MEMORY
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 33
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %PC.i1635 = bitcast %union.anon* %867 to i64*
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %869 = getelementptr inbounds %struct.GPR, %struct.GPR* %868, i32 0, i32 7
  %870 = getelementptr inbounds %struct.Reg, %struct.Reg* %869, i32 0, i32 0
  %RDX.i1636 = bitcast %union.anon* %870 to i64*
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %872 = getelementptr inbounds %struct.GPR, %struct.GPR* %871, i32 0, i32 19
  %873 = getelementptr inbounds %struct.Reg, %struct.Reg* %872, i32 0, i32 0
  %R9.i = bitcast %union.anon* %873 to i64*
  %874 = load i64, i64* %R9.i
  %875 = load i64, i64* %PC.i1635
  %876 = add i64 %875, 3
  store i64 %876, i64* %PC.i1635
  store i64 %874, i64* %RDX.i1636, align 8
  store %struct.Memory* %loadMem_40c13d, %struct.Memory** %MEMORY
  %loadMem_40c140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %878 = getelementptr inbounds %struct.GPR, %struct.GPR* %877, i32 0, i32 33
  %879 = getelementptr inbounds %struct.Reg, %struct.Reg* %878, i32 0, i32 0
  %PC.i1632 = bitcast %union.anon* %879 to i64*
  %880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %881 = getelementptr inbounds %struct.GPR, %struct.GPR* %880, i32 0, i32 5
  %882 = getelementptr inbounds %struct.Reg, %struct.Reg* %881, i32 0, i32 0
  %RCX.i1633 = bitcast %union.anon* %882 to i64*
  %883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %884 = getelementptr inbounds %struct.GPR, %struct.GPR* %883, i32 0, i32 15
  %885 = getelementptr inbounds %struct.Reg, %struct.Reg* %884, i32 0, i32 0
  %RBP.i1634 = bitcast %union.anon* %885 to i64*
  %886 = load i64, i64* %RBP.i1634
  %887 = sub i64 %886, 36
  %888 = load i64, i64* %PC.i1632
  %889 = add i64 %888, 3
  store i64 %889, i64* %PC.i1632
  %890 = inttoptr i64 %887 to i32*
  %891 = load i32, i32* %890
  %892 = zext i32 %891 to i64
  store i64 %892, i64* %RCX.i1633, align 8
  store %struct.Memory* %loadMem_40c140, %struct.Memory** %MEMORY
  %loadMem_40c143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %894 = getelementptr inbounds %struct.GPR, %struct.GPR* %893, i32 0, i32 33
  %895 = getelementptr inbounds %struct.Reg, %struct.Reg* %894, i32 0, i32 0
  %PC.i1629 = bitcast %union.anon* %895 to i64*
  %896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %897 = getelementptr inbounds %struct.GPR, %struct.GPR* %896, i32 0, i32 17
  %898 = getelementptr inbounds %struct.Reg, %struct.Reg* %897, i32 0, i32 0
  %R8D.i1630 = bitcast %union.anon* %898 to i32*
  %899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %900 = getelementptr inbounds %struct.GPR, %struct.GPR* %899, i32 0, i32 15
  %901 = getelementptr inbounds %struct.Reg, %struct.Reg* %900, i32 0, i32 0
  %RBP.i1631 = bitcast %union.anon* %901 to i64*
  %902 = bitcast i32* %R8D.i1630 to i64*
  %903 = load i64, i64* %RBP.i1631
  %904 = sub i64 %903, 40
  %905 = load i64, i64* %PC.i1629
  %906 = add i64 %905, 4
  store i64 %906, i64* %PC.i1629
  %907 = inttoptr i64 %904 to i32*
  %908 = load i32, i32* %907
  %909 = zext i32 %908 to i64
  store i64 %909, i64* %902, align 8
  store %struct.Memory* %loadMem_40c143, %struct.Memory** %MEMORY
  %loadMem1_40c147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %911 = getelementptr inbounds %struct.GPR, %struct.GPR* %910, i32 0, i32 33
  %912 = getelementptr inbounds %struct.Reg, %struct.Reg* %911, i32 0, i32 0
  %PC.i1628 = bitcast %union.anon* %912 to i64*
  %913 = load i64, i64* %PC.i1628
  %914 = add i64 %913, 286537
  %915 = load i64, i64* %PC.i1628
  %916 = add i64 %915, 5
  %917 = load i64, i64* %PC.i1628
  %918 = add i64 %917, 5
  store i64 %918, i64* %PC.i1628
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %920 = load i64, i64* %919, align 8
  %921 = add i64 %920, -8
  %922 = inttoptr i64 %921 to i64*
  store i64 %916, i64* %922
  store i64 %921, i64* %919, align 8
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %914, i64* %923, align 8
  store %struct.Memory* %loadMem1_40c147, %struct.Memory** %MEMORY
  %loadMem2_40c147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40c147 = load i64, i64* %3
  %call2_40c147 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_40c147, %struct.Memory* %loadMem2_40c147)
  store %struct.Memory* %call2_40c147, %struct.Memory** %MEMORY
  br label %block_.L_40c14c

block_.L_40c14c:                                  ; preds = %routine_idivl__ecx.exit, %block_40c0ee
  %loadMem_40c14c = load %struct.Memory*, %struct.Memory** %MEMORY
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %925 = getelementptr inbounds %struct.GPR, %struct.GPR* %924, i32 0, i32 33
  %926 = getelementptr inbounds %struct.Reg, %struct.Reg* %925, i32 0, i32 0
  %PC.i1626 = bitcast %union.anon* %926 to i64*
  %927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %928 = getelementptr inbounds %struct.GPR, %struct.GPR* %927, i32 0, i32 1
  %929 = getelementptr inbounds %struct.Reg, %struct.Reg* %928, i32 0, i32 0
  %RAX.i1627 = bitcast %union.anon* %929 to i64*
  %930 = load i64, i64* %PC.i1626
  %931 = add i64 %930, 10
  store i64 %931, i64* %PC.i1626
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1627, align 8
  store %struct.Memory* %loadMem_40c14c, %struct.Memory** %MEMORY
  %loadMem_40c156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %933 = getelementptr inbounds %struct.GPR, %struct.GPR* %932, i32 0, i32 33
  %934 = getelementptr inbounds %struct.Reg, %struct.Reg* %933, i32 0, i32 0
  %PC.i1623 = bitcast %union.anon* %934 to i64*
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %936 = getelementptr inbounds %struct.GPR, %struct.GPR* %935, i32 0, i32 5
  %937 = getelementptr inbounds %struct.Reg, %struct.Reg* %936, i32 0, i32 0
  %RCX.i1624 = bitcast %union.anon* %937 to i64*
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %939 = getelementptr inbounds %struct.GPR, %struct.GPR* %938, i32 0, i32 15
  %940 = getelementptr inbounds %struct.Reg, %struct.Reg* %939, i32 0, i32 0
  %RBP.i1625 = bitcast %union.anon* %940 to i64*
  %941 = load i64, i64* %RBP.i1625
  %942 = sub i64 %941, 8
  %943 = load i64, i64* %PC.i1623
  %944 = add i64 %943, 3
  store i64 %944, i64* %PC.i1623
  %945 = inttoptr i64 %942 to i32*
  %946 = load i32, i32* %945
  %947 = zext i32 %946 to i64
  store i64 %947, i64* %RCX.i1624, align 8
  store %struct.Memory* %loadMem_40c156, %struct.Memory** %MEMORY
  %loadMem_40c159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %949 = getelementptr inbounds %struct.GPR, %struct.GPR* %948, i32 0, i32 33
  %950 = getelementptr inbounds %struct.Reg, %struct.Reg* %949, i32 0, i32 0
  %PC.i1620 = bitcast %union.anon* %950 to i64*
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %952 = getelementptr inbounds %struct.GPR, %struct.GPR* %951, i32 0, i32 7
  %953 = getelementptr inbounds %struct.Reg, %struct.Reg* %952, i32 0, i32 0
  %RDX.i1621 = bitcast %union.anon* %953 to i64*
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %955 = getelementptr inbounds %struct.GPR, %struct.GPR* %954, i32 0, i32 15
  %956 = getelementptr inbounds %struct.Reg, %struct.Reg* %955, i32 0, i32 0
  %RBP.i1622 = bitcast %union.anon* %956 to i64*
  %957 = load i64, i64* %RBP.i1622
  %958 = sub i64 %957, 4
  %959 = load i64, i64* %PC.i1620
  %960 = add i64 %959, 4
  store i64 %960, i64* %PC.i1620
  %961 = inttoptr i64 %958 to i32*
  %962 = load i32, i32* %961
  %963 = sext i32 %962 to i64
  store i64 %963, i64* %RDX.i1621, align 8
  store %struct.Memory* %loadMem_40c159, %struct.Memory** %MEMORY
  %loadMem_40c15d = load %struct.Memory*, %struct.Memory** %MEMORY
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %965 = getelementptr inbounds %struct.GPR, %struct.GPR* %964, i32 0, i32 33
  %966 = getelementptr inbounds %struct.Reg, %struct.Reg* %965, i32 0, i32 0
  %PC.i1617 = bitcast %union.anon* %966 to i64*
  %967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %968 = getelementptr inbounds %struct.GPR, %struct.GPR* %967, i32 0, i32 5
  %969 = getelementptr inbounds %struct.Reg, %struct.Reg* %968, i32 0, i32 0
  %ECX.i1618 = bitcast %union.anon* %969 to i32*
  %970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %971 = getelementptr inbounds %struct.GPR, %struct.GPR* %970, i32 0, i32 7
  %972 = getelementptr inbounds %struct.Reg, %struct.Reg* %971, i32 0, i32 0
  %RDX.i1619 = bitcast %union.anon* %972 to i64*
  %973 = load i64, i64* %RDX.i1619
  %974 = mul i64 %973, 4
  %975 = add i64 %974, 11187184
  %976 = load i32, i32* %ECX.i1618
  %977 = zext i32 %976 to i64
  %978 = load i64, i64* %PC.i1617
  %979 = add i64 %978, 7
  store i64 %979, i64* %PC.i1617
  %980 = inttoptr i64 %975 to i32*
  store i32 %976, i32* %980
  store %struct.Memory* %loadMem_40c15d, %struct.Memory** %MEMORY
  %loadMem_40c164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %982 = getelementptr inbounds %struct.GPR, %struct.GPR* %981, i32 0, i32 33
  %983 = getelementptr inbounds %struct.Reg, %struct.Reg* %982, i32 0, i32 0
  %PC.i1614 = bitcast %union.anon* %983 to i64*
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %985 = getelementptr inbounds %struct.GPR, %struct.GPR* %984, i32 0, i32 5
  %986 = getelementptr inbounds %struct.Reg, %struct.Reg* %985, i32 0, i32 0
  %RCX.i1615 = bitcast %union.anon* %986 to i64*
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %988 = getelementptr inbounds %struct.GPR, %struct.GPR* %987, i32 0, i32 15
  %989 = getelementptr inbounds %struct.Reg, %struct.Reg* %988, i32 0, i32 0
  %RBP.i1616 = bitcast %union.anon* %989 to i64*
  %990 = load i64, i64* %RBP.i1616
  %991 = sub i64 %990, 4
  %992 = load i64, i64* %PC.i1614
  %993 = add i64 %992, 3
  store i64 %993, i64* %PC.i1614
  %994 = inttoptr i64 %991 to i32*
  %995 = load i32, i32* %994
  %996 = zext i32 %995 to i64
  store i64 %996, i64* %RCX.i1615, align 8
  store %struct.Memory* %loadMem_40c164, %struct.Memory** %MEMORY
  %loadMem_40c167 = load %struct.Memory*, %struct.Memory** %MEMORY
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %998 = getelementptr inbounds %struct.GPR, %struct.GPR* %997, i32 0, i32 33
  %999 = getelementptr inbounds %struct.Reg, %struct.Reg* %998, i32 0, i32 0
  %PC.i1611 = bitcast %union.anon* %999 to i64*
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1001 = getelementptr inbounds %struct.GPR, %struct.GPR* %1000, i32 0, i32 7
  %1002 = getelementptr inbounds %struct.Reg, %struct.Reg* %1001, i32 0, i32 0
  %RDX.i1612 = bitcast %union.anon* %1002 to i64*
  %1003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1004 = getelementptr inbounds %struct.GPR, %struct.GPR* %1003, i32 0, i32 15
  %1005 = getelementptr inbounds %struct.Reg, %struct.Reg* %1004, i32 0, i32 0
  %RBP.i1613 = bitcast %union.anon* %1005 to i64*
  %1006 = load i64, i64* %RBP.i1613
  %1007 = sub i64 %1006, 4
  %1008 = load i64, i64* %PC.i1611
  %1009 = add i64 %1008, 4
  store i64 %1009, i64* %PC.i1611
  %1010 = inttoptr i64 %1007 to i32*
  %1011 = load i32, i32* %1010
  %1012 = sext i32 %1011 to i64
  store i64 %1012, i64* %RDX.i1612, align 8
  store %struct.Memory* %loadMem_40c167, %struct.Memory** %MEMORY
  %loadMem_40c16b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1014 = getelementptr inbounds %struct.GPR, %struct.GPR* %1013, i32 0, i32 33
  %1015 = getelementptr inbounds %struct.Reg, %struct.Reg* %1014, i32 0, i32 0
  %PC.i1608 = bitcast %union.anon* %1015 to i64*
  %1016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1017 = getelementptr inbounds %struct.GPR, %struct.GPR* %1016, i32 0, i32 5
  %1018 = getelementptr inbounds %struct.Reg, %struct.Reg* %1017, i32 0, i32 0
  %ECX.i1609 = bitcast %union.anon* %1018 to i32*
  %1019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1020 = getelementptr inbounds %struct.GPR, %struct.GPR* %1019, i32 0, i32 7
  %1021 = getelementptr inbounds %struct.Reg, %struct.Reg* %1020, i32 0, i32 0
  %RDX.i1610 = bitcast %union.anon* %1021 to i64*
  %1022 = load i64, i64* %RDX.i1610
  %1023 = mul i64 %1022, 4
  %1024 = add i64 %1023, 11188784
  %1025 = load i32, i32* %ECX.i1609
  %1026 = zext i32 %1025 to i64
  %1027 = load i64, i64* %PC.i1608
  %1028 = add i64 %1027, 7
  store i64 %1028, i64* %PC.i1608
  %1029 = inttoptr i64 %1024 to i32*
  store i32 %1025, i32* %1029
  store %struct.Memory* %loadMem_40c16b, %struct.Memory** %MEMORY
  %loadMem_40c172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1031 = getelementptr inbounds %struct.GPR, %struct.GPR* %1030, i32 0, i32 33
  %1032 = getelementptr inbounds %struct.Reg, %struct.Reg* %1031, i32 0, i32 0
  %PC.i1605 = bitcast %union.anon* %1032 to i64*
  %1033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1034 = getelementptr inbounds %struct.GPR, %struct.GPR* %1033, i32 0, i32 5
  %1035 = getelementptr inbounds %struct.Reg, %struct.Reg* %1034, i32 0, i32 0
  %RCX.i1606 = bitcast %union.anon* %1035 to i64*
  %1036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1037 = getelementptr inbounds %struct.GPR, %struct.GPR* %1036, i32 0, i32 15
  %1038 = getelementptr inbounds %struct.Reg, %struct.Reg* %1037, i32 0, i32 0
  %RBP.i1607 = bitcast %union.anon* %1038 to i64*
  %1039 = load i64, i64* %RBP.i1607
  %1040 = sub i64 %1039, 12
  %1041 = load i64, i64* %PC.i1605
  %1042 = add i64 %1041, 3
  store i64 %1042, i64* %PC.i1605
  %1043 = inttoptr i64 %1040 to i32*
  %1044 = load i32, i32* %1043
  %1045 = zext i32 %1044 to i64
  store i64 %1045, i64* %RCX.i1606, align 8
  store %struct.Memory* %loadMem_40c172, %struct.Memory** %MEMORY
  %loadMem_40c175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1047 = getelementptr inbounds %struct.GPR, %struct.GPR* %1046, i32 0, i32 33
  %1048 = getelementptr inbounds %struct.Reg, %struct.Reg* %1047, i32 0, i32 0
  %PC.i1602 = bitcast %union.anon* %1048 to i64*
  %1049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1050 = getelementptr inbounds %struct.GPR, %struct.GPR* %1049, i32 0, i32 7
  %1051 = getelementptr inbounds %struct.Reg, %struct.Reg* %1050, i32 0, i32 0
  %RDX.i1603 = bitcast %union.anon* %1051 to i64*
  %1052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1053 = getelementptr inbounds %struct.GPR, %struct.GPR* %1052, i32 0, i32 15
  %1054 = getelementptr inbounds %struct.Reg, %struct.Reg* %1053, i32 0, i32 0
  %RBP.i1604 = bitcast %union.anon* %1054 to i64*
  %1055 = load i64, i64* %RBP.i1604
  %1056 = sub i64 %1055, 8
  %1057 = load i64, i64* %PC.i1602
  %1058 = add i64 %1057, 4
  store i64 %1058, i64* %PC.i1602
  %1059 = inttoptr i64 %1056 to i32*
  %1060 = load i32, i32* %1059
  %1061 = sext i32 %1060 to i64
  store i64 %1061, i64* %RDX.i1603, align 8
  store %struct.Memory* %loadMem_40c175, %struct.Memory** %MEMORY
  %loadMem_40c179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1063 = getelementptr inbounds %struct.GPR, %struct.GPR* %1062, i32 0, i32 33
  %1064 = getelementptr inbounds %struct.Reg, %struct.Reg* %1063, i32 0, i32 0
  %PC.i1600 = bitcast %union.anon* %1064 to i64*
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1066 = getelementptr inbounds %struct.GPR, %struct.GPR* %1065, i32 0, i32 7
  %1067 = getelementptr inbounds %struct.Reg, %struct.Reg* %1066, i32 0, i32 0
  %RDX.i1601 = bitcast %union.anon* %1067 to i64*
  %1068 = load i64, i64* %RDX.i1601
  %1069 = load i64, i64* %PC.i1600
  %1070 = add i64 %1069, 7
  store i64 %1070, i64* %PC.i1600
  %1071 = sext i64 %1068 to i128
  %1072 = and i128 %1071, -18446744073709551616
  %1073 = zext i64 %1068 to i128
  %1074 = or i128 %1072, %1073
  %1075 = mul i128 744, %1074
  %1076 = trunc i128 %1075 to i64
  store i64 %1076, i64* %RDX.i1601, align 8
  %1077 = sext i64 %1076 to i128
  %1078 = icmp ne i128 %1077, %1075
  %1079 = zext i1 %1078 to i8
  %1080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1079, i8* %1080, align 1
  %1081 = trunc i128 %1075 to i32
  %1082 = and i32 %1081, 255
  %1083 = call i32 @llvm.ctpop.i32(i32 %1082)
  %1084 = trunc i32 %1083 to i8
  %1085 = and i8 %1084, 1
  %1086 = xor i8 %1085, 1
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1086, i8* %1087, align 1
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1088, align 1
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1089, align 1
  %1090 = lshr i64 %1076, 63
  %1091 = trunc i64 %1090 to i8
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1091, i8* %1092, align 1
  %1093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1079, i8* %1093, align 1
  store %struct.Memory* %loadMem_40c179, %struct.Memory** %MEMORY
  %loadMem_40c180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1095 = getelementptr inbounds %struct.GPR, %struct.GPR* %1094, i32 0, i32 33
  %1096 = getelementptr inbounds %struct.Reg, %struct.Reg* %1095, i32 0, i32 0
  %PC.i1597 = bitcast %union.anon* %1096 to i64*
  %1097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1098 = getelementptr inbounds %struct.GPR, %struct.GPR* %1097, i32 0, i32 1
  %1099 = getelementptr inbounds %struct.Reg, %struct.Reg* %1098, i32 0, i32 0
  %RAX.i1598 = bitcast %union.anon* %1099 to i64*
  %1100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1101 = getelementptr inbounds %struct.GPR, %struct.GPR* %1100, i32 0, i32 9
  %1102 = getelementptr inbounds %struct.Reg, %struct.Reg* %1101, i32 0, i32 0
  %RSI.i1599 = bitcast %union.anon* %1102 to i64*
  %1103 = load i64, i64* %RAX.i1598
  %1104 = load i64, i64* %PC.i1597
  %1105 = add i64 %1104, 3
  store i64 %1105, i64* %PC.i1597
  store i64 %1103, i64* %RSI.i1599, align 8
  store %struct.Memory* %loadMem_40c180, %struct.Memory** %MEMORY
  %loadMem_40c183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1107 = getelementptr inbounds %struct.GPR, %struct.GPR* %1106, i32 0, i32 33
  %1108 = getelementptr inbounds %struct.Reg, %struct.Reg* %1107, i32 0, i32 0
  %PC.i1594 = bitcast %union.anon* %1108 to i64*
  %1109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1110 = getelementptr inbounds %struct.GPR, %struct.GPR* %1109, i32 0, i32 7
  %1111 = getelementptr inbounds %struct.Reg, %struct.Reg* %1110, i32 0, i32 0
  %RDX.i1595 = bitcast %union.anon* %1111 to i64*
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1113 = getelementptr inbounds %struct.GPR, %struct.GPR* %1112, i32 0, i32 9
  %1114 = getelementptr inbounds %struct.Reg, %struct.Reg* %1113, i32 0, i32 0
  %RSI.i1596 = bitcast %union.anon* %1114 to i64*
  %1115 = load i64, i64* %RSI.i1596
  %1116 = load i64, i64* %RDX.i1595
  %1117 = load i64, i64* %PC.i1594
  %1118 = add i64 %1117, 3
  store i64 %1118, i64* %PC.i1594
  %1119 = add i64 %1116, %1115
  store i64 %1119, i64* %RSI.i1596, align 8
  %1120 = icmp ult i64 %1119, %1115
  %1121 = icmp ult i64 %1119, %1116
  %1122 = or i1 %1120, %1121
  %1123 = zext i1 %1122 to i8
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1123, i8* %1124, align 1
  %1125 = trunc i64 %1119 to i32
  %1126 = and i32 %1125, 255
  %1127 = call i32 @llvm.ctpop.i32(i32 %1126)
  %1128 = trunc i32 %1127 to i8
  %1129 = and i8 %1128, 1
  %1130 = xor i8 %1129, 1
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1130, i8* %1131, align 1
  %1132 = xor i64 %1116, %1115
  %1133 = xor i64 %1132, %1119
  %1134 = lshr i64 %1133, 4
  %1135 = trunc i64 %1134 to i8
  %1136 = and i8 %1135, 1
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1136, i8* %1137, align 1
  %1138 = icmp eq i64 %1119, 0
  %1139 = zext i1 %1138 to i8
  %1140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1139, i8* %1140, align 1
  %1141 = lshr i64 %1119, 63
  %1142 = trunc i64 %1141 to i8
  %1143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1142, i8* %1143, align 1
  %1144 = lshr i64 %1115, 63
  %1145 = lshr i64 %1116, 63
  %1146 = xor i64 %1141, %1144
  %1147 = xor i64 %1141, %1145
  %1148 = add i64 %1146, %1147
  %1149 = icmp eq i64 %1148, 2
  %1150 = zext i1 %1149 to i8
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1150, i8* %1151, align 1
  store %struct.Memory* %loadMem_40c183, %struct.Memory** %MEMORY
  %loadMem_40c186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1153 = getelementptr inbounds %struct.GPR, %struct.GPR* %1152, i32 0, i32 33
  %1154 = getelementptr inbounds %struct.Reg, %struct.Reg* %1153, i32 0, i32 0
  %PC.i1591 = bitcast %union.anon* %1154 to i64*
  %1155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1156 = getelementptr inbounds %struct.GPR, %struct.GPR* %1155, i32 0, i32 5
  %1157 = getelementptr inbounds %struct.Reg, %struct.Reg* %1156, i32 0, i32 0
  %ECX.i1592 = bitcast %union.anon* %1157 to i32*
  %1158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1159 = getelementptr inbounds %struct.GPR, %struct.GPR* %1158, i32 0, i32 9
  %1160 = getelementptr inbounds %struct.Reg, %struct.Reg* %1159, i32 0, i32 0
  %RSI.i1593 = bitcast %union.anon* %1160 to i64*
  %1161 = load i64, i64* %RSI.i1593
  %1162 = load i32, i32* %ECX.i1592
  %1163 = zext i32 %1162 to i64
  %1164 = load i64, i64* %PC.i1591
  %1165 = add i64 %1164, 2
  store i64 %1165, i64* %PC.i1591
  %1166 = inttoptr i64 %1161 to i32*
  store i32 %1162, i32* %1166
  store %struct.Memory* %loadMem_40c186, %struct.Memory** %MEMORY
  %loadMem_40c188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1168 = getelementptr inbounds %struct.GPR, %struct.GPR* %1167, i32 0, i32 33
  %1169 = getelementptr inbounds %struct.Reg, %struct.Reg* %1168, i32 0, i32 0
  %PC.i1588 = bitcast %union.anon* %1169 to i64*
  %1170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1171 = getelementptr inbounds %struct.GPR, %struct.GPR* %1170, i32 0, i32 7
  %1172 = getelementptr inbounds %struct.Reg, %struct.Reg* %1171, i32 0, i32 0
  %RDX.i1589 = bitcast %union.anon* %1172 to i64*
  %1173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1174 = getelementptr inbounds %struct.GPR, %struct.GPR* %1173, i32 0, i32 15
  %1175 = getelementptr inbounds %struct.Reg, %struct.Reg* %1174, i32 0, i32 0
  %RBP.i1590 = bitcast %union.anon* %1175 to i64*
  %1176 = load i64, i64* %RBP.i1590
  %1177 = sub i64 %1176, 8
  %1178 = load i64, i64* %PC.i1588
  %1179 = add i64 %1178, 4
  store i64 %1179, i64* %PC.i1588
  %1180 = inttoptr i64 %1177 to i32*
  %1181 = load i32, i32* %1180
  %1182 = sext i32 %1181 to i64
  store i64 %1182, i64* %RDX.i1589, align 8
  store %struct.Memory* %loadMem_40c188, %struct.Memory** %MEMORY
  %loadMem_40c18c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1184 = getelementptr inbounds %struct.GPR, %struct.GPR* %1183, i32 0, i32 33
  %1185 = getelementptr inbounds %struct.Reg, %struct.Reg* %1184, i32 0, i32 0
  %PC.i1586 = bitcast %union.anon* %1185 to i64*
  %1186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1187 = getelementptr inbounds %struct.GPR, %struct.GPR* %1186, i32 0, i32 7
  %1188 = getelementptr inbounds %struct.Reg, %struct.Reg* %1187, i32 0, i32 0
  %RDX.i1587 = bitcast %union.anon* %1188 to i64*
  %1189 = load i64, i64* %RDX.i1587
  %1190 = load i64, i64* %PC.i1586
  %1191 = add i64 %1190, 7
  store i64 %1191, i64* %PC.i1586
  %1192 = sext i64 %1189 to i128
  %1193 = and i128 %1192, -18446744073709551616
  %1194 = zext i64 %1189 to i128
  %1195 = or i128 %1193, %1194
  %1196 = mul i128 744, %1195
  %1197 = trunc i128 %1196 to i64
  store i64 %1197, i64* %RDX.i1587, align 8
  %1198 = sext i64 %1197 to i128
  %1199 = icmp ne i128 %1198, %1196
  %1200 = zext i1 %1199 to i8
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1200, i8* %1201, align 1
  %1202 = trunc i128 %1196 to i32
  %1203 = and i32 %1202, 255
  %1204 = call i32 @llvm.ctpop.i32(i32 %1203)
  %1205 = trunc i32 %1204 to i8
  %1206 = and i8 %1205, 1
  %1207 = xor i8 %1206, 1
  %1208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1207, i8* %1208, align 1
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1209, align 1
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1210, align 1
  %1211 = lshr i64 %1197, 63
  %1212 = trunc i64 %1211 to i8
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1212, i8* %1213, align 1
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1200, i8* %1214, align 1
  store %struct.Memory* %loadMem_40c18c, %struct.Memory** %MEMORY
  %loadMem_40c193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1216 = getelementptr inbounds %struct.GPR, %struct.GPR* %1215, i32 0, i32 33
  %1217 = getelementptr inbounds %struct.Reg, %struct.Reg* %1216, i32 0, i32 0
  %PC.i1583 = bitcast %union.anon* %1217 to i64*
  %1218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1219 = getelementptr inbounds %struct.GPR, %struct.GPR* %1218, i32 0, i32 1
  %1220 = getelementptr inbounds %struct.Reg, %struct.Reg* %1219, i32 0, i32 0
  %RAX.i1584 = bitcast %union.anon* %1220 to i64*
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1222 = getelementptr inbounds %struct.GPR, %struct.GPR* %1221, i32 0, i32 9
  %1223 = getelementptr inbounds %struct.Reg, %struct.Reg* %1222, i32 0, i32 0
  %RSI.i1585 = bitcast %union.anon* %1223 to i64*
  %1224 = load i64, i64* %RAX.i1584
  %1225 = load i64, i64* %PC.i1583
  %1226 = add i64 %1225, 3
  store i64 %1226, i64* %PC.i1583
  store i64 %1224, i64* %RSI.i1585, align 8
  store %struct.Memory* %loadMem_40c193, %struct.Memory** %MEMORY
  %loadMem_40c196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1228 = getelementptr inbounds %struct.GPR, %struct.GPR* %1227, i32 0, i32 33
  %1229 = getelementptr inbounds %struct.Reg, %struct.Reg* %1228, i32 0, i32 0
  %PC.i1580 = bitcast %union.anon* %1229 to i64*
  %1230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1231 = getelementptr inbounds %struct.GPR, %struct.GPR* %1230, i32 0, i32 7
  %1232 = getelementptr inbounds %struct.Reg, %struct.Reg* %1231, i32 0, i32 0
  %RDX.i1581 = bitcast %union.anon* %1232 to i64*
  %1233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1234 = getelementptr inbounds %struct.GPR, %struct.GPR* %1233, i32 0, i32 9
  %1235 = getelementptr inbounds %struct.Reg, %struct.Reg* %1234, i32 0, i32 0
  %RSI.i1582 = bitcast %union.anon* %1235 to i64*
  %1236 = load i64, i64* %RSI.i1582
  %1237 = load i64, i64* %RDX.i1581
  %1238 = load i64, i64* %PC.i1580
  %1239 = add i64 %1238, 3
  store i64 %1239, i64* %PC.i1580
  %1240 = add i64 %1237, %1236
  store i64 %1240, i64* %RSI.i1582, align 8
  %1241 = icmp ult i64 %1240, %1236
  %1242 = icmp ult i64 %1240, %1237
  %1243 = or i1 %1241, %1242
  %1244 = zext i1 %1243 to i8
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1244, i8* %1245, align 1
  %1246 = trunc i64 %1240 to i32
  %1247 = and i32 %1246, 255
  %1248 = call i32 @llvm.ctpop.i32(i32 %1247)
  %1249 = trunc i32 %1248 to i8
  %1250 = and i8 %1249, 1
  %1251 = xor i8 %1250, 1
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1251, i8* %1252, align 1
  %1253 = xor i64 %1237, %1236
  %1254 = xor i64 %1253, %1240
  %1255 = lshr i64 %1254, 4
  %1256 = trunc i64 %1255 to i8
  %1257 = and i8 %1256, 1
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1257, i8* %1258, align 1
  %1259 = icmp eq i64 %1240, 0
  %1260 = zext i1 %1259 to i8
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1260, i8* %1261, align 1
  %1262 = lshr i64 %1240, 63
  %1263 = trunc i64 %1262 to i8
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1263, i8* %1264, align 1
  %1265 = lshr i64 %1236, 63
  %1266 = lshr i64 %1237, 63
  %1267 = xor i64 %1262, %1265
  %1268 = xor i64 %1262, %1266
  %1269 = add i64 %1267, %1268
  %1270 = icmp eq i64 %1269, 2
  %1271 = zext i1 %1270 to i8
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1271, i8* %1272, align 1
  store %struct.Memory* %loadMem_40c196, %struct.Memory** %MEMORY
  %loadMem_40c199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1274 = getelementptr inbounds %struct.GPR, %struct.GPR* %1273, i32 0, i32 33
  %1275 = getelementptr inbounds %struct.Reg, %struct.Reg* %1274, i32 0, i32 0
  %PC.i1578 = bitcast %union.anon* %1275 to i64*
  %1276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1277 = getelementptr inbounds %struct.GPR, %struct.GPR* %1276, i32 0, i32 9
  %1278 = getelementptr inbounds %struct.Reg, %struct.Reg* %1277, i32 0, i32 0
  %RSI.i1579 = bitcast %union.anon* %1278 to i64*
  %1279 = load i64, i64* %RSI.i1579
  %1280 = add i64 %1279, 4
  %1281 = load i64, i64* %PC.i1578
  %1282 = add i64 %1281, 7
  store i64 %1282, i64* %PC.i1578
  %1283 = inttoptr i64 %1280 to i32*
  store i32 1, i32* %1283
  store %struct.Memory* %loadMem_40c199, %struct.Memory** %MEMORY
  %loadMem_40c1a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1285 = getelementptr inbounds %struct.GPR, %struct.GPR* %1284, i32 0, i32 33
  %1286 = getelementptr inbounds %struct.Reg, %struct.Reg* %1285, i32 0, i32 0
  %PC.i1575 = bitcast %union.anon* %1286 to i64*
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1288 = getelementptr inbounds %struct.GPR, %struct.GPR* %1287, i32 0, i32 5
  %1289 = getelementptr inbounds %struct.Reg, %struct.Reg* %1288, i32 0, i32 0
  %RCX.i1576 = bitcast %union.anon* %1289 to i64*
  %1290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1291 = getelementptr inbounds %struct.GPR, %struct.GPR* %1290, i32 0, i32 15
  %1292 = getelementptr inbounds %struct.Reg, %struct.Reg* %1291, i32 0, i32 0
  %RBP.i1577 = bitcast %union.anon* %1292 to i64*
  %1293 = load i64, i64* %RBP.i1577
  %1294 = sub i64 %1293, 4
  %1295 = load i64, i64* %PC.i1575
  %1296 = add i64 %1295, 3
  store i64 %1296, i64* %PC.i1575
  %1297 = inttoptr i64 %1294 to i32*
  %1298 = load i32, i32* %1297
  %1299 = zext i32 %1298 to i64
  store i64 %1299, i64* %RCX.i1576, align 8
  store %struct.Memory* %loadMem_40c1a0, %struct.Memory** %MEMORY
  %loadMem_40c1a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1301 = getelementptr inbounds %struct.GPR, %struct.GPR* %1300, i32 0, i32 33
  %1302 = getelementptr inbounds %struct.Reg, %struct.Reg* %1301, i32 0, i32 0
  %PC.i1572 = bitcast %union.anon* %1302 to i64*
  %1303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1304 = getelementptr inbounds %struct.GPR, %struct.GPR* %1303, i32 0, i32 7
  %1305 = getelementptr inbounds %struct.Reg, %struct.Reg* %1304, i32 0, i32 0
  %RDX.i1573 = bitcast %union.anon* %1305 to i64*
  %1306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1307 = getelementptr inbounds %struct.GPR, %struct.GPR* %1306, i32 0, i32 15
  %1308 = getelementptr inbounds %struct.Reg, %struct.Reg* %1307, i32 0, i32 0
  %RBP.i1574 = bitcast %union.anon* %1308 to i64*
  %1309 = load i64, i64* %RBP.i1574
  %1310 = sub i64 %1309, 8
  %1311 = load i64, i64* %PC.i1572
  %1312 = add i64 %1311, 4
  store i64 %1312, i64* %PC.i1572
  %1313 = inttoptr i64 %1310 to i32*
  %1314 = load i32, i32* %1313
  %1315 = sext i32 %1314 to i64
  store i64 %1315, i64* %RDX.i1573, align 8
  store %struct.Memory* %loadMem_40c1a3, %struct.Memory** %MEMORY
  %loadMem_40c1a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1317 = getelementptr inbounds %struct.GPR, %struct.GPR* %1316, i32 0, i32 33
  %1318 = getelementptr inbounds %struct.Reg, %struct.Reg* %1317, i32 0, i32 0
  %PC.i1570 = bitcast %union.anon* %1318 to i64*
  %1319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1320 = getelementptr inbounds %struct.GPR, %struct.GPR* %1319, i32 0, i32 7
  %1321 = getelementptr inbounds %struct.Reg, %struct.Reg* %1320, i32 0, i32 0
  %RDX.i1571 = bitcast %union.anon* %1321 to i64*
  %1322 = load i64, i64* %RDX.i1571
  %1323 = load i64, i64* %PC.i1570
  %1324 = add i64 %1323, 7
  store i64 %1324, i64* %PC.i1570
  %1325 = sext i64 %1322 to i128
  %1326 = and i128 %1325, -18446744073709551616
  %1327 = zext i64 %1322 to i128
  %1328 = or i128 %1326, %1327
  %1329 = mul i128 744, %1328
  %1330 = trunc i128 %1329 to i64
  store i64 %1330, i64* %RDX.i1571, align 8
  %1331 = sext i64 %1330 to i128
  %1332 = icmp ne i128 %1331, %1329
  %1333 = zext i1 %1332 to i8
  %1334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1333, i8* %1334, align 1
  %1335 = trunc i128 %1329 to i32
  %1336 = and i32 %1335, 255
  %1337 = call i32 @llvm.ctpop.i32(i32 %1336)
  %1338 = trunc i32 %1337 to i8
  %1339 = and i8 %1338, 1
  %1340 = xor i8 %1339, 1
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1340, i8* %1341, align 1
  %1342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1342, align 1
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1343, align 1
  %1344 = lshr i64 %1330, 63
  %1345 = trunc i64 %1344 to i8
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1345, i8* %1346, align 1
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1333, i8* %1347, align 1
  store %struct.Memory* %loadMem_40c1a7, %struct.Memory** %MEMORY
  %loadMem_40c1ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1349 = getelementptr inbounds %struct.GPR, %struct.GPR* %1348, i32 0, i32 33
  %1350 = getelementptr inbounds %struct.Reg, %struct.Reg* %1349, i32 0, i32 0
  %PC.i1567 = bitcast %union.anon* %1350 to i64*
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1352 = getelementptr inbounds %struct.GPR, %struct.GPR* %1351, i32 0, i32 1
  %1353 = getelementptr inbounds %struct.Reg, %struct.Reg* %1352, i32 0, i32 0
  %RAX.i1568 = bitcast %union.anon* %1353 to i64*
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1355 = getelementptr inbounds %struct.GPR, %struct.GPR* %1354, i32 0, i32 9
  %1356 = getelementptr inbounds %struct.Reg, %struct.Reg* %1355, i32 0, i32 0
  %RSI.i1569 = bitcast %union.anon* %1356 to i64*
  %1357 = load i64, i64* %RAX.i1568
  %1358 = load i64, i64* %PC.i1567
  %1359 = add i64 %1358, 3
  store i64 %1359, i64* %PC.i1567
  store i64 %1357, i64* %RSI.i1569, align 8
  store %struct.Memory* %loadMem_40c1ae, %struct.Memory** %MEMORY
  %loadMem_40c1b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1361 = getelementptr inbounds %struct.GPR, %struct.GPR* %1360, i32 0, i32 33
  %1362 = getelementptr inbounds %struct.Reg, %struct.Reg* %1361, i32 0, i32 0
  %PC.i1564 = bitcast %union.anon* %1362 to i64*
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1364 = getelementptr inbounds %struct.GPR, %struct.GPR* %1363, i32 0, i32 7
  %1365 = getelementptr inbounds %struct.Reg, %struct.Reg* %1364, i32 0, i32 0
  %RDX.i1565 = bitcast %union.anon* %1365 to i64*
  %1366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1367 = getelementptr inbounds %struct.GPR, %struct.GPR* %1366, i32 0, i32 9
  %1368 = getelementptr inbounds %struct.Reg, %struct.Reg* %1367, i32 0, i32 0
  %RSI.i1566 = bitcast %union.anon* %1368 to i64*
  %1369 = load i64, i64* %RSI.i1566
  %1370 = load i64, i64* %RDX.i1565
  %1371 = load i64, i64* %PC.i1564
  %1372 = add i64 %1371, 3
  store i64 %1372, i64* %PC.i1564
  %1373 = add i64 %1370, %1369
  store i64 %1373, i64* %RSI.i1566, align 8
  %1374 = icmp ult i64 %1373, %1369
  %1375 = icmp ult i64 %1373, %1370
  %1376 = or i1 %1374, %1375
  %1377 = zext i1 %1376 to i8
  %1378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1377, i8* %1378, align 1
  %1379 = trunc i64 %1373 to i32
  %1380 = and i32 %1379, 255
  %1381 = call i32 @llvm.ctpop.i32(i32 %1380)
  %1382 = trunc i32 %1381 to i8
  %1383 = and i8 %1382, 1
  %1384 = xor i8 %1383, 1
  %1385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1384, i8* %1385, align 1
  %1386 = xor i64 %1370, %1369
  %1387 = xor i64 %1386, %1373
  %1388 = lshr i64 %1387, 4
  %1389 = trunc i64 %1388 to i8
  %1390 = and i8 %1389, 1
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1390, i8* %1391, align 1
  %1392 = icmp eq i64 %1373, 0
  %1393 = zext i1 %1392 to i8
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1393, i8* %1394, align 1
  %1395 = lshr i64 %1373, 63
  %1396 = trunc i64 %1395 to i8
  %1397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1396, i8* %1397, align 1
  %1398 = lshr i64 %1369, 63
  %1399 = lshr i64 %1370, 63
  %1400 = xor i64 %1395, %1398
  %1401 = xor i64 %1395, %1399
  %1402 = add i64 %1400, %1401
  %1403 = icmp eq i64 %1402, 2
  %1404 = zext i1 %1403 to i8
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1404, i8* %1405, align 1
  store %struct.Memory* %loadMem_40c1b1, %struct.Memory** %MEMORY
  %loadMem_40c1b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1407 = getelementptr inbounds %struct.GPR, %struct.GPR* %1406, i32 0, i32 33
  %1408 = getelementptr inbounds %struct.Reg, %struct.Reg* %1407, i32 0, i32 0
  %PC.i1561 = bitcast %union.anon* %1408 to i64*
  %1409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1410 = getelementptr inbounds %struct.GPR, %struct.GPR* %1409, i32 0, i32 5
  %1411 = getelementptr inbounds %struct.Reg, %struct.Reg* %1410, i32 0, i32 0
  %ECX.i1562 = bitcast %union.anon* %1411 to i32*
  %1412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1413 = getelementptr inbounds %struct.GPR, %struct.GPR* %1412, i32 0, i32 9
  %1414 = getelementptr inbounds %struct.Reg, %struct.Reg* %1413, i32 0, i32 0
  %RSI.i1563 = bitcast %union.anon* %1414 to i64*
  %1415 = load i64, i64* %RSI.i1563
  %1416 = add i64 %1415, 8
  %1417 = load i32, i32* %ECX.i1562
  %1418 = zext i32 %1417 to i64
  %1419 = load i64, i64* %PC.i1561
  %1420 = add i64 %1419, 3
  store i64 %1420, i64* %PC.i1561
  %1421 = inttoptr i64 %1416 to i32*
  store i32 %1417, i32* %1421
  store %struct.Memory* %loadMem_40c1b4, %struct.Memory** %MEMORY
  %loadMem_40c1b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1423 = getelementptr inbounds %struct.GPR, %struct.GPR* %1422, i32 0, i32 33
  %1424 = getelementptr inbounds %struct.Reg, %struct.Reg* %1423, i32 0, i32 0
  %PC.i1558 = bitcast %union.anon* %1424 to i64*
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1426 = getelementptr inbounds %struct.GPR, %struct.GPR* %1425, i32 0, i32 7
  %1427 = getelementptr inbounds %struct.Reg, %struct.Reg* %1426, i32 0, i32 0
  %RDX.i1559 = bitcast %union.anon* %1427 to i64*
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1429 = getelementptr inbounds %struct.GPR, %struct.GPR* %1428, i32 0, i32 15
  %1430 = getelementptr inbounds %struct.Reg, %struct.Reg* %1429, i32 0, i32 0
  %RBP.i1560 = bitcast %union.anon* %1430 to i64*
  %1431 = load i64, i64* %RBP.i1560
  %1432 = sub i64 %1431, 8
  %1433 = load i64, i64* %PC.i1558
  %1434 = add i64 %1433, 4
  store i64 %1434, i64* %PC.i1558
  %1435 = inttoptr i64 %1432 to i32*
  %1436 = load i32, i32* %1435
  %1437 = sext i32 %1436 to i64
  store i64 %1437, i64* %RDX.i1559, align 8
  store %struct.Memory* %loadMem_40c1b7, %struct.Memory** %MEMORY
  %loadMem_40c1bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1439 = getelementptr inbounds %struct.GPR, %struct.GPR* %1438, i32 0, i32 33
  %1440 = getelementptr inbounds %struct.Reg, %struct.Reg* %1439, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %1440 to i64*
  %1441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1442 = getelementptr inbounds %struct.GPR, %struct.GPR* %1441, i32 0, i32 7
  %1443 = getelementptr inbounds %struct.Reg, %struct.Reg* %1442, i32 0, i32 0
  %RDX.i1557 = bitcast %union.anon* %1443 to i64*
  %1444 = load i64, i64* %RDX.i1557
  %1445 = load i64, i64* %PC.i1556
  %1446 = add i64 %1445, 7
  store i64 %1446, i64* %PC.i1556
  %1447 = sext i64 %1444 to i128
  %1448 = and i128 %1447, -18446744073709551616
  %1449 = zext i64 %1444 to i128
  %1450 = or i128 %1448, %1449
  %1451 = mul i128 744, %1450
  %1452 = trunc i128 %1451 to i64
  store i64 %1452, i64* %RDX.i1557, align 8
  %1453 = sext i64 %1452 to i128
  %1454 = icmp ne i128 %1453, %1451
  %1455 = zext i1 %1454 to i8
  %1456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1455, i8* %1456, align 1
  %1457 = trunc i128 %1451 to i32
  %1458 = and i32 %1457, 255
  %1459 = call i32 @llvm.ctpop.i32(i32 %1458)
  %1460 = trunc i32 %1459 to i8
  %1461 = and i8 %1460, 1
  %1462 = xor i8 %1461, 1
  %1463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1462, i8* %1463, align 1
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1464, align 1
  %1465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1465, align 1
  %1466 = lshr i64 %1452, 63
  %1467 = trunc i64 %1466 to i8
  %1468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1467, i8* %1468, align 1
  %1469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1455, i8* %1469, align 1
  store %struct.Memory* %loadMem_40c1bb, %struct.Memory** %MEMORY
  %loadMem_40c1c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1471 = getelementptr inbounds %struct.GPR, %struct.GPR* %1470, i32 0, i32 33
  %1472 = getelementptr inbounds %struct.Reg, %struct.Reg* %1471, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %1472 to i64*
  %1473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1474 = getelementptr inbounds %struct.GPR, %struct.GPR* %1473, i32 0, i32 1
  %1475 = getelementptr inbounds %struct.Reg, %struct.Reg* %1474, i32 0, i32 0
  %RAX.i1554 = bitcast %union.anon* %1475 to i64*
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1477 = getelementptr inbounds %struct.GPR, %struct.GPR* %1476, i32 0, i32 9
  %1478 = getelementptr inbounds %struct.Reg, %struct.Reg* %1477, i32 0, i32 0
  %RSI.i1555 = bitcast %union.anon* %1478 to i64*
  %1479 = load i64, i64* %RAX.i1554
  %1480 = load i64, i64* %PC.i1553
  %1481 = add i64 %1480, 3
  store i64 %1481, i64* %PC.i1553
  store i64 %1479, i64* %RSI.i1555, align 8
  store %struct.Memory* %loadMem_40c1c2, %struct.Memory** %MEMORY
  %loadMem_40c1c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1483 = getelementptr inbounds %struct.GPR, %struct.GPR* %1482, i32 0, i32 33
  %1484 = getelementptr inbounds %struct.Reg, %struct.Reg* %1483, i32 0, i32 0
  %PC.i1550 = bitcast %union.anon* %1484 to i64*
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1486 = getelementptr inbounds %struct.GPR, %struct.GPR* %1485, i32 0, i32 7
  %1487 = getelementptr inbounds %struct.Reg, %struct.Reg* %1486, i32 0, i32 0
  %RDX.i1551 = bitcast %union.anon* %1487 to i64*
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1489 = getelementptr inbounds %struct.GPR, %struct.GPR* %1488, i32 0, i32 9
  %1490 = getelementptr inbounds %struct.Reg, %struct.Reg* %1489, i32 0, i32 0
  %RSI.i1552 = bitcast %union.anon* %1490 to i64*
  %1491 = load i64, i64* %RSI.i1552
  %1492 = load i64, i64* %RDX.i1551
  %1493 = load i64, i64* %PC.i1550
  %1494 = add i64 %1493, 3
  store i64 %1494, i64* %PC.i1550
  %1495 = add i64 %1492, %1491
  store i64 %1495, i64* %RSI.i1552, align 8
  %1496 = icmp ult i64 %1495, %1491
  %1497 = icmp ult i64 %1495, %1492
  %1498 = or i1 %1496, %1497
  %1499 = zext i1 %1498 to i8
  %1500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1499, i8* %1500, align 1
  %1501 = trunc i64 %1495 to i32
  %1502 = and i32 %1501, 255
  %1503 = call i32 @llvm.ctpop.i32(i32 %1502)
  %1504 = trunc i32 %1503 to i8
  %1505 = and i8 %1504, 1
  %1506 = xor i8 %1505, 1
  %1507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1506, i8* %1507, align 1
  %1508 = xor i64 %1492, %1491
  %1509 = xor i64 %1508, %1495
  %1510 = lshr i64 %1509, 4
  %1511 = trunc i64 %1510 to i8
  %1512 = and i8 %1511, 1
  %1513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1512, i8* %1513, align 1
  %1514 = icmp eq i64 %1495, 0
  %1515 = zext i1 %1514 to i8
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1515, i8* %1516, align 1
  %1517 = lshr i64 %1495, 63
  %1518 = trunc i64 %1517 to i8
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1518, i8* %1519, align 1
  %1520 = lshr i64 %1491, 63
  %1521 = lshr i64 %1492, 63
  %1522 = xor i64 %1517, %1520
  %1523 = xor i64 %1517, %1521
  %1524 = add i64 %1522, %1523
  %1525 = icmp eq i64 %1524, 2
  %1526 = zext i1 %1525 to i8
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1526, i8* %1527, align 1
  store %struct.Memory* %loadMem_40c1c5, %struct.Memory** %MEMORY
  %loadMem_40c1c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1529 = getelementptr inbounds %struct.GPR, %struct.GPR* %1528, i32 0, i32 33
  %1530 = getelementptr inbounds %struct.Reg, %struct.Reg* %1529, i32 0, i32 0
  %PC.i1548 = bitcast %union.anon* %1530 to i64*
  %1531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1532 = getelementptr inbounds %struct.GPR, %struct.GPR* %1531, i32 0, i32 9
  %1533 = getelementptr inbounds %struct.Reg, %struct.Reg* %1532, i32 0, i32 0
  %RSI.i1549 = bitcast %union.anon* %1533 to i64*
  %1534 = load i64, i64* %RSI.i1549
  %1535 = add i64 %1534, 12
  %1536 = load i64, i64* %PC.i1548
  %1537 = add i64 %1536, 7
  store i64 %1537, i64* %PC.i1548
  %1538 = inttoptr i64 %1535 to i32*
  store i32 0, i32* %1538
  store %struct.Memory* %loadMem_40c1c8, %struct.Memory** %MEMORY
  %loadMem_40c1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1540 = getelementptr inbounds %struct.GPR, %struct.GPR* %1539, i32 0, i32 33
  %1541 = getelementptr inbounds %struct.Reg, %struct.Reg* %1540, i32 0, i32 0
  %PC.i1545 = bitcast %union.anon* %1541 to i64*
  %1542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1543 = getelementptr inbounds %struct.GPR, %struct.GPR* %1542, i32 0, i32 7
  %1544 = getelementptr inbounds %struct.Reg, %struct.Reg* %1543, i32 0, i32 0
  %RDX.i1546 = bitcast %union.anon* %1544 to i64*
  %1545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1546 = getelementptr inbounds %struct.GPR, %struct.GPR* %1545, i32 0, i32 15
  %1547 = getelementptr inbounds %struct.Reg, %struct.Reg* %1546, i32 0, i32 0
  %RBP.i1547 = bitcast %union.anon* %1547 to i64*
  %1548 = load i64, i64* %RBP.i1547
  %1549 = sub i64 %1548, 8
  %1550 = load i64, i64* %PC.i1545
  %1551 = add i64 %1550, 4
  store i64 %1551, i64* %PC.i1545
  %1552 = inttoptr i64 %1549 to i32*
  %1553 = load i32, i32* %1552
  %1554 = sext i32 %1553 to i64
  store i64 %1554, i64* %RDX.i1546, align 8
  store %struct.Memory* %loadMem_40c1cf, %struct.Memory** %MEMORY
  %loadMem_40c1d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1556 = getelementptr inbounds %struct.GPR, %struct.GPR* %1555, i32 0, i32 33
  %1557 = getelementptr inbounds %struct.Reg, %struct.Reg* %1556, i32 0, i32 0
  %PC.i1543 = bitcast %union.anon* %1557 to i64*
  %1558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1559 = getelementptr inbounds %struct.GPR, %struct.GPR* %1558, i32 0, i32 7
  %1560 = getelementptr inbounds %struct.Reg, %struct.Reg* %1559, i32 0, i32 0
  %RDX.i1544 = bitcast %union.anon* %1560 to i64*
  %1561 = load i64, i64* %RDX.i1544
  %1562 = load i64, i64* %PC.i1543
  %1563 = add i64 %1562, 7
  store i64 %1563, i64* %PC.i1543
  %1564 = sext i64 %1561 to i128
  %1565 = and i128 %1564, -18446744073709551616
  %1566 = zext i64 %1561 to i128
  %1567 = or i128 %1565, %1566
  %1568 = mul i128 744, %1567
  %1569 = trunc i128 %1568 to i64
  store i64 %1569, i64* %RDX.i1544, align 8
  %1570 = sext i64 %1569 to i128
  %1571 = icmp ne i128 %1570, %1568
  %1572 = zext i1 %1571 to i8
  %1573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1572, i8* %1573, align 1
  %1574 = trunc i128 %1568 to i32
  %1575 = and i32 %1574, 255
  %1576 = call i32 @llvm.ctpop.i32(i32 %1575)
  %1577 = trunc i32 %1576 to i8
  %1578 = and i8 %1577, 1
  %1579 = xor i8 %1578, 1
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1579, i8* %1580, align 1
  %1581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1581, align 1
  %1582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1582, align 1
  %1583 = lshr i64 %1569, 63
  %1584 = trunc i64 %1583 to i8
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1584, i8* %1585, align 1
  %1586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1572, i8* %1586, align 1
  store %struct.Memory* %loadMem_40c1d3, %struct.Memory** %MEMORY
  %loadMem_40c1da = load %struct.Memory*, %struct.Memory** %MEMORY
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1588 = getelementptr inbounds %struct.GPR, %struct.GPR* %1587, i32 0, i32 33
  %1589 = getelementptr inbounds %struct.Reg, %struct.Reg* %1588, i32 0, i32 0
  %PC.i1540 = bitcast %union.anon* %1589 to i64*
  %1590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1591 = getelementptr inbounds %struct.GPR, %struct.GPR* %1590, i32 0, i32 1
  %1592 = getelementptr inbounds %struct.Reg, %struct.Reg* %1591, i32 0, i32 0
  %RAX.i1541 = bitcast %union.anon* %1592 to i64*
  %1593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1594 = getelementptr inbounds %struct.GPR, %struct.GPR* %1593, i32 0, i32 9
  %1595 = getelementptr inbounds %struct.Reg, %struct.Reg* %1594, i32 0, i32 0
  %RSI.i1542 = bitcast %union.anon* %1595 to i64*
  %1596 = load i64, i64* %RAX.i1541
  %1597 = load i64, i64* %PC.i1540
  %1598 = add i64 %1597, 3
  store i64 %1598, i64* %PC.i1540
  store i64 %1596, i64* %RSI.i1542, align 8
  store %struct.Memory* %loadMem_40c1da, %struct.Memory** %MEMORY
  %loadMem_40c1dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1600 = getelementptr inbounds %struct.GPR, %struct.GPR* %1599, i32 0, i32 33
  %1601 = getelementptr inbounds %struct.Reg, %struct.Reg* %1600, i32 0, i32 0
  %PC.i1537 = bitcast %union.anon* %1601 to i64*
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1603 = getelementptr inbounds %struct.GPR, %struct.GPR* %1602, i32 0, i32 7
  %1604 = getelementptr inbounds %struct.Reg, %struct.Reg* %1603, i32 0, i32 0
  %RDX.i1538 = bitcast %union.anon* %1604 to i64*
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1606 = getelementptr inbounds %struct.GPR, %struct.GPR* %1605, i32 0, i32 9
  %1607 = getelementptr inbounds %struct.Reg, %struct.Reg* %1606, i32 0, i32 0
  %RSI.i1539 = bitcast %union.anon* %1607 to i64*
  %1608 = load i64, i64* %RSI.i1539
  %1609 = load i64, i64* %RDX.i1538
  %1610 = load i64, i64* %PC.i1537
  %1611 = add i64 %1610, 3
  store i64 %1611, i64* %PC.i1537
  %1612 = add i64 %1609, %1608
  store i64 %1612, i64* %RSI.i1539, align 8
  %1613 = icmp ult i64 %1612, %1608
  %1614 = icmp ult i64 %1612, %1609
  %1615 = or i1 %1613, %1614
  %1616 = zext i1 %1615 to i8
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1616, i8* %1617, align 1
  %1618 = trunc i64 %1612 to i32
  %1619 = and i32 %1618, 255
  %1620 = call i32 @llvm.ctpop.i32(i32 %1619)
  %1621 = trunc i32 %1620 to i8
  %1622 = and i8 %1621, 1
  %1623 = xor i8 %1622, 1
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1623, i8* %1624, align 1
  %1625 = xor i64 %1609, %1608
  %1626 = xor i64 %1625, %1612
  %1627 = lshr i64 %1626, 4
  %1628 = trunc i64 %1627 to i8
  %1629 = and i8 %1628, 1
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1629, i8* %1630, align 1
  %1631 = icmp eq i64 %1612, 0
  %1632 = zext i1 %1631 to i8
  %1633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1632, i8* %1633, align 1
  %1634 = lshr i64 %1612, 63
  %1635 = trunc i64 %1634 to i8
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1635, i8* %1636, align 1
  %1637 = lshr i64 %1608, 63
  %1638 = lshr i64 %1609, 63
  %1639 = xor i64 %1634, %1637
  %1640 = xor i64 %1634, %1638
  %1641 = add i64 %1639, %1640
  %1642 = icmp eq i64 %1641, 2
  %1643 = zext i1 %1642 to i8
  %1644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1643, i8* %1644, align 1
  store %struct.Memory* %loadMem_40c1dd, %struct.Memory** %MEMORY
  %loadMem_40c1e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1646 = getelementptr inbounds %struct.GPR, %struct.GPR* %1645, i32 0, i32 33
  %1647 = getelementptr inbounds %struct.Reg, %struct.Reg* %1646, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %1647 to i64*
  %1648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1649 = getelementptr inbounds %struct.GPR, %struct.GPR* %1648, i32 0, i32 9
  %1650 = getelementptr inbounds %struct.Reg, %struct.Reg* %1649, i32 0, i32 0
  %RSI.i1536 = bitcast %union.anon* %1650 to i64*
  %1651 = load i64, i64* %RSI.i1536
  %1652 = add i64 %1651, 96
  %1653 = load i64, i64* %PC.i1535
  %1654 = add i64 %1653, 7
  store i64 %1654, i64* %PC.i1535
  %1655 = inttoptr i64 %1652 to i32*
  store i32 0, i32* %1655
  store %struct.Memory* %loadMem_40c1e0, %struct.Memory** %MEMORY
  %loadMem_40c1e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1657 = getelementptr inbounds %struct.GPR, %struct.GPR* %1656, i32 0, i32 33
  %1658 = getelementptr inbounds %struct.Reg, %struct.Reg* %1657, i32 0, i32 0
  %PC.i1533 = bitcast %union.anon* %1658 to i64*
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1660 = getelementptr inbounds %struct.GPR, %struct.GPR* %1659, i32 0, i32 5
  %1661 = getelementptr inbounds %struct.Reg, %struct.Reg* %1660, i32 0, i32 0
  %RCX.i1534 = bitcast %union.anon* %1661 to i64*
  %1662 = load i64, i64* %PC.i1533
  %1663 = add i64 %1662, 7
  store i64 %1663, i64* %PC.i1533
  %1664 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %1665 = zext i32 %1664 to i64
  store i64 %1665, i64* %RCX.i1534, align 8
  store %struct.Memory* %loadMem_40c1e7, %struct.Memory** %MEMORY
  %loadMem_40c1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %1666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1667 = getelementptr inbounds %struct.GPR, %struct.GPR* %1666, i32 0, i32 33
  %1668 = getelementptr inbounds %struct.Reg, %struct.Reg* %1667, i32 0, i32 0
  %PC.i1531 = bitcast %union.anon* %1668 to i64*
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1670 = getelementptr inbounds %struct.GPR, %struct.GPR* %1669, i32 0, i32 5
  %1671 = getelementptr inbounds %struct.Reg, %struct.Reg* %1670, i32 0, i32 0
  %RCX.i1532 = bitcast %union.anon* %1671 to i64*
  %1672 = load i64, i64* %RCX.i1532
  %1673 = load i64, i64* %PC.i1531
  %1674 = add i64 %1673, 3
  store i64 %1674, i64* %PC.i1531
  %1675 = trunc i64 %1672 to i32
  %1676 = add i32 1, %1675
  %1677 = zext i32 %1676 to i64
  store i64 %1677, i64* %RCX.i1532, align 8
  %1678 = icmp ult i32 %1676, %1675
  %1679 = icmp ult i32 %1676, 1
  %1680 = or i1 %1678, %1679
  %1681 = zext i1 %1680 to i8
  %1682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1681, i8* %1682, align 1
  %1683 = and i32 %1676, 255
  %1684 = call i32 @llvm.ctpop.i32(i32 %1683)
  %1685 = trunc i32 %1684 to i8
  %1686 = and i8 %1685, 1
  %1687 = xor i8 %1686, 1
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1687, i8* %1688, align 1
  %1689 = xor i64 1, %1672
  %1690 = trunc i64 %1689 to i32
  %1691 = xor i32 %1690, %1676
  %1692 = lshr i32 %1691, 4
  %1693 = trunc i32 %1692 to i8
  %1694 = and i8 %1693, 1
  %1695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1694, i8* %1695, align 1
  %1696 = icmp eq i32 %1676, 0
  %1697 = zext i1 %1696 to i8
  %1698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1697, i8* %1698, align 1
  %1699 = lshr i32 %1676, 31
  %1700 = trunc i32 %1699 to i8
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1700, i8* %1701, align 1
  %1702 = lshr i32 %1675, 31
  %1703 = xor i32 %1699, %1702
  %1704 = add i32 %1703, %1699
  %1705 = icmp eq i32 %1704, 2
  %1706 = zext i1 %1705 to i8
  %1707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1706, i8* %1707, align 1
  store %struct.Memory* %loadMem_40c1ee, %struct.Memory** %MEMORY
  %loadMem_40c1f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1709 = getelementptr inbounds %struct.GPR, %struct.GPR* %1708, i32 0, i32 33
  %1710 = getelementptr inbounds %struct.Reg, %struct.Reg* %1709, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %1710 to i64*
  %1711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1712 = getelementptr inbounds %struct.GPR, %struct.GPR* %1711, i32 0, i32 5
  %1713 = getelementptr inbounds %struct.Reg, %struct.Reg* %1712, i32 0, i32 0
  %ECX.i1530 = bitcast %union.anon* %1713 to i32*
  %1714 = load i32, i32* %ECX.i1530
  %1715 = zext i32 %1714 to i64
  %1716 = load i64, i64* %PC.i1529
  %1717 = add i64 %1716, 7
  store i64 %1717, i64* %PC.i1529
  store i32 %1714, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  store %struct.Memory* %loadMem_40c1f1, %struct.Memory** %MEMORY
  %loadMem_40c1f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1719 = getelementptr inbounds %struct.GPR, %struct.GPR* %1718, i32 0, i32 33
  %1720 = getelementptr inbounds %struct.Reg, %struct.Reg* %1719, i32 0, i32 0
  %PC.i1527 = bitcast %union.anon* %1720 to i64*
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1722 = getelementptr inbounds %struct.GPR, %struct.GPR* %1721, i32 0, i32 5
  %1723 = getelementptr inbounds %struct.Reg, %struct.Reg* %1722, i32 0, i32 0
  %RCX.i1528 = bitcast %union.anon* %1723 to i64*
  %1724 = load i64, i64* %PC.i1527
  %1725 = add i64 %1724, 7
  store i64 %1725, i64* %PC.i1527
  %1726 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %1727 = zext i32 %1726 to i64
  store i64 %1727, i64* %RCX.i1528, align 8
  store %struct.Memory* %loadMem_40c1f8, %struct.Memory** %MEMORY
  %loadMem_40c1ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1729 = getelementptr inbounds %struct.GPR, %struct.GPR* %1728, i32 0, i32 33
  %1730 = getelementptr inbounds %struct.Reg, %struct.Reg* %1729, i32 0, i32 0
  %PC.i1525 = bitcast %union.anon* %1730 to i64*
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1732 = getelementptr inbounds %struct.GPR, %struct.GPR* %1731, i32 0, i32 5
  %1733 = getelementptr inbounds %struct.Reg, %struct.Reg* %1732, i32 0, i32 0
  %RCX.i1526 = bitcast %union.anon* %1733 to i64*
  %1734 = load i64, i64* %RCX.i1526
  %1735 = load i64, i64* %PC.i1525
  %1736 = add i64 %1735, 3
  store i64 %1736, i64* %PC.i1525
  %1737 = trunc i64 %1734 to i32
  %1738 = add i32 1, %1737
  %1739 = zext i32 %1738 to i64
  store i64 %1739, i64* %RCX.i1526, align 8
  %1740 = icmp ult i32 %1738, %1737
  %1741 = icmp ult i32 %1738, 1
  %1742 = or i1 %1740, %1741
  %1743 = zext i1 %1742 to i8
  %1744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1743, i8* %1744, align 1
  %1745 = and i32 %1738, 255
  %1746 = call i32 @llvm.ctpop.i32(i32 %1745)
  %1747 = trunc i32 %1746 to i8
  %1748 = and i8 %1747, 1
  %1749 = xor i8 %1748, 1
  %1750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1749, i8* %1750, align 1
  %1751 = xor i64 1, %1734
  %1752 = trunc i64 %1751 to i32
  %1753 = xor i32 %1752, %1738
  %1754 = lshr i32 %1753, 4
  %1755 = trunc i32 %1754 to i8
  %1756 = and i8 %1755, 1
  %1757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1756, i8* %1757, align 1
  %1758 = icmp eq i32 %1738, 0
  %1759 = zext i1 %1758 to i8
  %1760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1759, i8* %1760, align 1
  %1761 = lshr i32 %1738, 31
  %1762 = trunc i32 %1761 to i8
  %1763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1762, i8* %1763, align 1
  %1764 = lshr i32 %1737, 31
  %1765 = xor i32 %1761, %1764
  %1766 = add i32 %1765, %1761
  %1767 = icmp eq i32 %1766, 2
  %1768 = zext i1 %1767 to i8
  %1769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1768, i8* %1769, align 1
  store %struct.Memory* %loadMem_40c1ff, %struct.Memory** %MEMORY
  %loadMem_40c202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1771 = getelementptr inbounds %struct.GPR, %struct.GPR* %1770, i32 0, i32 33
  %1772 = getelementptr inbounds %struct.Reg, %struct.Reg* %1771, i32 0, i32 0
  %PC.i1523 = bitcast %union.anon* %1772 to i64*
  %1773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1774 = getelementptr inbounds %struct.GPR, %struct.GPR* %1773, i32 0, i32 5
  %1775 = getelementptr inbounds %struct.Reg, %struct.Reg* %1774, i32 0, i32 0
  %ECX.i1524 = bitcast %union.anon* %1775 to i32*
  %1776 = load i32, i32* %ECX.i1524
  %1777 = zext i32 %1776 to i64
  %1778 = load i64, i64* %PC.i1523
  %1779 = add i64 %1778, 7
  store i64 %1779, i64* %PC.i1523
  store i32 %1776, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  store %struct.Memory* %loadMem_40c202, %struct.Memory** %MEMORY
  %loadMem_40c209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1781 = getelementptr inbounds %struct.GPR, %struct.GPR* %1780, i32 0, i32 33
  %1782 = getelementptr inbounds %struct.Reg, %struct.Reg* %1781, i32 0, i32 0
  %PC.i1521 = bitcast %union.anon* %1782 to i64*
  %1783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1784 = getelementptr inbounds %struct.GPR, %struct.GPR* %1783, i32 0, i32 5
  %1785 = getelementptr inbounds %struct.Reg, %struct.Reg* %1784, i32 0, i32 0
  %RCX.i1522 = bitcast %union.anon* %1785 to i64*
  %1786 = load i64, i64* %PC.i1521
  %1787 = add i64 %1786, 7
  store i64 %1787, i64* %PC.i1521
  %1788 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %1789 = zext i32 %1788 to i64
  store i64 %1789, i64* %RCX.i1522, align 8
  store %struct.Memory* %loadMem_40c209, %struct.Memory** %MEMORY
  %loadMem_40c210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1791 = getelementptr inbounds %struct.GPR, %struct.GPR* %1790, i32 0, i32 33
  %1792 = getelementptr inbounds %struct.Reg, %struct.Reg* %1791, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %1792 to i64*
  %1793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1794 = getelementptr inbounds %struct.GPR, %struct.GPR* %1793, i32 0, i32 7
  %1795 = getelementptr inbounds %struct.Reg, %struct.Reg* %1794, i32 0, i32 0
  %RDX.i1519 = bitcast %union.anon* %1795 to i64*
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1797 = getelementptr inbounds %struct.GPR, %struct.GPR* %1796, i32 0, i32 15
  %1798 = getelementptr inbounds %struct.Reg, %struct.Reg* %1797, i32 0, i32 0
  %RBP.i1520 = bitcast %union.anon* %1798 to i64*
  %1799 = load i64, i64* %RBP.i1520
  %1800 = sub i64 %1799, 8
  %1801 = load i64, i64* %PC.i1518
  %1802 = add i64 %1801, 4
  store i64 %1802, i64* %PC.i1518
  %1803 = inttoptr i64 %1800 to i32*
  %1804 = load i32, i32* %1803
  %1805 = sext i32 %1804 to i64
  store i64 %1805, i64* %RDX.i1519, align 8
  store %struct.Memory* %loadMem_40c210, %struct.Memory** %MEMORY
  %loadMem_40c214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1807 = getelementptr inbounds %struct.GPR, %struct.GPR* %1806, i32 0, i32 33
  %1808 = getelementptr inbounds %struct.Reg, %struct.Reg* %1807, i32 0, i32 0
  %PC.i1516 = bitcast %union.anon* %1808 to i64*
  %1809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1810 = getelementptr inbounds %struct.GPR, %struct.GPR* %1809, i32 0, i32 7
  %1811 = getelementptr inbounds %struct.Reg, %struct.Reg* %1810, i32 0, i32 0
  %RDX.i1517 = bitcast %union.anon* %1811 to i64*
  %1812 = load i64, i64* %RDX.i1517
  %1813 = load i64, i64* %PC.i1516
  %1814 = add i64 %1813, 7
  store i64 %1814, i64* %PC.i1516
  %1815 = sext i64 %1812 to i128
  %1816 = and i128 %1815, -18446744073709551616
  %1817 = zext i64 %1812 to i128
  %1818 = or i128 %1816, %1817
  %1819 = mul i128 744, %1818
  %1820 = trunc i128 %1819 to i64
  store i64 %1820, i64* %RDX.i1517, align 8
  %1821 = sext i64 %1820 to i128
  %1822 = icmp ne i128 %1821, %1819
  %1823 = zext i1 %1822 to i8
  %1824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1823, i8* %1824, align 1
  %1825 = trunc i128 %1819 to i32
  %1826 = and i32 %1825, 255
  %1827 = call i32 @llvm.ctpop.i32(i32 %1826)
  %1828 = trunc i32 %1827 to i8
  %1829 = and i8 %1828, 1
  %1830 = xor i8 %1829, 1
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1830, i8* %1831, align 1
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1832, align 1
  %1833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1833, align 1
  %1834 = lshr i64 %1820, 63
  %1835 = trunc i64 %1834 to i8
  %1836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1835, i8* %1836, align 1
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1823, i8* %1837, align 1
  store %struct.Memory* %loadMem_40c214, %struct.Memory** %MEMORY
  %loadMem_40c21b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1839 = getelementptr inbounds %struct.GPR, %struct.GPR* %1838, i32 0, i32 33
  %1840 = getelementptr inbounds %struct.Reg, %struct.Reg* %1839, i32 0, i32 0
  %PC.i1513 = bitcast %union.anon* %1840 to i64*
  %1841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1842 = getelementptr inbounds %struct.GPR, %struct.GPR* %1841, i32 0, i32 1
  %1843 = getelementptr inbounds %struct.Reg, %struct.Reg* %1842, i32 0, i32 0
  %RAX.i1514 = bitcast %union.anon* %1843 to i64*
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1845 = getelementptr inbounds %struct.GPR, %struct.GPR* %1844, i32 0, i32 7
  %1846 = getelementptr inbounds %struct.Reg, %struct.Reg* %1845, i32 0, i32 0
  %RDX.i1515 = bitcast %union.anon* %1846 to i64*
  %1847 = load i64, i64* %RAX.i1514
  %1848 = load i64, i64* %RDX.i1515
  %1849 = load i64, i64* %PC.i1513
  %1850 = add i64 %1849, 3
  store i64 %1850, i64* %PC.i1513
  %1851 = add i64 %1848, %1847
  store i64 %1851, i64* %RAX.i1514, align 8
  %1852 = icmp ult i64 %1851, %1847
  %1853 = icmp ult i64 %1851, %1848
  %1854 = or i1 %1852, %1853
  %1855 = zext i1 %1854 to i8
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1855, i8* %1856, align 1
  %1857 = trunc i64 %1851 to i32
  %1858 = and i32 %1857, 255
  %1859 = call i32 @llvm.ctpop.i32(i32 %1858)
  %1860 = trunc i32 %1859 to i8
  %1861 = and i8 %1860, 1
  %1862 = xor i8 %1861, 1
  %1863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1862, i8* %1863, align 1
  %1864 = xor i64 %1848, %1847
  %1865 = xor i64 %1864, %1851
  %1866 = lshr i64 %1865, 4
  %1867 = trunc i64 %1866 to i8
  %1868 = and i8 %1867, 1
  %1869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1868, i8* %1869, align 1
  %1870 = icmp eq i64 %1851, 0
  %1871 = zext i1 %1870 to i8
  %1872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1871, i8* %1872, align 1
  %1873 = lshr i64 %1851, 63
  %1874 = trunc i64 %1873 to i8
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1874, i8* %1875, align 1
  %1876 = lshr i64 %1847, 63
  %1877 = lshr i64 %1848, 63
  %1878 = xor i64 %1873, %1876
  %1879 = xor i64 %1873, %1877
  %1880 = add i64 %1878, %1879
  %1881 = icmp eq i64 %1880, 2
  %1882 = zext i1 %1881 to i8
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1882, i8* %1883, align 1
  store %struct.Memory* %loadMem_40c21b, %struct.Memory** %MEMORY
  %loadMem_40c21e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1885 = getelementptr inbounds %struct.GPR, %struct.GPR* %1884, i32 0, i32 33
  %1886 = getelementptr inbounds %struct.Reg, %struct.Reg* %1885, i32 0, i32 0
  %PC.i1510 = bitcast %union.anon* %1886 to i64*
  %1887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1888 = getelementptr inbounds %struct.GPR, %struct.GPR* %1887, i32 0, i32 5
  %1889 = getelementptr inbounds %struct.Reg, %struct.Reg* %1888, i32 0, i32 0
  %ECX.i1511 = bitcast %union.anon* %1889 to i32*
  %1890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1891 = getelementptr inbounds %struct.GPR, %struct.GPR* %1890, i32 0, i32 1
  %1892 = getelementptr inbounds %struct.Reg, %struct.Reg* %1891, i32 0, i32 0
  %RAX.i1512 = bitcast %union.anon* %1892 to i64*
  %1893 = load i64, i64* %RAX.i1512
  %1894 = add i64 %1893, 740
  %1895 = load i32, i32* %ECX.i1511
  %1896 = zext i32 %1895 to i64
  %1897 = load i64, i64* %PC.i1510
  %1898 = add i64 %1897, 6
  store i64 %1898, i64* %PC.i1510
  %1899 = inttoptr i64 %1894 to i32*
  store i32 %1895, i32* %1899
  store %struct.Memory* %loadMem_40c21e, %struct.Memory** %MEMORY
  %loadMem_40c224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1901 = getelementptr inbounds %struct.GPR, %struct.GPR* %1900, i32 0, i32 33
  %1902 = getelementptr inbounds %struct.Reg, %struct.Reg* %1901, i32 0, i32 0
  %PC.i1507 = bitcast %union.anon* %1902 to i64*
  %1903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1904 = getelementptr inbounds %struct.GPR, %struct.GPR* %1903, i32 0, i32 5
  %1905 = getelementptr inbounds %struct.Reg, %struct.Reg* %1904, i32 0, i32 0
  %RCX.i1508 = bitcast %union.anon* %1905 to i64*
  %1906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1907 = getelementptr inbounds %struct.GPR, %struct.GPR* %1906, i32 0, i32 15
  %1908 = getelementptr inbounds %struct.Reg, %struct.Reg* %1907, i32 0, i32 0
  %RBP.i1509 = bitcast %union.anon* %1908 to i64*
  %1909 = load i64, i64* %RBP.i1509
  %1910 = sub i64 %1909, 4
  %1911 = load i64, i64* %PC.i1507
  %1912 = add i64 %1911, 3
  store i64 %1912, i64* %PC.i1507
  %1913 = inttoptr i64 %1910 to i32*
  %1914 = load i32, i32* %1913
  %1915 = zext i32 %1914 to i64
  store i64 %1915, i64* %RCX.i1508, align 8
  store %struct.Memory* %loadMem_40c224, %struct.Memory** %MEMORY
  %loadMem_40c227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1917 = getelementptr inbounds %struct.GPR, %struct.GPR* %1916, i32 0, i32 33
  %1918 = getelementptr inbounds %struct.Reg, %struct.Reg* %1917, i32 0, i32 0
  %PC.i1505 = bitcast %union.anon* %1918 to i64*
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1920 = getelementptr inbounds %struct.GPR, %struct.GPR* %1919, i32 0, i32 5
  %1921 = getelementptr inbounds %struct.Reg, %struct.Reg* %1920, i32 0, i32 0
  %RCX.i1506 = bitcast %union.anon* %1921 to i64*
  %1922 = load i64, i64* %RCX.i1506
  %1923 = load i64, i64* %PC.i1505
  %1924 = add i64 %1923, 3
  store i64 %1924, i64* %PC.i1505
  %1925 = trunc i64 %1922 to i32
  %1926 = add i32 20, %1925
  %1927 = zext i32 %1926 to i64
  store i64 %1927, i64* %RCX.i1506, align 8
  %1928 = icmp ult i32 %1926, %1925
  %1929 = icmp ult i32 %1926, 20
  %1930 = or i1 %1928, %1929
  %1931 = zext i1 %1930 to i8
  %1932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1931, i8* %1932, align 1
  %1933 = and i32 %1926, 255
  %1934 = call i32 @llvm.ctpop.i32(i32 %1933)
  %1935 = trunc i32 %1934 to i8
  %1936 = and i8 %1935, 1
  %1937 = xor i8 %1936, 1
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1937, i8* %1938, align 1
  %1939 = xor i64 20, %1922
  %1940 = trunc i64 %1939 to i32
  %1941 = xor i32 %1940, %1926
  %1942 = lshr i32 %1941, 4
  %1943 = trunc i32 %1942 to i8
  %1944 = and i8 %1943, 1
  %1945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1944, i8* %1945, align 1
  %1946 = icmp eq i32 %1926, 0
  %1947 = zext i1 %1946 to i8
  %1948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1947, i8* %1948, align 1
  %1949 = lshr i32 %1926, 31
  %1950 = trunc i32 %1949 to i8
  %1951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1950, i8* %1951, align 1
  %1952 = lshr i32 %1925, 31
  %1953 = xor i32 %1949, %1952
  %1954 = add i32 %1953, %1949
  %1955 = icmp eq i32 %1954, 2
  %1956 = zext i1 %1955 to i8
  %1957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1956, i8* %1957, align 1
  store %struct.Memory* %loadMem_40c227, %struct.Memory** %MEMORY
  %loadMem_40c22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1959 = getelementptr inbounds %struct.GPR, %struct.GPR* %1958, i32 0, i32 33
  %1960 = getelementptr inbounds %struct.Reg, %struct.Reg* %1959, i32 0, i32 0
  %PC.i1502 = bitcast %union.anon* %1960 to i64*
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1962 = getelementptr inbounds %struct.GPR, %struct.GPR* %1961, i32 0, i32 5
  %1963 = getelementptr inbounds %struct.Reg, %struct.Reg* %1962, i32 0, i32 0
  %ECX.i1503 = bitcast %union.anon* %1963 to i32*
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1965 = getelementptr inbounds %struct.GPR, %struct.GPR* %1964, i32 0, i32 1
  %1966 = getelementptr inbounds %struct.Reg, %struct.Reg* %1965, i32 0, i32 0
  %RAX.i1504 = bitcast %union.anon* %1966 to i64*
  %1967 = load i32, i32* %ECX.i1503
  %1968 = zext i32 %1967 to i64
  %1969 = load i64, i64* %PC.i1502
  %1970 = add i64 %1969, 3
  store i64 %1970, i64* %PC.i1502
  %1971 = shl i64 %1968, 32
  %1972 = ashr exact i64 %1971, 32
  store i64 %1972, i64* %RAX.i1504, align 8
  store %struct.Memory* %loadMem_40c22a, %struct.Memory** %MEMORY
  %loadMem_40c22d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1974 = getelementptr inbounds %struct.GPR, %struct.GPR* %1973, i32 0, i32 33
  %1975 = getelementptr inbounds %struct.Reg, %struct.Reg* %1974, i32 0, i32 0
  %PC.i1499 = bitcast %union.anon* %1975 to i64*
  %1976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1977 = getelementptr inbounds %struct.GPR, %struct.GPR* %1976, i32 0, i32 1
  %1978 = getelementptr inbounds %struct.Reg, %struct.Reg* %1977, i32 0, i32 0
  %RAX.i1500 = bitcast %union.anon* %1978 to i64*
  %1979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1980 = getelementptr inbounds %struct.GPR, %struct.GPR* %1979, i32 0, i32 5
  %1981 = getelementptr inbounds %struct.Reg, %struct.Reg* %1980, i32 0, i32 0
  %RCX.i1501 = bitcast %union.anon* %1981 to i64*
  %1982 = load i64, i64* %RAX.i1500
  %1983 = add i64 %1982, 12099168
  %1984 = load i64, i64* %PC.i1499
  %1985 = add i64 %1984, 8
  store i64 %1985, i64* %PC.i1499
  %1986 = inttoptr i64 %1983 to i8*
  %1987 = load i8, i8* %1986
  %1988 = zext i8 %1987 to i64
  store i64 %1988, i64* %RCX.i1501, align 8
  store %struct.Memory* %loadMem_40c22d, %struct.Memory** %MEMORY
  %loadMem_40c235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1990 = getelementptr inbounds %struct.GPR, %struct.GPR* %1989, i32 0, i32 33
  %1991 = getelementptr inbounds %struct.Reg, %struct.Reg* %1990, i32 0, i32 0
  %PC.i1497 = bitcast %union.anon* %1991 to i64*
  %1992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1993 = getelementptr inbounds %struct.GPR, %struct.GPR* %1992, i32 0, i32 5
  %1994 = getelementptr inbounds %struct.Reg, %struct.Reg* %1993, i32 0, i32 0
  %ECX.i1498 = bitcast %union.anon* %1994 to i32*
  %1995 = load i32, i32* %ECX.i1498
  %1996 = zext i32 %1995 to i64
  %1997 = load i64, i64* %PC.i1497
  %1998 = add i64 %1997, 3
  store i64 %1998, i64* %PC.i1497
  %1999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1999, align 1
  %2000 = and i32 %1995, 255
  %2001 = call i32 @llvm.ctpop.i32(i32 %2000)
  %2002 = trunc i32 %2001 to i8
  %2003 = and i8 %2002, 1
  %2004 = xor i8 %2003, 1
  %2005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2004, i8* %2005, align 1
  %2006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2006, align 1
  %2007 = icmp eq i32 %1995, 0
  %2008 = zext i1 %2007 to i8
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2008, i8* %2009, align 1
  %2010 = lshr i32 %1995, 31
  %2011 = trunc i32 %2010 to i8
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2011, i8* %2012, align 1
  %2013 = lshr i32 %1995, 31
  %2014 = xor i32 %2010, %2013
  %2015 = add i32 %2014, %2013
  %2016 = icmp eq i32 %2015, 2
  %2017 = zext i1 %2016 to i8
  %2018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2017, i8* %2018, align 1
  store %struct.Memory* %loadMem_40c235, %struct.Memory** %MEMORY
  %loadMem_40c238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2020 = getelementptr inbounds %struct.GPR, %struct.GPR* %2019, i32 0, i32 33
  %2021 = getelementptr inbounds %struct.Reg, %struct.Reg* %2020, i32 0, i32 0
  %PC.i1496 = bitcast %union.anon* %2021 to i64*
  %2022 = load i64, i64* %PC.i1496
  %2023 = add i64 %2022, 190
  %2024 = load i64, i64* %PC.i1496
  %2025 = add i64 %2024, 6
  %2026 = load i64, i64* %PC.i1496
  %2027 = add i64 %2026, 6
  store i64 %2027, i64* %PC.i1496
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2029 = load i8, i8* %2028, align 1
  %2030 = icmp eq i8 %2029, 0
  %2031 = zext i1 %2030 to i8
  store i8 %2031, i8* %BRANCH_TAKEN, align 1
  %2032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2033 = select i1 %2030, i64 %2023, i64 %2025
  store i64 %2033, i64* %2032, align 8
  store %struct.Memory* %loadMem_40c238, %struct.Memory** %MEMORY
  %loadBr_40c238 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c238 = icmp eq i8 %loadBr_40c238, 1
  br i1 %cmpBr_40c238, label %block_.L_40c2f6, label %block_40c23e

block_40c23e:                                     ; preds = %block_.L_40c14c
  %loadMem_40c23e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2035 = getelementptr inbounds %struct.GPR, %struct.GPR* %2034, i32 0, i32 33
  %2036 = getelementptr inbounds %struct.Reg, %struct.Reg* %2035, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %2036 to i64*
  %2037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2038 = getelementptr inbounds %struct.GPR, %struct.GPR* %2037, i32 0, i32 1
  %2039 = getelementptr inbounds %struct.Reg, %struct.Reg* %2038, i32 0, i32 0
  %RAX.i1494 = bitcast %union.anon* %2039 to i64*
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2041 = getelementptr inbounds %struct.GPR, %struct.GPR* %2040, i32 0, i32 15
  %2042 = getelementptr inbounds %struct.Reg, %struct.Reg* %2041, i32 0, i32 0
  %RBP.i1495 = bitcast %union.anon* %2042 to i64*
  %2043 = load i64, i64* %RBP.i1495
  %2044 = sub i64 %2043, 4
  %2045 = load i64, i64* %PC.i1493
  %2046 = add i64 %2045, 3
  store i64 %2046, i64* %PC.i1493
  %2047 = inttoptr i64 %2044 to i32*
  %2048 = load i32, i32* %2047
  %2049 = zext i32 %2048 to i64
  store i64 %2049, i64* %RAX.i1494, align 8
  store %struct.Memory* %loadMem_40c23e, %struct.Memory** %MEMORY
  %loadMem_40c241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2051 = getelementptr inbounds %struct.GPR, %struct.GPR* %2050, i32 0, i32 33
  %2052 = getelementptr inbounds %struct.Reg, %struct.Reg* %2051, i32 0, i32 0
  %PC.i1491 = bitcast %union.anon* %2052 to i64*
  %2053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2054 = getelementptr inbounds %struct.GPR, %struct.GPR* %2053, i32 0, i32 1
  %2055 = getelementptr inbounds %struct.Reg, %struct.Reg* %2054, i32 0, i32 0
  %RAX.i1492 = bitcast %union.anon* %2055 to i64*
  %2056 = load i64, i64* %RAX.i1492
  %2057 = load i64, i64* %PC.i1491
  %2058 = add i64 %2057, 3
  store i64 %2058, i64* %PC.i1491
  %2059 = trunc i64 %2056 to i32
  %2060 = add i32 20, %2059
  %2061 = zext i32 %2060 to i64
  store i64 %2061, i64* %RAX.i1492, align 8
  %2062 = icmp ult i32 %2060, %2059
  %2063 = icmp ult i32 %2060, 20
  %2064 = or i1 %2062, %2063
  %2065 = zext i1 %2064 to i8
  %2066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2065, i8* %2066, align 1
  %2067 = and i32 %2060, 255
  %2068 = call i32 @llvm.ctpop.i32(i32 %2067)
  %2069 = trunc i32 %2068 to i8
  %2070 = and i8 %2069, 1
  %2071 = xor i8 %2070, 1
  %2072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2071, i8* %2072, align 1
  %2073 = xor i64 20, %2056
  %2074 = trunc i64 %2073 to i32
  %2075 = xor i32 %2074, %2060
  %2076 = lshr i32 %2075, 4
  %2077 = trunc i32 %2076 to i8
  %2078 = and i8 %2077, 1
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2078, i8* %2079, align 1
  %2080 = icmp eq i32 %2060, 0
  %2081 = zext i1 %2080 to i8
  %2082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2081, i8* %2082, align 1
  %2083 = lshr i32 %2060, 31
  %2084 = trunc i32 %2083 to i8
  %2085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2084, i8* %2085, align 1
  %2086 = lshr i32 %2059, 31
  %2087 = xor i32 %2083, %2086
  %2088 = add i32 %2087, %2083
  %2089 = icmp eq i32 %2088, 2
  %2090 = zext i1 %2089 to i8
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2090, i8* %2091, align 1
  store %struct.Memory* %loadMem_40c241, %struct.Memory** %MEMORY
  %loadMem_40c244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2093 = getelementptr inbounds %struct.GPR, %struct.GPR* %2092, i32 0, i32 33
  %2094 = getelementptr inbounds %struct.Reg, %struct.Reg* %2093, i32 0, i32 0
  %PC.i1488 = bitcast %union.anon* %2094 to i64*
  %2095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2096 = getelementptr inbounds %struct.GPR, %struct.GPR* %2095, i32 0, i32 1
  %2097 = getelementptr inbounds %struct.Reg, %struct.Reg* %2096, i32 0, i32 0
  %EAX.i1489 = bitcast %union.anon* %2097 to i32*
  %2098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2099 = getelementptr inbounds %struct.GPR, %struct.GPR* %2098, i32 0, i32 5
  %2100 = getelementptr inbounds %struct.Reg, %struct.Reg* %2099, i32 0, i32 0
  %RCX.i1490 = bitcast %union.anon* %2100 to i64*
  %2101 = load i32, i32* %EAX.i1489
  %2102 = zext i32 %2101 to i64
  %2103 = load i64, i64* %PC.i1488
  %2104 = add i64 %2103, 3
  store i64 %2104, i64* %PC.i1488
  %2105 = shl i64 %2102, 32
  %2106 = ashr exact i64 %2105, 32
  store i64 %2106, i64* %RCX.i1490, align 8
  store %struct.Memory* %loadMem_40c244, %struct.Memory** %MEMORY
  %loadMem_40c247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2108 = getelementptr inbounds %struct.GPR, %struct.GPR* %2107, i32 0, i32 33
  %2109 = getelementptr inbounds %struct.Reg, %struct.Reg* %2108, i32 0, i32 0
  %PC.i1485 = bitcast %union.anon* %2109 to i64*
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2111 = getelementptr inbounds %struct.GPR, %struct.GPR* %2110, i32 0, i32 1
  %2112 = getelementptr inbounds %struct.Reg, %struct.Reg* %2111, i32 0, i32 0
  %RAX.i1486 = bitcast %union.anon* %2112 to i64*
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2114 = getelementptr inbounds %struct.GPR, %struct.GPR* %2113, i32 0, i32 5
  %2115 = getelementptr inbounds %struct.Reg, %struct.Reg* %2114, i32 0, i32 0
  %RCX.i1487 = bitcast %union.anon* %2115 to i64*
  %2116 = load i64, i64* %RCX.i1487
  %2117 = mul i64 %2116, 4
  %2118 = add i64 %2117, 11185584
  %2119 = load i64, i64* %PC.i1485
  %2120 = add i64 %2119, 7
  store i64 %2120, i64* %PC.i1485
  %2121 = inttoptr i64 %2118 to i32*
  %2122 = load i32, i32* %2121
  %2123 = zext i32 %2122 to i64
  store i64 %2123, i64* %RAX.i1486, align 8
  store %struct.Memory* %loadMem_40c247, %struct.Memory** %MEMORY
  %loadMem_40c24e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2125 = getelementptr inbounds %struct.GPR, %struct.GPR* %2124, i32 0, i32 33
  %2126 = getelementptr inbounds %struct.Reg, %struct.Reg* %2125, i32 0, i32 0
  %PC.i1483 = bitcast %union.anon* %2126 to i64*
  %2127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2128 = getelementptr inbounds %struct.GPR, %struct.GPR* %2127, i32 0, i32 1
  %2129 = getelementptr inbounds %struct.Reg, %struct.Reg* %2128, i32 0, i32 0
  %EAX.i1484 = bitcast %union.anon* %2129 to i32*
  %2130 = load i32, i32* %EAX.i1484
  %2131 = zext i32 %2130 to i64
  %2132 = load i64, i64* %PC.i1483
  %2133 = add i64 %2132, 7
  store i64 %2133, i64* %PC.i1483
  %2134 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %2135 = sub i32 %2130, %2134
  %2136 = icmp ult i32 %2130, %2134
  %2137 = zext i1 %2136 to i8
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2137, i8* %2138, align 1
  %2139 = and i32 %2135, 255
  %2140 = call i32 @llvm.ctpop.i32(i32 %2139)
  %2141 = trunc i32 %2140 to i8
  %2142 = and i8 %2141, 1
  %2143 = xor i8 %2142, 1
  %2144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2143, i8* %2144, align 1
  %2145 = xor i32 %2134, %2130
  %2146 = xor i32 %2145, %2135
  %2147 = lshr i32 %2146, 4
  %2148 = trunc i32 %2147 to i8
  %2149 = and i8 %2148, 1
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2149, i8* %2150, align 1
  %2151 = icmp eq i32 %2135, 0
  %2152 = zext i1 %2151 to i8
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2152, i8* %2153, align 1
  %2154 = lshr i32 %2135, 31
  %2155 = trunc i32 %2154 to i8
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2155, i8* %2156, align 1
  %2157 = lshr i32 %2130, 31
  %2158 = lshr i32 %2134, 31
  %2159 = xor i32 %2158, %2157
  %2160 = xor i32 %2154, %2157
  %2161 = add i32 %2160, %2159
  %2162 = icmp eq i32 %2161, 2
  %2163 = zext i1 %2162 to i8
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2163, i8* %2164, align 1
  store %struct.Memory* %loadMem_40c24e, %struct.Memory** %MEMORY
  %loadMem_40c255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2166 = getelementptr inbounds %struct.GPR, %struct.GPR* %2165, i32 0, i32 33
  %2167 = getelementptr inbounds %struct.Reg, %struct.Reg* %2166, i32 0, i32 0
  %PC.i1482 = bitcast %union.anon* %2167 to i64*
  %2168 = load i64, i64* %PC.i1482
  %2169 = add i64 %2168, 161
  %2170 = load i64, i64* %PC.i1482
  %2171 = add i64 %2170, 6
  %2172 = load i64, i64* %PC.i1482
  %2173 = add i64 %2172, 6
  store i64 %2173, i64* %PC.i1482
  %2174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2175 = load i8, i8* %2174, align 1
  store i8 %2175, i8* %BRANCH_TAKEN, align 1
  %2176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2177 = icmp ne i8 %2175, 0
  %2178 = select i1 %2177, i64 %2169, i64 %2171
  store i64 %2178, i64* %2176, align 8
  store %struct.Memory* %loadMem_40c255, %struct.Memory** %MEMORY
  %loadBr_40c255 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c255 = icmp eq i8 %loadBr_40c255, 1
  br i1 %cmpBr_40c255, label %block_.L_40c2f6, label %block_40c25b

block_40c25b:                                     ; preds = %block_40c23e
  %loadMem_40c25b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2180 = getelementptr inbounds %struct.GPR, %struct.GPR* %2179, i32 0, i32 33
  %2181 = getelementptr inbounds %struct.Reg, %struct.Reg* %2180, i32 0, i32 0
  %PC.i1481 = bitcast %union.anon* %2181 to i64*
  %2182 = load i64, i64* %PC.i1481
  %2183 = add i64 %2182, 5
  %2184 = load i64, i64* %PC.i1481
  %2185 = add i64 %2184, 5
  store i64 %2185, i64* %PC.i1481
  %2186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2183, i64* %2186, align 8
  store %struct.Memory* %loadMem_40c25b, %struct.Memory** %MEMORY
  br label %block_.L_40c260

block_.L_40c260:                                  ; preds = %block_40c25b
  %loadMem_40c260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2188 = getelementptr inbounds %struct.GPR, %struct.GPR* %2187, i32 0, i32 33
  %2189 = getelementptr inbounds %struct.Reg, %struct.Reg* %2188, i32 0, i32 0
  %PC.i1479 = bitcast %union.anon* %2189 to i64*
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2191 = getelementptr inbounds %struct.GPR, %struct.GPR* %2190, i32 0, i32 1
  %2192 = getelementptr inbounds %struct.Reg, %struct.Reg* %2191, i32 0, i32 0
  %RAX.i1480 = bitcast %union.anon* %2192 to i64*
  %2193 = load i64, i64* %PC.i1479
  %2194 = add i64 %2193, 10
  store i64 %2194, i64* %PC.i1479
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1480, align 8
  store %struct.Memory* %loadMem_40c260, %struct.Memory** %MEMORY
  %loadMem_40c26a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2196 = getelementptr inbounds %struct.GPR, %struct.GPR* %2195, i32 0, i32 33
  %2197 = getelementptr inbounds %struct.Reg, %struct.Reg* %2196, i32 0, i32 0
  %PC.i1476 = bitcast %union.anon* %2197 to i64*
  %2198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2199 = getelementptr inbounds %struct.GPR, %struct.GPR* %2198, i32 0, i32 5
  %2200 = getelementptr inbounds %struct.Reg, %struct.Reg* %2199, i32 0, i32 0
  %RCX.i1477 = bitcast %union.anon* %2200 to i64*
  %2201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2202 = getelementptr inbounds %struct.GPR, %struct.GPR* %2201, i32 0, i32 15
  %2203 = getelementptr inbounds %struct.Reg, %struct.Reg* %2202, i32 0, i32 0
  %RBP.i1478 = bitcast %union.anon* %2203 to i64*
  %2204 = load i64, i64* %RBP.i1478
  %2205 = sub i64 %2204, 8
  %2206 = load i64, i64* %PC.i1476
  %2207 = add i64 %2206, 4
  store i64 %2207, i64* %PC.i1476
  %2208 = inttoptr i64 %2205 to i32*
  %2209 = load i32, i32* %2208
  %2210 = sext i32 %2209 to i64
  store i64 %2210, i64* %RCX.i1477, align 8
  store %struct.Memory* %loadMem_40c26a, %struct.Memory** %MEMORY
  %loadMem_40c26e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2212 = getelementptr inbounds %struct.GPR, %struct.GPR* %2211, i32 0, i32 33
  %2213 = getelementptr inbounds %struct.Reg, %struct.Reg* %2212, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %2213 to i64*
  %2214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2215 = getelementptr inbounds %struct.GPR, %struct.GPR* %2214, i32 0, i32 5
  %2216 = getelementptr inbounds %struct.Reg, %struct.Reg* %2215, i32 0, i32 0
  %RCX.i1475 = bitcast %union.anon* %2216 to i64*
  %2217 = load i64, i64* %RCX.i1475
  %2218 = load i64, i64* %PC.i1474
  %2219 = add i64 %2218, 7
  store i64 %2219, i64* %PC.i1474
  %2220 = sext i64 %2217 to i128
  %2221 = and i128 %2220, -18446744073709551616
  %2222 = zext i64 %2217 to i128
  %2223 = or i128 %2221, %2222
  %2224 = mul i128 744, %2223
  %2225 = trunc i128 %2224 to i64
  store i64 %2225, i64* %RCX.i1475, align 8
  %2226 = sext i64 %2225 to i128
  %2227 = icmp ne i128 %2226, %2224
  %2228 = zext i1 %2227 to i8
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2228, i8* %2229, align 1
  %2230 = trunc i128 %2224 to i32
  %2231 = and i32 %2230, 255
  %2232 = call i32 @llvm.ctpop.i32(i32 %2231)
  %2233 = trunc i32 %2232 to i8
  %2234 = and i8 %2233, 1
  %2235 = xor i8 %2234, 1
  %2236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2235, i8* %2236, align 1
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2237, align 1
  %2238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2238, align 1
  %2239 = lshr i64 %2225, 63
  %2240 = trunc i64 %2239 to i8
  %2241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2240, i8* %2241, align 1
  %2242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2228, i8* %2242, align 1
  store %struct.Memory* %loadMem_40c26e, %struct.Memory** %MEMORY
  %loadMem_40c275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2244 = getelementptr inbounds %struct.GPR, %struct.GPR* %2243, i32 0, i32 33
  %2245 = getelementptr inbounds %struct.Reg, %struct.Reg* %2244, i32 0, i32 0
  %PC.i1471 = bitcast %union.anon* %2245 to i64*
  %2246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2247 = getelementptr inbounds %struct.GPR, %struct.GPR* %2246, i32 0, i32 1
  %2248 = getelementptr inbounds %struct.Reg, %struct.Reg* %2247, i32 0, i32 0
  %RAX.i1472 = bitcast %union.anon* %2248 to i64*
  %2249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2250 = getelementptr inbounds %struct.GPR, %struct.GPR* %2249, i32 0, i32 5
  %2251 = getelementptr inbounds %struct.Reg, %struct.Reg* %2250, i32 0, i32 0
  %RCX.i1473 = bitcast %union.anon* %2251 to i64*
  %2252 = load i64, i64* %RAX.i1472
  %2253 = load i64, i64* %RCX.i1473
  %2254 = load i64, i64* %PC.i1471
  %2255 = add i64 %2254, 3
  store i64 %2255, i64* %PC.i1471
  %2256 = add i64 %2253, %2252
  store i64 %2256, i64* %RAX.i1472, align 8
  %2257 = icmp ult i64 %2256, %2252
  %2258 = icmp ult i64 %2256, %2253
  %2259 = or i1 %2257, %2258
  %2260 = zext i1 %2259 to i8
  %2261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2260, i8* %2261, align 1
  %2262 = trunc i64 %2256 to i32
  %2263 = and i32 %2262, 255
  %2264 = call i32 @llvm.ctpop.i32(i32 %2263)
  %2265 = trunc i32 %2264 to i8
  %2266 = and i8 %2265, 1
  %2267 = xor i8 %2266, 1
  %2268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2267, i8* %2268, align 1
  %2269 = xor i64 %2253, %2252
  %2270 = xor i64 %2269, %2256
  %2271 = lshr i64 %2270, 4
  %2272 = trunc i64 %2271 to i8
  %2273 = and i8 %2272, 1
  %2274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2273, i8* %2274, align 1
  %2275 = icmp eq i64 %2256, 0
  %2276 = zext i1 %2275 to i8
  %2277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2276, i8* %2277, align 1
  %2278 = lshr i64 %2256, 63
  %2279 = trunc i64 %2278 to i8
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2279, i8* %2280, align 1
  %2281 = lshr i64 %2252, 63
  %2282 = lshr i64 %2253, 63
  %2283 = xor i64 %2278, %2281
  %2284 = xor i64 %2278, %2282
  %2285 = add i64 %2283, %2284
  %2286 = icmp eq i64 %2285, 2
  %2287 = zext i1 %2286 to i8
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2287, i8* %2288, align 1
  store %struct.Memory* %loadMem_40c275, %struct.Memory** %MEMORY
  %loadMem_40c278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2290 = getelementptr inbounds %struct.GPR, %struct.GPR* %2289, i32 0, i32 33
  %2291 = getelementptr inbounds %struct.Reg, %struct.Reg* %2290, i32 0, i32 0
  %PC.i1469 = bitcast %union.anon* %2291 to i64*
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2293 = getelementptr inbounds %struct.GPR, %struct.GPR* %2292, i32 0, i32 1
  %2294 = getelementptr inbounds %struct.Reg, %struct.Reg* %2293, i32 0, i32 0
  %RAX.i1470 = bitcast %union.anon* %2294 to i64*
  %2295 = load i64, i64* %RAX.i1470
  %2296 = add i64 %2295, 12
  %2297 = load i64, i64* %PC.i1469
  %2298 = add i64 %2297, 4
  store i64 %2298, i64* %PC.i1469
  %2299 = inttoptr i64 %2296 to i32*
  %2300 = load i32, i32* %2299
  %2301 = sub i32 %2300, 20
  %2302 = icmp ult i32 %2300, 20
  %2303 = zext i1 %2302 to i8
  %2304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2303, i8* %2304, align 1
  %2305 = and i32 %2301, 255
  %2306 = call i32 @llvm.ctpop.i32(i32 %2305)
  %2307 = trunc i32 %2306 to i8
  %2308 = and i8 %2307, 1
  %2309 = xor i8 %2308, 1
  %2310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2309, i8* %2310, align 1
  %2311 = xor i32 %2300, 20
  %2312 = xor i32 %2311, %2301
  %2313 = lshr i32 %2312, 4
  %2314 = trunc i32 %2313 to i8
  %2315 = and i8 %2314, 1
  %2316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2315, i8* %2316, align 1
  %2317 = icmp eq i32 %2301, 0
  %2318 = zext i1 %2317 to i8
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2318, i8* %2319, align 1
  %2320 = lshr i32 %2301, 31
  %2321 = trunc i32 %2320 to i8
  %2322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2321, i8* %2322, align 1
  %2323 = lshr i32 %2300, 31
  %2324 = xor i32 %2320, %2323
  %2325 = add i32 %2324, %2323
  %2326 = icmp eq i32 %2325, 2
  %2327 = zext i1 %2326 to i8
  %2328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2327, i8* %2328, align 1
  store %struct.Memory* %loadMem_40c278, %struct.Memory** %MEMORY
  %loadMem_40c27c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2330 = getelementptr inbounds %struct.GPR, %struct.GPR* %2329, i32 0, i32 33
  %2331 = getelementptr inbounds %struct.Reg, %struct.Reg* %2330, i32 0, i32 0
  %PC.i1468 = bitcast %union.anon* %2331 to i64*
  %2332 = load i64, i64* %PC.i1468
  %2333 = add i64 %2332, 61
  %2334 = load i64, i64* %PC.i1468
  %2335 = add i64 %2334, 6
  %2336 = load i64, i64* %PC.i1468
  %2337 = add i64 %2336, 6
  store i64 %2337, i64* %PC.i1468
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2339 = load i8, i8* %2338, align 1
  %2340 = icmp ne i8 %2339, 0
  %2341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2342 = load i8, i8* %2341, align 1
  %2343 = icmp ne i8 %2342, 0
  %2344 = xor i1 %2340, %2343
  %2345 = xor i1 %2344, true
  %2346 = zext i1 %2345 to i8
  store i8 %2346, i8* %BRANCH_TAKEN, align 1
  %2347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2348 = select i1 %2344, i64 %2335, i64 %2333
  store i64 %2348, i64* %2347, align 8
  store %struct.Memory* %loadMem_40c27c, %struct.Memory** %MEMORY
  %loadBr_40c27c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c27c = icmp eq i8 %loadBr_40c27c, 1
  br i1 %cmpBr_40c27c, label %block_.L_40c2b9, label %block_40c282

block_40c282:                                     ; preds = %block_.L_40c260
  %loadMem_40c282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2350 = getelementptr inbounds %struct.GPR, %struct.GPR* %2349, i32 0, i32 33
  %2351 = getelementptr inbounds %struct.Reg, %struct.Reg* %2350, i32 0, i32 0
  %PC.i1466 = bitcast %union.anon* %2351 to i64*
  %2352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2353 = getelementptr inbounds %struct.GPR, %struct.GPR* %2352, i32 0, i32 1
  %2354 = getelementptr inbounds %struct.Reg, %struct.Reg* %2353, i32 0, i32 0
  %RAX.i1467 = bitcast %union.anon* %2354 to i64*
  %2355 = load i64, i64* %PC.i1466
  %2356 = add i64 %2355, 10
  store i64 %2356, i64* %PC.i1466
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1467, align 8
  store %struct.Memory* %loadMem_40c282, %struct.Memory** %MEMORY
  %loadMem_40c28c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2358 = getelementptr inbounds %struct.GPR, %struct.GPR* %2357, i32 0, i32 33
  %2359 = getelementptr inbounds %struct.Reg, %struct.Reg* %2358, i32 0, i32 0
  %PC.i1463 = bitcast %union.anon* %2359 to i64*
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2361 = getelementptr inbounds %struct.GPR, %struct.GPR* %2360, i32 0, i32 5
  %2362 = getelementptr inbounds %struct.Reg, %struct.Reg* %2361, i32 0, i32 0
  %RCX.i1464 = bitcast %union.anon* %2362 to i64*
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2364 = getelementptr inbounds %struct.GPR, %struct.GPR* %2363, i32 0, i32 15
  %2365 = getelementptr inbounds %struct.Reg, %struct.Reg* %2364, i32 0, i32 0
  %RBP.i1465 = bitcast %union.anon* %2365 to i64*
  %2366 = load i64, i64* %RBP.i1465
  %2367 = sub i64 %2366, 4
  %2368 = load i64, i64* %PC.i1463
  %2369 = add i64 %2368, 3
  store i64 %2369, i64* %PC.i1463
  %2370 = inttoptr i64 %2367 to i32*
  %2371 = load i32, i32* %2370
  %2372 = zext i32 %2371 to i64
  store i64 %2372, i64* %RCX.i1464, align 8
  store %struct.Memory* %loadMem_40c28c, %struct.Memory** %MEMORY
  %loadMem_40c28f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2374 = getelementptr inbounds %struct.GPR, %struct.GPR* %2373, i32 0, i32 33
  %2375 = getelementptr inbounds %struct.Reg, %struct.Reg* %2374, i32 0, i32 0
  %PC.i1461 = bitcast %union.anon* %2375 to i64*
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2377 = getelementptr inbounds %struct.GPR, %struct.GPR* %2376, i32 0, i32 5
  %2378 = getelementptr inbounds %struct.Reg, %struct.Reg* %2377, i32 0, i32 0
  %RCX.i1462 = bitcast %union.anon* %2378 to i64*
  %2379 = load i64, i64* %RCX.i1462
  %2380 = load i64, i64* %PC.i1461
  %2381 = add i64 %2380, 3
  store i64 %2381, i64* %PC.i1461
  %2382 = trunc i64 %2379 to i32
  %2383 = add i32 20, %2382
  %2384 = zext i32 %2383 to i64
  store i64 %2384, i64* %RCX.i1462, align 8
  %2385 = icmp ult i32 %2383, %2382
  %2386 = icmp ult i32 %2383, 20
  %2387 = or i1 %2385, %2386
  %2388 = zext i1 %2387 to i8
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2388, i8* %2389, align 1
  %2390 = and i32 %2383, 255
  %2391 = call i32 @llvm.ctpop.i32(i32 %2390)
  %2392 = trunc i32 %2391 to i8
  %2393 = and i8 %2392, 1
  %2394 = xor i8 %2393, 1
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2394, i8* %2395, align 1
  %2396 = xor i64 20, %2379
  %2397 = trunc i64 %2396 to i32
  %2398 = xor i32 %2397, %2383
  %2399 = lshr i32 %2398, 4
  %2400 = trunc i32 %2399 to i8
  %2401 = and i8 %2400, 1
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2401, i8* %2402, align 1
  %2403 = icmp eq i32 %2383, 0
  %2404 = zext i1 %2403 to i8
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2404, i8* %2405, align 1
  %2406 = lshr i32 %2383, 31
  %2407 = trunc i32 %2406 to i8
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2407, i8* %2408, align 1
  %2409 = lshr i32 %2382, 31
  %2410 = xor i32 %2406, %2409
  %2411 = add i32 %2410, %2406
  %2412 = icmp eq i32 %2411, 2
  %2413 = zext i1 %2412 to i8
  %2414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2413, i8* %2414, align 1
  store %struct.Memory* %loadMem_40c28f, %struct.Memory** %MEMORY
  %loadMem_40c292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2416 = getelementptr inbounds %struct.GPR, %struct.GPR* %2415, i32 0, i32 33
  %2417 = getelementptr inbounds %struct.Reg, %struct.Reg* %2416, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %2417 to i64*
  %2418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2419 = getelementptr inbounds %struct.GPR, %struct.GPR* %2418, i32 0, i32 7
  %2420 = getelementptr inbounds %struct.Reg, %struct.Reg* %2419, i32 0, i32 0
  %RDX.i1459 = bitcast %union.anon* %2420 to i64*
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2422 = getelementptr inbounds %struct.GPR, %struct.GPR* %2421, i32 0, i32 15
  %2423 = getelementptr inbounds %struct.Reg, %struct.Reg* %2422, i32 0, i32 0
  %RBP.i1460 = bitcast %union.anon* %2423 to i64*
  %2424 = load i64, i64* %RBP.i1460
  %2425 = sub i64 %2424, 8
  %2426 = load i64, i64* %PC.i1458
  %2427 = add i64 %2426, 4
  store i64 %2427, i64* %PC.i1458
  %2428 = inttoptr i64 %2425 to i32*
  %2429 = load i32, i32* %2428
  %2430 = sext i32 %2429 to i64
  store i64 %2430, i64* %RDX.i1459, align 8
  store %struct.Memory* %loadMem_40c292, %struct.Memory** %MEMORY
  %loadMem_40c296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2432 = getelementptr inbounds %struct.GPR, %struct.GPR* %2431, i32 0, i32 33
  %2433 = getelementptr inbounds %struct.Reg, %struct.Reg* %2432, i32 0, i32 0
  %PC.i1456 = bitcast %union.anon* %2433 to i64*
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2435 = getelementptr inbounds %struct.GPR, %struct.GPR* %2434, i32 0, i32 7
  %2436 = getelementptr inbounds %struct.Reg, %struct.Reg* %2435, i32 0, i32 0
  %RDX.i1457 = bitcast %union.anon* %2436 to i64*
  %2437 = load i64, i64* %RDX.i1457
  %2438 = load i64, i64* %PC.i1456
  %2439 = add i64 %2438, 7
  store i64 %2439, i64* %PC.i1456
  %2440 = sext i64 %2437 to i128
  %2441 = and i128 %2440, -18446744073709551616
  %2442 = zext i64 %2437 to i128
  %2443 = or i128 %2441, %2442
  %2444 = mul i128 744, %2443
  %2445 = trunc i128 %2444 to i64
  store i64 %2445, i64* %RDX.i1457, align 8
  %2446 = sext i64 %2445 to i128
  %2447 = icmp ne i128 %2446, %2444
  %2448 = zext i1 %2447 to i8
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2448, i8* %2449, align 1
  %2450 = trunc i128 %2444 to i32
  %2451 = and i32 %2450, 255
  %2452 = call i32 @llvm.ctpop.i32(i32 %2451)
  %2453 = trunc i32 %2452 to i8
  %2454 = and i8 %2453, 1
  %2455 = xor i8 %2454, 1
  %2456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2455, i8* %2456, align 1
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2457, align 1
  %2458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2458, align 1
  %2459 = lshr i64 %2445, 63
  %2460 = trunc i64 %2459 to i8
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2460, i8* %2461, align 1
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2448, i8* %2462, align 1
  store %struct.Memory* %loadMem_40c296, %struct.Memory** %MEMORY
  %loadMem_40c29d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2464 = getelementptr inbounds %struct.GPR, %struct.GPR* %2463, i32 0, i32 33
  %2465 = getelementptr inbounds %struct.Reg, %struct.Reg* %2464, i32 0, i32 0
  %PC.i1453 = bitcast %union.anon* %2465 to i64*
  %2466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2467 = getelementptr inbounds %struct.GPR, %struct.GPR* %2466, i32 0, i32 1
  %2468 = getelementptr inbounds %struct.Reg, %struct.Reg* %2467, i32 0, i32 0
  %RAX.i1454 = bitcast %union.anon* %2468 to i64*
  %2469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2470 = getelementptr inbounds %struct.GPR, %struct.GPR* %2469, i32 0, i32 9
  %2471 = getelementptr inbounds %struct.Reg, %struct.Reg* %2470, i32 0, i32 0
  %RSI.i1455 = bitcast %union.anon* %2471 to i64*
  %2472 = load i64, i64* %RAX.i1454
  %2473 = load i64, i64* %PC.i1453
  %2474 = add i64 %2473, 3
  store i64 %2474, i64* %PC.i1453
  store i64 %2472, i64* %RSI.i1455, align 8
  store %struct.Memory* %loadMem_40c29d, %struct.Memory** %MEMORY
  %loadMem_40c2a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2476 = getelementptr inbounds %struct.GPR, %struct.GPR* %2475, i32 0, i32 33
  %2477 = getelementptr inbounds %struct.Reg, %struct.Reg* %2476, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %2477 to i64*
  %2478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2479 = getelementptr inbounds %struct.GPR, %struct.GPR* %2478, i32 0, i32 7
  %2480 = getelementptr inbounds %struct.Reg, %struct.Reg* %2479, i32 0, i32 0
  %RDX.i1451 = bitcast %union.anon* %2480 to i64*
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2482 = getelementptr inbounds %struct.GPR, %struct.GPR* %2481, i32 0, i32 9
  %2483 = getelementptr inbounds %struct.Reg, %struct.Reg* %2482, i32 0, i32 0
  %RSI.i1452 = bitcast %union.anon* %2483 to i64*
  %2484 = load i64, i64* %RSI.i1452
  %2485 = load i64, i64* %RDX.i1451
  %2486 = load i64, i64* %PC.i1450
  %2487 = add i64 %2486, 3
  store i64 %2487, i64* %PC.i1450
  %2488 = add i64 %2485, %2484
  store i64 %2488, i64* %RSI.i1452, align 8
  %2489 = icmp ult i64 %2488, %2484
  %2490 = icmp ult i64 %2488, %2485
  %2491 = or i1 %2489, %2490
  %2492 = zext i1 %2491 to i8
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2492, i8* %2493, align 1
  %2494 = trunc i64 %2488 to i32
  %2495 = and i32 %2494, 255
  %2496 = call i32 @llvm.ctpop.i32(i32 %2495)
  %2497 = trunc i32 %2496 to i8
  %2498 = and i8 %2497, 1
  %2499 = xor i8 %2498, 1
  %2500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2499, i8* %2500, align 1
  %2501 = xor i64 %2485, %2484
  %2502 = xor i64 %2501, %2488
  %2503 = lshr i64 %2502, 4
  %2504 = trunc i64 %2503 to i8
  %2505 = and i8 %2504, 1
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2505, i8* %2506, align 1
  %2507 = icmp eq i64 %2488, 0
  %2508 = zext i1 %2507 to i8
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2508, i8* %2509, align 1
  %2510 = lshr i64 %2488, 63
  %2511 = trunc i64 %2510 to i8
  %2512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2511, i8* %2512, align 1
  %2513 = lshr i64 %2484, 63
  %2514 = lshr i64 %2485, 63
  %2515 = xor i64 %2510, %2513
  %2516 = xor i64 %2510, %2514
  %2517 = add i64 %2515, %2516
  %2518 = icmp eq i64 %2517, 2
  %2519 = zext i1 %2518 to i8
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2519, i8* %2520, align 1
  store %struct.Memory* %loadMem_40c2a0, %struct.Memory** %MEMORY
  %loadMem_40c2a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2522 = getelementptr inbounds %struct.GPR, %struct.GPR* %2521, i32 0, i32 33
  %2523 = getelementptr inbounds %struct.Reg, %struct.Reg* %2522, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %2523 to i64*
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2525 = getelementptr inbounds %struct.GPR, %struct.GPR* %2524, i32 0, i32 7
  %2526 = getelementptr inbounds %struct.Reg, %struct.Reg* %2525, i32 0, i32 0
  %RDX.i1448 = bitcast %union.anon* %2526 to i64*
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2528 = getelementptr inbounds %struct.GPR, %struct.GPR* %2527, i32 0, i32 15
  %2529 = getelementptr inbounds %struct.Reg, %struct.Reg* %2528, i32 0, i32 0
  %RBP.i1449 = bitcast %union.anon* %2529 to i64*
  %2530 = load i64, i64* %RBP.i1449
  %2531 = sub i64 %2530, 8
  %2532 = load i64, i64* %PC.i1447
  %2533 = add i64 %2532, 4
  store i64 %2533, i64* %PC.i1447
  %2534 = inttoptr i64 %2531 to i32*
  %2535 = load i32, i32* %2534
  %2536 = sext i32 %2535 to i64
  store i64 %2536, i64* %RDX.i1448, align 8
  store %struct.Memory* %loadMem_40c2a3, %struct.Memory** %MEMORY
  %loadMem_40c2a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2538 = getelementptr inbounds %struct.GPR, %struct.GPR* %2537, i32 0, i32 33
  %2539 = getelementptr inbounds %struct.Reg, %struct.Reg* %2538, i32 0, i32 0
  %PC.i1445 = bitcast %union.anon* %2539 to i64*
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2541 = getelementptr inbounds %struct.GPR, %struct.GPR* %2540, i32 0, i32 7
  %2542 = getelementptr inbounds %struct.Reg, %struct.Reg* %2541, i32 0, i32 0
  %RDX.i1446 = bitcast %union.anon* %2542 to i64*
  %2543 = load i64, i64* %RDX.i1446
  %2544 = load i64, i64* %PC.i1445
  %2545 = add i64 %2544, 7
  store i64 %2545, i64* %PC.i1445
  %2546 = sext i64 %2543 to i128
  %2547 = and i128 %2546, -18446744073709551616
  %2548 = zext i64 %2543 to i128
  %2549 = or i128 %2547, %2548
  %2550 = mul i128 744, %2549
  %2551 = trunc i128 %2550 to i64
  store i64 %2551, i64* %RDX.i1446, align 8
  %2552 = sext i64 %2551 to i128
  %2553 = icmp ne i128 %2552, %2550
  %2554 = zext i1 %2553 to i8
  %2555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2554, i8* %2555, align 1
  %2556 = trunc i128 %2550 to i32
  %2557 = and i32 %2556, 255
  %2558 = call i32 @llvm.ctpop.i32(i32 %2557)
  %2559 = trunc i32 %2558 to i8
  %2560 = and i8 %2559, 1
  %2561 = xor i8 %2560, 1
  %2562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2561, i8* %2562, align 1
  %2563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2563, align 1
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2564, align 1
  %2565 = lshr i64 %2551, 63
  %2566 = trunc i64 %2565 to i8
  %2567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2566, i8* %2567, align 1
  %2568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2554, i8* %2568, align 1
  store %struct.Memory* %loadMem_40c2a7, %struct.Memory** %MEMORY
  %loadMem_40c2ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %2569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2570 = getelementptr inbounds %struct.GPR, %struct.GPR* %2569, i32 0, i32 33
  %2571 = getelementptr inbounds %struct.Reg, %struct.Reg* %2570, i32 0, i32 0
  %PC.i1442 = bitcast %union.anon* %2571 to i64*
  %2572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2573 = getelementptr inbounds %struct.GPR, %struct.GPR* %2572, i32 0, i32 1
  %2574 = getelementptr inbounds %struct.Reg, %struct.Reg* %2573, i32 0, i32 0
  %RAX.i1443 = bitcast %union.anon* %2574 to i64*
  %2575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2576 = getelementptr inbounds %struct.GPR, %struct.GPR* %2575, i32 0, i32 7
  %2577 = getelementptr inbounds %struct.Reg, %struct.Reg* %2576, i32 0, i32 0
  %RDX.i1444 = bitcast %union.anon* %2577 to i64*
  %2578 = load i64, i64* %RAX.i1443
  %2579 = load i64, i64* %RDX.i1444
  %2580 = load i64, i64* %PC.i1442
  %2581 = add i64 %2580, 3
  store i64 %2581, i64* %PC.i1442
  %2582 = add i64 %2579, %2578
  store i64 %2582, i64* %RAX.i1443, align 8
  %2583 = icmp ult i64 %2582, %2578
  %2584 = icmp ult i64 %2582, %2579
  %2585 = or i1 %2583, %2584
  %2586 = zext i1 %2585 to i8
  %2587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2586, i8* %2587, align 1
  %2588 = trunc i64 %2582 to i32
  %2589 = and i32 %2588, 255
  %2590 = call i32 @llvm.ctpop.i32(i32 %2589)
  %2591 = trunc i32 %2590 to i8
  %2592 = and i8 %2591, 1
  %2593 = xor i8 %2592, 1
  %2594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2593, i8* %2594, align 1
  %2595 = xor i64 %2579, %2578
  %2596 = xor i64 %2595, %2582
  %2597 = lshr i64 %2596, 4
  %2598 = trunc i64 %2597 to i8
  %2599 = and i8 %2598, 1
  %2600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2599, i8* %2600, align 1
  %2601 = icmp eq i64 %2582, 0
  %2602 = zext i1 %2601 to i8
  %2603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2602, i8* %2603, align 1
  %2604 = lshr i64 %2582, 63
  %2605 = trunc i64 %2604 to i8
  %2606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2605, i8* %2606, align 1
  %2607 = lshr i64 %2578, 63
  %2608 = lshr i64 %2579, 63
  %2609 = xor i64 %2604, %2607
  %2610 = xor i64 %2604, %2608
  %2611 = add i64 %2609, %2610
  %2612 = icmp eq i64 %2611, 2
  %2613 = zext i1 %2612 to i8
  %2614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2613, i8* %2614, align 1
  store %struct.Memory* %loadMem_40c2ae, %struct.Memory** %MEMORY
  %loadMem_40c2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2616 = getelementptr inbounds %struct.GPR, %struct.GPR* %2615, i32 0, i32 33
  %2617 = getelementptr inbounds %struct.Reg, %struct.Reg* %2616, i32 0, i32 0
  %PC.i1440 = bitcast %union.anon* %2617 to i64*
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2619 = getelementptr inbounds %struct.GPR, %struct.GPR* %2618, i32 0, i32 1
  %2620 = getelementptr inbounds %struct.Reg, %struct.Reg* %2619, i32 0, i32 0
  %RAX.i1441 = bitcast %union.anon* %2620 to i64*
  %2621 = load i64, i64* %RAX.i1441
  %2622 = add i64 %2621, 12
  %2623 = load i64, i64* %PC.i1440
  %2624 = add i64 %2623, 4
  store i64 %2624, i64* %PC.i1440
  %2625 = inttoptr i64 %2622 to i32*
  %2626 = load i32, i32* %2625
  %2627 = sext i32 %2626 to i64
  store i64 %2627, i64* %RAX.i1441, align 8
  store %struct.Memory* %loadMem_40c2b1, %struct.Memory** %MEMORY
  %loadMem_40c2b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2629 = getelementptr inbounds %struct.GPR, %struct.GPR* %2628, i32 0, i32 33
  %2630 = getelementptr inbounds %struct.Reg, %struct.Reg* %2629, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %2630 to i64*
  %2631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2632 = getelementptr inbounds %struct.GPR, %struct.GPR* %2631, i32 0, i32 5
  %2633 = getelementptr inbounds %struct.Reg, %struct.Reg* %2632, i32 0, i32 0
  %ECX.i1437 = bitcast %union.anon* %2633 to i32*
  %2634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2635 = getelementptr inbounds %struct.GPR, %struct.GPR* %2634, i32 0, i32 1
  %2636 = getelementptr inbounds %struct.Reg, %struct.Reg* %2635, i32 0, i32 0
  %RAX.i1438 = bitcast %union.anon* %2636 to i64*
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2638 = getelementptr inbounds %struct.GPR, %struct.GPR* %2637, i32 0, i32 9
  %2639 = getelementptr inbounds %struct.Reg, %struct.Reg* %2638, i32 0, i32 0
  %RSI.i1439 = bitcast %union.anon* %2639 to i64*
  %2640 = load i64, i64* %RSI.i1439
  %2641 = load i64, i64* %RAX.i1438
  %2642 = mul i64 %2641, 4
  %2643 = add i64 %2640, 16
  %2644 = add i64 %2643, %2642
  %2645 = load i32, i32* %ECX.i1437
  %2646 = zext i32 %2645 to i64
  %2647 = load i64, i64* %PC.i1436
  %2648 = add i64 %2647, 4
  store i64 %2648, i64* %PC.i1436
  %2649 = inttoptr i64 %2644 to i32*
  store i32 %2645, i32* %2649
  store %struct.Memory* %loadMem_40c2b5, %struct.Memory** %MEMORY
  br label %block_.L_40c2b9

block_.L_40c2b9:                                  ; preds = %block_40c282, %block_.L_40c260
  %loadMem_40c2b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2651 = getelementptr inbounds %struct.GPR, %struct.GPR* %2650, i32 0, i32 33
  %2652 = getelementptr inbounds %struct.Reg, %struct.Reg* %2651, i32 0, i32 0
  %PC.i1434 = bitcast %union.anon* %2652 to i64*
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2654 = getelementptr inbounds %struct.GPR, %struct.GPR* %2653, i32 0, i32 1
  %2655 = getelementptr inbounds %struct.Reg, %struct.Reg* %2654, i32 0, i32 0
  %RAX.i1435 = bitcast %union.anon* %2655 to i64*
  %2656 = load i64, i64* %PC.i1434
  %2657 = add i64 %2656, 10
  store i64 %2657, i64* %PC.i1434
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1435, align 8
  store %struct.Memory* %loadMem_40c2b9, %struct.Memory** %MEMORY
  %loadMem_40c2c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2659 = getelementptr inbounds %struct.GPR, %struct.GPR* %2658, i32 0, i32 33
  %2660 = getelementptr inbounds %struct.Reg, %struct.Reg* %2659, i32 0, i32 0
  %PC.i1431 = bitcast %union.anon* %2660 to i64*
  %2661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2662 = getelementptr inbounds %struct.GPR, %struct.GPR* %2661, i32 0, i32 5
  %2663 = getelementptr inbounds %struct.Reg, %struct.Reg* %2662, i32 0, i32 0
  %RCX.i1432 = bitcast %union.anon* %2663 to i64*
  %2664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2665 = getelementptr inbounds %struct.GPR, %struct.GPR* %2664, i32 0, i32 15
  %2666 = getelementptr inbounds %struct.Reg, %struct.Reg* %2665, i32 0, i32 0
  %RBP.i1433 = bitcast %union.anon* %2666 to i64*
  %2667 = load i64, i64* %RBP.i1433
  %2668 = sub i64 %2667, 8
  %2669 = load i64, i64* %PC.i1431
  %2670 = add i64 %2669, 4
  store i64 %2670, i64* %PC.i1431
  %2671 = inttoptr i64 %2668 to i32*
  %2672 = load i32, i32* %2671
  %2673 = sext i32 %2672 to i64
  store i64 %2673, i64* %RCX.i1432, align 8
  store %struct.Memory* %loadMem_40c2c3, %struct.Memory** %MEMORY
  %loadMem_40c2c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2675 = getelementptr inbounds %struct.GPR, %struct.GPR* %2674, i32 0, i32 33
  %2676 = getelementptr inbounds %struct.Reg, %struct.Reg* %2675, i32 0, i32 0
  %PC.i1429 = bitcast %union.anon* %2676 to i64*
  %2677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2678 = getelementptr inbounds %struct.GPR, %struct.GPR* %2677, i32 0, i32 5
  %2679 = getelementptr inbounds %struct.Reg, %struct.Reg* %2678, i32 0, i32 0
  %RCX.i1430 = bitcast %union.anon* %2679 to i64*
  %2680 = load i64, i64* %RCX.i1430
  %2681 = load i64, i64* %PC.i1429
  %2682 = add i64 %2681, 7
  store i64 %2682, i64* %PC.i1429
  %2683 = sext i64 %2680 to i128
  %2684 = and i128 %2683, -18446744073709551616
  %2685 = zext i64 %2680 to i128
  %2686 = or i128 %2684, %2685
  %2687 = mul i128 744, %2686
  %2688 = trunc i128 %2687 to i64
  store i64 %2688, i64* %RCX.i1430, align 8
  %2689 = sext i64 %2688 to i128
  %2690 = icmp ne i128 %2689, %2687
  %2691 = zext i1 %2690 to i8
  %2692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2691, i8* %2692, align 1
  %2693 = trunc i128 %2687 to i32
  %2694 = and i32 %2693, 255
  %2695 = call i32 @llvm.ctpop.i32(i32 %2694)
  %2696 = trunc i32 %2695 to i8
  %2697 = and i8 %2696, 1
  %2698 = xor i8 %2697, 1
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2698, i8* %2699, align 1
  %2700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2700, align 1
  %2701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2701, align 1
  %2702 = lshr i64 %2688, 63
  %2703 = trunc i64 %2702 to i8
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2703, i8* %2704, align 1
  %2705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2691, i8* %2705, align 1
  store %struct.Memory* %loadMem_40c2c7, %struct.Memory** %MEMORY
  %loadMem_40c2ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2707 = getelementptr inbounds %struct.GPR, %struct.GPR* %2706, i32 0, i32 33
  %2708 = getelementptr inbounds %struct.Reg, %struct.Reg* %2707, i32 0, i32 0
  %PC.i1426 = bitcast %union.anon* %2708 to i64*
  %2709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2710 = getelementptr inbounds %struct.GPR, %struct.GPR* %2709, i32 0, i32 1
  %2711 = getelementptr inbounds %struct.Reg, %struct.Reg* %2710, i32 0, i32 0
  %RAX.i1427 = bitcast %union.anon* %2711 to i64*
  %2712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2713 = getelementptr inbounds %struct.GPR, %struct.GPR* %2712, i32 0, i32 5
  %2714 = getelementptr inbounds %struct.Reg, %struct.Reg* %2713, i32 0, i32 0
  %RCX.i1428 = bitcast %union.anon* %2714 to i64*
  %2715 = load i64, i64* %RAX.i1427
  %2716 = load i64, i64* %RCX.i1428
  %2717 = load i64, i64* %PC.i1426
  %2718 = add i64 %2717, 3
  store i64 %2718, i64* %PC.i1426
  %2719 = add i64 %2716, %2715
  store i64 %2719, i64* %RAX.i1427, align 8
  %2720 = icmp ult i64 %2719, %2715
  %2721 = icmp ult i64 %2719, %2716
  %2722 = or i1 %2720, %2721
  %2723 = zext i1 %2722 to i8
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2723, i8* %2724, align 1
  %2725 = trunc i64 %2719 to i32
  %2726 = and i32 %2725, 255
  %2727 = call i32 @llvm.ctpop.i32(i32 %2726)
  %2728 = trunc i32 %2727 to i8
  %2729 = and i8 %2728, 1
  %2730 = xor i8 %2729, 1
  %2731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2730, i8* %2731, align 1
  %2732 = xor i64 %2716, %2715
  %2733 = xor i64 %2732, %2719
  %2734 = lshr i64 %2733, 4
  %2735 = trunc i64 %2734 to i8
  %2736 = and i8 %2735, 1
  %2737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2736, i8* %2737, align 1
  %2738 = icmp eq i64 %2719, 0
  %2739 = zext i1 %2738 to i8
  %2740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2739, i8* %2740, align 1
  %2741 = lshr i64 %2719, 63
  %2742 = trunc i64 %2741 to i8
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2742, i8* %2743, align 1
  %2744 = lshr i64 %2715, 63
  %2745 = lshr i64 %2716, 63
  %2746 = xor i64 %2741, %2744
  %2747 = xor i64 %2741, %2745
  %2748 = add i64 %2746, %2747
  %2749 = icmp eq i64 %2748, 2
  %2750 = zext i1 %2749 to i8
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2750, i8* %2751, align 1
  store %struct.Memory* %loadMem_40c2ce, %struct.Memory** %MEMORY
  %loadMem_40c2d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2753 = getelementptr inbounds %struct.GPR, %struct.GPR* %2752, i32 0, i32 33
  %2754 = getelementptr inbounds %struct.Reg, %struct.Reg* %2753, i32 0, i32 0
  %PC.i1423 = bitcast %union.anon* %2754 to i64*
  %2755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2756 = getelementptr inbounds %struct.GPR, %struct.GPR* %2755, i32 0, i32 1
  %2757 = getelementptr inbounds %struct.Reg, %struct.Reg* %2756, i32 0, i32 0
  %RAX.i1424 = bitcast %union.anon* %2757 to i64*
  %2758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2759 = getelementptr inbounds %struct.GPR, %struct.GPR* %2758, i32 0, i32 7
  %2760 = getelementptr inbounds %struct.Reg, %struct.Reg* %2759, i32 0, i32 0
  %RDX.i1425 = bitcast %union.anon* %2760 to i64*
  %2761 = load i64, i64* %RAX.i1424
  %2762 = add i64 %2761, 12
  %2763 = load i64, i64* %PC.i1423
  %2764 = add i64 %2763, 3
  store i64 %2764, i64* %PC.i1423
  %2765 = inttoptr i64 %2762 to i32*
  %2766 = load i32, i32* %2765
  %2767 = zext i32 %2766 to i64
  store i64 %2767, i64* %RDX.i1425, align 8
  store %struct.Memory* %loadMem_40c2d1, %struct.Memory** %MEMORY
  %loadMem_40c2d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2769 = getelementptr inbounds %struct.GPR, %struct.GPR* %2768, i32 0, i32 33
  %2770 = getelementptr inbounds %struct.Reg, %struct.Reg* %2769, i32 0, i32 0
  %PC.i1421 = bitcast %union.anon* %2770 to i64*
  %2771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2772 = getelementptr inbounds %struct.GPR, %struct.GPR* %2771, i32 0, i32 7
  %2773 = getelementptr inbounds %struct.Reg, %struct.Reg* %2772, i32 0, i32 0
  %RDX.i1422 = bitcast %union.anon* %2773 to i64*
  %2774 = load i64, i64* %RDX.i1422
  %2775 = load i64, i64* %PC.i1421
  %2776 = add i64 %2775, 3
  store i64 %2776, i64* %PC.i1421
  %2777 = trunc i64 %2774 to i32
  %2778 = add i32 1, %2777
  %2779 = zext i32 %2778 to i64
  store i64 %2779, i64* %RDX.i1422, align 8
  %2780 = icmp ult i32 %2778, %2777
  %2781 = icmp ult i32 %2778, 1
  %2782 = or i1 %2780, %2781
  %2783 = zext i1 %2782 to i8
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2783, i8* %2784, align 1
  %2785 = and i32 %2778, 255
  %2786 = call i32 @llvm.ctpop.i32(i32 %2785)
  %2787 = trunc i32 %2786 to i8
  %2788 = and i8 %2787, 1
  %2789 = xor i8 %2788, 1
  %2790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2789, i8* %2790, align 1
  %2791 = xor i64 1, %2774
  %2792 = trunc i64 %2791 to i32
  %2793 = xor i32 %2792, %2778
  %2794 = lshr i32 %2793, 4
  %2795 = trunc i32 %2794 to i8
  %2796 = and i8 %2795, 1
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2796, i8* %2797, align 1
  %2798 = icmp eq i32 %2778, 0
  %2799 = zext i1 %2798 to i8
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2799, i8* %2800, align 1
  %2801 = lshr i32 %2778, 31
  %2802 = trunc i32 %2801 to i8
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2802, i8* %2803, align 1
  %2804 = lshr i32 %2777, 31
  %2805 = xor i32 %2801, %2804
  %2806 = add i32 %2805, %2801
  %2807 = icmp eq i32 %2806, 2
  %2808 = zext i1 %2807 to i8
  %2809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2808, i8* %2809, align 1
  store %struct.Memory* %loadMem_40c2d4, %struct.Memory** %MEMORY
  %loadMem_40c2d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2811 = getelementptr inbounds %struct.GPR, %struct.GPR* %2810, i32 0, i32 33
  %2812 = getelementptr inbounds %struct.Reg, %struct.Reg* %2811, i32 0, i32 0
  %PC.i1418 = bitcast %union.anon* %2812 to i64*
  %2813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2814 = getelementptr inbounds %struct.GPR, %struct.GPR* %2813, i32 0, i32 7
  %2815 = getelementptr inbounds %struct.Reg, %struct.Reg* %2814, i32 0, i32 0
  %EDX.i1419 = bitcast %union.anon* %2815 to i32*
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2817 = getelementptr inbounds %struct.GPR, %struct.GPR* %2816, i32 0, i32 1
  %2818 = getelementptr inbounds %struct.Reg, %struct.Reg* %2817, i32 0, i32 0
  %RAX.i1420 = bitcast %union.anon* %2818 to i64*
  %2819 = load i64, i64* %RAX.i1420
  %2820 = add i64 %2819, 12
  %2821 = load i32, i32* %EDX.i1419
  %2822 = zext i32 %2821 to i64
  %2823 = load i64, i64* %PC.i1418
  %2824 = add i64 %2823, 3
  store i64 %2824, i64* %PC.i1418
  %2825 = inttoptr i64 %2820 to i32*
  store i32 %2821, i32* %2825
  store %struct.Memory* %loadMem_40c2d7, %struct.Memory** %MEMORY
  %loadMem_40c2da = load %struct.Memory*, %struct.Memory** %MEMORY
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2827 = getelementptr inbounds %struct.GPR, %struct.GPR* %2826, i32 0, i32 33
  %2828 = getelementptr inbounds %struct.Reg, %struct.Reg* %2827, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %2828 to i64*
  %2829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2830 = getelementptr inbounds %struct.GPR, %struct.GPR* %2829, i32 0, i32 7
  %2831 = getelementptr inbounds %struct.Reg, %struct.Reg* %2830, i32 0, i32 0
  %RDX.i1417 = bitcast %union.anon* %2831 to i64*
  %2832 = load i64, i64* %PC.i1416
  %2833 = add i64 %2832, 7
  store i64 %2833, i64* %PC.i1416
  %2834 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %2835 = zext i32 %2834 to i64
  store i64 %2835, i64* %RDX.i1417, align 8
  store %struct.Memory* %loadMem_40c2da, %struct.Memory** %MEMORY
  %loadMem_40c2e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2837 = getelementptr inbounds %struct.GPR, %struct.GPR* %2836, i32 0, i32 33
  %2838 = getelementptr inbounds %struct.Reg, %struct.Reg* %2837, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %2838 to i64*
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2840 = getelementptr inbounds %struct.GPR, %struct.GPR* %2839, i32 0, i32 9
  %2841 = getelementptr inbounds %struct.Reg, %struct.Reg* %2840, i32 0, i32 0
  %RSI.i1414 = bitcast %union.anon* %2841 to i64*
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2843 = getelementptr inbounds %struct.GPR, %struct.GPR* %2842, i32 0, i32 15
  %2844 = getelementptr inbounds %struct.Reg, %struct.Reg* %2843, i32 0, i32 0
  %RBP.i1415 = bitcast %union.anon* %2844 to i64*
  %2845 = load i64, i64* %RBP.i1415
  %2846 = sub i64 %2845, 4
  %2847 = load i64, i64* %PC.i1413
  %2848 = add i64 %2847, 3
  store i64 %2848, i64* %PC.i1413
  %2849 = inttoptr i64 %2846 to i32*
  %2850 = load i32, i32* %2849
  %2851 = zext i32 %2850 to i64
  store i64 %2851, i64* %RSI.i1414, align 8
  store %struct.Memory* %loadMem_40c2e1, %struct.Memory** %MEMORY
  %loadMem_40c2e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2853 = getelementptr inbounds %struct.GPR, %struct.GPR* %2852, i32 0, i32 33
  %2854 = getelementptr inbounds %struct.Reg, %struct.Reg* %2853, i32 0, i32 0
  %PC.i1411 = bitcast %union.anon* %2854 to i64*
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2856 = getelementptr inbounds %struct.GPR, %struct.GPR* %2855, i32 0, i32 9
  %2857 = getelementptr inbounds %struct.Reg, %struct.Reg* %2856, i32 0, i32 0
  %RSI.i1412 = bitcast %union.anon* %2857 to i64*
  %2858 = load i64, i64* %RSI.i1412
  %2859 = load i64, i64* %PC.i1411
  %2860 = add i64 %2859, 3
  store i64 %2860, i64* %PC.i1411
  %2861 = trunc i64 %2858 to i32
  %2862 = add i32 20, %2861
  %2863 = zext i32 %2862 to i64
  store i64 %2863, i64* %RSI.i1412, align 8
  %2864 = icmp ult i32 %2862, %2861
  %2865 = icmp ult i32 %2862, 20
  %2866 = or i1 %2864, %2865
  %2867 = zext i1 %2866 to i8
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2867, i8* %2868, align 1
  %2869 = and i32 %2862, 255
  %2870 = call i32 @llvm.ctpop.i32(i32 %2869)
  %2871 = trunc i32 %2870 to i8
  %2872 = and i8 %2871, 1
  %2873 = xor i8 %2872, 1
  %2874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2873, i8* %2874, align 1
  %2875 = xor i64 20, %2858
  %2876 = trunc i64 %2875 to i32
  %2877 = xor i32 %2876, %2862
  %2878 = lshr i32 %2877, 4
  %2879 = trunc i32 %2878 to i8
  %2880 = and i8 %2879, 1
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2880, i8* %2881, align 1
  %2882 = icmp eq i32 %2862, 0
  %2883 = zext i1 %2882 to i8
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2883, i8* %2884, align 1
  %2885 = lshr i32 %2862, 31
  %2886 = trunc i32 %2885 to i8
  %2887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2886, i8* %2887, align 1
  %2888 = lshr i32 %2861, 31
  %2889 = xor i32 %2885, %2888
  %2890 = add i32 %2889, %2885
  %2891 = icmp eq i32 %2890, 2
  %2892 = zext i1 %2891 to i8
  %2893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2892, i8* %2893, align 1
  store %struct.Memory* %loadMem_40c2e4, %struct.Memory** %MEMORY
  %loadMem_40c2e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2895 = getelementptr inbounds %struct.GPR, %struct.GPR* %2894, i32 0, i32 33
  %2896 = getelementptr inbounds %struct.Reg, %struct.Reg* %2895, i32 0, i32 0
  %PC.i1408 = bitcast %union.anon* %2896 to i64*
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2898 = getelementptr inbounds %struct.GPR, %struct.GPR* %2897, i32 0, i32 9
  %2899 = getelementptr inbounds %struct.Reg, %struct.Reg* %2898, i32 0, i32 0
  %ESI.i1409 = bitcast %union.anon* %2899 to i32*
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2901 = getelementptr inbounds %struct.GPR, %struct.GPR* %2900, i32 0, i32 1
  %2902 = getelementptr inbounds %struct.Reg, %struct.Reg* %2901, i32 0, i32 0
  %RAX.i1410 = bitcast %union.anon* %2902 to i64*
  %2903 = load i32, i32* %ESI.i1409
  %2904 = zext i32 %2903 to i64
  %2905 = load i64, i64* %PC.i1408
  %2906 = add i64 %2905, 3
  store i64 %2906, i64* %PC.i1408
  %2907 = shl i64 %2904, 32
  %2908 = ashr exact i64 %2907, 32
  store i64 %2908, i64* %RAX.i1410, align 8
  store %struct.Memory* %loadMem_40c2e7, %struct.Memory** %MEMORY
  %loadMem_40c2ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2910 = getelementptr inbounds %struct.GPR, %struct.GPR* %2909, i32 0, i32 33
  %2911 = getelementptr inbounds %struct.Reg, %struct.Reg* %2910, i32 0, i32 0
  %PC.i1405 = bitcast %union.anon* %2911 to i64*
  %2912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2913 = getelementptr inbounds %struct.GPR, %struct.GPR* %2912, i32 0, i32 7
  %2914 = getelementptr inbounds %struct.Reg, %struct.Reg* %2913, i32 0, i32 0
  %EDX.i1406 = bitcast %union.anon* %2914 to i32*
  %2915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2916 = getelementptr inbounds %struct.GPR, %struct.GPR* %2915, i32 0, i32 1
  %2917 = getelementptr inbounds %struct.Reg, %struct.Reg* %2916, i32 0, i32 0
  %RAX.i1407 = bitcast %union.anon* %2917 to i64*
  %2918 = load i64, i64* %RAX.i1407
  %2919 = mul i64 %2918, 4
  %2920 = add i64 %2919, 11185584
  %2921 = load i32, i32* %EDX.i1406
  %2922 = zext i32 %2921 to i64
  %2923 = load i64, i64* %PC.i1405
  %2924 = add i64 %2923, 7
  store i64 %2924, i64* %PC.i1405
  %2925 = inttoptr i64 %2920 to i32*
  store i32 %2921, i32* %2925
  store %struct.Memory* %loadMem_40c2ea, %struct.Memory** %MEMORY
  %loadMem_40c2f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2927 = getelementptr inbounds %struct.GPR, %struct.GPR* %2926, i32 0, i32 33
  %2928 = getelementptr inbounds %struct.Reg, %struct.Reg* %2927, i32 0, i32 0
  %PC.i1404 = bitcast %union.anon* %2928 to i64*
  %2929 = load i64, i64* %PC.i1404
  %2930 = add i64 %2929, 525
  %2931 = load i64, i64* %PC.i1404
  %2932 = add i64 %2931, 5
  store i64 %2932, i64* %PC.i1404
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2930, i64* %2933, align 8
  store %struct.Memory* %loadMem_40c2f1, %struct.Memory** %MEMORY
  br label %block_.L_40c4fe

block_.L_40c2f6:                                  ; preds = %block_40c23e, %block_.L_40c14c
  %loadMem_40c2f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2935 = getelementptr inbounds %struct.GPR, %struct.GPR* %2934, i32 0, i32 33
  %2936 = getelementptr inbounds %struct.Reg, %struct.Reg* %2935, i32 0, i32 0
  %PC.i1401 = bitcast %union.anon* %2936 to i64*
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2938 = getelementptr inbounds %struct.GPR, %struct.GPR* %2937, i32 0, i32 1
  %2939 = getelementptr inbounds %struct.Reg, %struct.Reg* %2938, i32 0, i32 0
  %RAX.i1402 = bitcast %union.anon* %2939 to i64*
  %2940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2941 = getelementptr inbounds %struct.GPR, %struct.GPR* %2940, i32 0, i32 15
  %2942 = getelementptr inbounds %struct.Reg, %struct.Reg* %2941, i32 0, i32 0
  %RBP.i1403 = bitcast %union.anon* %2942 to i64*
  %2943 = load i64, i64* %RBP.i1403
  %2944 = sub i64 %2943, 4
  %2945 = load i64, i64* %PC.i1401
  %2946 = add i64 %2945, 3
  store i64 %2946, i64* %PC.i1401
  %2947 = inttoptr i64 %2944 to i32*
  %2948 = load i32, i32* %2947
  %2949 = zext i32 %2948 to i64
  store i64 %2949, i64* %RAX.i1402, align 8
  store %struct.Memory* %loadMem_40c2f6, %struct.Memory** %MEMORY
  %loadMem_40c2f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2951 = getelementptr inbounds %struct.GPR, %struct.GPR* %2950, i32 0, i32 33
  %2952 = getelementptr inbounds %struct.Reg, %struct.Reg* %2951, i32 0, i32 0
  %PC.i1399 = bitcast %union.anon* %2952 to i64*
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2954 = getelementptr inbounds %struct.GPR, %struct.GPR* %2953, i32 0, i32 1
  %2955 = getelementptr inbounds %struct.Reg, %struct.Reg* %2954, i32 0, i32 0
  %RAX.i1400 = bitcast %union.anon* %2955 to i64*
  %2956 = load i64, i64* %RAX.i1400
  %2957 = load i64, i64* %PC.i1399
  %2958 = add i64 %2957, 3
  store i64 %2958, i64* %PC.i1399
  %2959 = trunc i64 %2956 to i32
  %2960 = add i32 20, %2959
  %2961 = zext i32 %2960 to i64
  store i64 %2961, i64* %RAX.i1400, align 8
  %2962 = icmp ult i32 %2960, %2959
  %2963 = icmp ult i32 %2960, 20
  %2964 = or i1 %2962, %2963
  %2965 = zext i1 %2964 to i8
  %2966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2965, i8* %2966, align 1
  %2967 = and i32 %2960, 255
  %2968 = call i32 @llvm.ctpop.i32(i32 %2967)
  %2969 = trunc i32 %2968 to i8
  %2970 = and i8 %2969, 1
  %2971 = xor i8 %2970, 1
  %2972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2971, i8* %2972, align 1
  %2973 = xor i64 20, %2956
  %2974 = trunc i64 %2973 to i32
  %2975 = xor i32 %2974, %2960
  %2976 = lshr i32 %2975, 4
  %2977 = trunc i32 %2976 to i8
  %2978 = and i8 %2977, 1
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2978, i8* %2979, align 1
  %2980 = icmp eq i32 %2960, 0
  %2981 = zext i1 %2980 to i8
  %2982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2981, i8* %2982, align 1
  %2983 = lshr i32 %2960, 31
  %2984 = trunc i32 %2983 to i8
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2984, i8* %2985, align 1
  %2986 = lshr i32 %2959, 31
  %2987 = xor i32 %2983, %2986
  %2988 = add i32 %2987, %2983
  %2989 = icmp eq i32 %2988, 2
  %2990 = zext i1 %2989 to i8
  %2991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2990, i8* %2991, align 1
  store %struct.Memory* %loadMem_40c2f9, %struct.Memory** %MEMORY
  %loadMem_40c2fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2993 = getelementptr inbounds %struct.GPR, %struct.GPR* %2992, i32 0, i32 33
  %2994 = getelementptr inbounds %struct.Reg, %struct.Reg* %2993, i32 0, i32 0
  %PC.i1396 = bitcast %union.anon* %2994 to i64*
  %2995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2996 = getelementptr inbounds %struct.GPR, %struct.GPR* %2995, i32 0, i32 1
  %2997 = getelementptr inbounds %struct.Reg, %struct.Reg* %2996, i32 0, i32 0
  %EAX.i1397 = bitcast %union.anon* %2997 to i32*
  %2998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2999 = getelementptr inbounds %struct.GPR, %struct.GPR* %2998, i32 0, i32 5
  %3000 = getelementptr inbounds %struct.Reg, %struct.Reg* %2999, i32 0, i32 0
  %RCX.i1398 = bitcast %union.anon* %3000 to i64*
  %3001 = load i32, i32* %EAX.i1397
  %3002 = zext i32 %3001 to i64
  %3003 = load i64, i64* %PC.i1396
  %3004 = add i64 %3003, 3
  store i64 %3004, i64* %PC.i1396
  %3005 = shl i64 %3002, 32
  %3006 = ashr exact i64 %3005, 32
  store i64 %3006, i64* %RCX.i1398, align 8
  store %struct.Memory* %loadMem_40c2fc, %struct.Memory** %MEMORY
  %loadMem_40c2ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %3007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3008 = getelementptr inbounds %struct.GPR, %struct.GPR* %3007, i32 0, i32 33
  %3009 = getelementptr inbounds %struct.Reg, %struct.Reg* %3008, i32 0, i32 0
  %PC.i1393 = bitcast %union.anon* %3009 to i64*
  %3010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3011 = getelementptr inbounds %struct.GPR, %struct.GPR* %3010, i32 0, i32 1
  %3012 = getelementptr inbounds %struct.Reg, %struct.Reg* %3011, i32 0, i32 0
  %RAX.i1394 = bitcast %union.anon* %3012 to i64*
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3014 = getelementptr inbounds %struct.GPR, %struct.GPR* %3013, i32 0, i32 5
  %3015 = getelementptr inbounds %struct.Reg, %struct.Reg* %3014, i32 0, i32 0
  %RCX.i1395 = bitcast %union.anon* %3015 to i64*
  %3016 = load i64, i64* %RCX.i1395
  %3017 = add i64 %3016, 12099168
  %3018 = load i64, i64* %PC.i1393
  %3019 = add i64 %3018, 8
  store i64 %3019, i64* %PC.i1393
  %3020 = inttoptr i64 %3017 to i8*
  %3021 = load i8, i8* %3020
  %3022 = zext i8 %3021 to i64
  store i64 %3022, i64* %RAX.i1394, align 8
  store %struct.Memory* %loadMem_40c2ff, %struct.Memory** %MEMORY
  %loadMem_40c307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3024 = getelementptr inbounds %struct.GPR, %struct.GPR* %3023, i32 0, i32 33
  %3025 = getelementptr inbounds %struct.Reg, %struct.Reg* %3024, i32 0, i32 0
  %PC.i1390 = bitcast %union.anon* %3025 to i64*
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3027 = getelementptr inbounds %struct.GPR, %struct.GPR* %3026, i32 0, i32 1
  %3028 = getelementptr inbounds %struct.Reg, %struct.Reg* %3027, i32 0, i32 0
  %EAX.i1391 = bitcast %union.anon* %3028 to i32*
  %3029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3030 = getelementptr inbounds %struct.GPR, %struct.GPR* %3029, i32 0, i32 15
  %3031 = getelementptr inbounds %struct.Reg, %struct.Reg* %3030, i32 0, i32 0
  %RBP.i1392 = bitcast %union.anon* %3031 to i64*
  %3032 = load i32, i32* %EAX.i1391
  %3033 = zext i32 %3032 to i64
  %3034 = load i64, i64* %RBP.i1392
  %3035 = sub i64 %3034, 16
  %3036 = load i64, i64* %PC.i1390
  %3037 = add i64 %3036, 3
  store i64 %3037, i64* %PC.i1390
  %3038 = inttoptr i64 %3035 to i32*
  %3039 = load i32, i32* %3038
  %3040 = sub i32 %3032, %3039
  %3041 = icmp ult i32 %3032, %3039
  %3042 = zext i1 %3041 to i8
  %3043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3042, i8* %3043, align 1
  %3044 = and i32 %3040, 255
  %3045 = call i32 @llvm.ctpop.i32(i32 %3044)
  %3046 = trunc i32 %3045 to i8
  %3047 = and i8 %3046, 1
  %3048 = xor i8 %3047, 1
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3048, i8* %3049, align 1
  %3050 = xor i32 %3039, %3032
  %3051 = xor i32 %3050, %3040
  %3052 = lshr i32 %3051, 4
  %3053 = trunc i32 %3052 to i8
  %3054 = and i8 %3053, 1
  %3055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3054, i8* %3055, align 1
  %3056 = icmp eq i32 %3040, 0
  %3057 = zext i1 %3056 to i8
  %3058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3057, i8* %3058, align 1
  %3059 = lshr i32 %3040, 31
  %3060 = trunc i32 %3059 to i8
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3060, i8* %3061, align 1
  %3062 = lshr i32 %3032, 31
  %3063 = lshr i32 %3039, 31
  %3064 = xor i32 %3063, %3062
  %3065 = xor i32 %3059, %3062
  %3066 = add i32 %3065, %3064
  %3067 = icmp eq i32 %3066, 2
  %3068 = zext i1 %3067 to i8
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3068, i8* %3069, align 1
  store %struct.Memory* %loadMem_40c307, %struct.Memory** %MEMORY
  %loadMem_40c30a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3071 = getelementptr inbounds %struct.GPR, %struct.GPR* %3070, i32 0, i32 33
  %3072 = getelementptr inbounds %struct.Reg, %struct.Reg* %3071, i32 0, i32 0
  %PC.i1389 = bitcast %union.anon* %3072 to i64*
  %3073 = load i64, i64* %PC.i1389
  %3074 = add i64 %3073, 392
  %3075 = load i64, i64* %PC.i1389
  %3076 = add i64 %3075, 6
  %3077 = load i64, i64* %PC.i1389
  %3078 = add i64 %3077, 6
  store i64 %3078, i64* %PC.i1389
  %3079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3080 = load i8, i8* %3079, align 1
  %3081 = icmp eq i8 %3080, 0
  %3082 = zext i1 %3081 to i8
  store i8 %3082, i8* %BRANCH_TAKEN, align 1
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3084 = select i1 %3081, i64 %3074, i64 %3076
  store i64 %3084, i64* %3083, align 8
  store %struct.Memory* %loadMem_40c30a, %struct.Memory** %MEMORY
  %loadBr_40c30a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c30a = icmp eq i8 %loadBr_40c30a, 1
  br i1 %cmpBr_40c30a, label %block_.L_40c492, label %block_40c310

block_40c310:                                     ; preds = %block_.L_40c2f6
  %loadMem_40c310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3086 = getelementptr inbounds %struct.GPR, %struct.GPR* %3085, i32 0, i32 33
  %3087 = getelementptr inbounds %struct.Reg, %struct.Reg* %3086, i32 0, i32 0
  %PC.i1387 = bitcast %union.anon* %3087 to i64*
  %3088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3089 = getelementptr inbounds %struct.GPR, %struct.GPR* %3088, i32 0, i32 1
  %3090 = getelementptr inbounds %struct.Reg, %struct.Reg* %3089, i32 0, i32 0
  %RAX.i1388 = bitcast %union.anon* %3090 to i64*
  %3091 = load i64, i64* %PC.i1387
  %3092 = add i64 %3091, 10
  store i64 %3092, i64* %PC.i1387
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1388, align 8
  store %struct.Memory* %loadMem_40c310, %struct.Memory** %MEMORY
  %loadMem_40c31a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3094 = getelementptr inbounds %struct.GPR, %struct.GPR* %3093, i32 0, i32 33
  %3095 = getelementptr inbounds %struct.Reg, %struct.Reg* %3094, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %3095 to i64*
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3097 = getelementptr inbounds %struct.GPR, %struct.GPR* %3096, i32 0, i32 5
  %3098 = getelementptr inbounds %struct.Reg, %struct.Reg* %3097, i32 0, i32 0
  %RCX.i1385 = bitcast %union.anon* %3098 to i64*
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3100 = getelementptr inbounds %struct.GPR, %struct.GPR* %3099, i32 0, i32 15
  %3101 = getelementptr inbounds %struct.Reg, %struct.Reg* %3100, i32 0, i32 0
  %RBP.i1386 = bitcast %union.anon* %3101 to i64*
  %3102 = load i64, i64* %RBP.i1386
  %3103 = sub i64 %3102, 4
  %3104 = load i64, i64* %PC.i1384
  %3105 = add i64 %3104, 3
  store i64 %3105, i64* %PC.i1384
  %3106 = inttoptr i64 %3103 to i32*
  %3107 = load i32, i32* %3106
  %3108 = zext i32 %3107 to i64
  store i64 %3108, i64* %RCX.i1385, align 8
  store %struct.Memory* %loadMem_40c31a, %struct.Memory** %MEMORY
  %loadMem_40c31d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3110 = getelementptr inbounds %struct.GPR, %struct.GPR* %3109, i32 0, i32 33
  %3111 = getelementptr inbounds %struct.Reg, %struct.Reg* %3110, i32 0, i32 0
  %PC.i1382 = bitcast %union.anon* %3111 to i64*
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3113 = getelementptr inbounds %struct.GPR, %struct.GPR* %3112, i32 0, i32 5
  %3114 = getelementptr inbounds %struct.Reg, %struct.Reg* %3113, i32 0, i32 0
  %RCX.i1383 = bitcast %union.anon* %3114 to i64*
  %3115 = load i64, i64* %RCX.i1383
  %3116 = load i64, i64* %PC.i1382
  %3117 = add i64 %3116, 3
  store i64 %3117, i64* %PC.i1382
  %3118 = trunc i64 %3115 to i32
  %3119 = add i32 20, %3118
  %3120 = zext i32 %3119 to i64
  store i64 %3120, i64* %RCX.i1383, align 8
  %3121 = icmp ult i32 %3119, %3118
  %3122 = icmp ult i32 %3119, 20
  %3123 = or i1 %3121, %3122
  %3124 = zext i1 %3123 to i8
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3124, i8* %3125, align 1
  %3126 = and i32 %3119, 255
  %3127 = call i32 @llvm.ctpop.i32(i32 %3126)
  %3128 = trunc i32 %3127 to i8
  %3129 = and i8 %3128, 1
  %3130 = xor i8 %3129, 1
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3130, i8* %3131, align 1
  %3132 = xor i64 20, %3115
  %3133 = trunc i64 %3132 to i32
  %3134 = xor i32 %3133, %3119
  %3135 = lshr i32 %3134, 4
  %3136 = trunc i32 %3135 to i8
  %3137 = and i8 %3136, 1
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3137, i8* %3138, align 1
  %3139 = icmp eq i32 %3119, 0
  %3140 = zext i1 %3139 to i8
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3140, i8* %3141, align 1
  %3142 = lshr i32 %3119, 31
  %3143 = trunc i32 %3142 to i8
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3143, i8* %3144, align 1
  %3145 = lshr i32 %3118, 31
  %3146 = xor i32 %3142, %3145
  %3147 = add i32 %3146, %3142
  %3148 = icmp eq i32 %3147, 2
  %3149 = zext i1 %3148 to i8
  %3150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3149, i8* %3150, align 1
  store %struct.Memory* %loadMem_40c31d, %struct.Memory** %MEMORY
  %loadMem_40c320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3152 = getelementptr inbounds %struct.GPR, %struct.GPR* %3151, i32 0, i32 33
  %3153 = getelementptr inbounds %struct.Reg, %struct.Reg* %3152, i32 0, i32 0
  %PC.i1379 = bitcast %union.anon* %3153 to i64*
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3155 = getelementptr inbounds %struct.GPR, %struct.GPR* %3154, i32 0, i32 5
  %3156 = getelementptr inbounds %struct.Reg, %struct.Reg* %3155, i32 0, i32 0
  %ECX.i1380 = bitcast %union.anon* %3156 to i32*
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3158 = getelementptr inbounds %struct.GPR, %struct.GPR* %3157, i32 0, i32 7
  %3159 = getelementptr inbounds %struct.Reg, %struct.Reg* %3158, i32 0, i32 0
  %RDX.i1381 = bitcast %union.anon* %3159 to i64*
  %3160 = load i32, i32* %ECX.i1380
  %3161 = zext i32 %3160 to i64
  %3162 = load i64, i64* %PC.i1379
  %3163 = add i64 %3162, 3
  store i64 %3163, i64* %PC.i1379
  %3164 = shl i64 %3161, 32
  %3165 = ashr exact i64 %3164, 32
  store i64 %3165, i64* %RDX.i1381, align 8
  store %struct.Memory* %loadMem_40c320, %struct.Memory** %MEMORY
  %loadMem_40c323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3167 = getelementptr inbounds %struct.GPR, %struct.GPR* %3166, i32 0, i32 33
  %3168 = getelementptr inbounds %struct.Reg, %struct.Reg* %3167, i32 0, i32 0
  %PC.i1377 = bitcast %union.anon* %3168 to i64*
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3170 = getelementptr inbounds %struct.GPR, %struct.GPR* %3169, i32 0, i32 7
  %3171 = getelementptr inbounds %struct.Reg, %struct.Reg* %3170, i32 0, i32 0
  %RDX.i1378 = bitcast %union.anon* %3171 to i64*
  %3172 = load i64, i64* %RDX.i1378
  %3173 = mul i64 %3172, 4
  %3174 = add i64 %3173, 11187184
  %3175 = load i64, i64* %PC.i1377
  %3176 = add i64 %3175, 8
  store i64 %3176, i64* %PC.i1377
  %3177 = inttoptr i64 %3174 to i32*
  %3178 = load i32, i32* %3177
  %3179 = sext i32 %3178 to i64
  store i64 %3179, i64* %RDX.i1378, align 8
  store %struct.Memory* %loadMem_40c323, %struct.Memory** %MEMORY
  %loadMem_40c32b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3181 = getelementptr inbounds %struct.GPR, %struct.GPR* %3180, i32 0, i32 33
  %3182 = getelementptr inbounds %struct.Reg, %struct.Reg* %3181, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %3182 to i64*
  %3183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3184 = getelementptr inbounds %struct.GPR, %struct.GPR* %3183, i32 0, i32 7
  %3185 = getelementptr inbounds %struct.Reg, %struct.Reg* %3184, i32 0, i32 0
  %RDX.i1376 = bitcast %union.anon* %3185 to i64*
  %3186 = load i64, i64* %RDX.i1376
  %3187 = load i64, i64* %PC.i1375
  %3188 = add i64 %3187, 7
  store i64 %3188, i64* %PC.i1375
  %3189 = sext i64 %3186 to i128
  %3190 = and i128 %3189, -18446744073709551616
  %3191 = zext i64 %3186 to i128
  %3192 = or i128 %3190, %3191
  %3193 = mul i128 744, %3192
  %3194 = trunc i128 %3193 to i64
  store i64 %3194, i64* %RDX.i1376, align 8
  %3195 = sext i64 %3194 to i128
  %3196 = icmp ne i128 %3195, %3193
  %3197 = zext i1 %3196 to i8
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3197, i8* %3198, align 1
  %3199 = trunc i128 %3193 to i32
  %3200 = and i32 %3199, 255
  %3201 = call i32 @llvm.ctpop.i32(i32 %3200)
  %3202 = trunc i32 %3201 to i8
  %3203 = and i8 %3202, 1
  %3204 = xor i8 %3203, 1
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3204, i8* %3205, align 1
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3206, align 1
  %3207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3207, align 1
  %3208 = lshr i64 %3194, 63
  %3209 = trunc i64 %3208 to i8
  %3210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3209, i8* %3210, align 1
  %3211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3197, i8* %3211, align 1
  store %struct.Memory* %loadMem_40c32b, %struct.Memory** %MEMORY
  %loadMem_40c332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3213 = getelementptr inbounds %struct.GPR, %struct.GPR* %3212, i32 0, i32 33
  %3214 = getelementptr inbounds %struct.Reg, %struct.Reg* %3213, i32 0, i32 0
  %PC.i1372 = bitcast %union.anon* %3214 to i64*
  %3215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3216 = getelementptr inbounds %struct.GPR, %struct.GPR* %3215, i32 0, i32 1
  %3217 = getelementptr inbounds %struct.Reg, %struct.Reg* %3216, i32 0, i32 0
  %RAX.i1373 = bitcast %union.anon* %3217 to i64*
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3219 = getelementptr inbounds %struct.GPR, %struct.GPR* %3218, i32 0, i32 7
  %3220 = getelementptr inbounds %struct.Reg, %struct.Reg* %3219, i32 0, i32 0
  %RDX.i1374 = bitcast %union.anon* %3220 to i64*
  %3221 = load i64, i64* %RAX.i1373
  %3222 = load i64, i64* %RDX.i1374
  %3223 = load i64, i64* %PC.i1372
  %3224 = add i64 %3223, 3
  store i64 %3224, i64* %PC.i1372
  %3225 = add i64 %3222, %3221
  store i64 %3225, i64* %RAX.i1373, align 8
  %3226 = icmp ult i64 %3225, %3221
  %3227 = icmp ult i64 %3225, %3222
  %3228 = or i1 %3226, %3227
  %3229 = zext i1 %3228 to i8
  %3230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3229, i8* %3230, align 1
  %3231 = trunc i64 %3225 to i32
  %3232 = and i32 %3231, 255
  %3233 = call i32 @llvm.ctpop.i32(i32 %3232)
  %3234 = trunc i32 %3233 to i8
  %3235 = and i8 %3234, 1
  %3236 = xor i8 %3235, 1
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3236, i8* %3237, align 1
  %3238 = xor i64 %3222, %3221
  %3239 = xor i64 %3238, %3225
  %3240 = lshr i64 %3239, 4
  %3241 = trunc i64 %3240 to i8
  %3242 = and i8 %3241, 1
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3242, i8* %3243, align 1
  %3244 = icmp eq i64 %3225, 0
  %3245 = zext i1 %3244 to i8
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3245, i8* %3246, align 1
  %3247 = lshr i64 %3225, 63
  %3248 = trunc i64 %3247 to i8
  %3249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3248, i8* %3249, align 1
  %3250 = lshr i64 %3221, 63
  %3251 = lshr i64 %3222, 63
  %3252 = xor i64 %3247, %3250
  %3253 = xor i64 %3247, %3251
  %3254 = add i64 %3252, %3253
  %3255 = icmp eq i64 %3254, 2
  %3256 = zext i1 %3255 to i8
  %3257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3256, i8* %3257, align 1
  store %struct.Memory* %loadMem_40c332, %struct.Memory** %MEMORY
  %loadMem_40c335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3259 = getelementptr inbounds %struct.GPR, %struct.GPR* %3258, i32 0, i32 33
  %3260 = getelementptr inbounds %struct.Reg, %struct.Reg* %3259, i32 0, i32 0
  %PC.i1369 = bitcast %union.anon* %3260 to i64*
  %3261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3262 = getelementptr inbounds %struct.GPR, %struct.GPR* %3261, i32 0, i32 1
  %3263 = getelementptr inbounds %struct.Reg, %struct.Reg* %3262, i32 0, i32 0
  %RAX.i1370 = bitcast %union.anon* %3263 to i64*
  %3264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3265 = getelementptr inbounds %struct.GPR, %struct.GPR* %3264, i32 0, i32 5
  %3266 = getelementptr inbounds %struct.Reg, %struct.Reg* %3265, i32 0, i32 0
  %RCX.i1371 = bitcast %union.anon* %3266 to i64*
  %3267 = load i64, i64* %RAX.i1370
  %3268 = add i64 %3267, 740
  %3269 = load i64, i64* %PC.i1369
  %3270 = add i64 %3269, 6
  store i64 %3270, i64* %PC.i1369
  %3271 = inttoptr i64 %3268 to i32*
  %3272 = load i32, i32* %3271
  %3273 = zext i32 %3272 to i64
  store i64 %3273, i64* %RCX.i1371, align 8
  store %struct.Memory* %loadMem_40c335, %struct.Memory** %MEMORY
  %loadMem_40c33b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3275 = getelementptr inbounds %struct.GPR, %struct.GPR* %3274, i32 0, i32 33
  %3276 = getelementptr inbounds %struct.Reg, %struct.Reg* %3275, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %3276 to i64*
  %3277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3278 = getelementptr inbounds %struct.GPR, %struct.GPR* %3277, i32 0, i32 5
  %3279 = getelementptr inbounds %struct.Reg, %struct.Reg* %3278, i32 0, i32 0
  %ECX.i1368 = bitcast %union.anon* %3279 to i32*
  %3280 = load i32, i32* %ECX.i1368
  %3281 = zext i32 %3280 to i64
  %3282 = load i64, i64* %PC.i1367
  %3283 = add i64 %3282, 7
  store i64 %3283, i64* %PC.i1367
  %3284 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %3285 = sub i32 %3280, %3284
  %3286 = icmp ult i32 %3280, %3284
  %3287 = zext i1 %3286 to i8
  %3288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3287, i8* %3288, align 1
  %3289 = and i32 %3285, 255
  %3290 = call i32 @llvm.ctpop.i32(i32 %3289)
  %3291 = trunc i32 %3290 to i8
  %3292 = and i8 %3291, 1
  %3293 = xor i8 %3292, 1
  %3294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3293, i8* %3294, align 1
  %3295 = xor i32 %3284, %3280
  %3296 = xor i32 %3295, %3285
  %3297 = lshr i32 %3296, 4
  %3298 = trunc i32 %3297 to i8
  %3299 = and i8 %3298, 1
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3299, i8* %3300, align 1
  %3301 = icmp eq i32 %3285, 0
  %3302 = zext i1 %3301 to i8
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3302, i8* %3303, align 1
  %3304 = lshr i32 %3285, 31
  %3305 = trunc i32 %3304 to i8
  %3306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3305, i8* %3306, align 1
  %3307 = lshr i32 %3280, 31
  %3308 = lshr i32 %3284, 31
  %3309 = xor i32 %3308, %3307
  %3310 = xor i32 %3304, %3307
  %3311 = add i32 %3310, %3309
  %3312 = icmp eq i32 %3311, 2
  %3313 = zext i1 %3312 to i8
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3313, i8* %3314, align 1
  store %struct.Memory* %loadMem_40c33b, %struct.Memory** %MEMORY
  %loadMem_40c342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3316 = getelementptr inbounds %struct.GPR, %struct.GPR* %3315, i32 0, i32 33
  %3317 = getelementptr inbounds %struct.Reg, %struct.Reg* %3316, i32 0, i32 0
  %PC.i1366 = bitcast %union.anon* %3317 to i64*
  %3318 = load i64, i64* %PC.i1366
  %3319 = add i64 %3318, 336
  %3320 = load i64, i64* %PC.i1366
  %3321 = add i64 %3320, 6
  %3322 = load i64, i64* %PC.i1366
  %3323 = add i64 %3322, 6
  store i64 %3323, i64* %PC.i1366
  %3324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3325 = load i8, i8* %3324, align 1
  store i8 %3325, i8* %BRANCH_TAKEN, align 1
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3327 = icmp ne i8 %3325, 0
  %3328 = select i1 %3327, i64 %3319, i64 %3321
  store i64 %3328, i64* %3326, align 8
  store %struct.Memory* %loadMem_40c342, %struct.Memory** %MEMORY
  %loadBr_40c342 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c342 = icmp eq i8 %loadBr_40c342, 1
  br i1 %cmpBr_40c342, label %block_.L_40c492, label %block_40c348

block_40c348:                                     ; preds = %block_40c310
  %loadMem_40c348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3330 = getelementptr inbounds %struct.GPR, %struct.GPR* %3329, i32 0, i32 33
  %3331 = getelementptr inbounds %struct.Reg, %struct.Reg* %3330, i32 0, i32 0
  %PC.i1364 = bitcast %union.anon* %3331 to i64*
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3333 = getelementptr inbounds %struct.GPR, %struct.GPR* %3332, i32 0, i32 1
  %3334 = getelementptr inbounds %struct.Reg, %struct.Reg* %3333, i32 0, i32 0
  %RAX.i1365 = bitcast %union.anon* %3334 to i64*
  %3335 = load i64, i64* %PC.i1364
  %3336 = add i64 %3335, 10
  store i64 %3336, i64* %PC.i1364
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1365, align 8
  store %struct.Memory* %loadMem_40c348, %struct.Memory** %MEMORY
  %loadMem_40c352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3338 = getelementptr inbounds %struct.GPR, %struct.GPR* %3337, i32 0, i32 33
  %3339 = getelementptr inbounds %struct.Reg, %struct.Reg* %3338, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %3339 to i64*
  %3340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3341 = getelementptr inbounds %struct.GPR, %struct.GPR* %3340, i32 0, i32 5
  %3342 = getelementptr inbounds %struct.Reg, %struct.Reg* %3341, i32 0, i32 0
  %RCX.i1362 = bitcast %union.anon* %3342 to i64*
  %3343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3344 = getelementptr inbounds %struct.GPR, %struct.GPR* %3343, i32 0, i32 15
  %3345 = getelementptr inbounds %struct.Reg, %struct.Reg* %3344, i32 0, i32 0
  %RBP.i1363 = bitcast %union.anon* %3345 to i64*
  %3346 = load i64, i64* %RBP.i1363
  %3347 = sub i64 %3346, 4
  %3348 = load i64, i64* %PC.i1361
  %3349 = add i64 %3348, 3
  store i64 %3349, i64* %PC.i1361
  %3350 = inttoptr i64 %3347 to i32*
  %3351 = load i32, i32* %3350
  %3352 = zext i32 %3351 to i64
  store i64 %3352, i64* %RCX.i1362, align 8
  store %struct.Memory* %loadMem_40c352, %struct.Memory** %MEMORY
  %loadMem_40c355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3354 = getelementptr inbounds %struct.GPR, %struct.GPR* %3353, i32 0, i32 33
  %3355 = getelementptr inbounds %struct.Reg, %struct.Reg* %3354, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %3355 to i64*
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3357 = getelementptr inbounds %struct.GPR, %struct.GPR* %3356, i32 0, i32 5
  %3358 = getelementptr inbounds %struct.Reg, %struct.Reg* %3357, i32 0, i32 0
  %RCX.i1360 = bitcast %union.anon* %3358 to i64*
  %3359 = load i64, i64* %RCX.i1360
  %3360 = load i64, i64* %PC.i1359
  %3361 = add i64 %3360, 3
  store i64 %3361, i64* %PC.i1359
  %3362 = trunc i64 %3359 to i32
  %3363 = add i32 20, %3362
  %3364 = zext i32 %3363 to i64
  store i64 %3364, i64* %RCX.i1360, align 8
  %3365 = icmp ult i32 %3363, %3362
  %3366 = icmp ult i32 %3363, 20
  %3367 = or i1 %3365, %3366
  %3368 = zext i1 %3367 to i8
  %3369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3368, i8* %3369, align 1
  %3370 = and i32 %3363, 255
  %3371 = call i32 @llvm.ctpop.i32(i32 %3370)
  %3372 = trunc i32 %3371 to i8
  %3373 = and i8 %3372, 1
  %3374 = xor i8 %3373, 1
  %3375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3374, i8* %3375, align 1
  %3376 = xor i64 20, %3359
  %3377 = trunc i64 %3376 to i32
  %3378 = xor i32 %3377, %3363
  %3379 = lshr i32 %3378, 4
  %3380 = trunc i32 %3379 to i8
  %3381 = and i8 %3380, 1
  %3382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3381, i8* %3382, align 1
  %3383 = icmp eq i32 %3363, 0
  %3384 = zext i1 %3383 to i8
  %3385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3384, i8* %3385, align 1
  %3386 = lshr i32 %3363, 31
  %3387 = trunc i32 %3386 to i8
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3387, i8* %3388, align 1
  %3389 = lshr i32 %3362, 31
  %3390 = xor i32 %3386, %3389
  %3391 = add i32 %3390, %3386
  %3392 = icmp eq i32 %3391, 2
  %3393 = zext i1 %3392 to i8
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3393, i8* %3394, align 1
  store %struct.Memory* %loadMem_40c355, %struct.Memory** %MEMORY
  %loadMem_40c358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3396 = getelementptr inbounds %struct.GPR, %struct.GPR* %3395, i32 0, i32 33
  %3397 = getelementptr inbounds %struct.Reg, %struct.Reg* %3396, i32 0, i32 0
  %PC.i1356 = bitcast %union.anon* %3397 to i64*
  %3398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3399 = getelementptr inbounds %struct.GPR, %struct.GPR* %3398, i32 0, i32 5
  %3400 = getelementptr inbounds %struct.Reg, %struct.Reg* %3399, i32 0, i32 0
  %ECX.i1357 = bitcast %union.anon* %3400 to i32*
  %3401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3402 = getelementptr inbounds %struct.GPR, %struct.GPR* %3401, i32 0, i32 7
  %3403 = getelementptr inbounds %struct.Reg, %struct.Reg* %3402, i32 0, i32 0
  %RDX.i1358 = bitcast %union.anon* %3403 to i64*
  %3404 = load i32, i32* %ECX.i1357
  %3405 = zext i32 %3404 to i64
  %3406 = load i64, i64* %PC.i1356
  %3407 = add i64 %3406, 3
  store i64 %3407, i64* %PC.i1356
  %3408 = shl i64 %3405, 32
  %3409 = ashr exact i64 %3408, 32
  store i64 %3409, i64* %RDX.i1358, align 8
  store %struct.Memory* %loadMem_40c358, %struct.Memory** %MEMORY
  %loadMem_40c35b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3411 = getelementptr inbounds %struct.GPR, %struct.GPR* %3410, i32 0, i32 33
  %3412 = getelementptr inbounds %struct.Reg, %struct.Reg* %3411, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %3412 to i64*
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3414 = getelementptr inbounds %struct.GPR, %struct.GPR* %3413, i32 0, i32 5
  %3415 = getelementptr inbounds %struct.Reg, %struct.Reg* %3414, i32 0, i32 0
  %RCX.i1354 = bitcast %union.anon* %3415 to i64*
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3417 = getelementptr inbounds %struct.GPR, %struct.GPR* %3416, i32 0, i32 7
  %3418 = getelementptr inbounds %struct.Reg, %struct.Reg* %3417, i32 0, i32 0
  %RDX.i1355 = bitcast %union.anon* %3418 to i64*
  %3419 = load i64, i64* %RDX.i1355
  %3420 = mul i64 %3419, 4
  %3421 = add i64 %3420, 11187184
  %3422 = load i64, i64* %PC.i1353
  %3423 = add i64 %3422, 7
  store i64 %3423, i64* %PC.i1353
  %3424 = inttoptr i64 %3421 to i32*
  %3425 = load i32, i32* %3424
  %3426 = zext i32 %3425 to i64
  store i64 %3426, i64* %RCX.i1354, align 8
  store %struct.Memory* %loadMem_40c35b, %struct.Memory** %MEMORY
  %loadMem_40c362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3428 = getelementptr inbounds %struct.GPR, %struct.GPR* %3427, i32 0, i32 33
  %3429 = getelementptr inbounds %struct.Reg, %struct.Reg* %3428, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %3429 to i64*
  %3430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3431 = getelementptr inbounds %struct.GPR, %struct.GPR* %3430, i32 0, i32 7
  %3432 = getelementptr inbounds %struct.Reg, %struct.Reg* %3431, i32 0, i32 0
  %RDX.i1351 = bitcast %union.anon* %3432 to i64*
  %3433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3434 = getelementptr inbounds %struct.GPR, %struct.GPR* %3433, i32 0, i32 15
  %3435 = getelementptr inbounds %struct.Reg, %struct.Reg* %3434, i32 0, i32 0
  %RBP.i1352 = bitcast %union.anon* %3435 to i64*
  %3436 = load i64, i64* %RBP.i1352
  %3437 = sub i64 %3436, 8
  %3438 = load i64, i64* %PC.i1350
  %3439 = add i64 %3438, 4
  store i64 %3439, i64* %PC.i1350
  %3440 = inttoptr i64 %3437 to i32*
  %3441 = load i32, i32* %3440
  %3442 = sext i32 %3441 to i64
  store i64 %3442, i64* %RDX.i1351, align 8
  store %struct.Memory* %loadMem_40c362, %struct.Memory** %MEMORY
  %loadMem_40c366 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3444 = getelementptr inbounds %struct.GPR, %struct.GPR* %3443, i32 0, i32 33
  %3445 = getelementptr inbounds %struct.Reg, %struct.Reg* %3444, i32 0, i32 0
  %PC.i1348 = bitcast %union.anon* %3445 to i64*
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3447 = getelementptr inbounds %struct.GPR, %struct.GPR* %3446, i32 0, i32 7
  %3448 = getelementptr inbounds %struct.Reg, %struct.Reg* %3447, i32 0, i32 0
  %RDX.i1349 = bitcast %union.anon* %3448 to i64*
  %3449 = load i64, i64* %RDX.i1349
  %3450 = load i64, i64* %PC.i1348
  %3451 = add i64 %3450, 7
  store i64 %3451, i64* %PC.i1348
  %3452 = sext i64 %3449 to i128
  %3453 = and i128 %3452, -18446744073709551616
  %3454 = zext i64 %3449 to i128
  %3455 = or i128 %3453, %3454
  %3456 = mul i128 744, %3455
  %3457 = trunc i128 %3456 to i64
  store i64 %3457, i64* %RDX.i1349, align 8
  %3458 = sext i64 %3457 to i128
  %3459 = icmp ne i128 %3458, %3456
  %3460 = zext i1 %3459 to i8
  %3461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3460, i8* %3461, align 1
  %3462 = trunc i128 %3456 to i32
  %3463 = and i32 %3462, 255
  %3464 = call i32 @llvm.ctpop.i32(i32 %3463)
  %3465 = trunc i32 %3464 to i8
  %3466 = and i8 %3465, 1
  %3467 = xor i8 %3466, 1
  %3468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3467, i8* %3468, align 1
  %3469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3469, align 1
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3470, align 1
  %3471 = lshr i64 %3457, 63
  %3472 = trunc i64 %3471 to i8
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3472, i8* %3473, align 1
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3460, i8* %3474, align 1
  store %struct.Memory* %loadMem_40c366, %struct.Memory** %MEMORY
  %loadMem_40c36d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3476 = getelementptr inbounds %struct.GPR, %struct.GPR* %3475, i32 0, i32 33
  %3477 = getelementptr inbounds %struct.Reg, %struct.Reg* %3476, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %3477 to i64*
  %3478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3479 = getelementptr inbounds %struct.GPR, %struct.GPR* %3478, i32 0, i32 1
  %3480 = getelementptr inbounds %struct.Reg, %struct.Reg* %3479, i32 0, i32 0
  %RAX.i1346 = bitcast %union.anon* %3480 to i64*
  %3481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3482 = getelementptr inbounds %struct.GPR, %struct.GPR* %3481, i32 0, i32 9
  %3483 = getelementptr inbounds %struct.Reg, %struct.Reg* %3482, i32 0, i32 0
  %RSI.i1347 = bitcast %union.anon* %3483 to i64*
  %3484 = load i64, i64* %RAX.i1346
  %3485 = load i64, i64* %PC.i1345
  %3486 = add i64 %3485, 3
  store i64 %3486, i64* %PC.i1345
  store i64 %3484, i64* %RSI.i1347, align 8
  store %struct.Memory* %loadMem_40c36d, %struct.Memory** %MEMORY
  %loadMem_40c370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3488 = getelementptr inbounds %struct.GPR, %struct.GPR* %3487, i32 0, i32 33
  %3489 = getelementptr inbounds %struct.Reg, %struct.Reg* %3488, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %3489 to i64*
  %3490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3491 = getelementptr inbounds %struct.GPR, %struct.GPR* %3490, i32 0, i32 7
  %3492 = getelementptr inbounds %struct.Reg, %struct.Reg* %3491, i32 0, i32 0
  %RDX.i1343 = bitcast %union.anon* %3492 to i64*
  %3493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3494 = getelementptr inbounds %struct.GPR, %struct.GPR* %3493, i32 0, i32 9
  %3495 = getelementptr inbounds %struct.Reg, %struct.Reg* %3494, i32 0, i32 0
  %RSI.i1344 = bitcast %union.anon* %3495 to i64*
  %3496 = load i64, i64* %RSI.i1344
  %3497 = load i64, i64* %RDX.i1343
  %3498 = load i64, i64* %PC.i1342
  %3499 = add i64 %3498, 3
  store i64 %3499, i64* %PC.i1342
  %3500 = add i64 %3497, %3496
  store i64 %3500, i64* %RSI.i1344, align 8
  %3501 = icmp ult i64 %3500, %3496
  %3502 = icmp ult i64 %3500, %3497
  %3503 = or i1 %3501, %3502
  %3504 = zext i1 %3503 to i8
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3504, i8* %3505, align 1
  %3506 = trunc i64 %3500 to i32
  %3507 = and i32 %3506, 255
  %3508 = call i32 @llvm.ctpop.i32(i32 %3507)
  %3509 = trunc i32 %3508 to i8
  %3510 = and i8 %3509, 1
  %3511 = xor i8 %3510, 1
  %3512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3511, i8* %3512, align 1
  %3513 = xor i64 %3497, %3496
  %3514 = xor i64 %3513, %3500
  %3515 = lshr i64 %3514, 4
  %3516 = trunc i64 %3515 to i8
  %3517 = and i8 %3516, 1
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3517, i8* %3518, align 1
  %3519 = icmp eq i64 %3500, 0
  %3520 = zext i1 %3519 to i8
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3520, i8* %3521, align 1
  %3522 = lshr i64 %3500, 63
  %3523 = trunc i64 %3522 to i8
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3523, i8* %3524, align 1
  %3525 = lshr i64 %3496, 63
  %3526 = lshr i64 %3497, 63
  %3527 = xor i64 %3522, %3525
  %3528 = xor i64 %3522, %3526
  %3529 = add i64 %3527, %3528
  %3530 = icmp eq i64 %3529, 2
  %3531 = zext i1 %3530 to i8
  %3532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3531, i8* %3532, align 1
  store %struct.Memory* %loadMem_40c370, %struct.Memory** %MEMORY
  %loadMem_40c373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3534 = getelementptr inbounds %struct.GPR, %struct.GPR* %3533, i32 0, i32 33
  %3535 = getelementptr inbounds %struct.Reg, %struct.Reg* %3534, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %3535 to i64*
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 7
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %RDX.i1340 = bitcast %union.anon* %3538 to i64*
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3540 = getelementptr inbounds %struct.GPR, %struct.GPR* %3539, i32 0, i32 15
  %3541 = getelementptr inbounds %struct.Reg, %struct.Reg* %3540, i32 0, i32 0
  %RBP.i1341 = bitcast %union.anon* %3541 to i64*
  %3542 = load i64, i64* %RBP.i1341
  %3543 = sub i64 %3542, 8
  %3544 = load i64, i64* %PC.i1339
  %3545 = add i64 %3544, 4
  store i64 %3545, i64* %PC.i1339
  %3546 = inttoptr i64 %3543 to i32*
  %3547 = load i32, i32* %3546
  %3548 = sext i32 %3547 to i64
  store i64 %3548, i64* %RDX.i1340, align 8
  store %struct.Memory* %loadMem_40c373, %struct.Memory** %MEMORY
  %loadMem_40c377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3550 = getelementptr inbounds %struct.GPR, %struct.GPR* %3549, i32 0, i32 33
  %3551 = getelementptr inbounds %struct.Reg, %struct.Reg* %3550, i32 0, i32 0
  %PC.i1337 = bitcast %union.anon* %3551 to i64*
  %3552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3553 = getelementptr inbounds %struct.GPR, %struct.GPR* %3552, i32 0, i32 7
  %3554 = getelementptr inbounds %struct.Reg, %struct.Reg* %3553, i32 0, i32 0
  %RDX.i1338 = bitcast %union.anon* %3554 to i64*
  %3555 = load i64, i64* %RDX.i1338
  %3556 = load i64, i64* %PC.i1337
  %3557 = add i64 %3556, 7
  store i64 %3557, i64* %PC.i1337
  %3558 = sext i64 %3555 to i128
  %3559 = and i128 %3558, -18446744073709551616
  %3560 = zext i64 %3555 to i128
  %3561 = or i128 %3559, %3560
  %3562 = mul i128 744, %3561
  %3563 = trunc i128 %3562 to i64
  store i64 %3563, i64* %RDX.i1338, align 8
  %3564 = sext i64 %3563 to i128
  %3565 = icmp ne i128 %3564, %3562
  %3566 = zext i1 %3565 to i8
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3566, i8* %3567, align 1
  %3568 = trunc i128 %3562 to i32
  %3569 = and i32 %3568, 255
  %3570 = call i32 @llvm.ctpop.i32(i32 %3569)
  %3571 = trunc i32 %3570 to i8
  %3572 = and i8 %3571, 1
  %3573 = xor i8 %3572, 1
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3573, i8* %3574, align 1
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3575, align 1
  %3576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3576, align 1
  %3577 = lshr i64 %3563, 63
  %3578 = trunc i64 %3577 to i8
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3578, i8* %3579, align 1
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3566, i8* %3580, align 1
  store %struct.Memory* %loadMem_40c377, %struct.Memory** %MEMORY
  %loadMem_40c37e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3582 = getelementptr inbounds %struct.GPR, %struct.GPR* %3581, i32 0, i32 33
  %3583 = getelementptr inbounds %struct.Reg, %struct.Reg* %3582, i32 0, i32 0
  %PC.i1334 = bitcast %union.anon* %3583 to i64*
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3585 = getelementptr inbounds %struct.GPR, %struct.GPR* %3584, i32 0, i32 1
  %3586 = getelementptr inbounds %struct.Reg, %struct.Reg* %3585, i32 0, i32 0
  %RAX.i1335 = bitcast %union.anon* %3586 to i64*
  %3587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3588 = getelementptr inbounds %struct.GPR, %struct.GPR* %3587, i32 0, i32 11
  %3589 = getelementptr inbounds %struct.Reg, %struct.Reg* %3588, i32 0, i32 0
  %RDI.i1336 = bitcast %union.anon* %3589 to i64*
  %3590 = load i64, i64* %RAX.i1335
  %3591 = load i64, i64* %PC.i1334
  %3592 = add i64 %3591, 3
  store i64 %3592, i64* %PC.i1334
  store i64 %3590, i64* %RDI.i1336, align 8
  store %struct.Memory* %loadMem_40c37e, %struct.Memory** %MEMORY
  %loadMem_40c381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3594 = getelementptr inbounds %struct.GPR, %struct.GPR* %3593, i32 0, i32 33
  %3595 = getelementptr inbounds %struct.Reg, %struct.Reg* %3594, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %3595 to i64*
  %3596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3597 = getelementptr inbounds %struct.GPR, %struct.GPR* %3596, i32 0, i32 7
  %3598 = getelementptr inbounds %struct.Reg, %struct.Reg* %3597, i32 0, i32 0
  %RDX.i1332 = bitcast %union.anon* %3598 to i64*
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3600 = getelementptr inbounds %struct.GPR, %struct.GPR* %3599, i32 0, i32 11
  %3601 = getelementptr inbounds %struct.Reg, %struct.Reg* %3600, i32 0, i32 0
  %RDI.i1333 = bitcast %union.anon* %3601 to i64*
  %3602 = load i64, i64* %RDI.i1333
  %3603 = load i64, i64* %RDX.i1332
  %3604 = load i64, i64* %PC.i1331
  %3605 = add i64 %3604, 3
  store i64 %3605, i64* %PC.i1331
  %3606 = add i64 %3603, %3602
  store i64 %3606, i64* %RDI.i1333, align 8
  %3607 = icmp ult i64 %3606, %3602
  %3608 = icmp ult i64 %3606, %3603
  %3609 = or i1 %3607, %3608
  %3610 = zext i1 %3609 to i8
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3610, i8* %3611, align 1
  %3612 = trunc i64 %3606 to i32
  %3613 = and i32 %3612, 255
  %3614 = call i32 @llvm.ctpop.i32(i32 %3613)
  %3615 = trunc i32 %3614 to i8
  %3616 = and i8 %3615, 1
  %3617 = xor i8 %3616, 1
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3617, i8* %3618, align 1
  %3619 = xor i64 %3603, %3602
  %3620 = xor i64 %3619, %3606
  %3621 = lshr i64 %3620, 4
  %3622 = trunc i64 %3621 to i8
  %3623 = and i8 %3622, 1
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3623, i8* %3624, align 1
  %3625 = icmp eq i64 %3606, 0
  %3626 = zext i1 %3625 to i8
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3626, i8* %3627, align 1
  %3628 = lshr i64 %3606, 63
  %3629 = trunc i64 %3628 to i8
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3629, i8* %3630, align 1
  %3631 = lshr i64 %3602, 63
  %3632 = lshr i64 %3603, 63
  %3633 = xor i64 %3628, %3631
  %3634 = xor i64 %3628, %3632
  %3635 = add i64 %3633, %3634
  %3636 = icmp eq i64 %3635, 2
  %3637 = zext i1 %3636 to i8
  %3638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3637, i8* %3638, align 1
  store %struct.Memory* %loadMem_40c381, %struct.Memory** %MEMORY
  %loadMem_40c384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3640 = getelementptr inbounds %struct.GPR, %struct.GPR* %3639, i32 0, i32 33
  %3641 = getelementptr inbounds %struct.Reg, %struct.Reg* %3640, i32 0, i32 0
  %PC.i1328 = bitcast %union.anon* %3641 to i64*
  %3642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3643 = getelementptr inbounds %struct.GPR, %struct.GPR* %3642, i32 0, i32 17
  %3644 = getelementptr inbounds %struct.Reg, %struct.Reg* %3643, i32 0, i32 0
  %R8D.i1329 = bitcast %union.anon* %3644 to i32*
  %3645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3646 = getelementptr inbounds %struct.GPR, %struct.GPR* %3645, i32 0, i32 11
  %3647 = getelementptr inbounds %struct.Reg, %struct.Reg* %3646, i32 0, i32 0
  %RDI.i1330 = bitcast %union.anon* %3647 to i64*
  %3648 = bitcast i32* %R8D.i1329 to i64*
  %3649 = load i64, i64* %RDI.i1330
  %3650 = add i64 %3649, 96
  %3651 = load i64, i64* %PC.i1328
  %3652 = add i64 %3651, 4
  store i64 %3652, i64* %PC.i1328
  %3653 = inttoptr i64 %3650 to i32*
  %3654 = load i32, i32* %3653
  %3655 = zext i32 %3654 to i64
  store i64 %3655, i64* %3648, align 8
  store %struct.Memory* %loadMem_40c384, %struct.Memory** %MEMORY
  %loadMem_40c388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3657 = getelementptr inbounds %struct.GPR, %struct.GPR* %3656, i32 0, i32 33
  %3658 = getelementptr inbounds %struct.Reg, %struct.Reg* %3657, i32 0, i32 0
  %PC.i1325 = bitcast %union.anon* %3658 to i64*
  %3659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3660 = getelementptr inbounds %struct.GPR, %struct.GPR* %3659, i32 0, i32 17
  %3661 = getelementptr inbounds %struct.Reg, %struct.Reg* %3660, i32 0, i32 0
  %R8D.i1326 = bitcast %union.anon* %3661 to i32*
  %3662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3663 = getelementptr inbounds %struct.GPR, %struct.GPR* %3662, i32 0, i32 19
  %3664 = getelementptr inbounds %struct.Reg, %struct.Reg* %3663, i32 0, i32 0
  %R9D.i1327 = bitcast %union.anon* %3664 to i32*
  %3665 = bitcast i32* %R9D.i1327 to i64*
  %3666 = load i32, i32* %R8D.i1326
  %3667 = zext i32 %3666 to i64
  %3668 = load i64, i64* %PC.i1325
  %3669 = add i64 %3668, 3
  store i64 %3669, i64* %PC.i1325
  %3670 = and i64 %3667, 4294967295
  store i64 %3670, i64* %3665, align 8
  store %struct.Memory* %loadMem_40c388, %struct.Memory** %MEMORY
  %loadMem_40c38b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3672 = getelementptr inbounds %struct.GPR, %struct.GPR* %3671, i32 0, i32 33
  %3673 = getelementptr inbounds %struct.Reg, %struct.Reg* %3672, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %3673 to i64*
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3675 = getelementptr inbounds %struct.GPR, %struct.GPR* %3674, i32 0, i32 19
  %3676 = getelementptr inbounds %struct.Reg, %struct.Reg* %3675, i32 0, i32 0
  %R9D.i1324 = bitcast %union.anon* %3676 to i32*
  %3677 = bitcast i32* %R9D.i1324 to i64*
  %3678 = load i32, i32* %R9D.i1324
  %3679 = zext i32 %3678 to i64
  %3680 = load i64, i64* %PC.i1323
  %3681 = add i64 %3680, 4
  store i64 %3681, i64* %PC.i1323
  %3682 = add i32 1, %3678
  %3683 = zext i32 %3682 to i64
  store i64 %3683, i64* %3677, align 8
  %3684 = icmp ult i32 %3682, %3678
  %3685 = icmp ult i32 %3682, 1
  %3686 = or i1 %3684, %3685
  %3687 = zext i1 %3686 to i8
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3687, i8* %3688, align 1
  %3689 = and i32 %3682, 255
  %3690 = call i32 @llvm.ctpop.i32(i32 %3689)
  %3691 = trunc i32 %3690 to i8
  %3692 = and i8 %3691, 1
  %3693 = xor i8 %3692, 1
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3693, i8* %3694, align 1
  %3695 = xor i64 1, %3679
  %3696 = trunc i64 %3695 to i32
  %3697 = xor i32 %3696, %3682
  %3698 = lshr i32 %3697, 4
  %3699 = trunc i32 %3698 to i8
  %3700 = and i8 %3699, 1
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3700, i8* %3701, align 1
  %3702 = icmp eq i32 %3682, 0
  %3703 = zext i1 %3702 to i8
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3703, i8* %3704, align 1
  %3705 = lshr i32 %3682, 31
  %3706 = trunc i32 %3705 to i8
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3706, i8* %3707, align 1
  %3708 = lshr i32 %3678, 31
  %3709 = xor i32 %3705, %3708
  %3710 = add i32 %3709, %3705
  %3711 = icmp eq i32 %3710, 2
  %3712 = zext i1 %3711 to i8
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3712, i8* %3713, align 1
  store %struct.Memory* %loadMem_40c38b, %struct.Memory** %MEMORY
  %loadMem_40c38f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3715 = getelementptr inbounds %struct.GPR, %struct.GPR* %3714, i32 0, i32 33
  %3716 = getelementptr inbounds %struct.Reg, %struct.Reg* %3715, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %3716 to i64*
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3718 = getelementptr inbounds %struct.GPR, %struct.GPR* %3717, i32 0, i32 19
  %3719 = getelementptr inbounds %struct.Reg, %struct.Reg* %3718, i32 0, i32 0
  %R9D.i1321 = bitcast %union.anon* %3719 to i32*
  %3720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3721 = getelementptr inbounds %struct.GPR, %struct.GPR* %3720, i32 0, i32 11
  %3722 = getelementptr inbounds %struct.Reg, %struct.Reg* %3721, i32 0, i32 0
  %RDI.i1322 = bitcast %union.anon* %3722 to i64*
  %3723 = load i64, i64* %RDI.i1322
  %3724 = add i64 %3723, 96
  %3725 = load i32, i32* %R9D.i1321
  %3726 = zext i32 %3725 to i64
  %3727 = load i64, i64* %PC.i1320
  %3728 = add i64 %3727, 4
  store i64 %3728, i64* %PC.i1320
  %3729 = inttoptr i64 %3724 to i32*
  store i32 %3725, i32* %3729
  store %struct.Memory* %loadMem_40c38f, %struct.Memory** %MEMORY
  %loadMem_40c393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3731 = getelementptr inbounds %struct.GPR, %struct.GPR* %3730, i32 0, i32 33
  %3732 = getelementptr inbounds %struct.Reg, %struct.Reg* %3731, i32 0, i32 0
  %PC.i1317 = bitcast %union.anon* %3732 to i64*
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3734 = getelementptr inbounds %struct.GPR, %struct.GPR* %3733, i32 0, i32 17
  %3735 = getelementptr inbounds %struct.Reg, %struct.Reg* %3734, i32 0, i32 0
  %R8D.i1318 = bitcast %union.anon* %3735 to i32*
  %3736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3737 = getelementptr inbounds %struct.GPR, %struct.GPR* %3736, i32 0, i32 7
  %3738 = getelementptr inbounds %struct.Reg, %struct.Reg* %3737, i32 0, i32 0
  %RDX.i1319 = bitcast %union.anon* %3738 to i64*
  %3739 = load i32, i32* %R8D.i1318
  %3740 = zext i32 %3739 to i64
  %3741 = load i64, i64* %PC.i1317
  %3742 = add i64 %3741, 3
  store i64 %3742, i64* %PC.i1317
  %3743 = shl i64 %3740, 32
  %3744 = ashr exact i64 %3743, 32
  store i64 %3744, i64* %RDX.i1319, align 8
  store %struct.Memory* %loadMem_40c393, %struct.Memory** %MEMORY
  %loadMem_40c396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3746 = getelementptr inbounds %struct.GPR, %struct.GPR* %3745, i32 0, i32 33
  %3747 = getelementptr inbounds %struct.Reg, %struct.Reg* %3746, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %3747 to i64*
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3749 = getelementptr inbounds %struct.GPR, %struct.GPR* %3748, i32 0, i32 5
  %3750 = getelementptr inbounds %struct.Reg, %struct.Reg* %3749, i32 0, i32 0
  %ECX.i1314 = bitcast %union.anon* %3750 to i32*
  %3751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3752 = getelementptr inbounds %struct.GPR, %struct.GPR* %3751, i32 0, i32 7
  %3753 = getelementptr inbounds %struct.Reg, %struct.Reg* %3752, i32 0, i32 0
  %RDX.i1315 = bitcast %union.anon* %3753 to i64*
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3755 = getelementptr inbounds %struct.GPR, %struct.GPR* %3754, i32 0, i32 9
  %3756 = getelementptr inbounds %struct.Reg, %struct.Reg* %3755, i32 0, i32 0
  %RSI.i1316 = bitcast %union.anon* %3756 to i64*
  %3757 = load i64, i64* %RSI.i1316
  %3758 = load i64, i64* %RDX.i1315
  %3759 = mul i64 %3758, 4
  %3760 = add i64 %3757, 100
  %3761 = add i64 %3760, %3759
  %3762 = load i32, i32* %ECX.i1314
  %3763 = zext i32 %3762 to i64
  %3764 = load i64, i64* %PC.i1313
  %3765 = add i64 %3764, 4
  store i64 %3765, i64* %PC.i1313
  %3766 = inttoptr i64 %3761 to i32*
  store i32 %3762, i32* %3766
  store %struct.Memory* %loadMem_40c396, %struct.Memory** %MEMORY
  %loadMem_40c39a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3768 = getelementptr inbounds %struct.GPR, %struct.GPR* %3767, i32 0, i32 33
  %3769 = getelementptr inbounds %struct.Reg, %struct.Reg* %3768, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %3769 to i64*
  %3770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3771 = getelementptr inbounds %struct.GPR, %struct.GPR* %3770, i32 0, i32 5
  %3772 = getelementptr inbounds %struct.Reg, %struct.Reg* %3771, i32 0, i32 0
  %RCX.i1311 = bitcast %union.anon* %3772 to i64*
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3774 = getelementptr inbounds %struct.GPR, %struct.GPR* %3773, i32 0, i32 15
  %3775 = getelementptr inbounds %struct.Reg, %struct.Reg* %3774, i32 0, i32 0
  %RBP.i1312 = bitcast %union.anon* %3775 to i64*
  %3776 = load i64, i64* %RBP.i1312
  %3777 = sub i64 %3776, 4
  %3778 = load i64, i64* %PC.i1310
  %3779 = add i64 %3778, 3
  store i64 %3779, i64* %PC.i1310
  %3780 = inttoptr i64 %3777 to i32*
  %3781 = load i32, i32* %3780
  %3782 = zext i32 %3781 to i64
  store i64 %3782, i64* %RCX.i1311, align 8
  store %struct.Memory* %loadMem_40c39a, %struct.Memory** %MEMORY
  %loadMem_40c39d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3784 = getelementptr inbounds %struct.GPR, %struct.GPR* %3783, i32 0, i32 33
  %3785 = getelementptr inbounds %struct.Reg, %struct.Reg* %3784, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %3785 to i64*
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3787 = getelementptr inbounds %struct.GPR, %struct.GPR* %3786, i32 0, i32 5
  %3788 = getelementptr inbounds %struct.Reg, %struct.Reg* %3787, i32 0, i32 0
  %RCX.i1309 = bitcast %union.anon* %3788 to i64*
  %3789 = load i64, i64* %RCX.i1309
  %3790 = load i64, i64* %PC.i1308
  %3791 = add i64 %3790, 3
  store i64 %3791, i64* %PC.i1308
  %3792 = trunc i64 %3789 to i32
  %3793 = add i32 20, %3792
  %3794 = zext i32 %3793 to i64
  store i64 %3794, i64* %RCX.i1309, align 8
  %3795 = icmp ult i32 %3793, %3792
  %3796 = icmp ult i32 %3793, 20
  %3797 = or i1 %3795, %3796
  %3798 = zext i1 %3797 to i8
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3798, i8* %3799, align 1
  %3800 = and i32 %3793, 255
  %3801 = call i32 @llvm.ctpop.i32(i32 %3800)
  %3802 = trunc i32 %3801 to i8
  %3803 = and i8 %3802, 1
  %3804 = xor i8 %3803, 1
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3804, i8* %3805, align 1
  %3806 = xor i64 20, %3789
  %3807 = trunc i64 %3806 to i32
  %3808 = xor i32 %3807, %3793
  %3809 = lshr i32 %3808, 4
  %3810 = trunc i32 %3809 to i8
  %3811 = and i8 %3810, 1
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3811, i8* %3812, align 1
  %3813 = icmp eq i32 %3793, 0
  %3814 = zext i1 %3813 to i8
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3814, i8* %3815, align 1
  %3816 = lshr i32 %3793, 31
  %3817 = trunc i32 %3816 to i8
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3817, i8* %3818, align 1
  %3819 = lshr i32 %3792, 31
  %3820 = xor i32 %3816, %3819
  %3821 = add i32 %3820, %3816
  %3822 = icmp eq i32 %3821, 2
  %3823 = zext i1 %3822 to i8
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3823, i8* %3824, align 1
  store %struct.Memory* %loadMem_40c39d, %struct.Memory** %MEMORY
  %loadMem_40c3a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3826 = getelementptr inbounds %struct.GPR, %struct.GPR* %3825, i32 0, i32 33
  %3827 = getelementptr inbounds %struct.Reg, %struct.Reg* %3826, i32 0, i32 0
  %PC.i1305 = bitcast %union.anon* %3827 to i64*
  %3828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3829 = getelementptr inbounds %struct.GPR, %struct.GPR* %3828, i32 0, i32 5
  %3830 = getelementptr inbounds %struct.Reg, %struct.Reg* %3829, i32 0, i32 0
  %ECX.i1306 = bitcast %union.anon* %3830 to i32*
  %3831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3832 = getelementptr inbounds %struct.GPR, %struct.GPR* %3831, i32 0, i32 7
  %3833 = getelementptr inbounds %struct.Reg, %struct.Reg* %3832, i32 0, i32 0
  %RDX.i1307 = bitcast %union.anon* %3833 to i64*
  %3834 = load i32, i32* %ECX.i1306
  %3835 = zext i32 %3834 to i64
  %3836 = load i64, i64* %PC.i1305
  %3837 = add i64 %3836, 3
  store i64 %3837, i64* %PC.i1305
  %3838 = shl i64 %3835, 32
  %3839 = ashr exact i64 %3838, 32
  store i64 %3839, i64* %RDX.i1307, align 8
  store %struct.Memory* %loadMem_40c3a0, %struct.Memory** %MEMORY
  %loadMem_40c3a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3841 = getelementptr inbounds %struct.GPR, %struct.GPR* %3840, i32 0, i32 33
  %3842 = getelementptr inbounds %struct.Reg, %struct.Reg* %3841, i32 0, i32 0
  %PC.i1303 = bitcast %union.anon* %3842 to i64*
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3844 = getelementptr inbounds %struct.GPR, %struct.GPR* %3843, i32 0, i32 7
  %3845 = getelementptr inbounds %struct.Reg, %struct.Reg* %3844, i32 0, i32 0
  %RDX.i1304 = bitcast %union.anon* %3845 to i64*
  %3846 = load i64, i64* %RDX.i1304
  %3847 = mul i64 %3846, 4
  %3848 = add i64 %3847, 11187184
  %3849 = load i64, i64* %PC.i1303
  %3850 = add i64 %3849, 8
  store i64 %3850, i64* %PC.i1303
  %3851 = inttoptr i64 %3848 to i32*
  %3852 = load i32, i32* %3851
  %3853 = sext i32 %3852 to i64
  store i64 %3853, i64* %RDX.i1304, align 8
  store %struct.Memory* %loadMem_40c3a3, %struct.Memory** %MEMORY
  %loadMem_40c3ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3855 = getelementptr inbounds %struct.GPR, %struct.GPR* %3854, i32 0, i32 33
  %3856 = getelementptr inbounds %struct.Reg, %struct.Reg* %3855, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %3856 to i64*
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3858 = getelementptr inbounds %struct.GPR, %struct.GPR* %3857, i32 0, i32 7
  %3859 = getelementptr inbounds %struct.Reg, %struct.Reg* %3858, i32 0, i32 0
  %RDX.i1302 = bitcast %union.anon* %3859 to i64*
  %3860 = load i64, i64* %RDX.i1302
  %3861 = load i64, i64* %PC.i1301
  %3862 = add i64 %3861, 7
  store i64 %3862, i64* %PC.i1301
  %3863 = sext i64 %3860 to i128
  %3864 = and i128 %3863, -18446744073709551616
  %3865 = zext i64 %3860 to i128
  %3866 = or i128 %3864, %3865
  %3867 = mul i128 744, %3866
  %3868 = trunc i128 %3867 to i64
  store i64 %3868, i64* %RDX.i1302, align 8
  %3869 = sext i64 %3868 to i128
  %3870 = icmp ne i128 %3869, %3867
  %3871 = zext i1 %3870 to i8
  %3872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3871, i8* %3872, align 1
  %3873 = trunc i128 %3867 to i32
  %3874 = and i32 %3873, 255
  %3875 = call i32 @llvm.ctpop.i32(i32 %3874)
  %3876 = trunc i32 %3875 to i8
  %3877 = and i8 %3876, 1
  %3878 = xor i8 %3877, 1
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3878, i8* %3879, align 1
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3880, align 1
  %3881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3881, align 1
  %3882 = lshr i64 %3868, 63
  %3883 = trunc i64 %3882 to i8
  %3884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3883, i8* %3884, align 1
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3871, i8* %3885, align 1
  store %struct.Memory* %loadMem_40c3ab, %struct.Memory** %MEMORY
  %loadMem_40c3b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3887 = getelementptr inbounds %struct.GPR, %struct.GPR* %3886, i32 0, i32 33
  %3888 = getelementptr inbounds %struct.Reg, %struct.Reg* %3887, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %3888 to i64*
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3890 = getelementptr inbounds %struct.GPR, %struct.GPR* %3889, i32 0, i32 1
  %3891 = getelementptr inbounds %struct.Reg, %struct.Reg* %3890, i32 0, i32 0
  %RAX.i1299 = bitcast %union.anon* %3891 to i64*
  %3892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3893 = getelementptr inbounds %struct.GPR, %struct.GPR* %3892, i32 0, i32 9
  %3894 = getelementptr inbounds %struct.Reg, %struct.Reg* %3893, i32 0, i32 0
  %RSI.i1300 = bitcast %union.anon* %3894 to i64*
  %3895 = load i64, i64* %RAX.i1299
  %3896 = load i64, i64* %PC.i1298
  %3897 = add i64 %3896, 3
  store i64 %3897, i64* %PC.i1298
  store i64 %3895, i64* %RSI.i1300, align 8
  store %struct.Memory* %loadMem_40c3b2, %struct.Memory** %MEMORY
  %loadMem_40c3b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3899 = getelementptr inbounds %struct.GPR, %struct.GPR* %3898, i32 0, i32 33
  %3900 = getelementptr inbounds %struct.Reg, %struct.Reg* %3899, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %3900 to i64*
  %3901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3902 = getelementptr inbounds %struct.GPR, %struct.GPR* %3901, i32 0, i32 7
  %3903 = getelementptr inbounds %struct.Reg, %struct.Reg* %3902, i32 0, i32 0
  %RDX.i1296 = bitcast %union.anon* %3903 to i64*
  %3904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3905 = getelementptr inbounds %struct.GPR, %struct.GPR* %3904, i32 0, i32 9
  %3906 = getelementptr inbounds %struct.Reg, %struct.Reg* %3905, i32 0, i32 0
  %RSI.i1297 = bitcast %union.anon* %3906 to i64*
  %3907 = load i64, i64* %RSI.i1297
  %3908 = load i64, i64* %RDX.i1296
  %3909 = load i64, i64* %PC.i1295
  %3910 = add i64 %3909, 3
  store i64 %3910, i64* %PC.i1295
  %3911 = add i64 %3908, %3907
  store i64 %3911, i64* %RSI.i1297, align 8
  %3912 = icmp ult i64 %3911, %3907
  %3913 = icmp ult i64 %3911, %3908
  %3914 = or i1 %3912, %3913
  %3915 = zext i1 %3914 to i8
  %3916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3915, i8* %3916, align 1
  %3917 = trunc i64 %3911 to i32
  %3918 = and i32 %3917, 255
  %3919 = call i32 @llvm.ctpop.i32(i32 %3918)
  %3920 = trunc i32 %3919 to i8
  %3921 = and i8 %3920, 1
  %3922 = xor i8 %3921, 1
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3922, i8* %3923, align 1
  %3924 = xor i64 %3908, %3907
  %3925 = xor i64 %3924, %3911
  %3926 = lshr i64 %3925, 4
  %3927 = trunc i64 %3926 to i8
  %3928 = and i8 %3927, 1
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3928, i8* %3929, align 1
  %3930 = icmp eq i64 %3911, 0
  %3931 = zext i1 %3930 to i8
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3931, i8* %3932, align 1
  %3933 = lshr i64 %3911, 63
  %3934 = trunc i64 %3933 to i8
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3934, i8* %3935, align 1
  %3936 = lshr i64 %3907, 63
  %3937 = lshr i64 %3908, 63
  %3938 = xor i64 %3933, %3936
  %3939 = xor i64 %3933, %3937
  %3940 = add i64 %3938, %3939
  %3941 = icmp eq i64 %3940, 2
  %3942 = zext i1 %3941 to i8
  %3943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3942, i8* %3943, align 1
  store %struct.Memory* %loadMem_40c3b5, %struct.Memory** %MEMORY
  %loadMem_40c3b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3945 = getelementptr inbounds %struct.GPR, %struct.GPR* %3944, i32 0, i32 33
  %3946 = getelementptr inbounds %struct.Reg, %struct.Reg* %3945, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %3946 to i64*
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3948 = getelementptr inbounds %struct.GPR, %struct.GPR* %3947, i32 0, i32 9
  %3949 = getelementptr inbounds %struct.Reg, %struct.Reg* %3948, i32 0, i32 0
  %RSI.i1294 = bitcast %union.anon* %3949 to i64*
  %3950 = load i64, i64* %RSI.i1294
  %3951 = load i64, i64* %PC.i1293
  %3952 = add i64 %3951, 4
  store i64 %3952, i64* %PC.i1293
  %3953 = add i64 96, %3950
  store i64 %3953, i64* %RSI.i1294, align 8
  %3954 = icmp ult i64 %3953, %3950
  %3955 = icmp ult i64 %3953, 96
  %3956 = or i1 %3954, %3955
  %3957 = zext i1 %3956 to i8
  %3958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3957, i8* %3958, align 1
  %3959 = trunc i64 %3953 to i32
  %3960 = and i32 %3959, 255
  %3961 = call i32 @llvm.ctpop.i32(i32 %3960)
  %3962 = trunc i32 %3961 to i8
  %3963 = and i8 %3962, 1
  %3964 = xor i8 %3963, 1
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3964, i8* %3965, align 1
  %3966 = xor i64 96, %3950
  %3967 = xor i64 %3966, %3953
  %3968 = lshr i64 %3967, 4
  %3969 = trunc i64 %3968 to i8
  %3970 = and i8 %3969, 1
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3970, i8* %3971, align 1
  %3972 = icmp eq i64 %3953, 0
  %3973 = zext i1 %3972 to i8
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3973, i8* %3974, align 1
  %3975 = lshr i64 %3953, 63
  %3976 = trunc i64 %3975 to i8
  %3977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3976, i8* %3977, align 1
  %3978 = lshr i64 %3950, 63
  %3979 = xor i64 %3975, %3978
  %3980 = add i64 %3979, %3975
  %3981 = icmp eq i64 %3980, 2
  %3982 = zext i1 %3981 to i8
  %3983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3982, i8* %3983, align 1
  store %struct.Memory* %loadMem_40c3b8, %struct.Memory** %MEMORY
  %loadMem_40c3bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3985 = getelementptr inbounds %struct.GPR, %struct.GPR* %3984, i32 0, i32 33
  %3986 = getelementptr inbounds %struct.Reg, %struct.Reg* %3985, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %3986 to i64*
  %3987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3988 = getelementptr inbounds %struct.GPR, %struct.GPR* %3987, i32 0, i32 7
  %3989 = getelementptr inbounds %struct.Reg, %struct.Reg* %3988, i32 0, i32 0
  %RDX.i1292 = bitcast %union.anon* %3989 to i64*
  %3990 = load i64, i64* %PC.i1291
  %3991 = add i64 %3990, 8
  store i64 %3991, i64* %PC.i1291
  %3992 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %3992, i64* %RDX.i1292, align 8
  store %struct.Memory* %loadMem_40c3bc, %struct.Memory** %MEMORY
  %loadMem_40c3c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3994 = getelementptr inbounds %struct.GPR, %struct.GPR* %3993, i32 0, i32 33
  %3995 = getelementptr inbounds %struct.Reg, %struct.Reg* %3994, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %3995 to i64*
  %3996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3997 = getelementptr inbounds %struct.GPR, %struct.GPR* %3996, i32 0, i32 7
  %3998 = getelementptr inbounds %struct.Reg, %struct.Reg* %3997, i32 0, i32 0
  %RDX.i1289 = bitcast %union.anon* %3998 to i64*
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 9
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %RSI.i1290 = bitcast %union.anon* %4001 to i64*
  %4002 = load i64, i64* %RDX.i1289
  %4003 = load i64, i64* %RSI.i1290
  %4004 = load i64, i64* %PC.i1288
  %4005 = add i64 %4004, 3
  store i64 %4005, i64* %PC.i1288
  %4006 = inttoptr i64 %4002 to i64*
  store i64 %4003, i64* %4006
  store %struct.Memory* %loadMem_40c3c4, %struct.Memory** %MEMORY
  %loadMem_40c3c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4008 = getelementptr inbounds %struct.GPR, %struct.GPR* %4007, i32 0, i32 33
  %4009 = getelementptr inbounds %struct.Reg, %struct.Reg* %4008, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %4009 to i64*
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4011 = getelementptr inbounds %struct.GPR, %struct.GPR* %4010, i32 0, i32 5
  %4012 = getelementptr inbounds %struct.Reg, %struct.Reg* %4011, i32 0, i32 0
  %RCX.i1286 = bitcast %union.anon* %4012 to i64*
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 15
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %RBP.i1287 = bitcast %union.anon* %4015 to i64*
  %4016 = load i64, i64* %RBP.i1287
  %4017 = sub i64 %4016, 4
  %4018 = load i64, i64* %PC.i1285
  %4019 = add i64 %4018, 3
  store i64 %4019, i64* %PC.i1285
  %4020 = inttoptr i64 %4017 to i32*
  %4021 = load i32, i32* %4020
  %4022 = zext i32 %4021 to i64
  store i64 %4022, i64* %RCX.i1286, align 8
  store %struct.Memory* %loadMem_40c3c7, %struct.Memory** %MEMORY
  %loadMem_40c3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %4023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4024 = getelementptr inbounds %struct.GPR, %struct.GPR* %4023, i32 0, i32 33
  %4025 = getelementptr inbounds %struct.Reg, %struct.Reg* %4024, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %4025 to i64*
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4027 = getelementptr inbounds %struct.GPR, %struct.GPR* %4026, i32 0, i32 5
  %4028 = getelementptr inbounds %struct.Reg, %struct.Reg* %4027, i32 0, i32 0
  %RCX.i1284 = bitcast %union.anon* %4028 to i64*
  %4029 = load i64, i64* %RCX.i1284
  %4030 = load i64, i64* %PC.i1283
  %4031 = add i64 %4030, 3
  store i64 %4031, i64* %PC.i1283
  %4032 = trunc i64 %4029 to i32
  %4033 = add i32 20, %4032
  %4034 = zext i32 %4033 to i64
  store i64 %4034, i64* %RCX.i1284, align 8
  %4035 = icmp ult i32 %4033, %4032
  %4036 = icmp ult i32 %4033, 20
  %4037 = or i1 %4035, %4036
  %4038 = zext i1 %4037 to i8
  %4039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4038, i8* %4039, align 1
  %4040 = and i32 %4033, 255
  %4041 = call i32 @llvm.ctpop.i32(i32 %4040)
  %4042 = trunc i32 %4041 to i8
  %4043 = and i8 %4042, 1
  %4044 = xor i8 %4043, 1
  %4045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4044, i8* %4045, align 1
  %4046 = xor i64 20, %4029
  %4047 = trunc i64 %4046 to i32
  %4048 = xor i32 %4047, %4033
  %4049 = lshr i32 %4048, 4
  %4050 = trunc i32 %4049 to i8
  %4051 = and i8 %4050, 1
  %4052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4051, i8* %4052, align 1
  %4053 = icmp eq i32 %4033, 0
  %4054 = zext i1 %4053 to i8
  %4055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4054, i8* %4055, align 1
  %4056 = lshr i32 %4033, 31
  %4057 = trunc i32 %4056 to i8
  %4058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4057, i8* %4058, align 1
  %4059 = lshr i32 %4032, 31
  %4060 = xor i32 %4056, %4059
  %4061 = add i32 %4060, %4056
  %4062 = icmp eq i32 %4061, 2
  %4063 = zext i1 %4062 to i8
  %4064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4063, i8* %4064, align 1
  store %struct.Memory* %loadMem_40c3ca, %struct.Memory** %MEMORY
  %loadMem_40c3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4066 = getelementptr inbounds %struct.GPR, %struct.GPR* %4065, i32 0, i32 33
  %4067 = getelementptr inbounds %struct.Reg, %struct.Reg* %4066, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %4067 to i64*
  %4068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4069 = getelementptr inbounds %struct.GPR, %struct.GPR* %4068, i32 0, i32 5
  %4070 = getelementptr inbounds %struct.Reg, %struct.Reg* %4069, i32 0, i32 0
  %ECX.i1281 = bitcast %union.anon* %4070 to i32*
  %4071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4072 = getelementptr inbounds %struct.GPR, %struct.GPR* %4071, i32 0, i32 7
  %4073 = getelementptr inbounds %struct.Reg, %struct.Reg* %4072, i32 0, i32 0
  %RDX.i1282 = bitcast %union.anon* %4073 to i64*
  %4074 = load i32, i32* %ECX.i1281
  %4075 = zext i32 %4074 to i64
  %4076 = load i64, i64* %PC.i1280
  %4077 = add i64 %4076, 3
  store i64 %4077, i64* %PC.i1280
  %4078 = shl i64 %4075, 32
  %4079 = ashr exact i64 %4078, 32
  store i64 %4079, i64* %RDX.i1282, align 8
  store %struct.Memory* %loadMem_40c3cd, %struct.Memory** %MEMORY
  %loadMem_40c3d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4081 = getelementptr inbounds %struct.GPR, %struct.GPR* %4080, i32 0, i32 33
  %4082 = getelementptr inbounds %struct.Reg, %struct.Reg* %4081, i32 0, i32 0
  %PC.i1278 = bitcast %union.anon* %4082 to i64*
  %4083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4084 = getelementptr inbounds %struct.GPR, %struct.GPR* %4083, i32 0, i32 7
  %4085 = getelementptr inbounds %struct.Reg, %struct.Reg* %4084, i32 0, i32 0
  %RDX.i1279 = bitcast %union.anon* %4085 to i64*
  %4086 = load i64, i64* %RDX.i1279
  %4087 = mul i64 %4086, 4
  %4088 = add i64 %4087, 11187184
  %4089 = load i64, i64* %PC.i1278
  %4090 = add i64 %4089, 8
  store i64 %4090, i64* %PC.i1278
  %4091 = inttoptr i64 %4088 to i32*
  %4092 = load i32, i32* %4091
  %4093 = sext i32 %4092 to i64
  store i64 %4093, i64* %RDX.i1279, align 8
  store %struct.Memory* %loadMem_40c3d0, %struct.Memory** %MEMORY
  %loadMem_40c3d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4095 = getelementptr inbounds %struct.GPR, %struct.GPR* %4094, i32 0, i32 33
  %4096 = getelementptr inbounds %struct.Reg, %struct.Reg* %4095, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %4096 to i64*
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4098 = getelementptr inbounds %struct.GPR, %struct.GPR* %4097, i32 0, i32 7
  %4099 = getelementptr inbounds %struct.Reg, %struct.Reg* %4098, i32 0, i32 0
  %RDX.i1277 = bitcast %union.anon* %4099 to i64*
  %4100 = load i64, i64* %RDX.i1277
  %4101 = load i64, i64* %PC.i1276
  %4102 = add i64 %4101, 7
  store i64 %4102, i64* %PC.i1276
  %4103 = sext i64 %4100 to i128
  %4104 = and i128 %4103, -18446744073709551616
  %4105 = zext i64 %4100 to i128
  %4106 = or i128 %4104, %4105
  %4107 = mul i128 744, %4106
  %4108 = trunc i128 %4107 to i64
  store i64 %4108, i64* %RDX.i1277, align 8
  %4109 = sext i64 %4108 to i128
  %4110 = icmp ne i128 %4109, %4107
  %4111 = zext i1 %4110 to i8
  %4112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4111, i8* %4112, align 1
  %4113 = trunc i128 %4107 to i32
  %4114 = and i32 %4113, 255
  %4115 = call i32 @llvm.ctpop.i32(i32 %4114)
  %4116 = trunc i32 %4115 to i8
  %4117 = and i8 %4116, 1
  %4118 = xor i8 %4117, 1
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4118, i8* %4119, align 1
  %4120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4120, align 1
  %4121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4121, align 1
  %4122 = lshr i64 %4108, 63
  %4123 = trunc i64 %4122 to i8
  %4124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4123, i8* %4124, align 1
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4111, i8* %4125, align 1
  store %struct.Memory* %loadMem_40c3d8, %struct.Memory** %MEMORY
  %loadMem_40c3df = load %struct.Memory*, %struct.Memory** %MEMORY
  %4126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4127 = getelementptr inbounds %struct.GPR, %struct.GPR* %4126, i32 0, i32 33
  %4128 = getelementptr inbounds %struct.Reg, %struct.Reg* %4127, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %4128 to i64*
  %4129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4130 = getelementptr inbounds %struct.GPR, %struct.GPR* %4129, i32 0, i32 1
  %4131 = getelementptr inbounds %struct.Reg, %struct.Reg* %4130, i32 0, i32 0
  %RAX.i1274 = bitcast %union.anon* %4131 to i64*
  %4132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4133 = getelementptr inbounds %struct.GPR, %struct.GPR* %4132, i32 0, i32 9
  %4134 = getelementptr inbounds %struct.Reg, %struct.Reg* %4133, i32 0, i32 0
  %RSI.i1275 = bitcast %union.anon* %4134 to i64*
  %4135 = load i64, i64* %RAX.i1274
  %4136 = load i64, i64* %PC.i1273
  %4137 = add i64 %4136, 3
  store i64 %4137, i64* %PC.i1273
  store i64 %4135, i64* %RSI.i1275, align 8
  store %struct.Memory* %loadMem_40c3df, %struct.Memory** %MEMORY
  %loadMem_40c3e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4139 = getelementptr inbounds %struct.GPR, %struct.GPR* %4138, i32 0, i32 33
  %4140 = getelementptr inbounds %struct.Reg, %struct.Reg* %4139, i32 0, i32 0
  %PC.i1270 = bitcast %union.anon* %4140 to i64*
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4142 = getelementptr inbounds %struct.GPR, %struct.GPR* %4141, i32 0, i32 7
  %4143 = getelementptr inbounds %struct.Reg, %struct.Reg* %4142, i32 0, i32 0
  %RDX.i1271 = bitcast %union.anon* %4143 to i64*
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4145 = getelementptr inbounds %struct.GPR, %struct.GPR* %4144, i32 0, i32 9
  %4146 = getelementptr inbounds %struct.Reg, %struct.Reg* %4145, i32 0, i32 0
  %RSI.i1272 = bitcast %union.anon* %4146 to i64*
  %4147 = load i64, i64* %RSI.i1272
  %4148 = load i64, i64* %RDX.i1271
  %4149 = load i64, i64* %PC.i1270
  %4150 = add i64 %4149, 3
  store i64 %4150, i64* %PC.i1270
  %4151 = add i64 %4148, %4147
  store i64 %4151, i64* %RSI.i1272, align 8
  %4152 = icmp ult i64 %4151, %4147
  %4153 = icmp ult i64 %4151, %4148
  %4154 = or i1 %4152, %4153
  %4155 = zext i1 %4154 to i8
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4155, i8* %4156, align 1
  %4157 = trunc i64 %4151 to i32
  %4158 = and i32 %4157, 255
  %4159 = call i32 @llvm.ctpop.i32(i32 %4158)
  %4160 = trunc i32 %4159 to i8
  %4161 = and i8 %4160, 1
  %4162 = xor i8 %4161, 1
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4162, i8* %4163, align 1
  %4164 = xor i64 %4148, %4147
  %4165 = xor i64 %4164, %4151
  %4166 = lshr i64 %4165, 4
  %4167 = trunc i64 %4166 to i8
  %4168 = and i8 %4167, 1
  %4169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4168, i8* %4169, align 1
  %4170 = icmp eq i64 %4151, 0
  %4171 = zext i1 %4170 to i8
  %4172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4171, i8* %4172, align 1
  %4173 = lshr i64 %4151, 63
  %4174 = trunc i64 %4173 to i8
  %4175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4174, i8* %4175, align 1
  %4176 = lshr i64 %4147, 63
  %4177 = lshr i64 %4148, 63
  %4178 = xor i64 %4173, %4176
  %4179 = xor i64 %4173, %4177
  %4180 = add i64 %4178, %4179
  %4181 = icmp eq i64 %4180, 2
  %4182 = zext i1 %4181 to i8
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4182, i8* %4183, align 1
  store %struct.Memory* %loadMem_40c3e2, %struct.Memory** %MEMORY
  %loadMem_40c3e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4185 = getelementptr inbounds %struct.GPR, %struct.GPR* %4184, i32 0, i32 33
  %4186 = getelementptr inbounds %struct.Reg, %struct.Reg* %4185, i32 0, i32 0
  %PC.i1267 = bitcast %union.anon* %4186 to i64*
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4188 = getelementptr inbounds %struct.GPR, %struct.GPR* %4187, i32 0, i32 5
  %4189 = getelementptr inbounds %struct.Reg, %struct.Reg* %4188, i32 0, i32 0
  %RCX.i1268 = bitcast %union.anon* %4189 to i64*
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4191 = getelementptr inbounds %struct.GPR, %struct.GPR* %4190, i32 0, i32 9
  %4192 = getelementptr inbounds %struct.Reg, %struct.Reg* %4191, i32 0, i32 0
  %RSI.i1269 = bitcast %union.anon* %4192 to i64*
  %4193 = load i64, i64* %RSI.i1269
  %4194 = add i64 %4193, 96
  %4195 = load i64, i64* %PC.i1267
  %4196 = add i64 %4195, 3
  store i64 %4196, i64* %PC.i1267
  %4197 = inttoptr i64 %4194 to i32*
  %4198 = load i32, i32* %4197
  %4199 = zext i32 %4198 to i64
  store i64 %4199, i64* %RCX.i1268, align 8
  store %struct.Memory* %loadMem_40c3e5, %struct.Memory** %MEMORY
  %loadMem_40c3e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4201 = getelementptr inbounds %struct.GPR, %struct.GPR* %4200, i32 0, i32 33
  %4202 = getelementptr inbounds %struct.Reg, %struct.Reg* %4201, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %4202 to i64*
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4204 = getelementptr inbounds %struct.GPR, %struct.GPR* %4203, i32 0, i32 7
  %4205 = getelementptr inbounds %struct.Reg, %struct.Reg* %4204, i32 0, i32 0
  %RDX.i1266 = bitcast %union.anon* %4205 to i64*
  %4206 = load i64, i64* %PC.i1265
  %4207 = add i64 %4206, 8
  store i64 %4207, i64* %PC.i1265
  %4208 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %4208, i64* %RDX.i1266, align 8
  store %struct.Memory* %loadMem_40c3e8, %struct.Memory** %MEMORY
  %loadMem_40c3f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 33
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %4211 to i64*
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4213 = getelementptr inbounds %struct.GPR, %struct.GPR* %4212, i32 0, i32 7
  %4214 = getelementptr inbounds %struct.Reg, %struct.Reg* %4213, i32 0, i32 0
  %RDX.i1263 = bitcast %union.anon* %4214 to i64*
  %4215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4216 = getelementptr inbounds %struct.GPR, %struct.GPR* %4215, i32 0, i32 9
  %4217 = getelementptr inbounds %struct.Reg, %struct.Reg* %4216, i32 0, i32 0
  %RSI.i1264 = bitcast %union.anon* %4217 to i64*
  %4218 = load i64, i64* %RDX.i1263
  %4219 = load i64, i64* %PC.i1262
  %4220 = add i64 %4219, 3
  store i64 %4220, i64* %PC.i1262
  store i64 %4218, i64* %RSI.i1264, align 8
  store %struct.Memory* %loadMem_40c3f0, %struct.Memory** %MEMORY
  %loadMem_40c3f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4222 = getelementptr inbounds %struct.GPR, %struct.GPR* %4221, i32 0, i32 33
  %4223 = getelementptr inbounds %struct.Reg, %struct.Reg* %4222, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %4223 to i64*
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4225 = getelementptr inbounds %struct.GPR, %struct.GPR* %4224, i32 0, i32 9
  %4226 = getelementptr inbounds %struct.Reg, %struct.Reg* %4225, i32 0, i32 0
  %RSI.i1261 = bitcast %union.anon* %4226 to i64*
  %4227 = load i64, i64* %RSI.i1261
  %4228 = load i64, i64* %PC.i1260
  %4229 = add i64 %4228, 4
  store i64 %4229, i64* %PC.i1260
  %4230 = add i64 16, %4227
  store i64 %4230, i64* %RSI.i1261, align 8
  %4231 = icmp ult i64 %4230, %4227
  %4232 = icmp ult i64 %4230, 16
  %4233 = or i1 %4231, %4232
  %4234 = zext i1 %4233 to i8
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4234, i8* %4235, align 1
  %4236 = trunc i64 %4230 to i32
  %4237 = and i32 %4236, 255
  %4238 = call i32 @llvm.ctpop.i32(i32 %4237)
  %4239 = trunc i32 %4238 to i8
  %4240 = and i8 %4239, 1
  %4241 = xor i8 %4240, 1
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4241, i8* %4242, align 1
  %4243 = xor i64 16, %4227
  %4244 = xor i64 %4243, %4230
  %4245 = lshr i64 %4244, 4
  %4246 = trunc i64 %4245 to i8
  %4247 = and i8 %4246, 1
  %4248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4247, i8* %4248, align 1
  %4249 = icmp eq i64 %4230, 0
  %4250 = zext i1 %4249 to i8
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4250, i8* %4251, align 1
  %4252 = lshr i64 %4230, 63
  %4253 = trunc i64 %4252 to i8
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4253, i8* %4254, align 1
  %4255 = lshr i64 %4227, 63
  %4256 = xor i64 %4252, %4255
  %4257 = add i64 %4256, %4252
  %4258 = icmp eq i64 %4257, 2
  %4259 = zext i1 %4258 to i8
  %4260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4259, i8* %4260, align 1
  store %struct.Memory* %loadMem_40c3f3, %struct.Memory** %MEMORY
  %loadMem_40c3f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4262 = getelementptr inbounds %struct.GPR, %struct.GPR* %4261, i32 0, i32 33
  %4263 = getelementptr inbounds %struct.Reg, %struct.Reg* %4262, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %4263 to i64*
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4265 = getelementptr inbounds %struct.GPR, %struct.GPR* %4264, i32 0, i32 9
  %4266 = getelementptr inbounds %struct.Reg, %struct.Reg* %4265, i32 0, i32 0
  %RSI.i1259 = bitcast %union.anon* %4266 to i64*
  %4267 = load i64, i64* %RSI.i1259
  %4268 = load i64, i64* %PC.i1258
  %4269 = add i64 %4268, 8
  store i64 %4269, i64* %PC.i1258
  store i64 %4267, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40c3f7, %struct.Memory** %MEMORY
  %loadMem_40c3ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4271 = getelementptr inbounds %struct.GPR, %struct.GPR* %4270, i32 0, i32 33
  %4272 = getelementptr inbounds %struct.Reg, %struct.Reg* %4271, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %4272 to i64*
  %4273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4274 = getelementptr inbounds %struct.GPR, %struct.GPR* %4273, i32 0, i32 5
  %4275 = getelementptr inbounds %struct.Reg, %struct.Reg* %4274, i32 0, i32 0
  %ECX.i1256 = bitcast %union.anon* %4275 to i32*
  %4276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4277 = getelementptr inbounds %struct.GPR, %struct.GPR* %4276, i32 0, i32 7
  %4278 = getelementptr inbounds %struct.Reg, %struct.Reg* %4277, i32 0, i32 0
  %RDX.i1257 = bitcast %union.anon* %4278 to i64*
  %4279 = load i64, i64* %RDX.i1257
  %4280 = add i64 %4279, 8
  %4281 = load i32, i32* %ECX.i1256
  %4282 = zext i32 %4281 to i64
  %4283 = load i64, i64* %PC.i1255
  %4284 = add i64 %4283, 3
  store i64 %4284, i64* %PC.i1255
  %4285 = inttoptr i64 %4280 to i32*
  store i32 %4281, i32* %4285
  store %struct.Memory* %loadMem_40c3ff, %struct.Memory** %MEMORY
  %loadMem_40c402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4287 = getelementptr inbounds %struct.GPR, %struct.GPR* %4286, i32 0, i32 33
  %4288 = getelementptr inbounds %struct.Reg, %struct.Reg* %4287, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %4288 to i64*
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4290 = getelementptr inbounds %struct.GPR, %struct.GPR* %4289, i32 0, i32 7
  %4291 = getelementptr inbounds %struct.Reg, %struct.Reg* %4290, i32 0, i32 0
  %RDX.i1253 = bitcast %union.anon* %4291 to i64*
  %4292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4293 = getelementptr inbounds %struct.GPR, %struct.GPR* %4292, i32 0, i32 15
  %4294 = getelementptr inbounds %struct.Reg, %struct.Reg* %4293, i32 0, i32 0
  %RBP.i1254 = bitcast %union.anon* %4294 to i64*
  %4295 = load i64, i64* %RBP.i1254
  %4296 = sub i64 %4295, 4
  %4297 = load i64, i64* %PC.i1252
  %4298 = add i64 %4297, 4
  store i64 %4298, i64* %PC.i1252
  %4299 = inttoptr i64 %4296 to i32*
  %4300 = load i32, i32* %4299
  %4301 = sext i32 %4300 to i64
  store i64 %4301, i64* %RDX.i1253, align 8
  store %struct.Memory* %loadMem_40c402, %struct.Memory** %MEMORY
  %loadMem_40c406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4303 = getelementptr inbounds %struct.GPR, %struct.GPR* %4302, i32 0, i32 33
  %4304 = getelementptr inbounds %struct.Reg, %struct.Reg* %4303, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %4304 to i64*
  %4305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4306 = getelementptr inbounds %struct.GPR, %struct.GPR* %4305, i32 0, i32 5
  %4307 = getelementptr inbounds %struct.Reg, %struct.Reg* %4306, i32 0, i32 0
  %RCX.i1250 = bitcast %union.anon* %4307 to i64*
  %4308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4309 = getelementptr inbounds %struct.GPR, %struct.GPR* %4308, i32 0, i32 7
  %4310 = getelementptr inbounds %struct.Reg, %struct.Reg* %4309, i32 0, i32 0
  %RDX.i1251 = bitcast %union.anon* %4310 to i64*
  %4311 = load i64, i64* %RDX.i1251
  %4312 = mul i64 %4311, 4
  %4313 = add i64 %4312, 11187184
  %4314 = load i64, i64* %PC.i1249
  %4315 = add i64 %4314, 7
  store i64 %4315, i64* %PC.i1249
  %4316 = inttoptr i64 %4313 to i32*
  %4317 = load i32, i32* %4316
  %4318 = zext i32 %4317 to i64
  store i64 %4318, i64* %RCX.i1250, align 8
  store %struct.Memory* %loadMem_40c406, %struct.Memory** %MEMORY
  %loadMem_40c40d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4320 = getelementptr inbounds %struct.GPR, %struct.GPR* %4319, i32 0, i32 33
  %4321 = getelementptr inbounds %struct.Reg, %struct.Reg* %4320, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %4321 to i64*
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4323 = getelementptr inbounds %struct.GPR, %struct.GPR* %4322, i32 0, i32 17
  %4324 = getelementptr inbounds %struct.Reg, %struct.Reg* %4323, i32 0, i32 0
  %R8D.i1247 = bitcast %union.anon* %4324 to i32*
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4326 = getelementptr inbounds %struct.GPR, %struct.GPR* %4325, i32 0, i32 15
  %4327 = getelementptr inbounds %struct.Reg, %struct.Reg* %4326, i32 0, i32 0
  %RBP.i1248 = bitcast %union.anon* %4327 to i64*
  %4328 = bitcast i32* %R8D.i1247 to i64*
  %4329 = load i64, i64* %RBP.i1248
  %4330 = sub i64 %4329, 4
  %4331 = load i64, i64* %PC.i1246
  %4332 = add i64 %4331, 4
  store i64 %4332, i64* %PC.i1246
  %4333 = inttoptr i64 %4330 to i32*
  %4334 = load i32, i32* %4333
  %4335 = zext i32 %4334 to i64
  store i64 %4335, i64* %4328, align 8
  store %struct.Memory* %loadMem_40c40d, %struct.Memory** %MEMORY
  %loadMem_40c411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4337 = getelementptr inbounds %struct.GPR, %struct.GPR* %4336, i32 0, i32 33
  %4338 = getelementptr inbounds %struct.Reg, %struct.Reg* %4337, i32 0, i32 0
  %PC.i1244 = bitcast %union.anon* %4338 to i64*
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4340 = getelementptr inbounds %struct.GPR, %struct.GPR* %4339, i32 0, i32 17
  %4341 = getelementptr inbounds %struct.Reg, %struct.Reg* %4340, i32 0, i32 0
  %R8D.i1245 = bitcast %union.anon* %4341 to i32*
  %4342 = bitcast i32* %R8D.i1245 to i64*
  %4343 = load i32, i32* %R8D.i1245
  %4344 = zext i32 %4343 to i64
  %4345 = load i64, i64* %PC.i1244
  %4346 = add i64 %4345, 4
  store i64 %4346, i64* %PC.i1244
  %4347 = add i32 20, %4343
  %4348 = zext i32 %4347 to i64
  store i64 %4348, i64* %4342, align 8
  %4349 = icmp ult i32 %4347, %4343
  %4350 = icmp ult i32 %4347, 20
  %4351 = or i1 %4349, %4350
  %4352 = zext i1 %4351 to i8
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4352, i8* %4353, align 1
  %4354 = and i32 %4347, 255
  %4355 = call i32 @llvm.ctpop.i32(i32 %4354)
  %4356 = trunc i32 %4355 to i8
  %4357 = and i8 %4356, 1
  %4358 = xor i8 %4357, 1
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4358, i8* %4359, align 1
  %4360 = xor i64 20, %4344
  %4361 = trunc i64 %4360 to i32
  %4362 = xor i32 %4361, %4347
  %4363 = lshr i32 %4362, 4
  %4364 = trunc i32 %4363 to i8
  %4365 = and i8 %4364, 1
  %4366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4365, i8* %4366, align 1
  %4367 = icmp eq i32 %4347, 0
  %4368 = zext i1 %4367 to i8
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4368, i8* %4369, align 1
  %4370 = lshr i32 %4347, 31
  %4371 = trunc i32 %4370 to i8
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4371, i8* %4372, align 1
  %4373 = lshr i32 %4343, 31
  %4374 = xor i32 %4370, %4373
  %4375 = add i32 %4374, %4370
  %4376 = icmp eq i32 %4375, 2
  %4377 = zext i1 %4376 to i8
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4377, i8* %4378, align 1
  store %struct.Memory* %loadMem_40c411, %struct.Memory** %MEMORY
  %loadMem_40c415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4380 = getelementptr inbounds %struct.GPR, %struct.GPR* %4379, i32 0, i32 33
  %4381 = getelementptr inbounds %struct.Reg, %struct.Reg* %4380, i32 0, i32 0
  %PC.i1241 = bitcast %union.anon* %4381 to i64*
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4383 = getelementptr inbounds %struct.GPR, %struct.GPR* %4382, i32 0, i32 17
  %4384 = getelementptr inbounds %struct.Reg, %struct.Reg* %4383, i32 0, i32 0
  %R8D.i1242 = bitcast %union.anon* %4384 to i32*
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4386 = getelementptr inbounds %struct.GPR, %struct.GPR* %4385, i32 0, i32 7
  %4387 = getelementptr inbounds %struct.Reg, %struct.Reg* %4386, i32 0, i32 0
  %RDX.i1243 = bitcast %union.anon* %4387 to i64*
  %4388 = load i32, i32* %R8D.i1242
  %4389 = zext i32 %4388 to i64
  %4390 = load i64, i64* %PC.i1241
  %4391 = add i64 %4390, 3
  store i64 %4391, i64* %PC.i1241
  %4392 = shl i64 %4389, 32
  %4393 = ashr exact i64 %4392, 32
  store i64 %4393, i64* %RDX.i1243, align 8
  store %struct.Memory* %loadMem_40c415, %struct.Memory** %MEMORY
  %loadMem_40c418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4395 = getelementptr inbounds %struct.GPR, %struct.GPR* %4394, i32 0, i32 33
  %4396 = getelementptr inbounds %struct.Reg, %struct.Reg* %4395, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %4396 to i64*
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4398 = getelementptr inbounds %struct.GPR, %struct.GPR* %4397, i32 0, i32 7
  %4399 = getelementptr inbounds %struct.Reg, %struct.Reg* %4398, i32 0, i32 0
  %RDX.i1240 = bitcast %union.anon* %4399 to i64*
  %4400 = load i64, i64* %RDX.i1240
  %4401 = mul i64 %4400, 4
  %4402 = add i64 %4401, 11187184
  %4403 = load i64, i64* %PC.i1239
  %4404 = add i64 %4403, 8
  store i64 %4404, i64* %PC.i1239
  %4405 = inttoptr i64 %4402 to i32*
  %4406 = load i32, i32* %4405
  %4407 = sext i32 %4406 to i64
  store i64 %4407, i64* %RDX.i1240, align 8
  store %struct.Memory* %loadMem_40c418, %struct.Memory** %MEMORY
  %loadMem_40c420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4409 = getelementptr inbounds %struct.GPR, %struct.GPR* %4408, i32 0, i32 33
  %4410 = getelementptr inbounds %struct.Reg, %struct.Reg* %4409, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %4410 to i64*
  %4411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4412 = getelementptr inbounds %struct.GPR, %struct.GPR* %4411, i32 0, i32 7
  %4413 = getelementptr inbounds %struct.Reg, %struct.Reg* %4412, i32 0, i32 0
  %RDX.i1238 = bitcast %union.anon* %4413 to i64*
  %4414 = load i64, i64* %RDX.i1238
  %4415 = load i64, i64* %PC.i1237
  %4416 = add i64 %4415, 7
  store i64 %4416, i64* %PC.i1237
  %4417 = sext i64 %4414 to i128
  %4418 = and i128 %4417, -18446744073709551616
  %4419 = zext i64 %4414 to i128
  %4420 = or i128 %4418, %4419
  %4421 = mul i128 744, %4420
  %4422 = trunc i128 %4421 to i64
  store i64 %4422, i64* %RDX.i1238, align 8
  %4423 = sext i64 %4422 to i128
  %4424 = icmp ne i128 %4423, %4421
  %4425 = zext i1 %4424 to i8
  %4426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4425, i8* %4426, align 1
  %4427 = trunc i128 %4421 to i32
  %4428 = and i32 %4427, 255
  %4429 = call i32 @llvm.ctpop.i32(i32 %4428)
  %4430 = trunc i32 %4429 to i8
  %4431 = and i8 %4430, 1
  %4432 = xor i8 %4431, 1
  %4433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4432, i8* %4433, align 1
  %4434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4434, align 1
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4435, align 1
  %4436 = lshr i64 %4422, 63
  %4437 = trunc i64 %4436 to i8
  %4438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4437, i8* %4438, align 1
  %4439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4425, i8* %4439, align 1
  store %struct.Memory* %loadMem_40c420, %struct.Memory** %MEMORY
  %loadMem_40c427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4441 = getelementptr inbounds %struct.GPR, %struct.GPR* %4440, i32 0, i32 33
  %4442 = getelementptr inbounds %struct.Reg, %struct.Reg* %4441, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %4442 to i64*
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4444 = getelementptr inbounds %struct.GPR, %struct.GPR* %4443, i32 0, i32 1
  %4445 = getelementptr inbounds %struct.Reg, %struct.Reg* %4444, i32 0, i32 0
  %RAX.i1235 = bitcast %union.anon* %4445 to i64*
  %4446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4447 = getelementptr inbounds %struct.GPR, %struct.GPR* %4446, i32 0, i32 9
  %4448 = getelementptr inbounds %struct.Reg, %struct.Reg* %4447, i32 0, i32 0
  %RSI.i1236 = bitcast %union.anon* %4448 to i64*
  %4449 = load i64, i64* %RAX.i1235
  %4450 = load i64, i64* %PC.i1234
  %4451 = add i64 %4450, 3
  store i64 %4451, i64* %PC.i1234
  store i64 %4449, i64* %RSI.i1236, align 8
  store %struct.Memory* %loadMem_40c427, %struct.Memory** %MEMORY
  %loadMem_40c42a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4453 = getelementptr inbounds %struct.GPR, %struct.GPR* %4452, i32 0, i32 33
  %4454 = getelementptr inbounds %struct.Reg, %struct.Reg* %4453, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %4454 to i64*
  %4455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4456 = getelementptr inbounds %struct.GPR, %struct.GPR* %4455, i32 0, i32 7
  %4457 = getelementptr inbounds %struct.Reg, %struct.Reg* %4456, i32 0, i32 0
  %RDX.i1232 = bitcast %union.anon* %4457 to i64*
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4459 = getelementptr inbounds %struct.GPR, %struct.GPR* %4458, i32 0, i32 9
  %4460 = getelementptr inbounds %struct.Reg, %struct.Reg* %4459, i32 0, i32 0
  %RSI.i1233 = bitcast %union.anon* %4460 to i64*
  %4461 = load i64, i64* %RSI.i1233
  %4462 = load i64, i64* %RDX.i1232
  %4463 = load i64, i64* %PC.i1231
  %4464 = add i64 %4463, 3
  store i64 %4464, i64* %PC.i1231
  %4465 = add i64 %4462, %4461
  store i64 %4465, i64* %RSI.i1233, align 8
  %4466 = icmp ult i64 %4465, %4461
  %4467 = icmp ult i64 %4465, %4462
  %4468 = or i1 %4466, %4467
  %4469 = zext i1 %4468 to i8
  %4470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4469, i8* %4470, align 1
  %4471 = trunc i64 %4465 to i32
  %4472 = and i32 %4471, 255
  %4473 = call i32 @llvm.ctpop.i32(i32 %4472)
  %4474 = trunc i32 %4473 to i8
  %4475 = and i8 %4474, 1
  %4476 = xor i8 %4475, 1
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4476, i8* %4477, align 1
  %4478 = xor i64 %4462, %4461
  %4479 = xor i64 %4478, %4465
  %4480 = lshr i64 %4479, 4
  %4481 = trunc i64 %4480 to i8
  %4482 = and i8 %4481, 1
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4482, i8* %4483, align 1
  %4484 = icmp eq i64 %4465, 0
  %4485 = zext i1 %4484 to i8
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4485, i8* %4486, align 1
  %4487 = lshr i64 %4465, 63
  %4488 = trunc i64 %4487 to i8
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4488, i8* %4489, align 1
  %4490 = lshr i64 %4461, 63
  %4491 = lshr i64 %4462, 63
  %4492 = xor i64 %4487, %4490
  %4493 = xor i64 %4487, %4491
  %4494 = add i64 %4492, %4493
  %4495 = icmp eq i64 %4494, 2
  %4496 = zext i1 %4495 to i8
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4496, i8* %4497, align 1
  store %struct.Memory* %loadMem_40c42a, %struct.Memory** %MEMORY
  %loadMem_40c42d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4499 = getelementptr inbounds %struct.GPR, %struct.GPR* %4498, i32 0, i32 33
  %4500 = getelementptr inbounds %struct.Reg, %struct.Reg* %4499, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %4500 to i64*
  %4501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4502 = getelementptr inbounds %struct.GPR, %struct.GPR* %4501, i32 0, i32 17
  %4503 = getelementptr inbounds %struct.Reg, %struct.Reg* %4502, i32 0, i32 0
  %R8D.i1229 = bitcast %union.anon* %4503 to i32*
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4505 = getelementptr inbounds %struct.GPR, %struct.GPR* %4504, i32 0, i32 15
  %4506 = getelementptr inbounds %struct.Reg, %struct.Reg* %4505, i32 0, i32 0
  %RBP.i1230 = bitcast %union.anon* %4506 to i64*
  %4507 = bitcast i32* %R8D.i1229 to i64*
  %4508 = load i64, i64* %RBP.i1230
  %4509 = sub i64 %4508, 4
  %4510 = load i64, i64* %PC.i1228
  %4511 = add i64 %4510, 4
  store i64 %4511, i64* %PC.i1228
  %4512 = inttoptr i64 %4509 to i32*
  %4513 = load i32, i32* %4512
  %4514 = zext i32 %4513 to i64
  store i64 %4514, i64* %4507, align 8
  store %struct.Memory* %loadMem_40c42d, %struct.Memory** %MEMORY
  %loadMem_40c431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4516 = getelementptr inbounds %struct.GPR, %struct.GPR* %4515, i32 0, i32 33
  %4517 = getelementptr inbounds %struct.Reg, %struct.Reg* %4516, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %4517 to i64*
  %4518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4519 = getelementptr inbounds %struct.GPR, %struct.GPR* %4518, i32 0, i32 17
  %4520 = getelementptr inbounds %struct.Reg, %struct.Reg* %4519, i32 0, i32 0
  %R8D.i1227 = bitcast %union.anon* %4520 to i32*
  %4521 = bitcast i32* %R8D.i1227 to i64*
  %4522 = load i32, i32* %R8D.i1227
  %4523 = zext i32 %4522 to i64
  %4524 = load i64, i64* %PC.i1226
  %4525 = add i64 %4524, 4
  store i64 %4525, i64* %PC.i1226
  %4526 = add i32 20, %4522
  %4527 = zext i32 %4526 to i64
  store i64 %4527, i64* %4521, align 8
  %4528 = icmp ult i32 %4526, %4522
  %4529 = icmp ult i32 %4526, 20
  %4530 = or i1 %4528, %4529
  %4531 = zext i1 %4530 to i8
  %4532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4531, i8* %4532, align 1
  %4533 = and i32 %4526, 255
  %4534 = call i32 @llvm.ctpop.i32(i32 %4533)
  %4535 = trunc i32 %4534 to i8
  %4536 = and i8 %4535, 1
  %4537 = xor i8 %4536, 1
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4537, i8* %4538, align 1
  %4539 = xor i64 20, %4523
  %4540 = trunc i64 %4539 to i32
  %4541 = xor i32 %4540, %4526
  %4542 = lshr i32 %4541, 4
  %4543 = trunc i32 %4542 to i8
  %4544 = and i8 %4543, 1
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4544, i8* %4545, align 1
  %4546 = icmp eq i32 %4526, 0
  %4547 = zext i1 %4546 to i8
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4547, i8* %4548, align 1
  %4549 = lshr i32 %4526, 31
  %4550 = trunc i32 %4549 to i8
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4550, i8* %4551, align 1
  %4552 = lshr i32 %4522, 31
  %4553 = xor i32 %4549, %4552
  %4554 = add i32 %4553, %4549
  %4555 = icmp eq i32 %4554, 2
  %4556 = zext i1 %4555 to i8
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4556, i8* %4557, align 1
  store %struct.Memory* %loadMem_40c431, %struct.Memory** %MEMORY
  %loadMem_40c435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4559 = getelementptr inbounds %struct.GPR, %struct.GPR* %4558, i32 0, i32 33
  %4560 = getelementptr inbounds %struct.Reg, %struct.Reg* %4559, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %4560 to i64*
  %4561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4562 = getelementptr inbounds %struct.GPR, %struct.GPR* %4561, i32 0, i32 17
  %4563 = getelementptr inbounds %struct.Reg, %struct.Reg* %4562, i32 0, i32 0
  %R8D.i1224 = bitcast %union.anon* %4563 to i32*
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4565 = getelementptr inbounds %struct.GPR, %struct.GPR* %4564, i32 0, i32 7
  %4566 = getelementptr inbounds %struct.Reg, %struct.Reg* %4565, i32 0, i32 0
  %RDX.i1225 = bitcast %union.anon* %4566 to i64*
  %4567 = load i32, i32* %R8D.i1224
  %4568 = zext i32 %4567 to i64
  %4569 = load i64, i64* %PC.i1223
  %4570 = add i64 %4569, 3
  store i64 %4570, i64* %PC.i1223
  %4571 = shl i64 %4568, 32
  %4572 = ashr exact i64 %4571, 32
  store i64 %4572, i64* %RDX.i1225, align 8
  store %struct.Memory* %loadMem_40c435, %struct.Memory** %MEMORY
  %loadMem_40c438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4574 = getelementptr inbounds %struct.GPR, %struct.GPR* %4573, i32 0, i32 33
  %4575 = getelementptr inbounds %struct.Reg, %struct.Reg* %4574, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %4575 to i64*
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4577 = getelementptr inbounds %struct.GPR, %struct.GPR* %4576, i32 0, i32 7
  %4578 = getelementptr inbounds %struct.Reg, %struct.Reg* %4577, i32 0, i32 0
  %RDX.i1222 = bitcast %union.anon* %4578 to i64*
  %4579 = load i64, i64* %RDX.i1222
  %4580 = mul i64 %4579, 4
  %4581 = add i64 %4580, 11187184
  %4582 = load i64, i64* %PC.i1221
  %4583 = add i64 %4582, 8
  store i64 %4583, i64* %PC.i1221
  %4584 = inttoptr i64 %4581 to i32*
  %4585 = load i32, i32* %4584
  %4586 = sext i32 %4585 to i64
  store i64 %4586, i64* %RDX.i1222, align 8
  store %struct.Memory* %loadMem_40c438, %struct.Memory** %MEMORY
  %loadMem_40c440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4588 = getelementptr inbounds %struct.GPR, %struct.GPR* %4587, i32 0, i32 33
  %4589 = getelementptr inbounds %struct.Reg, %struct.Reg* %4588, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %4589 to i64*
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4591 = getelementptr inbounds %struct.GPR, %struct.GPR* %4590, i32 0, i32 7
  %4592 = getelementptr inbounds %struct.Reg, %struct.Reg* %4591, i32 0, i32 0
  %RDX.i1220 = bitcast %union.anon* %4592 to i64*
  %4593 = load i64, i64* %RDX.i1220
  %4594 = load i64, i64* %PC.i1219
  %4595 = add i64 %4594, 7
  store i64 %4595, i64* %PC.i1219
  %4596 = sext i64 %4593 to i128
  %4597 = and i128 %4596, -18446744073709551616
  %4598 = zext i64 %4593 to i128
  %4599 = or i128 %4597, %4598
  %4600 = mul i128 744, %4599
  %4601 = trunc i128 %4600 to i64
  store i64 %4601, i64* %RDX.i1220, align 8
  %4602 = sext i64 %4601 to i128
  %4603 = icmp ne i128 %4602, %4600
  %4604 = zext i1 %4603 to i8
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4604, i8* %4605, align 1
  %4606 = trunc i128 %4600 to i32
  %4607 = and i32 %4606, 255
  %4608 = call i32 @llvm.ctpop.i32(i32 %4607)
  %4609 = trunc i32 %4608 to i8
  %4610 = and i8 %4609, 1
  %4611 = xor i8 %4610, 1
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4611, i8* %4612, align 1
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4613, align 1
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4614, align 1
  %4615 = lshr i64 %4601, 63
  %4616 = trunc i64 %4615 to i8
  %4617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4616, i8* %4617, align 1
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4604, i8* %4618, align 1
  store %struct.Memory* %loadMem_40c440, %struct.Memory** %MEMORY
  %loadMem_40c447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4620 = getelementptr inbounds %struct.GPR, %struct.GPR* %4619, i32 0, i32 33
  %4621 = getelementptr inbounds %struct.Reg, %struct.Reg* %4620, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %4621 to i64*
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4623 = getelementptr inbounds %struct.GPR, %struct.GPR* %4622, i32 0, i32 1
  %4624 = getelementptr inbounds %struct.Reg, %struct.Reg* %4623, i32 0, i32 0
  %RAX.i1217 = bitcast %union.anon* %4624 to i64*
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4626 = getelementptr inbounds %struct.GPR, %struct.GPR* %4625, i32 0, i32 11
  %4627 = getelementptr inbounds %struct.Reg, %struct.Reg* %4626, i32 0, i32 0
  %RDI.i1218 = bitcast %union.anon* %4627 to i64*
  %4628 = load i64, i64* %RAX.i1217
  %4629 = load i64, i64* %PC.i1216
  %4630 = add i64 %4629, 3
  store i64 %4630, i64* %PC.i1216
  store i64 %4628, i64* %RDI.i1218, align 8
  store %struct.Memory* %loadMem_40c447, %struct.Memory** %MEMORY
  %loadMem_40c44a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4632 = getelementptr inbounds %struct.GPR, %struct.GPR* %4631, i32 0, i32 33
  %4633 = getelementptr inbounds %struct.Reg, %struct.Reg* %4632, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %4633 to i64*
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4635 = getelementptr inbounds %struct.GPR, %struct.GPR* %4634, i32 0, i32 7
  %4636 = getelementptr inbounds %struct.Reg, %struct.Reg* %4635, i32 0, i32 0
  %RDX.i1214 = bitcast %union.anon* %4636 to i64*
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4638 = getelementptr inbounds %struct.GPR, %struct.GPR* %4637, i32 0, i32 11
  %4639 = getelementptr inbounds %struct.Reg, %struct.Reg* %4638, i32 0, i32 0
  %RDI.i1215 = bitcast %union.anon* %4639 to i64*
  %4640 = load i64, i64* %RDI.i1215
  %4641 = load i64, i64* %RDX.i1214
  %4642 = load i64, i64* %PC.i1213
  %4643 = add i64 %4642, 3
  store i64 %4643, i64* %PC.i1213
  %4644 = add i64 %4641, %4640
  store i64 %4644, i64* %RDI.i1215, align 8
  %4645 = icmp ult i64 %4644, %4640
  %4646 = icmp ult i64 %4644, %4641
  %4647 = or i1 %4645, %4646
  %4648 = zext i1 %4647 to i8
  %4649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4648, i8* %4649, align 1
  %4650 = trunc i64 %4644 to i32
  %4651 = and i32 %4650, 255
  %4652 = call i32 @llvm.ctpop.i32(i32 %4651)
  %4653 = trunc i32 %4652 to i8
  %4654 = and i8 %4653, 1
  %4655 = xor i8 %4654, 1
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4655, i8* %4656, align 1
  %4657 = xor i64 %4641, %4640
  %4658 = xor i64 %4657, %4644
  %4659 = lshr i64 %4658, 4
  %4660 = trunc i64 %4659 to i8
  %4661 = and i8 %4660, 1
  %4662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4661, i8* %4662, align 1
  %4663 = icmp eq i64 %4644, 0
  %4664 = zext i1 %4663 to i8
  %4665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4664, i8* %4665, align 1
  %4666 = lshr i64 %4644, 63
  %4667 = trunc i64 %4666 to i8
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4667, i8* %4668, align 1
  %4669 = lshr i64 %4640, 63
  %4670 = lshr i64 %4641, 63
  %4671 = xor i64 %4666, %4669
  %4672 = xor i64 %4666, %4670
  %4673 = add i64 %4671, %4672
  %4674 = icmp eq i64 %4673, 2
  %4675 = zext i1 %4674 to i8
  %4676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4675, i8* %4676, align 1
  store %struct.Memory* %loadMem_40c44a, %struct.Memory** %MEMORY
  %loadMem_40c44d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4678 = getelementptr inbounds %struct.GPR, %struct.GPR* %4677, i32 0, i32 33
  %4679 = getelementptr inbounds %struct.Reg, %struct.Reg* %4678, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %4679 to i64*
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4681 = getelementptr inbounds %struct.GPR, %struct.GPR* %4680, i32 0, i32 17
  %4682 = getelementptr inbounds %struct.Reg, %struct.Reg* %4681, i32 0, i32 0
  %R8D.i1211 = bitcast %union.anon* %4682 to i32*
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4684 = getelementptr inbounds %struct.GPR, %struct.GPR* %4683, i32 0, i32 11
  %4685 = getelementptr inbounds %struct.Reg, %struct.Reg* %4684, i32 0, i32 0
  %RDI.i1212 = bitcast %union.anon* %4685 to i64*
  %4686 = bitcast i32* %R8D.i1211 to i64*
  %4687 = load i64, i64* %RDI.i1212
  %4688 = add i64 %4687, 96
  %4689 = load i64, i64* %PC.i1210
  %4690 = add i64 %4689, 4
  store i64 %4690, i64* %PC.i1210
  %4691 = inttoptr i64 %4688 to i32*
  %4692 = load i32, i32* %4691
  %4693 = zext i32 %4692 to i64
  store i64 %4693, i64* %4686, align 8
  store %struct.Memory* %loadMem_40c44d, %struct.Memory** %MEMORY
  %loadMem_40c451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4695 = getelementptr inbounds %struct.GPR, %struct.GPR* %4694, i32 0, i32 33
  %4696 = getelementptr inbounds %struct.Reg, %struct.Reg* %4695, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %4696 to i64*
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4698 = getelementptr inbounds %struct.GPR, %struct.GPR* %4697, i32 0, i32 17
  %4699 = getelementptr inbounds %struct.Reg, %struct.Reg* %4698, i32 0, i32 0
  %R8D.i1208 = bitcast %union.anon* %4699 to i32*
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4701 = getelementptr inbounds %struct.GPR, %struct.GPR* %4700, i32 0, i32 19
  %4702 = getelementptr inbounds %struct.Reg, %struct.Reg* %4701, i32 0, i32 0
  %R9D.i1209 = bitcast %union.anon* %4702 to i32*
  %4703 = bitcast i32* %R9D.i1209 to i64*
  %4704 = load i32, i32* %R8D.i1208
  %4705 = zext i32 %4704 to i64
  %4706 = load i64, i64* %PC.i1207
  %4707 = add i64 %4706, 3
  store i64 %4707, i64* %PC.i1207
  %4708 = and i64 %4705, 4294967295
  store i64 %4708, i64* %4703, align 8
  store %struct.Memory* %loadMem_40c451, %struct.Memory** %MEMORY
  %loadMem_40c454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4710 = getelementptr inbounds %struct.GPR, %struct.GPR* %4709, i32 0, i32 33
  %4711 = getelementptr inbounds %struct.Reg, %struct.Reg* %4710, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %4711 to i64*
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4713 = getelementptr inbounds %struct.GPR, %struct.GPR* %4712, i32 0, i32 19
  %4714 = getelementptr inbounds %struct.Reg, %struct.Reg* %4713, i32 0, i32 0
  %R9D.i1206 = bitcast %union.anon* %4714 to i32*
  %4715 = bitcast i32* %R9D.i1206 to i64*
  %4716 = load i32, i32* %R9D.i1206
  %4717 = zext i32 %4716 to i64
  %4718 = load i64, i64* %PC.i1205
  %4719 = add i64 %4718, 4
  store i64 %4719, i64* %PC.i1205
  %4720 = add i32 1, %4716
  %4721 = zext i32 %4720 to i64
  store i64 %4721, i64* %4715, align 8
  %4722 = icmp ult i32 %4720, %4716
  %4723 = icmp ult i32 %4720, 1
  %4724 = or i1 %4722, %4723
  %4725 = zext i1 %4724 to i8
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4725, i8* %4726, align 1
  %4727 = and i32 %4720, 255
  %4728 = call i32 @llvm.ctpop.i32(i32 %4727)
  %4729 = trunc i32 %4728 to i8
  %4730 = and i8 %4729, 1
  %4731 = xor i8 %4730, 1
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4731, i8* %4732, align 1
  %4733 = xor i64 1, %4717
  %4734 = trunc i64 %4733 to i32
  %4735 = xor i32 %4734, %4720
  %4736 = lshr i32 %4735, 4
  %4737 = trunc i32 %4736 to i8
  %4738 = and i8 %4737, 1
  %4739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4738, i8* %4739, align 1
  %4740 = icmp eq i32 %4720, 0
  %4741 = zext i1 %4740 to i8
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4741, i8* %4742, align 1
  %4743 = lshr i32 %4720, 31
  %4744 = trunc i32 %4743 to i8
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4744, i8* %4745, align 1
  %4746 = lshr i32 %4716, 31
  %4747 = xor i32 %4743, %4746
  %4748 = add i32 %4747, %4743
  %4749 = icmp eq i32 %4748, 2
  %4750 = zext i1 %4749 to i8
  %4751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4750, i8* %4751, align 1
  store %struct.Memory* %loadMem_40c454, %struct.Memory** %MEMORY
  %loadMem_40c458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4753 = getelementptr inbounds %struct.GPR, %struct.GPR* %4752, i32 0, i32 33
  %4754 = getelementptr inbounds %struct.Reg, %struct.Reg* %4753, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %4754 to i64*
  %4755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4756 = getelementptr inbounds %struct.GPR, %struct.GPR* %4755, i32 0, i32 19
  %4757 = getelementptr inbounds %struct.Reg, %struct.Reg* %4756, i32 0, i32 0
  %R9D.i1203 = bitcast %union.anon* %4757 to i32*
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4759 = getelementptr inbounds %struct.GPR, %struct.GPR* %4758, i32 0, i32 11
  %4760 = getelementptr inbounds %struct.Reg, %struct.Reg* %4759, i32 0, i32 0
  %RDI.i1204 = bitcast %union.anon* %4760 to i64*
  %4761 = load i64, i64* %RDI.i1204
  %4762 = add i64 %4761, 96
  %4763 = load i32, i32* %R9D.i1203
  %4764 = zext i32 %4763 to i64
  %4765 = load i64, i64* %PC.i1202
  %4766 = add i64 %4765, 4
  store i64 %4766, i64* %PC.i1202
  %4767 = inttoptr i64 %4762 to i32*
  store i32 %4763, i32* %4767
  store %struct.Memory* %loadMem_40c458, %struct.Memory** %MEMORY
  %loadMem_40c45c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4769 = getelementptr inbounds %struct.GPR, %struct.GPR* %4768, i32 0, i32 33
  %4770 = getelementptr inbounds %struct.Reg, %struct.Reg* %4769, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %4770 to i64*
  %4771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4772 = getelementptr inbounds %struct.GPR, %struct.GPR* %4771, i32 0, i32 17
  %4773 = getelementptr inbounds %struct.Reg, %struct.Reg* %4772, i32 0, i32 0
  %R8D.i1200 = bitcast %union.anon* %4773 to i32*
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4775 = getelementptr inbounds %struct.GPR, %struct.GPR* %4774, i32 0, i32 7
  %4776 = getelementptr inbounds %struct.Reg, %struct.Reg* %4775, i32 0, i32 0
  %RDX.i1201 = bitcast %union.anon* %4776 to i64*
  %4777 = load i32, i32* %R8D.i1200
  %4778 = zext i32 %4777 to i64
  %4779 = load i64, i64* %PC.i1199
  %4780 = add i64 %4779, 3
  store i64 %4780, i64* %PC.i1199
  %4781 = shl i64 %4778, 32
  %4782 = ashr exact i64 %4781, 32
  store i64 %4782, i64* %RDX.i1201, align 8
  store %struct.Memory* %loadMem_40c45c, %struct.Memory** %MEMORY
  %loadMem_40c45f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4784 = getelementptr inbounds %struct.GPR, %struct.GPR* %4783, i32 0, i32 33
  %4785 = getelementptr inbounds %struct.Reg, %struct.Reg* %4784, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %4785 to i64*
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4787 = getelementptr inbounds %struct.GPR, %struct.GPR* %4786, i32 0, i32 5
  %4788 = getelementptr inbounds %struct.Reg, %struct.Reg* %4787, i32 0, i32 0
  %ECX.i1196 = bitcast %union.anon* %4788 to i32*
  %4789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4790 = getelementptr inbounds %struct.GPR, %struct.GPR* %4789, i32 0, i32 7
  %4791 = getelementptr inbounds %struct.Reg, %struct.Reg* %4790, i32 0, i32 0
  %RDX.i1197 = bitcast %union.anon* %4791 to i64*
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4793 = getelementptr inbounds %struct.GPR, %struct.GPR* %4792, i32 0, i32 9
  %4794 = getelementptr inbounds %struct.Reg, %struct.Reg* %4793, i32 0, i32 0
  %RSI.i1198 = bitcast %union.anon* %4794 to i64*
  %4795 = load i64, i64* %RSI.i1198
  %4796 = load i64, i64* %RDX.i1197
  %4797 = mul i64 %4796, 4
  %4798 = add i64 %4795, 100
  %4799 = add i64 %4798, %4797
  %4800 = load i32, i32* %ECX.i1196
  %4801 = zext i32 %4800 to i64
  %4802 = load i64, i64* %PC.i1195
  %4803 = add i64 %4802, 4
  store i64 %4803, i64* %PC.i1195
  %4804 = inttoptr i64 %4799 to i32*
  store i32 %4800, i32* %4804
  store %struct.Memory* %loadMem_40c45f, %struct.Memory** %MEMORY
  %loadMem_40c463 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4806 = getelementptr inbounds %struct.GPR, %struct.GPR* %4805, i32 0, i32 33
  %4807 = getelementptr inbounds %struct.Reg, %struct.Reg* %4806, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %4807 to i64*
  %4808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4809 = getelementptr inbounds %struct.GPR, %struct.GPR* %4808, i32 0, i32 5
  %4810 = getelementptr inbounds %struct.Reg, %struct.Reg* %4809, i32 0, i32 0
  %RCX.i1194 = bitcast %union.anon* %4810 to i64*
  %4811 = load i64, i64* %PC.i1193
  %4812 = add i64 %4811, 7
  store i64 %4812, i64* %PC.i1193
  %4813 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %4814 = zext i32 %4813 to i64
  store i64 %4814, i64* %RCX.i1194, align 8
  store %struct.Memory* %loadMem_40c463, %struct.Memory** %MEMORY
  %loadMem_40c46a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4816 = getelementptr inbounds %struct.GPR, %struct.GPR* %4815, i32 0, i32 33
  %4817 = getelementptr inbounds %struct.Reg, %struct.Reg* %4816, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %4817 to i64*
  %4818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4819 = getelementptr inbounds %struct.GPR, %struct.GPR* %4818, i32 0, i32 17
  %4820 = getelementptr inbounds %struct.Reg, %struct.Reg* %4819, i32 0, i32 0
  %R8D.i1191 = bitcast %union.anon* %4820 to i32*
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4822 = getelementptr inbounds %struct.GPR, %struct.GPR* %4821, i32 0, i32 15
  %4823 = getelementptr inbounds %struct.Reg, %struct.Reg* %4822, i32 0, i32 0
  %RBP.i1192 = bitcast %union.anon* %4823 to i64*
  %4824 = bitcast i32* %R8D.i1191 to i64*
  %4825 = load i64, i64* %RBP.i1192
  %4826 = sub i64 %4825, 4
  %4827 = load i64, i64* %PC.i1190
  %4828 = add i64 %4827, 4
  store i64 %4828, i64* %PC.i1190
  %4829 = inttoptr i64 %4826 to i32*
  %4830 = load i32, i32* %4829
  %4831 = zext i32 %4830 to i64
  store i64 %4831, i64* %4824, align 8
  store %struct.Memory* %loadMem_40c46a, %struct.Memory** %MEMORY
  %loadMem_40c46e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4833 = getelementptr inbounds %struct.GPR, %struct.GPR* %4832, i32 0, i32 33
  %4834 = getelementptr inbounds %struct.Reg, %struct.Reg* %4833, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %4834 to i64*
  %4835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4836 = getelementptr inbounds %struct.GPR, %struct.GPR* %4835, i32 0, i32 17
  %4837 = getelementptr inbounds %struct.Reg, %struct.Reg* %4836, i32 0, i32 0
  %R8D.i1189 = bitcast %union.anon* %4837 to i32*
  %4838 = bitcast i32* %R8D.i1189 to i64*
  %4839 = load i32, i32* %R8D.i1189
  %4840 = zext i32 %4839 to i64
  %4841 = load i64, i64* %PC.i1188
  %4842 = add i64 %4841, 4
  store i64 %4842, i64* %PC.i1188
  %4843 = add i32 20, %4839
  %4844 = zext i32 %4843 to i64
  store i64 %4844, i64* %4838, align 8
  %4845 = icmp ult i32 %4843, %4839
  %4846 = icmp ult i32 %4843, 20
  %4847 = or i1 %4845, %4846
  %4848 = zext i1 %4847 to i8
  %4849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4848, i8* %4849, align 1
  %4850 = and i32 %4843, 255
  %4851 = call i32 @llvm.ctpop.i32(i32 %4850)
  %4852 = trunc i32 %4851 to i8
  %4853 = and i8 %4852, 1
  %4854 = xor i8 %4853, 1
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4854, i8* %4855, align 1
  %4856 = xor i64 20, %4840
  %4857 = trunc i64 %4856 to i32
  %4858 = xor i32 %4857, %4843
  %4859 = lshr i32 %4858, 4
  %4860 = trunc i32 %4859 to i8
  %4861 = and i8 %4860, 1
  %4862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4861, i8* %4862, align 1
  %4863 = icmp eq i32 %4843, 0
  %4864 = zext i1 %4863 to i8
  %4865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4864, i8* %4865, align 1
  %4866 = lshr i32 %4843, 31
  %4867 = trunc i32 %4866 to i8
  %4868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4867, i8* %4868, align 1
  %4869 = lshr i32 %4839, 31
  %4870 = xor i32 %4866, %4869
  %4871 = add i32 %4870, %4866
  %4872 = icmp eq i32 %4871, 2
  %4873 = zext i1 %4872 to i8
  %4874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4873, i8* %4874, align 1
  store %struct.Memory* %loadMem_40c46e, %struct.Memory** %MEMORY
  %loadMem_40c472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4876 = getelementptr inbounds %struct.GPR, %struct.GPR* %4875, i32 0, i32 33
  %4877 = getelementptr inbounds %struct.Reg, %struct.Reg* %4876, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %4877 to i64*
  %4878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4879 = getelementptr inbounds %struct.GPR, %struct.GPR* %4878, i32 0, i32 17
  %4880 = getelementptr inbounds %struct.Reg, %struct.Reg* %4879, i32 0, i32 0
  %R8D.i1186 = bitcast %union.anon* %4880 to i32*
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4882 = getelementptr inbounds %struct.GPR, %struct.GPR* %4881, i32 0, i32 7
  %4883 = getelementptr inbounds %struct.Reg, %struct.Reg* %4882, i32 0, i32 0
  %RDX.i1187 = bitcast %union.anon* %4883 to i64*
  %4884 = load i32, i32* %R8D.i1186
  %4885 = zext i32 %4884 to i64
  %4886 = load i64, i64* %PC.i1185
  %4887 = add i64 %4886, 3
  store i64 %4887, i64* %PC.i1185
  %4888 = shl i64 %4885, 32
  %4889 = ashr exact i64 %4888, 32
  store i64 %4889, i64* %RDX.i1187, align 8
  store %struct.Memory* %loadMem_40c472, %struct.Memory** %MEMORY
  %loadMem_40c475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4891 = getelementptr inbounds %struct.GPR, %struct.GPR* %4890, i32 0, i32 33
  %4892 = getelementptr inbounds %struct.Reg, %struct.Reg* %4891, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %4892 to i64*
  %4893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4894 = getelementptr inbounds %struct.GPR, %struct.GPR* %4893, i32 0, i32 7
  %4895 = getelementptr inbounds %struct.Reg, %struct.Reg* %4894, i32 0, i32 0
  %RDX.i1184 = bitcast %union.anon* %4895 to i64*
  %4896 = load i64, i64* %RDX.i1184
  %4897 = mul i64 %4896, 4
  %4898 = add i64 %4897, 11187184
  %4899 = load i64, i64* %PC.i1183
  %4900 = add i64 %4899, 8
  store i64 %4900, i64* %PC.i1183
  %4901 = inttoptr i64 %4898 to i32*
  %4902 = load i32, i32* %4901
  %4903 = sext i32 %4902 to i64
  store i64 %4903, i64* %RDX.i1184, align 8
  store %struct.Memory* %loadMem_40c475, %struct.Memory** %MEMORY
  %loadMem_40c47d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4905 = getelementptr inbounds %struct.GPR, %struct.GPR* %4904, i32 0, i32 33
  %4906 = getelementptr inbounds %struct.Reg, %struct.Reg* %4905, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %4906 to i64*
  %4907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4908 = getelementptr inbounds %struct.GPR, %struct.GPR* %4907, i32 0, i32 7
  %4909 = getelementptr inbounds %struct.Reg, %struct.Reg* %4908, i32 0, i32 0
  %RDX.i1182 = bitcast %union.anon* %4909 to i64*
  %4910 = load i64, i64* %RDX.i1182
  %4911 = load i64, i64* %PC.i1181
  %4912 = add i64 %4911, 7
  store i64 %4912, i64* %PC.i1181
  %4913 = sext i64 %4910 to i128
  %4914 = and i128 %4913, -18446744073709551616
  %4915 = zext i64 %4910 to i128
  %4916 = or i128 %4914, %4915
  %4917 = mul i128 744, %4916
  %4918 = trunc i128 %4917 to i64
  store i64 %4918, i64* %RDX.i1182, align 8
  %4919 = sext i64 %4918 to i128
  %4920 = icmp ne i128 %4919, %4917
  %4921 = zext i1 %4920 to i8
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4921, i8* %4922, align 1
  %4923 = trunc i128 %4917 to i32
  %4924 = and i32 %4923, 255
  %4925 = call i32 @llvm.ctpop.i32(i32 %4924)
  %4926 = trunc i32 %4925 to i8
  %4927 = and i8 %4926, 1
  %4928 = xor i8 %4927, 1
  %4929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4928, i8* %4929, align 1
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4930, align 1
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4931, align 1
  %4932 = lshr i64 %4918, 63
  %4933 = trunc i64 %4932 to i8
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4933, i8* %4934, align 1
  %4935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4921, i8* %4935, align 1
  store %struct.Memory* %loadMem_40c47d, %struct.Memory** %MEMORY
  %loadMem_40c484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4937 = getelementptr inbounds %struct.GPR, %struct.GPR* %4936, i32 0, i32 33
  %4938 = getelementptr inbounds %struct.Reg, %struct.Reg* %4937, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %4938 to i64*
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4940 = getelementptr inbounds %struct.GPR, %struct.GPR* %4939, i32 0, i32 1
  %4941 = getelementptr inbounds %struct.Reg, %struct.Reg* %4940, i32 0, i32 0
  %RAX.i1179 = bitcast %union.anon* %4941 to i64*
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4943 = getelementptr inbounds %struct.GPR, %struct.GPR* %4942, i32 0, i32 7
  %4944 = getelementptr inbounds %struct.Reg, %struct.Reg* %4943, i32 0, i32 0
  %RDX.i1180 = bitcast %union.anon* %4944 to i64*
  %4945 = load i64, i64* %RAX.i1179
  %4946 = load i64, i64* %RDX.i1180
  %4947 = load i64, i64* %PC.i1178
  %4948 = add i64 %4947, 3
  store i64 %4948, i64* %PC.i1178
  %4949 = add i64 %4946, %4945
  store i64 %4949, i64* %RAX.i1179, align 8
  %4950 = icmp ult i64 %4949, %4945
  %4951 = icmp ult i64 %4949, %4946
  %4952 = or i1 %4950, %4951
  %4953 = zext i1 %4952 to i8
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4953, i8* %4954, align 1
  %4955 = trunc i64 %4949 to i32
  %4956 = and i32 %4955, 255
  %4957 = call i32 @llvm.ctpop.i32(i32 %4956)
  %4958 = trunc i32 %4957 to i8
  %4959 = and i8 %4958, 1
  %4960 = xor i8 %4959, 1
  %4961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4960, i8* %4961, align 1
  %4962 = xor i64 %4946, %4945
  %4963 = xor i64 %4962, %4949
  %4964 = lshr i64 %4963, 4
  %4965 = trunc i64 %4964 to i8
  %4966 = and i8 %4965, 1
  %4967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4966, i8* %4967, align 1
  %4968 = icmp eq i64 %4949, 0
  %4969 = zext i1 %4968 to i8
  %4970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4969, i8* %4970, align 1
  %4971 = lshr i64 %4949, 63
  %4972 = trunc i64 %4971 to i8
  %4973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4972, i8* %4973, align 1
  %4974 = lshr i64 %4945, 63
  %4975 = lshr i64 %4946, 63
  %4976 = xor i64 %4971, %4974
  %4977 = xor i64 %4971, %4975
  %4978 = add i64 %4976, %4977
  %4979 = icmp eq i64 %4978, 2
  %4980 = zext i1 %4979 to i8
  %4981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4980, i8* %4981, align 1
  store %struct.Memory* %loadMem_40c484, %struct.Memory** %MEMORY
  %loadMem_40c487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4983 = getelementptr inbounds %struct.GPR, %struct.GPR* %4982, i32 0, i32 33
  %4984 = getelementptr inbounds %struct.Reg, %struct.Reg* %4983, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %4984 to i64*
  %4985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4986 = getelementptr inbounds %struct.GPR, %struct.GPR* %4985, i32 0, i32 5
  %4987 = getelementptr inbounds %struct.Reg, %struct.Reg* %4986, i32 0, i32 0
  %ECX.i1176 = bitcast %union.anon* %4987 to i32*
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4989 = getelementptr inbounds %struct.GPR, %struct.GPR* %4988, i32 0, i32 1
  %4990 = getelementptr inbounds %struct.Reg, %struct.Reg* %4989, i32 0, i32 0
  %RAX.i1177 = bitcast %union.anon* %4990 to i64*
  %4991 = load i64, i64* %RAX.i1177
  %4992 = add i64 %4991, 740
  %4993 = load i32, i32* %ECX.i1176
  %4994 = zext i32 %4993 to i64
  %4995 = load i64, i64* %PC.i1175
  %4996 = add i64 %4995, 6
  store i64 %4996, i64* %PC.i1175
  %4997 = inttoptr i64 %4992 to i32*
  store i32 %4993, i32* %4997
  store %struct.Memory* %loadMem_40c487, %struct.Memory** %MEMORY
  %loadMem_40c48d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4999 = getelementptr inbounds %struct.GPR, %struct.GPR* %4998, i32 0, i32 33
  %5000 = getelementptr inbounds %struct.Reg, %struct.Reg* %4999, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %5000 to i64*
  %5001 = load i64, i64* %PC.i1174
  %5002 = add i64 %5001, 108
  %5003 = load i64, i64* %PC.i1174
  %5004 = add i64 %5003, 5
  store i64 %5004, i64* %PC.i1174
  %5005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5002, i64* %5005, align 8
  store %struct.Memory* %loadMem_40c48d, %struct.Memory** %MEMORY
  br label %block_.L_40c4f9

block_.L_40c492:                                  ; preds = %block_40c310, %block_.L_40c2f6
  %loadMem_40c492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5007 = getelementptr inbounds %struct.GPR, %struct.GPR* %5006, i32 0, i32 33
  %5008 = getelementptr inbounds %struct.Reg, %struct.Reg* %5007, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %5008 to i64*
  %5009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5010 = getelementptr inbounds %struct.GPR, %struct.GPR* %5009, i32 0, i32 1
  %5011 = getelementptr inbounds %struct.Reg, %struct.Reg* %5010, i32 0, i32 0
  %RAX.i1172 = bitcast %union.anon* %5011 to i64*
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5013 = getelementptr inbounds %struct.GPR, %struct.GPR* %5012, i32 0, i32 15
  %5014 = getelementptr inbounds %struct.Reg, %struct.Reg* %5013, i32 0, i32 0
  %RBP.i1173 = bitcast %union.anon* %5014 to i64*
  %5015 = load i64, i64* %RBP.i1173
  %5016 = sub i64 %5015, 4
  %5017 = load i64, i64* %PC.i1171
  %5018 = add i64 %5017, 3
  store i64 %5018, i64* %PC.i1171
  %5019 = inttoptr i64 %5016 to i32*
  %5020 = load i32, i32* %5019
  %5021 = zext i32 %5020 to i64
  store i64 %5021, i64* %RAX.i1172, align 8
  store %struct.Memory* %loadMem_40c492, %struct.Memory** %MEMORY
  %loadMem_40c495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 33
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %5024 to i64*
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5026 = getelementptr inbounds %struct.GPR, %struct.GPR* %5025, i32 0, i32 1
  %5027 = getelementptr inbounds %struct.Reg, %struct.Reg* %5026, i32 0, i32 0
  %RAX.i1170 = bitcast %union.anon* %5027 to i64*
  %5028 = load i64, i64* %RAX.i1170
  %5029 = load i64, i64* %PC.i1169
  %5030 = add i64 %5029, 3
  store i64 %5030, i64* %PC.i1169
  %5031 = trunc i64 %5028 to i32
  %5032 = add i32 20, %5031
  %5033 = zext i32 %5032 to i64
  store i64 %5033, i64* %RAX.i1170, align 8
  %5034 = icmp ult i32 %5032, %5031
  %5035 = icmp ult i32 %5032, 20
  %5036 = or i1 %5034, %5035
  %5037 = zext i1 %5036 to i8
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5037, i8* %5038, align 1
  %5039 = and i32 %5032, 255
  %5040 = call i32 @llvm.ctpop.i32(i32 %5039)
  %5041 = trunc i32 %5040 to i8
  %5042 = and i8 %5041, 1
  %5043 = xor i8 %5042, 1
  %5044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5043, i8* %5044, align 1
  %5045 = xor i64 20, %5028
  %5046 = trunc i64 %5045 to i32
  %5047 = xor i32 %5046, %5032
  %5048 = lshr i32 %5047, 4
  %5049 = trunc i32 %5048 to i8
  %5050 = and i8 %5049, 1
  %5051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5050, i8* %5051, align 1
  %5052 = icmp eq i32 %5032, 0
  %5053 = zext i1 %5052 to i8
  %5054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5053, i8* %5054, align 1
  %5055 = lshr i32 %5032, 31
  %5056 = trunc i32 %5055 to i8
  %5057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5056, i8* %5057, align 1
  %5058 = lshr i32 %5031, 31
  %5059 = xor i32 %5055, %5058
  %5060 = add i32 %5059, %5055
  %5061 = icmp eq i32 %5060, 2
  %5062 = zext i1 %5061 to i8
  %5063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5062, i8* %5063, align 1
  store %struct.Memory* %loadMem_40c495, %struct.Memory** %MEMORY
  %loadMem_40c498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5065 = getelementptr inbounds %struct.GPR, %struct.GPR* %5064, i32 0, i32 33
  %5066 = getelementptr inbounds %struct.Reg, %struct.Reg* %5065, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %5066 to i64*
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5068 = getelementptr inbounds %struct.GPR, %struct.GPR* %5067, i32 0, i32 1
  %5069 = getelementptr inbounds %struct.Reg, %struct.Reg* %5068, i32 0, i32 0
  %EAX.i1167 = bitcast %union.anon* %5069 to i32*
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5071 = getelementptr inbounds %struct.GPR, %struct.GPR* %5070, i32 0, i32 5
  %5072 = getelementptr inbounds %struct.Reg, %struct.Reg* %5071, i32 0, i32 0
  %RCX.i1168 = bitcast %union.anon* %5072 to i64*
  %5073 = load i32, i32* %EAX.i1167
  %5074 = zext i32 %5073 to i64
  %5075 = load i64, i64* %PC.i1166
  %5076 = add i64 %5075, 3
  store i64 %5076, i64* %PC.i1166
  %5077 = shl i64 %5074, 32
  %5078 = ashr exact i64 %5077, 32
  store i64 %5078, i64* %RCX.i1168, align 8
  store %struct.Memory* %loadMem_40c498, %struct.Memory** %MEMORY
  %loadMem_40c49b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5080 = getelementptr inbounds %struct.GPR, %struct.GPR* %5079, i32 0, i32 33
  %5081 = getelementptr inbounds %struct.Reg, %struct.Reg* %5080, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %5081 to i64*
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5083 = getelementptr inbounds %struct.GPR, %struct.GPR* %5082, i32 0, i32 1
  %5084 = getelementptr inbounds %struct.Reg, %struct.Reg* %5083, i32 0, i32 0
  %RAX.i1164 = bitcast %union.anon* %5084 to i64*
  %5085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5086 = getelementptr inbounds %struct.GPR, %struct.GPR* %5085, i32 0, i32 5
  %5087 = getelementptr inbounds %struct.Reg, %struct.Reg* %5086, i32 0, i32 0
  %RCX.i1165 = bitcast %union.anon* %5087 to i64*
  %5088 = load i64, i64* %RCX.i1165
  %5089 = add i64 %5088, 12099168
  %5090 = load i64, i64* %PC.i1163
  %5091 = add i64 %5090, 8
  store i64 %5091, i64* %PC.i1163
  %5092 = inttoptr i64 %5089 to i8*
  %5093 = load i8, i8* %5092
  %5094 = zext i8 %5093 to i64
  store i64 %5094, i64* %RAX.i1164, align 8
  store %struct.Memory* %loadMem_40c49b, %struct.Memory** %MEMORY
  %loadMem_40c4a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5096 = getelementptr inbounds %struct.GPR, %struct.GPR* %5095, i32 0, i32 33
  %5097 = getelementptr inbounds %struct.Reg, %struct.Reg* %5096, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %5097 to i64*
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5099 = getelementptr inbounds %struct.GPR, %struct.GPR* %5098, i32 0, i32 1
  %5100 = getelementptr inbounds %struct.Reg, %struct.Reg* %5099, i32 0, i32 0
  %EAX.i1161 = bitcast %union.anon* %5100 to i32*
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5102 = getelementptr inbounds %struct.GPR, %struct.GPR* %5101, i32 0, i32 15
  %5103 = getelementptr inbounds %struct.Reg, %struct.Reg* %5102, i32 0, i32 0
  %RBP.i1162 = bitcast %union.anon* %5103 to i64*
  %5104 = load i32, i32* %EAX.i1161
  %5105 = zext i32 %5104 to i64
  %5106 = load i64, i64* %RBP.i1162
  %5107 = sub i64 %5106, 12
  %5108 = load i64, i64* %PC.i1160
  %5109 = add i64 %5108, 3
  store i64 %5109, i64* %PC.i1160
  %5110 = inttoptr i64 %5107 to i32*
  %5111 = load i32, i32* %5110
  %5112 = sub i32 %5104, %5111
  %5113 = icmp ult i32 %5104, %5111
  %5114 = zext i1 %5113 to i8
  %5115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5114, i8* %5115, align 1
  %5116 = and i32 %5112, 255
  %5117 = call i32 @llvm.ctpop.i32(i32 %5116)
  %5118 = trunc i32 %5117 to i8
  %5119 = and i8 %5118, 1
  %5120 = xor i8 %5119, 1
  %5121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5120, i8* %5121, align 1
  %5122 = xor i32 %5111, %5104
  %5123 = xor i32 %5122, %5112
  %5124 = lshr i32 %5123, 4
  %5125 = trunc i32 %5124 to i8
  %5126 = and i8 %5125, 1
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5126, i8* %5127, align 1
  %5128 = icmp eq i32 %5112, 0
  %5129 = zext i1 %5128 to i8
  %5130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5129, i8* %5130, align 1
  %5131 = lshr i32 %5112, 31
  %5132 = trunc i32 %5131 to i8
  %5133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5132, i8* %5133, align 1
  %5134 = lshr i32 %5104, 31
  %5135 = lshr i32 %5111, 31
  %5136 = xor i32 %5135, %5134
  %5137 = xor i32 %5131, %5134
  %5138 = add i32 %5137, %5136
  %5139 = icmp eq i32 %5138, 2
  %5140 = zext i1 %5139 to i8
  %5141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5140, i8* %5141, align 1
  store %struct.Memory* %loadMem_40c4a3, %struct.Memory** %MEMORY
  %loadMem_40c4a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5143 = getelementptr inbounds %struct.GPR, %struct.GPR* %5142, i32 0, i32 33
  %5144 = getelementptr inbounds %struct.Reg, %struct.Reg* %5143, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %5144 to i64*
  %5145 = load i64, i64* %PC.i1159
  %5146 = add i64 %5145, 78
  %5147 = load i64, i64* %PC.i1159
  %5148 = add i64 %5147, 6
  %5149 = load i64, i64* %PC.i1159
  %5150 = add i64 %5149, 6
  store i64 %5150, i64* %PC.i1159
  %5151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5152 = load i8, i8* %5151, align 1
  %5153 = icmp eq i8 %5152, 0
  %5154 = zext i1 %5153 to i8
  store i8 %5154, i8* %BRANCH_TAKEN, align 1
  %5155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5156 = select i1 %5153, i64 %5146, i64 %5148
  store i64 %5156, i64* %5155, align 8
  store %struct.Memory* %loadMem_40c4a6, %struct.Memory** %MEMORY
  %loadBr_40c4a6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c4a6 = icmp eq i8 %loadBr_40c4a6, 1
  br i1 %cmpBr_40c4a6, label %block_.L_40c4f4, label %block_40c4ac

block_40c4ac:                                     ; preds = %block_.L_40c492
  %loadMem_40c4ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %5157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5158 = getelementptr inbounds %struct.GPR, %struct.GPR* %5157, i32 0, i32 33
  %5159 = getelementptr inbounds %struct.Reg, %struct.Reg* %5158, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %5159 to i64*
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5161 = getelementptr inbounds %struct.GPR, %struct.GPR* %5160, i32 0, i32 1
  %5162 = getelementptr inbounds %struct.Reg, %struct.Reg* %5161, i32 0, i32 0
  %RAX.i1158 = bitcast %union.anon* %5162 to i64*
  %5163 = load i64, i64* %PC.i1157
  %5164 = add i64 %5163, 10
  store i64 %5164, i64* %PC.i1157
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1158, align 8
  store %struct.Memory* %loadMem_40c4ac, %struct.Memory** %MEMORY
  %loadMem_40c4b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5166 = getelementptr inbounds %struct.GPR, %struct.GPR* %5165, i32 0, i32 33
  %5167 = getelementptr inbounds %struct.Reg, %struct.Reg* %5166, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %5167 to i64*
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5169 = getelementptr inbounds %struct.GPR, %struct.GPR* %5168, i32 0, i32 5
  %5170 = getelementptr inbounds %struct.Reg, %struct.Reg* %5169, i32 0, i32 0
  %RCX.i1155 = bitcast %union.anon* %5170 to i64*
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5172 = getelementptr inbounds %struct.GPR, %struct.GPR* %5171, i32 0, i32 15
  %5173 = getelementptr inbounds %struct.Reg, %struct.Reg* %5172, i32 0, i32 0
  %RBP.i1156 = bitcast %union.anon* %5173 to i64*
  %5174 = load i64, i64* %RBP.i1156
  %5175 = sub i64 %5174, 4
  %5176 = load i64, i64* %PC.i1154
  %5177 = add i64 %5176, 3
  store i64 %5177, i64* %PC.i1154
  %5178 = inttoptr i64 %5175 to i32*
  %5179 = load i32, i32* %5178
  %5180 = zext i32 %5179 to i64
  store i64 %5180, i64* %RCX.i1155, align 8
  store %struct.Memory* %loadMem_40c4b6, %struct.Memory** %MEMORY
  %loadMem_40c4b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5182 = getelementptr inbounds %struct.GPR, %struct.GPR* %5181, i32 0, i32 33
  %5183 = getelementptr inbounds %struct.Reg, %struct.Reg* %5182, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %5183 to i64*
  %5184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5185 = getelementptr inbounds %struct.GPR, %struct.GPR* %5184, i32 0, i32 5
  %5186 = getelementptr inbounds %struct.Reg, %struct.Reg* %5185, i32 0, i32 0
  %RCX.i1153 = bitcast %union.anon* %5186 to i64*
  %5187 = load i64, i64* %RCX.i1153
  %5188 = load i64, i64* %PC.i1152
  %5189 = add i64 %5188, 3
  store i64 %5189, i64* %PC.i1152
  %5190 = trunc i64 %5187 to i32
  %5191 = add i32 20, %5190
  %5192 = zext i32 %5191 to i64
  store i64 %5192, i64* %RCX.i1153, align 8
  %5193 = icmp ult i32 %5191, %5190
  %5194 = icmp ult i32 %5191, 20
  %5195 = or i1 %5193, %5194
  %5196 = zext i1 %5195 to i8
  %5197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5196, i8* %5197, align 1
  %5198 = and i32 %5191, 255
  %5199 = call i32 @llvm.ctpop.i32(i32 %5198)
  %5200 = trunc i32 %5199 to i8
  %5201 = and i8 %5200, 1
  %5202 = xor i8 %5201, 1
  %5203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5202, i8* %5203, align 1
  %5204 = xor i64 20, %5187
  %5205 = trunc i64 %5204 to i32
  %5206 = xor i32 %5205, %5191
  %5207 = lshr i32 %5206, 4
  %5208 = trunc i32 %5207 to i8
  %5209 = and i8 %5208, 1
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5209, i8* %5210, align 1
  %5211 = icmp eq i32 %5191, 0
  %5212 = zext i1 %5211 to i8
  %5213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5212, i8* %5213, align 1
  %5214 = lshr i32 %5191, 31
  %5215 = trunc i32 %5214 to i8
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5215, i8* %5216, align 1
  %5217 = lshr i32 %5190, 31
  %5218 = xor i32 %5214, %5217
  %5219 = add i32 %5218, %5214
  %5220 = icmp eq i32 %5219, 2
  %5221 = zext i1 %5220 to i8
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5221, i8* %5222, align 1
  store %struct.Memory* %loadMem_40c4b9, %struct.Memory** %MEMORY
  %loadMem_40c4bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5224 = getelementptr inbounds %struct.GPR, %struct.GPR* %5223, i32 0, i32 33
  %5225 = getelementptr inbounds %struct.Reg, %struct.Reg* %5224, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %5225 to i64*
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5227 = getelementptr inbounds %struct.GPR, %struct.GPR* %5226, i32 0, i32 5
  %5228 = getelementptr inbounds %struct.Reg, %struct.Reg* %5227, i32 0, i32 0
  %ECX.i1150 = bitcast %union.anon* %5228 to i32*
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5230 = getelementptr inbounds %struct.GPR, %struct.GPR* %5229, i32 0, i32 7
  %5231 = getelementptr inbounds %struct.Reg, %struct.Reg* %5230, i32 0, i32 0
  %RDX.i1151 = bitcast %union.anon* %5231 to i64*
  %5232 = load i32, i32* %ECX.i1150
  %5233 = zext i32 %5232 to i64
  %5234 = load i64, i64* %PC.i1149
  %5235 = add i64 %5234, 3
  store i64 %5235, i64* %PC.i1149
  %5236 = shl i64 %5233, 32
  %5237 = ashr exact i64 %5236, 32
  store i64 %5237, i64* %RDX.i1151, align 8
  store %struct.Memory* %loadMem_40c4bc, %struct.Memory** %MEMORY
  %loadMem_40c4bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5239 = getelementptr inbounds %struct.GPR, %struct.GPR* %5238, i32 0, i32 33
  %5240 = getelementptr inbounds %struct.Reg, %struct.Reg* %5239, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %5240 to i64*
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5242 = getelementptr inbounds %struct.GPR, %struct.GPR* %5241, i32 0, i32 7
  %5243 = getelementptr inbounds %struct.Reg, %struct.Reg* %5242, i32 0, i32 0
  %RDX.i1148 = bitcast %union.anon* %5243 to i64*
  %5244 = load i64, i64* %RDX.i1148
  %5245 = mul i64 %5244, 4
  %5246 = add i64 %5245, 11187184
  %5247 = load i64, i64* %PC.i1147
  %5248 = add i64 %5247, 8
  store i64 %5248, i64* %PC.i1147
  %5249 = inttoptr i64 %5246 to i32*
  %5250 = load i32, i32* %5249
  %5251 = sext i32 %5250 to i64
  store i64 %5251, i64* %RDX.i1148, align 8
  store %struct.Memory* %loadMem_40c4bf, %struct.Memory** %MEMORY
  %loadMem_40c4c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5253 = getelementptr inbounds %struct.GPR, %struct.GPR* %5252, i32 0, i32 33
  %5254 = getelementptr inbounds %struct.Reg, %struct.Reg* %5253, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %5254 to i64*
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5256 = getelementptr inbounds %struct.GPR, %struct.GPR* %5255, i32 0, i32 7
  %5257 = getelementptr inbounds %struct.Reg, %struct.Reg* %5256, i32 0, i32 0
  %RDX.i1146 = bitcast %union.anon* %5257 to i64*
  %5258 = load i64, i64* %RDX.i1146
  %5259 = load i64, i64* %PC.i1145
  %5260 = add i64 %5259, 7
  store i64 %5260, i64* %PC.i1145
  %5261 = sext i64 %5258 to i128
  %5262 = and i128 %5261, -18446744073709551616
  %5263 = zext i64 %5258 to i128
  %5264 = or i128 %5262, %5263
  %5265 = mul i128 744, %5264
  %5266 = trunc i128 %5265 to i64
  store i64 %5266, i64* %RDX.i1146, align 8
  %5267 = sext i64 %5266 to i128
  %5268 = icmp ne i128 %5267, %5265
  %5269 = zext i1 %5268 to i8
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5269, i8* %5270, align 1
  %5271 = trunc i128 %5265 to i32
  %5272 = and i32 %5271, 255
  %5273 = call i32 @llvm.ctpop.i32(i32 %5272)
  %5274 = trunc i32 %5273 to i8
  %5275 = and i8 %5274, 1
  %5276 = xor i8 %5275, 1
  %5277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5276, i8* %5277, align 1
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5278, align 1
  %5279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5279, align 1
  %5280 = lshr i64 %5266, 63
  %5281 = trunc i64 %5280 to i8
  %5282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5281, i8* %5282, align 1
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5269, i8* %5283, align 1
  store %struct.Memory* %loadMem_40c4c7, %struct.Memory** %MEMORY
  %loadMem_40c4ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5285 = getelementptr inbounds %struct.GPR, %struct.GPR* %5284, i32 0, i32 33
  %5286 = getelementptr inbounds %struct.Reg, %struct.Reg* %5285, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %5286 to i64*
  %5287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5288 = getelementptr inbounds %struct.GPR, %struct.GPR* %5287, i32 0, i32 1
  %5289 = getelementptr inbounds %struct.Reg, %struct.Reg* %5288, i32 0, i32 0
  %RAX.i1143 = bitcast %union.anon* %5289 to i64*
  %5290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5291 = getelementptr inbounds %struct.GPR, %struct.GPR* %5290, i32 0, i32 7
  %5292 = getelementptr inbounds %struct.Reg, %struct.Reg* %5291, i32 0, i32 0
  %RDX.i1144 = bitcast %union.anon* %5292 to i64*
  %5293 = load i64, i64* %RAX.i1143
  %5294 = load i64, i64* %RDX.i1144
  %5295 = load i64, i64* %PC.i1142
  %5296 = add i64 %5295, 3
  store i64 %5296, i64* %PC.i1142
  %5297 = add i64 %5294, %5293
  store i64 %5297, i64* %RAX.i1143, align 8
  %5298 = icmp ult i64 %5297, %5293
  %5299 = icmp ult i64 %5297, %5294
  %5300 = or i1 %5298, %5299
  %5301 = zext i1 %5300 to i8
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5301, i8* %5302, align 1
  %5303 = trunc i64 %5297 to i32
  %5304 = and i32 %5303, 255
  %5305 = call i32 @llvm.ctpop.i32(i32 %5304)
  %5306 = trunc i32 %5305 to i8
  %5307 = and i8 %5306, 1
  %5308 = xor i8 %5307, 1
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5308, i8* %5309, align 1
  %5310 = xor i64 %5294, %5293
  %5311 = xor i64 %5310, %5297
  %5312 = lshr i64 %5311, 4
  %5313 = trunc i64 %5312 to i8
  %5314 = and i8 %5313, 1
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5314, i8* %5315, align 1
  %5316 = icmp eq i64 %5297, 0
  %5317 = zext i1 %5316 to i8
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5317, i8* %5318, align 1
  %5319 = lshr i64 %5297, 63
  %5320 = trunc i64 %5319 to i8
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5320, i8* %5321, align 1
  %5322 = lshr i64 %5293, 63
  %5323 = lshr i64 %5294, 63
  %5324 = xor i64 %5319, %5322
  %5325 = xor i64 %5319, %5323
  %5326 = add i64 %5324, %5325
  %5327 = icmp eq i64 %5326, 2
  %5328 = zext i1 %5327 to i8
  %5329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5328, i8* %5329, align 1
  store %struct.Memory* %loadMem_40c4ce, %struct.Memory** %MEMORY
  %loadMem_40c4d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5331 = getelementptr inbounds %struct.GPR, %struct.GPR* %5330, i32 0, i32 33
  %5332 = getelementptr inbounds %struct.Reg, %struct.Reg* %5331, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %5332 to i64*
  %5333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5334 = getelementptr inbounds %struct.GPR, %struct.GPR* %5333, i32 0, i32 1
  %5335 = getelementptr inbounds %struct.Reg, %struct.Reg* %5334, i32 0, i32 0
  %RAX.i1140 = bitcast %union.anon* %5335 to i64*
  %5336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5337 = getelementptr inbounds %struct.GPR, %struct.GPR* %5336, i32 0, i32 5
  %5338 = getelementptr inbounds %struct.Reg, %struct.Reg* %5337, i32 0, i32 0
  %RCX.i1141 = bitcast %union.anon* %5338 to i64*
  %5339 = load i64, i64* %RAX.i1140
  %5340 = add i64 %5339, 740
  %5341 = load i64, i64* %PC.i1139
  %5342 = add i64 %5341, 6
  store i64 %5342, i64* %PC.i1139
  %5343 = inttoptr i64 %5340 to i32*
  %5344 = load i32, i32* %5343
  %5345 = zext i32 %5344 to i64
  store i64 %5345, i64* %RCX.i1141, align 8
  store %struct.Memory* %loadMem_40c4d1, %struct.Memory** %MEMORY
  %loadMem_40c4d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5347 = getelementptr inbounds %struct.GPR, %struct.GPR* %5346, i32 0, i32 33
  %5348 = getelementptr inbounds %struct.Reg, %struct.Reg* %5347, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %5348 to i64*
  %5349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5350 = getelementptr inbounds %struct.GPR, %struct.GPR* %5349, i32 0, i32 5
  %5351 = getelementptr inbounds %struct.Reg, %struct.Reg* %5350, i32 0, i32 0
  %ECX.i1138 = bitcast %union.anon* %5351 to i32*
  %5352 = load i32, i32* %ECX.i1138
  %5353 = zext i32 %5352 to i64
  %5354 = load i64, i64* %PC.i1137
  %5355 = add i64 %5354, 7
  store i64 %5355, i64* %PC.i1137
  %5356 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %5357 = sub i32 %5352, %5356
  %5358 = icmp ult i32 %5352, %5356
  %5359 = zext i1 %5358 to i8
  %5360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5359, i8* %5360, align 1
  %5361 = and i32 %5357, 255
  %5362 = call i32 @llvm.ctpop.i32(i32 %5361)
  %5363 = trunc i32 %5362 to i8
  %5364 = and i8 %5363, 1
  %5365 = xor i8 %5364, 1
  %5366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5365, i8* %5366, align 1
  %5367 = xor i32 %5356, %5352
  %5368 = xor i32 %5367, %5357
  %5369 = lshr i32 %5368, 4
  %5370 = trunc i32 %5369 to i8
  %5371 = and i8 %5370, 1
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5371, i8* %5372, align 1
  %5373 = icmp eq i32 %5357, 0
  %5374 = zext i1 %5373 to i8
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5374, i8* %5375, align 1
  %5376 = lshr i32 %5357, 31
  %5377 = trunc i32 %5376 to i8
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5377, i8* %5378, align 1
  %5379 = lshr i32 %5352, 31
  %5380 = lshr i32 %5356, 31
  %5381 = xor i32 %5380, %5379
  %5382 = xor i32 %5376, %5379
  %5383 = add i32 %5382, %5381
  %5384 = icmp eq i32 %5383, 2
  %5385 = zext i1 %5384 to i8
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5385, i8* %5386, align 1
  store %struct.Memory* %loadMem_40c4d7, %struct.Memory** %MEMORY
  %loadMem_40c4de = load %struct.Memory*, %struct.Memory** %MEMORY
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 33
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %5389 to i64*
  %5390 = load i64, i64* %PC.i1136
  %5391 = add i64 %5390, 22
  %5392 = load i64, i64* %PC.i1136
  %5393 = add i64 %5392, 6
  %5394 = load i64, i64* %PC.i1136
  %5395 = add i64 %5394, 6
  store i64 %5395, i64* %PC.i1136
  %5396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5397 = load i8, i8* %5396, align 1
  store i8 %5397, i8* %BRANCH_TAKEN, align 1
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5399 = icmp ne i8 %5397, 0
  %5400 = select i1 %5399, i64 %5391, i64 %5393
  store i64 %5400, i64* %5398, align 8
  store %struct.Memory* %loadMem_40c4de, %struct.Memory** %MEMORY
  %loadBr_40c4de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c4de = icmp eq i8 %loadBr_40c4de, 1
  br i1 %cmpBr_40c4de, label %block_.L_40c4f4, label %block_40c4e4

block_40c4e4:                                     ; preds = %block_40c4ac
  %loadMem_40c4e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5402 = getelementptr inbounds %struct.GPR, %struct.GPR* %5401, i32 0, i32 33
  %5403 = getelementptr inbounds %struct.Reg, %struct.Reg* %5402, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %5403 to i64*
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5405 = getelementptr inbounds %struct.GPR, %struct.GPR* %5404, i32 0, i32 11
  %5406 = getelementptr inbounds %struct.Reg, %struct.Reg* %5405, i32 0, i32 0
  %RDI.i1134 = bitcast %union.anon* %5406 to i64*
  %5407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5408 = getelementptr inbounds %struct.GPR, %struct.GPR* %5407, i32 0, i32 15
  %5409 = getelementptr inbounds %struct.Reg, %struct.Reg* %5408, i32 0, i32 0
  %RBP.i1135 = bitcast %union.anon* %5409 to i64*
  %5410 = load i64, i64* %RBP.i1135
  %5411 = sub i64 %5410, 8
  %5412 = load i64, i64* %PC.i1133
  %5413 = add i64 %5412, 3
  store i64 %5413, i64* %PC.i1133
  %5414 = inttoptr i64 %5411 to i32*
  %5415 = load i32, i32* %5414
  %5416 = zext i32 %5415 to i64
  store i64 %5416, i64* %RDI.i1134, align 8
  store %struct.Memory* %loadMem_40c4e4, %struct.Memory** %MEMORY
  %loadMem_40c4e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5418 = getelementptr inbounds %struct.GPR, %struct.GPR* %5417, i32 0, i32 33
  %5419 = getelementptr inbounds %struct.Reg, %struct.Reg* %5418, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %5419 to i64*
  %5420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5421 = getelementptr inbounds %struct.GPR, %struct.GPR* %5420, i32 0, i32 1
  %5422 = getelementptr inbounds %struct.Reg, %struct.Reg* %5421, i32 0, i32 0
  %RAX.i1131 = bitcast %union.anon* %5422 to i64*
  %5423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5424 = getelementptr inbounds %struct.GPR, %struct.GPR* %5423, i32 0, i32 15
  %5425 = getelementptr inbounds %struct.Reg, %struct.Reg* %5424, i32 0, i32 0
  %RBP.i1132 = bitcast %union.anon* %5425 to i64*
  %5426 = load i64, i64* %RBP.i1132
  %5427 = sub i64 %5426, 4
  %5428 = load i64, i64* %PC.i1130
  %5429 = add i64 %5428, 3
  store i64 %5429, i64* %PC.i1130
  %5430 = inttoptr i64 %5427 to i32*
  %5431 = load i32, i32* %5430
  %5432 = zext i32 %5431 to i64
  store i64 %5432, i64* %RAX.i1131, align 8
  store %struct.Memory* %loadMem_40c4e7, %struct.Memory** %MEMORY
  %loadMem_40c4ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5434 = getelementptr inbounds %struct.GPR, %struct.GPR* %5433, i32 0, i32 33
  %5435 = getelementptr inbounds %struct.Reg, %struct.Reg* %5434, i32 0, i32 0
  %PC.i1128 = bitcast %union.anon* %5435 to i64*
  %5436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5437 = getelementptr inbounds %struct.GPR, %struct.GPR* %5436, i32 0, i32 1
  %5438 = getelementptr inbounds %struct.Reg, %struct.Reg* %5437, i32 0, i32 0
  %RAX.i1129 = bitcast %union.anon* %5438 to i64*
  %5439 = load i64, i64* %RAX.i1129
  %5440 = load i64, i64* %PC.i1128
  %5441 = add i64 %5440, 3
  store i64 %5441, i64* %PC.i1128
  %5442 = trunc i64 %5439 to i32
  %5443 = add i32 20, %5442
  %5444 = zext i32 %5443 to i64
  store i64 %5444, i64* %RAX.i1129, align 8
  %5445 = icmp ult i32 %5443, %5442
  %5446 = icmp ult i32 %5443, 20
  %5447 = or i1 %5445, %5446
  %5448 = zext i1 %5447 to i8
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5448, i8* %5449, align 1
  %5450 = and i32 %5443, 255
  %5451 = call i32 @llvm.ctpop.i32(i32 %5450)
  %5452 = trunc i32 %5451 to i8
  %5453 = and i8 %5452, 1
  %5454 = xor i8 %5453, 1
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5454, i8* %5455, align 1
  %5456 = xor i64 20, %5439
  %5457 = trunc i64 %5456 to i32
  %5458 = xor i32 %5457, %5443
  %5459 = lshr i32 %5458, 4
  %5460 = trunc i32 %5459 to i8
  %5461 = and i8 %5460, 1
  %5462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5461, i8* %5462, align 1
  %5463 = icmp eq i32 %5443, 0
  %5464 = zext i1 %5463 to i8
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5464, i8* %5465, align 1
  %5466 = lshr i32 %5443, 31
  %5467 = trunc i32 %5466 to i8
  %5468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5467, i8* %5468, align 1
  %5469 = lshr i32 %5442, 31
  %5470 = xor i32 %5466, %5469
  %5471 = add i32 %5470, %5466
  %5472 = icmp eq i32 %5471, 2
  %5473 = zext i1 %5472 to i8
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5473, i8* %5474, align 1
  store %struct.Memory* %loadMem_40c4ea, %struct.Memory** %MEMORY
  %loadMem_40c4ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5476 = getelementptr inbounds %struct.GPR, %struct.GPR* %5475, i32 0, i32 33
  %5477 = getelementptr inbounds %struct.Reg, %struct.Reg* %5476, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %5477 to i64*
  %5478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5479 = getelementptr inbounds %struct.GPR, %struct.GPR* %5478, i32 0, i32 1
  %5480 = getelementptr inbounds %struct.Reg, %struct.Reg* %5479, i32 0, i32 0
  %EAX.i1126 = bitcast %union.anon* %5480 to i32*
  %5481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5482 = getelementptr inbounds %struct.GPR, %struct.GPR* %5481, i32 0, i32 9
  %5483 = getelementptr inbounds %struct.Reg, %struct.Reg* %5482, i32 0, i32 0
  %RSI.i1127 = bitcast %union.anon* %5483 to i64*
  %5484 = load i32, i32* %EAX.i1126
  %5485 = zext i32 %5484 to i64
  %5486 = load i64, i64* %PC.i1125
  %5487 = add i64 %5486, 2
  store i64 %5487, i64* %PC.i1125
  %5488 = and i64 %5485, 4294967295
  store i64 %5488, i64* %RSI.i1127, align 8
  store %struct.Memory* %loadMem_40c4ed, %struct.Memory** %MEMORY
  %loadMem1_40c4ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5490 = getelementptr inbounds %struct.GPR, %struct.GPR* %5489, i32 0, i32 33
  %5491 = getelementptr inbounds %struct.Reg, %struct.Reg* %5490, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %5491 to i64*
  %5492 = load i64, i64* %PC.i1124
  %5493 = add i64 %5492, 2145
  %5494 = load i64, i64* %PC.i1124
  %5495 = add i64 %5494, 5
  %5496 = load i64, i64* %PC.i1124
  %5497 = add i64 %5496, 5
  store i64 %5497, i64* %PC.i1124
  %5498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5499 = load i64, i64* %5498, align 8
  %5500 = add i64 %5499, -8
  %5501 = inttoptr i64 %5500 to i64*
  store i64 %5495, i64* %5501
  store i64 %5500, i64* %5498, align 8
  %5502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5493, i64* %5502, align 8
  store %struct.Memory* %loadMem1_40c4ef, %struct.Memory** %MEMORY
  %loadMem2_40c4ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40c4ef = load i64, i64* %3
  %call2_40c4ef = call %struct.Memory* @sub_40cd50.assimilate_string(%struct.State* %0, i64 %loadPC_40c4ef, %struct.Memory* %loadMem2_40c4ef)
  store %struct.Memory* %call2_40c4ef, %struct.Memory** %MEMORY
  br label %block_.L_40c4f4

block_.L_40c4f4:                                  ; preds = %block_40c4e4, %block_40c4ac, %block_.L_40c492
  %loadMem_40c4f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5504 = getelementptr inbounds %struct.GPR, %struct.GPR* %5503, i32 0, i32 33
  %5505 = getelementptr inbounds %struct.Reg, %struct.Reg* %5504, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %5505 to i64*
  %5506 = load i64, i64* %PC.i1123
  %5507 = add i64 %5506, 5
  %5508 = load i64, i64* %PC.i1123
  %5509 = add i64 %5508, 5
  store i64 %5509, i64* %PC.i1123
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5507, i64* %5510, align 8
  store %struct.Memory* %loadMem_40c4f4, %struct.Memory** %MEMORY
  br label %block_.L_40c4f9

block_.L_40c4f9:                                  ; preds = %block_.L_40c4f4, %block_40c348
  %loadMem_40c4f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5512 = getelementptr inbounds %struct.GPR, %struct.GPR* %5511, i32 0, i32 33
  %5513 = getelementptr inbounds %struct.Reg, %struct.Reg* %5512, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %5513 to i64*
  %5514 = load i64, i64* %PC.i1122
  %5515 = add i64 %5514, 5
  %5516 = load i64, i64* %PC.i1122
  %5517 = add i64 %5516, 5
  store i64 %5517, i64* %PC.i1122
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5515, i64* %5518, align 8
  store %struct.Memory* %loadMem_40c4f9, %struct.Memory** %MEMORY
  br label %block_.L_40c4fe

block_.L_40c4fe:                                  ; preds = %block_.L_40c4f9, %block_.L_40c2b9
  %loadMem_40c4fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5520 = getelementptr inbounds %struct.GPR, %struct.GPR* %5519, i32 0, i32 33
  %5521 = getelementptr inbounds %struct.Reg, %struct.Reg* %5520, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %5521 to i64*
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5523 = getelementptr inbounds %struct.GPR, %struct.GPR* %5522, i32 0, i32 1
  %5524 = getelementptr inbounds %struct.Reg, %struct.Reg* %5523, i32 0, i32 0
  %RAX.i1120 = bitcast %union.anon* %5524 to i64*
  %5525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5526 = getelementptr inbounds %struct.GPR, %struct.GPR* %5525, i32 0, i32 15
  %5527 = getelementptr inbounds %struct.Reg, %struct.Reg* %5526, i32 0, i32 0
  %RBP.i1121 = bitcast %union.anon* %5527 to i64*
  %5528 = load i64, i64* %RBP.i1121
  %5529 = sub i64 %5528, 4
  %5530 = load i64, i64* %PC.i1119
  %5531 = add i64 %5530, 3
  store i64 %5531, i64* %PC.i1119
  %5532 = inttoptr i64 %5529 to i32*
  %5533 = load i32, i32* %5532
  %5534 = zext i32 %5533 to i64
  store i64 %5534, i64* %RAX.i1120, align 8
  store %struct.Memory* %loadMem_40c4fe, %struct.Memory** %MEMORY
  %loadMem_40c501 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5536 = getelementptr inbounds %struct.GPR, %struct.GPR* %5535, i32 0, i32 33
  %5537 = getelementptr inbounds %struct.Reg, %struct.Reg* %5536, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %5537 to i64*
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5539 = getelementptr inbounds %struct.GPR, %struct.GPR* %5538, i32 0, i32 1
  %5540 = getelementptr inbounds %struct.Reg, %struct.Reg* %5539, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %5540 to i64*
  %5541 = load i64, i64* %RAX.i1118
  %5542 = load i64, i64* %PC.i1117
  %5543 = add i64 %5542, 3
  store i64 %5543, i64* %PC.i1117
  %5544 = trunc i64 %5541 to i32
  %5545 = sub i32 %5544, 1
  %5546 = zext i32 %5545 to i64
  store i64 %5546, i64* %RAX.i1118, align 8
  %5547 = icmp ult i32 %5544, 1
  %5548 = zext i1 %5547 to i8
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5548, i8* %5549, align 1
  %5550 = and i32 %5545, 255
  %5551 = call i32 @llvm.ctpop.i32(i32 %5550)
  %5552 = trunc i32 %5551 to i8
  %5553 = and i8 %5552, 1
  %5554 = xor i8 %5553, 1
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5554, i8* %5555, align 1
  %5556 = xor i64 1, %5541
  %5557 = trunc i64 %5556 to i32
  %5558 = xor i32 %5557, %5545
  %5559 = lshr i32 %5558, 4
  %5560 = trunc i32 %5559 to i8
  %5561 = and i8 %5560, 1
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5561, i8* %5562, align 1
  %5563 = icmp eq i32 %5545, 0
  %5564 = zext i1 %5563 to i8
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5564, i8* %5565, align 1
  %5566 = lshr i32 %5545, 31
  %5567 = trunc i32 %5566 to i8
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5567, i8* %5568, align 1
  %5569 = lshr i32 %5544, 31
  %5570 = xor i32 %5566, %5569
  %5571 = add i32 %5570, %5569
  %5572 = icmp eq i32 %5571, 2
  %5573 = zext i1 %5572 to i8
  %5574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5573, i8* %5574, align 1
  store %struct.Memory* %loadMem_40c501, %struct.Memory** %MEMORY
  %loadMem_40c504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5576 = getelementptr inbounds %struct.GPR, %struct.GPR* %5575, i32 0, i32 33
  %5577 = getelementptr inbounds %struct.Reg, %struct.Reg* %5576, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %5577 to i64*
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5579 = getelementptr inbounds %struct.GPR, %struct.GPR* %5578, i32 0, i32 1
  %5580 = getelementptr inbounds %struct.Reg, %struct.Reg* %5579, i32 0, i32 0
  %EAX.i1115 = bitcast %union.anon* %5580 to i32*
  %5581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5582 = getelementptr inbounds %struct.GPR, %struct.GPR* %5581, i32 0, i32 5
  %5583 = getelementptr inbounds %struct.Reg, %struct.Reg* %5582, i32 0, i32 0
  %RCX.i1116 = bitcast %union.anon* %5583 to i64*
  %5584 = load i32, i32* %EAX.i1115
  %5585 = zext i32 %5584 to i64
  %5586 = load i64, i64* %PC.i1114
  %5587 = add i64 %5586, 3
  store i64 %5587, i64* %PC.i1114
  %5588 = shl i64 %5585, 32
  %5589 = ashr exact i64 %5588, 32
  store i64 %5589, i64* %RCX.i1116, align 8
  store %struct.Memory* %loadMem_40c504, %struct.Memory** %MEMORY
  %loadMem_40c507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5591 = getelementptr inbounds %struct.GPR, %struct.GPR* %5590, i32 0, i32 33
  %5592 = getelementptr inbounds %struct.Reg, %struct.Reg* %5591, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %5592 to i64*
  %5593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5594 = getelementptr inbounds %struct.GPR, %struct.GPR* %5593, i32 0, i32 1
  %5595 = getelementptr inbounds %struct.Reg, %struct.Reg* %5594, i32 0, i32 0
  %RAX.i1112 = bitcast %union.anon* %5595 to i64*
  %5596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5597 = getelementptr inbounds %struct.GPR, %struct.GPR* %5596, i32 0, i32 5
  %5598 = getelementptr inbounds %struct.Reg, %struct.Reg* %5597, i32 0, i32 0
  %RCX.i1113 = bitcast %union.anon* %5598 to i64*
  %5599 = load i64, i64* %RCX.i1113
  %5600 = add i64 %5599, 12099168
  %5601 = load i64, i64* %PC.i1111
  %5602 = add i64 %5601, 8
  store i64 %5602, i64* %PC.i1111
  %5603 = inttoptr i64 %5600 to i8*
  %5604 = load i8, i8* %5603
  %5605 = zext i8 %5604 to i64
  store i64 %5605, i64* %RAX.i1112, align 8
  store %struct.Memory* %loadMem_40c507, %struct.Memory** %MEMORY
  %loadMem_40c50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5607 = getelementptr inbounds %struct.GPR, %struct.GPR* %5606, i32 0, i32 33
  %5608 = getelementptr inbounds %struct.Reg, %struct.Reg* %5607, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %5608 to i64*
  %5609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5610 = getelementptr inbounds %struct.GPR, %struct.GPR* %5609, i32 0, i32 1
  %5611 = getelementptr inbounds %struct.Reg, %struct.Reg* %5610, i32 0, i32 0
  %EAX.i1110 = bitcast %union.anon* %5611 to i32*
  %5612 = load i32, i32* %EAX.i1110
  %5613 = zext i32 %5612 to i64
  %5614 = load i64, i64* %PC.i1109
  %5615 = add i64 %5614, 3
  store i64 %5615, i64* %PC.i1109
  %5616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5616, align 1
  %5617 = and i32 %5612, 255
  %5618 = call i32 @llvm.ctpop.i32(i32 %5617)
  %5619 = trunc i32 %5618 to i8
  %5620 = and i8 %5619, 1
  %5621 = xor i8 %5620, 1
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5621, i8* %5622, align 1
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5623, align 1
  %5624 = icmp eq i32 %5612, 0
  %5625 = zext i1 %5624 to i8
  %5626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5625, i8* %5626, align 1
  %5627 = lshr i32 %5612, 31
  %5628 = trunc i32 %5627 to i8
  %5629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5628, i8* %5629, align 1
  %5630 = lshr i32 %5612, 31
  %5631 = xor i32 %5627, %5630
  %5632 = add i32 %5631, %5630
  %5633 = icmp eq i32 %5632, 2
  %5634 = zext i1 %5633 to i8
  %5635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5634, i8* %5635, align 1
  store %struct.Memory* %loadMem_40c50f, %struct.Memory** %MEMORY
  %loadMem_40c512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5637 = getelementptr inbounds %struct.GPR, %struct.GPR* %5636, i32 0, i32 33
  %5638 = getelementptr inbounds %struct.Reg, %struct.Reg* %5637, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %5638 to i64*
  %5639 = load i64, i64* %PC.i1108
  %5640 = add i64 %5639, 190
  %5641 = load i64, i64* %PC.i1108
  %5642 = add i64 %5641, 6
  %5643 = load i64, i64* %PC.i1108
  %5644 = add i64 %5643, 6
  store i64 %5644, i64* %PC.i1108
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5646 = load i8, i8* %5645, align 1
  %5647 = icmp eq i8 %5646, 0
  %5648 = zext i1 %5647 to i8
  store i8 %5648, i8* %BRANCH_TAKEN, align 1
  %5649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5650 = select i1 %5647, i64 %5640, i64 %5642
  store i64 %5650, i64* %5649, align 8
  store %struct.Memory* %loadMem_40c512, %struct.Memory** %MEMORY
  %loadBr_40c512 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c512 = icmp eq i8 %loadBr_40c512, 1
  br i1 %cmpBr_40c512, label %block_.L_40c5d0, label %block_40c518

block_40c518:                                     ; preds = %block_.L_40c4fe
  %loadMem_40c518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5652 = getelementptr inbounds %struct.GPR, %struct.GPR* %5651, i32 0, i32 33
  %5653 = getelementptr inbounds %struct.Reg, %struct.Reg* %5652, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %5653 to i64*
  %5654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5655 = getelementptr inbounds %struct.GPR, %struct.GPR* %5654, i32 0, i32 1
  %5656 = getelementptr inbounds %struct.Reg, %struct.Reg* %5655, i32 0, i32 0
  %RAX.i1106 = bitcast %union.anon* %5656 to i64*
  %5657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5658 = getelementptr inbounds %struct.GPR, %struct.GPR* %5657, i32 0, i32 15
  %5659 = getelementptr inbounds %struct.Reg, %struct.Reg* %5658, i32 0, i32 0
  %RBP.i1107 = bitcast %union.anon* %5659 to i64*
  %5660 = load i64, i64* %RBP.i1107
  %5661 = sub i64 %5660, 4
  %5662 = load i64, i64* %PC.i1105
  %5663 = add i64 %5662, 3
  store i64 %5663, i64* %PC.i1105
  %5664 = inttoptr i64 %5661 to i32*
  %5665 = load i32, i32* %5664
  %5666 = zext i32 %5665 to i64
  store i64 %5666, i64* %RAX.i1106, align 8
  store %struct.Memory* %loadMem_40c518, %struct.Memory** %MEMORY
  %loadMem_40c51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5668 = getelementptr inbounds %struct.GPR, %struct.GPR* %5667, i32 0, i32 33
  %5669 = getelementptr inbounds %struct.Reg, %struct.Reg* %5668, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %5669 to i64*
  %5670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5671 = getelementptr inbounds %struct.GPR, %struct.GPR* %5670, i32 0, i32 1
  %5672 = getelementptr inbounds %struct.Reg, %struct.Reg* %5671, i32 0, i32 0
  %RAX.i1104 = bitcast %union.anon* %5672 to i64*
  %5673 = load i64, i64* %RAX.i1104
  %5674 = load i64, i64* %PC.i1103
  %5675 = add i64 %5674, 3
  store i64 %5675, i64* %PC.i1103
  %5676 = trunc i64 %5673 to i32
  %5677 = sub i32 %5676, 1
  %5678 = zext i32 %5677 to i64
  store i64 %5678, i64* %RAX.i1104, align 8
  %5679 = icmp ult i32 %5676, 1
  %5680 = zext i1 %5679 to i8
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5680, i8* %5681, align 1
  %5682 = and i32 %5677, 255
  %5683 = call i32 @llvm.ctpop.i32(i32 %5682)
  %5684 = trunc i32 %5683 to i8
  %5685 = and i8 %5684, 1
  %5686 = xor i8 %5685, 1
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5686, i8* %5687, align 1
  %5688 = xor i64 1, %5673
  %5689 = trunc i64 %5688 to i32
  %5690 = xor i32 %5689, %5677
  %5691 = lshr i32 %5690, 4
  %5692 = trunc i32 %5691 to i8
  %5693 = and i8 %5692, 1
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5693, i8* %5694, align 1
  %5695 = icmp eq i32 %5677, 0
  %5696 = zext i1 %5695 to i8
  %5697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5696, i8* %5697, align 1
  %5698 = lshr i32 %5677, 31
  %5699 = trunc i32 %5698 to i8
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5699, i8* %5700, align 1
  %5701 = lshr i32 %5676, 31
  %5702 = xor i32 %5698, %5701
  %5703 = add i32 %5702, %5701
  %5704 = icmp eq i32 %5703, 2
  %5705 = zext i1 %5704 to i8
  %5706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5705, i8* %5706, align 1
  store %struct.Memory* %loadMem_40c51b, %struct.Memory** %MEMORY
  %loadMem_40c51e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5708 = getelementptr inbounds %struct.GPR, %struct.GPR* %5707, i32 0, i32 33
  %5709 = getelementptr inbounds %struct.Reg, %struct.Reg* %5708, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %5709 to i64*
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5711 = getelementptr inbounds %struct.GPR, %struct.GPR* %5710, i32 0, i32 1
  %5712 = getelementptr inbounds %struct.Reg, %struct.Reg* %5711, i32 0, i32 0
  %EAX.i1101 = bitcast %union.anon* %5712 to i32*
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5714 = getelementptr inbounds %struct.GPR, %struct.GPR* %5713, i32 0, i32 5
  %5715 = getelementptr inbounds %struct.Reg, %struct.Reg* %5714, i32 0, i32 0
  %RCX.i1102 = bitcast %union.anon* %5715 to i64*
  %5716 = load i32, i32* %EAX.i1101
  %5717 = zext i32 %5716 to i64
  %5718 = load i64, i64* %PC.i1100
  %5719 = add i64 %5718, 3
  store i64 %5719, i64* %PC.i1100
  %5720 = shl i64 %5717, 32
  %5721 = ashr exact i64 %5720, 32
  store i64 %5721, i64* %RCX.i1102, align 8
  store %struct.Memory* %loadMem_40c51e, %struct.Memory** %MEMORY
  %loadMem_40c521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5723 = getelementptr inbounds %struct.GPR, %struct.GPR* %5722, i32 0, i32 33
  %5724 = getelementptr inbounds %struct.Reg, %struct.Reg* %5723, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %5724 to i64*
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5726 = getelementptr inbounds %struct.GPR, %struct.GPR* %5725, i32 0, i32 1
  %5727 = getelementptr inbounds %struct.Reg, %struct.Reg* %5726, i32 0, i32 0
  %RAX.i1098 = bitcast %union.anon* %5727 to i64*
  %5728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5729 = getelementptr inbounds %struct.GPR, %struct.GPR* %5728, i32 0, i32 5
  %5730 = getelementptr inbounds %struct.Reg, %struct.Reg* %5729, i32 0, i32 0
  %RCX.i1099 = bitcast %union.anon* %5730 to i64*
  %5731 = load i64, i64* %RCX.i1099
  %5732 = mul i64 %5731, 4
  %5733 = add i64 %5732, 11185584
  %5734 = load i64, i64* %PC.i1097
  %5735 = add i64 %5734, 7
  store i64 %5735, i64* %PC.i1097
  %5736 = inttoptr i64 %5733 to i32*
  %5737 = load i32, i32* %5736
  %5738 = zext i32 %5737 to i64
  store i64 %5738, i64* %RAX.i1098, align 8
  store %struct.Memory* %loadMem_40c521, %struct.Memory** %MEMORY
  %loadMem_40c528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5740 = getelementptr inbounds %struct.GPR, %struct.GPR* %5739, i32 0, i32 33
  %5741 = getelementptr inbounds %struct.Reg, %struct.Reg* %5740, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %5741 to i64*
  %5742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5743 = getelementptr inbounds %struct.GPR, %struct.GPR* %5742, i32 0, i32 1
  %5744 = getelementptr inbounds %struct.Reg, %struct.Reg* %5743, i32 0, i32 0
  %EAX.i1096 = bitcast %union.anon* %5744 to i32*
  %5745 = load i32, i32* %EAX.i1096
  %5746 = zext i32 %5745 to i64
  %5747 = load i64, i64* %PC.i1095
  %5748 = add i64 %5747, 7
  store i64 %5748, i64* %PC.i1095
  %5749 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %5750 = sub i32 %5745, %5749
  %5751 = icmp ult i32 %5745, %5749
  %5752 = zext i1 %5751 to i8
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5752, i8* %5753, align 1
  %5754 = and i32 %5750, 255
  %5755 = call i32 @llvm.ctpop.i32(i32 %5754)
  %5756 = trunc i32 %5755 to i8
  %5757 = and i8 %5756, 1
  %5758 = xor i8 %5757, 1
  %5759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5758, i8* %5759, align 1
  %5760 = xor i32 %5749, %5745
  %5761 = xor i32 %5760, %5750
  %5762 = lshr i32 %5761, 4
  %5763 = trunc i32 %5762 to i8
  %5764 = and i8 %5763, 1
  %5765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5764, i8* %5765, align 1
  %5766 = icmp eq i32 %5750, 0
  %5767 = zext i1 %5766 to i8
  %5768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5767, i8* %5768, align 1
  %5769 = lshr i32 %5750, 31
  %5770 = trunc i32 %5769 to i8
  %5771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5770, i8* %5771, align 1
  %5772 = lshr i32 %5745, 31
  %5773 = lshr i32 %5749, 31
  %5774 = xor i32 %5773, %5772
  %5775 = xor i32 %5769, %5772
  %5776 = add i32 %5775, %5774
  %5777 = icmp eq i32 %5776, 2
  %5778 = zext i1 %5777 to i8
  %5779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5778, i8* %5779, align 1
  store %struct.Memory* %loadMem_40c528, %struct.Memory** %MEMORY
  %loadMem_40c52f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5781 = getelementptr inbounds %struct.GPR, %struct.GPR* %5780, i32 0, i32 33
  %5782 = getelementptr inbounds %struct.Reg, %struct.Reg* %5781, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %5782 to i64*
  %5783 = load i64, i64* %PC.i1094
  %5784 = add i64 %5783, 161
  %5785 = load i64, i64* %PC.i1094
  %5786 = add i64 %5785, 6
  %5787 = load i64, i64* %PC.i1094
  %5788 = add i64 %5787, 6
  store i64 %5788, i64* %PC.i1094
  %5789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5790 = load i8, i8* %5789, align 1
  store i8 %5790, i8* %BRANCH_TAKEN, align 1
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5792 = icmp ne i8 %5790, 0
  %5793 = select i1 %5792, i64 %5784, i64 %5786
  store i64 %5793, i64* %5791, align 8
  store %struct.Memory* %loadMem_40c52f, %struct.Memory** %MEMORY
  %loadBr_40c52f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c52f = icmp eq i8 %loadBr_40c52f, 1
  br i1 %cmpBr_40c52f, label %block_.L_40c5d0, label %block_40c535

block_40c535:                                     ; preds = %block_40c518
  %loadMem_40c535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5795 = getelementptr inbounds %struct.GPR, %struct.GPR* %5794, i32 0, i32 33
  %5796 = getelementptr inbounds %struct.Reg, %struct.Reg* %5795, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %5796 to i64*
  %5797 = load i64, i64* %PC.i1093
  %5798 = add i64 %5797, 5
  %5799 = load i64, i64* %PC.i1093
  %5800 = add i64 %5799, 5
  store i64 %5800, i64* %PC.i1093
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5798, i64* %5801, align 8
  store %struct.Memory* %loadMem_40c535, %struct.Memory** %MEMORY
  br label %block_.L_40c53a

block_.L_40c53a:                                  ; preds = %block_40c535
  %loadMem_40c53a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5803 = getelementptr inbounds %struct.GPR, %struct.GPR* %5802, i32 0, i32 33
  %5804 = getelementptr inbounds %struct.Reg, %struct.Reg* %5803, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %5804 to i64*
  %5805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5806 = getelementptr inbounds %struct.GPR, %struct.GPR* %5805, i32 0, i32 1
  %5807 = getelementptr inbounds %struct.Reg, %struct.Reg* %5806, i32 0, i32 0
  %RAX.i1092 = bitcast %union.anon* %5807 to i64*
  %5808 = load i64, i64* %PC.i1091
  %5809 = add i64 %5808, 10
  store i64 %5809, i64* %PC.i1091
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1092, align 8
  store %struct.Memory* %loadMem_40c53a, %struct.Memory** %MEMORY
  %loadMem_40c544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5811 = getelementptr inbounds %struct.GPR, %struct.GPR* %5810, i32 0, i32 33
  %5812 = getelementptr inbounds %struct.Reg, %struct.Reg* %5811, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %5812 to i64*
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5814 = getelementptr inbounds %struct.GPR, %struct.GPR* %5813, i32 0, i32 5
  %5815 = getelementptr inbounds %struct.Reg, %struct.Reg* %5814, i32 0, i32 0
  %RCX.i1089 = bitcast %union.anon* %5815 to i64*
  %5816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5817 = getelementptr inbounds %struct.GPR, %struct.GPR* %5816, i32 0, i32 15
  %5818 = getelementptr inbounds %struct.Reg, %struct.Reg* %5817, i32 0, i32 0
  %RBP.i1090 = bitcast %union.anon* %5818 to i64*
  %5819 = load i64, i64* %RBP.i1090
  %5820 = sub i64 %5819, 8
  %5821 = load i64, i64* %PC.i1088
  %5822 = add i64 %5821, 4
  store i64 %5822, i64* %PC.i1088
  %5823 = inttoptr i64 %5820 to i32*
  %5824 = load i32, i32* %5823
  %5825 = sext i32 %5824 to i64
  store i64 %5825, i64* %RCX.i1089, align 8
  store %struct.Memory* %loadMem_40c544, %struct.Memory** %MEMORY
  %loadMem_40c548 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5827 = getelementptr inbounds %struct.GPR, %struct.GPR* %5826, i32 0, i32 33
  %5828 = getelementptr inbounds %struct.Reg, %struct.Reg* %5827, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %5828 to i64*
  %5829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5830 = getelementptr inbounds %struct.GPR, %struct.GPR* %5829, i32 0, i32 5
  %5831 = getelementptr inbounds %struct.Reg, %struct.Reg* %5830, i32 0, i32 0
  %RCX.i1087 = bitcast %union.anon* %5831 to i64*
  %5832 = load i64, i64* %RCX.i1087
  %5833 = load i64, i64* %PC.i1086
  %5834 = add i64 %5833, 7
  store i64 %5834, i64* %PC.i1086
  %5835 = sext i64 %5832 to i128
  %5836 = and i128 %5835, -18446744073709551616
  %5837 = zext i64 %5832 to i128
  %5838 = or i128 %5836, %5837
  %5839 = mul i128 744, %5838
  %5840 = trunc i128 %5839 to i64
  store i64 %5840, i64* %RCX.i1087, align 8
  %5841 = sext i64 %5840 to i128
  %5842 = icmp ne i128 %5841, %5839
  %5843 = zext i1 %5842 to i8
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5843, i8* %5844, align 1
  %5845 = trunc i128 %5839 to i32
  %5846 = and i32 %5845, 255
  %5847 = call i32 @llvm.ctpop.i32(i32 %5846)
  %5848 = trunc i32 %5847 to i8
  %5849 = and i8 %5848, 1
  %5850 = xor i8 %5849, 1
  %5851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5850, i8* %5851, align 1
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5852, align 1
  %5853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5853, align 1
  %5854 = lshr i64 %5840, 63
  %5855 = trunc i64 %5854 to i8
  %5856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5855, i8* %5856, align 1
  %5857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5843, i8* %5857, align 1
  store %struct.Memory* %loadMem_40c548, %struct.Memory** %MEMORY
  %loadMem_40c54f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5859 = getelementptr inbounds %struct.GPR, %struct.GPR* %5858, i32 0, i32 33
  %5860 = getelementptr inbounds %struct.Reg, %struct.Reg* %5859, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %5860 to i64*
  %5861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5862 = getelementptr inbounds %struct.GPR, %struct.GPR* %5861, i32 0, i32 1
  %5863 = getelementptr inbounds %struct.Reg, %struct.Reg* %5862, i32 0, i32 0
  %RAX.i1084 = bitcast %union.anon* %5863 to i64*
  %5864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5865 = getelementptr inbounds %struct.GPR, %struct.GPR* %5864, i32 0, i32 5
  %5866 = getelementptr inbounds %struct.Reg, %struct.Reg* %5865, i32 0, i32 0
  %RCX.i1085 = bitcast %union.anon* %5866 to i64*
  %5867 = load i64, i64* %RAX.i1084
  %5868 = load i64, i64* %RCX.i1085
  %5869 = load i64, i64* %PC.i1083
  %5870 = add i64 %5869, 3
  store i64 %5870, i64* %PC.i1083
  %5871 = add i64 %5868, %5867
  store i64 %5871, i64* %RAX.i1084, align 8
  %5872 = icmp ult i64 %5871, %5867
  %5873 = icmp ult i64 %5871, %5868
  %5874 = or i1 %5872, %5873
  %5875 = zext i1 %5874 to i8
  %5876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5875, i8* %5876, align 1
  %5877 = trunc i64 %5871 to i32
  %5878 = and i32 %5877, 255
  %5879 = call i32 @llvm.ctpop.i32(i32 %5878)
  %5880 = trunc i32 %5879 to i8
  %5881 = and i8 %5880, 1
  %5882 = xor i8 %5881, 1
  %5883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5882, i8* %5883, align 1
  %5884 = xor i64 %5868, %5867
  %5885 = xor i64 %5884, %5871
  %5886 = lshr i64 %5885, 4
  %5887 = trunc i64 %5886 to i8
  %5888 = and i8 %5887, 1
  %5889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5888, i8* %5889, align 1
  %5890 = icmp eq i64 %5871, 0
  %5891 = zext i1 %5890 to i8
  %5892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5891, i8* %5892, align 1
  %5893 = lshr i64 %5871, 63
  %5894 = trunc i64 %5893 to i8
  %5895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5894, i8* %5895, align 1
  %5896 = lshr i64 %5867, 63
  %5897 = lshr i64 %5868, 63
  %5898 = xor i64 %5893, %5896
  %5899 = xor i64 %5893, %5897
  %5900 = add i64 %5898, %5899
  %5901 = icmp eq i64 %5900, 2
  %5902 = zext i1 %5901 to i8
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5902, i8* %5903, align 1
  store %struct.Memory* %loadMem_40c54f, %struct.Memory** %MEMORY
  %loadMem_40c552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5905 = getelementptr inbounds %struct.GPR, %struct.GPR* %5904, i32 0, i32 33
  %5906 = getelementptr inbounds %struct.Reg, %struct.Reg* %5905, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %5906 to i64*
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5908 = getelementptr inbounds %struct.GPR, %struct.GPR* %5907, i32 0, i32 1
  %5909 = getelementptr inbounds %struct.Reg, %struct.Reg* %5908, i32 0, i32 0
  %RAX.i1082 = bitcast %union.anon* %5909 to i64*
  %5910 = load i64, i64* %RAX.i1082
  %5911 = add i64 %5910, 12
  %5912 = load i64, i64* %PC.i1081
  %5913 = add i64 %5912, 4
  store i64 %5913, i64* %PC.i1081
  %5914 = inttoptr i64 %5911 to i32*
  %5915 = load i32, i32* %5914
  %5916 = sub i32 %5915, 20
  %5917 = icmp ult i32 %5915, 20
  %5918 = zext i1 %5917 to i8
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5918, i8* %5919, align 1
  %5920 = and i32 %5916, 255
  %5921 = call i32 @llvm.ctpop.i32(i32 %5920)
  %5922 = trunc i32 %5921 to i8
  %5923 = and i8 %5922, 1
  %5924 = xor i8 %5923, 1
  %5925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5924, i8* %5925, align 1
  %5926 = xor i32 %5915, 20
  %5927 = xor i32 %5926, %5916
  %5928 = lshr i32 %5927, 4
  %5929 = trunc i32 %5928 to i8
  %5930 = and i8 %5929, 1
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5930, i8* %5931, align 1
  %5932 = icmp eq i32 %5916, 0
  %5933 = zext i1 %5932 to i8
  %5934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5933, i8* %5934, align 1
  %5935 = lshr i32 %5916, 31
  %5936 = trunc i32 %5935 to i8
  %5937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5936, i8* %5937, align 1
  %5938 = lshr i32 %5915, 31
  %5939 = xor i32 %5935, %5938
  %5940 = add i32 %5939, %5938
  %5941 = icmp eq i32 %5940, 2
  %5942 = zext i1 %5941 to i8
  %5943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5942, i8* %5943, align 1
  store %struct.Memory* %loadMem_40c552, %struct.Memory** %MEMORY
  %loadMem_40c556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5945 = getelementptr inbounds %struct.GPR, %struct.GPR* %5944, i32 0, i32 33
  %5946 = getelementptr inbounds %struct.Reg, %struct.Reg* %5945, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %5946 to i64*
  %5947 = load i64, i64* %PC.i1080
  %5948 = add i64 %5947, 61
  %5949 = load i64, i64* %PC.i1080
  %5950 = add i64 %5949, 6
  %5951 = load i64, i64* %PC.i1080
  %5952 = add i64 %5951, 6
  store i64 %5952, i64* %PC.i1080
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5954 = load i8, i8* %5953, align 1
  %5955 = icmp ne i8 %5954, 0
  %5956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5957 = load i8, i8* %5956, align 1
  %5958 = icmp ne i8 %5957, 0
  %5959 = xor i1 %5955, %5958
  %5960 = xor i1 %5959, true
  %5961 = zext i1 %5960 to i8
  store i8 %5961, i8* %BRANCH_TAKEN, align 1
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5963 = select i1 %5959, i64 %5950, i64 %5948
  store i64 %5963, i64* %5962, align 8
  store %struct.Memory* %loadMem_40c556, %struct.Memory** %MEMORY
  %loadBr_40c556 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c556 = icmp eq i8 %loadBr_40c556, 1
  br i1 %cmpBr_40c556, label %block_.L_40c593, label %block_40c55c

block_40c55c:                                     ; preds = %block_.L_40c53a
  %loadMem_40c55c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5965 = getelementptr inbounds %struct.GPR, %struct.GPR* %5964, i32 0, i32 33
  %5966 = getelementptr inbounds %struct.Reg, %struct.Reg* %5965, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %5966 to i64*
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5968 = getelementptr inbounds %struct.GPR, %struct.GPR* %5967, i32 0, i32 1
  %5969 = getelementptr inbounds %struct.Reg, %struct.Reg* %5968, i32 0, i32 0
  %RAX.i1079 = bitcast %union.anon* %5969 to i64*
  %5970 = load i64, i64* %PC.i1078
  %5971 = add i64 %5970, 10
  store i64 %5971, i64* %PC.i1078
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1079, align 8
  store %struct.Memory* %loadMem_40c55c, %struct.Memory** %MEMORY
  %loadMem_40c566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5973 = getelementptr inbounds %struct.GPR, %struct.GPR* %5972, i32 0, i32 33
  %5974 = getelementptr inbounds %struct.Reg, %struct.Reg* %5973, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %5974 to i64*
  %5975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5976 = getelementptr inbounds %struct.GPR, %struct.GPR* %5975, i32 0, i32 5
  %5977 = getelementptr inbounds %struct.Reg, %struct.Reg* %5976, i32 0, i32 0
  %RCX.i1076 = bitcast %union.anon* %5977 to i64*
  %5978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5979 = getelementptr inbounds %struct.GPR, %struct.GPR* %5978, i32 0, i32 15
  %5980 = getelementptr inbounds %struct.Reg, %struct.Reg* %5979, i32 0, i32 0
  %RBP.i1077 = bitcast %union.anon* %5980 to i64*
  %5981 = load i64, i64* %RBP.i1077
  %5982 = sub i64 %5981, 4
  %5983 = load i64, i64* %PC.i1075
  %5984 = add i64 %5983, 3
  store i64 %5984, i64* %PC.i1075
  %5985 = inttoptr i64 %5982 to i32*
  %5986 = load i32, i32* %5985
  %5987 = zext i32 %5986 to i64
  store i64 %5987, i64* %RCX.i1076, align 8
  store %struct.Memory* %loadMem_40c566, %struct.Memory** %MEMORY
  %loadMem_40c569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5989 = getelementptr inbounds %struct.GPR, %struct.GPR* %5988, i32 0, i32 33
  %5990 = getelementptr inbounds %struct.Reg, %struct.Reg* %5989, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %5990 to i64*
  %5991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5992 = getelementptr inbounds %struct.GPR, %struct.GPR* %5991, i32 0, i32 5
  %5993 = getelementptr inbounds %struct.Reg, %struct.Reg* %5992, i32 0, i32 0
  %RCX.i1074 = bitcast %union.anon* %5993 to i64*
  %5994 = load i64, i64* %RCX.i1074
  %5995 = load i64, i64* %PC.i1073
  %5996 = add i64 %5995, 3
  store i64 %5996, i64* %PC.i1073
  %5997 = trunc i64 %5994 to i32
  %5998 = sub i32 %5997, 1
  %5999 = zext i32 %5998 to i64
  store i64 %5999, i64* %RCX.i1074, align 8
  %6000 = icmp ult i32 %5997, 1
  %6001 = zext i1 %6000 to i8
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6001, i8* %6002, align 1
  %6003 = and i32 %5998, 255
  %6004 = call i32 @llvm.ctpop.i32(i32 %6003)
  %6005 = trunc i32 %6004 to i8
  %6006 = and i8 %6005, 1
  %6007 = xor i8 %6006, 1
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6007, i8* %6008, align 1
  %6009 = xor i64 1, %5994
  %6010 = trunc i64 %6009 to i32
  %6011 = xor i32 %6010, %5998
  %6012 = lshr i32 %6011, 4
  %6013 = trunc i32 %6012 to i8
  %6014 = and i8 %6013, 1
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6014, i8* %6015, align 1
  %6016 = icmp eq i32 %5998, 0
  %6017 = zext i1 %6016 to i8
  %6018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6017, i8* %6018, align 1
  %6019 = lshr i32 %5998, 31
  %6020 = trunc i32 %6019 to i8
  %6021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6020, i8* %6021, align 1
  %6022 = lshr i32 %5997, 31
  %6023 = xor i32 %6019, %6022
  %6024 = add i32 %6023, %6022
  %6025 = icmp eq i32 %6024, 2
  %6026 = zext i1 %6025 to i8
  %6027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6026, i8* %6027, align 1
  store %struct.Memory* %loadMem_40c569, %struct.Memory** %MEMORY
  %loadMem_40c56c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6029 = getelementptr inbounds %struct.GPR, %struct.GPR* %6028, i32 0, i32 33
  %6030 = getelementptr inbounds %struct.Reg, %struct.Reg* %6029, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %6030 to i64*
  %6031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6032 = getelementptr inbounds %struct.GPR, %struct.GPR* %6031, i32 0, i32 7
  %6033 = getelementptr inbounds %struct.Reg, %struct.Reg* %6032, i32 0, i32 0
  %RDX.i1071 = bitcast %union.anon* %6033 to i64*
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6035 = getelementptr inbounds %struct.GPR, %struct.GPR* %6034, i32 0, i32 15
  %6036 = getelementptr inbounds %struct.Reg, %struct.Reg* %6035, i32 0, i32 0
  %RBP.i1072 = bitcast %union.anon* %6036 to i64*
  %6037 = load i64, i64* %RBP.i1072
  %6038 = sub i64 %6037, 8
  %6039 = load i64, i64* %PC.i1070
  %6040 = add i64 %6039, 4
  store i64 %6040, i64* %PC.i1070
  %6041 = inttoptr i64 %6038 to i32*
  %6042 = load i32, i32* %6041
  %6043 = sext i32 %6042 to i64
  store i64 %6043, i64* %RDX.i1071, align 8
  store %struct.Memory* %loadMem_40c56c, %struct.Memory** %MEMORY
  %loadMem_40c570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6045 = getelementptr inbounds %struct.GPR, %struct.GPR* %6044, i32 0, i32 33
  %6046 = getelementptr inbounds %struct.Reg, %struct.Reg* %6045, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %6046 to i64*
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6048 = getelementptr inbounds %struct.GPR, %struct.GPR* %6047, i32 0, i32 7
  %6049 = getelementptr inbounds %struct.Reg, %struct.Reg* %6048, i32 0, i32 0
  %RDX.i1069 = bitcast %union.anon* %6049 to i64*
  %6050 = load i64, i64* %RDX.i1069
  %6051 = load i64, i64* %PC.i1068
  %6052 = add i64 %6051, 7
  store i64 %6052, i64* %PC.i1068
  %6053 = sext i64 %6050 to i128
  %6054 = and i128 %6053, -18446744073709551616
  %6055 = zext i64 %6050 to i128
  %6056 = or i128 %6054, %6055
  %6057 = mul i128 744, %6056
  %6058 = trunc i128 %6057 to i64
  store i64 %6058, i64* %RDX.i1069, align 8
  %6059 = sext i64 %6058 to i128
  %6060 = icmp ne i128 %6059, %6057
  %6061 = zext i1 %6060 to i8
  %6062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6061, i8* %6062, align 1
  %6063 = trunc i128 %6057 to i32
  %6064 = and i32 %6063, 255
  %6065 = call i32 @llvm.ctpop.i32(i32 %6064)
  %6066 = trunc i32 %6065 to i8
  %6067 = and i8 %6066, 1
  %6068 = xor i8 %6067, 1
  %6069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6068, i8* %6069, align 1
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6070, align 1
  %6071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6071, align 1
  %6072 = lshr i64 %6058, 63
  %6073 = trunc i64 %6072 to i8
  %6074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6073, i8* %6074, align 1
  %6075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6061, i8* %6075, align 1
  store %struct.Memory* %loadMem_40c570, %struct.Memory** %MEMORY
  %loadMem_40c577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6077 = getelementptr inbounds %struct.GPR, %struct.GPR* %6076, i32 0, i32 33
  %6078 = getelementptr inbounds %struct.Reg, %struct.Reg* %6077, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %6078 to i64*
  %6079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6080 = getelementptr inbounds %struct.GPR, %struct.GPR* %6079, i32 0, i32 1
  %6081 = getelementptr inbounds %struct.Reg, %struct.Reg* %6080, i32 0, i32 0
  %RAX.i1066 = bitcast %union.anon* %6081 to i64*
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6083 = getelementptr inbounds %struct.GPR, %struct.GPR* %6082, i32 0, i32 9
  %6084 = getelementptr inbounds %struct.Reg, %struct.Reg* %6083, i32 0, i32 0
  %RSI.i1067 = bitcast %union.anon* %6084 to i64*
  %6085 = load i64, i64* %RAX.i1066
  %6086 = load i64, i64* %PC.i1065
  %6087 = add i64 %6086, 3
  store i64 %6087, i64* %PC.i1065
  store i64 %6085, i64* %RSI.i1067, align 8
  store %struct.Memory* %loadMem_40c577, %struct.Memory** %MEMORY
  %loadMem_40c57a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6089 = getelementptr inbounds %struct.GPR, %struct.GPR* %6088, i32 0, i32 33
  %6090 = getelementptr inbounds %struct.Reg, %struct.Reg* %6089, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %6090 to i64*
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6092 = getelementptr inbounds %struct.GPR, %struct.GPR* %6091, i32 0, i32 7
  %6093 = getelementptr inbounds %struct.Reg, %struct.Reg* %6092, i32 0, i32 0
  %RDX.i1063 = bitcast %union.anon* %6093 to i64*
  %6094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6095 = getelementptr inbounds %struct.GPR, %struct.GPR* %6094, i32 0, i32 9
  %6096 = getelementptr inbounds %struct.Reg, %struct.Reg* %6095, i32 0, i32 0
  %RSI.i1064 = bitcast %union.anon* %6096 to i64*
  %6097 = load i64, i64* %RSI.i1064
  %6098 = load i64, i64* %RDX.i1063
  %6099 = load i64, i64* %PC.i1062
  %6100 = add i64 %6099, 3
  store i64 %6100, i64* %PC.i1062
  %6101 = add i64 %6098, %6097
  store i64 %6101, i64* %RSI.i1064, align 8
  %6102 = icmp ult i64 %6101, %6097
  %6103 = icmp ult i64 %6101, %6098
  %6104 = or i1 %6102, %6103
  %6105 = zext i1 %6104 to i8
  %6106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6105, i8* %6106, align 1
  %6107 = trunc i64 %6101 to i32
  %6108 = and i32 %6107, 255
  %6109 = call i32 @llvm.ctpop.i32(i32 %6108)
  %6110 = trunc i32 %6109 to i8
  %6111 = and i8 %6110, 1
  %6112 = xor i8 %6111, 1
  %6113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6112, i8* %6113, align 1
  %6114 = xor i64 %6098, %6097
  %6115 = xor i64 %6114, %6101
  %6116 = lshr i64 %6115, 4
  %6117 = trunc i64 %6116 to i8
  %6118 = and i8 %6117, 1
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6118, i8* %6119, align 1
  %6120 = icmp eq i64 %6101, 0
  %6121 = zext i1 %6120 to i8
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6121, i8* %6122, align 1
  %6123 = lshr i64 %6101, 63
  %6124 = trunc i64 %6123 to i8
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6124, i8* %6125, align 1
  %6126 = lshr i64 %6097, 63
  %6127 = lshr i64 %6098, 63
  %6128 = xor i64 %6123, %6126
  %6129 = xor i64 %6123, %6127
  %6130 = add i64 %6128, %6129
  %6131 = icmp eq i64 %6130, 2
  %6132 = zext i1 %6131 to i8
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6132, i8* %6133, align 1
  store %struct.Memory* %loadMem_40c57a, %struct.Memory** %MEMORY
  %loadMem_40c57d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6135 = getelementptr inbounds %struct.GPR, %struct.GPR* %6134, i32 0, i32 33
  %6136 = getelementptr inbounds %struct.Reg, %struct.Reg* %6135, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %6136 to i64*
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6138 = getelementptr inbounds %struct.GPR, %struct.GPR* %6137, i32 0, i32 7
  %6139 = getelementptr inbounds %struct.Reg, %struct.Reg* %6138, i32 0, i32 0
  %RDX.i1060 = bitcast %union.anon* %6139 to i64*
  %6140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6141 = getelementptr inbounds %struct.GPR, %struct.GPR* %6140, i32 0, i32 15
  %6142 = getelementptr inbounds %struct.Reg, %struct.Reg* %6141, i32 0, i32 0
  %RBP.i1061 = bitcast %union.anon* %6142 to i64*
  %6143 = load i64, i64* %RBP.i1061
  %6144 = sub i64 %6143, 8
  %6145 = load i64, i64* %PC.i1059
  %6146 = add i64 %6145, 4
  store i64 %6146, i64* %PC.i1059
  %6147 = inttoptr i64 %6144 to i32*
  %6148 = load i32, i32* %6147
  %6149 = sext i32 %6148 to i64
  store i64 %6149, i64* %RDX.i1060, align 8
  store %struct.Memory* %loadMem_40c57d, %struct.Memory** %MEMORY
  %loadMem_40c581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6151 = getelementptr inbounds %struct.GPR, %struct.GPR* %6150, i32 0, i32 33
  %6152 = getelementptr inbounds %struct.Reg, %struct.Reg* %6151, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %6152 to i64*
  %6153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6154 = getelementptr inbounds %struct.GPR, %struct.GPR* %6153, i32 0, i32 7
  %6155 = getelementptr inbounds %struct.Reg, %struct.Reg* %6154, i32 0, i32 0
  %RDX.i1058 = bitcast %union.anon* %6155 to i64*
  %6156 = load i64, i64* %RDX.i1058
  %6157 = load i64, i64* %PC.i1057
  %6158 = add i64 %6157, 7
  store i64 %6158, i64* %PC.i1057
  %6159 = sext i64 %6156 to i128
  %6160 = and i128 %6159, -18446744073709551616
  %6161 = zext i64 %6156 to i128
  %6162 = or i128 %6160, %6161
  %6163 = mul i128 744, %6162
  %6164 = trunc i128 %6163 to i64
  store i64 %6164, i64* %RDX.i1058, align 8
  %6165 = sext i64 %6164 to i128
  %6166 = icmp ne i128 %6165, %6163
  %6167 = zext i1 %6166 to i8
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6167, i8* %6168, align 1
  %6169 = trunc i128 %6163 to i32
  %6170 = and i32 %6169, 255
  %6171 = call i32 @llvm.ctpop.i32(i32 %6170)
  %6172 = trunc i32 %6171 to i8
  %6173 = and i8 %6172, 1
  %6174 = xor i8 %6173, 1
  %6175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6174, i8* %6175, align 1
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6176, align 1
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6177, align 1
  %6178 = lshr i64 %6164, 63
  %6179 = trunc i64 %6178 to i8
  %6180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6179, i8* %6180, align 1
  %6181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6167, i8* %6181, align 1
  store %struct.Memory* %loadMem_40c581, %struct.Memory** %MEMORY
  %loadMem_40c588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6183 = getelementptr inbounds %struct.GPR, %struct.GPR* %6182, i32 0, i32 33
  %6184 = getelementptr inbounds %struct.Reg, %struct.Reg* %6183, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %6184 to i64*
  %6185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6186 = getelementptr inbounds %struct.GPR, %struct.GPR* %6185, i32 0, i32 1
  %6187 = getelementptr inbounds %struct.Reg, %struct.Reg* %6186, i32 0, i32 0
  %RAX.i1055 = bitcast %union.anon* %6187 to i64*
  %6188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6189 = getelementptr inbounds %struct.GPR, %struct.GPR* %6188, i32 0, i32 7
  %6190 = getelementptr inbounds %struct.Reg, %struct.Reg* %6189, i32 0, i32 0
  %RDX.i1056 = bitcast %union.anon* %6190 to i64*
  %6191 = load i64, i64* %RAX.i1055
  %6192 = load i64, i64* %RDX.i1056
  %6193 = load i64, i64* %PC.i1054
  %6194 = add i64 %6193, 3
  store i64 %6194, i64* %PC.i1054
  %6195 = add i64 %6192, %6191
  store i64 %6195, i64* %RAX.i1055, align 8
  %6196 = icmp ult i64 %6195, %6191
  %6197 = icmp ult i64 %6195, %6192
  %6198 = or i1 %6196, %6197
  %6199 = zext i1 %6198 to i8
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6199, i8* %6200, align 1
  %6201 = trunc i64 %6195 to i32
  %6202 = and i32 %6201, 255
  %6203 = call i32 @llvm.ctpop.i32(i32 %6202)
  %6204 = trunc i32 %6203 to i8
  %6205 = and i8 %6204, 1
  %6206 = xor i8 %6205, 1
  %6207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6206, i8* %6207, align 1
  %6208 = xor i64 %6192, %6191
  %6209 = xor i64 %6208, %6195
  %6210 = lshr i64 %6209, 4
  %6211 = trunc i64 %6210 to i8
  %6212 = and i8 %6211, 1
  %6213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6212, i8* %6213, align 1
  %6214 = icmp eq i64 %6195, 0
  %6215 = zext i1 %6214 to i8
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6215, i8* %6216, align 1
  %6217 = lshr i64 %6195, 63
  %6218 = trunc i64 %6217 to i8
  %6219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6218, i8* %6219, align 1
  %6220 = lshr i64 %6191, 63
  %6221 = lshr i64 %6192, 63
  %6222 = xor i64 %6217, %6220
  %6223 = xor i64 %6217, %6221
  %6224 = add i64 %6222, %6223
  %6225 = icmp eq i64 %6224, 2
  %6226 = zext i1 %6225 to i8
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6226, i8* %6227, align 1
  store %struct.Memory* %loadMem_40c588, %struct.Memory** %MEMORY
  %loadMem_40c58b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6229 = getelementptr inbounds %struct.GPR, %struct.GPR* %6228, i32 0, i32 33
  %6230 = getelementptr inbounds %struct.Reg, %struct.Reg* %6229, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %6230 to i64*
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6232 = getelementptr inbounds %struct.GPR, %struct.GPR* %6231, i32 0, i32 1
  %6233 = getelementptr inbounds %struct.Reg, %struct.Reg* %6232, i32 0, i32 0
  %RAX.i1053 = bitcast %union.anon* %6233 to i64*
  %6234 = load i64, i64* %RAX.i1053
  %6235 = add i64 %6234, 12
  %6236 = load i64, i64* %PC.i1052
  %6237 = add i64 %6236, 4
  store i64 %6237, i64* %PC.i1052
  %6238 = inttoptr i64 %6235 to i32*
  %6239 = load i32, i32* %6238
  %6240 = sext i32 %6239 to i64
  store i64 %6240, i64* %RAX.i1053, align 8
  store %struct.Memory* %loadMem_40c58b, %struct.Memory** %MEMORY
  %loadMem_40c58f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6242 = getelementptr inbounds %struct.GPR, %struct.GPR* %6241, i32 0, i32 33
  %6243 = getelementptr inbounds %struct.Reg, %struct.Reg* %6242, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %6243 to i64*
  %6244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6245 = getelementptr inbounds %struct.GPR, %struct.GPR* %6244, i32 0, i32 5
  %6246 = getelementptr inbounds %struct.Reg, %struct.Reg* %6245, i32 0, i32 0
  %ECX.i1049 = bitcast %union.anon* %6246 to i32*
  %6247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6248 = getelementptr inbounds %struct.GPR, %struct.GPR* %6247, i32 0, i32 1
  %6249 = getelementptr inbounds %struct.Reg, %struct.Reg* %6248, i32 0, i32 0
  %RAX.i1050 = bitcast %union.anon* %6249 to i64*
  %6250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6251 = getelementptr inbounds %struct.GPR, %struct.GPR* %6250, i32 0, i32 9
  %6252 = getelementptr inbounds %struct.Reg, %struct.Reg* %6251, i32 0, i32 0
  %RSI.i1051 = bitcast %union.anon* %6252 to i64*
  %6253 = load i64, i64* %RSI.i1051
  %6254 = load i64, i64* %RAX.i1050
  %6255 = mul i64 %6254, 4
  %6256 = add i64 %6253, 16
  %6257 = add i64 %6256, %6255
  %6258 = load i32, i32* %ECX.i1049
  %6259 = zext i32 %6258 to i64
  %6260 = load i64, i64* %PC.i1048
  %6261 = add i64 %6260, 4
  store i64 %6261, i64* %PC.i1048
  %6262 = inttoptr i64 %6257 to i32*
  store i32 %6258, i32* %6262
  store %struct.Memory* %loadMem_40c58f, %struct.Memory** %MEMORY
  br label %block_.L_40c593

block_.L_40c593:                                  ; preds = %block_40c55c, %block_.L_40c53a
  %loadMem_40c593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6264 = getelementptr inbounds %struct.GPR, %struct.GPR* %6263, i32 0, i32 33
  %6265 = getelementptr inbounds %struct.Reg, %struct.Reg* %6264, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %6265 to i64*
  %6266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6267 = getelementptr inbounds %struct.GPR, %struct.GPR* %6266, i32 0, i32 1
  %6268 = getelementptr inbounds %struct.Reg, %struct.Reg* %6267, i32 0, i32 0
  %RAX.i1047 = bitcast %union.anon* %6268 to i64*
  %6269 = load i64, i64* %PC.i1046
  %6270 = add i64 %6269, 10
  store i64 %6270, i64* %PC.i1046
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1047, align 8
  store %struct.Memory* %loadMem_40c593, %struct.Memory** %MEMORY
  %loadMem_40c59d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6272 = getelementptr inbounds %struct.GPR, %struct.GPR* %6271, i32 0, i32 33
  %6273 = getelementptr inbounds %struct.Reg, %struct.Reg* %6272, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %6273 to i64*
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6275 = getelementptr inbounds %struct.GPR, %struct.GPR* %6274, i32 0, i32 5
  %6276 = getelementptr inbounds %struct.Reg, %struct.Reg* %6275, i32 0, i32 0
  %RCX.i1044 = bitcast %union.anon* %6276 to i64*
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6278 = getelementptr inbounds %struct.GPR, %struct.GPR* %6277, i32 0, i32 15
  %6279 = getelementptr inbounds %struct.Reg, %struct.Reg* %6278, i32 0, i32 0
  %RBP.i1045 = bitcast %union.anon* %6279 to i64*
  %6280 = load i64, i64* %RBP.i1045
  %6281 = sub i64 %6280, 8
  %6282 = load i64, i64* %PC.i1043
  %6283 = add i64 %6282, 4
  store i64 %6283, i64* %PC.i1043
  %6284 = inttoptr i64 %6281 to i32*
  %6285 = load i32, i32* %6284
  %6286 = sext i32 %6285 to i64
  store i64 %6286, i64* %RCX.i1044, align 8
  store %struct.Memory* %loadMem_40c59d, %struct.Memory** %MEMORY
  %loadMem_40c5a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6288 = getelementptr inbounds %struct.GPR, %struct.GPR* %6287, i32 0, i32 33
  %6289 = getelementptr inbounds %struct.Reg, %struct.Reg* %6288, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %6289 to i64*
  %6290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6291 = getelementptr inbounds %struct.GPR, %struct.GPR* %6290, i32 0, i32 5
  %6292 = getelementptr inbounds %struct.Reg, %struct.Reg* %6291, i32 0, i32 0
  %RCX.i1042 = bitcast %union.anon* %6292 to i64*
  %6293 = load i64, i64* %RCX.i1042
  %6294 = load i64, i64* %PC.i1041
  %6295 = add i64 %6294, 7
  store i64 %6295, i64* %PC.i1041
  %6296 = sext i64 %6293 to i128
  %6297 = and i128 %6296, -18446744073709551616
  %6298 = zext i64 %6293 to i128
  %6299 = or i128 %6297, %6298
  %6300 = mul i128 744, %6299
  %6301 = trunc i128 %6300 to i64
  store i64 %6301, i64* %RCX.i1042, align 8
  %6302 = sext i64 %6301 to i128
  %6303 = icmp ne i128 %6302, %6300
  %6304 = zext i1 %6303 to i8
  %6305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6304, i8* %6305, align 1
  %6306 = trunc i128 %6300 to i32
  %6307 = and i32 %6306, 255
  %6308 = call i32 @llvm.ctpop.i32(i32 %6307)
  %6309 = trunc i32 %6308 to i8
  %6310 = and i8 %6309, 1
  %6311 = xor i8 %6310, 1
  %6312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6311, i8* %6312, align 1
  %6313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6313, align 1
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6314, align 1
  %6315 = lshr i64 %6301, 63
  %6316 = trunc i64 %6315 to i8
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6316, i8* %6317, align 1
  %6318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6304, i8* %6318, align 1
  store %struct.Memory* %loadMem_40c5a1, %struct.Memory** %MEMORY
  %loadMem_40c5a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6320 = getelementptr inbounds %struct.GPR, %struct.GPR* %6319, i32 0, i32 33
  %6321 = getelementptr inbounds %struct.Reg, %struct.Reg* %6320, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %6321 to i64*
  %6322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6323 = getelementptr inbounds %struct.GPR, %struct.GPR* %6322, i32 0, i32 1
  %6324 = getelementptr inbounds %struct.Reg, %struct.Reg* %6323, i32 0, i32 0
  %RAX.i1039 = bitcast %union.anon* %6324 to i64*
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6326 = getelementptr inbounds %struct.GPR, %struct.GPR* %6325, i32 0, i32 5
  %6327 = getelementptr inbounds %struct.Reg, %struct.Reg* %6326, i32 0, i32 0
  %RCX.i1040 = bitcast %union.anon* %6327 to i64*
  %6328 = load i64, i64* %RAX.i1039
  %6329 = load i64, i64* %RCX.i1040
  %6330 = load i64, i64* %PC.i1038
  %6331 = add i64 %6330, 3
  store i64 %6331, i64* %PC.i1038
  %6332 = add i64 %6329, %6328
  store i64 %6332, i64* %RAX.i1039, align 8
  %6333 = icmp ult i64 %6332, %6328
  %6334 = icmp ult i64 %6332, %6329
  %6335 = or i1 %6333, %6334
  %6336 = zext i1 %6335 to i8
  %6337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6336, i8* %6337, align 1
  %6338 = trunc i64 %6332 to i32
  %6339 = and i32 %6338, 255
  %6340 = call i32 @llvm.ctpop.i32(i32 %6339)
  %6341 = trunc i32 %6340 to i8
  %6342 = and i8 %6341, 1
  %6343 = xor i8 %6342, 1
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6343, i8* %6344, align 1
  %6345 = xor i64 %6329, %6328
  %6346 = xor i64 %6345, %6332
  %6347 = lshr i64 %6346, 4
  %6348 = trunc i64 %6347 to i8
  %6349 = and i8 %6348, 1
  %6350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6349, i8* %6350, align 1
  %6351 = icmp eq i64 %6332, 0
  %6352 = zext i1 %6351 to i8
  %6353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6352, i8* %6353, align 1
  %6354 = lshr i64 %6332, 63
  %6355 = trunc i64 %6354 to i8
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6355, i8* %6356, align 1
  %6357 = lshr i64 %6328, 63
  %6358 = lshr i64 %6329, 63
  %6359 = xor i64 %6354, %6357
  %6360 = xor i64 %6354, %6358
  %6361 = add i64 %6359, %6360
  %6362 = icmp eq i64 %6361, 2
  %6363 = zext i1 %6362 to i8
  %6364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6363, i8* %6364, align 1
  store %struct.Memory* %loadMem_40c5a8, %struct.Memory** %MEMORY
  %loadMem_40c5ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6366 = getelementptr inbounds %struct.GPR, %struct.GPR* %6365, i32 0, i32 33
  %6367 = getelementptr inbounds %struct.Reg, %struct.Reg* %6366, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %6367 to i64*
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6369 = getelementptr inbounds %struct.GPR, %struct.GPR* %6368, i32 0, i32 1
  %6370 = getelementptr inbounds %struct.Reg, %struct.Reg* %6369, i32 0, i32 0
  %RAX.i1036 = bitcast %union.anon* %6370 to i64*
  %6371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6372 = getelementptr inbounds %struct.GPR, %struct.GPR* %6371, i32 0, i32 7
  %6373 = getelementptr inbounds %struct.Reg, %struct.Reg* %6372, i32 0, i32 0
  %RDX.i1037 = bitcast %union.anon* %6373 to i64*
  %6374 = load i64, i64* %RAX.i1036
  %6375 = add i64 %6374, 12
  %6376 = load i64, i64* %PC.i1035
  %6377 = add i64 %6376, 3
  store i64 %6377, i64* %PC.i1035
  %6378 = inttoptr i64 %6375 to i32*
  %6379 = load i32, i32* %6378
  %6380 = zext i32 %6379 to i64
  store i64 %6380, i64* %RDX.i1037, align 8
  store %struct.Memory* %loadMem_40c5ab, %struct.Memory** %MEMORY
  %loadMem_40c5ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6382 = getelementptr inbounds %struct.GPR, %struct.GPR* %6381, i32 0, i32 33
  %6383 = getelementptr inbounds %struct.Reg, %struct.Reg* %6382, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %6383 to i64*
  %6384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6385 = getelementptr inbounds %struct.GPR, %struct.GPR* %6384, i32 0, i32 7
  %6386 = getelementptr inbounds %struct.Reg, %struct.Reg* %6385, i32 0, i32 0
  %RDX.i1034 = bitcast %union.anon* %6386 to i64*
  %6387 = load i64, i64* %RDX.i1034
  %6388 = load i64, i64* %PC.i1033
  %6389 = add i64 %6388, 3
  store i64 %6389, i64* %PC.i1033
  %6390 = trunc i64 %6387 to i32
  %6391 = add i32 1, %6390
  %6392 = zext i32 %6391 to i64
  store i64 %6392, i64* %RDX.i1034, align 8
  %6393 = icmp ult i32 %6391, %6390
  %6394 = icmp ult i32 %6391, 1
  %6395 = or i1 %6393, %6394
  %6396 = zext i1 %6395 to i8
  %6397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6396, i8* %6397, align 1
  %6398 = and i32 %6391, 255
  %6399 = call i32 @llvm.ctpop.i32(i32 %6398)
  %6400 = trunc i32 %6399 to i8
  %6401 = and i8 %6400, 1
  %6402 = xor i8 %6401, 1
  %6403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6402, i8* %6403, align 1
  %6404 = xor i64 1, %6387
  %6405 = trunc i64 %6404 to i32
  %6406 = xor i32 %6405, %6391
  %6407 = lshr i32 %6406, 4
  %6408 = trunc i32 %6407 to i8
  %6409 = and i8 %6408, 1
  %6410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6409, i8* %6410, align 1
  %6411 = icmp eq i32 %6391, 0
  %6412 = zext i1 %6411 to i8
  %6413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6412, i8* %6413, align 1
  %6414 = lshr i32 %6391, 31
  %6415 = trunc i32 %6414 to i8
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6415, i8* %6416, align 1
  %6417 = lshr i32 %6390, 31
  %6418 = xor i32 %6414, %6417
  %6419 = add i32 %6418, %6414
  %6420 = icmp eq i32 %6419, 2
  %6421 = zext i1 %6420 to i8
  %6422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6421, i8* %6422, align 1
  store %struct.Memory* %loadMem_40c5ae, %struct.Memory** %MEMORY
  %loadMem_40c5b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 33
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %6425 to i64*
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6427 = getelementptr inbounds %struct.GPR, %struct.GPR* %6426, i32 0, i32 7
  %6428 = getelementptr inbounds %struct.Reg, %struct.Reg* %6427, i32 0, i32 0
  %EDX.i1031 = bitcast %union.anon* %6428 to i32*
  %6429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6430 = getelementptr inbounds %struct.GPR, %struct.GPR* %6429, i32 0, i32 1
  %6431 = getelementptr inbounds %struct.Reg, %struct.Reg* %6430, i32 0, i32 0
  %RAX.i1032 = bitcast %union.anon* %6431 to i64*
  %6432 = load i64, i64* %RAX.i1032
  %6433 = add i64 %6432, 12
  %6434 = load i32, i32* %EDX.i1031
  %6435 = zext i32 %6434 to i64
  %6436 = load i64, i64* %PC.i1030
  %6437 = add i64 %6436, 3
  store i64 %6437, i64* %PC.i1030
  %6438 = inttoptr i64 %6433 to i32*
  store i32 %6434, i32* %6438
  store %struct.Memory* %loadMem_40c5b1, %struct.Memory** %MEMORY
  %loadMem_40c5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6440 = getelementptr inbounds %struct.GPR, %struct.GPR* %6439, i32 0, i32 33
  %6441 = getelementptr inbounds %struct.Reg, %struct.Reg* %6440, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %6441 to i64*
  %6442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6443 = getelementptr inbounds %struct.GPR, %struct.GPR* %6442, i32 0, i32 7
  %6444 = getelementptr inbounds %struct.Reg, %struct.Reg* %6443, i32 0, i32 0
  %RDX.i1029 = bitcast %union.anon* %6444 to i64*
  %6445 = load i64, i64* %PC.i1028
  %6446 = add i64 %6445, 7
  store i64 %6446, i64* %PC.i1028
  %6447 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %6448 = zext i32 %6447 to i64
  store i64 %6448, i64* %RDX.i1029, align 8
  store %struct.Memory* %loadMem_40c5b4, %struct.Memory** %MEMORY
  %loadMem_40c5bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6450 = getelementptr inbounds %struct.GPR, %struct.GPR* %6449, i32 0, i32 33
  %6451 = getelementptr inbounds %struct.Reg, %struct.Reg* %6450, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %6451 to i64*
  %6452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6453 = getelementptr inbounds %struct.GPR, %struct.GPR* %6452, i32 0, i32 9
  %6454 = getelementptr inbounds %struct.Reg, %struct.Reg* %6453, i32 0, i32 0
  %RSI.i1026 = bitcast %union.anon* %6454 to i64*
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6456 = getelementptr inbounds %struct.GPR, %struct.GPR* %6455, i32 0, i32 15
  %6457 = getelementptr inbounds %struct.Reg, %struct.Reg* %6456, i32 0, i32 0
  %RBP.i1027 = bitcast %union.anon* %6457 to i64*
  %6458 = load i64, i64* %RBP.i1027
  %6459 = sub i64 %6458, 4
  %6460 = load i64, i64* %PC.i1025
  %6461 = add i64 %6460, 3
  store i64 %6461, i64* %PC.i1025
  %6462 = inttoptr i64 %6459 to i32*
  %6463 = load i32, i32* %6462
  %6464 = zext i32 %6463 to i64
  store i64 %6464, i64* %RSI.i1026, align 8
  store %struct.Memory* %loadMem_40c5bb, %struct.Memory** %MEMORY
  %loadMem_40c5be = load %struct.Memory*, %struct.Memory** %MEMORY
  %6465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6466 = getelementptr inbounds %struct.GPR, %struct.GPR* %6465, i32 0, i32 33
  %6467 = getelementptr inbounds %struct.Reg, %struct.Reg* %6466, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %6467 to i64*
  %6468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6469 = getelementptr inbounds %struct.GPR, %struct.GPR* %6468, i32 0, i32 9
  %6470 = getelementptr inbounds %struct.Reg, %struct.Reg* %6469, i32 0, i32 0
  %RSI.i1024 = bitcast %union.anon* %6470 to i64*
  %6471 = load i64, i64* %RSI.i1024
  %6472 = load i64, i64* %PC.i1023
  %6473 = add i64 %6472, 3
  store i64 %6473, i64* %PC.i1023
  %6474 = trunc i64 %6471 to i32
  %6475 = sub i32 %6474, 1
  %6476 = zext i32 %6475 to i64
  store i64 %6476, i64* %RSI.i1024, align 8
  %6477 = icmp ult i32 %6474, 1
  %6478 = zext i1 %6477 to i8
  %6479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6478, i8* %6479, align 1
  %6480 = and i32 %6475, 255
  %6481 = call i32 @llvm.ctpop.i32(i32 %6480)
  %6482 = trunc i32 %6481 to i8
  %6483 = and i8 %6482, 1
  %6484 = xor i8 %6483, 1
  %6485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6484, i8* %6485, align 1
  %6486 = xor i64 1, %6471
  %6487 = trunc i64 %6486 to i32
  %6488 = xor i32 %6487, %6475
  %6489 = lshr i32 %6488, 4
  %6490 = trunc i32 %6489 to i8
  %6491 = and i8 %6490, 1
  %6492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6491, i8* %6492, align 1
  %6493 = icmp eq i32 %6475, 0
  %6494 = zext i1 %6493 to i8
  %6495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6494, i8* %6495, align 1
  %6496 = lshr i32 %6475, 31
  %6497 = trunc i32 %6496 to i8
  %6498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6497, i8* %6498, align 1
  %6499 = lshr i32 %6474, 31
  %6500 = xor i32 %6496, %6499
  %6501 = add i32 %6500, %6499
  %6502 = icmp eq i32 %6501, 2
  %6503 = zext i1 %6502 to i8
  %6504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6503, i8* %6504, align 1
  store %struct.Memory* %loadMem_40c5be, %struct.Memory** %MEMORY
  %loadMem_40c5c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6506 = getelementptr inbounds %struct.GPR, %struct.GPR* %6505, i32 0, i32 33
  %6507 = getelementptr inbounds %struct.Reg, %struct.Reg* %6506, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %6507 to i64*
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6509 = getelementptr inbounds %struct.GPR, %struct.GPR* %6508, i32 0, i32 9
  %6510 = getelementptr inbounds %struct.Reg, %struct.Reg* %6509, i32 0, i32 0
  %ESI.i1021 = bitcast %union.anon* %6510 to i32*
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6512 = getelementptr inbounds %struct.GPR, %struct.GPR* %6511, i32 0, i32 1
  %6513 = getelementptr inbounds %struct.Reg, %struct.Reg* %6512, i32 0, i32 0
  %RAX.i1022 = bitcast %union.anon* %6513 to i64*
  %6514 = load i32, i32* %ESI.i1021
  %6515 = zext i32 %6514 to i64
  %6516 = load i64, i64* %PC.i1020
  %6517 = add i64 %6516, 3
  store i64 %6517, i64* %PC.i1020
  %6518 = shl i64 %6515, 32
  %6519 = ashr exact i64 %6518, 32
  store i64 %6519, i64* %RAX.i1022, align 8
  store %struct.Memory* %loadMem_40c5c1, %struct.Memory** %MEMORY
  %loadMem_40c5c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6521 = getelementptr inbounds %struct.GPR, %struct.GPR* %6520, i32 0, i32 33
  %6522 = getelementptr inbounds %struct.Reg, %struct.Reg* %6521, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %6522 to i64*
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6524 = getelementptr inbounds %struct.GPR, %struct.GPR* %6523, i32 0, i32 7
  %6525 = getelementptr inbounds %struct.Reg, %struct.Reg* %6524, i32 0, i32 0
  %EDX.i1018 = bitcast %union.anon* %6525 to i32*
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6527 = getelementptr inbounds %struct.GPR, %struct.GPR* %6526, i32 0, i32 1
  %6528 = getelementptr inbounds %struct.Reg, %struct.Reg* %6527, i32 0, i32 0
  %RAX.i1019 = bitcast %union.anon* %6528 to i64*
  %6529 = load i64, i64* %RAX.i1019
  %6530 = mul i64 %6529, 4
  %6531 = add i64 %6530, 11185584
  %6532 = load i32, i32* %EDX.i1018
  %6533 = zext i32 %6532 to i64
  %6534 = load i64, i64* %PC.i1017
  %6535 = add i64 %6534, 7
  store i64 %6535, i64* %PC.i1017
  %6536 = inttoptr i64 %6531 to i32*
  store i32 %6532, i32* %6536
  store %struct.Memory* %loadMem_40c5c4, %struct.Memory** %MEMORY
  %loadMem_40c5cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6538 = getelementptr inbounds %struct.GPR, %struct.GPR* %6537, i32 0, i32 33
  %6539 = getelementptr inbounds %struct.Reg, %struct.Reg* %6538, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %6539 to i64*
  %6540 = load i64, i64* %PC.i1016
  %6541 = add i64 %6540, 525
  %6542 = load i64, i64* %PC.i1016
  %6543 = add i64 %6542, 5
  store i64 %6543, i64* %PC.i1016
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6541, i64* %6544, align 8
  store %struct.Memory* %loadMem_40c5cb, %struct.Memory** %MEMORY
  br label %block_.L_40c7d8

block_.L_40c5d0:                                  ; preds = %block_40c518, %block_.L_40c4fe
  %loadMem_40c5d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6546 = getelementptr inbounds %struct.GPR, %struct.GPR* %6545, i32 0, i32 33
  %6547 = getelementptr inbounds %struct.Reg, %struct.Reg* %6546, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %6547 to i64*
  %6548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6549 = getelementptr inbounds %struct.GPR, %struct.GPR* %6548, i32 0, i32 1
  %6550 = getelementptr inbounds %struct.Reg, %struct.Reg* %6549, i32 0, i32 0
  %RAX.i1014 = bitcast %union.anon* %6550 to i64*
  %6551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6552 = getelementptr inbounds %struct.GPR, %struct.GPR* %6551, i32 0, i32 15
  %6553 = getelementptr inbounds %struct.Reg, %struct.Reg* %6552, i32 0, i32 0
  %RBP.i1015 = bitcast %union.anon* %6553 to i64*
  %6554 = load i64, i64* %RBP.i1015
  %6555 = sub i64 %6554, 4
  %6556 = load i64, i64* %PC.i1013
  %6557 = add i64 %6556, 3
  store i64 %6557, i64* %PC.i1013
  %6558 = inttoptr i64 %6555 to i32*
  %6559 = load i32, i32* %6558
  %6560 = zext i32 %6559 to i64
  store i64 %6560, i64* %RAX.i1014, align 8
  store %struct.Memory* %loadMem_40c5d0, %struct.Memory** %MEMORY
  %loadMem_40c5d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6562 = getelementptr inbounds %struct.GPR, %struct.GPR* %6561, i32 0, i32 33
  %6563 = getelementptr inbounds %struct.Reg, %struct.Reg* %6562, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %6563 to i64*
  %6564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6565 = getelementptr inbounds %struct.GPR, %struct.GPR* %6564, i32 0, i32 1
  %6566 = getelementptr inbounds %struct.Reg, %struct.Reg* %6565, i32 0, i32 0
  %RAX.i1012 = bitcast %union.anon* %6566 to i64*
  %6567 = load i64, i64* %RAX.i1012
  %6568 = load i64, i64* %PC.i1011
  %6569 = add i64 %6568, 3
  store i64 %6569, i64* %PC.i1011
  %6570 = trunc i64 %6567 to i32
  %6571 = sub i32 %6570, 1
  %6572 = zext i32 %6571 to i64
  store i64 %6572, i64* %RAX.i1012, align 8
  %6573 = icmp ult i32 %6570, 1
  %6574 = zext i1 %6573 to i8
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6574, i8* %6575, align 1
  %6576 = and i32 %6571, 255
  %6577 = call i32 @llvm.ctpop.i32(i32 %6576)
  %6578 = trunc i32 %6577 to i8
  %6579 = and i8 %6578, 1
  %6580 = xor i8 %6579, 1
  %6581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6580, i8* %6581, align 1
  %6582 = xor i64 1, %6567
  %6583 = trunc i64 %6582 to i32
  %6584 = xor i32 %6583, %6571
  %6585 = lshr i32 %6584, 4
  %6586 = trunc i32 %6585 to i8
  %6587 = and i8 %6586, 1
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6587, i8* %6588, align 1
  %6589 = icmp eq i32 %6571, 0
  %6590 = zext i1 %6589 to i8
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6590, i8* %6591, align 1
  %6592 = lshr i32 %6571, 31
  %6593 = trunc i32 %6592 to i8
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6593, i8* %6594, align 1
  %6595 = lshr i32 %6570, 31
  %6596 = xor i32 %6592, %6595
  %6597 = add i32 %6596, %6595
  %6598 = icmp eq i32 %6597, 2
  %6599 = zext i1 %6598 to i8
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6599, i8* %6600, align 1
  store %struct.Memory* %loadMem_40c5d3, %struct.Memory** %MEMORY
  %loadMem_40c5d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6602 = getelementptr inbounds %struct.GPR, %struct.GPR* %6601, i32 0, i32 33
  %6603 = getelementptr inbounds %struct.Reg, %struct.Reg* %6602, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %6603 to i64*
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6605 = getelementptr inbounds %struct.GPR, %struct.GPR* %6604, i32 0, i32 1
  %6606 = getelementptr inbounds %struct.Reg, %struct.Reg* %6605, i32 0, i32 0
  %EAX.i1009 = bitcast %union.anon* %6606 to i32*
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6608 = getelementptr inbounds %struct.GPR, %struct.GPR* %6607, i32 0, i32 5
  %6609 = getelementptr inbounds %struct.Reg, %struct.Reg* %6608, i32 0, i32 0
  %RCX.i1010 = bitcast %union.anon* %6609 to i64*
  %6610 = load i32, i32* %EAX.i1009
  %6611 = zext i32 %6610 to i64
  %6612 = load i64, i64* %PC.i1008
  %6613 = add i64 %6612, 3
  store i64 %6613, i64* %PC.i1008
  %6614 = shl i64 %6611, 32
  %6615 = ashr exact i64 %6614, 32
  store i64 %6615, i64* %RCX.i1010, align 8
  store %struct.Memory* %loadMem_40c5d6, %struct.Memory** %MEMORY
  %loadMem_40c5d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6617 = getelementptr inbounds %struct.GPR, %struct.GPR* %6616, i32 0, i32 33
  %6618 = getelementptr inbounds %struct.Reg, %struct.Reg* %6617, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %6618 to i64*
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 1
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %RAX.i1006 = bitcast %union.anon* %6621 to i64*
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6623 = getelementptr inbounds %struct.GPR, %struct.GPR* %6622, i32 0, i32 5
  %6624 = getelementptr inbounds %struct.Reg, %struct.Reg* %6623, i32 0, i32 0
  %RCX.i1007 = bitcast %union.anon* %6624 to i64*
  %6625 = load i64, i64* %RCX.i1007
  %6626 = add i64 %6625, 12099168
  %6627 = load i64, i64* %PC.i1005
  %6628 = add i64 %6627, 8
  store i64 %6628, i64* %PC.i1005
  %6629 = inttoptr i64 %6626 to i8*
  %6630 = load i8, i8* %6629
  %6631 = zext i8 %6630 to i64
  store i64 %6631, i64* %RAX.i1006, align 8
  store %struct.Memory* %loadMem_40c5d9, %struct.Memory** %MEMORY
  %loadMem_40c5e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6633 = getelementptr inbounds %struct.GPR, %struct.GPR* %6632, i32 0, i32 33
  %6634 = getelementptr inbounds %struct.Reg, %struct.Reg* %6633, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %6634 to i64*
  %6635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6636 = getelementptr inbounds %struct.GPR, %struct.GPR* %6635, i32 0, i32 1
  %6637 = getelementptr inbounds %struct.Reg, %struct.Reg* %6636, i32 0, i32 0
  %EAX.i1003 = bitcast %union.anon* %6637 to i32*
  %6638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6639 = getelementptr inbounds %struct.GPR, %struct.GPR* %6638, i32 0, i32 15
  %6640 = getelementptr inbounds %struct.Reg, %struct.Reg* %6639, i32 0, i32 0
  %RBP.i1004 = bitcast %union.anon* %6640 to i64*
  %6641 = load i32, i32* %EAX.i1003
  %6642 = zext i32 %6641 to i64
  %6643 = load i64, i64* %RBP.i1004
  %6644 = sub i64 %6643, 16
  %6645 = load i64, i64* %PC.i1002
  %6646 = add i64 %6645, 3
  store i64 %6646, i64* %PC.i1002
  %6647 = inttoptr i64 %6644 to i32*
  %6648 = load i32, i32* %6647
  %6649 = sub i32 %6641, %6648
  %6650 = icmp ult i32 %6641, %6648
  %6651 = zext i1 %6650 to i8
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6651, i8* %6652, align 1
  %6653 = and i32 %6649, 255
  %6654 = call i32 @llvm.ctpop.i32(i32 %6653)
  %6655 = trunc i32 %6654 to i8
  %6656 = and i8 %6655, 1
  %6657 = xor i8 %6656, 1
  %6658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6657, i8* %6658, align 1
  %6659 = xor i32 %6648, %6641
  %6660 = xor i32 %6659, %6649
  %6661 = lshr i32 %6660, 4
  %6662 = trunc i32 %6661 to i8
  %6663 = and i8 %6662, 1
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6663, i8* %6664, align 1
  %6665 = icmp eq i32 %6649, 0
  %6666 = zext i1 %6665 to i8
  %6667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6666, i8* %6667, align 1
  %6668 = lshr i32 %6649, 31
  %6669 = trunc i32 %6668 to i8
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6669, i8* %6670, align 1
  %6671 = lshr i32 %6641, 31
  %6672 = lshr i32 %6648, 31
  %6673 = xor i32 %6672, %6671
  %6674 = xor i32 %6668, %6671
  %6675 = add i32 %6674, %6673
  %6676 = icmp eq i32 %6675, 2
  %6677 = zext i1 %6676 to i8
  %6678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6677, i8* %6678, align 1
  store %struct.Memory* %loadMem_40c5e1, %struct.Memory** %MEMORY
  %loadMem_40c5e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6680 = getelementptr inbounds %struct.GPR, %struct.GPR* %6679, i32 0, i32 33
  %6681 = getelementptr inbounds %struct.Reg, %struct.Reg* %6680, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %6681 to i64*
  %6682 = load i64, i64* %PC.i1001
  %6683 = add i64 %6682, 392
  %6684 = load i64, i64* %PC.i1001
  %6685 = add i64 %6684, 6
  %6686 = load i64, i64* %PC.i1001
  %6687 = add i64 %6686, 6
  store i64 %6687, i64* %PC.i1001
  %6688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6689 = load i8, i8* %6688, align 1
  %6690 = icmp eq i8 %6689, 0
  %6691 = zext i1 %6690 to i8
  store i8 %6691, i8* %BRANCH_TAKEN, align 1
  %6692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6693 = select i1 %6690, i64 %6683, i64 %6685
  store i64 %6693, i64* %6692, align 8
  store %struct.Memory* %loadMem_40c5e4, %struct.Memory** %MEMORY
  %loadBr_40c5e4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c5e4 = icmp eq i8 %loadBr_40c5e4, 1
  br i1 %cmpBr_40c5e4, label %block_.L_40c76c, label %block_40c5ea

block_40c5ea:                                     ; preds = %block_.L_40c5d0
  %loadMem_40c5ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %6694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6695 = getelementptr inbounds %struct.GPR, %struct.GPR* %6694, i32 0, i32 33
  %6696 = getelementptr inbounds %struct.Reg, %struct.Reg* %6695, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %6696 to i64*
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6698 = getelementptr inbounds %struct.GPR, %struct.GPR* %6697, i32 0, i32 1
  %6699 = getelementptr inbounds %struct.Reg, %struct.Reg* %6698, i32 0, i32 0
  %RAX.i1000 = bitcast %union.anon* %6699 to i64*
  %6700 = load i64, i64* %PC.i999
  %6701 = add i64 %6700, 10
  store i64 %6701, i64* %PC.i999
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1000, align 8
  store %struct.Memory* %loadMem_40c5ea, %struct.Memory** %MEMORY
  %loadMem_40c5f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6703 = getelementptr inbounds %struct.GPR, %struct.GPR* %6702, i32 0, i32 33
  %6704 = getelementptr inbounds %struct.Reg, %struct.Reg* %6703, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %6704 to i64*
  %6705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6706 = getelementptr inbounds %struct.GPR, %struct.GPR* %6705, i32 0, i32 5
  %6707 = getelementptr inbounds %struct.Reg, %struct.Reg* %6706, i32 0, i32 0
  %RCX.i997 = bitcast %union.anon* %6707 to i64*
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6709 = getelementptr inbounds %struct.GPR, %struct.GPR* %6708, i32 0, i32 15
  %6710 = getelementptr inbounds %struct.Reg, %struct.Reg* %6709, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %6710 to i64*
  %6711 = load i64, i64* %RBP.i998
  %6712 = sub i64 %6711, 4
  %6713 = load i64, i64* %PC.i996
  %6714 = add i64 %6713, 3
  store i64 %6714, i64* %PC.i996
  %6715 = inttoptr i64 %6712 to i32*
  %6716 = load i32, i32* %6715
  %6717 = zext i32 %6716 to i64
  store i64 %6717, i64* %RCX.i997, align 8
  store %struct.Memory* %loadMem_40c5f4, %struct.Memory** %MEMORY
  %loadMem_40c5f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6719 = getelementptr inbounds %struct.GPR, %struct.GPR* %6718, i32 0, i32 33
  %6720 = getelementptr inbounds %struct.Reg, %struct.Reg* %6719, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %6720 to i64*
  %6721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6722 = getelementptr inbounds %struct.GPR, %struct.GPR* %6721, i32 0, i32 5
  %6723 = getelementptr inbounds %struct.Reg, %struct.Reg* %6722, i32 0, i32 0
  %RCX.i995 = bitcast %union.anon* %6723 to i64*
  %6724 = load i64, i64* %RCX.i995
  %6725 = load i64, i64* %PC.i994
  %6726 = add i64 %6725, 3
  store i64 %6726, i64* %PC.i994
  %6727 = trunc i64 %6724 to i32
  %6728 = sub i32 %6727, 1
  %6729 = zext i32 %6728 to i64
  store i64 %6729, i64* %RCX.i995, align 8
  %6730 = icmp ult i32 %6727, 1
  %6731 = zext i1 %6730 to i8
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6731, i8* %6732, align 1
  %6733 = and i32 %6728, 255
  %6734 = call i32 @llvm.ctpop.i32(i32 %6733)
  %6735 = trunc i32 %6734 to i8
  %6736 = and i8 %6735, 1
  %6737 = xor i8 %6736, 1
  %6738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6737, i8* %6738, align 1
  %6739 = xor i64 1, %6724
  %6740 = trunc i64 %6739 to i32
  %6741 = xor i32 %6740, %6728
  %6742 = lshr i32 %6741, 4
  %6743 = trunc i32 %6742 to i8
  %6744 = and i8 %6743, 1
  %6745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6744, i8* %6745, align 1
  %6746 = icmp eq i32 %6728, 0
  %6747 = zext i1 %6746 to i8
  %6748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6747, i8* %6748, align 1
  %6749 = lshr i32 %6728, 31
  %6750 = trunc i32 %6749 to i8
  %6751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6750, i8* %6751, align 1
  %6752 = lshr i32 %6727, 31
  %6753 = xor i32 %6749, %6752
  %6754 = add i32 %6753, %6752
  %6755 = icmp eq i32 %6754, 2
  %6756 = zext i1 %6755 to i8
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6756, i8* %6757, align 1
  store %struct.Memory* %loadMem_40c5f7, %struct.Memory** %MEMORY
  %loadMem_40c5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6759 = getelementptr inbounds %struct.GPR, %struct.GPR* %6758, i32 0, i32 33
  %6760 = getelementptr inbounds %struct.Reg, %struct.Reg* %6759, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %6760 to i64*
  %6761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6762 = getelementptr inbounds %struct.GPR, %struct.GPR* %6761, i32 0, i32 5
  %6763 = getelementptr inbounds %struct.Reg, %struct.Reg* %6762, i32 0, i32 0
  %ECX.i992 = bitcast %union.anon* %6763 to i32*
  %6764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6765 = getelementptr inbounds %struct.GPR, %struct.GPR* %6764, i32 0, i32 7
  %6766 = getelementptr inbounds %struct.Reg, %struct.Reg* %6765, i32 0, i32 0
  %RDX.i993 = bitcast %union.anon* %6766 to i64*
  %6767 = load i32, i32* %ECX.i992
  %6768 = zext i32 %6767 to i64
  %6769 = load i64, i64* %PC.i991
  %6770 = add i64 %6769, 3
  store i64 %6770, i64* %PC.i991
  %6771 = shl i64 %6768, 32
  %6772 = ashr exact i64 %6771, 32
  store i64 %6772, i64* %RDX.i993, align 8
  store %struct.Memory* %loadMem_40c5fa, %struct.Memory** %MEMORY
  %loadMem_40c5fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6774 = getelementptr inbounds %struct.GPR, %struct.GPR* %6773, i32 0, i32 33
  %6775 = getelementptr inbounds %struct.Reg, %struct.Reg* %6774, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %6775 to i64*
  %6776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6777 = getelementptr inbounds %struct.GPR, %struct.GPR* %6776, i32 0, i32 7
  %6778 = getelementptr inbounds %struct.Reg, %struct.Reg* %6777, i32 0, i32 0
  %RDX.i990 = bitcast %union.anon* %6778 to i64*
  %6779 = load i64, i64* %RDX.i990
  %6780 = mul i64 %6779, 4
  %6781 = add i64 %6780, 11187184
  %6782 = load i64, i64* %PC.i989
  %6783 = add i64 %6782, 8
  store i64 %6783, i64* %PC.i989
  %6784 = inttoptr i64 %6781 to i32*
  %6785 = load i32, i32* %6784
  %6786 = sext i32 %6785 to i64
  store i64 %6786, i64* %RDX.i990, align 8
  store %struct.Memory* %loadMem_40c5fd, %struct.Memory** %MEMORY
  %loadMem_40c605 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6788 = getelementptr inbounds %struct.GPR, %struct.GPR* %6787, i32 0, i32 33
  %6789 = getelementptr inbounds %struct.Reg, %struct.Reg* %6788, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %6789 to i64*
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6791 = getelementptr inbounds %struct.GPR, %struct.GPR* %6790, i32 0, i32 7
  %6792 = getelementptr inbounds %struct.Reg, %struct.Reg* %6791, i32 0, i32 0
  %RDX.i988 = bitcast %union.anon* %6792 to i64*
  %6793 = load i64, i64* %RDX.i988
  %6794 = load i64, i64* %PC.i987
  %6795 = add i64 %6794, 7
  store i64 %6795, i64* %PC.i987
  %6796 = sext i64 %6793 to i128
  %6797 = and i128 %6796, -18446744073709551616
  %6798 = zext i64 %6793 to i128
  %6799 = or i128 %6797, %6798
  %6800 = mul i128 744, %6799
  %6801 = trunc i128 %6800 to i64
  store i64 %6801, i64* %RDX.i988, align 8
  %6802 = sext i64 %6801 to i128
  %6803 = icmp ne i128 %6802, %6800
  %6804 = zext i1 %6803 to i8
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6804, i8* %6805, align 1
  %6806 = trunc i128 %6800 to i32
  %6807 = and i32 %6806, 255
  %6808 = call i32 @llvm.ctpop.i32(i32 %6807)
  %6809 = trunc i32 %6808 to i8
  %6810 = and i8 %6809, 1
  %6811 = xor i8 %6810, 1
  %6812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6811, i8* %6812, align 1
  %6813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6813, align 1
  %6814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6814, align 1
  %6815 = lshr i64 %6801, 63
  %6816 = trunc i64 %6815 to i8
  %6817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6816, i8* %6817, align 1
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6804, i8* %6818, align 1
  store %struct.Memory* %loadMem_40c605, %struct.Memory** %MEMORY
  %loadMem_40c60c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6820 = getelementptr inbounds %struct.GPR, %struct.GPR* %6819, i32 0, i32 33
  %6821 = getelementptr inbounds %struct.Reg, %struct.Reg* %6820, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %6821 to i64*
  %6822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6823 = getelementptr inbounds %struct.GPR, %struct.GPR* %6822, i32 0, i32 1
  %6824 = getelementptr inbounds %struct.Reg, %struct.Reg* %6823, i32 0, i32 0
  %RAX.i985 = bitcast %union.anon* %6824 to i64*
  %6825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6826 = getelementptr inbounds %struct.GPR, %struct.GPR* %6825, i32 0, i32 7
  %6827 = getelementptr inbounds %struct.Reg, %struct.Reg* %6826, i32 0, i32 0
  %RDX.i986 = bitcast %union.anon* %6827 to i64*
  %6828 = load i64, i64* %RAX.i985
  %6829 = load i64, i64* %RDX.i986
  %6830 = load i64, i64* %PC.i984
  %6831 = add i64 %6830, 3
  store i64 %6831, i64* %PC.i984
  %6832 = add i64 %6829, %6828
  store i64 %6832, i64* %RAX.i985, align 8
  %6833 = icmp ult i64 %6832, %6828
  %6834 = icmp ult i64 %6832, %6829
  %6835 = or i1 %6833, %6834
  %6836 = zext i1 %6835 to i8
  %6837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6836, i8* %6837, align 1
  %6838 = trunc i64 %6832 to i32
  %6839 = and i32 %6838, 255
  %6840 = call i32 @llvm.ctpop.i32(i32 %6839)
  %6841 = trunc i32 %6840 to i8
  %6842 = and i8 %6841, 1
  %6843 = xor i8 %6842, 1
  %6844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6843, i8* %6844, align 1
  %6845 = xor i64 %6829, %6828
  %6846 = xor i64 %6845, %6832
  %6847 = lshr i64 %6846, 4
  %6848 = trunc i64 %6847 to i8
  %6849 = and i8 %6848, 1
  %6850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6849, i8* %6850, align 1
  %6851 = icmp eq i64 %6832, 0
  %6852 = zext i1 %6851 to i8
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6852, i8* %6853, align 1
  %6854 = lshr i64 %6832, 63
  %6855 = trunc i64 %6854 to i8
  %6856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6855, i8* %6856, align 1
  %6857 = lshr i64 %6828, 63
  %6858 = lshr i64 %6829, 63
  %6859 = xor i64 %6854, %6857
  %6860 = xor i64 %6854, %6858
  %6861 = add i64 %6859, %6860
  %6862 = icmp eq i64 %6861, 2
  %6863 = zext i1 %6862 to i8
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6863, i8* %6864, align 1
  store %struct.Memory* %loadMem_40c60c, %struct.Memory** %MEMORY
  %loadMem_40c60f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6866 = getelementptr inbounds %struct.GPR, %struct.GPR* %6865, i32 0, i32 33
  %6867 = getelementptr inbounds %struct.Reg, %struct.Reg* %6866, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %6867 to i64*
  %6868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6869 = getelementptr inbounds %struct.GPR, %struct.GPR* %6868, i32 0, i32 1
  %6870 = getelementptr inbounds %struct.Reg, %struct.Reg* %6869, i32 0, i32 0
  %RAX.i982 = bitcast %union.anon* %6870 to i64*
  %6871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6872 = getelementptr inbounds %struct.GPR, %struct.GPR* %6871, i32 0, i32 5
  %6873 = getelementptr inbounds %struct.Reg, %struct.Reg* %6872, i32 0, i32 0
  %RCX.i983 = bitcast %union.anon* %6873 to i64*
  %6874 = load i64, i64* %RAX.i982
  %6875 = add i64 %6874, 740
  %6876 = load i64, i64* %PC.i981
  %6877 = add i64 %6876, 6
  store i64 %6877, i64* %PC.i981
  %6878 = inttoptr i64 %6875 to i32*
  %6879 = load i32, i32* %6878
  %6880 = zext i32 %6879 to i64
  store i64 %6880, i64* %RCX.i983, align 8
  store %struct.Memory* %loadMem_40c60f, %struct.Memory** %MEMORY
  %loadMem_40c615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6882 = getelementptr inbounds %struct.GPR, %struct.GPR* %6881, i32 0, i32 33
  %6883 = getelementptr inbounds %struct.Reg, %struct.Reg* %6882, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %6883 to i64*
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6885 = getelementptr inbounds %struct.GPR, %struct.GPR* %6884, i32 0, i32 5
  %6886 = getelementptr inbounds %struct.Reg, %struct.Reg* %6885, i32 0, i32 0
  %ECX.i980 = bitcast %union.anon* %6886 to i32*
  %6887 = load i32, i32* %ECX.i980
  %6888 = zext i32 %6887 to i64
  %6889 = load i64, i64* %PC.i979
  %6890 = add i64 %6889, 7
  store i64 %6890, i64* %PC.i979
  %6891 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %6892 = sub i32 %6887, %6891
  %6893 = icmp ult i32 %6887, %6891
  %6894 = zext i1 %6893 to i8
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6894, i8* %6895, align 1
  %6896 = and i32 %6892, 255
  %6897 = call i32 @llvm.ctpop.i32(i32 %6896)
  %6898 = trunc i32 %6897 to i8
  %6899 = and i8 %6898, 1
  %6900 = xor i8 %6899, 1
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6900, i8* %6901, align 1
  %6902 = xor i32 %6891, %6887
  %6903 = xor i32 %6902, %6892
  %6904 = lshr i32 %6903, 4
  %6905 = trunc i32 %6904 to i8
  %6906 = and i8 %6905, 1
  %6907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6906, i8* %6907, align 1
  %6908 = icmp eq i32 %6892, 0
  %6909 = zext i1 %6908 to i8
  %6910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6909, i8* %6910, align 1
  %6911 = lshr i32 %6892, 31
  %6912 = trunc i32 %6911 to i8
  %6913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6912, i8* %6913, align 1
  %6914 = lshr i32 %6887, 31
  %6915 = lshr i32 %6891, 31
  %6916 = xor i32 %6915, %6914
  %6917 = xor i32 %6911, %6914
  %6918 = add i32 %6917, %6916
  %6919 = icmp eq i32 %6918, 2
  %6920 = zext i1 %6919 to i8
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6920, i8* %6921, align 1
  store %struct.Memory* %loadMem_40c615, %struct.Memory** %MEMORY
  %loadMem_40c61c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6923 = getelementptr inbounds %struct.GPR, %struct.GPR* %6922, i32 0, i32 33
  %6924 = getelementptr inbounds %struct.Reg, %struct.Reg* %6923, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %6924 to i64*
  %6925 = load i64, i64* %PC.i978
  %6926 = add i64 %6925, 336
  %6927 = load i64, i64* %PC.i978
  %6928 = add i64 %6927, 6
  %6929 = load i64, i64* %PC.i978
  %6930 = add i64 %6929, 6
  store i64 %6930, i64* %PC.i978
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6932 = load i8, i8* %6931, align 1
  store i8 %6932, i8* %BRANCH_TAKEN, align 1
  %6933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6934 = icmp ne i8 %6932, 0
  %6935 = select i1 %6934, i64 %6926, i64 %6928
  store i64 %6935, i64* %6933, align 8
  store %struct.Memory* %loadMem_40c61c, %struct.Memory** %MEMORY
  %loadBr_40c61c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c61c = icmp eq i8 %loadBr_40c61c, 1
  br i1 %cmpBr_40c61c, label %block_.L_40c76c, label %block_40c622

block_40c622:                                     ; preds = %block_40c5ea
  %loadMem_40c622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6937 = getelementptr inbounds %struct.GPR, %struct.GPR* %6936, i32 0, i32 33
  %6938 = getelementptr inbounds %struct.Reg, %struct.Reg* %6937, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %6938 to i64*
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6940 = getelementptr inbounds %struct.GPR, %struct.GPR* %6939, i32 0, i32 1
  %6941 = getelementptr inbounds %struct.Reg, %struct.Reg* %6940, i32 0, i32 0
  %RAX.i977 = bitcast %union.anon* %6941 to i64*
  %6942 = load i64, i64* %PC.i976
  %6943 = add i64 %6942, 10
  store i64 %6943, i64* %PC.i976
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i977, align 8
  store %struct.Memory* %loadMem_40c622, %struct.Memory** %MEMORY
  %loadMem_40c62c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6945 = getelementptr inbounds %struct.GPR, %struct.GPR* %6944, i32 0, i32 33
  %6946 = getelementptr inbounds %struct.Reg, %struct.Reg* %6945, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %6946 to i64*
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6948 = getelementptr inbounds %struct.GPR, %struct.GPR* %6947, i32 0, i32 5
  %6949 = getelementptr inbounds %struct.Reg, %struct.Reg* %6948, i32 0, i32 0
  %RCX.i974 = bitcast %union.anon* %6949 to i64*
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6951 = getelementptr inbounds %struct.GPR, %struct.GPR* %6950, i32 0, i32 15
  %6952 = getelementptr inbounds %struct.Reg, %struct.Reg* %6951, i32 0, i32 0
  %RBP.i975 = bitcast %union.anon* %6952 to i64*
  %6953 = load i64, i64* %RBP.i975
  %6954 = sub i64 %6953, 4
  %6955 = load i64, i64* %PC.i973
  %6956 = add i64 %6955, 3
  store i64 %6956, i64* %PC.i973
  %6957 = inttoptr i64 %6954 to i32*
  %6958 = load i32, i32* %6957
  %6959 = zext i32 %6958 to i64
  store i64 %6959, i64* %RCX.i974, align 8
  store %struct.Memory* %loadMem_40c62c, %struct.Memory** %MEMORY
  %loadMem_40c62f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6961 = getelementptr inbounds %struct.GPR, %struct.GPR* %6960, i32 0, i32 33
  %6962 = getelementptr inbounds %struct.Reg, %struct.Reg* %6961, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %6962 to i64*
  %6963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6964 = getelementptr inbounds %struct.GPR, %struct.GPR* %6963, i32 0, i32 5
  %6965 = getelementptr inbounds %struct.Reg, %struct.Reg* %6964, i32 0, i32 0
  %RCX.i972 = bitcast %union.anon* %6965 to i64*
  %6966 = load i64, i64* %RCX.i972
  %6967 = load i64, i64* %PC.i971
  %6968 = add i64 %6967, 3
  store i64 %6968, i64* %PC.i971
  %6969 = trunc i64 %6966 to i32
  %6970 = sub i32 %6969, 1
  %6971 = zext i32 %6970 to i64
  store i64 %6971, i64* %RCX.i972, align 8
  %6972 = icmp ult i32 %6969, 1
  %6973 = zext i1 %6972 to i8
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6973, i8* %6974, align 1
  %6975 = and i32 %6970, 255
  %6976 = call i32 @llvm.ctpop.i32(i32 %6975)
  %6977 = trunc i32 %6976 to i8
  %6978 = and i8 %6977, 1
  %6979 = xor i8 %6978, 1
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6979, i8* %6980, align 1
  %6981 = xor i64 1, %6966
  %6982 = trunc i64 %6981 to i32
  %6983 = xor i32 %6982, %6970
  %6984 = lshr i32 %6983, 4
  %6985 = trunc i32 %6984 to i8
  %6986 = and i8 %6985, 1
  %6987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6986, i8* %6987, align 1
  %6988 = icmp eq i32 %6970, 0
  %6989 = zext i1 %6988 to i8
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6989, i8* %6990, align 1
  %6991 = lshr i32 %6970, 31
  %6992 = trunc i32 %6991 to i8
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6992, i8* %6993, align 1
  %6994 = lshr i32 %6969, 31
  %6995 = xor i32 %6991, %6994
  %6996 = add i32 %6995, %6994
  %6997 = icmp eq i32 %6996, 2
  %6998 = zext i1 %6997 to i8
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6998, i8* %6999, align 1
  store %struct.Memory* %loadMem_40c62f, %struct.Memory** %MEMORY
  %loadMem_40c632 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7001 = getelementptr inbounds %struct.GPR, %struct.GPR* %7000, i32 0, i32 33
  %7002 = getelementptr inbounds %struct.Reg, %struct.Reg* %7001, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %7002 to i64*
  %7003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7004 = getelementptr inbounds %struct.GPR, %struct.GPR* %7003, i32 0, i32 5
  %7005 = getelementptr inbounds %struct.Reg, %struct.Reg* %7004, i32 0, i32 0
  %ECX.i969 = bitcast %union.anon* %7005 to i32*
  %7006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7007 = getelementptr inbounds %struct.GPR, %struct.GPR* %7006, i32 0, i32 7
  %7008 = getelementptr inbounds %struct.Reg, %struct.Reg* %7007, i32 0, i32 0
  %RDX.i970 = bitcast %union.anon* %7008 to i64*
  %7009 = load i32, i32* %ECX.i969
  %7010 = zext i32 %7009 to i64
  %7011 = load i64, i64* %PC.i968
  %7012 = add i64 %7011, 3
  store i64 %7012, i64* %PC.i968
  %7013 = shl i64 %7010, 32
  %7014 = ashr exact i64 %7013, 32
  store i64 %7014, i64* %RDX.i970, align 8
  store %struct.Memory* %loadMem_40c632, %struct.Memory** %MEMORY
  %loadMem_40c635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7016 = getelementptr inbounds %struct.GPR, %struct.GPR* %7015, i32 0, i32 33
  %7017 = getelementptr inbounds %struct.Reg, %struct.Reg* %7016, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %7017 to i64*
  %7018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7019 = getelementptr inbounds %struct.GPR, %struct.GPR* %7018, i32 0, i32 5
  %7020 = getelementptr inbounds %struct.Reg, %struct.Reg* %7019, i32 0, i32 0
  %RCX.i966 = bitcast %union.anon* %7020 to i64*
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7022 = getelementptr inbounds %struct.GPR, %struct.GPR* %7021, i32 0, i32 7
  %7023 = getelementptr inbounds %struct.Reg, %struct.Reg* %7022, i32 0, i32 0
  %RDX.i967 = bitcast %union.anon* %7023 to i64*
  %7024 = load i64, i64* %RDX.i967
  %7025 = mul i64 %7024, 4
  %7026 = add i64 %7025, 11187184
  %7027 = load i64, i64* %PC.i965
  %7028 = add i64 %7027, 7
  store i64 %7028, i64* %PC.i965
  %7029 = inttoptr i64 %7026 to i32*
  %7030 = load i32, i32* %7029
  %7031 = zext i32 %7030 to i64
  store i64 %7031, i64* %RCX.i966, align 8
  store %struct.Memory* %loadMem_40c635, %struct.Memory** %MEMORY
  %loadMem_40c63c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7033 = getelementptr inbounds %struct.GPR, %struct.GPR* %7032, i32 0, i32 33
  %7034 = getelementptr inbounds %struct.Reg, %struct.Reg* %7033, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %7034 to i64*
  %7035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7036 = getelementptr inbounds %struct.GPR, %struct.GPR* %7035, i32 0, i32 7
  %7037 = getelementptr inbounds %struct.Reg, %struct.Reg* %7036, i32 0, i32 0
  %RDX.i963 = bitcast %union.anon* %7037 to i64*
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7039 = getelementptr inbounds %struct.GPR, %struct.GPR* %7038, i32 0, i32 15
  %7040 = getelementptr inbounds %struct.Reg, %struct.Reg* %7039, i32 0, i32 0
  %RBP.i964 = bitcast %union.anon* %7040 to i64*
  %7041 = load i64, i64* %RBP.i964
  %7042 = sub i64 %7041, 8
  %7043 = load i64, i64* %PC.i962
  %7044 = add i64 %7043, 4
  store i64 %7044, i64* %PC.i962
  %7045 = inttoptr i64 %7042 to i32*
  %7046 = load i32, i32* %7045
  %7047 = sext i32 %7046 to i64
  store i64 %7047, i64* %RDX.i963, align 8
  store %struct.Memory* %loadMem_40c63c, %struct.Memory** %MEMORY
  %loadMem_40c640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7049 = getelementptr inbounds %struct.GPR, %struct.GPR* %7048, i32 0, i32 33
  %7050 = getelementptr inbounds %struct.Reg, %struct.Reg* %7049, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %7050 to i64*
  %7051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7052 = getelementptr inbounds %struct.GPR, %struct.GPR* %7051, i32 0, i32 7
  %7053 = getelementptr inbounds %struct.Reg, %struct.Reg* %7052, i32 0, i32 0
  %RDX.i961 = bitcast %union.anon* %7053 to i64*
  %7054 = load i64, i64* %RDX.i961
  %7055 = load i64, i64* %PC.i960
  %7056 = add i64 %7055, 7
  store i64 %7056, i64* %PC.i960
  %7057 = sext i64 %7054 to i128
  %7058 = and i128 %7057, -18446744073709551616
  %7059 = zext i64 %7054 to i128
  %7060 = or i128 %7058, %7059
  %7061 = mul i128 744, %7060
  %7062 = trunc i128 %7061 to i64
  store i64 %7062, i64* %RDX.i961, align 8
  %7063 = sext i64 %7062 to i128
  %7064 = icmp ne i128 %7063, %7061
  %7065 = zext i1 %7064 to i8
  %7066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7065, i8* %7066, align 1
  %7067 = trunc i128 %7061 to i32
  %7068 = and i32 %7067, 255
  %7069 = call i32 @llvm.ctpop.i32(i32 %7068)
  %7070 = trunc i32 %7069 to i8
  %7071 = and i8 %7070, 1
  %7072 = xor i8 %7071, 1
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7072, i8* %7073, align 1
  %7074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7074, align 1
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7075, align 1
  %7076 = lshr i64 %7062, 63
  %7077 = trunc i64 %7076 to i8
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7077, i8* %7078, align 1
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7065, i8* %7079, align 1
  store %struct.Memory* %loadMem_40c640, %struct.Memory** %MEMORY
  %loadMem_40c647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7081 = getelementptr inbounds %struct.GPR, %struct.GPR* %7080, i32 0, i32 33
  %7082 = getelementptr inbounds %struct.Reg, %struct.Reg* %7081, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %7082 to i64*
  %7083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7084 = getelementptr inbounds %struct.GPR, %struct.GPR* %7083, i32 0, i32 1
  %7085 = getelementptr inbounds %struct.Reg, %struct.Reg* %7084, i32 0, i32 0
  %RAX.i958 = bitcast %union.anon* %7085 to i64*
  %7086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7087 = getelementptr inbounds %struct.GPR, %struct.GPR* %7086, i32 0, i32 9
  %7088 = getelementptr inbounds %struct.Reg, %struct.Reg* %7087, i32 0, i32 0
  %RSI.i959 = bitcast %union.anon* %7088 to i64*
  %7089 = load i64, i64* %RAX.i958
  %7090 = load i64, i64* %PC.i957
  %7091 = add i64 %7090, 3
  store i64 %7091, i64* %PC.i957
  store i64 %7089, i64* %RSI.i959, align 8
  store %struct.Memory* %loadMem_40c647, %struct.Memory** %MEMORY
  %loadMem_40c64a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7093 = getelementptr inbounds %struct.GPR, %struct.GPR* %7092, i32 0, i32 33
  %7094 = getelementptr inbounds %struct.Reg, %struct.Reg* %7093, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %7094 to i64*
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7096 = getelementptr inbounds %struct.GPR, %struct.GPR* %7095, i32 0, i32 7
  %7097 = getelementptr inbounds %struct.Reg, %struct.Reg* %7096, i32 0, i32 0
  %RDX.i955 = bitcast %union.anon* %7097 to i64*
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7099 = getelementptr inbounds %struct.GPR, %struct.GPR* %7098, i32 0, i32 9
  %7100 = getelementptr inbounds %struct.Reg, %struct.Reg* %7099, i32 0, i32 0
  %RSI.i956 = bitcast %union.anon* %7100 to i64*
  %7101 = load i64, i64* %RSI.i956
  %7102 = load i64, i64* %RDX.i955
  %7103 = load i64, i64* %PC.i954
  %7104 = add i64 %7103, 3
  store i64 %7104, i64* %PC.i954
  %7105 = add i64 %7102, %7101
  store i64 %7105, i64* %RSI.i956, align 8
  %7106 = icmp ult i64 %7105, %7101
  %7107 = icmp ult i64 %7105, %7102
  %7108 = or i1 %7106, %7107
  %7109 = zext i1 %7108 to i8
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7109, i8* %7110, align 1
  %7111 = trunc i64 %7105 to i32
  %7112 = and i32 %7111, 255
  %7113 = call i32 @llvm.ctpop.i32(i32 %7112)
  %7114 = trunc i32 %7113 to i8
  %7115 = and i8 %7114, 1
  %7116 = xor i8 %7115, 1
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7116, i8* %7117, align 1
  %7118 = xor i64 %7102, %7101
  %7119 = xor i64 %7118, %7105
  %7120 = lshr i64 %7119, 4
  %7121 = trunc i64 %7120 to i8
  %7122 = and i8 %7121, 1
  %7123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7122, i8* %7123, align 1
  %7124 = icmp eq i64 %7105, 0
  %7125 = zext i1 %7124 to i8
  %7126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7125, i8* %7126, align 1
  %7127 = lshr i64 %7105, 63
  %7128 = trunc i64 %7127 to i8
  %7129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7128, i8* %7129, align 1
  %7130 = lshr i64 %7101, 63
  %7131 = lshr i64 %7102, 63
  %7132 = xor i64 %7127, %7130
  %7133 = xor i64 %7127, %7131
  %7134 = add i64 %7132, %7133
  %7135 = icmp eq i64 %7134, 2
  %7136 = zext i1 %7135 to i8
  %7137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7136, i8* %7137, align 1
  store %struct.Memory* %loadMem_40c64a, %struct.Memory** %MEMORY
  %loadMem_40c64d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7139 = getelementptr inbounds %struct.GPR, %struct.GPR* %7138, i32 0, i32 33
  %7140 = getelementptr inbounds %struct.Reg, %struct.Reg* %7139, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %7140 to i64*
  %7141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7142 = getelementptr inbounds %struct.GPR, %struct.GPR* %7141, i32 0, i32 7
  %7143 = getelementptr inbounds %struct.Reg, %struct.Reg* %7142, i32 0, i32 0
  %RDX.i952 = bitcast %union.anon* %7143 to i64*
  %7144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7145 = getelementptr inbounds %struct.GPR, %struct.GPR* %7144, i32 0, i32 15
  %7146 = getelementptr inbounds %struct.Reg, %struct.Reg* %7145, i32 0, i32 0
  %RBP.i953 = bitcast %union.anon* %7146 to i64*
  %7147 = load i64, i64* %RBP.i953
  %7148 = sub i64 %7147, 8
  %7149 = load i64, i64* %PC.i951
  %7150 = add i64 %7149, 4
  store i64 %7150, i64* %PC.i951
  %7151 = inttoptr i64 %7148 to i32*
  %7152 = load i32, i32* %7151
  %7153 = sext i32 %7152 to i64
  store i64 %7153, i64* %RDX.i952, align 8
  store %struct.Memory* %loadMem_40c64d, %struct.Memory** %MEMORY
  %loadMem_40c651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7155 = getelementptr inbounds %struct.GPR, %struct.GPR* %7154, i32 0, i32 33
  %7156 = getelementptr inbounds %struct.Reg, %struct.Reg* %7155, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %7156 to i64*
  %7157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7158 = getelementptr inbounds %struct.GPR, %struct.GPR* %7157, i32 0, i32 7
  %7159 = getelementptr inbounds %struct.Reg, %struct.Reg* %7158, i32 0, i32 0
  %RDX.i950 = bitcast %union.anon* %7159 to i64*
  %7160 = load i64, i64* %RDX.i950
  %7161 = load i64, i64* %PC.i949
  %7162 = add i64 %7161, 7
  store i64 %7162, i64* %PC.i949
  %7163 = sext i64 %7160 to i128
  %7164 = and i128 %7163, -18446744073709551616
  %7165 = zext i64 %7160 to i128
  %7166 = or i128 %7164, %7165
  %7167 = mul i128 744, %7166
  %7168 = trunc i128 %7167 to i64
  store i64 %7168, i64* %RDX.i950, align 8
  %7169 = sext i64 %7168 to i128
  %7170 = icmp ne i128 %7169, %7167
  %7171 = zext i1 %7170 to i8
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7171, i8* %7172, align 1
  %7173 = trunc i128 %7167 to i32
  %7174 = and i32 %7173, 255
  %7175 = call i32 @llvm.ctpop.i32(i32 %7174)
  %7176 = trunc i32 %7175 to i8
  %7177 = and i8 %7176, 1
  %7178 = xor i8 %7177, 1
  %7179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7178, i8* %7179, align 1
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7180, align 1
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7181, align 1
  %7182 = lshr i64 %7168, 63
  %7183 = trunc i64 %7182 to i8
  %7184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7183, i8* %7184, align 1
  %7185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7171, i8* %7185, align 1
  store %struct.Memory* %loadMem_40c651, %struct.Memory** %MEMORY
  %loadMem_40c658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7187 = getelementptr inbounds %struct.GPR, %struct.GPR* %7186, i32 0, i32 33
  %7188 = getelementptr inbounds %struct.Reg, %struct.Reg* %7187, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %7188 to i64*
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7190 = getelementptr inbounds %struct.GPR, %struct.GPR* %7189, i32 0, i32 1
  %7191 = getelementptr inbounds %struct.Reg, %struct.Reg* %7190, i32 0, i32 0
  %RAX.i947 = bitcast %union.anon* %7191 to i64*
  %7192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7193 = getelementptr inbounds %struct.GPR, %struct.GPR* %7192, i32 0, i32 11
  %7194 = getelementptr inbounds %struct.Reg, %struct.Reg* %7193, i32 0, i32 0
  %RDI.i948 = bitcast %union.anon* %7194 to i64*
  %7195 = load i64, i64* %RAX.i947
  %7196 = load i64, i64* %PC.i946
  %7197 = add i64 %7196, 3
  store i64 %7197, i64* %PC.i946
  store i64 %7195, i64* %RDI.i948, align 8
  store %struct.Memory* %loadMem_40c658, %struct.Memory** %MEMORY
  %loadMem_40c65b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7199 = getelementptr inbounds %struct.GPR, %struct.GPR* %7198, i32 0, i32 33
  %7200 = getelementptr inbounds %struct.Reg, %struct.Reg* %7199, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %7200 to i64*
  %7201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7202 = getelementptr inbounds %struct.GPR, %struct.GPR* %7201, i32 0, i32 7
  %7203 = getelementptr inbounds %struct.Reg, %struct.Reg* %7202, i32 0, i32 0
  %RDX.i944 = bitcast %union.anon* %7203 to i64*
  %7204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7205 = getelementptr inbounds %struct.GPR, %struct.GPR* %7204, i32 0, i32 11
  %7206 = getelementptr inbounds %struct.Reg, %struct.Reg* %7205, i32 0, i32 0
  %RDI.i945 = bitcast %union.anon* %7206 to i64*
  %7207 = load i64, i64* %RDI.i945
  %7208 = load i64, i64* %RDX.i944
  %7209 = load i64, i64* %PC.i943
  %7210 = add i64 %7209, 3
  store i64 %7210, i64* %PC.i943
  %7211 = add i64 %7208, %7207
  store i64 %7211, i64* %RDI.i945, align 8
  %7212 = icmp ult i64 %7211, %7207
  %7213 = icmp ult i64 %7211, %7208
  %7214 = or i1 %7212, %7213
  %7215 = zext i1 %7214 to i8
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7215, i8* %7216, align 1
  %7217 = trunc i64 %7211 to i32
  %7218 = and i32 %7217, 255
  %7219 = call i32 @llvm.ctpop.i32(i32 %7218)
  %7220 = trunc i32 %7219 to i8
  %7221 = and i8 %7220, 1
  %7222 = xor i8 %7221, 1
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7222, i8* %7223, align 1
  %7224 = xor i64 %7208, %7207
  %7225 = xor i64 %7224, %7211
  %7226 = lshr i64 %7225, 4
  %7227 = trunc i64 %7226 to i8
  %7228 = and i8 %7227, 1
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7228, i8* %7229, align 1
  %7230 = icmp eq i64 %7211, 0
  %7231 = zext i1 %7230 to i8
  %7232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7231, i8* %7232, align 1
  %7233 = lshr i64 %7211, 63
  %7234 = trunc i64 %7233 to i8
  %7235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7234, i8* %7235, align 1
  %7236 = lshr i64 %7207, 63
  %7237 = lshr i64 %7208, 63
  %7238 = xor i64 %7233, %7236
  %7239 = xor i64 %7233, %7237
  %7240 = add i64 %7238, %7239
  %7241 = icmp eq i64 %7240, 2
  %7242 = zext i1 %7241 to i8
  %7243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7242, i8* %7243, align 1
  store %struct.Memory* %loadMem_40c65b, %struct.Memory** %MEMORY
  %loadMem_40c65e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7245 = getelementptr inbounds %struct.GPR, %struct.GPR* %7244, i32 0, i32 33
  %7246 = getelementptr inbounds %struct.Reg, %struct.Reg* %7245, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %7246 to i64*
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7248 = getelementptr inbounds %struct.GPR, %struct.GPR* %7247, i32 0, i32 17
  %7249 = getelementptr inbounds %struct.Reg, %struct.Reg* %7248, i32 0, i32 0
  %R8D.i941 = bitcast %union.anon* %7249 to i32*
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7251 = getelementptr inbounds %struct.GPR, %struct.GPR* %7250, i32 0, i32 11
  %7252 = getelementptr inbounds %struct.Reg, %struct.Reg* %7251, i32 0, i32 0
  %RDI.i942 = bitcast %union.anon* %7252 to i64*
  %7253 = bitcast i32* %R8D.i941 to i64*
  %7254 = load i64, i64* %RDI.i942
  %7255 = add i64 %7254, 96
  %7256 = load i64, i64* %PC.i940
  %7257 = add i64 %7256, 4
  store i64 %7257, i64* %PC.i940
  %7258 = inttoptr i64 %7255 to i32*
  %7259 = load i32, i32* %7258
  %7260 = zext i32 %7259 to i64
  store i64 %7260, i64* %7253, align 8
  store %struct.Memory* %loadMem_40c65e, %struct.Memory** %MEMORY
  %loadMem_40c662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7262 = getelementptr inbounds %struct.GPR, %struct.GPR* %7261, i32 0, i32 33
  %7263 = getelementptr inbounds %struct.Reg, %struct.Reg* %7262, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %7263 to i64*
  %7264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7265 = getelementptr inbounds %struct.GPR, %struct.GPR* %7264, i32 0, i32 17
  %7266 = getelementptr inbounds %struct.Reg, %struct.Reg* %7265, i32 0, i32 0
  %R8D.i938 = bitcast %union.anon* %7266 to i32*
  %7267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7268 = getelementptr inbounds %struct.GPR, %struct.GPR* %7267, i32 0, i32 19
  %7269 = getelementptr inbounds %struct.Reg, %struct.Reg* %7268, i32 0, i32 0
  %R9D.i939 = bitcast %union.anon* %7269 to i32*
  %7270 = bitcast i32* %R9D.i939 to i64*
  %7271 = load i32, i32* %R8D.i938
  %7272 = zext i32 %7271 to i64
  %7273 = load i64, i64* %PC.i937
  %7274 = add i64 %7273, 3
  store i64 %7274, i64* %PC.i937
  %7275 = and i64 %7272, 4294967295
  store i64 %7275, i64* %7270, align 8
  store %struct.Memory* %loadMem_40c662, %struct.Memory** %MEMORY
  %loadMem_40c665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7277 = getelementptr inbounds %struct.GPR, %struct.GPR* %7276, i32 0, i32 33
  %7278 = getelementptr inbounds %struct.Reg, %struct.Reg* %7277, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %7278 to i64*
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7280 = getelementptr inbounds %struct.GPR, %struct.GPR* %7279, i32 0, i32 19
  %7281 = getelementptr inbounds %struct.Reg, %struct.Reg* %7280, i32 0, i32 0
  %R9D.i936 = bitcast %union.anon* %7281 to i32*
  %7282 = bitcast i32* %R9D.i936 to i64*
  %7283 = load i32, i32* %R9D.i936
  %7284 = zext i32 %7283 to i64
  %7285 = load i64, i64* %PC.i935
  %7286 = add i64 %7285, 4
  store i64 %7286, i64* %PC.i935
  %7287 = add i32 1, %7283
  %7288 = zext i32 %7287 to i64
  store i64 %7288, i64* %7282, align 8
  %7289 = icmp ult i32 %7287, %7283
  %7290 = icmp ult i32 %7287, 1
  %7291 = or i1 %7289, %7290
  %7292 = zext i1 %7291 to i8
  %7293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7292, i8* %7293, align 1
  %7294 = and i32 %7287, 255
  %7295 = call i32 @llvm.ctpop.i32(i32 %7294)
  %7296 = trunc i32 %7295 to i8
  %7297 = and i8 %7296, 1
  %7298 = xor i8 %7297, 1
  %7299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7298, i8* %7299, align 1
  %7300 = xor i64 1, %7284
  %7301 = trunc i64 %7300 to i32
  %7302 = xor i32 %7301, %7287
  %7303 = lshr i32 %7302, 4
  %7304 = trunc i32 %7303 to i8
  %7305 = and i8 %7304, 1
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7305, i8* %7306, align 1
  %7307 = icmp eq i32 %7287, 0
  %7308 = zext i1 %7307 to i8
  %7309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7308, i8* %7309, align 1
  %7310 = lshr i32 %7287, 31
  %7311 = trunc i32 %7310 to i8
  %7312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7311, i8* %7312, align 1
  %7313 = lshr i32 %7283, 31
  %7314 = xor i32 %7310, %7313
  %7315 = add i32 %7314, %7310
  %7316 = icmp eq i32 %7315, 2
  %7317 = zext i1 %7316 to i8
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7317, i8* %7318, align 1
  store %struct.Memory* %loadMem_40c665, %struct.Memory** %MEMORY
  %loadMem_40c669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7320 = getelementptr inbounds %struct.GPR, %struct.GPR* %7319, i32 0, i32 33
  %7321 = getelementptr inbounds %struct.Reg, %struct.Reg* %7320, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %7321 to i64*
  %7322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7323 = getelementptr inbounds %struct.GPR, %struct.GPR* %7322, i32 0, i32 19
  %7324 = getelementptr inbounds %struct.Reg, %struct.Reg* %7323, i32 0, i32 0
  %R9D.i933 = bitcast %union.anon* %7324 to i32*
  %7325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7326 = getelementptr inbounds %struct.GPR, %struct.GPR* %7325, i32 0, i32 11
  %7327 = getelementptr inbounds %struct.Reg, %struct.Reg* %7326, i32 0, i32 0
  %RDI.i934 = bitcast %union.anon* %7327 to i64*
  %7328 = load i64, i64* %RDI.i934
  %7329 = add i64 %7328, 96
  %7330 = load i32, i32* %R9D.i933
  %7331 = zext i32 %7330 to i64
  %7332 = load i64, i64* %PC.i932
  %7333 = add i64 %7332, 4
  store i64 %7333, i64* %PC.i932
  %7334 = inttoptr i64 %7329 to i32*
  store i32 %7330, i32* %7334
  store %struct.Memory* %loadMem_40c669, %struct.Memory** %MEMORY
  %loadMem_40c66d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7336 = getelementptr inbounds %struct.GPR, %struct.GPR* %7335, i32 0, i32 33
  %7337 = getelementptr inbounds %struct.Reg, %struct.Reg* %7336, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %7337 to i64*
  %7338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7339 = getelementptr inbounds %struct.GPR, %struct.GPR* %7338, i32 0, i32 17
  %7340 = getelementptr inbounds %struct.Reg, %struct.Reg* %7339, i32 0, i32 0
  %R8D.i930 = bitcast %union.anon* %7340 to i32*
  %7341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7342 = getelementptr inbounds %struct.GPR, %struct.GPR* %7341, i32 0, i32 7
  %7343 = getelementptr inbounds %struct.Reg, %struct.Reg* %7342, i32 0, i32 0
  %RDX.i931 = bitcast %union.anon* %7343 to i64*
  %7344 = load i32, i32* %R8D.i930
  %7345 = zext i32 %7344 to i64
  %7346 = load i64, i64* %PC.i929
  %7347 = add i64 %7346, 3
  store i64 %7347, i64* %PC.i929
  %7348 = shl i64 %7345, 32
  %7349 = ashr exact i64 %7348, 32
  store i64 %7349, i64* %RDX.i931, align 8
  store %struct.Memory* %loadMem_40c66d, %struct.Memory** %MEMORY
  %loadMem_40c670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7351 = getelementptr inbounds %struct.GPR, %struct.GPR* %7350, i32 0, i32 33
  %7352 = getelementptr inbounds %struct.Reg, %struct.Reg* %7351, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %7352 to i64*
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7354 = getelementptr inbounds %struct.GPR, %struct.GPR* %7353, i32 0, i32 5
  %7355 = getelementptr inbounds %struct.Reg, %struct.Reg* %7354, i32 0, i32 0
  %ECX.i926 = bitcast %union.anon* %7355 to i32*
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7357 = getelementptr inbounds %struct.GPR, %struct.GPR* %7356, i32 0, i32 7
  %7358 = getelementptr inbounds %struct.Reg, %struct.Reg* %7357, i32 0, i32 0
  %RDX.i927 = bitcast %union.anon* %7358 to i64*
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7360 = getelementptr inbounds %struct.GPR, %struct.GPR* %7359, i32 0, i32 9
  %7361 = getelementptr inbounds %struct.Reg, %struct.Reg* %7360, i32 0, i32 0
  %RSI.i928 = bitcast %union.anon* %7361 to i64*
  %7362 = load i64, i64* %RSI.i928
  %7363 = load i64, i64* %RDX.i927
  %7364 = mul i64 %7363, 4
  %7365 = add i64 %7362, 100
  %7366 = add i64 %7365, %7364
  %7367 = load i32, i32* %ECX.i926
  %7368 = zext i32 %7367 to i64
  %7369 = load i64, i64* %PC.i925
  %7370 = add i64 %7369, 4
  store i64 %7370, i64* %PC.i925
  %7371 = inttoptr i64 %7366 to i32*
  store i32 %7367, i32* %7371
  store %struct.Memory* %loadMem_40c670, %struct.Memory** %MEMORY
  %loadMem_40c674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7373 = getelementptr inbounds %struct.GPR, %struct.GPR* %7372, i32 0, i32 33
  %7374 = getelementptr inbounds %struct.Reg, %struct.Reg* %7373, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %7374 to i64*
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7376 = getelementptr inbounds %struct.GPR, %struct.GPR* %7375, i32 0, i32 5
  %7377 = getelementptr inbounds %struct.Reg, %struct.Reg* %7376, i32 0, i32 0
  %RCX.i923 = bitcast %union.anon* %7377 to i64*
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7379 = getelementptr inbounds %struct.GPR, %struct.GPR* %7378, i32 0, i32 15
  %7380 = getelementptr inbounds %struct.Reg, %struct.Reg* %7379, i32 0, i32 0
  %RBP.i924 = bitcast %union.anon* %7380 to i64*
  %7381 = load i64, i64* %RBP.i924
  %7382 = sub i64 %7381, 4
  %7383 = load i64, i64* %PC.i922
  %7384 = add i64 %7383, 3
  store i64 %7384, i64* %PC.i922
  %7385 = inttoptr i64 %7382 to i32*
  %7386 = load i32, i32* %7385
  %7387 = zext i32 %7386 to i64
  store i64 %7387, i64* %RCX.i923, align 8
  store %struct.Memory* %loadMem_40c674, %struct.Memory** %MEMORY
  %loadMem_40c677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7389 = getelementptr inbounds %struct.GPR, %struct.GPR* %7388, i32 0, i32 33
  %7390 = getelementptr inbounds %struct.Reg, %struct.Reg* %7389, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %7390 to i64*
  %7391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7392 = getelementptr inbounds %struct.GPR, %struct.GPR* %7391, i32 0, i32 5
  %7393 = getelementptr inbounds %struct.Reg, %struct.Reg* %7392, i32 0, i32 0
  %RCX.i921 = bitcast %union.anon* %7393 to i64*
  %7394 = load i64, i64* %RCX.i921
  %7395 = load i64, i64* %PC.i920
  %7396 = add i64 %7395, 3
  store i64 %7396, i64* %PC.i920
  %7397 = trunc i64 %7394 to i32
  %7398 = sub i32 %7397, 1
  %7399 = zext i32 %7398 to i64
  store i64 %7399, i64* %RCX.i921, align 8
  %7400 = icmp ult i32 %7397, 1
  %7401 = zext i1 %7400 to i8
  %7402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7401, i8* %7402, align 1
  %7403 = and i32 %7398, 255
  %7404 = call i32 @llvm.ctpop.i32(i32 %7403)
  %7405 = trunc i32 %7404 to i8
  %7406 = and i8 %7405, 1
  %7407 = xor i8 %7406, 1
  %7408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7407, i8* %7408, align 1
  %7409 = xor i64 1, %7394
  %7410 = trunc i64 %7409 to i32
  %7411 = xor i32 %7410, %7398
  %7412 = lshr i32 %7411, 4
  %7413 = trunc i32 %7412 to i8
  %7414 = and i8 %7413, 1
  %7415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7414, i8* %7415, align 1
  %7416 = icmp eq i32 %7398, 0
  %7417 = zext i1 %7416 to i8
  %7418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7417, i8* %7418, align 1
  %7419 = lshr i32 %7398, 31
  %7420 = trunc i32 %7419 to i8
  %7421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7420, i8* %7421, align 1
  %7422 = lshr i32 %7397, 31
  %7423 = xor i32 %7419, %7422
  %7424 = add i32 %7423, %7422
  %7425 = icmp eq i32 %7424, 2
  %7426 = zext i1 %7425 to i8
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7426, i8* %7427, align 1
  store %struct.Memory* %loadMem_40c677, %struct.Memory** %MEMORY
  %loadMem_40c67a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7429 = getelementptr inbounds %struct.GPR, %struct.GPR* %7428, i32 0, i32 33
  %7430 = getelementptr inbounds %struct.Reg, %struct.Reg* %7429, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %7430 to i64*
  %7431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7432 = getelementptr inbounds %struct.GPR, %struct.GPR* %7431, i32 0, i32 5
  %7433 = getelementptr inbounds %struct.Reg, %struct.Reg* %7432, i32 0, i32 0
  %ECX.i918 = bitcast %union.anon* %7433 to i32*
  %7434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7435 = getelementptr inbounds %struct.GPR, %struct.GPR* %7434, i32 0, i32 7
  %7436 = getelementptr inbounds %struct.Reg, %struct.Reg* %7435, i32 0, i32 0
  %RDX.i919 = bitcast %union.anon* %7436 to i64*
  %7437 = load i32, i32* %ECX.i918
  %7438 = zext i32 %7437 to i64
  %7439 = load i64, i64* %PC.i917
  %7440 = add i64 %7439, 3
  store i64 %7440, i64* %PC.i917
  %7441 = shl i64 %7438, 32
  %7442 = ashr exact i64 %7441, 32
  store i64 %7442, i64* %RDX.i919, align 8
  store %struct.Memory* %loadMem_40c67a, %struct.Memory** %MEMORY
  %loadMem_40c67d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7444 = getelementptr inbounds %struct.GPR, %struct.GPR* %7443, i32 0, i32 33
  %7445 = getelementptr inbounds %struct.Reg, %struct.Reg* %7444, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %7445 to i64*
  %7446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7447 = getelementptr inbounds %struct.GPR, %struct.GPR* %7446, i32 0, i32 7
  %7448 = getelementptr inbounds %struct.Reg, %struct.Reg* %7447, i32 0, i32 0
  %RDX.i916 = bitcast %union.anon* %7448 to i64*
  %7449 = load i64, i64* %RDX.i916
  %7450 = mul i64 %7449, 4
  %7451 = add i64 %7450, 11187184
  %7452 = load i64, i64* %PC.i915
  %7453 = add i64 %7452, 8
  store i64 %7453, i64* %PC.i915
  %7454 = inttoptr i64 %7451 to i32*
  %7455 = load i32, i32* %7454
  %7456 = sext i32 %7455 to i64
  store i64 %7456, i64* %RDX.i916, align 8
  store %struct.Memory* %loadMem_40c67d, %struct.Memory** %MEMORY
  %loadMem_40c685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7458 = getelementptr inbounds %struct.GPR, %struct.GPR* %7457, i32 0, i32 33
  %7459 = getelementptr inbounds %struct.Reg, %struct.Reg* %7458, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %7459 to i64*
  %7460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7461 = getelementptr inbounds %struct.GPR, %struct.GPR* %7460, i32 0, i32 7
  %7462 = getelementptr inbounds %struct.Reg, %struct.Reg* %7461, i32 0, i32 0
  %RDX.i914 = bitcast %union.anon* %7462 to i64*
  %7463 = load i64, i64* %RDX.i914
  %7464 = load i64, i64* %PC.i913
  %7465 = add i64 %7464, 7
  store i64 %7465, i64* %PC.i913
  %7466 = sext i64 %7463 to i128
  %7467 = and i128 %7466, -18446744073709551616
  %7468 = zext i64 %7463 to i128
  %7469 = or i128 %7467, %7468
  %7470 = mul i128 744, %7469
  %7471 = trunc i128 %7470 to i64
  store i64 %7471, i64* %RDX.i914, align 8
  %7472 = sext i64 %7471 to i128
  %7473 = icmp ne i128 %7472, %7470
  %7474 = zext i1 %7473 to i8
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7474, i8* %7475, align 1
  %7476 = trunc i128 %7470 to i32
  %7477 = and i32 %7476, 255
  %7478 = call i32 @llvm.ctpop.i32(i32 %7477)
  %7479 = trunc i32 %7478 to i8
  %7480 = and i8 %7479, 1
  %7481 = xor i8 %7480, 1
  %7482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7481, i8* %7482, align 1
  %7483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7483, align 1
  %7484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7484, align 1
  %7485 = lshr i64 %7471, 63
  %7486 = trunc i64 %7485 to i8
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7486, i8* %7487, align 1
  %7488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7474, i8* %7488, align 1
  store %struct.Memory* %loadMem_40c685, %struct.Memory** %MEMORY
  %loadMem_40c68c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7490 = getelementptr inbounds %struct.GPR, %struct.GPR* %7489, i32 0, i32 33
  %7491 = getelementptr inbounds %struct.Reg, %struct.Reg* %7490, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %7491 to i64*
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7493 = getelementptr inbounds %struct.GPR, %struct.GPR* %7492, i32 0, i32 1
  %7494 = getelementptr inbounds %struct.Reg, %struct.Reg* %7493, i32 0, i32 0
  %RAX.i911 = bitcast %union.anon* %7494 to i64*
  %7495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7496 = getelementptr inbounds %struct.GPR, %struct.GPR* %7495, i32 0, i32 9
  %7497 = getelementptr inbounds %struct.Reg, %struct.Reg* %7496, i32 0, i32 0
  %RSI.i912 = bitcast %union.anon* %7497 to i64*
  %7498 = load i64, i64* %RAX.i911
  %7499 = load i64, i64* %PC.i910
  %7500 = add i64 %7499, 3
  store i64 %7500, i64* %PC.i910
  store i64 %7498, i64* %RSI.i912, align 8
  store %struct.Memory* %loadMem_40c68c, %struct.Memory** %MEMORY
  %loadMem_40c68f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7502 = getelementptr inbounds %struct.GPR, %struct.GPR* %7501, i32 0, i32 33
  %7503 = getelementptr inbounds %struct.Reg, %struct.Reg* %7502, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %7503 to i64*
  %7504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7505 = getelementptr inbounds %struct.GPR, %struct.GPR* %7504, i32 0, i32 7
  %7506 = getelementptr inbounds %struct.Reg, %struct.Reg* %7505, i32 0, i32 0
  %RDX.i908 = bitcast %union.anon* %7506 to i64*
  %7507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7508 = getelementptr inbounds %struct.GPR, %struct.GPR* %7507, i32 0, i32 9
  %7509 = getelementptr inbounds %struct.Reg, %struct.Reg* %7508, i32 0, i32 0
  %RSI.i909 = bitcast %union.anon* %7509 to i64*
  %7510 = load i64, i64* %RSI.i909
  %7511 = load i64, i64* %RDX.i908
  %7512 = load i64, i64* %PC.i907
  %7513 = add i64 %7512, 3
  store i64 %7513, i64* %PC.i907
  %7514 = add i64 %7511, %7510
  store i64 %7514, i64* %RSI.i909, align 8
  %7515 = icmp ult i64 %7514, %7510
  %7516 = icmp ult i64 %7514, %7511
  %7517 = or i1 %7515, %7516
  %7518 = zext i1 %7517 to i8
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7518, i8* %7519, align 1
  %7520 = trunc i64 %7514 to i32
  %7521 = and i32 %7520, 255
  %7522 = call i32 @llvm.ctpop.i32(i32 %7521)
  %7523 = trunc i32 %7522 to i8
  %7524 = and i8 %7523, 1
  %7525 = xor i8 %7524, 1
  %7526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7525, i8* %7526, align 1
  %7527 = xor i64 %7511, %7510
  %7528 = xor i64 %7527, %7514
  %7529 = lshr i64 %7528, 4
  %7530 = trunc i64 %7529 to i8
  %7531 = and i8 %7530, 1
  %7532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7531, i8* %7532, align 1
  %7533 = icmp eq i64 %7514, 0
  %7534 = zext i1 %7533 to i8
  %7535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7534, i8* %7535, align 1
  %7536 = lshr i64 %7514, 63
  %7537 = trunc i64 %7536 to i8
  %7538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7537, i8* %7538, align 1
  %7539 = lshr i64 %7510, 63
  %7540 = lshr i64 %7511, 63
  %7541 = xor i64 %7536, %7539
  %7542 = xor i64 %7536, %7540
  %7543 = add i64 %7541, %7542
  %7544 = icmp eq i64 %7543, 2
  %7545 = zext i1 %7544 to i8
  %7546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7545, i8* %7546, align 1
  store %struct.Memory* %loadMem_40c68f, %struct.Memory** %MEMORY
  %loadMem_40c692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7548 = getelementptr inbounds %struct.GPR, %struct.GPR* %7547, i32 0, i32 33
  %7549 = getelementptr inbounds %struct.Reg, %struct.Reg* %7548, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %7549 to i64*
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7551 = getelementptr inbounds %struct.GPR, %struct.GPR* %7550, i32 0, i32 9
  %7552 = getelementptr inbounds %struct.Reg, %struct.Reg* %7551, i32 0, i32 0
  %RSI.i906 = bitcast %union.anon* %7552 to i64*
  %7553 = load i64, i64* %RSI.i906
  %7554 = load i64, i64* %PC.i905
  %7555 = add i64 %7554, 4
  store i64 %7555, i64* %PC.i905
  %7556 = add i64 96, %7553
  store i64 %7556, i64* %RSI.i906, align 8
  %7557 = icmp ult i64 %7556, %7553
  %7558 = icmp ult i64 %7556, 96
  %7559 = or i1 %7557, %7558
  %7560 = zext i1 %7559 to i8
  %7561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7560, i8* %7561, align 1
  %7562 = trunc i64 %7556 to i32
  %7563 = and i32 %7562, 255
  %7564 = call i32 @llvm.ctpop.i32(i32 %7563)
  %7565 = trunc i32 %7564 to i8
  %7566 = and i8 %7565, 1
  %7567 = xor i8 %7566, 1
  %7568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7567, i8* %7568, align 1
  %7569 = xor i64 96, %7553
  %7570 = xor i64 %7569, %7556
  %7571 = lshr i64 %7570, 4
  %7572 = trunc i64 %7571 to i8
  %7573 = and i8 %7572, 1
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7573, i8* %7574, align 1
  %7575 = icmp eq i64 %7556, 0
  %7576 = zext i1 %7575 to i8
  %7577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7576, i8* %7577, align 1
  %7578 = lshr i64 %7556, 63
  %7579 = trunc i64 %7578 to i8
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7579, i8* %7580, align 1
  %7581 = lshr i64 %7553, 63
  %7582 = xor i64 %7578, %7581
  %7583 = add i64 %7582, %7578
  %7584 = icmp eq i64 %7583, 2
  %7585 = zext i1 %7584 to i8
  %7586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7585, i8* %7586, align 1
  store %struct.Memory* %loadMem_40c692, %struct.Memory** %MEMORY
  %loadMem_40c696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7588 = getelementptr inbounds %struct.GPR, %struct.GPR* %7587, i32 0, i32 33
  %7589 = getelementptr inbounds %struct.Reg, %struct.Reg* %7588, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %7589 to i64*
  %7590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7591 = getelementptr inbounds %struct.GPR, %struct.GPR* %7590, i32 0, i32 7
  %7592 = getelementptr inbounds %struct.Reg, %struct.Reg* %7591, i32 0, i32 0
  %RDX.i904 = bitcast %union.anon* %7592 to i64*
  %7593 = load i64, i64* %PC.i903
  %7594 = add i64 %7593, 8
  store i64 %7594, i64* %PC.i903
  %7595 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %7595, i64* %RDX.i904, align 8
  store %struct.Memory* %loadMem_40c696, %struct.Memory** %MEMORY
  %loadMem_40c69e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7597 = getelementptr inbounds %struct.GPR, %struct.GPR* %7596, i32 0, i32 33
  %7598 = getelementptr inbounds %struct.Reg, %struct.Reg* %7597, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %7598 to i64*
  %7599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7600 = getelementptr inbounds %struct.GPR, %struct.GPR* %7599, i32 0, i32 7
  %7601 = getelementptr inbounds %struct.Reg, %struct.Reg* %7600, i32 0, i32 0
  %RDX.i901 = bitcast %union.anon* %7601 to i64*
  %7602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7603 = getelementptr inbounds %struct.GPR, %struct.GPR* %7602, i32 0, i32 9
  %7604 = getelementptr inbounds %struct.Reg, %struct.Reg* %7603, i32 0, i32 0
  %RSI.i902 = bitcast %union.anon* %7604 to i64*
  %7605 = load i64, i64* %RDX.i901
  %7606 = load i64, i64* %RSI.i902
  %7607 = load i64, i64* %PC.i900
  %7608 = add i64 %7607, 3
  store i64 %7608, i64* %PC.i900
  %7609 = inttoptr i64 %7605 to i64*
  store i64 %7606, i64* %7609
  store %struct.Memory* %loadMem_40c69e, %struct.Memory** %MEMORY
  %loadMem_40c6a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7611 = getelementptr inbounds %struct.GPR, %struct.GPR* %7610, i32 0, i32 33
  %7612 = getelementptr inbounds %struct.Reg, %struct.Reg* %7611, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %7612 to i64*
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7614 = getelementptr inbounds %struct.GPR, %struct.GPR* %7613, i32 0, i32 5
  %7615 = getelementptr inbounds %struct.Reg, %struct.Reg* %7614, i32 0, i32 0
  %RCX.i898 = bitcast %union.anon* %7615 to i64*
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7617 = getelementptr inbounds %struct.GPR, %struct.GPR* %7616, i32 0, i32 15
  %7618 = getelementptr inbounds %struct.Reg, %struct.Reg* %7617, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %7618 to i64*
  %7619 = load i64, i64* %RBP.i899
  %7620 = sub i64 %7619, 4
  %7621 = load i64, i64* %PC.i897
  %7622 = add i64 %7621, 3
  store i64 %7622, i64* %PC.i897
  %7623 = inttoptr i64 %7620 to i32*
  %7624 = load i32, i32* %7623
  %7625 = zext i32 %7624 to i64
  store i64 %7625, i64* %RCX.i898, align 8
  store %struct.Memory* %loadMem_40c6a1, %struct.Memory** %MEMORY
  %loadMem_40c6a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7627 = getelementptr inbounds %struct.GPR, %struct.GPR* %7626, i32 0, i32 33
  %7628 = getelementptr inbounds %struct.Reg, %struct.Reg* %7627, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %7628 to i64*
  %7629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7630 = getelementptr inbounds %struct.GPR, %struct.GPR* %7629, i32 0, i32 5
  %7631 = getelementptr inbounds %struct.Reg, %struct.Reg* %7630, i32 0, i32 0
  %RCX.i896 = bitcast %union.anon* %7631 to i64*
  %7632 = load i64, i64* %RCX.i896
  %7633 = load i64, i64* %PC.i895
  %7634 = add i64 %7633, 3
  store i64 %7634, i64* %PC.i895
  %7635 = trunc i64 %7632 to i32
  %7636 = sub i32 %7635, 1
  %7637 = zext i32 %7636 to i64
  store i64 %7637, i64* %RCX.i896, align 8
  %7638 = icmp ult i32 %7635, 1
  %7639 = zext i1 %7638 to i8
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7639, i8* %7640, align 1
  %7641 = and i32 %7636, 255
  %7642 = call i32 @llvm.ctpop.i32(i32 %7641)
  %7643 = trunc i32 %7642 to i8
  %7644 = and i8 %7643, 1
  %7645 = xor i8 %7644, 1
  %7646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7645, i8* %7646, align 1
  %7647 = xor i64 1, %7632
  %7648 = trunc i64 %7647 to i32
  %7649 = xor i32 %7648, %7636
  %7650 = lshr i32 %7649, 4
  %7651 = trunc i32 %7650 to i8
  %7652 = and i8 %7651, 1
  %7653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7652, i8* %7653, align 1
  %7654 = icmp eq i32 %7636, 0
  %7655 = zext i1 %7654 to i8
  %7656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7655, i8* %7656, align 1
  %7657 = lshr i32 %7636, 31
  %7658 = trunc i32 %7657 to i8
  %7659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7658, i8* %7659, align 1
  %7660 = lshr i32 %7635, 31
  %7661 = xor i32 %7657, %7660
  %7662 = add i32 %7661, %7660
  %7663 = icmp eq i32 %7662, 2
  %7664 = zext i1 %7663 to i8
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7664, i8* %7665, align 1
  store %struct.Memory* %loadMem_40c6a4, %struct.Memory** %MEMORY
  %loadMem_40c6a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7667 = getelementptr inbounds %struct.GPR, %struct.GPR* %7666, i32 0, i32 33
  %7668 = getelementptr inbounds %struct.Reg, %struct.Reg* %7667, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %7668 to i64*
  %7669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7670 = getelementptr inbounds %struct.GPR, %struct.GPR* %7669, i32 0, i32 5
  %7671 = getelementptr inbounds %struct.Reg, %struct.Reg* %7670, i32 0, i32 0
  %ECX.i893 = bitcast %union.anon* %7671 to i32*
  %7672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7673 = getelementptr inbounds %struct.GPR, %struct.GPR* %7672, i32 0, i32 7
  %7674 = getelementptr inbounds %struct.Reg, %struct.Reg* %7673, i32 0, i32 0
  %RDX.i894 = bitcast %union.anon* %7674 to i64*
  %7675 = load i32, i32* %ECX.i893
  %7676 = zext i32 %7675 to i64
  %7677 = load i64, i64* %PC.i892
  %7678 = add i64 %7677, 3
  store i64 %7678, i64* %PC.i892
  %7679 = shl i64 %7676, 32
  %7680 = ashr exact i64 %7679, 32
  store i64 %7680, i64* %RDX.i894, align 8
  store %struct.Memory* %loadMem_40c6a7, %struct.Memory** %MEMORY
  %loadMem_40c6aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7682 = getelementptr inbounds %struct.GPR, %struct.GPR* %7681, i32 0, i32 33
  %7683 = getelementptr inbounds %struct.Reg, %struct.Reg* %7682, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %7683 to i64*
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7685 = getelementptr inbounds %struct.GPR, %struct.GPR* %7684, i32 0, i32 7
  %7686 = getelementptr inbounds %struct.Reg, %struct.Reg* %7685, i32 0, i32 0
  %RDX.i891 = bitcast %union.anon* %7686 to i64*
  %7687 = load i64, i64* %RDX.i891
  %7688 = mul i64 %7687, 4
  %7689 = add i64 %7688, 11187184
  %7690 = load i64, i64* %PC.i890
  %7691 = add i64 %7690, 8
  store i64 %7691, i64* %PC.i890
  %7692 = inttoptr i64 %7689 to i32*
  %7693 = load i32, i32* %7692
  %7694 = sext i32 %7693 to i64
  store i64 %7694, i64* %RDX.i891, align 8
  store %struct.Memory* %loadMem_40c6aa, %struct.Memory** %MEMORY
  %loadMem_40c6b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7696 = getelementptr inbounds %struct.GPR, %struct.GPR* %7695, i32 0, i32 33
  %7697 = getelementptr inbounds %struct.Reg, %struct.Reg* %7696, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %7697 to i64*
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7699 = getelementptr inbounds %struct.GPR, %struct.GPR* %7698, i32 0, i32 7
  %7700 = getelementptr inbounds %struct.Reg, %struct.Reg* %7699, i32 0, i32 0
  %RDX.i889 = bitcast %union.anon* %7700 to i64*
  %7701 = load i64, i64* %RDX.i889
  %7702 = load i64, i64* %PC.i888
  %7703 = add i64 %7702, 7
  store i64 %7703, i64* %PC.i888
  %7704 = sext i64 %7701 to i128
  %7705 = and i128 %7704, -18446744073709551616
  %7706 = zext i64 %7701 to i128
  %7707 = or i128 %7705, %7706
  %7708 = mul i128 744, %7707
  %7709 = trunc i128 %7708 to i64
  store i64 %7709, i64* %RDX.i889, align 8
  %7710 = sext i64 %7709 to i128
  %7711 = icmp ne i128 %7710, %7708
  %7712 = zext i1 %7711 to i8
  %7713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7712, i8* %7713, align 1
  %7714 = trunc i128 %7708 to i32
  %7715 = and i32 %7714, 255
  %7716 = call i32 @llvm.ctpop.i32(i32 %7715)
  %7717 = trunc i32 %7716 to i8
  %7718 = and i8 %7717, 1
  %7719 = xor i8 %7718, 1
  %7720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7719, i8* %7720, align 1
  %7721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7721, align 1
  %7722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7722, align 1
  %7723 = lshr i64 %7709, 63
  %7724 = trunc i64 %7723 to i8
  %7725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7724, i8* %7725, align 1
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7712, i8* %7726, align 1
  store %struct.Memory* %loadMem_40c6b2, %struct.Memory** %MEMORY
  %loadMem_40c6b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7728 = getelementptr inbounds %struct.GPR, %struct.GPR* %7727, i32 0, i32 33
  %7729 = getelementptr inbounds %struct.Reg, %struct.Reg* %7728, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %7729 to i64*
  %7730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7731 = getelementptr inbounds %struct.GPR, %struct.GPR* %7730, i32 0, i32 1
  %7732 = getelementptr inbounds %struct.Reg, %struct.Reg* %7731, i32 0, i32 0
  %RAX.i886 = bitcast %union.anon* %7732 to i64*
  %7733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7734 = getelementptr inbounds %struct.GPR, %struct.GPR* %7733, i32 0, i32 9
  %7735 = getelementptr inbounds %struct.Reg, %struct.Reg* %7734, i32 0, i32 0
  %RSI.i887 = bitcast %union.anon* %7735 to i64*
  %7736 = load i64, i64* %RAX.i886
  %7737 = load i64, i64* %PC.i885
  %7738 = add i64 %7737, 3
  store i64 %7738, i64* %PC.i885
  store i64 %7736, i64* %RSI.i887, align 8
  store %struct.Memory* %loadMem_40c6b9, %struct.Memory** %MEMORY
  %loadMem_40c6bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7740 = getelementptr inbounds %struct.GPR, %struct.GPR* %7739, i32 0, i32 33
  %7741 = getelementptr inbounds %struct.Reg, %struct.Reg* %7740, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %7741 to i64*
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7743 = getelementptr inbounds %struct.GPR, %struct.GPR* %7742, i32 0, i32 7
  %7744 = getelementptr inbounds %struct.Reg, %struct.Reg* %7743, i32 0, i32 0
  %RDX.i883 = bitcast %union.anon* %7744 to i64*
  %7745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7746 = getelementptr inbounds %struct.GPR, %struct.GPR* %7745, i32 0, i32 9
  %7747 = getelementptr inbounds %struct.Reg, %struct.Reg* %7746, i32 0, i32 0
  %RSI.i884 = bitcast %union.anon* %7747 to i64*
  %7748 = load i64, i64* %RSI.i884
  %7749 = load i64, i64* %RDX.i883
  %7750 = load i64, i64* %PC.i882
  %7751 = add i64 %7750, 3
  store i64 %7751, i64* %PC.i882
  %7752 = add i64 %7749, %7748
  store i64 %7752, i64* %RSI.i884, align 8
  %7753 = icmp ult i64 %7752, %7748
  %7754 = icmp ult i64 %7752, %7749
  %7755 = or i1 %7753, %7754
  %7756 = zext i1 %7755 to i8
  %7757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7756, i8* %7757, align 1
  %7758 = trunc i64 %7752 to i32
  %7759 = and i32 %7758, 255
  %7760 = call i32 @llvm.ctpop.i32(i32 %7759)
  %7761 = trunc i32 %7760 to i8
  %7762 = and i8 %7761, 1
  %7763 = xor i8 %7762, 1
  %7764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7763, i8* %7764, align 1
  %7765 = xor i64 %7749, %7748
  %7766 = xor i64 %7765, %7752
  %7767 = lshr i64 %7766, 4
  %7768 = trunc i64 %7767 to i8
  %7769 = and i8 %7768, 1
  %7770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7769, i8* %7770, align 1
  %7771 = icmp eq i64 %7752, 0
  %7772 = zext i1 %7771 to i8
  %7773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7772, i8* %7773, align 1
  %7774 = lshr i64 %7752, 63
  %7775 = trunc i64 %7774 to i8
  %7776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7775, i8* %7776, align 1
  %7777 = lshr i64 %7748, 63
  %7778 = lshr i64 %7749, 63
  %7779 = xor i64 %7774, %7777
  %7780 = xor i64 %7774, %7778
  %7781 = add i64 %7779, %7780
  %7782 = icmp eq i64 %7781, 2
  %7783 = zext i1 %7782 to i8
  %7784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7783, i8* %7784, align 1
  store %struct.Memory* %loadMem_40c6bc, %struct.Memory** %MEMORY
  %loadMem_40c6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7786 = getelementptr inbounds %struct.GPR, %struct.GPR* %7785, i32 0, i32 33
  %7787 = getelementptr inbounds %struct.Reg, %struct.Reg* %7786, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %7787 to i64*
  %7788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7789 = getelementptr inbounds %struct.GPR, %struct.GPR* %7788, i32 0, i32 5
  %7790 = getelementptr inbounds %struct.Reg, %struct.Reg* %7789, i32 0, i32 0
  %RCX.i880 = bitcast %union.anon* %7790 to i64*
  %7791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7792 = getelementptr inbounds %struct.GPR, %struct.GPR* %7791, i32 0, i32 9
  %7793 = getelementptr inbounds %struct.Reg, %struct.Reg* %7792, i32 0, i32 0
  %RSI.i881 = bitcast %union.anon* %7793 to i64*
  %7794 = load i64, i64* %RSI.i881
  %7795 = add i64 %7794, 96
  %7796 = load i64, i64* %PC.i879
  %7797 = add i64 %7796, 3
  store i64 %7797, i64* %PC.i879
  %7798 = inttoptr i64 %7795 to i32*
  %7799 = load i32, i32* %7798
  %7800 = zext i32 %7799 to i64
  store i64 %7800, i64* %RCX.i880, align 8
  store %struct.Memory* %loadMem_40c6bf, %struct.Memory** %MEMORY
  %loadMem_40c6c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7802 = getelementptr inbounds %struct.GPR, %struct.GPR* %7801, i32 0, i32 33
  %7803 = getelementptr inbounds %struct.Reg, %struct.Reg* %7802, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %7803 to i64*
  %7804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7805 = getelementptr inbounds %struct.GPR, %struct.GPR* %7804, i32 0, i32 7
  %7806 = getelementptr inbounds %struct.Reg, %struct.Reg* %7805, i32 0, i32 0
  %RDX.i878 = bitcast %union.anon* %7806 to i64*
  %7807 = load i64, i64* %PC.i877
  %7808 = add i64 %7807, 8
  store i64 %7808, i64* %PC.i877
  %7809 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %7809, i64* %RDX.i878, align 8
  store %struct.Memory* %loadMem_40c6c2, %struct.Memory** %MEMORY
  %loadMem_40c6ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7811 = getelementptr inbounds %struct.GPR, %struct.GPR* %7810, i32 0, i32 33
  %7812 = getelementptr inbounds %struct.Reg, %struct.Reg* %7811, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %7812 to i64*
  %7813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7814 = getelementptr inbounds %struct.GPR, %struct.GPR* %7813, i32 0, i32 7
  %7815 = getelementptr inbounds %struct.Reg, %struct.Reg* %7814, i32 0, i32 0
  %RDX.i875 = bitcast %union.anon* %7815 to i64*
  %7816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7817 = getelementptr inbounds %struct.GPR, %struct.GPR* %7816, i32 0, i32 9
  %7818 = getelementptr inbounds %struct.Reg, %struct.Reg* %7817, i32 0, i32 0
  %RSI.i876 = bitcast %union.anon* %7818 to i64*
  %7819 = load i64, i64* %RDX.i875
  %7820 = load i64, i64* %PC.i874
  %7821 = add i64 %7820, 3
  store i64 %7821, i64* %PC.i874
  store i64 %7819, i64* %RSI.i876, align 8
  store %struct.Memory* %loadMem_40c6ca, %struct.Memory** %MEMORY
  %loadMem_40c6cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7823 = getelementptr inbounds %struct.GPR, %struct.GPR* %7822, i32 0, i32 33
  %7824 = getelementptr inbounds %struct.Reg, %struct.Reg* %7823, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %7824 to i64*
  %7825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7826 = getelementptr inbounds %struct.GPR, %struct.GPR* %7825, i32 0, i32 9
  %7827 = getelementptr inbounds %struct.Reg, %struct.Reg* %7826, i32 0, i32 0
  %RSI.i873 = bitcast %union.anon* %7827 to i64*
  %7828 = load i64, i64* %RSI.i873
  %7829 = load i64, i64* %PC.i872
  %7830 = add i64 %7829, 4
  store i64 %7830, i64* %PC.i872
  %7831 = add i64 16, %7828
  store i64 %7831, i64* %RSI.i873, align 8
  %7832 = icmp ult i64 %7831, %7828
  %7833 = icmp ult i64 %7831, 16
  %7834 = or i1 %7832, %7833
  %7835 = zext i1 %7834 to i8
  %7836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7835, i8* %7836, align 1
  %7837 = trunc i64 %7831 to i32
  %7838 = and i32 %7837, 255
  %7839 = call i32 @llvm.ctpop.i32(i32 %7838)
  %7840 = trunc i32 %7839 to i8
  %7841 = and i8 %7840, 1
  %7842 = xor i8 %7841, 1
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7842, i8* %7843, align 1
  %7844 = xor i64 16, %7828
  %7845 = xor i64 %7844, %7831
  %7846 = lshr i64 %7845, 4
  %7847 = trunc i64 %7846 to i8
  %7848 = and i8 %7847, 1
  %7849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7848, i8* %7849, align 1
  %7850 = icmp eq i64 %7831, 0
  %7851 = zext i1 %7850 to i8
  %7852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7851, i8* %7852, align 1
  %7853 = lshr i64 %7831, 63
  %7854 = trunc i64 %7853 to i8
  %7855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7854, i8* %7855, align 1
  %7856 = lshr i64 %7828, 63
  %7857 = xor i64 %7853, %7856
  %7858 = add i64 %7857, %7853
  %7859 = icmp eq i64 %7858, 2
  %7860 = zext i1 %7859 to i8
  %7861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7860, i8* %7861, align 1
  store %struct.Memory* %loadMem_40c6cd, %struct.Memory** %MEMORY
  %loadMem_40c6d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7863 = getelementptr inbounds %struct.GPR, %struct.GPR* %7862, i32 0, i32 33
  %7864 = getelementptr inbounds %struct.Reg, %struct.Reg* %7863, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %7864 to i64*
  %7865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7866 = getelementptr inbounds %struct.GPR, %struct.GPR* %7865, i32 0, i32 9
  %7867 = getelementptr inbounds %struct.Reg, %struct.Reg* %7866, i32 0, i32 0
  %RSI.i871 = bitcast %union.anon* %7867 to i64*
  %7868 = load i64, i64* %RSI.i871
  %7869 = load i64, i64* %PC.i870
  %7870 = add i64 %7869, 8
  store i64 %7870, i64* %PC.i870
  store i64 %7868, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40c6d1, %struct.Memory** %MEMORY
  %loadMem_40c6d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7872 = getelementptr inbounds %struct.GPR, %struct.GPR* %7871, i32 0, i32 33
  %7873 = getelementptr inbounds %struct.Reg, %struct.Reg* %7872, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %7873 to i64*
  %7874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7875 = getelementptr inbounds %struct.GPR, %struct.GPR* %7874, i32 0, i32 5
  %7876 = getelementptr inbounds %struct.Reg, %struct.Reg* %7875, i32 0, i32 0
  %ECX.i868 = bitcast %union.anon* %7876 to i32*
  %7877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7878 = getelementptr inbounds %struct.GPR, %struct.GPR* %7877, i32 0, i32 7
  %7879 = getelementptr inbounds %struct.Reg, %struct.Reg* %7878, i32 0, i32 0
  %RDX.i869 = bitcast %union.anon* %7879 to i64*
  %7880 = load i64, i64* %RDX.i869
  %7881 = add i64 %7880, 8
  %7882 = load i32, i32* %ECX.i868
  %7883 = zext i32 %7882 to i64
  %7884 = load i64, i64* %PC.i867
  %7885 = add i64 %7884, 3
  store i64 %7885, i64* %PC.i867
  %7886 = inttoptr i64 %7881 to i32*
  store i32 %7882, i32* %7886
  store %struct.Memory* %loadMem_40c6d9, %struct.Memory** %MEMORY
  %loadMem_40c6dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7888 = getelementptr inbounds %struct.GPR, %struct.GPR* %7887, i32 0, i32 33
  %7889 = getelementptr inbounds %struct.Reg, %struct.Reg* %7888, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %7889 to i64*
  %7890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7891 = getelementptr inbounds %struct.GPR, %struct.GPR* %7890, i32 0, i32 7
  %7892 = getelementptr inbounds %struct.Reg, %struct.Reg* %7891, i32 0, i32 0
  %RDX.i865 = bitcast %union.anon* %7892 to i64*
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7894 = getelementptr inbounds %struct.GPR, %struct.GPR* %7893, i32 0, i32 15
  %7895 = getelementptr inbounds %struct.Reg, %struct.Reg* %7894, i32 0, i32 0
  %RBP.i866 = bitcast %union.anon* %7895 to i64*
  %7896 = load i64, i64* %RBP.i866
  %7897 = sub i64 %7896, 4
  %7898 = load i64, i64* %PC.i864
  %7899 = add i64 %7898, 4
  store i64 %7899, i64* %PC.i864
  %7900 = inttoptr i64 %7897 to i32*
  %7901 = load i32, i32* %7900
  %7902 = sext i32 %7901 to i64
  store i64 %7902, i64* %RDX.i865, align 8
  store %struct.Memory* %loadMem_40c6dc, %struct.Memory** %MEMORY
  %loadMem_40c6e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7904 = getelementptr inbounds %struct.GPR, %struct.GPR* %7903, i32 0, i32 33
  %7905 = getelementptr inbounds %struct.Reg, %struct.Reg* %7904, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %7905 to i64*
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7907 = getelementptr inbounds %struct.GPR, %struct.GPR* %7906, i32 0, i32 5
  %7908 = getelementptr inbounds %struct.Reg, %struct.Reg* %7907, i32 0, i32 0
  %RCX.i862 = bitcast %union.anon* %7908 to i64*
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7910 = getelementptr inbounds %struct.GPR, %struct.GPR* %7909, i32 0, i32 7
  %7911 = getelementptr inbounds %struct.Reg, %struct.Reg* %7910, i32 0, i32 0
  %RDX.i863 = bitcast %union.anon* %7911 to i64*
  %7912 = load i64, i64* %RDX.i863
  %7913 = mul i64 %7912, 4
  %7914 = add i64 %7913, 11187184
  %7915 = load i64, i64* %PC.i861
  %7916 = add i64 %7915, 7
  store i64 %7916, i64* %PC.i861
  %7917 = inttoptr i64 %7914 to i32*
  %7918 = load i32, i32* %7917
  %7919 = zext i32 %7918 to i64
  store i64 %7919, i64* %RCX.i862, align 8
  store %struct.Memory* %loadMem_40c6e0, %struct.Memory** %MEMORY
  %loadMem_40c6e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7921 = getelementptr inbounds %struct.GPR, %struct.GPR* %7920, i32 0, i32 33
  %7922 = getelementptr inbounds %struct.Reg, %struct.Reg* %7921, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %7922 to i64*
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7924 = getelementptr inbounds %struct.GPR, %struct.GPR* %7923, i32 0, i32 17
  %7925 = getelementptr inbounds %struct.Reg, %struct.Reg* %7924, i32 0, i32 0
  %R8D.i859 = bitcast %union.anon* %7925 to i32*
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 15
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %RBP.i860 = bitcast %union.anon* %7928 to i64*
  %7929 = bitcast i32* %R8D.i859 to i64*
  %7930 = load i64, i64* %RBP.i860
  %7931 = sub i64 %7930, 4
  %7932 = load i64, i64* %PC.i858
  %7933 = add i64 %7932, 4
  store i64 %7933, i64* %PC.i858
  %7934 = inttoptr i64 %7931 to i32*
  %7935 = load i32, i32* %7934
  %7936 = zext i32 %7935 to i64
  store i64 %7936, i64* %7929, align 8
  store %struct.Memory* %loadMem_40c6e7, %struct.Memory** %MEMORY
  %loadMem_40c6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7938 = getelementptr inbounds %struct.GPR, %struct.GPR* %7937, i32 0, i32 33
  %7939 = getelementptr inbounds %struct.Reg, %struct.Reg* %7938, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %7939 to i64*
  %7940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7941 = getelementptr inbounds %struct.GPR, %struct.GPR* %7940, i32 0, i32 17
  %7942 = getelementptr inbounds %struct.Reg, %struct.Reg* %7941, i32 0, i32 0
  %R8D.i857 = bitcast %union.anon* %7942 to i32*
  %7943 = bitcast i32* %R8D.i857 to i64*
  %7944 = load i32, i32* %R8D.i857
  %7945 = zext i32 %7944 to i64
  %7946 = load i64, i64* %PC.i856
  %7947 = add i64 %7946, 4
  store i64 %7947, i64* %PC.i856
  %7948 = sub i32 %7944, 1
  %7949 = zext i32 %7948 to i64
  store i64 %7949, i64* %7943, align 8
  %7950 = icmp ult i32 %7944, 1
  %7951 = zext i1 %7950 to i8
  %7952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7951, i8* %7952, align 1
  %7953 = and i32 %7948, 255
  %7954 = call i32 @llvm.ctpop.i32(i32 %7953)
  %7955 = trunc i32 %7954 to i8
  %7956 = and i8 %7955, 1
  %7957 = xor i8 %7956, 1
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7957, i8* %7958, align 1
  %7959 = xor i64 1, %7945
  %7960 = trunc i64 %7959 to i32
  %7961 = xor i32 %7960, %7948
  %7962 = lshr i32 %7961, 4
  %7963 = trunc i32 %7962 to i8
  %7964 = and i8 %7963, 1
  %7965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7964, i8* %7965, align 1
  %7966 = icmp eq i32 %7948, 0
  %7967 = zext i1 %7966 to i8
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7967, i8* %7968, align 1
  %7969 = lshr i32 %7948, 31
  %7970 = trunc i32 %7969 to i8
  %7971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7970, i8* %7971, align 1
  %7972 = lshr i32 %7944, 31
  %7973 = xor i32 %7969, %7972
  %7974 = add i32 %7973, %7972
  %7975 = icmp eq i32 %7974, 2
  %7976 = zext i1 %7975 to i8
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7976, i8* %7977, align 1
  store %struct.Memory* %loadMem_40c6eb, %struct.Memory** %MEMORY
  %loadMem_40c6ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7979 = getelementptr inbounds %struct.GPR, %struct.GPR* %7978, i32 0, i32 33
  %7980 = getelementptr inbounds %struct.Reg, %struct.Reg* %7979, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %7980 to i64*
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7982 = getelementptr inbounds %struct.GPR, %struct.GPR* %7981, i32 0, i32 17
  %7983 = getelementptr inbounds %struct.Reg, %struct.Reg* %7982, i32 0, i32 0
  %R8D.i854 = bitcast %union.anon* %7983 to i32*
  %7984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7985 = getelementptr inbounds %struct.GPR, %struct.GPR* %7984, i32 0, i32 7
  %7986 = getelementptr inbounds %struct.Reg, %struct.Reg* %7985, i32 0, i32 0
  %RDX.i855 = bitcast %union.anon* %7986 to i64*
  %7987 = load i32, i32* %R8D.i854
  %7988 = zext i32 %7987 to i64
  %7989 = load i64, i64* %PC.i853
  %7990 = add i64 %7989, 3
  store i64 %7990, i64* %PC.i853
  %7991 = shl i64 %7988, 32
  %7992 = ashr exact i64 %7991, 32
  store i64 %7992, i64* %RDX.i855, align 8
  store %struct.Memory* %loadMem_40c6ef, %struct.Memory** %MEMORY
  %loadMem_40c6f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7994 = getelementptr inbounds %struct.GPR, %struct.GPR* %7993, i32 0, i32 33
  %7995 = getelementptr inbounds %struct.Reg, %struct.Reg* %7994, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %7995 to i64*
  %7996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7997 = getelementptr inbounds %struct.GPR, %struct.GPR* %7996, i32 0, i32 7
  %7998 = getelementptr inbounds %struct.Reg, %struct.Reg* %7997, i32 0, i32 0
  %RDX.i852 = bitcast %union.anon* %7998 to i64*
  %7999 = load i64, i64* %RDX.i852
  %8000 = mul i64 %7999, 4
  %8001 = add i64 %8000, 11187184
  %8002 = load i64, i64* %PC.i851
  %8003 = add i64 %8002, 8
  store i64 %8003, i64* %PC.i851
  %8004 = inttoptr i64 %8001 to i32*
  %8005 = load i32, i32* %8004
  %8006 = sext i32 %8005 to i64
  store i64 %8006, i64* %RDX.i852, align 8
  store %struct.Memory* %loadMem_40c6f2, %struct.Memory** %MEMORY
  %loadMem_40c6fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8008 = getelementptr inbounds %struct.GPR, %struct.GPR* %8007, i32 0, i32 33
  %8009 = getelementptr inbounds %struct.Reg, %struct.Reg* %8008, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %8009 to i64*
  %8010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8011 = getelementptr inbounds %struct.GPR, %struct.GPR* %8010, i32 0, i32 7
  %8012 = getelementptr inbounds %struct.Reg, %struct.Reg* %8011, i32 0, i32 0
  %RDX.i850 = bitcast %union.anon* %8012 to i64*
  %8013 = load i64, i64* %RDX.i850
  %8014 = load i64, i64* %PC.i849
  %8015 = add i64 %8014, 7
  store i64 %8015, i64* %PC.i849
  %8016 = sext i64 %8013 to i128
  %8017 = and i128 %8016, -18446744073709551616
  %8018 = zext i64 %8013 to i128
  %8019 = or i128 %8017, %8018
  %8020 = mul i128 744, %8019
  %8021 = trunc i128 %8020 to i64
  store i64 %8021, i64* %RDX.i850, align 8
  %8022 = sext i64 %8021 to i128
  %8023 = icmp ne i128 %8022, %8020
  %8024 = zext i1 %8023 to i8
  %8025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8024, i8* %8025, align 1
  %8026 = trunc i128 %8020 to i32
  %8027 = and i32 %8026, 255
  %8028 = call i32 @llvm.ctpop.i32(i32 %8027)
  %8029 = trunc i32 %8028 to i8
  %8030 = and i8 %8029, 1
  %8031 = xor i8 %8030, 1
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8031, i8* %8032, align 1
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8033, align 1
  %8034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8034, align 1
  %8035 = lshr i64 %8021, 63
  %8036 = trunc i64 %8035 to i8
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8036, i8* %8037, align 1
  %8038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8024, i8* %8038, align 1
  store %struct.Memory* %loadMem_40c6fa, %struct.Memory** %MEMORY
  %loadMem_40c701 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8040 = getelementptr inbounds %struct.GPR, %struct.GPR* %8039, i32 0, i32 33
  %8041 = getelementptr inbounds %struct.Reg, %struct.Reg* %8040, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %8041 to i64*
  %8042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8043 = getelementptr inbounds %struct.GPR, %struct.GPR* %8042, i32 0, i32 1
  %8044 = getelementptr inbounds %struct.Reg, %struct.Reg* %8043, i32 0, i32 0
  %RAX.i847 = bitcast %union.anon* %8044 to i64*
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8046 = getelementptr inbounds %struct.GPR, %struct.GPR* %8045, i32 0, i32 9
  %8047 = getelementptr inbounds %struct.Reg, %struct.Reg* %8046, i32 0, i32 0
  %RSI.i848 = bitcast %union.anon* %8047 to i64*
  %8048 = load i64, i64* %RAX.i847
  %8049 = load i64, i64* %PC.i846
  %8050 = add i64 %8049, 3
  store i64 %8050, i64* %PC.i846
  store i64 %8048, i64* %RSI.i848, align 8
  store %struct.Memory* %loadMem_40c701, %struct.Memory** %MEMORY
  %loadMem_40c704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8052 = getelementptr inbounds %struct.GPR, %struct.GPR* %8051, i32 0, i32 33
  %8053 = getelementptr inbounds %struct.Reg, %struct.Reg* %8052, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %8053 to i64*
  %8054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8055 = getelementptr inbounds %struct.GPR, %struct.GPR* %8054, i32 0, i32 7
  %8056 = getelementptr inbounds %struct.Reg, %struct.Reg* %8055, i32 0, i32 0
  %RDX.i844 = bitcast %union.anon* %8056 to i64*
  %8057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8058 = getelementptr inbounds %struct.GPR, %struct.GPR* %8057, i32 0, i32 9
  %8059 = getelementptr inbounds %struct.Reg, %struct.Reg* %8058, i32 0, i32 0
  %RSI.i845 = bitcast %union.anon* %8059 to i64*
  %8060 = load i64, i64* %RSI.i845
  %8061 = load i64, i64* %RDX.i844
  %8062 = load i64, i64* %PC.i843
  %8063 = add i64 %8062, 3
  store i64 %8063, i64* %PC.i843
  %8064 = add i64 %8061, %8060
  store i64 %8064, i64* %RSI.i845, align 8
  %8065 = icmp ult i64 %8064, %8060
  %8066 = icmp ult i64 %8064, %8061
  %8067 = or i1 %8065, %8066
  %8068 = zext i1 %8067 to i8
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8068, i8* %8069, align 1
  %8070 = trunc i64 %8064 to i32
  %8071 = and i32 %8070, 255
  %8072 = call i32 @llvm.ctpop.i32(i32 %8071)
  %8073 = trunc i32 %8072 to i8
  %8074 = and i8 %8073, 1
  %8075 = xor i8 %8074, 1
  %8076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8075, i8* %8076, align 1
  %8077 = xor i64 %8061, %8060
  %8078 = xor i64 %8077, %8064
  %8079 = lshr i64 %8078, 4
  %8080 = trunc i64 %8079 to i8
  %8081 = and i8 %8080, 1
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8081, i8* %8082, align 1
  %8083 = icmp eq i64 %8064, 0
  %8084 = zext i1 %8083 to i8
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8084, i8* %8085, align 1
  %8086 = lshr i64 %8064, 63
  %8087 = trunc i64 %8086 to i8
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8087, i8* %8088, align 1
  %8089 = lshr i64 %8060, 63
  %8090 = lshr i64 %8061, 63
  %8091 = xor i64 %8086, %8089
  %8092 = xor i64 %8086, %8090
  %8093 = add i64 %8091, %8092
  %8094 = icmp eq i64 %8093, 2
  %8095 = zext i1 %8094 to i8
  %8096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8095, i8* %8096, align 1
  store %struct.Memory* %loadMem_40c704, %struct.Memory** %MEMORY
  %loadMem_40c707 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8098 = getelementptr inbounds %struct.GPR, %struct.GPR* %8097, i32 0, i32 33
  %8099 = getelementptr inbounds %struct.Reg, %struct.Reg* %8098, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %8099 to i64*
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8101 = getelementptr inbounds %struct.GPR, %struct.GPR* %8100, i32 0, i32 17
  %8102 = getelementptr inbounds %struct.Reg, %struct.Reg* %8101, i32 0, i32 0
  %R8D.i841 = bitcast %union.anon* %8102 to i32*
  %8103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8104 = getelementptr inbounds %struct.GPR, %struct.GPR* %8103, i32 0, i32 15
  %8105 = getelementptr inbounds %struct.Reg, %struct.Reg* %8104, i32 0, i32 0
  %RBP.i842 = bitcast %union.anon* %8105 to i64*
  %8106 = bitcast i32* %R8D.i841 to i64*
  %8107 = load i64, i64* %RBP.i842
  %8108 = sub i64 %8107, 4
  %8109 = load i64, i64* %PC.i840
  %8110 = add i64 %8109, 4
  store i64 %8110, i64* %PC.i840
  %8111 = inttoptr i64 %8108 to i32*
  %8112 = load i32, i32* %8111
  %8113 = zext i32 %8112 to i64
  store i64 %8113, i64* %8106, align 8
  store %struct.Memory* %loadMem_40c707, %struct.Memory** %MEMORY
  %loadMem_40c70b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8115 = getelementptr inbounds %struct.GPR, %struct.GPR* %8114, i32 0, i32 33
  %8116 = getelementptr inbounds %struct.Reg, %struct.Reg* %8115, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %8116 to i64*
  %8117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8118 = getelementptr inbounds %struct.GPR, %struct.GPR* %8117, i32 0, i32 17
  %8119 = getelementptr inbounds %struct.Reg, %struct.Reg* %8118, i32 0, i32 0
  %R8D.i839 = bitcast %union.anon* %8119 to i32*
  %8120 = bitcast i32* %R8D.i839 to i64*
  %8121 = load i32, i32* %R8D.i839
  %8122 = zext i32 %8121 to i64
  %8123 = load i64, i64* %PC.i838
  %8124 = add i64 %8123, 4
  store i64 %8124, i64* %PC.i838
  %8125 = sub i32 %8121, 1
  %8126 = zext i32 %8125 to i64
  store i64 %8126, i64* %8120, align 8
  %8127 = icmp ult i32 %8121, 1
  %8128 = zext i1 %8127 to i8
  %8129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8128, i8* %8129, align 1
  %8130 = and i32 %8125, 255
  %8131 = call i32 @llvm.ctpop.i32(i32 %8130)
  %8132 = trunc i32 %8131 to i8
  %8133 = and i8 %8132, 1
  %8134 = xor i8 %8133, 1
  %8135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8134, i8* %8135, align 1
  %8136 = xor i64 1, %8122
  %8137 = trunc i64 %8136 to i32
  %8138 = xor i32 %8137, %8125
  %8139 = lshr i32 %8138, 4
  %8140 = trunc i32 %8139 to i8
  %8141 = and i8 %8140, 1
  %8142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8141, i8* %8142, align 1
  %8143 = icmp eq i32 %8125, 0
  %8144 = zext i1 %8143 to i8
  %8145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8144, i8* %8145, align 1
  %8146 = lshr i32 %8125, 31
  %8147 = trunc i32 %8146 to i8
  %8148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8147, i8* %8148, align 1
  %8149 = lshr i32 %8121, 31
  %8150 = xor i32 %8146, %8149
  %8151 = add i32 %8150, %8149
  %8152 = icmp eq i32 %8151, 2
  %8153 = zext i1 %8152 to i8
  %8154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8153, i8* %8154, align 1
  store %struct.Memory* %loadMem_40c70b, %struct.Memory** %MEMORY
  %loadMem_40c70f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8156 = getelementptr inbounds %struct.GPR, %struct.GPR* %8155, i32 0, i32 33
  %8157 = getelementptr inbounds %struct.Reg, %struct.Reg* %8156, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %8157 to i64*
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8159 = getelementptr inbounds %struct.GPR, %struct.GPR* %8158, i32 0, i32 17
  %8160 = getelementptr inbounds %struct.Reg, %struct.Reg* %8159, i32 0, i32 0
  %R8D.i836 = bitcast %union.anon* %8160 to i32*
  %8161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8162 = getelementptr inbounds %struct.GPR, %struct.GPR* %8161, i32 0, i32 7
  %8163 = getelementptr inbounds %struct.Reg, %struct.Reg* %8162, i32 0, i32 0
  %RDX.i837 = bitcast %union.anon* %8163 to i64*
  %8164 = load i32, i32* %R8D.i836
  %8165 = zext i32 %8164 to i64
  %8166 = load i64, i64* %PC.i835
  %8167 = add i64 %8166, 3
  store i64 %8167, i64* %PC.i835
  %8168 = shl i64 %8165, 32
  %8169 = ashr exact i64 %8168, 32
  store i64 %8169, i64* %RDX.i837, align 8
  store %struct.Memory* %loadMem_40c70f, %struct.Memory** %MEMORY
  %loadMem_40c712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8171 = getelementptr inbounds %struct.GPR, %struct.GPR* %8170, i32 0, i32 33
  %8172 = getelementptr inbounds %struct.Reg, %struct.Reg* %8171, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %8172 to i64*
  %8173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8174 = getelementptr inbounds %struct.GPR, %struct.GPR* %8173, i32 0, i32 7
  %8175 = getelementptr inbounds %struct.Reg, %struct.Reg* %8174, i32 0, i32 0
  %RDX.i834 = bitcast %union.anon* %8175 to i64*
  %8176 = load i64, i64* %RDX.i834
  %8177 = mul i64 %8176, 4
  %8178 = add i64 %8177, 11187184
  %8179 = load i64, i64* %PC.i833
  %8180 = add i64 %8179, 8
  store i64 %8180, i64* %PC.i833
  %8181 = inttoptr i64 %8178 to i32*
  %8182 = load i32, i32* %8181
  %8183 = sext i32 %8182 to i64
  store i64 %8183, i64* %RDX.i834, align 8
  store %struct.Memory* %loadMem_40c712, %struct.Memory** %MEMORY
  %loadMem_40c71a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8185 = getelementptr inbounds %struct.GPR, %struct.GPR* %8184, i32 0, i32 33
  %8186 = getelementptr inbounds %struct.Reg, %struct.Reg* %8185, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %8186 to i64*
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8188 = getelementptr inbounds %struct.GPR, %struct.GPR* %8187, i32 0, i32 7
  %8189 = getelementptr inbounds %struct.Reg, %struct.Reg* %8188, i32 0, i32 0
  %RDX.i832 = bitcast %union.anon* %8189 to i64*
  %8190 = load i64, i64* %RDX.i832
  %8191 = load i64, i64* %PC.i831
  %8192 = add i64 %8191, 7
  store i64 %8192, i64* %PC.i831
  %8193 = sext i64 %8190 to i128
  %8194 = and i128 %8193, -18446744073709551616
  %8195 = zext i64 %8190 to i128
  %8196 = or i128 %8194, %8195
  %8197 = mul i128 744, %8196
  %8198 = trunc i128 %8197 to i64
  store i64 %8198, i64* %RDX.i832, align 8
  %8199 = sext i64 %8198 to i128
  %8200 = icmp ne i128 %8199, %8197
  %8201 = zext i1 %8200 to i8
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8201, i8* %8202, align 1
  %8203 = trunc i128 %8197 to i32
  %8204 = and i32 %8203, 255
  %8205 = call i32 @llvm.ctpop.i32(i32 %8204)
  %8206 = trunc i32 %8205 to i8
  %8207 = and i8 %8206, 1
  %8208 = xor i8 %8207, 1
  %8209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8208, i8* %8209, align 1
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8210, align 1
  %8211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8211, align 1
  %8212 = lshr i64 %8198, 63
  %8213 = trunc i64 %8212 to i8
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8213, i8* %8214, align 1
  %8215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8201, i8* %8215, align 1
  store %struct.Memory* %loadMem_40c71a, %struct.Memory** %MEMORY
  %loadMem_40c721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8217 = getelementptr inbounds %struct.GPR, %struct.GPR* %8216, i32 0, i32 33
  %8218 = getelementptr inbounds %struct.Reg, %struct.Reg* %8217, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %8218 to i64*
  %8219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8220 = getelementptr inbounds %struct.GPR, %struct.GPR* %8219, i32 0, i32 1
  %8221 = getelementptr inbounds %struct.Reg, %struct.Reg* %8220, i32 0, i32 0
  %RAX.i829 = bitcast %union.anon* %8221 to i64*
  %8222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8223 = getelementptr inbounds %struct.GPR, %struct.GPR* %8222, i32 0, i32 11
  %8224 = getelementptr inbounds %struct.Reg, %struct.Reg* %8223, i32 0, i32 0
  %RDI.i830 = bitcast %union.anon* %8224 to i64*
  %8225 = load i64, i64* %RAX.i829
  %8226 = load i64, i64* %PC.i828
  %8227 = add i64 %8226, 3
  store i64 %8227, i64* %PC.i828
  store i64 %8225, i64* %RDI.i830, align 8
  store %struct.Memory* %loadMem_40c721, %struct.Memory** %MEMORY
  %loadMem_40c724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8229 = getelementptr inbounds %struct.GPR, %struct.GPR* %8228, i32 0, i32 33
  %8230 = getelementptr inbounds %struct.Reg, %struct.Reg* %8229, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %8230 to i64*
  %8231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8232 = getelementptr inbounds %struct.GPR, %struct.GPR* %8231, i32 0, i32 7
  %8233 = getelementptr inbounds %struct.Reg, %struct.Reg* %8232, i32 0, i32 0
  %RDX.i826 = bitcast %union.anon* %8233 to i64*
  %8234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8235 = getelementptr inbounds %struct.GPR, %struct.GPR* %8234, i32 0, i32 11
  %8236 = getelementptr inbounds %struct.Reg, %struct.Reg* %8235, i32 0, i32 0
  %RDI.i827 = bitcast %union.anon* %8236 to i64*
  %8237 = load i64, i64* %RDI.i827
  %8238 = load i64, i64* %RDX.i826
  %8239 = load i64, i64* %PC.i825
  %8240 = add i64 %8239, 3
  store i64 %8240, i64* %PC.i825
  %8241 = add i64 %8238, %8237
  store i64 %8241, i64* %RDI.i827, align 8
  %8242 = icmp ult i64 %8241, %8237
  %8243 = icmp ult i64 %8241, %8238
  %8244 = or i1 %8242, %8243
  %8245 = zext i1 %8244 to i8
  %8246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8245, i8* %8246, align 1
  %8247 = trunc i64 %8241 to i32
  %8248 = and i32 %8247, 255
  %8249 = call i32 @llvm.ctpop.i32(i32 %8248)
  %8250 = trunc i32 %8249 to i8
  %8251 = and i8 %8250, 1
  %8252 = xor i8 %8251, 1
  %8253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8252, i8* %8253, align 1
  %8254 = xor i64 %8238, %8237
  %8255 = xor i64 %8254, %8241
  %8256 = lshr i64 %8255, 4
  %8257 = trunc i64 %8256 to i8
  %8258 = and i8 %8257, 1
  %8259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8258, i8* %8259, align 1
  %8260 = icmp eq i64 %8241, 0
  %8261 = zext i1 %8260 to i8
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8261, i8* %8262, align 1
  %8263 = lshr i64 %8241, 63
  %8264 = trunc i64 %8263 to i8
  %8265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8264, i8* %8265, align 1
  %8266 = lshr i64 %8237, 63
  %8267 = lshr i64 %8238, 63
  %8268 = xor i64 %8263, %8266
  %8269 = xor i64 %8263, %8267
  %8270 = add i64 %8268, %8269
  %8271 = icmp eq i64 %8270, 2
  %8272 = zext i1 %8271 to i8
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8272, i8* %8273, align 1
  store %struct.Memory* %loadMem_40c724, %struct.Memory** %MEMORY
  %loadMem_40c727 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8275 = getelementptr inbounds %struct.GPR, %struct.GPR* %8274, i32 0, i32 33
  %8276 = getelementptr inbounds %struct.Reg, %struct.Reg* %8275, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %8276 to i64*
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8278 = getelementptr inbounds %struct.GPR, %struct.GPR* %8277, i32 0, i32 17
  %8279 = getelementptr inbounds %struct.Reg, %struct.Reg* %8278, i32 0, i32 0
  %R8D.i823 = bitcast %union.anon* %8279 to i32*
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8281 = getelementptr inbounds %struct.GPR, %struct.GPR* %8280, i32 0, i32 11
  %8282 = getelementptr inbounds %struct.Reg, %struct.Reg* %8281, i32 0, i32 0
  %RDI.i824 = bitcast %union.anon* %8282 to i64*
  %8283 = bitcast i32* %R8D.i823 to i64*
  %8284 = load i64, i64* %RDI.i824
  %8285 = add i64 %8284, 96
  %8286 = load i64, i64* %PC.i822
  %8287 = add i64 %8286, 4
  store i64 %8287, i64* %PC.i822
  %8288 = inttoptr i64 %8285 to i32*
  %8289 = load i32, i32* %8288
  %8290 = zext i32 %8289 to i64
  store i64 %8290, i64* %8283, align 8
  store %struct.Memory* %loadMem_40c727, %struct.Memory** %MEMORY
  %loadMem_40c72b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8292 = getelementptr inbounds %struct.GPR, %struct.GPR* %8291, i32 0, i32 33
  %8293 = getelementptr inbounds %struct.Reg, %struct.Reg* %8292, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %8293 to i64*
  %8294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8295 = getelementptr inbounds %struct.GPR, %struct.GPR* %8294, i32 0, i32 17
  %8296 = getelementptr inbounds %struct.Reg, %struct.Reg* %8295, i32 0, i32 0
  %R8D.i820 = bitcast %union.anon* %8296 to i32*
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8298 = getelementptr inbounds %struct.GPR, %struct.GPR* %8297, i32 0, i32 19
  %8299 = getelementptr inbounds %struct.Reg, %struct.Reg* %8298, i32 0, i32 0
  %R9D.i821 = bitcast %union.anon* %8299 to i32*
  %8300 = bitcast i32* %R9D.i821 to i64*
  %8301 = load i32, i32* %R8D.i820
  %8302 = zext i32 %8301 to i64
  %8303 = load i64, i64* %PC.i819
  %8304 = add i64 %8303, 3
  store i64 %8304, i64* %PC.i819
  %8305 = and i64 %8302, 4294967295
  store i64 %8305, i64* %8300, align 8
  store %struct.Memory* %loadMem_40c72b, %struct.Memory** %MEMORY
  %loadMem_40c72e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8307 = getelementptr inbounds %struct.GPR, %struct.GPR* %8306, i32 0, i32 33
  %8308 = getelementptr inbounds %struct.Reg, %struct.Reg* %8307, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %8308 to i64*
  %8309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8310 = getelementptr inbounds %struct.GPR, %struct.GPR* %8309, i32 0, i32 19
  %8311 = getelementptr inbounds %struct.Reg, %struct.Reg* %8310, i32 0, i32 0
  %R9D.i818 = bitcast %union.anon* %8311 to i32*
  %8312 = bitcast i32* %R9D.i818 to i64*
  %8313 = load i32, i32* %R9D.i818
  %8314 = zext i32 %8313 to i64
  %8315 = load i64, i64* %PC.i817
  %8316 = add i64 %8315, 4
  store i64 %8316, i64* %PC.i817
  %8317 = add i32 1, %8313
  %8318 = zext i32 %8317 to i64
  store i64 %8318, i64* %8312, align 8
  %8319 = icmp ult i32 %8317, %8313
  %8320 = icmp ult i32 %8317, 1
  %8321 = or i1 %8319, %8320
  %8322 = zext i1 %8321 to i8
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8322, i8* %8323, align 1
  %8324 = and i32 %8317, 255
  %8325 = call i32 @llvm.ctpop.i32(i32 %8324)
  %8326 = trunc i32 %8325 to i8
  %8327 = and i8 %8326, 1
  %8328 = xor i8 %8327, 1
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8328, i8* %8329, align 1
  %8330 = xor i64 1, %8314
  %8331 = trunc i64 %8330 to i32
  %8332 = xor i32 %8331, %8317
  %8333 = lshr i32 %8332, 4
  %8334 = trunc i32 %8333 to i8
  %8335 = and i8 %8334, 1
  %8336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8335, i8* %8336, align 1
  %8337 = icmp eq i32 %8317, 0
  %8338 = zext i1 %8337 to i8
  %8339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8338, i8* %8339, align 1
  %8340 = lshr i32 %8317, 31
  %8341 = trunc i32 %8340 to i8
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8341, i8* %8342, align 1
  %8343 = lshr i32 %8313, 31
  %8344 = xor i32 %8340, %8343
  %8345 = add i32 %8344, %8340
  %8346 = icmp eq i32 %8345, 2
  %8347 = zext i1 %8346 to i8
  %8348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8347, i8* %8348, align 1
  store %struct.Memory* %loadMem_40c72e, %struct.Memory** %MEMORY
  %loadMem_40c732 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8350 = getelementptr inbounds %struct.GPR, %struct.GPR* %8349, i32 0, i32 33
  %8351 = getelementptr inbounds %struct.Reg, %struct.Reg* %8350, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %8351 to i64*
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8353 = getelementptr inbounds %struct.GPR, %struct.GPR* %8352, i32 0, i32 19
  %8354 = getelementptr inbounds %struct.Reg, %struct.Reg* %8353, i32 0, i32 0
  %R9D.i815 = bitcast %union.anon* %8354 to i32*
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8356 = getelementptr inbounds %struct.GPR, %struct.GPR* %8355, i32 0, i32 11
  %8357 = getelementptr inbounds %struct.Reg, %struct.Reg* %8356, i32 0, i32 0
  %RDI.i816 = bitcast %union.anon* %8357 to i64*
  %8358 = load i64, i64* %RDI.i816
  %8359 = add i64 %8358, 96
  %8360 = load i32, i32* %R9D.i815
  %8361 = zext i32 %8360 to i64
  %8362 = load i64, i64* %PC.i814
  %8363 = add i64 %8362, 4
  store i64 %8363, i64* %PC.i814
  %8364 = inttoptr i64 %8359 to i32*
  store i32 %8360, i32* %8364
  store %struct.Memory* %loadMem_40c732, %struct.Memory** %MEMORY
  %loadMem_40c736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8366 = getelementptr inbounds %struct.GPR, %struct.GPR* %8365, i32 0, i32 33
  %8367 = getelementptr inbounds %struct.Reg, %struct.Reg* %8366, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %8367 to i64*
  %8368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8369 = getelementptr inbounds %struct.GPR, %struct.GPR* %8368, i32 0, i32 17
  %8370 = getelementptr inbounds %struct.Reg, %struct.Reg* %8369, i32 0, i32 0
  %R8D.i812 = bitcast %union.anon* %8370 to i32*
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8372 = getelementptr inbounds %struct.GPR, %struct.GPR* %8371, i32 0, i32 7
  %8373 = getelementptr inbounds %struct.Reg, %struct.Reg* %8372, i32 0, i32 0
  %RDX.i813 = bitcast %union.anon* %8373 to i64*
  %8374 = load i32, i32* %R8D.i812
  %8375 = zext i32 %8374 to i64
  %8376 = load i64, i64* %PC.i811
  %8377 = add i64 %8376, 3
  store i64 %8377, i64* %PC.i811
  %8378 = shl i64 %8375, 32
  %8379 = ashr exact i64 %8378, 32
  store i64 %8379, i64* %RDX.i813, align 8
  store %struct.Memory* %loadMem_40c736, %struct.Memory** %MEMORY
  %loadMem_40c739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8381 = getelementptr inbounds %struct.GPR, %struct.GPR* %8380, i32 0, i32 33
  %8382 = getelementptr inbounds %struct.Reg, %struct.Reg* %8381, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %8382 to i64*
  %8383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8384 = getelementptr inbounds %struct.GPR, %struct.GPR* %8383, i32 0, i32 5
  %8385 = getelementptr inbounds %struct.Reg, %struct.Reg* %8384, i32 0, i32 0
  %ECX.i808 = bitcast %union.anon* %8385 to i32*
  %8386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8387 = getelementptr inbounds %struct.GPR, %struct.GPR* %8386, i32 0, i32 7
  %8388 = getelementptr inbounds %struct.Reg, %struct.Reg* %8387, i32 0, i32 0
  %RDX.i809 = bitcast %union.anon* %8388 to i64*
  %8389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8390 = getelementptr inbounds %struct.GPR, %struct.GPR* %8389, i32 0, i32 9
  %8391 = getelementptr inbounds %struct.Reg, %struct.Reg* %8390, i32 0, i32 0
  %RSI.i810 = bitcast %union.anon* %8391 to i64*
  %8392 = load i64, i64* %RSI.i810
  %8393 = load i64, i64* %RDX.i809
  %8394 = mul i64 %8393, 4
  %8395 = add i64 %8392, 100
  %8396 = add i64 %8395, %8394
  %8397 = load i32, i32* %ECX.i808
  %8398 = zext i32 %8397 to i64
  %8399 = load i64, i64* %PC.i807
  %8400 = add i64 %8399, 4
  store i64 %8400, i64* %PC.i807
  %8401 = inttoptr i64 %8396 to i32*
  store i32 %8397, i32* %8401
  store %struct.Memory* %loadMem_40c739, %struct.Memory** %MEMORY
  %loadMem_40c73d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8403 = getelementptr inbounds %struct.GPR, %struct.GPR* %8402, i32 0, i32 33
  %8404 = getelementptr inbounds %struct.Reg, %struct.Reg* %8403, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %8404 to i64*
  %8405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8406 = getelementptr inbounds %struct.GPR, %struct.GPR* %8405, i32 0, i32 5
  %8407 = getelementptr inbounds %struct.Reg, %struct.Reg* %8406, i32 0, i32 0
  %RCX.i806 = bitcast %union.anon* %8407 to i64*
  %8408 = load i64, i64* %PC.i805
  %8409 = add i64 %8408, 7
  store i64 %8409, i64* %PC.i805
  %8410 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %8411 = zext i32 %8410 to i64
  store i64 %8411, i64* %RCX.i806, align 8
  store %struct.Memory* %loadMem_40c73d, %struct.Memory** %MEMORY
  %loadMem_40c744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8413 = getelementptr inbounds %struct.GPR, %struct.GPR* %8412, i32 0, i32 33
  %8414 = getelementptr inbounds %struct.Reg, %struct.Reg* %8413, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %8414 to i64*
  %8415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8416 = getelementptr inbounds %struct.GPR, %struct.GPR* %8415, i32 0, i32 17
  %8417 = getelementptr inbounds %struct.Reg, %struct.Reg* %8416, i32 0, i32 0
  %R8D.i803 = bitcast %union.anon* %8417 to i32*
  %8418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8419 = getelementptr inbounds %struct.GPR, %struct.GPR* %8418, i32 0, i32 15
  %8420 = getelementptr inbounds %struct.Reg, %struct.Reg* %8419, i32 0, i32 0
  %RBP.i804 = bitcast %union.anon* %8420 to i64*
  %8421 = bitcast i32* %R8D.i803 to i64*
  %8422 = load i64, i64* %RBP.i804
  %8423 = sub i64 %8422, 4
  %8424 = load i64, i64* %PC.i802
  %8425 = add i64 %8424, 4
  store i64 %8425, i64* %PC.i802
  %8426 = inttoptr i64 %8423 to i32*
  %8427 = load i32, i32* %8426
  %8428 = zext i32 %8427 to i64
  store i64 %8428, i64* %8421, align 8
  store %struct.Memory* %loadMem_40c744, %struct.Memory** %MEMORY
  %loadMem_40c748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8430 = getelementptr inbounds %struct.GPR, %struct.GPR* %8429, i32 0, i32 33
  %8431 = getelementptr inbounds %struct.Reg, %struct.Reg* %8430, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %8431 to i64*
  %8432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8433 = getelementptr inbounds %struct.GPR, %struct.GPR* %8432, i32 0, i32 17
  %8434 = getelementptr inbounds %struct.Reg, %struct.Reg* %8433, i32 0, i32 0
  %R8D.i801 = bitcast %union.anon* %8434 to i32*
  %8435 = bitcast i32* %R8D.i801 to i64*
  %8436 = load i32, i32* %R8D.i801
  %8437 = zext i32 %8436 to i64
  %8438 = load i64, i64* %PC.i800
  %8439 = add i64 %8438, 4
  store i64 %8439, i64* %PC.i800
  %8440 = sub i32 %8436, 1
  %8441 = zext i32 %8440 to i64
  store i64 %8441, i64* %8435, align 8
  %8442 = icmp ult i32 %8436, 1
  %8443 = zext i1 %8442 to i8
  %8444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8443, i8* %8444, align 1
  %8445 = and i32 %8440, 255
  %8446 = call i32 @llvm.ctpop.i32(i32 %8445)
  %8447 = trunc i32 %8446 to i8
  %8448 = and i8 %8447, 1
  %8449 = xor i8 %8448, 1
  %8450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8449, i8* %8450, align 1
  %8451 = xor i64 1, %8437
  %8452 = trunc i64 %8451 to i32
  %8453 = xor i32 %8452, %8440
  %8454 = lshr i32 %8453, 4
  %8455 = trunc i32 %8454 to i8
  %8456 = and i8 %8455, 1
  %8457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8456, i8* %8457, align 1
  %8458 = icmp eq i32 %8440, 0
  %8459 = zext i1 %8458 to i8
  %8460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8459, i8* %8460, align 1
  %8461 = lshr i32 %8440, 31
  %8462 = trunc i32 %8461 to i8
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8462, i8* %8463, align 1
  %8464 = lshr i32 %8436, 31
  %8465 = xor i32 %8461, %8464
  %8466 = add i32 %8465, %8464
  %8467 = icmp eq i32 %8466, 2
  %8468 = zext i1 %8467 to i8
  %8469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8468, i8* %8469, align 1
  store %struct.Memory* %loadMem_40c748, %struct.Memory** %MEMORY
  %loadMem_40c74c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8471 = getelementptr inbounds %struct.GPR, %struct.GPR* %8470, i32 0, i32 33
  %8472 = getelementptr inbounds %struct.Reg, %struct.Reg* %8471, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %8472 to i64*
  %8473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8474 = getelementptr inbounds %struct.GPR, %struct.GPR* %8473, i32 0, i32 17
  %8475 = getelementptr inbounds %struct.Reg, %struct.Reg* %8474, i32 0, i32 0
  %R8D.i798 = bitcast %union.anon* %8475 to i32*
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8477 = getelementptr inbounds %struct.GPR, %struct.GPR* %8476, i32 0, i32 7
  %8478 = getelementptr inbounds %struct.Reg, %struct.Reg* %8477, i32 0, i32 0
  %RDX.i799 = bitcast %union.anon* %8478 to i64*
  %8479 = load i32, i32* %R8D.i798
  %8480 = zext i32 %8479 to i64
  %8481 = load i64, i64* %PC.i797
  %8482 = add i64 %8481, 3
  store i64 %8482, i64* %PC.i797
  %8483 = shl i64 %8480, 32
  %8484 = ashr exact i64 %8483, 32
  store i64 %8484, i64* %RDX.i799, align 8
  store %struct.Memory* %loadMem_40c74c, %struct.Memory** %MEMORY
  %loadMem_40c74f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8486 = getelementptr inbounds %struct.GPR, %struct.GPR* %8485, i32 0, i32 33
  %8487 = getelementptr inbounds %struct.Reg, %struct.Reg* %8486, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %8487 to i64*
  %8488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8489 = getelementptr inbounds %struct.GPR, %struct.GPR* %8488, i32 0, i32 7
  %8490 = getelementptr inbounds %struct.Reg, %struct.Reg* %8489, i32 0, i32 0
  %RDX.i796 = bitcast %union.anon* %8490 to i64*
  %8491 = load i64, i64* %RDX.i796
  %8492 = mul i64 %8491, 4
  %8493 = add i64 %8492, 11187184
  %8494 = load i64, i64* %PC.i795
  %8495 = add i64 %8494, 8
  store i64 %8495, i64* %PC.i795
  %8496 = inttoptr i64 %8493 to i32*
  %8497 = load i32, i32* %8496
  %8498 = sext i32 %8497 to i64
  store i64 %8498, i64* %RDX.i796, align 8
  store %struct.Memory* %loadMem_40c74f, %struct.Memory** %MEMORY
  %loadMem_40c757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8500 = getelementptr inbounds %struct.GPR, %struct.GPR* %8499, i32 0, i32 33
  %8501 = getelementptr inbounds %struct.Reg, %struct.Reg* %8500, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %8501 to i64*
  %8502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8503 = getelementptr inbounds %struct.GPR, %struct.GPR* %8502, i32 0, i32 7
  %8504 = getelementptr inbounds %struct.Reg, %struct.Reg* %8503, i32 0, i32 0
  %RDX.i794 = bitcast %union.anon* %8504 to i64*
  %8505 = load i64, i64* %RDX.i794
  %8506 = load i64, i64* %PC.i793
  %8507 = add i64 %8506, 7
  store i64 %8507, i64* %PC.i793
  %8508 = sext i64 %8505 to i128
  %8509 = and i128 %8508, -18446744073709551616
  %8510 = zext i64 %8505 to i128
  %8511 = or i128 %8509, %8510
  %8512 = mul i128 744, %8511
  %8513 = trunc i128 %8512 to i64
  store i64 %8513, i64* %RDX.i794, align 8
  %8514 = sext i64 %8513 to i128
  %8515 = icmp ne i128 %8514, %8512
  %8516 = zext i1 %8515 to i8
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8516, i8* %8517, align 1
  %8518 = trunc i128 %8512 to i32
  %8519 = and i32 %8518, 255
  %8520 = call i32 @llvm.ctpop.i32(i32 %8519)
  %8521 = trunc i32 %8520 to i8
  %8522 = and i8 %8521, 1
  %8523 = xor i8 %8522, 1
  %8524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8523, i8* %8524, align 1
  %8525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8525, align 1
  %8526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8526, align 1
  %8527 = lshr i64 %8513, 63
  %8528 = trunc i64 %8527 to i8
  %8529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8528, i8* %8529, align 1
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8516, i8* %8530, align 1
  store %struct.Memory* %loadMem_40c757, %struct.Memory** %MEMORY
  %loadMem_40c75e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8532 = getelementptr inbounds %struct.GPR, %struct.GPR* %8531, i32 0, i32 33
  %8533 = getelementptr inbounds %struct.Reg, %struct.Reg* %8532, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %8533 to i64*
  %8534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8535 = getelementptr inbounds %struct.GPR, %struct.GPR* %8534, i32 0, i32 1
  %8536 = getelementptr inbounds %struct.Reg, %struct.Reg* %8535, i32 0, i32 0
  %RAX.i791 = bitcast %union.anon* %8536 to i64*
  %8537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8538 = getelementptr inbounds %struct.GPR, %struct.GPR* %8537, i32 0, i32 7
  %8539 = getelementptr inbounds %struct.Reg, %struct.Reg* %8538, i32 0, i32 0
  %RDX.i792 = bitcast %union.anon* %8539 to i64*
  %8540 = load i64, i64* %RAX.i791
  %8541 = load i64, i64* %RDX.i792
  %8542 = load i64, i64* %PC.i790
  %8543 = add i64 %8542, 3
  store i64 %8543, i64* %PC.i790
  %8544 = add i64 %8541, %8540
  store i64 %8544, i64* %RAX.i791, align 8
  %8545 = icmp ult i64 %8544, %8540
  %8546 = icmp ult i64 %8544, %8541
  %8547 = or i1 %8545, %8546
  %8548 = zext i1 %8547 to i8
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8548, i8* %8549, align 1
  %8550 = trunc i64 %8544 to i32
  %8551 = and i32 %8550, 255
  %8552 = call i32 @llvm.ctpop.i32(i32 %8551)
  %8553 = trunc i32 %8552 to i8
  %8554 = and i8 %8553, 1
  %8555 = xor i8 %8554, 1
  %8556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8555, i8* %8556, align 1
  %8557 = xor i64 %8541, %8540
  %8558 = xor i64 %8557, %8544
  %8559 = lshr i64 %8558, 4
  %8560 = trunc i64 %8559 to i8
  %8561 = and i8 %8560, 1
  %8562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8561, i8* %8562, align 1
  %8563 = icmp eq i64 %8544, 0
  %8564 = zext i1 %8563 to i8
  %8565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8564, i8* %8565, align 1
  %8566 = lshr i64 %8544, 63
  %8567 = trunc i64 %8566 to i8
  %8568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8567, i8* %8568, align 1
  %8569 = lshr i64 %8540, 63
  %8570 = lshr i64 %8541, 63
  %8571 = xor i64 %8566, %8569
  %8572 = xor i64 %8566, %8570
  %8573 = add i64 %8571, %8572
  %8574 = icmp eq i64 %8573, 2
  %8575 = zext i1 %8574 to i8
  %8576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8575, i8* %8576, align 1
  store %struct.Memory* %loadMem_40c75e, %struct.Memory** %MEMORY
  %loadMem_40c761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8578 = getelementptr inbounds %struct.GPR, %struct.GPR* %8577, i32 0, i32 33
  %8579 = getelementptr inbounds %struct.Reg, %struct.Reg* %8578, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %8579 to i64*
  %8580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8581 = getelementptr inbounds %struct.GPR, %struct.GPR* %8580, i32 0, i32 5
  %8582 = getelementptr inbounds %struct.Reg, %struct.Reg* %8581, i32 0, i32 0
  %ECX.i788 = bitcast %union.anon* %8582 to i32*
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8584 = getelementptr inbounds %struct.GPR, %struct.GPR* %8583, i32 0, i32 1
  %8585 = getelementptr inbounds %struct.Reg, %struct.Reg* %8584, i32 0, i32 0
  %RAX.i789 = bitcast %union.anon* %8585 to i64*
  %8586 = load i64, i64* %RAX.i789
  %8587 = add i64 %8586, 740
  %8588 = load i32, i32* %ECX.i788
  %8589 = zext i32 %8588 to i64
  %8590 = load i64, i64* %PC.i787
  %8591 = add i64 %8590, 6
  store i64 %8591, i64* %PC.i787
  %8592 = inttoptr i64 %8587 to i32*
  store i32 %8588, i32* %8592
  store %struct.Memory* %loadMem_40c761, %struct.Memory** %MEMORY
  %loadMem_40c767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8594 = getelementptr inbounds %struct.GPR, %struct.GPR* %8593, i32 0, i32 33
  %8595 = getelementptr inbounds %struct.Reg, %struct.Reg* %8594, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %8595 to i64*
  %8596 = load i64, i64* %PC.i786
  %8597 = add i64 %8596, 108
  %8598 = load i64, i64* %PC.i786
  %8599 = add i64 %8598, 5
  store i64 %8599, i64* %PC.i786
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8597, i64* %8600, align 8
  store %struct.Memory* %loadMem_40c767, %struct.Memory** %MEMORY
  br label %block_.L_40c7d3

block_.L_40c76c:                                  ; preds = %block_40c5ea, %block_.L_40c5d0
  %loadMem_40c76c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8602 = getelementptr inbounds %struct.GPR, %struct.GPR* %8601, i32 0, i32 33
  %8603 = getelementptr inbounds %struct.Reg, %struct.Reg* %8602, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %8603 to i64*
  %8604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8605 = getelementptr inbounds %struct.GPR, %struct.GPR* %8604, i32 0, i32 1
  %8606 = getelementptr inbounds %struct.Reg, %struct.Reg* %8605, i32 0, i32 0
  %RAX.i784 = bitcast %union.anon* %8606 to i64*
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8608 = getelementptr inbounds %struct.GPR, %struct.GPR* %8607, i32 0, i32 15
  %8609 = getelementptr inbounds %struct.Reg, %struct.Reg* %8608, i32 0, i32 0
  %RBP.i785 = bitcast %union.anon* %8609 to i64*
  %8610 = load i64, i64* %RBP.i785
  %8611 = sub i64 %8610, 4
  %8612 = load i64, i64* %PC.i783
  %8613 = add i64 %8612, 3
  store i64 %8613, i64* %PC.i783
  %8614 = inttoptr i64 %8611 to i32*
  %8615 = load i32, i32* %8614
  %8616 = zext i32 %8615 to i64
  store i64 %8616, i64* %RAX.i784, align 8
  store %struct.Memory* %loadMem_40c76c, %struct.Memory** %MEMORY
  %loadMem_40c76f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8618 = getelementptr inbounds %struct.GPR, %struct.GPR* %8617, i32 0, i32 33
  %8619 = getelementptr inbounds %struct.Reg, %struct.Reg* %8618, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %8619 to i64*
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8621 = getelementptr inbounds %struct.GPR, %struct.GPR* %8620, i32 0, i32 1
  %8622 = getelementptr inbounds %struct.Reg, %struct.Reg* %8621, i32 0, i32 0
  %RAX.i782 = bitcast %union.anon* %8622 to i64*
  %8623 = load i64, i64* %RAX.i782
  %8624 = load i64, i64* %PC.i781
  %8625 = add i64 %8624, 3
  store i64 %8625, i64* %PC.i781
  %8626 = trunc i64 %8623 to i32
  %8627 = sub i32 %8626, 1
  %8628 = zext i32 %8627 to i64
  store i64 %8628, i64* %RAX.i782, align 8
  %8629 = icmp ult i32 %8626, 1
  %8630 = zext i1 %8629 to i8
  %8631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8630, i8* %8631, align 1
  %8632 = and i32 %8627, 255
  %8633 = call i32 @llvm.ctpop.i32(i32 %8632)
  %8634 = trunc i32 %8633 to i8
  %8635 = and i8 %8634, 1
  %8636 = xor i8 %8635, 1
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8636, i8* %8637, align 1
  %8638 = xor i64 1, %8623
  %8639 = trunc i64 %8638 to i32
  %8640 = xor i32 %8639, %8627
  %8641 = lshr i32 %8640, 4
  %8642 = trunc i32 %8641 to i8
  %8643 = and i8 %8642, 1
  %8644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8643, i8* %8644, align 1
  %8645 = icmp eq i32 %8627, 0
  %8646 = zext i1 %8645 to i8
  %8647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8646, i8* %8647, align 1
  %8648 = lshr i32 %8627, 31
  %8649 = trunc i32 %8648 to i8
  %8650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8649, i8* %8650, align 1
  %8651 = lshr i32 %8626, 31
  %8652 = xor i32 %8648, %8651
  %8653 = add i32 %8652, %8651
  %8654 = icmp eq i32 %8653, 2
  %8655 = zext i1 %8654 to i8
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8655, i8* %8656, align 1
  store %struct.Memory* %loadMem_40c76f, %struct.Memory** %MEMORY
  %loadMem_40c772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8658 = getelementptr inbounds %struct.GPR, %struct.GPR* %8657, i32 0, i32 33
  %8659 = getelementptr inbounds %struct.Reg, %struct.Reg* %8658, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %8659 to i64*
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8661 = getelementptr inbounds %struct.GPR, %struct.GPR* %8660, i32 0, i32 1
  %8662 = getelementptr inbounds %struct.Reg, %struct.Reg* %8661, i32 0, i32 0
  %EAX.i779 = bitcast %union.anon* %8662 to i32*
  %8663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8664 = getelementptr inbounds %struct.GPR, %struct.GPR* %8663, i32 0, i32 5
  %8665 = getelementptr inbounds %struct.Reg, %struct.Reg* %8664, i32 0, i32 0
  %RCX.i780 = bitcast %union.anon* %8665 to i64*
  %8666 = load i32, i32* %EAX.i779
  %8667 = zext i32 %8666 to i64
  %8668 = load i64, i64* %PC.i778
  %8669 = add i64 %8668, 3
  store i64 %8669, i64* %PC.i778
  %8670 = shl i64 %8667, 32
  %8671 = ashr exact i64 %8670, 32
  store i64 %8671, i64* %RCX.i780, align 8
  store %struct.Memory* %loadMem_40c772, %struct.Memory** %MEMORY
  %loadMem_40c775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8673 = getelementptr inbounds %struct.GPR, %struct.GPR* %8672, i32 0, i32 33
  %8674 = getelementptr inbounds %struct.Reg, %struct.Reg* %8673, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %8674 to i64*
  %8675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8676 = getelementptr inbounds %struct.GPR, %struct.GPR* %8675, i32 0, i32 1
  %8677 = getelementptr inbounds %struct.Reg, %struct.Reg* %8676, i32 0, i32 0
  %RAX.i776 = bitcast %union.anon* %8677 to i64*
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8679 = getelementptr inbounds %struct.GPR, %struct.GPR* %8678, i32 0, i32 5
  %8680 = getelementptr inbounds %struct.Reg, %struct.Reg* %8679, i32 0, i32 0
  %RCX.i777 = bitcast %union.anon* %8680 to i64*
  %8681 = load i64, i64* %RCX.i777
  %8682 = add i64 %8681, 12099168
  %8683 = load i64, i64* %PC.i775
  %8684 = add i64 %8683, 8
  store i64 %8684, i64* %PC.i775
  %8685 = inttoptr i64 %8682 to i8*
  %8686 = load i8, i8* %8685
  %8687 = zext i8 %8686 to i64
  store i64 %8687, i64* %RAX.i776, align 8
  store %struct.Memory* %loadMem_40c775, %struct.Memory** %MEMORY
  %loadMem_40c77d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8689 = getelementptr inbounds %struct.GPR, %struct.GPR* %8688, i32 0, i32 33
  %8690 = getelementptr inbounds %struct.Reg, %struct.Reg* %8689, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %8690 to i64*
  %8691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8692 = getelementptr inbounds %struct.GPR, %struct.GPR* %8691, i32 0, i32 1
  %8693 = getelementptr inbounds %struct.Reg, %struct.Reg* %8692, i32 0, i32 0
  %EAX.i773 = bitcast %union.anon* %8693 to i32*
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8695 = getelementptr inbounds %struct.GPR, %struct.GPR* %8694, i32 0, i32 15
  %8696 = getelementptr inbounds %struct.Reg, %struct.Reg* %8695, i32 0, i32 0
  %RBP.i774 = bitcast %union.anon* %8696 to i64*
  %8697 = load i32, i32* %EAX.i773
  %8698 = zext i32 %8697 to i64
  %8699 = load i64, i64* %RBP.i774
  %8700 = sub i64 %8699, 12
  %8701 = load i64, i64* %PC.i772
  %8702 = add i64 %8701, 3
  store i64 %8702, i64* %PC.i772
  %8703 = inttoptr i64 %8700 to i32*
  %8704 = load i32, i32* %8703
  %8705 = sub i32 %8697, %8704
  %8706 = icmp ult i32 %8697, %8704
  %8707 = zext i1 %8706 to i8
  %8708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8707, i8* %8708, align 1
  %8709 = and i32 %8705, 255
  %8710 = call i32 @llvm.ctpop.i32(i32 %8709)
  %8711 = trunc i32 %8710 to i8
  %8712 = and i8 %8711, 1
  %8713 = xor i8 %8712, 1
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8713, i8* %8714, align 1
  %8715 = xor i32 %8704, %8697
  %8716 = xor i32 %8715, %8705
  %8717 = lshr i32 %8716, 4
  %8718 = trunc i32 %8717 to i8
  %8719 = and i8 %8718, 1
  %8720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8719, i8* %8720, align 1
  %8721 = icmp eq i32 %8705, 0
  %8722 = zext i1 %8721 to i8
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8722, i8* %8723, align 1
  %8724 = lshr i32 %8705, 31
  %8725 = trunc i32 %8724 to i8
  %8726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8725, i8* %8726, align 1
  %8727 = lshr i32 %8697, 31
  %8728 = lshr i32 %8704, 31
  %8729 = xor i32 %8728, %8727
  %8730 = xor i32 %8724, %8727
  %8731 = add i32 %8730, %8729
  %8732 = icmp eq i32 %8731, 2
  %8733 = zext i1 %8732 to i8
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8733, i8* %8734, align 1
  store %struct.Memory* %loadMem_40c77d, %struct.Memory** %MEMORY
  %loadMem_40c780 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8736 = getelementptr inbounds %struct.GPR, %struct.GPR* %8735, i32 0, i32 33
  %8737 = getelementptr inbounds %struct.Reg, %struct.Reg* %8736, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %8737 to i64*
  %8738 = load i64, i64* %PC.i771
  %8739 = add i64 %8738, 78
  %8740 = load i64, i64* %PC.i771
  %8741 = add i64 %8740, 6
  %8742 = load i64, i64* %PC.i771
  %8743 = add i64 %8742, 6
  store i64 %8743, i64* %PC.i771
  %8744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8745 = load i8, i8* %8744, align 1
  %8746 = icmp eq i8 %8745, 0
  %8747 = zext i1 %8746 to i8
  store i8 %8747, i8* %BRANCH_TAKEN, align 1
  %8748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8749 = select i1 %8746, i64 %8739, i64 %8741
  store i64 %8749, i64* %8748, align 8
  store %struct.Memory* %loadMem_40c780, %struct.Memory** %MEMORY
  %loadBr_40c780 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c780 = icmp eq i8 %loadBr_40c780, 1
  br i1 %cmpBr_40c780, label %block_.L_40c7ce, label %block_40c786

block_40c786:                                     ; preds = %block_.L_40c76c
  %loadMem_40c786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8751 = getelementptr inbounds %struct.GPR, %struct.GPR* %8750, i32 0, i32 33
  %8752 = getelementptr inbounds %struct.Reg, %struct.Reg* %8751, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %8752 to i64*
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8754 = getelementptr inbounds %struct.GPR, %struct.GPR* %8753, i32 0, i32 1
  %8755 = getelementptr inbounds %struct.Reg, %struct.Reg* %8754, i32 0, i32 0
  %RAX.i770 = bitcast %union.anon* %8755 to i64*
  %8756 = load i64, i64* %PC.i769
  %8757 = add i64 %8756, 10
  store i64 %8757, i64* %PC.i769
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i770, align 8
  store %struct.Memory* %loadMem_40c786, %struct.Memory** %MEMORY
  %loadMem_40c790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8759 = getelementptr inbounds %struct.GPR, %struct.GPR* %8758, i32 0, i32 33
  %8760 = getelementptr inbounds %struct.Reg, %struct.Reg* %8759, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %8760 to i64*
  %8761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8762 = getelementptr inbounds %struct.GPR, %struct.GPR* %8761, i32 0, i32 5
  %8763 = getelementptr inbounds %struct.Reg, %struct.Reg* %8762, i32 0, i32 0
  %RCX.i767 = bitcast %union.anon* %8763 to i64*
  %8764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8765 = getelementptr inbounds %struct.GPR, %struct.GPR* %8764, i32 0, i32 15
  %8766 = getelementptr inbounds %struct.Reg, %struct.Reg* %8765, i32 0, i32 0
  %RBP.i768 = bitcast %union.anon* %8766 to i64*
  %8767 = load i64, i64* %RBP.i768
  %8768 = sub i64 %8767, 4
  %8769 = load i64, i64* %PC.i766
  %8770 = add i64 %8769, 3
  store i64 %8770, i64* %PC.i766
  %8771 = inttoptr i64 %8768 to i32*
  %8772 = load i32, i32* %8771
  %8773 = zext i32 %8772 to i64
  store i64 %8773, i64* %RCX.i767, align 8
  store %struct.Memory* %loadMem_40c790, %struct.Memory** %MEMORY
  %loadMem_40c793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8775 = getelementptr inbounds %struct.GPR, %struct.GPR* %8774, i32 0, i32 33
  %8776 = getelementptr inbounds %struct.Reg, %struct.Reg* %8775, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %8776 to i64*
  %8777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8778 = getelementptr inbounds %struct.GPR, %struct.GPR* %8777, i32 0, i32 5
  %8779 = getelementptr inbounds %struct.Reg, %struct.Reg* %8778, i32 0, i32 0
  %RCX.i765 = bitcast %union.anon* %8779 to i64*
  %8780 = load i64, i64* %RCX.i765
  %8781 = load i64, i64* %PC.i764
  %8782 = add i64 %8781, 3
  store i64 %8782, i64* %PC.i764
  %8783 = trunc i64 %8780 to i32
  %8784 = sub i32 %8783, 1
  %8785 = zext i32 %8784 to i64
  store i64 %8785, i64* %RCX.i765, align 8
  %8786 = icmp ult i32 %8783, 1
  %8787 = zext i1 %8786 to i8
  %8788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8787, i8* %8788, align 1
  %8789 = and i32 %8784, 255
  %8790 = call i32 @llvm.ctpop.i32(i32 %8789)
  %8791 = trunc i32 %8790 to i8
  %8792 = and i8 %8791, 1
  %8793 = xor i8 %8792, 1
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8793, i8* %8794, align 1
  %8795 = xor i64 1, %8780
  %8796 = trunc i64 %8795 to i32
  %8797 = xor i32 %8796, %8784
  %8798 = lshr i32 %8797, 4
  %8799 = trunc i32 %8798 to i8
  %8800 = and i8 %8799, 1
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8800, i8* %8801, align 1
  %8802 = icmp eq i32 %8784, 0
  %8803 = zext i1 %8802 to i8
  %8804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8803, i8* %8804, align 1
  %8805 = lshr i32 %8784, 31
  %8806 = trunc i32 %8805 to i8
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8806, i8* %8807, align 1
  %8808 = lshr i32 %8783, 31
  %8809 = xor i32 %8805, %8808
  %8810 = add i32 %8809, %8808
  %8811 = icmp eq i32 %8810, 2
  %8812 = zext i1 %8811 to i8
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8812, i8* %8813, align 1
  store %struct.Memory* %loadMem_40c793, %struct.Memory** %MEMORY
  %loadMem_40c796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8815 = getelementptr inbounds %struct.GPR, %struct.GPR* %8814, i32 0, i32 33
  %8816 = getelementptr inbounds %struct.Reg, %struct.Reg* %8815, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %8816 to i64*
  %8817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8818 = getelementptr inbounds %struct.GPR, %struct.GPR* %8817, i32 0, i32 5
  %8819 = getelementptr inbounds %struct.Reg, %struct.Reg* %8818, i32 0, i32 0
  %ECX.i762 = bitcast %union.anon* %8819 to i32*
  %8820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8821 = getelementptr inbounds %struct.GPR, %struct.GPR* %8820, i32 0, i32 7
  %8822 = getelementptr inbounds %struct.Reg, %struct.Reg* %8821, i32 0, i32 0
  %RDX.i763 = bitcast %union.anon* %8822 to i64*
  %8823 = load i32, i32* %ECX.i762
  %8824 = zext i32 %8823 to i64
  %8825 = load i64, i64* %PC.i761
  %8826 = add i64 %8825, 3
  store i64 %8826, i64* %PC.i761
  %8827 = shl i64 %8824, 32
  %8828 = ashr exact i64 %8827, 32
  store i64 %8828, i64* %RDX.i763, align 8
  store %struct.Memory* %loadMem_40c796, %struct.Memory** %MEMORY
  %loadMem_40c799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8830 = getelementptr inbounds %struct.GPR, %struct.GPR* %8829, i32 0, i32 33
  %8831 = getelementptr inbounds %struct.Reg, %struct.Reg* %8830, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %8831 to i64*
  %8832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8833 = getelementptr inbounds %struct.GPR, %struct.GPR* %8832, i32 0, i32 7
  %8834 = getelementptr inbounds %struct.Reg, %struct.Reg* %8833, i32 0, i32 0
  %RDX.i760 = bitcast %union.anon* %8834 to i64*
  %8835 = load i64, i64* %RDX.i760
  %8836 = mul i64 %8835, 4
  %8837 = add i64 %8836, 11187184
  %8838 = load i64, i64* %PC.i759
  %8839 = add i64 %8838, 8
  store i64 %8839, i64* %PC.i759
  %8840 = inttoptr i64 %8837 to i32*
  %8841 = load i32, i32* %8840
  %8842 = sext i32 %8841 to i64
  store i64 %8842, i64* %RDX.i760, align 8
  store %struct.Memory* %loadMem_40c799, %struct.Memory** %MEMORY
  %loadMem_40c7a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8844 = getelementptr inbounds %struct.GPR, %struct.GPR* %8843, i32 0, i32 33
  %8845 = getelementptr inbounds %struct.Reg, %struct.Reg* %8844, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %8845 to i64*
  %8846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8847 = getelementptr inbounds %struct.GPR, %struct.GPR* %8846, i32 0, i32 7
  %8848 = getelementptr inbounds %struct.Reg, %struct.Reg* %8847, i32 0, i32 0
  %RDX.i758 = bitcast %union.anon* %8848 to i64*
  %8849 = load i64, i64* %RDX.i758
  %8850 = load i64, i64* %PC.i757
  %8851 = add i64 %8850, 7
  store i64 %8851, i64* %PC.i757
  %8852 = sext i64 %8849 to i128
  %8853 = and i128 %8852, -18446744073709551616
  %8854 = zext i64 %8849 to i128
  %8855 = or i128 %8853, %8854
  %8856 = mul i128 744, %8855
  %8857 = trunc i128 %8856 to i64
  store i64 %8857, i64* %RDX.i758, align 8
  %8858 = sext i64 %8857 to i128
  %8859 = icmp ne i128 %8858, %8856
  %8860 = zext i1 %8859 to i8
  %8861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8860, i8* %8861, align 1
  %8862 = trunc i128 %8856 to i32
  %8863 = and i32 %8862, 255
  %8864 = call i32 @llvm.ctpop.i32(i32 %8863)
  %8865 = trunc i32 %8864 to i8
  %8866 = and i8 %8865, 1
  %8867 = xor i8 %8866, 1
  %8868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8867, i8* %8868, align 1
  %8869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8869, align 1
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8870, align 1
  %8871 = lshr i64 %8857, 63
  %8872 = trunc i64 %8871 to i8
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8872, i8* %8873, align 1
  %8874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8860, i8* %8874, align 1
  store %struct.Memory* %loadMem_40c7a1, %struct.Memory** %MEMORY
  %loadMem_40c7a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8876 = getelementptr inbounds %struct.GPR, %struct.GPR* %8875, i32 0, i32 33
  %8877 = getelementptr inbounds %struct.Reg, %struct.Reg* %8876, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %8877 to i64*
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8879 = getelementptr inbounds %struct.GPR, %struct.GPR* %8878, i32 0, i32 1
  %8880 = getelementptr inbounds %struct.Reg, %struct.Reg* %8879, i32 0, i32 0
  %RAX.i755 = bitcast %union.anon* %8880 to i64*
  %8881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8882 = getelementptr inbounds %struct.GPR, %struct.GPR* %8881, i32 0, i32 7
  %8883 = getelementptr inbounds %struct.Reg, %struct.Reg* %8882, i32 0, i32 0
  %RDX.i756 = bitcast %union.anon* %8883 to i64*
  %8884 = load i64, i64* %RAX.i755
  %8885 = load i64, i64* %RDX.i756
  %8886 = load i64, i64* %PC.i754
  %8887 = add i64 %8886, 3
  store i64 %8887, i64* %PC.i754
  %8888 = add i64 %8885, %8884
  store i64 %8888, i64* %RAX.i755, align 8
  %8889 = icmp ult i64 %8888, %8884
  %8890 = icmp ult i64 %8888, %8885
  %8891 = or i1 %8889, %8890
  %8892 = zext i1 %8891 to i8
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8892, i8* %8893, align 1
  %8894 = trunc i64 %8888 to i32
  %8895 = and i32 %8894, 255
  %8896 = call i32 @llvm.ctpop.i32(i32 %8895)
  %8897 = trunc i32 %8896 to i8
  %8898 = and i8 %8897, 1
  %8899 = xor i8 %8898, 1
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8899, i8* %8900, align 1
  %8901 = xor i64 %8885, %8884
  %8902 = xor i64 %8901, %8888
  %8903 = lshr i64 %8902, 4
  %8904 = trunc i64 %8903 to i8
  %8905 = and i8 %8904, 1
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8905, i8* %8906, align 1
  %8907 = icmp eq i64 %8888, 0
  %8908 = zext i1 %8907 to i8
  %8909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8908, i8* %8909, align 1
  %8910 = lshr i64 %8888, 63
  %8911 = trunc i64 %8910 to i8
  %8912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8911, i8* %8912, align 1
  %8913 = lshr i64 %8884, 63
  %8914 = lshr i64 %8885, 63
  %8915 = xor i64 %8910, %8913
  %8916 = xor i64 %8910, %8914
  %8917 = add i64 %8915, %8916
  %8918 = icmp eq i64 %8917, 2
  %8919 = zext i1 %8918 to i8
  %8920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8919, i8* %8920, align 1
  store %struct.Memory* %loadMem_40c7a8, %struct.Memory** %MEMORY
  %loadMem_40c7ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %8921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8922 = getelementptr inbounds %struct.GPR, %struct.GPR* %8921, i32 0, i32 33
  %8923 = getelementptr inbounds %struct.Reg, %struct.Reg* %8922, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %8923 to i64*
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8925 = getelementptr inbounds %struct.GPR, %struct.GPR* %8924, i32 0, i32 1
  %8926 = getelementptr inbounds %struct.Reg, %struct.Reg* %8925, i32 0, i32 0
  %RAX.i752 = bitcast %union.anon* %8926 to i64*
  %8927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8928 = getelementptr inbounds %struct.GPR, %struct.GPR* %8927, i32 0, i32 5
  %8929 = getelementptr inbounds %struct.Reg, %struct.Reg* %8928, i32 0, i32 0
  %RCX.i753 = bitcast %union.anon* %8929 to i64*
  %8930 = load i64, i64* %RAX.i752
  %8931 = add i64 %8930, 740
  %8932 = load i64, i64* %PC.i751
  %8933 = add i64 %8932, 6
  store i64 %8933, i64* %PC.i751
  %8934 = inttoptr i64 %8931 to i32*
  %8935 = load i32, i32* %8934
  %8936 = zext i32 %8935 to i64
  store i64 %8936, i64* %RCX.i753, align 8
  store %struct.Memory* %loadMem_40c7ab, %struct.Memory** %MEMORY
  %loadMem_40c7b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8938 = getelementptr inbounds %struct.GPR, %struct.GPR* %8937, i32 0, i32 33
  %8939 = getelementptr inbounds %struct.Reg, %struct.Reg* %8938, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %8939 to i64*
  %8940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8941 = getelementptr inbounds %struct.GPR, %struct.GPR* %8940, i32 0, i32 5
  %8942 = getelementptr inbounds %struct.Reg, %struct.Reg* %8941, i32 0, i32 0
  %ECX.i750 = bitcast %union.anon* %8942 to i32*
  %8943 = load i32, i32* %ECX.i750
  %8944 = zext i32 %8943 to i64
  %8945 = load i64, i64* %PC.i749
  %8946 = add i64 %8945, 7
  store i64 %8946, i64* %PC.i749
  %8947 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %8948 = sub i32 %8943, %8947
  %8949 = icmp ult i32 %8943, %8947
  %8950 = zext i1 %8949 to i8
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8950, i8* %8951, align 1
  %8952 = and i32 %8948, 255
  %8953 = call i32 @llvm.ctpop.i32(i32 %8952)
  %8954 = trunc i32 %8953 to i8
  %8955 = and i8 %8954, 1
  %8956 = xor i8 %8955, 1
  %8957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8956, i8* %8957, align 1
  %8958 = xor i32 %8947, %8943
  %8959 = xor i32 %8958, %8948
  %8960 = lshr i32 %8959, 4
  %8961 = trunc i32 %8960 to i8
  %8962 = and i8 %8961, 1
  %8963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8962, i8* %8963, align 1
  %8964 = icmp eq i32 %8948, 0
  %8965 = zext i1 %8964 to i8
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8965, i8* %8966, align 1
  %8967 = lshr i32 %8948, 31
  %8968 = trunc i32 %8967 to i8
  %8969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8968, i8* %8969, align 1
  %8970 = lshr i32 %8943, 31
  %8971 = lshr i32 %8947, 31
  %8972 = xor i32 %8971, %8970
  %8973 = xor i32 %8967, %8970
  %8974 = add i32 %8973, %8972
  %8975 = icmp eq i32 %8974, 2
  %8976 = zext i1 %8975 to i8
  %8977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8976, i8* %8977, align 1
  store %struct.Memory* %loadMem_40c7b1, %struct.Memory** %MEMORY
  %loadMem_40c7b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8979 = getelementptr inbounds %struct.GPR, %struct.GPR* %8978, i32 0, i32 33
  %8980 = getelementptr inbounds %struct.Reg, %struct.Reg* %8979, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %8980 to i64*
  %8981 = load i64, i64* %PC.i748
  %8982 = add i64 %8981, 22
  %8983 = load i64, i64* %PC.i748
  %8984 = add i64 %8983, 6
  %8985 = load i64, i64* %PC.i748
  %8986 = add i64 %8985, 6
  store i64 %8986, i64* %PC.i748
  %8987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8988 = load i8, i8* %8987, align 1
  store i8 %8988, i8* %BRANCH_TAKEN, align 1
  %8989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8990 = icmp ne i8 %8988, 0
  %8991 = select i1 %8990, i64 %8982, i64 %8984
  store i64 %8991, i64* %8989, align 8
  store %struct.Memory* %loadMem_40c7b8, %struct.Memory** %MEMORY
  %loadBr_40c7b8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c7b8 = icmp eq i8 %loadBr_40c7b8, 1
  br i1 %cmpBr_40c7b8, label %block_.L_40c7ce, label %block_40c7be

block_40c7be:                                     ; preds = %block_40c786
  %loadMem_40c7be = load %struct.Memory*, %struct.Memory** %MEMORY
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8993 = getelementptr inbounds %struct.GPR, %struct.GPR* %8992, i32 0, i32 33
  %8994 = getelementptr inbounds %struct.Reg, %struct.Reg* %8993, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %8994 to i64*
  %8995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8996 = getelementptr inbounds %struct.GPR, %struct.GPR* %8995, i32 0, i32 11
  %8997 = getelementptr inbounds %struct.Reg, %struct.Reg* %8996, i32 0, i32 0
  %RDI.i746 = bitcast %union.anon* %8997 to i64*
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8999 = getelementptr inbounds %struct.GPR, %struct.GPR* %8998, i32 0, i32 15
  %9000 = getelementptr inbounds %struct.Reg, %struct.Reg* %8999, i32 0, i32 0
  %RBP.i747 = bitcast %union.anon* %9000 to i64*
  %9001 = load i64, i64* %RBP.i747
  %9002 = sub i64 %9001, 8
  %9003 = load i64, i64* %PC.i745
  %9004 = add i64 %9003, 3
  store i64 %9004, i64* %PC.i745
  %9005 = inttoptr i64 %9002 to i32*
  %9006 = load i32, i32* %9005
  %9007 = zext i32 %9006 to i64
  store i64 %9007, i64* %RDI.i746, align 8
  store %struct.Memory* %loadMem_40c7be, %struct.Memory** %MEMORY
  %loadMem_40c7c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9009 = getelementptr inbounds %struct.GPR, %struct.GPR* %9008, i32 0, i32 33
  %9010 = getelementptr inbounds %struct.Reg, %struct.Reg* %9009, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %9010 to i64*
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9012 = getelementptr inbounds %struct.GPR, %struct.GPR* %9011, i32 0, i32 1
  %9013 = getelementptr inbounds %struct.Reg, %struct.Reg* %9012, i32 0, i32 0
  %RAX.i743 = bitcast %union.anon* %9013 to i64*
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9015 = getelementptr inbounds %struct.GPR, %struct.GPR* %9014, i32 0, i32 15
  %9016 = getelementptr inbounds %struct.Reg, %struct.Reg* %9015, i32 0, i32 0
  %RBP.i744 = bitcast %union.anon* %9016 to i64*
  %9017 = load i64, i64* %RBP.i744
  %9018 = sub i64 %9017, 4
  %9019 = load i64, i64* %PC.i742
  %9020 = add i64 %9019, 3
  store i64 %9020, i64* %PC.i742
  %9021 = inttoptr i64 %9018 to i32*
  %9022 = load i32, i32* %9021
  %9023 = zext i32 %9022 to i64
  store i64 %9023, i64* %RAX.i743, align 8
  store %struct.Memory* %loadMem_40c7c1, %struct.Memory** %MEMORY
  %loadMem_40c7c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9025 = getelementptr inbounds %struct.GPR, %struct.GPR* %9024, i32 0, i32 33
  %9026 = getelementptr inbounds %struct.Reg, %struct.Reg* %9025, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %9026 to i64*
  %9027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9028 = getelementptr inbounds %struct.GPR, %struct.GPR* %9027, i32 0, i32 1
  %9029 = getelementptr inbounds %struct.Reg, %struct.Reg* %9028, i32 0, i32 0
  %RAX.i741 = bitcast %union.anon* %9029 to i64*
  %9030 = load i64, i64* %RAX.i741
  %9031 = load i64, i64* %PC.i740
  %9032 = add i64 %9031, 3
  store i64 %9032, i64* %PC.i740
  %9033 = trunc i64 %9030 to i32
  %9034 = sub i32 %9033, 1
  %9035 = zext i32 %9034 to i64
  store i64 %9035, i64* %RAX.i741, align 8
  %9036 = icmp ult i32 %9033, 1
  %9037 = zext i1 %9036 to i8
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9037, i8* %9038, align 1
  %9039 = and i32 %9034, 255
  %9040 = call i32 @llvm.ctpop.i32(i32 %9039)
  %9041 = trunc i32 %9040 to i8
  %9042 = and i8 %9041, 1
  %9043 = xor i8 %9042, 1
  %9044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9043, i8* %9044, align 1
  %9045 = xor i64 1, %9030
  %9046 = trunc i64 %9045 to i32
  %9047 = xor i32 %9046, %9034
  %9048 = lshr i32 %9047, 4
  %9049 = trunc i32 %9048 to i8
  %9050 = and i8 %9049, 1
  %9051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9050, i8* %9051, align 1
  %9052 = icmp eq i32 %9034, 0
  %9053 = zext i1 %9052 to i8
  %9054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9053, i8* %9054, align 1
  %9055 = lshr i32 %9034, 31
  %9056 = trunc i32 %9055 to i8
  %9057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9056, i8* %9057, align 1
  %9058 = lshr i32 %9033, 31
  %9059 = xor i32 %9055, %9058
  %9060 = add i32 %9059, %9058
  %9061 = icmp eq i32 %9060, 2
  %9062 = zext i1 %9061 to i8
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9062, i8* %9063, align 1
  store %struct.Memory* %loadMem_40c7c4, %struct.Memory** %MEMORY
  %loadMem_40c7c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9065 = getelementptr inbounds %struct.GPR, %struct.GPR* %9064, i32 0, i32 33
  %9066 = getelementptr inbounds %struct.Reg, %struct.Reg* %9065, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %9066 to i64*
  %9067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9068 = getelementptr inbounds %struct.GPR, %struct.GPR* %9067, i32 0, i32 1
  %9069 = getelementptr inbounds %struct.Reg, %struct.Reg* %9068, i32 0, i32 0
  %EAX.i738 = bitcast %union.anon* %9069 to i32*
  %9070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9071 = getelementptr inbounds %struct.GPR, %struct.GPR* %9070, i32 0, i32 9
  %9072 = getelementptr inbounds %struct.Reg, %struct.Reg* %9071, i32 0, i32 0
  %RSI.i739 = bitcast %union.anon* %9072 to i64*
  %9073 = load i32, i32* %EAX.i738
  %9074 = zext i32 %9073 to i64
  %9075 = load i64, i64* %PC.i737
  %9076 = add i64 %9075, 2
  store i64 %9076, i64* %PC.i737
  %9077 = and i64 %9074, 4294967295
  store i64 %9077, i64* %RSI.i739, align 8
  store %struct.Memory* %loadMem_40c7c7, %struct.Memory** %MEMORY
  %loadMem1_40c7c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9079 = getelementptr inbounds %struct.GPR, %struct.GPR* %9078, i32 0, i32 33
  %9080 = getelementptr inbounds %struct.Reg, %struct.Reg* %9079, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %9080 to i64*
  %9081 = load i64, i64* %PC.i736
  %9082 = add i64 %9081, 1415
  %9083 = load i64, i64* %PC.i736
  %9084 = add i64 %9083, 5
  %9085 = load i64, i64* %PC.i736
  %9086 = add i64 %9085, 5
  store i64 %9086, i64* %PC.i736
  %9087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9088 = load i64, i64* %9087, align 8
  %9089 = add i64 %9088, -8
  %9090 = inttoptr i64 %9089 to i64*
  store i64 %9084, i64* %9090
  store i64 %9089, i64* %9087, align 8
  %9091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9082, i64* %9091, align 8
  store %struct.Memory* %loadMem1_40c7c9, %struct.Memory** %MEMORY
  %loadMem2_40c7c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40c7c9 = load i64, i64* %3
  %call2_40c7c9 = call %struct.Memory* @sub_40cd50.assimilate_string(%struct.State* %0, i64 %loadPC_40c7c9, %struct.Memory* %loadMem2_40c7c9)
  store %struct.Memory* %call2_40c7c9, %struct.Memory** %MEMORY
  br label %block_.L_40c7ce

block_.L_40c7ce:                                  ; preds = %block_40c7be, %block_40c786, %block_.L_40c76c
  %loadMem_40c7ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9093 = getelementptr inbounds %struct.GPR, %struct.GPR* %9092, i32 0, i32 33
  %9094 = getelementptr inbounds %struct.Reg, %struct.Reg* %9093, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %9094 to i64*
  %9095 = load i64, i64* %PC.i735
  %9096 = add i64 %9095, 5
  %9097 = load i64, i64* %PC.i735
  %9098 = add i64 %9097, 5
  store i64 %9098, i64* %PC.i735
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9096, i64* %9099, align 8
  store %struct.Memory* %loadMem_40c7ce, %struct.Memory** %MEMORY
  br label %block_.L_40c7d3

block_.L_40c7d3:                                  ; preds = %block_.L_40c7ce, %block_40c622
  %loadMem_40c7d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9101 = getelementptr inbounds %struct.GPR, %struct.GPR* %9100, i32 0, i32 33
  %9102 = getelementptr inbounds %struct.Reg, %struct.Reg* %9101, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %9102 to i64*
  %9103 = load i64, i64* %PC.i734
  %9104 = add i64 %9103, 5
  %9105 = load i64, i64* %PC.i734
  %9106 = add i64 %9105, 5
  store i64 %9106, i64* %PC.i734
  %9107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9104, i64* %9107, align 8
  store %struct.Memory* %loadMem_40c7d3, %struct.Memory** %MEMORY
  br label %block_.L_40c7d8

block_.L_40c7d8:                                  ; preds = %block_.L_40c7d3, %block_.L_40c593
  %loadMem_40c7d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9109 = getelementptr inbounds %struct.GPR, %struct.GPR* %9108, i32 0, i32 33
  %9110 = getelementptr inbounds %struct.Reg, %struct.Reg* %9109, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %9110 to i64*
  %9111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9112 = getelementptr inbounds %struct.GPR, %struct.GPR* %9111, i32 0, i32 1
  %9113 = getelementptr inbounds %struct.Reg, %struct.Reg* %9112, i32 0, i32 0
  %RAX.i732 = bitcast %union.anon* %9113 to i64*
  %9114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9115 = getelementptr inbounds %struct.GPR, %struct.GPR* %9114, i32 0, i32 15
  %9116 = getelementptr inbounds %struct.Reg, %struct.Reg* %9115, i32 0, i32 0
  %RBP.i733 = bitcast %union.anon* %9116 to i64*
  %9117 = load i64, i64* %RBP.i733
  %9118 = sub i64 %9117, 4
  %9119 = load i64, i64* %PC.i731
  %9120 = add i64 %9119, 3
  store i64 %9120, i64* %PC.i731
  %9121 = inttoptr i64 %9118 to i32*
  %9122 = load i32, i32* %9121
  %9123 = zext i32 %9122 to i64
  store i64 %9123, i64* %RAX.i732, align 8
  store %struct.Memory* %loadMem_40c7d8, %struct.Memory** %MEMORY
  %loadMem_40c7db = load %struct.Memory*, %struct.Memory** %MEMORY
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9125 = getelementptr inbounds %struct.GPR, %struct.GPR* %9124, i32 0, i32 33
  %9126 = getelementptr inbounds %struct.Reg, %struct.Reg* %9125, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %9126 to i64*
  %9127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9128 = getelementptr inbounds %struct.GPR, %struct.GPR* %9127, i32 0, i32 1
  %9129 = getelementptr inbounds %struct.Reg, %struct.Reg* %9128, i32 0, i32 0
  %RAX.i730 = bitcast %union.anon* %9129 to i64*
  %9130 = load i64, i64* %RAX.i730
  %9131 = load i64, i64* %PC.i729
  %9132 = add i64 %9131, 3
  store i64 %9132, i64* %PC.i729
  %9133 = trunc i64 %9130 to i32
  %9134 = sub i32 %9133, 20
  %9135 = zext i32 %9134 to i64
  store i64 %9135, i64* %RAX.i730, align 8
  %9136 = icmp ult i32 %9133, 20
  %9137 = zext i1 %9136 to i8
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9137, i8* %9138, align 1
  %9139 = and i32 %9134, 255
  %9140 = call i32 @llvm.ctpop.i32(i32 %9139)
  %9141 = trunc i32 %9140 to i8
  %9142 = and i8 %9141, 1
  %9143 = xor i8 %9142, 1
  %9144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9143, i8* %9144, align 1
  %9145 = xor i64 20, %9130
  %9146 = trunc i64 %9145 to i32
  %9147 = xor i32 %9146, %9134
  %9148 = lshr i32 %9147, 4
  %9149 = trunc i32 %9148 to i8
  %9150 = and i8 %9149, 1
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9150, i8* %9151, align 1
  %9152 = icmp eq i32 %9134, 0
  %9153 = zext i1 %9152 to i8
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9153, i8* %9154, align 1
  %9155 = lshr i32 %9134, 31
  %9156 = trunc i32 %9155 to i8
  %9157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9156, i8* %9157, align 1
  %9158 = lshr i32 %9133, 31
  %9159 = xor i32 %9155, %9158
  %9160 = add i32 %9159, %9158
  %9161 = icmp eq i32 %9160, 2
  %9162 = zext i1 %9161 to i8
  %9163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9162, i8* %9163, align 1
  store %struct.Memory* %loadMem_40c7db, %struct.Memory** %MEMORY
  %loadMem_40c7de = load %struct.Memory*, %struct.Memory** %MEMORY
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9165 = getelementptr inbounds %struct.GPR, %struct.GPR* %9164, i32 0, i32 33
  %9166 = getelementptr inbounds %struct.Reg, %struct.Reg* %9165, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %9166 to i64*
  %9167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9168 = getelementptr inbounds %struct.GPR, %struct.GPR* %9167, i32 0, i32 1
  %9169 = getelementptr inbounds %struct.Reg, %struct.Reg* %9168, i32 0, i32 0
  %EAX.i727 = bitcast %union.anon* %9169 to i32*
  %9170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9171 = getelementptr inbounds %struct.GPR, %struct.GPR* %9170, i32 0, i32 5
  %9172 = getelementptr inbounds %struct.Reg, %struct.Reg* %9171, i32 0, i32 0
  %RCX.i728 = bitcast %union.anon* %9172 to i64*
  %9173 = load i32, i32* %EAX.i727
  %9174 = zext i32 %9173 to i64
  %9175 = load i64, i64* %PC.i726
  %9176 = add i64 %9175, 3
  store i64 %9176, i64* %PC.i726
  %9177 = shl i64 %9174, 32
  %9178 = ashr exact i64 %9177, 32
  store i64 %9178, i64* %RCX.i728, align 8
  store %struct.Memory* %loadMem_40c7de, %struct.Memory** %MEMORY
  %loadMem_40c7e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9180 = getelementptr inbounds %struct.GPR, %struct.GPR* %9179, i32 0, i32 33
  %9181 = getelementptr inbounds %struct.Reg, %struct.Reg* %9180, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %9181 to i64*
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9183 = getelementptr inbounds %struct.GPR, %struct.GPR* %9182, i32 0, i32 1
  %9184 = getelementptr inbounds %struct.Reg, %struct.Reg* %9183, i32 0, i32 0
  %RAX.i724 = bitcast %union.anon* %9184 to i64*
  %9185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9186 = getelementptr inbounds %struct.GPR, %struct.GPR* %9185, i32 0, i32 5
  %9187 = getelementptr inbounds %struct.Reg, %struct.Reg* %9186, i32 0, i32 0
  %RCX.i725 = bitcast %union.anon* %9187 to i64*
  %9188 = load i64, i64* %RCX.i725
  %9189 = add i64 %9188, 12099168
  %9190 = load i64, i64* %PC.i723
  %9191 = add i64 %9190, 8
  store i64 %9191, i64* %PC.i723
  %9192 = inttoptr i64 %9189 to i8*
  %9193 = load i8, i8* %9192
  %9194 = zext i8 %9193 to i64
  store i64 %9194, i64* %RAX.i724, align 8
  store %struct.Memory* %loadMem_40c7e1, %struct.Memory** %MEMORY
  %loadMem_40c7e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9196 = getelementptr inbounds %struct.GPR, %struct.GPR* %9195, i32 0, i32 33
  %9197 = getelementptr inbounds %struct.Reg, %struct.Reg* %9196, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %9197 to i64*
  %9198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9199 = getelementptr inbounds %struct.GPR, %struct.GPR* %9198, i32 0, i32 1
  %9200 = getelementptr inbounds %struct.Reg, %struct.Reg* %9199, i32 0, i32 0
  %EAX.i722 = bitcast %union.anon* %9200 to i32*
  %9201 = load i32, i32* %EAX.i722
  %9202 = zext i32 %9201 to i64
  %9203 = load i64, i64* %PC.i721
  %9204 = add i64 %9203, 3
  store i64 %9204, i64* %PC.i721
  %9205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9205, align 1
  %9206 = and i32 %9201, 255
  %9207 = call i32 @llvm.ctpop.i32(i32 %9206)
  %9208 = trunc i32 %9207 to i8
  %9209 = and i8 %9208, 1
  %9210 = xor i8 %9209, 1
  %9211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9210, i8* %9211, align 1
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9212, align 1
  %9213 = icmp eq i32 %9201, 0
  %9214 = zext i1 %9213 to i8
  %9215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9214, i8* %9215, align 1
  %9216 = lshr i32 %9201, 31
  %9217 = trunc i32 %9216 to i8
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9217, i8* %9218, align 1
  %9219 = lshr i32 %9201, 31
  %9220 = xor i32 %9216, %9219
  %9221 = add i32 %9220, %9219
  %9222 = icmp eq i32 %9221, 2
  %9223 = zext i1 %9222 to i8
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9223, i8* %9224, align 1
  store %struct.Memory* %loadMem_40c7e9, %struct.Memory** %MEMORY
  %loadMem_40c7ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9226 = getelementptr inbounds %struct.GPR, %struct.GPR* %9225, i32 0, i32 33
  %9227 = getelementptr inbounds %struct.Reg, %struct.Reg* %9226, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %9227 to i64*
  %9228 = load i64, i64* %PC.i720
  %9229 = add i64 %9228, 190
  %9230 = load i64, i64* %PC.i720
  %9231 = add i64 %9230, 6
  %9232 = load i64, i64* %PC.i720
  %9233 = add i64 %9232, 6
  store i64 %9233, i64* %PC.i720
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9235 = load i8, i8* %9234, align 1
  %9236 = icmp eq i8 %9235, 0
  %9237 = zext i1 %9236 to i8
  store i8 %9237, i8* %BRANCH_TAKEN, align 1
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9239 = select i1 %9236, i64 %9229, i64 %9231
  store i64 %9239, i64* %9238, align 8
  store %struct.Memory* %loadMem_40c7ec, %struct.Memory** %MEMORY
  %loadBr_40c7ec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c7ec = icmp eq i8 %loadBr_40c7ec, 1
  br i1 %cmpBr_40c7ec, label %block_.L_40c8aa, label %block_40c7f2

block_40c7f2:                                     ; preds = %block_.L_40c7d8
  %loadMem_40c7f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9241 = getelementptr inbounds %struct.GPR, %struct.GPR* %9240, i32 0, i32 33
  %9242 = getelementptr inbounds %struct.Reg, %struct.Reg* %9241, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %9242 to i64*
  %9243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9244 = getelementptr inbounds %struct.GPR, %struct.GPR* %9243, i32 0, i32 1
  %9245 = getelementptr inbounds %struct.Reg, %struct.Reg* %9244, i32 0, i32 0
  %RAX.i718 = bitcast %union.anon* %9245 to i64*
  %9246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9247 = getelementptr inbounds %struct.GPR, %struct.GPR* %9246, i32 0, i32 15
  %9248 = getelementptr inbounds %struct.Reg, %struct.Reg* %9247, i32 0, i32 0
  %RBP.i719 = bitcast %union.anon* %9248 to i64*
  %9249 = load i64, i64* %RBP.i719
  %9250 = sub i64 %9249, 4
  %9251 = load i64, i64* %PC.i717
  %9252 = add i64 %9251, 3
  store i64 %9252, i64* %PC.i717
  %9253 = inttoptr i64 %9250 to i32*
  %9254 = load i32, i32* %9253
  %9255 = zext i32 %9254 to i64
  store i64 %9255, i64* %RAX.i718, align 8
  store %struct.Memory* %loadMem_40c7f2, %struct.Memory** %MEMORY
  %loadMem_40c7f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9257 = getelementptr inbounds %struct.GPR, %struct.GPR* %9256, i32 0, i32 33
  %9258 = getelementptr inbounds %struct.Reg, %struct.Reg* %9257, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %9258 to i64*
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9260 = getelementptr inbounds %struct.GPR, %struct.GPR* %9259, i32 0, i32 1
  %9261 = getelementptr inbounds %struct.Reg, %struct.Reg* %9260, i32 0, i32 0
  %RAX.i716 = bitcast %union.anon* %9261 to i64*
  %9262 = load i64, i64* %RAX.i716
  %9263 = load i64, i64* %PC.i715
  %9264 = add i64 %9263, 3
  store i64 %9264, i64* %PC.i715
  %9265 = trunc i64 %9262 to i32
  %9266 = sub i32 %9265, 20
  %9267 = zext i32 %9266 to i64
  store i64 %9267, i64* %RAX.i716, align 8
  %9268 = icmp ult i32 %9265, 20
  %9269 = zext i1 %9268 to i8
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9269, i8* %9270, align 1
  %9271 = and i32 %9266, 255
  %9272 = call i32 @llvm.ctpop.i32(i32 %9271)
  %9273 = trunc i32 %9272 to i8
  %9274 = and i8 %9273, 1
  %9275 = xor i8 %9274, 1
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9275, i8* %9276, align 1
  %9277 = xor i64 20, %9262
  %9278 = trunc i64 %9277 to i32
  %9279 = xor i32 %9278, %9266
  %9280 = lshr i32 %9279, 4
  %9281 = trunc i32 %9280 to i8
  %9282 = and i8 %9281, 1
  %9283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9282, i8* %9283, align 1
  %9284 = icmp eq i32 %9266, 0
  %9285 = zext i1 %9284 to i8
  %9286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9285, i8* %9286, align 1
  %9287 = lshr i32 %9266, 31
  %9288 = trunc i32 %9287 to i8
  %9289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9288, i8* %9289, align 1
  %9290 = lshr i32 %9265, 31
  %9291 = xor i32 %9287, %9290
  %9292 = add i32 %9291, %9290
  %9293 = icmp eq i32 %9292, 2
  %9294 = zext i1 %9293 to i8
  %9295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9294, i8* %9295, align 1
  store %struct.Memory* %loadMem_40c7f5, %struct.Memory** %MEMORY
  %loadMem_40c7f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9297 = getelementptr inbounds %struct.GPR, %struct.GPR* %9296, i32 0, i32 33
  %9298 = getelementptr inbounds %struct.Reg, %struct.Reg* %9297, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %9298 to i64*
  %9299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9300 = getelementptr inbounds %struct.GPR, %struct.GPR* %9299, i32 0, i32 1
  %9301 = getelementptr inbounds %struct.Reg, %struct.Reg* %9300, i32 0, i32 0
  %EAX.i713 = bitcast %union.anon* %9301 to i32*
  %9302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9303 = getelementptr inbounds %struct.GPR, %struct.GPR* %9302, i32 0, i32 5
  %9304 = getelementptr inbounds %struct.Reg, %struct.Reg* %9303, i32 0, i32 0
  %RCX.i714 = bitcast %union.anon* %9304 to i64*
  %9305 = load i32, i32* %EAX.i713
  %9306 = zext i32 %9305 to i64
  %9307 = load i64, i64* %PC.i712
  %9308 = add i64 %9307, 3
  store i64 %9308, i64* %PC.i712
  %9309 = shl i64 %9306, 32
  %9310 = ashr exact i64 %9309, 32
  store i64 %9310, i64* %RCX.i714, align 8
  store %struct.Memory* %loadMem_40c7f8, %struct.Memory** %MEMORY
  %loadMem_40c7fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9312 = getelementptr inbounds %struct.GPR, %struct.GPR* %9311, i32 0, i32 33
  %9313 = getelementptr inbounds %struct.Reg, %struct.Reg* %9312, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %9313 to i64*
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9315 = getelementptr inbounds %struct.GPR, %struct.GPR* %9314, i32 0, i32 1
  %9316 = getelementptr inbounds %struct.Reg, %struct.Reg* %9315, i32 0, i32 0
  %RAX.i710 = bitcast %union.anon* %9316 to i64*
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9318 = getelementptr inbounds %struct.GPR, %struct.GPR* %9317, i32 0, i32 5
  %9319 = getelementptr inbounds %struct.Reg, %struct.Reg* %9318, i32 0, i32 0
  %RCX.i711 = bitcast %union.anon* %9319 to i64*
  %9320 = load i64, i64* %RCX.i711
  %9321 = mul i64 %9320, 4
  %9322 = add i64 %9321, 11185584
  %9323 = load i64, i64* %PC.i709
  %9324 = add i64 %9323, 7
  store i64 %9324, i64* %PC.i709
  %9325 = inttoptr i64 %9322 to i32*
  %9326 = load i32, i32* %9325
  %9327 = zext i32 %9326 to i64
  store i64 %9327, i64* %RAX.i710, align 8
  store %struct.Memory* %loadMem_40c7fb, %struct.Memory** %MEMORY
  %loadMem_40c802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9329 = getelementptr inbounds %struct.GPR, %struct.GPR* %9328, i32 0, i32 33
  %9330 = getelementptr inbounds %struct.Reg, %struct.Reg* %9329, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %9330 to i64*
  %9331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9332 = getelementptr inbounds %struct.GPR, %struct.GPR* %9331, i32 0, i32 1
  %9333 = getelementptr inbounds %struct.Reg, %struct.Reg* %9332, i32 0, i32 0
  %EAX.i708 = bitcast %union.anon* %9333 to i32*
  %9334 = load i32, i32* %EAX.i708
  %9335 = zext i32 %9334 to i64
  %9336 = load i64, i64* %PC.i707
  %9337 = add i64 %9336, 7
  store i64 %9337, i64* %PC.i707
  %9338 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %9339 = sub i32 %9334, %9338
  %9340 = icmp ult i32 %9334, %9338
  %9341 = zext i1 %9340 to i8
  %9342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9341, i8* %9342, align 1
  %9343 = and i32 %9339, 255
  %9344 = call i32 @llvm.ctpop.i32(i32 %9343)
  %9345 = trunc i32 %9344 to i8
  %9346 = and i8 %9345, 1
  %9347 = xor i8 %9346, 1
  %9348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9347, i8* %9348, align 1
  %9349 = xor i32 %9338, %9334
  %9350 = xor i32 %9349, %9339
  %9351 = lshr i32 %9350, 4
  %9352 = trunc i32 %9351 to i8
  %9353 = and i8 %9352, 1
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9353, i8* %9354, align 1
  %9355 = icmp eq i32 %9339, 0
  %9356 = zext i1 %9355 to i8
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9356, i8* %9357, align 1
  %9358 = lshr i32 %9339, 31
  %9359 = trunc i32 %9358 to i8
  %9360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9359, i8* %9360, align 1
  %9361 = lshr i32 %9334, 31
  %9362 = lshr i32 %9338, 31
  %9363 = xor i32 %9362, %9361
  %9364 = xor i32 %9358, %9361
  %9365 = add i32 %9364, %9363
  %9366 = icmp eq i32 %9365, 2
  %9367 = zext i1 %9366 to i8
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9367, i8* %9368, align 1
  store %struct.Memory* %loadMem_40c802, %struct.Memory** %MEMORY
  %loadMem_40c809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9370 = getelementptr inbounds %struct.GPR, %struct.GPR* %9369, i32 0, i32 33
  %9371 = getelementptr inbounds %struct.Reg, %struct.Reg* %9370, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %9371 to i64*
  %9372 = load i64, i64* %PC.i706
  %9373 = add i64 %9372, 161
  %9374 = load i64, i64* %PC.i706
  %9375 = add i64 %9374, 6
  %9376 = load i64, i64* %PC.i706
  %9377 = add i64 %9376, 6
  store i64 %9377, i64* %PC.i706
  %9378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9379 = load i8, i8* %9378, align 1
  store i8 %9379, i8* %BRANCH_TAKEN, align 1
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9381 = icmp ne i8 %9379, 0
  %9382 = select i1 %9381, i64 %9373, i64 %9375
  store i64 %9382, i64* %9380, align 8
  store %struct.Memory* %loadMem_40c809, %struct.Memory** %MEMORY
  %loadBr_40c809 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c809 = icmp eq i8 %loadBr_40c809, 1
  br i1 %cmpBr_40c809, label %block_.L_40c8aa, label %block_40c80f

block_40c80f:                                     ; preds = %block_40c7f2
  %loadMem_40c80f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9384 = getelementptr inbounds %struct.GPR, %struct.GPR* %9383, i32 0, i32 33
  %9385 = getelementptr inbounds %struct.Reg, %struct.Reg* %9384, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %9385 to i64*
  %9386 = load i64, i64* %PC.i705
  %9387 = add i64 %9386, 5
  %9388 = load i64, i64* %PC.i705
  %9389 = add i64 %9388, 5
  store i64 %9389, i64* %PC.i705
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9387, i64* %9390, align 8
  store %struct.Memory* %loadMem_40c80f, %struct.Memory** %MEMORY
  br label %block_.L_40c814

block_.L_40c814:                                  ; preds = %block_40c80f
  %loadMem_40c814 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9392 = getelementptr inbounds %struct.GPR, %struct.GPR* %9391, i32 0, i32 33
  %9393 = getelementptr inbounds %struct.Reg, %struct.Reg* %9392, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %9393 to i64*
  %9394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9395 = getelementptr inbounds %struct.GPR, %struct.GPR* %9394, i32 0, i32 1
  %9396 = getelementptr inbounds %struct.Reg, %struct.Reg* %9395, i32 0, i32 0
  %RAX.i704 = bitcast %union.anon* %9396 to i64*
  %9397 = load i64, i64* %PC.i703
  %9398 = add i64 %9397, 10
  store i64 %9398, i64* %PC.i703
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i704, align 8
  store %struct.Memory* %loadMem_40c814, %struct.Memory** %MEMORY
  %loadMem_40c81e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9400 = getelementptr inbounds %struct.GPR, %struct.GPR* %9399, i32 0, i32 33
  %9401 = getelementptr inbounds %struct.Reg, %struct.Reg* %9400, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %9401 to i64*
  %9402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9403 = getelementptr inbounds %struct.GPR, %struct.GPR* %9402, i32 0, i32 5
  %9404 = getelementptr inbounds %struct.Reg, %struct.Reg* %9403, i32 0, i32 0
  %RCX.i701 = bitcast %union.anon* %9404 to i64*
  %9405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9406 = getelementptr inbounds %struct.GPR, %struct.GPR* %9405, i32 0, i32 15
  %9407 = getelementptr inbounds %struct.Reg, %struct.Reg* %9406, i32 0, i32 0
  %RBP.i702 = bitcast %union.anon* %9407 to i64*
  %9408 = load i64, i64* %RBP.i702
  %9409 = sub i64 %9408, 8
  %9410 = load i64, i64* %PC.i700
  %9411 = add i64 %9410, 4
  store i64 %9411, i64* %PC.i700
  %9412 = inttoptr i64 %9409 to i32*
  %9413 = load i32, i32* %9412
  %9414 = sext i32 %9413 to i64
  store i64 %9414, i64* %RCX.i701, align 8
  store %struct.Memory* %loadMem_40c81e, %struct.Memory** %MEMORY
  %loadMem_40c822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9416 = getelementptr inbounds %struct.GPR, %struct.GPR* %9415, i32 0, i32 33
  %9417 = getelementptr inbounds %struct.Reg, %struct.Reg* %9416, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %9417 to i64*
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9419 = getelementptr inbounds %struct.GPR, %struct.GPR* %9418, i32 0, i32 5
  %9420 = getelementptr inbounds %struct.Reg, %struct.Reg* %9419, i32 0, i32 0
  %RCX.i699 = bitcast %union.anon* %9420 to i64*
  %9421 = load i64, i64* %RCX.i699
  %9422 = load i64, i64* %PC.i698
  %9423 = add i64 %9422, 7
  store i64 %9423, i64* %PC.i698
  %9424 = sext i64 %9421 to i128
  %9425 = and i128 %9424, -18446744073709551616
  %9426 = zext i64 %9421 to i128
  %9427 = or i128 %9425, %9426
  %9428 = mul i128 744, %9427
  %9429 = trunc i128 %9428 to i64
  store i64 %9429, i64* %RCX.i699, align 8
  %9430 = sext i64 %9429 to i128
  %9431 = icmp ne i128 %9430, %9428
  %9432 = zext i1 %9431 to i8
  %9433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9432, i8* %9433, align 1
  %9434 = trunc i128 %9428 to i32
  %9435 = and i32 %9434, 255
  %9436 = call i32 @llvm.ctpop.i32(i32 %9435)
  %9437 = trunc i32 %9436 to i8
  %9438 = and i8 %9437, 1
  %9439 = xor i8 %9438, 1
  %9440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9439, i8* %9440, align 1
  %9441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9441, align 1
  %9442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9442, align 1
  %9443 = lshr i64 %9429, 63
  %9444 = trunc i64 %9443 to i8
  %9445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9444, i8* %9445, align 1
  %9446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9432, i8* %9446, align 1
  store %struct.Memory* %loadMem_40c822, %struct.Memory** %MEMORY
  %loadMem_40c829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9448 = getelementptr inbounds %struct.GPR, %struct.GPR* %9447, i32 0, i32 33
  %9449 = getelementptr inbounds %struct.Reg, %struct.Reg* %9448, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %9449 to i64*
  %9450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9451 = getelementptr inbounds %struct.GPR, %struct.GPR* %9450, i32 0, i32 1
  %9452 = getelementptr inbounds %struct.Reg, %struct.Reg* %9451, i32 0, i32 0
  %RAX.i696 = bitcast %union.anon* %9452 to i64*
  %9453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9454 = getelementptr inbounds %struct.GPR, %struct.GPR* %9453, i32 0, i32 5
  %9455 = getelementptr inbounds %struct.Reg, %struct.Reg* %9454, i32 0, i32 0
  %RCX.i697 = bitcast %union.anon* %9455 to i64*
  %9456 = load i64, i64* %RAX.i696
  %9457 = load i64, i64* %RCX.i697
  %9458 = load i64, i64* %PC.i695
  %9459 = add i64 %9458, 3
  store i64 %9459, i64* %PC.i695
  %9460 = add i64 %9457, %9456
  store i64 %9460, i64* %RAX.i696, align 8
  %9461 = icmp ult i64 %9460, %9456
  %9462 = icmp ult i64 %9460, %9457
  %9463 = or i1 %9461, %9462
  %9464 = zext i1 %9463 to i8
  %9465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9464, i8* %9465, align 1
  %9466 = trunc i64 %9460 to i32
  %9467 = and i32 %9466, 255
  %9468 = call i32 @llvm.ctpop.i32(i32 %9467)
  %9469 = trunc i32 %9468 to i8
  %9470 = and i8 %9469, 1
  %9471 = xor i8 %9470, 1
  %9472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9471, i8* %9472, align 1
  %9473 = xor i64 %9457, %9456
  %9474 = xor i64 %9473, %9460
  %9475 = lshr i64 %9474, 4
  %9476 = trunc i64 %9475 to i8
  %9477 = and i8 %9476, 1
  %9478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9477, i8* %9478, align 1
  %9479 = icmp eq i64 %9460, 0
  %9480 = zext i1 %9479 to i8
  %9481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9480, i8* %9481, align 1
  %9482 = lshr i64 %9460, 63
  %9483 = trunc i64 %9482 to i8
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9483, i8* %9484, align 1
  %9485 = lshr i64 %9456, 63
  %9486 = lshr i64 %9457, 63
  %9487 = xor i64 %9482, %9485
  %9488 = xor i64 %9482, %9486
  %9489 = add i64 %9487, %9488
  %9490 = icmp eq i64 %9489, 2
  %9491 = zext i1 %9490 to i8
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9491, i8* %9492, align 1
  store %struct.Memory* %loadMem_40c829, %struct.Memory** %MEMORY
  %loadMem_40c82c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9494 = getelementptr inbounds %struct.GPR, %struct.GPR* %9493, i32 0, i32 33
  %9495 = getelementptr inbounds %struct.Reg, %struct.Reg* %9494, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %9495 to i64*
  %9496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9497 = getelementptr inbounds %struct.GPR, %struct.GPR* %9496, i32 0, i32 1
  %9498 = getelementptr inbounds %struct.Reg, %struct.Reg* %9497, i32 0, i32 0
  %RAX.i694 = bitcast %union.anon* %9498 to i64*
  %9499 = load i64, i64* %RAX.i694
  %9500 = add i64 %9499, 12
  %9501 = load i64, i64* %PC.i693
  %9502 = add i64 %9501, 4
  store i64 %9502, i64* %PC.i693
  %9503 = inttoptr i64 %9500 to i32*
  %9504 = load i32, i32* %9503
  %9505 = sub i32 %9504, 20
  %9506 = icmp ult i32 %9504, 20
  %9507 = zext i1 %9506 to i8
  %9508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9507, i8* %9508, align 1
  %9509 = and i32 %9505, 255
  %9510 = call i32 @llvm.ctpop.i32(i32 %9509)
  %9511 = trunc i32 %9510 to i8
  %9512 = and i8 %9511, 1
  %9513 = xor i8 %9512, 1
  %9514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9513, i8* %9514, align 1
  %9515 = xor i32 %9504, 20
  %9516 = xor i32 %9515, %9505
  %9517 = lshr i32 %9516, 4
  %9518 = trunc i32 %9517 to i8
  %9519 = and i8 %9518, 1
  %9520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9519, i8* %9520, align 1
  %9521 = icmp eq i32 %9505, 0
  %9522 = zext i1 %9521 to i8
  %9523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9522, i8* %9523, align 1
  %9524 = lshr i32 %9505, 31
  %9525 = trunc i32 %9524 to i8
  %9526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9525, i8* %9526, align 1
  %9527 = lshr i32 %9504, 31
  %9528 = xor i32 %9524, %9527
  %9529 = add i32 %9528, %9527
  %9530 = icmp eq i32 %9529, 2
  %9531 = zext i1 %9530 to i8
  %9532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9531, i8* %9532, align 1
  store %struct.Memory* %loadMem_40c82c, %struct.Memory** %MEMORY
  %loadMem_40c830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9534 = getelementptr inbounds %struct.GPR, %struct.GPR* %9533, i32 0, i32 33
  %9535 = getelementptr inbounds %struct.Reg, %struct.Reg* %9534, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %9535 to i64*
  %9536 = load i64, i64* %PC.i692
  %9537 = add i64 %9536, 61
  %9538 = load i64, i64* %PC.i692
  %9539 = add i64 %9538, 6
  %9540 = load i64, i64* %PC.i692
  %9541 = add i64 %9540, 6
  store i64 %9541, i64* %PC.i692
  %9542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9543 = load i8, i8* %9542, align 1
  %9544 = icmp ne i8 %9543, 0
  %9545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9546 = load i8, i8* %9545, align 1
  %9547 = icmp ne i8 %9546, 0
  %9548 = xor i1 %9544, %9547
  %9549 = xor i1 %9548, true
  %9550 = zext i1 %9549 to i8
  store i8 %9550, i8* %BRANCH_TAKEN, align 1
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9552 = select i1 %9548, i64 %9539, i64 %9537
  store i64 %9552, i64* %9551, align 8
  store %struct.Memory* %loadMem_40c830, %struct.Memory** %MEMORY
  %loadBr_40c830 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c830 = icmp eq i8 %loadBr_40c830, 1
  br i1 %cmpBr_40c830, label %block_.L_40c86d, label %block_40c836

block_40c836:                                     ; preds = %block_.L_40c814
  %loadMem_40c836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9554 = getelementptr inbounds %struct.GPR, %struct.GPR* %9553, i32 0, i32 33
  %9555 = getelementptr inbounds %struct.Reg, %struct.Reg* %9554, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %9555 to i64*
  %9556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9557 = getelementptr inbounds %struct.GPR, %struct.GPR* %9556, i32 0, i32 1
  %9558 = getelementptr inbounds %struct.Reg, %struct.Reg* %9557, i32 0, i32 0
  %RAX.i691 = bitcast %union.anon* %9558 to i64*
  %9559 = load i64, i64* %PC.i690
  %9560 = add i64 %9559, 10
  store i64 %9560, i64* %PC.i690
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i691, align 8
  store %struct.Memory* %loadMem_40c836, %struct.Memory** %MEMORY
  %loadMem_40c840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9562 = getelementptr inbounds %struct.GPR, %struct.GPR* %9561, i32 0, i32 33
  %9563 = getelementptr inbounds %struct.Reg, %struct.Reg* %9562, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %9563 to i64*
  %9564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9565 = getelementptr inbounds %struct.GPR, %struct.GPR* %9564, i32 0, i32 5
  %9566 = getelementptr inbounds %struct.Reg, %struct.Reg* %9565, i32 0, i32 0
  %RCX.i688 = bitcast %union.anon* %9566 to i64*
  %9567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9568 = getelementptr inbounds %struct.GPR, %struct.GPR* %9567, i32 0, i32 15
  %9569 = getelementptr inbounds %struct.Reg, %struct.Reg* %9568, i32 0, i32 0
  %RBP.i689 = bitcast %union.anon* %9569 to i64*
  %9570 = load i64, i64* %RBP.i689
  %9571 = sub i64 %9570, 4
  %9572 = load i64, i64* %PC.i687
  %9573 = add i64 %9572, 3
  store i64 %9573, i64* %PC.i687
  %9574 = inttoptr i64 %9571 to i32*
  %9575 = load i32, i32* %9574
  %9576 = zext i32 %9575 to i64
  store i64 %9576, i64* %RCX.i688, align 8
  store %struct.Memory* %loadMem_40c840, %struct.Memory** %MEMORY
  %loadMem_40c843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9578 = getelementptr inbounds %struct.GPR, %struct.GPR* %9577, i32 0, i32 33
  %9579 = getelementptr inbounds %struct.Reg, %struct.Reg* %9578, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %9579 to i64*
  %9580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9581 = getelementptr inbounds %struct.GPR, %struct.GPR* %9580, i32 0, i32 5
  %9582 = getelementptr inbounds %struct.Reg, %struct.Reg* %9581, i32 0, i32 0
  %RCX.i686 = bitcast %union.anon* %9582 to i64*
  %9583 = load i64, i64* %RCX.i686
  %9584 = load i64, i64* %PC.i685
  %9585 = add i64 %9584, 3
  store i64 %9585, i64* %PC.i685
  %9586 = trunc i64 %9583 to i32
  %9587 = sub i32 %9586, 20
  %9588 = zext i32 %9587 to i64
  store i64 %9588, i64* %RCX.i686, align 8
  %9589 = icmp ult i32 %9586, 20
  %9590 = zext i1 %9589 to i8
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9590, i8* %9591, align 1
  %9592 = and i32 %9587, 255
  %9593 = call i32 @llvm.ctpop.i32(i32 %9592)
  %9594 = trunc i32 %9593 to i8
  %9595 = and i8 %9594, 1
  %9596 = xor i8 %9595, 1
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9596, i8* %9597, align 1
  %9598 = xor i64 20, %9583
  %9599 = trunc i64 %9598 to i32
  %9600 = xor i32 %9599, %9587
  %9601 = lshr i32 %9600, 4
  %9602 = trunc i32 %9601 to i8
  %9603 = and i8 %9602, 1
  %9604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9603, i8* %9604, align 1
  %9605 = icmp eq i32 %9587, 0
  %9606 = zext i1 %9605 to i8
  %9607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9606, i8* %9607, align 1
  %9608 = lshr i32 %9587, 31
  %9609 = trunc i32 %9608 to i8
  %9610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9609, i8* %9610, align 1
  %9611 = lshr i32 %9586, 31
  %9612 = xor i32 %9608, %9611
  %9613 = add i32 %9612, %9611
  %9614 = icmp eq i32 %9613, 2
  %9615 = zext i1 %9614 to i8
  %9616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9615, i8* %9616, align 1
  store %struct.Memory* %loadMem_40c843, %struct.Memory** %MEMORY
  %loadMem_40c846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9618 = getelementptr inbounds %struct.GPR, %struct.GPR* %9617, i32 0, i32 33
  %9619 = getelementptr inbounds %struct.Reg, %struct.Reg* %9618, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %9619 to i64*
  %9620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9621 = getelementptr inbounds %struct.GPR, %struct.GPR* %9620, i32 0, i32 7
  %9622 = getelementptr inbounds %struct.Reg, %struct.Reg* %9621, i32 0, i32 0
  %RDX.i683 = bitcast %union.anon* %9622 to i64*
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9624 = getelementptr inbounds %struct.GPR, %struct.GPR* %9623, i32 0, i32 15
  %9625 = getelementptr inbounds %struct.Reg, %struct.Reg* %9624, i32 0, i32 0
  %RBP.i684 = bitcast %union.anon* %9625 to i64*
  %9626 = load i64, i64* %RBP.i684
  %9627 = sub i64 %9626, 8
  %9628 = load i64, i64* %PC.i682
  %9629 = add i64 %9628, 4
  store i64 %9629, i64* %PC.i682
  %9630 = inttoptr i64 %9627 to i32*
  %9631 = load i32, i32* %9630
  %9632 = sext i32 %9631 to i64
  store i64 %9632, i64* %RDX.i683, align 8
  store %struct.Memory* %loadMem_40c846, %struct.Memory** %MEMORY
  %loadMem_40c84a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9634 = getelementptr inbounds %struct.GPR, %struct.GPR* %9633, i32 0, i32 33
  %9635 = getelementptr inbounds %struct.Reg, %struct.Reg* %9634, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %9635 to i64*
  %9636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9637 = getelementptr inbounds %struct.GPR, %struct.GPR* %9636, i32 0, i32 7
  %9638 = getelementptr inbounds %struct.Reg, %struct.Reg* %9637, i32 0, i32 0
  %RDX.i681 = bitcast %union.anon* %9638 to i64*
  %9639 = load i64, i64* %RDX.i681
  %9640 = load i64, i64* %PC.i680
  %9641 = add i64 %9640, 7
  store i64 %9641, i64* %PC.i680
  %9642 = sext i64 %9639 to i128
  %9643 = and i128 %9642, -18446744073709551616
  %9644 = zext i64 %9639 to i128
  %9645 = or i128 %9643, %9644
  %9646 = mul i128 744, %9645
  %9647 = trunc i128 %9646 to i64
  store i64 %9647, i64* %RDX.i681, align 8
  %9648 = sext i64 %9647 to i128
  %9649 = icmp ne i128 %9648, %9646
  %9650 = zext i1 %9649 to i8
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9650, i8* %9651, align 1
  %9652 = trunc i128 %9646 to i32
  %9653 = and i32 %9652, 255
  %9654 = call i32 @llvm.ctpop.i32(i32 %9653)
  %9655 = trunc i32 %9654 to i8
  %9656 = and i8 %9655, 1
  %9657 = xor i8 %9656, 1
  %9658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9657, i8* %9658, align 1
  %9659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9659, align 1
  %9660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9660, align 1
  %9661 = lshr i64 %9647, 63
  %9662 = trunc i64 %9661 to i8
  %9663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9662, i8* %9663, align 1
  %9664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9650, i8* %9664, align 1
  store %struct.Memory* %loadMem_40c84a, %struct.Memory** %MEMORY
  %loadMem_40c851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9666 = getelementptr inbounds %struct.GPR, %struct.GPR* %9665, i32 0, i32 33
  %9667 = getelementptr inbounds %struct.Reg, %struct.Reg* %9666, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %9667 to i64*
  %9668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9669 = getelementptr inbounds %struct.GPR, %struct.GPR* %9668, i32 0, i32 1
  %9670 = getelementptr inbounds %struct.Reg, %struct.Reg* %9669, i32 0, i32 0
  %RAX.i678 = bitcast %union.anon* %9670 to i64*
  %9671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9672 = getelementptr inbounds %struct.GPR, %struct.GPR* %9671, i32 0, i32 9
  %9673 = getelementptr inbounds %struct.Reg, %struct.Reg* %9672, i32 0, i32 0
  %RSI.i679 = bitcast %union.anon* %9673 to i64*
  %9674 = load i64, i64* %RAX.i678
  %9675 = load i64, i64* %PC.i677
  %9676 = add i64 %9675, 3
  store i64 %9676, i64* %PC.i677
  store i64 %9674, i64* %RSI.i679, align 8
  store %struct.Memory* %loadMem_40c851, %struct.Memory** %MEMORY
  %loadMem_40c854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9678 = getelementptr inbounds %struct.GPR, %struct.GPR* %9677, i32 0, i32 33
  %9679 = getelementptr inbounds %struct.Reg, %struct.Reg* %9678, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %9679 to i64*
  %9680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9681 = getelementptr inbounds %struct.GPR, %struct.GPR* %9680, i32 0, i32 7
  %9682 = getelementptr inbounds %struct.Reg, %struct.Reg* %9681, i32 0, i32 0
  %RDX.i675 = bitcast %union.anon* %9682 to i64*
  %9683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9684 = getelementptr inbounds %struct.GPR, %struct.GPR* %9683, i32 0, i32 9
  %9685 = getelementptr inbounds %struct.Reg, %struct.Reg* %9684, i32 0, i32 0
  %RSI.i676 = bitcast %union.anon* %9685 to i64*
  %9686 = load i64, i64* %RSI.i676
  %9687 = load i64, i64* %RDX.i675
  %9688 = load i64, i64* %PC.i674
  %9689 = add i64 %9688, 3
  store i64 %9689, i64* %PC.i674
  %9690 = add i64 %9687, %9686
  store i64 %9690, i64* %RSI.i676, align 8
  %9691 = icmp ult i64 %9690, %9686
  %9692 = icmp ult i64 %9690, %9687
  %9693 = or i1 %9691, %9692
  %9694 = zext i1 %9693 to i8
  %9695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9694, i8* %9695, align 1
  %9696 = trunc i64 %9690 to i32
  %9697 = and i32 %9696, 255
  %9698 = call i32 @llvm.ctpop.i32(i32 %9697)
  %9699 = trunc i32 %9698 to i8
  %9700 = and i8 %9699, 1
  %9701 = xor i8 %9700, 1
  %9702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9701, i8* %9702, align 1
  %9703 = xor i64 %9687, %9686
  %9704 = xor i64 %9703, %9690
  %9705 = lshr i64 %9704, 4
  %9706 = trunc i64 %9705 to i8
  %9707 = and i8 %9706, 1
  %9708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9707, i8* %9708, align 1
  %9709 = icmp eq i64 %9690, 0
  %9710 = zext i1 %9709 to i8
  %9711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9710, i8* %9711, align 1
  %9712 = lshr i64 %9690, 63
  %9713 = trunc i64 %9712 to i8
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9713, i8* %9714, align 1
  %9715 = lshr i64 %9686, 63
  %9716 = lshr i64 %9687, 63
  %9717 = xor i64 %9712, %9715
  %9718 = xor i64 %9712, %9716
  %9719 = add i64 %9717, %9718
  %9720 = icmp eq i64 %9719, 2
  %9721 = zext i1 %9720 to i8
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9721, i8* %9722, align 1
  store %struct.Memory* %loadMem_40c854, %struct.Memory** %MEMORY
  %loadMem_40c857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9724 = getelementptr inbounds %struct.GPR, %struct.GPR* %9723, i32 0, i32 33
  %9725 = getelementptr inbounds %struct.Reg, %struct.Reg* %9724, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %9725 to i64*
  %9726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9727 = getelementptr inbounds %struct.GPR, %struct.GPR* %9726, i32 0, i32 7
  %9728 = getelementptr inbounds %struct.Reg, %struct.Reg* %9727, i32 0, i32 0
  %RDX.i672 = bitcast %union.anon* %9728 to i64*
  %9729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9730 = getelementptr inbounds %struct.GPR, %struct.GPR* %9729, i32 0, i32 15
  %9731 = getelementptr inbounds %struct.Reg, %struct.Reg* %9730, i32 0, i32 0
  %RBP.i673 = bitcast %union.anon* %9731 to i64*
  %9732 = load i64, i64* %RBP.i673
  %9733 = sub i64 %9732, 8
  %9734 = load i64, i64* %PC.i671
  %9735 = add i64 %9734, 4
  store i64 %9735, i64* %PC.i671
  %9736 = inttoptr i64 %9733 to i32*
  %9737 = load i32, i32* %9736
  %9738 = sext i32 %9737 to i64
  store i64 %9738, i64* %RDX.i672, align 8
  store %struct.Memory* %loadMem_40c857, %struct.Memory** %MEMORY
  %loadMem_40c85b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9740 = getelementptr inbounds %struct.GPR, %struct.GPR* %9739, i32 0, i32 33
  %9741 = getelementptr inbounds %struct.Reg, %struct.Reg* %9740, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %9741 to i64*
  %9742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9743 = getelementptr inbounds %struct.GPR, %struct.GPR* %9742, i32 0, i32 7
  %9744 = getelementptr inbounds %struct.Reg, %struct.Reg* %9743, i32 0, i32 0
  %RDX.i670 = bitcast %union.anon* %9744 to i64*
  %9745 = load i64, i64* %RDX.i670
  %9746 = load i64, i64* %PC.i669
  %9747 = add i64 %9746, 7
  store i64 %9747, i64* %PC.i669
  %9748 = sext i64 %9745 to i128
  %9749 = and i128 %9748, -18446744073709551616
  %9750 = zext i64 %9745 to i128
  %9751 = or i128 %9749, %9750
  %9752 = mul i128 744, %9751
  %9753 = trunc i128 %9752 to i64
  store i64 %9753, i64* %RDX.i670, align 8
  %9754 = sext i64 %9753 to i128
  %9755 = icmp ne i128 %9754, %9752
  %9756 = zext i1 %9755 to i8
  %9757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9756, i8* %9757, align 1
  %9758 = trunc i128 %9752 to i32
  %9759 = and i32 %9758, 255
  %9760 = call i32 @llvm.ctpop.i32(i32 %9759)
  %9761 = trunc i32 %9760 to i8
  %9762 = and i8 %9761, 1
  %9763 = xor i8 %9762, 1
  %9764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9763, i8* %9764, align 1
  %9765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9765, align 1
  %9766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9766, align 1
  %9767 = lshr i64 %9753, 63
  %9768 = trunc i64 %9767 to i8
  %9769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9768, i8* %9769, align 1
  %9770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9756, i8* %9770, align 1
  store %struct.Memory* %loadMem_40c85b, %struct.Memory** %MEMORY
  %loadMem_40c862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9772 = getelementptr inbounds %struct.GPR, %struct.GPR* %9771, i32 0, i32 33
  %9773 = getelementptr inbounds %struct.Reg, %struct.Reg* %9772, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %9773 to i64*
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9775 = getelementptr inbounds %struct.GPR, %struct.GPR* %9774, i32 0, i32 1
  %9776 = getelementptr inbounds %struct.Reg, %struct.Reg* %9775, i32 0, i32 0
  %RAX.i667 = bitcast %union.anon* %9776 to i64*
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9778 = getelementptr inbounds %struct.GPR, %struct.GPR* %9777, i32 0, i32 7
  %9779 = getelementptr inbounds %struct.Reg, %struct.Reg* %9778, i32 0, i32 0
  %RDX.i668 = bitcast %union.anon* %9779 to i64*
  %9780 = load i64, i64* %RAX.i667
  %9781 = load i64, i64* %RDX.i668
  %9782 = load i64, i64* %PC.i666
  %9783 = add i64 %9782, 3
  store i64 %9783, i64* %PC.i666
  %9784 = add i64 %9781, %9780
  store i64 %9784, i64* %RAX.i667, align 8
  %9785 = icmp ult i64 %9784, %9780
  %9786 = icmp ult i64 %9784, %9781
  %9787 = or i1 %9785, %9786
  %9788 = zext i1 %9787 to i8
  %9789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9788, i8* %9789, align 1
  %9790 = trunc i64 %9784 to i32
  %9791 = and i32 %9790, 255
  %9792 = call i32 @llvm.ctpop.i32(i32 %9791)
  %9793 = trunc i32 %9792 to i8
  %9794 = and i8 %9793, 1
  %9795 = xor i8 %9794, 1
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9795, i8* %9796, align 1
  %9797 = xor i64 %9781, %9780
  %9798 = xor i64 %9797, %9784
  %9799 = lshr i64 %9798, 4
  %9800 = trunc i64 %9799 to i8
  %9801 = and i8 %9800, 1
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9801, i8* %9802, align 1
  %9803 = icmp eq i64 %9784, 0
  %9804 = zext i1 %9803 to i8
  %9805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9804, i8* %9805, align 1
  %9806 = lshr i64 %9784, 63
  %9807 = trunc i64 %9806 to i8
  %9808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9807, i8* %9808, align 1
  %9809 = lshr i64 %9780, 63
  %9810 = lshr i64 %9781, 63
  %9811 = xor i64 %9806, %9809
  %9812 = xor i64 %9806, %9810
  %9813 = add i64 %9811, %9812
  %9814 = icmp eq i64 %9813, 2
  %9815 = zext i1 %9814 to i8
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9815, i8* %9816, align 1
  store %struct.Memory* %loadMem_40c862, %struct.Memory** %MEMORY
  %loadMem_40c865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9818 = getelementptr inbounds %struct.GPR, %struct.GPR* %9817, i32 0, i32 33
  %9819 = getelementptr inbounds %struct.Reg, %struct.Reg* %9818, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %9819 to i64*
  %9820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9821 = getelementptr inbounds %struct.GPR, %struct.GPR* %9820, i32 0, i32 1
  %9822 = getelementptr inbounds %struct.Reg, %struct.Reg* %9821, i32 0, i32 0
  %RAX.i665 = bitcast %union.anon* %9822 to i64*
  %9823 = load i64, i64* %RAX.i665
  %9824 = add i64 %9823, 12
  %9825 = load i64, i64* %PC.i664
  %9826 = add i64 %9825, 4
  store i64 %9826, i64* %PC.i664
  %9827 = inttoptr i64 %9824 to i32*
  %9828 = load i32, i32* %9827
  %9829 = sext i32 %9828 to i64
  store i64 %9829, i64* %RAX.i665, align 8
  store %struct.Memory* %loadMem_40c865, %struct.Memory** %MEMORY
  %loadMem_40c869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9831 = getelementptr inbounds %struct.GPR, %struct.GPR* %9830, i32 0, i32 33
  %9832 = getelementptr inbounds %struct.Reg, %struct.Reg* %9831, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %9832 to i64*
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9834 = getelementptr inbounds %struct.GPR, %struct.GPR* %9833, i32 0, i32 5
  %9835 = getelementptr inbounds %struct.Reg, %struct.Reg* %9834, i32 0, i32 0
  %ECX.i661 = bitcast %union.anon* %9835 to i32*
  %9836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9837 = getelementptr inbounds %struct.GPR, %struct.GPR* %9836, i32 0, i32 1
  %9838 = getelementptr inbounds %struct.Reg, %struct.Reg* %9837, i32 0, i32 0
  %RAX.i662 = bitcast %union.anon* %9838 to i64*
  %9839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9840 = getelementptr inbounds %struct.GPR, %struct.GPR* %9839, i32 0, i32 9
  %9841 = getelementptr inbounds %struct.Reg, %struct.Reg* %9840, i32 0, i32 0
  %RSI.i663 = bitcast %union.anon* %9841 to i64*
  %9842 = load i64, i64* %RSI.i663
  %9843 = load i64, i64* %RAX.i662
  %9844 = mul i64 %9843, 4
  %9845 = add i64 %9842, 16
  %9846 = add i64 %9845, %9844
  %9847 = load i32, i32* %ECX.i661
  %9848 = zext i32 %9847 to i64
  %9849 = load i64, i64* %PC.i660
  %9850 = add i64 %9849, 4
  store i64 %9850, i64* %PC.i660
  %9851 = inttoptr i64 %9846 to i32*
  store i32 %9847, i32* %9851
  store %struct.Memory* %loadMem_40c869, %struct.Memory** %MEMORY
  br label %block_.L_40c86d

block_.L_40c86d:                                  ; preds = %block_40c836, %block_.L_40c814
  %loadMem_40c86d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9853 = getelementptr inbounds %struct.GPR, %struct.GPR* %9852, i32 0, i32 33
  %9854 = getelementptr inbounds %struct.Reg, %struct.Reg* %9853, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %9854 to i64*
  %9855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9856 = getelementptr inbounds %struct.GPR, %struct.GPR* %9855, i32 0, i32 1
  %9857 = getelementptr inbounds %struct.Reg, %struct.Reg* %9856, i32 0, i32 0
  %RAX.i659 = bitcast %union.anon* %9857 to i64*
  %9858 = load i64, i64* %PC.i658
  %9859 = add i64 %9858, 10
  store i64 %9859, i64* %PC.i658
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i659, align 8
  store %struct.Memory* %loadMem_40c86d, %struct.Memory** %MEMORY
  %loadMem_40c877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9861 = getelementptr inbounds %struct.GPR, %struct.GPR* %9860, i32 0, i32 33
  %9862 = getelementptr inbounds %struct.Reg, %struct.Reg* %9861, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %9862 to i64*
  %9863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9864 = getelementptr inbounds %struct.GPR, %struct.GPR* %9863, i32 0, i32 5
  %9865 = getelementptr inbounds %struct.Reg, %struct.Reg* %9864, i32 0, i32 0
  %RCX.i656 = bitcast %union.anon* %9865 to i64*
  %9866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9867 = getelementptr inbounds %struct.GPR, %struct.GPR* %9866, i32 0, i32 15
  %9868 = getelementptr inbounds %struct.Reg, %struct.Reg* %9867, i32 0, i32 0
  %RBP.i657 = bitcast %union.anon* %9868 to i64*
  %9869 = load i64, i64* %RBP.i657
  %9870 = sub i64 %9869, 8
  %9871 = load i64, i64* %PC.i655
  %9872 = add i64 %9871, 4
  store i64 %9872, i64* %PC.i655
  %9873 = inttoptr i64 %9870 to i32*
  %9874 = load i32, i32* %9873
  %9875 = sext i32 %9874 to i64
  store i64 %9875, i64* %RCX.i656, align 8
  store %struct.Memory* %loadMem_40c877, %struct.Memory** %MEMORY
  %loadMem_40c87b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9877 = getelementptr inbounds %struct.GPR, %struct.GPR* %9876, i32 0, i32 33
  %9878 = getelementptr inbounds %struct.Reg, %struct.Reg* %9877, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %9878 to i64*
  %9879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9880 = getelementptr inbounds %struct.GPR, %struct.GPR* %9879, i32 0, i32 5
  %9881 = getelementptr inbounds %struct.Reg, %struct.Reg* %9880, i32 0, i32 0
  %RCX.i654 = bitcast %union.anon* %9881 to i64*
  %9882 = load i64, i64* %RCX.i654
  %9883 = load i64, i64* %PC.i653
  %9884 = add i64 %9883, 7
  store i64 %9884, i64* %PC.i653
  %9885 = sext i64 %9882 to i128
  %9886 = and i128 %9885, -18446744073709551616
  %9887 = zext i64 %9882 to i128
  %9888 = or i128 %9886, %9887
  %9889 = mul i128 744, %9888
  %9890 = trunc i128 %9889 to i64
  store i64 %9890, i64* %RCX.i654, align 8
  %9891 = sext i64 %9890 to i128
  %9892 = icmp ne i128 %9891, %9889
  %9893 = zext i1 %9892 to i8
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9893, i8* %9894, align 1
  %9895 = trunc i128 %9889 to i32
  %9896 = and i32 %9895, 255
  %9897 = call i32 @llvm.ctpop.i32(i32 %9896)
  %9898 = trunc i32 %9897 to i8
  %9899 = and i8 %9898, 1
  %9900 = xor i8 %9899, 1
  %9901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9900, i8* %9901, align 1
  %9902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9902, align 1
  %9903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9903, align 1
  %9904 = lshr i64 %9890, 63
  %9905 = trunc i64 %9904 to i8
  %9906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9905, i8* %9906, align 1
  %9907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9893, i8* %9907, align 1
  store %struct.Memory* %loadMem_40c87b, %struct.Memory** %MEMORY
  %loadMem_40c882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9909 = getelementptr inbounds %struct.GPR, %struct.GPR* %9908, i32 0, i32 33
  %9910 = getelementptr inbounds %struct.Reg, %struct.Reg* %9909, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %9910 to i64*
  %9911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9912 = getelementptr inbounds %struct.GPR, %struct.GPR* %9911, i32 0, i32 1
  %9913 = getelementptr inbounds %struct.Reg, %struct.Reg* %9912, i32 0, i32 0
  %RAX.i651 = bitcast %union.anon* %9913 to i64*
  %9914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9915 = getelementptr inbounds %struct.GPR, %struct.GPR* %9914, i32 0, i32 5
  %9916 = getelementptr inbounds %struct.Reg, %struct.Reg* %9915, i32 0, i32 0
  %RCX.i652 = bitcast %union.anon* %9916 to i64*
  %9917 = load i64, i64* %RAX.i651
  %9918 = load i64, i64* %RCX.i652
  %9919 = load i64, i64* %PC.i650
  %9920 = add i64 %9919, 3
  store i64 %9920, i64* %PC.i650
  %9921 = add i64 %9918, %9917
  store i64 %9921, i64* %RAX.i651, align 8
  %9922 = icmp ult i64 %9921, %9917
  %9923 = icmp ult i64 %9921, %9918
  %9924 = or i1 %9922, %9923
  %9925 = zext i1 %9924 to i8
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9925, i8* %9926, align 1
  %9927 = trunc i64 %9921 to i32
  %9928 = and i32 %9927, 255
  %9929 = call i32 @llvm.ctpop.i32(i32 %9928)
  %9930 = trunc i32 %9929 to i8
  %9931 = and i8 %9930, 1
  %9932 = xor i8 %9931, 1
  %9933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9932, i8* %9933, align 1
  %9934 = xor i64 %9918, %9917
  %9935 = xor i64 %9934, %9921
  %9936 = lshr i64 %9935, 4
  %9937 = trunc i64 %9936 to i8
  %9938 = and i8 %9937, 1
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9938, i8* %9939, align 1
  %9940 = icmp eq i64 %9921, 0
  %9941 = zext i1 %9940 to i8
  %9942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9941, i8* %9942, align 1
  %9943 = lshr i64 %9921, 63
  %9944 = trunc i64 %9943 to i8
  %9945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9944, i8* %9945, align 1
  %9946 = lshr i64 %9917, 63
  %9947 = lshr i64 %9918, 63
  %9948 = xor i64 %9943, %9946
  %9949 = xor i64 %9943, %9947
  %9950 = add i64 %9948, %9949
  %9951 = icmp eq i64 %9950, 2
  %9952 = zext i1 %9951 to i8
  %9953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9952, i8* %9953, align 1
  store %struct.Memory* %loadMem_40c882, %struct.Memory** %MEMORY
  %loadMem_40c885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9955 = getelementptr inbounds %struct.GPR, %struct.GPR* %9954, i32 0, i32 33
  %9956 = getelementptr inbounds %struct.Reg, %struct.Reg* %9955, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %9956 to i64*
  %9957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9958 = getelementptr inbounds %struct.GPR, %struct.GPR* %9957, i32 0, i32 1
  %9959 = getelementptr inbounds %struct.Reg, %struct.Reg* %9958, i32 0, i32 0
  %RAX.i648 = bitcast %union.anon* %9959 to i64*
  %9960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9961 = getelementptr inbounds %struct.GPR, %struct.GPR* %9960, i32 0, i32 7
  %9962 = getelementptr inbounds %struct.Reg, %struct.Reg* %9961, i32 0, i32 0
  %RDX.i649 = bitcast %union.anon* %9962 to i64*
  %9963 = load i64, i64* %RAX.i648
  %9964 = add i64 %9963, 12
  %9965 = load i64, i64* %PC.i647
  %9966 = add i64 %9965, 3
  store i64 %9966, i64* %PC.i647
  %9967 = inttoptr i64 %9964 to i32*
  %9968 = load i32, i32* %9967
  %9969 = zext i32 %9968 to i64
  store i64 %9969, i64* %RDX.i649, align 8
  store %struct.Memory* %loadMem_40c885, %struct.Memory** %MEMORY
  %loadMem_40c888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9971 = getelementptr inbounds %struct.GPR, %struct.GPR* %9970, i32 0, i32 33
  %9972 = getelementptr inbounds %struct.Reg, %struct.Reg* %9971, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %9972 to i64*
  %9973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9974 = getelementptr inbounds %struct.GPR, %struct.GPR* %9973, i32 0, i32 7
  %9975 = getelementptr inbounds %struct.Reg, %struct.Reg* %9974, i32 0, i32 0
  %RDX.i646 = bitcast %union.anon* %9975 to i64*
  %9976 = load i64, i64* %RDX.i646
  %9977 = load i64, i64* %PC.i645
  %9978 = add i64 %9977, 3
  store i64 %9978, i64* %PC.i645
  %9979 = trunc i64 %9976 to i32
  %9980 = add i32 1, %9979
  %9981 = zext i32 %9980 to i64
  store i64 %9981, i64* %RDX.i646, align 8
  %9982 = icmp ult i32 %9980, %9979
  %9983 = icmp ult i32 %9980, 1
  %9984 = or i1 %9982, %9983
  %9985 = zext i1 %9984 to i8
  %9986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9985, i8* %9986, align 1
  %9987 = and i32 %9980, 255
  %9988 = call i32 @llvm.ctpop.i32(i32 %9987)
  %9989 = trunc i32 %9988 to i8
  %9990 = and i8 %9989, 1
  %9991 = xor i8 %9990, 1
  %9992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9991, i8* %9992, align 1
  %9993 = xor i64 1, %9976
  %9994 = trunc i64 %9993 to i32
  %9995 = xor i32 %9994, %9980
  %9996 = lshr i32 %9995, 4
  %9997 = trunc i32 %9996 to i8
  %9998 = and i8 %9997, 1
  %9999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9998, i8* %9999, align 1
  %10000 = icmp eq i32 %9980, 0
  %10001 = zext i1 %10000 to i8
  %10002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10001, i8* %10002, align 1
  %10003 = lshr i32 %9980, 31
  %10004 = trunc i32 %10003 to i8
  %10005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10004, i8* %10005, align 1
  %10006 = lshr i32 %9979, 31
  %10007 = xor i32 %10003, %10006
  %10008 = add i32 %10007, %10003
  %10009 = icmp eq i32 %10008, 2
  %10010 = zext i1 %10009 to i8
  %10011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10010, i8* %10011, align 1
  store %struct.Memory* %loadMem_40c888, %struct.Memory** %MEMORY
  %loadMem_40c88b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10013 = getelementptr inbounds %struct.GPR, %struct.GPR* %10012, i32 0, i32 33
  %10014 = getelementptr inbounds %struct.Reg, %struct.Reg* %10013, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %10014 to i64*
  %10015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10016 = getelementptr inbounds %struct.GPR, %struct.GPR* %10015, i32 0, i32 7
  %10017 = getelementptr inbounds %struct.Reg, %struct.Reg* %10016, i32 0, i32 0
  %EDX.i643 = bitcast %union.anon* %10017 to i32*
  %10018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10019 = getelementptr inbounds %struct.GPR, %struct.GPR* %10018, i32 0, i32 1
  %10020 = getelementptr inbounds %struct.Reg, %struct.Reg* %10019, i32 0, i32 0
  %RAX.i644 = bitcast %union.anon* %10020 to i64*
  %10021 = load i64, i64* %RAX.i644
  %10022 = add i64 %10021, 12
  %10023 = load i32, i32* %EDX.i643
  %10024 = zext i32 %10023 to i64
  %10025 = load i64, i64* %PC.i642
  %10026 = add i64 %10025, 3
  store i64 %10026, i64* %PC.i642
  %10027 = inttoptr i64 %10022 to i32*
  store i32 %10023, i32* %10027
  store %struct.Memory* %loadMem_40c88b, %struct.Memory** %MEMORY
  %loadMem_40c88e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10029 = getelementptr inbounds %struct.GPR, %struct.GPR* %10028, i32 0, i32 33
  %10030 = getelementptr inbounds %struct.Reg, %struct.Reg* %10029, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %10030 to i64*
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10032 = getelementptr inbounds %struct.GPR, %struct.GPR* %10031, i32 0, i32 7
  %10033 = getelementptr inbounds %struct.Reg, %struct.Reg* %10032, i32 0, i32 0
  %RDX.i641 = bitcast %union.anon* %10033 to i64*
  %10034 = load i64, i64* %PC.i640
  %10035 = add i64 %10034, 7
  store i64 %10035, i64* %PC.i640
  %10036 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %10037 = zext i32 %10036 to i64
  store i64 %10037, i64* %RDX.i641, align 8
  store %struct.Memory* %loadMem_40c88e, %struct.Memory** %MEMORY
  %loadMem_40c895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10039 = getelementptr inbounds %struct.GPR, %struct.GPR* %10038, i32 0, i32 33
  %10040 = getelementptr inbounds %struct.Reg, %struct.Reg* %10039, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %10040 to i64*
  %10041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10042 = getelementptr inbounds %struct.GPR, %struct.GPR* %10041, i32 0, i32 9
  %10043 = getelementptr inbounds %struct.Reg, %struct.Reg* %10042, i32 0, i32 0
  %RSI.i638 = bitcast %union.anon* %10043 to i64*
  %10044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10045 = getelementptr inbounds %struct.GPR, %struct.GPR* %10044, i32 0, i32 15
  %10046 = getelementptr inbounds %struct.Reg, %struct.Reg* %10045, i32 0, i32 0
  %RBP.i639 = bitcast %union.anon* %10046 to i64*
  %10047 = load i64, i64* %RBP.i639
  %10048 = sub i64 %10047, 4
  %10049 = load i64, i64* %PC.i637
  %10050 = add i64 %10049, 3
  store i64 %10050, i64* %PC.i637
  %10051 = inttoptr i64 %10048 to i32*
  %10052 = load i32, i32* %10051
  %10053 = zext i32 %10052 to i64
  store i64 %10053, i64* %RSI.i638, align 8
  store %struct.Memory* %loadMem_40c895, %struct.Memory** %MEMORY
  %loadMem_40c898 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10055 = getelementptr inbounds %struct.GPR, %struct.GPR* %10054, i32 0, i32 33
  %10056 = getelementptr inbounds %struct.Reg, %struct.Reg* %10055, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %10056 to i64*
  %10057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10058 = getelementptr inbounds %struct.GPR, %struct.GPR* %10057, i32 0, i32 9
  %10059 = getelementptr inbounds %struct.Reg, %struct.Reg* %10058, i32 0, i32 0
  %RSI.i636 = bitcast %union.anon* %10059 to i64*
  %10060 = load i64, i64* %RSI.i636
  %10061 = load i64, i64* %PC.i635
  %10062 = add i64 %10061, 3
  store i64 %10062, i64* %PC.i635
  %10063 = trunc i64 %10060 to i32
  %10064 = sub i32 %10063, 20
  %10065 = zext i32 %10064 to i64
  store i64 %10065, i64* %RSI.i636, align 8
  %10066 = icmp ult i32 %10063, 20
  %10067 = zext i1 %10066 to i8
  %10068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10067, i8* %10068, align 1
  %10069 = and i32 %10064, 255
  %10070 = call i32 @llvm.ctpop.i32(i32 %10069)
  %10071 = trunc i32 %10070 to i8
  %10072 = and i8 %10071, 1
  %10073 = xor i8 %10072, 1
  %10074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10073, i8* %10074, align 1
  %10075 = xor i64 20, %10060
  %10076 = trunc i64 %10075 to i32
  %10077 = xor i32 %10076, %10064
  %10078 = lshr i32 %10077, 4
  %10079 = trunc i32 %10078 to i8
  %10080 = and i8 %10079, 1
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10080, i8* %10081, align 1
  %10082 = icmp eq i32 %10064, 0
  %10083 = zext i1 %10082 to i8
  %10084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10083, i8* %10084, align 1
  %10085 = lshr i32 %10064, 31
  %10086 = trunc i32 %10085 to i8
  %10087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10086, i8* %10087, align 1
  %10088 = lshr i32 %10063, 31
  %10089 = xor i32 %10085, %10088
  %10090 = add i32 %10089, %10088
  %10091 = icmp eq i32 %10090, 2
  %10092 = zext i1 %10091 to i8
  %10093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10092, i8* %10093, align 1
  store %struct.Memory* %loadMem_40c898, %struct.Memory** %MEMORY
  %loadMem_40c89b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10095 = getelementptr inbounds %struct.GPR, %struct.GPR* %10094, i32 0, i32 33
  %10096 = getelementptr inbounds %struct.Reg, %struct.Reg* %10095, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %10096 to i64*
  %10097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10098 = getelementptr inbounds %struct.GPR, %struct.GPR* %10097, i32 0, i32 9
  %10099 = getelementptr inbounds %struct.Reg, %struct.Reg* %10098, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %10099 to i32*
  %10100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10101 = getelementptr inbounds %struct.GPR, %struct.GPR* %10100, i32 0, i32 1
  %10102 = getelementptr inbounds %struct.Reg, %struct.Reg* %10101, i32 0, i32 0
  %RAX.i634 = bitcast %union.anon* %10102 to i64*
  %10103 = load i32, i32* %ESI.i
  %10104 = zext i32 %10103 to i64
  %10105 = load i64, i64* %PC.i633
  %10106 = add i64 %10105, 3
  store i64 %10106, i64* %PC.i633
  %10107 = shl i64 %10104, 32
  %10108 = ashr exact i64 %10107, 32
  store i64 %10108, i64* %RAX.i634, align 8
  store %struct.Memory* %loadMem_40c89b, %struct.Memory** %MEMORY
  %loadMem_40c89e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10110 = getelementptr inbounds %struct.GPR, %struct.GPR* %10109, i32 0, i32 33
  %10111 = getelementptr inbounds %struct.Reg, %struct.Reg* %10110, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %10111 to i64*
  %10112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10113 = getelementptr inbounds %struct.GPR, %struct.GPR* %10112, i32 0, i32 7
  %10114 = getelementptr inbounds %struct.Reg, %struct.Reg* %10113, i32 0, i32 0
  %EDX.i631 = bitcast %union.anon* %10114 to i32*
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10116 = getelementptr inbounds %struct.GPR, %struct.GPR* %10115, i32 0, i32 1
  %10117 = getelementptr inbounds %struct.Reg, %struct.Reg* %10116, i32 0, i32 0
  %RAX.i632 = bitcast %union.anon* %10117 to i64*
  %10118 = load i64, i64* %RAX.i632
  %10119 = mul i64 %10118, 4
  %10120 = add i64 %10119, 11185584
  %10121 = load i32, i32* %EDX.i631
  %10122 = zext i32 %10121 to i64
  %10123 = load i64, i64* %PC.i630
  %10124 = add i64 %10123, 7
  store i64 %10124, i64* %PC.i630
  %10125 = inttoptr i64 %10120 to i32*
  store i32 %10121, i32* %10125
  store %struct.Memory* %loadMem_40c89e, %struct.Memory** %MEMORY
  %loadMem_40c8a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10127 = getelementptr inbounds %struct.GPR, %struct.GPR* %10126, i32 0, i32 33
  %10128 = getelementptr inbounds %struct.Reg, %struct.Reg* %10127, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %10128 to i64*
  %10129 = load i64, i64* %PC.i629
  %10130 = add i64 %10129, 525
  %10131 = load i64, i64* %PC.i629
  %10132 = add i64 %10131, 5
  store i64 %10132, i64* %PC.i629
  %10133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10130, i64* %10133, align 8
  store %struct.Memory* %loadMem_40c8a5, %struct.Memory** %MEMORY
  br label %block_.L_40cab2

block_.L_40c8aa:                                  ; preds = %block_40c7f2, %block_.L_40c7d8
  %loadMem_40c8aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10135 = getelementptr inbounds %struct.GPR, %struct.GPR* %10134, i32 0, i32 33
  %10136 = getelementptr inbounds %struct.Reg, %struct.Reg* %10135, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %10136 to i64*
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10138 = getelementptr inbounds %struct.GPR, %struct.GPR* %10137, i32 0, i32 1
  %10139 = getelementptr inbounds %struct.Reg, %struct.Reg* %10138, i32 0, i32 0
  %RAX.i627 = bitcast %union.anon* %10139 to i64*
  %10140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10141 = getelementptr inbounds %struct.GPR, %struct.GPR* %10140, i32 0, i32 15
  %10142 = getelementptr inbounds %struct.Reg, %struct.Reg* %10141, i32 0, i32 0
  %RBP.i628 = bitcast %union.anon* %10142 to i64*
  %10143 = load i64, i64* %RBP.i628
  %10144 = sub i64 %10143, 4
  %10145 = load i64, i64* %PC.i626
  %10146 = add i64 %10145, 3
  store i64 %10146, i64* %PC.i626
  %10147 = inttoptr i64 %10144 to i32*
  %10148 = load i32, i32* %10147
  %10149 = zext i32 %10148 to i64
  store i64 %10149, i64* %RAX.i627, align 8
  store %struct.Memory* %loadMem_40c8aa, %struct.Memory** %MEMORY
  %loadMem_40c8ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %10150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10151 = getelementptr inbounds %struct.GPR, %struct.GPR* %10150, i32 0, i32 33
  %10152 = getelementptr inbounds %struct.Reg, %struct.Reg* %10151, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %10152 to i64*
  %10153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10154 = getelementptr inbounds %struct.GPR, %struct.GPR* %10153, i32 0, i32 1
  %10155 = getelementptr inbounds %struct.Reg, %struct.Reg* %10154, i32 0, i32 0
  %RAX.i625 = bitcast %union.anon* %10155 to i64*
  %10156 = load i64, i64* %RAX.i625
  %10157 = load i64, i64* %PC.i624
  %10158 = add i64 %10157, 3
  store i64 %10158, i64* %PC.i624
  %10159 = trunc i64 %10156 to i32
  %10160 = sub i32 %10159, 20
  %10161 = zext i32 %10160 to i64
  store i64 %10161, i64* %RAX.i625, align 8
  %10162 = icmp ult i32 %10159, 20
  %10163 = zext i1 %10162 to i8
  %10164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10163, i8* %10164, align 1
  %10165 = and i32 %10160, 255
  %10166 = call i32 @llvm.ctpop.i32(i32 %10165)
  %10167 = trunc i32 %10166 to i8
  %10168 = and i8 %10167, 1
  %10169 = xor i8 %10168, 1
  %10170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10169, i8* %10170, align 1
  %10171 = xor i64 20, %10156
  %10172 = trunc i64 %10171 to i32
  %10173 = xor i32 %10172, %10160
  %10174 = lshr i32 %10173, 4
  %10175 = trunc i32 %10174 to i8
  %10176 = and i8 %10175, 1
  %10177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10176, i8* %10177, align 1
  %10178 = icmp eq i32 %10160, 0
  %10179 = zext i1 %10178 to i8
  %10180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10179, i8* %10180, align 1
  %10181 = lshr i32 %10160, 31
  %10182 = trunc i32 %10181 to i8
  %10183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10182, i8* %10183, align 1
  %10184 = lshr i32 %10159, 31
  %10185 = xor i32 %10181, %10184
  %10186 = add i32 %10185, %10184
  %10187 = icmp eq i32 %10186, 2
  %10188 = zext i1 %10187 to i8
  %10189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10188, i8* %10189, align 1
  store %struct.Memory* %loadMem_40c8ad, %struct.Memory** %MEMORY
  %loadMem_40c8b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10191 = getelementptr inbounds %struct.GPR, %struct.GPR* %10190, i32 0, i32 33
  %10192 = getelementptr inbounds %struct.Reg, %struct.Reg* %10191, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %10192 to i64*
  %10193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10194 = getelementptr inbounds %struct.GPR, %struct.GPR* %10193, i32 0, i32 1
  %10195 = getelementptr inbounds %struct.Reg, %struct.Reg* %10194, i32 0, i32 0
  %EAX.i622 = bitcast %union.anon* %10195 to i32*
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10197 = getelementptr inbounds %struct.GPR, %struct.GPR* %10196, i32 0, i32 5
  %10198 = getelementptr inbounds %struct.Reg, %struct.Reg* %10197, i32 0, i32 0
  %RCX.i623 = bitcast %union.anon* %10198 to i64*
  %10199 = load i32, i32* %EAX.i622
  %10200 = zext i32 %10199 to i64
  %10201 = load i64, i64* %PC.i621
  %10202 = add i64 %10201, 3
  store i64 %10202, i64* %PC.i621
  %10203 = shl i64 %10200, 32
  %10204 = ashr exact i64 %10203, 32
  store i64 %10204, i64* %RCX.i623, align 8
  store %struct.Memory* %loadMem_40c8b0, %struct.Memory** %MEMORY
  %loadMem_40c8b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10206 = getelementptr inbounds %struct.GPR, %struct.GPR* %10205, i32 0, i32 33
  %10207 = getelementptr inbounds %struct.Reg, %struct.Reg* %10206, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %10207 to i64*
  %10208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10209 = getelementptr inbounds %struct.GPR, %struct.GPR* %10208, i32 0, i32 1
  %10210 = getelementptr inbounds %struct.Reg, %struct.Reg* %10209, i32 0, i32 0
  %RAX.i619 = bitcast %union.anon* %10210 to i64*
  %10211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10212 = getelementptr inbounds %struct.GPR, %struct.GPR* %10211, i32 0, i32 5
  %10213 = getelementptr inbounds %struct.Reg, %struct.Reg* %10212, i32 0, i32 0
  %RCX.i620 = bitcast %union.anon* %10213 to i64*
  %10214 = load i64, i64* %RCX.i620
  %10215 = add i64 %10214, 12099168
  %10216 = load i64, i64* %PC.i618
  %10217 = add i64 %10216, 8
  store i64 %10217, i64* %PC.i618
  %10218 = inttoptr i64 %10215 to i8*
  %10219 = load i8, i8* %10218
  %10220 = zext i8 %10219 to i64
  store i64 %10220, i64* %RAX.i619, align 8
  store %struct.Memory* %loadMem_40c8b3, %struct.Memory** %MEMORY
  %loadMem_40c8bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10222 = getelementptr inbounds %struct.GPR, %struct.GPR* %10221, i32 0, i32 33
  %10223 = getelementptr inbounds %struct.Reg, %struct.Reg* %10222, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %10223 to i64*
  %10224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10225 = getelementptr inbounds %struct.GPR, %struct.GPR* %10224, i32 0, i32 1
  %10226 = getelementptr inbounds %struct.Reg, %struct.Reg* %10225, i32 0, i32 0
  %EAX.i616 = bitcast %union.anon* %10226 to i32*
  %10227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10228 = getelementptr inbounds %struct.GPR, %struct.GPR* %10227, i32 0, i32 15
  %10229 = getelementptr inbounds %struct.Reg, %struct.Reg* %10228, i32 0, i32 0
  %RBP.i617 = bitcast %union.anon* %10229 to i64*
  %10230 = load i32, i32* %EAX.i616
  %10231 = zext i32 %10230 to i64
  %10232 = load i64, i64* %RBP.i617
  %10233 = sub i64 %10232, 16
  %10234 = load i64, i64* %PC.i615
  %10235 = add i64 %10234, 3
  store i64 %10235, i64* %PC.i615
  %10236 = inttoptr i64 %10233 to i32*
  %10237 = load i32, i32* %10236
  %10238 = sub i32 %10230, %10237
  %10239 = icmp ult i32 %10230, %10237
  %10240 = zext i1 %10239 to i8
  %10241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10240, i8* %10241, align 1
  %10242 = and i32 %10238, 255
  %10243 = call i32 @llvm.ctpop.i32(i32 %10242)
  %10244 = trunc i32 %10243 to i8
  %10245 = and i8 %10244, 1
  %10246 = xor i8 %10245, 1
  %10247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10246, i8* %10247, align 1
  %10248 = xor i32 %10237, %10230
  %10249 = xor i32 %10248, %10238
  %10250 = lshr i32 %10249, 4
  %10251 = trunc i32 %10250 to i8
  %10252 = and i8 %10251, 1
  %10253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10252, i8* %10253, align 1
  %10254 = icmp eq i32 %10238, 0
  %10255 = zext i1 %10254 to i8
  %10256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10255, i8* %10256, align 1
  %10257 = lshr i32 %10238, 31
  %10258 = trunc i32 %10257 to i8
  %10259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10258, i8* %10259, align 1
  %10260 = lshr i32 %10230, 31
  %10261 = lshr i32 %10237, 31
  %10262 = xor i32 %10261, %10260
  %10263 = xor i32 %10257, %10260
  %10264 = add i32 %10263, %10262
  %10265 = icmp eq i32 %10264, 2
  %10266 = zext i1 %10265 to i8
  %10267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10266, i8* %10267, align 1
  store %struct.Memory* %loadMem_40c8bb, %struct.Memory** %MEMORY
  %loadMem_40c8be = load %struct.Memory*, %struct.Memory** %MEMORY
  %10268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10269 = getelementptr inbounds %struct.GPR, %struct.GPR* %10268, i32 0, i32 33
  %10270 = getelementptr inbounds %struct.Reg, %struct.Reg* %10269, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %10270 to i64*
  %10271 = load i64, i64* %PC.i614
  %10272 = add i64 %10271, 392
  %10273 = load i64, i64* %PC.i614
  %10274 = add i64 %10273, 6
  %10275 = load i64, i64* %PC.i614
  %10276 = add i64 %10275, 6
  store i64 %10276, i64* %PC.i614
  %10277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10278 = load i8, i8* %10277, align 1
  %10279 = icmp eq i8 %10278, 0
  %10280 = zext i1 %10279 to i8
  store i8 %10280, i8* %BRANCH_TAKEN, align 1
  %10281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10282 = select i1 %10279, i64 %10272, i64 %10274
  store i64 %10282, i64* %10281, align 8
  store %struct.Memory* %loadMem_40c8be, %struct.Memory** %MEMORY
  %loadBr_40c8be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c8be = icmp eq i8 %loadBr_40c8be, 1
  br i1 %cmpBr_40c8be, label %block_.L_40ca46, label %block_40c8c4

block_40c8c4:                                     ; preds = %block_.L_40c8aa
  %loadMem_40c8c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10284 = getelementptr inbounds %struct.GPR, %struct.GPR* %10283, i32 0, i32 33
  %10285 = getelementptr inbounds %struct.Reg, %struct.Reg* %10284, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %10285 to i64*
  %10286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10287 = getelementptr inbounds %struct.GPR, %struct.GPR* %10286, i32 0, i32 1
  %10288 = getelementptr inbounds %struct.Reg, %struct.Reg* %10287, i32 0, i32 0
  %RAX.i613 = bitcast %union.anon* %10288 to i64*
  %10289 = load i64, i64* %PC.i612
  %10290 = add i64 %10289, 10
  store i64 %10290, i64* %PC.i612
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i613, align 8
  store %struct.Memory* %loadMem_40c8c4, %struct.Memory** %MEMORY
  %loadMem_40c8ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %10291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10292 = getelementptr inbounds %struct.GPR, %struct.GPR* %10291, i32 0, i32 33
  %10293 = getelementptr inbounds %struct.Reg, %struct.Reg* %10292, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %10293 to i64*
  %10294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10295 = getelementptr inbounds %struct.GPR, %struct.GPR* %10294, i32 0, i32 5
  %10296 = getelementptr inbounds %struct.Reg, %struct.Reg* %10295, i32 0, i32 0
  %RCX.i610 = bitcast %union.anon* %10296 to i64*
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10298 = getelementptr inbounds %struct.GPR, %struct.GPR* %10297, i32 0, i32 15
  %10299 = getelementptr inbounds %struct.Reg, %struct.Reg* %10298, i32 0, i32 0
  %RBP.i611 = bitcast %union.anon* %10299 to i64*
  %10300 = load i64, i64* %RBP.i611
  %10301 = sub i64 %10300, 4
  %10302 = load i64, i64* %PC.i609
  %10303 = add i64 %10302, 3
  store i64 %10303, i64* %PC.i609
  %10304 = inttoptr i64 %10301 to i32*
  %10305 = load i32, i32* %10304
  %10306 = zext i32 %10305 to i64
  store i64 %10306, i64* %RCX.i610, align 8
  store %struct.Memory* %loadMem_40c8ce, %struct.Memory** %MEMORY
  %loadMem_40c8d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10308 = getelementptr inbounds %struct.GPR, %struct.GPR* %10307, i32 0, i32 33
  %10309 = getelementptr inbounds %struct.Reg, %struct.Reg* %10308, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %10309 to i64*
  %10310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10311 = getelementptr inbounds %struct.GPR, %struct.GPR* %10310, i32 0, i32 5
  %10312 = getelementptr inbounds %struct.Reg, %struct.Reg* %10311, i32 0, i32 0
  %RCX.i608 = bitcast %union.anon* %10312 to i64*
  %10313 = load i64, i64* %RCX.i608
  %10314 = load i64, i64* %PC.i607
  %10315 = add i64 %10314, 3
  store i64 %10315, i64* %PC.i607
  %10316 = trunc i64 %10313 to i32
  %10317 = sub i32 %10316, 20
  %10318 = zext i32 %10317 to i64
  store i64 %10318, i64* %RCX.i608, align 8
  %10319 = icmp ult i32 %10316, 20
  %10320 = zext i1 %10319 to i8
  %10321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10320, i8* %10321, align 1
  %10322 = and i32 %10317, 255
  %10323 = call i32 @llvm.ctpop.i32(i32 %10322)
  %10324 = trunc i32 %10323 to i8
  %10325 = and i8 %10324, 1
  %10326 = xor i8 %10325, 1
  %10327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10326, i8* %10327, align 1
  %10328 = xor i64 20, %10313
  %10329 = trunc i64 %10328 to i32
  %10330 = xor i32 %10329, %10317
  %10331 = lshr i32 %10330, 4
  %10332 = trunc i32 %10331 to i8
  %10333 = and i8 %10332, 1
  %10334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10333, i8* %10334, align 1
  %10335 = icmp eq i32 %10317, 0
  %10336 = zext i1 %10335 to i8
  %10337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10336, i8* %10337, align 1
  %10338 = lshr i32 %10317, 31
  %10339 = trunc i32 %10338 to i8
  %10340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10339, i8* %10340, align 1
  %10341 = lshr i32 %10316, 31
  %10342 = xor i32 %10338, %10341
  %10343 = add i32 %10342, %10341
  %10344 = icmp eq i32 %10343, 2
  %10345 = zext i1 %10344 to i8
  %10346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10345, i8* %10346, align 1
  store %struct.Memory* %loadMem_40c8d1, %struct.Memory** %MEMORY
  %loadMem_40c8d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10348 = getelementptr inbounds %struct.GPR, %struct.GPR* %10347, i32 0, i32 33
  %10349 = getelementptr inbounds %struct.Reg, %struct.Reg* %10348, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %10349 to i64*
  %10350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10351 = getelementptr inbounds %struct.GPR, %struct.GPR* %10350, i32 0, i32 5
  %10352 = getelementptr inbounds %struct.Reg, %struct.Reg* %10351, i32 0, i32 0
  %ECX.i605 = bitcast %union.anon* %10352 to i32*
  %10353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10354 = getelementptr inbounds %struct.GPR, %struct.GPR* %10353, i32 0, i32 7
  %10355 = getelementptr inbounds %struct.Reg, %struct.Reg* %10354, i32 0, i32 0
  %RDX.i606 = bitcast %union.anon* %10355 to i64*
  %10356 = load i32, i32* %ECX.i605
  %10357 = zext i32 %10356 to i64
  %10358 = load i64, i64* %PC.i604
  %10359 = add i64 %10358, 3
  store i64 %10359, i64* %PC.i604
  %10360 = shl i64 %10357, 32
  %10361 = ashr exact i64 %10360, 32
  store i64 %10361, i64* %RDX.i606, align 8
  store %struct.Memory* %loadMem_40c8d4, %struct.Memory** %MEMORY
  %loadMem_40c8d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10363 = getelementptr inbounds %struct.GPR, %struct.GPR* %10362, i32 0, i32 33
  %10364 = getelementptr inbounds %struct.Reg, %struct.Reg* %10363, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %10364 to i64*
  %10365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10366 = getelementptr inbounds %struct.GPR, %struct.GPR* %10365, i32 0, i32 7
  %10367 = getelementptr inbounds %struct.Reg, %struct.Reg* %10366, i32 0, i32 0
  %RDX.i603 = bitcast %union.anon* %10367 to i64*
  %10368 = load i64, i64* %RDX.i603
  %10369 = mul i64 %10368, 4
  %10370 = add i64 %10369, 11187184
  %10371 = load i64, i64* %PC.i602
  %10372 = add i64 %10371, 8
  store i64 %10372, i64* %PC.i602
  %10373 = inttoptr i64 %10370 to i32*
  %10374 = load i32, i32* %10373
  %10375 = sext i32 %10374 to i64
  store i64 %10375, i64* %RDX.i603, align 8
  store %struct.Memory* %loadMem_40c8d7, %struct.Memory** %MEMORY
  %loadMem_40c8df = load %struct.Memory*, %struct.Memory** %MEMORY
  %10376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10377 = getelementptr inbounds %struct.GPR, %struct.GPR* %10376, i32 0, i32 33
  %10378 = getelementptr inbounds %struct.Reg, %struct.Reg* %10377, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %10378 to i64*
  %10379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10380 = getelementptr inbounds %struct.GPR, %struct.GPR* %10379, i32 0, i32 7
  %10381 = getelementptr inbounds %struct.Reg, %struct.Reg* %10380, i32 0, i32 0
  %RDX.i601 = bitcast %union.anon* %10381 to i64*
  %10382 = load i64, i64* %RDX.i601
  %10383 = load i64, i64* %PC.i600
  %10384 = add i64 %10383, 7
  store i64 %10384, i64* %PC.i600
  %10385 = sext i64 %10382 to i128
  %10386 = and i128 %10385, -18446744073709551616
  %10387 = zext i64 %10382 to i128
  %10388 = or i128 %10386, %10387
  %10389 = mul i128 744, %10388
  %10390 = trunc i128 %10389 to i64
  store i64 %10390, i64* %RDX.i601, align 8
  %10391 = sext i64 %10390 to i128
  %10392 = icmp ne i128 %10391, %10389
  %10393 = zext i1 %10392 to i8
  %10394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10393, i8* %10394, align 1
  %10395 = trunc i128 %10389 to i32
  %10396 = and i32 %10395, 255
  %10397 = call i32 @llvm.ctpop.i32(i32 %10396)
  %10398 = trunc i32 %10397 to i8
  %10399 = and i8 %10398, 1
  %10400 = xor i8 %10399, 1
  %10401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10400, i8* %10401, align 1
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10402, align 1
  %10403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10403, align 1
  %10404 = lshr i64 %10390, 63
  %10405 = trunc i64 %10404 to i8
  %10406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10405, i8* %10406, align 1
  %10407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10393, i8* %10407, align 1
  store %struct.Memory* %loadMem_40c8df, %struct.Memory** %MEMORY
  %loadMem_40c8e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10409 = getelementptr inbounds %struct.GPR, %struct.GPR* %10408, i32 0, i32 33
  %10410 = getelementptr inbounds %struct.Reg, %struct.Reg* %10409, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %10410 to i64*
  %10411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10412 = getelementptr inbounds %struct.GPR, %struct.GPR* %10411, i32 0, i32 1
  %10413 = getelementptr inbounds %struct.Reg, %struct.Reg* %10412, i32 0, i32 0
  %RAX.i598 = bitcast %union.anon* %10413 to i64*
  %10414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10415 = getelementptr inbounds %struct.GPR, %struct.GPR* %10414, i32 0, i32 7
  %10416 = getelementptr inbounds %struct.Reg, %struct.Reg* %10415, i32 0, i32 0
  %RDX.i599 = bitcast %union.anon* %10416 to i64*
  %10417 = load i64, i64* %RAX.i598
  %10418 = load i64, i64* %RDX.i599
  %10419 = load i64, i64* %PC.i597
  %10420 = add i64 %10419, 3
  store i64 %10420, i64* %PC.i597
  %10421 = add i64 %10418, %10417
  store i64 %10421, i64* %RAX.i598, align 8
  %10422 = icmp ult i64 %10421, %10417
  %10423 = icmp ult i64 %10421, %10418
  %10424 = or i1 %10422, %10423
  %10425 = zext i1 %10424 to i8
  %10426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10425, i8* %10426, align 1
  %10427 = trunc i64 %10421 to i32
  %10428 = and i32 %10427, 255
  %10429 = call i32 @llvm.ctpop.i32(i32 %10428)
  %10430 = trunc i32 %10429 to i8
  %10431 = and i8 %10430, 1
  %10432 = xor i8 %10431, 1
  %10433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10432, i8* %10433, align 1
  %10434 = xor i64 %10418, %10417
  %10435 = xor i64 %10434, %10421
  %10436 = lshr i64 %10435, 4
  %10437 = trunc i64 %10436 to i8
  %10438 = and i8 %10437, 1
  %10439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10438, i8* %10439, align 1
  %10440 = icmp eq i64 %10421, 0
  %10441 = zext i1 %10440 to i8
  %10442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10441, i8* %10442, align 1
  %10443 = lshr i64 %10421, 63
  %10444 = trunc i64 %10443 to i8
  %10445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10444, i8* %10445, align 1
  %10446 = lshr i64 %10417, 63
  %10447 = lshr i64 %10418, 63
  %10448 = xor i64 %10443, %10446
  %10449 = xor i64 %10443, %10447
  %10450 = add i64 %10448, %10449
  %10451 = icmp eq i64 %10450, 2
  %10452 = zext i1 %10451 to i8
  %10453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10452, i8* %10453, align 1
  store %struct.Memory* %loadMem_40c8e6, %struct.Memory** %MEMORY
  %loadMem_40c8e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10455 = getelementptr inbounds %struct.GPR, %struct.GPR* %10454, i32 0, i32 33
  %10456 = getelementptr inbounds %struct.Reg, %struct.Reg* %10455, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %10456 to i64*
  %10457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10458 = getelementptr inbounds %struct.GPR, %struct.GPR* %10457, i32 0, i32 1
  %10459 = getelementptr inbounds %struct.Reg, %struct.Reg* %10458, i32 0, i32 0
  %RAX.i595 = bitcast %union.anon* %10459 to i64*
  %10460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10461 = getelementptr inbounds %struct.GPR, %struct.GPR* %10460, i32 0, i32 5
  %10462 = getelementptr inbounds %struct.Reg, %struct.Reg* %10461, i32 0, i32 0
  %RCX.i596 = bitcast %union.anon* %10462 to i64*
  %10463 = load i64, i64* %RAX.i595
  %10464 = add i64 %10463, 740
  %10465 = load i64, i64* %PC.i594
  %10466 = add i64 %10465, 6
  store i64 %10466, i64* %PC.i594
  %10467 = inttoptr i64 %10464 to i32*
  %10468 = load i32, i32* %10467
  %10469 = zext i32 %10468 to i64
  store i64 %10469, i64* %RCX.i596, align 8
  store %struct.Memory* %loadMem_40c8e9, %struct.Memory** %MEMORY
  %loadMem_40c8ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10471 = getelementptr inbounds %struct.GPR, %struct.GPR* %10470, i32 0, i32 33
  %10472 = getelementptr inbounds %struct.Reg, %struct.Reg* %10471, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %10472 to i64*
  %10473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10474 = getelementptr inbounds %struct.GPR, %struct.GPR* %10473, i32 0, i32 5
  %10475 = getelementptr inbounds %struct.Reg, %struct.Reg* %10474, i32 0, i32 0
  %ECX.i593 = bitcast %union.anon* %10475 to i32*
  %10476 = load i32, i32* %ECX.i593
  %10477 = zext i32 %10476 to i64
  %10478 = load i64, i64* %PC.i592
  %10479 = add i64 %10478, 7
  store i64 %10479, i64* %PC.i592
  %10480 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %10481 = sub i32 %10476, %10480
  %10482 = icmp ult i32 %10476, %10480
  %10483 = zext i1 %10482 to i8
  %10484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10483, i8* %10484, align 1
  %10485 = and i32 %10481, 255
  %10486 = call i32 @llvm.ctpop.i32(i32 %10485)
  %10487 = trunc i32 %10486 to i8
  %10488 = and i8 %10487, 1
  %10489 = xor i8 %10488, 1
  %10490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10489, i8* %10490, align 1
  %10491 = xor i32 %10480, %10476
  %10492 = xor i32 %10491, %10481
  %10493 = lshr i32 %10492, 4
  %10494 = trunc i32 %10493 to i8
  %10495 = and i8 %10494, 1
  %10496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10495, i8* %10496, align 1
  %10497 = icmp eq i32 %10481, 0
  %10498 = zext i1 %10497 to i8
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10498, i8* %10499, align 1
  %10500 = lshr i32 %10481, 31
  %10501 = trunc i32 %10500 to i8
  %10502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10501, i8* %10502, align 1
  %10503 = lshr i32 %10476, 31
  %10504 = lshr i32 %10480, 31
  %10505 = xor i32 %10504, %10503
  %10506 = xor i32 %10500, %10503
  %10507 = add i32 %10506, %10505
  %10508 = icmp eq i32 %10507, 2
  %10509 = zext i1 %10508 to i8
  %10510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10509, i8* %10510, align 1
  store %struct.Memory* %loadMem_40c8ef, %struct.Memory** %MEMORY
  %loadMem_40c8f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10512 = getelementptr inbounds %struct.GPR, %struct.GPR* %10511, i32 0, i32 33
  %10513 = getelementptr inbounds %struct.Reg, %struct.Reg* %10512, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %10513 to i64*
  %10514 = load i64, i64* %PC.i591
  %10515 = add i64 %10514, 336
  %10516 = load i64, i64* %PC.i591
  %10517 = add i64 %10516, 6
  %10518 = load i64, i64* %PC.i591
  %10519 = add i64 %10518, 6
  store i64 %10519, i64* %PC.i591
  %10520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10521 = load i8, i8* %10520, align 1
  store i8 %10521, i8* %BRANCH_TAKEN, align 1
  %10522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10523 = icmp ne i8 %10521, 0
  %10524 = select i1 %10523, i64 %10515, i64 %10517
  store i64 %10524, i64* %10522, align 8
  store %struct.Memory* %loadMem_40c8f6, %struct.Memory** %MEMORY
  %loadBr_40c8f6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c8f6 = icmp eq i8 %loadBr_40c8f6, 1
  br i1 %cmpBr_40c8f6, label %block_.L_40ca46, label %block_40c8fc

block_40c8fc:                                     ; preds = %block_40c8c4
  %loadMem_40c8fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10526 = getelementptr inbounds %struct.GPR, %struct.GPR* %10525, i32 0, i32 33
  %10527 = getelementptr inbounds %struct.Reg, %struct.Reg* %10526, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %10527 to i64*
  %10528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10529 = getelementptr inbounds %struct.GPR, %struct.GPR* %10528, i32 0, i32 1
  %10530 = getelementptr inbounds %struct.Reg, %struct.Reg* %10529, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %10530 to i64*
  %10531 = load i64, i64* %PC.i589
  %10532 = add i64 %10531, 10
  store i64 %10532, i64* %PC.i589
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i590, align 8
  store %struct.Memory* %loadMem_40c8fc, %struct.Memory** %MEMORY
  %loadMem_40c906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10534 = getelementptr inbounds %struct.GPR, %struct.GPR* %10533, i32 0, i32 33
  %10535 = getelementptr inbounds %struct.Reg, %struct.Reg* %10534, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %10535 to i64*
  %10536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10537 = getelementptr inbounds %struct.GPR, %struct.GPR* %10536, i32 0, i32 5
  %10538 = getelementptr inbounds %struct.Reg, %struct.Reg* %10537, i32 0, i32 0
  %RCX.i587 = bitcast %union.anon* %10538 to i64*
  %10539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10540 = getelementptr inbounds %struct.GPR, %struct.GPR* %10539, i32 0, i32 15
  %10541 = getelementptr inbounds %struct.Reg, %struct.Reg* %10540, i32 0, i32 0
  %RBP.i588 = bitcast %union.anon* %10541 to i64*
  %10542 = load i64, i64* %RBP.i588
  %10543 = sub i64 %10542, 4
  %10544 = load i64, i64* %PC.i586
  %10545 = add i64 %10544, 3
  store i64 %10545, i64* %PC.i586
  %10546 = inttoptr i64 %10543 to i32*
  %10547 = load i32, i32* %10546
  %10548 = zext i32 %10547 to i64
  store i64 %10548, i64* %RCX.i587, align 8
  store %struct.Memory* %loadMem_40c906, %struct.Memory** %MEMORY
  %loadMem_40c909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10550 = getelementptr inbounds %struct.GPR, %struct.GPR* %10549, i32 0, i32 33
  %10551 = getelementptr inbounds %struct.Reg, %struct.Reg* %10550, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %10551 to i64*
  %10552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10553 = getelementptr inbounds %struct.GPR, %struct.GPR* %10552, i32 0, i32 5
  %10554 = getelementptr inbounds %struct.Reg, %struct.Reg* %10553, i32 0, i32 0
  %RCX.i585 = bitcast %union.anon* %10554 to i64*
  %10555 = load i64, i64* %RCX.i585
  %10556 = load i64, i64* %PC.i584
  %10557 = add i64 %10556, 3
  store i64 %10557, i64* %PC.i584
  %10558 = trunc i64 %10555 to i32
  %10559 = sub i32 %10558, 20
  %10560 = zext i32 %10559 to i64
  store i64 %10560, i64* %RCX.i585, align 8
  %10561 = icmp ult i32 %10558, 20
  %10562 = zext i1 %10561 to i8
  %10563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10562, i8* %10563, align 1
  %10564 = and i32 %10559, 255
  %10565 = call i32 @llvm.ctpop.i32(i32 %10564)
  %10566 = trunc i32 %10565 to i8
  %10567 = and i8 %10566, 1
  %10568 = xor i8 %10567, 1
  %10569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10568, i8* %10569, align 1
  %10570 = xor i64 20, %10555
  %10571 = trunc i64 %10570 to i32
  %10572 = xor i32 %10571, %10559
  %10573 = lshr i32 %10572, 4
  %10574 = trunc i32 %10573 to i8
  %10575 = and i8 %10574, 1
  %10576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10575, i8* %10576, align 1
  %10577 = icmp eq i32 %10559, 0
  %10578 = zext i1 %10577 to i8
  %10579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10578, i8* %10579, align 1
  %10580 = lshr i32 %10559, 31
  %10581 = trunc i32 %10580 to i8
  %10582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10581, i8* %10582, align 1
  %10583 = lshr i32 %10558, 31
  %10584 = xor i32 %10580, %10583
  %10585 = add i32 %10584, %10583
  %10586 = icmp eq i32 %10585, 2
  %10587 = zext i1 %10586 to i8
  %10588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10587, i8* %10588, align 1
  store %struct.Memory* %loadMem_40c909, %struct.Memory** %MEMORY
  %loadMem_40c90c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10590 = getelementptr inbounds %struct.GPR, %struct.GPR* %10589, i32 0, i32 33
  %10591 = getelementptr inbounds %struct.Reg, %struct.Reg* %10590, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %10591 to i64*
  %10592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10593 = getelementptr inbounds %struct.GPR, %struct.GPR* %10592, i32 0, i32 5
  %10594 = getelementptr inbounds %struct.Reg, %struct.Reg* %10593, i32 0, i32 0
  %ECX.i582 = bitcast %union.anon* %10594 to i32*
  %10595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10596 = getelementptr inbounds %struct.GPR, %struct.GPR* %10595, i32 0, i32 7
  %10597 = getelementptr inbounds %struct.Reg, %struct.Reg* %10596, i32 0, i32 0
  %RDX.i583 = bitcast %union.anon* %10597 to i64*
  %10598 = load i32, i32* %ECX.i582
  %10599 = zext i32 %10598 to i64
  %10600 = load i64, i64* %PC.i581
  %10601 = add i64 %10600, 3
  store i64 %10601, i64* %PC.i581
  %10602 = shl i64 %10599, 32
  %10603 = ashr exact i64 %10602, 32
  store i64 %10603, i64* %RDX.i583, align 8
  store %struct.Memory* %loadMem_40c90c, %struct.Memory** %MEMORY
  %loadMem_40c90f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10605 = getelementptr inbounds %struct.GPR, %struct.GPR* %10604, i32 0, i32 33
  %10606 = getelementptr inbounds %struct.Reg, %struct.Reg* %10605, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %10606 to i64*
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10608 = getelementptr inbounds %struct.GPR, %struct.GPR* %10607, i32 0, i32 5
  %10609 = getelementptr inbounds %struct.Reg, %struct.Reg* %10608, i32 0, i32 0
  %RCX.i579 = bitcast %union.anon* %10609 to i64*
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10611 = getelementptr inbounds %struct.GPR, %struct.GPR* %10610, i32 0, i32 7
  %10612 = getelementptr inbounds %struct.Reg, %struct.Reg* %10611, i32 0, i32 0
  %RDX.i580 = bitcast %union.anon* %10612 to i64*
  %10613 = load i64, i64* %RDX.i580
  %10614 = mul i64 %10613, 4
  %10615 = add i64 %10614, 11187184
  %10616 = load i64, i64* %PC.i578
  %10617 = add i64 %10616, 7
  store i64 %10617, i64* %PC.i578
  %10618 = inttoptr i64 %10615 to i32*
  %10619 = load i32, i32* %10618
  %10620 = zext i32 %10619 to i64
  store i64 %10620, i64* %RCX.i579, align 8
  store %struct.Memory* %loadMem_40c90f, %struct.Memory** %MEMORY
  %loadMem_40c916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10622 = getelementptr inbounds %struct.GPR, %struct.GPR* %10621, i32 0, i32 33
  %10623 = getelementptr inbounds %struct.Reg, %struct.Reg* %10622, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %10623 to i64*
  %10624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10625 = getelementptr inbounds %struct.GPR, %struct.GPR* %10624, i32 0, i32 7
  %10626 = getelementptr inbounds %struct.Reg, %struct.Reg* %10625, i32 0, i32 0
  %RDX.i576 = bitcast %union.anon* %10626 to i64*
  %10627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10628 = getelementptr inbounds %struct.GPR, %struct.GPR* %10627, i32 0, i32 15
  %10629 = getelementptr inbounds %struct.Reg, %struct.Reg* %10628, i32 0, i32 0
  %RBP.i577 = bitcast %union.anon* %10629 to i64*
  %10630 = load i64, i64* %RBP.i577
  %10631 = sub i64 %10630, 8
  %10632 = load i64, i64* %PC.i575
  %10633 = add i64 %10632, 4
  store i64 %10633, i64* %PC.i575
  %10634 = inttoptr i64 %10631 to i32*
  %10635 = load i32, i32* %10634
  %10636 = sext i32 %10635 to i64
  store i64 %10636, i64* %RDX.i576, align 8
  store %struct.Memory* %loadMem_40c916, %struct.Memory** %MEMORY
  %loadMem_40c91a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10638 = getelementptr inbounds %struct.GPR, %struct.GPR* %10637, i32 0, i32 33
  %10639 = getelementptr inbounds %struct.Reg, %struct.Reg* %10638, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %10639 to i64*
  %10640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10641 = getelementptr inbounds %struct.GPR, %struct.GPR* %10640, i32 0, i32 7
  %10642 = getelementptr inbounds %struct.Reg, %struct.Reg* %10641, i32 0, i32 0
  %RDX.i574 = bitcast %union.anon* %10642 to i64*
  %10643 = load i64, i64* %RDX.i574
  %10644 = load i64, i64* %PC.i573
  %10645 = add i64 %10644, 7
  store i64 %10645, i64* %PC.i573
  %10646 = sext i64 %10643 to i128
  %10647 = and i128 %10646, -18446744073709551616
  %10648 = zext i64 %10643 to i128
  %10649 = or i128 %10647, %10648
  %10650 = mul i128 744, %10649
  %10651 = trunc i128 %10650 to i64
  store i64 %10651, i64* %RDX.i574, align 8
  %10652 = sext i64 %10651 to i128
  %10653 = icmp ne i128 %10652, %10650
  %10654 = zext i1 %10653 to i8
  %10655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10654, i8* %10655, align 1
  %10656 = trunc i128 %10650 to i32
  %10657 = and i32 %10656, 255
  %10658 = call i32 @llvm.ctpop.i32(i32 %10657)
  %10659 = trunc i32 %10658 to i8
  %10660 = and i8 %10659, 1
  %10661 = xor i8 %10660, 1
  %10662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10661, i8* %10662, align 1
  %10663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10663, align 1
  %10664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10664, align 1
  %10665 = lshr i64 %10651, 63
  %10666 = trunc i64 %10665 to i8
  %10667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10666, i8* %10667, align 1
  %10668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10654, i8* %10668, align 1
  store %struct.Memory* %loadMem_40c91a, %struct.Memory** %MEMORY
  %loadMem_40c921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10670 = getelementptr inbounds %struct.GPR, %struct.GPR* %10669, i32 0, i32 33
  %10671 = getelementptr inbounds %struct.Reg, %struct.Reg* %10670, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %10671 to i64*
  %10672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10673 = getelementptr inbounds %struct.GPR, %struct.GPR* %10672, i32 0, i32 1
  %10674 = getelementptr inbounds %struct.Reg, %struct.Reg* %10673, i32 0, i32 0
  %RAX.i571 = bitcast %union.anon* %10674 to i64*
  %10675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10676 = getelementptr inbounds %struct.GPR, %struct.GPR* %10675, i32 0, i32 9
  %10677 = getelementptr inbounds %struct.Reg, %struct.Reg* %10676, i32 0, i32 0
  %RSI.i572 = bitcast %union.anon* %10677 to i64*
  %10678 = load i64, i64* %RAX.i571
  %10679 = load i64, i64* %PC.i570
  %10680 = add i64 %10679, 3
  store i64 %10680, i64* %PC.i570
  store i64 %10678, i64* %RSI.i572, align 8
  store %struct.Memory* %loadMem_40c921, %struct.Memory** %MEMORY
  %loadMem_40c924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10682 = getelementptr inbounds %struct.GPR, %struct.GPR* %10681, i32 0, i32 33
  %10683 = getelementptr inbounds %struct.Reg, %struct.Reg* %10682, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %10683 to i64*
  %10684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10685 = getelementptr inbounds %struct.GPR, %struct.GPR* %10684, i32 0, i32 7
  %10686 = getelementptr inbounds %struct.Reg, %struct.Reg* %10685, i32 0, i32 0
  %RDX.i568 = bitcast %union.anon* %10686 to i64*
  %10687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10688 = getelementptr inbounds %struct.GPR, %struct.GPR* %10687, i32 0, i32 9
  %10689 = getelementptr inbounds %struct.Reg, %struct.Reg* %10688, i32 0, i32 0
  %RSI.i569 = bitcast %union.anon* %10689 to i64*
  %10690 = load i64, i64* %RSI.i569
  %10691 = load i64, i64* %RDX.i568
  %10692 = load i64, i64* %PC.i567
  %10693 = add i64 %10692, 3
  store i64 %10693, i64* %PC.i567
  %10694 = add i64 %10691, %10690
  store i64 %10694, i64* %RSI.i569, align 8
  %10695 = icmp ult i64 %10694, %10690
  %10696 = icmp ult i64 %10694, %10691
  %10697 = or i1 %10695, %10696
  %10698 = zext i1 %10697 to i8
  %10699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10698, i8* %10699, align 1
  %10700 = trunc i64 %10694 to i32
  %10701 = and i32 %10700, 255
  %10702 = call i32 @llvm.ctpop.i32(i32 %10701)
  %10703 = trunc i32 %10702 to i8
  %10704 = and i8 %10703, 1
  %10705 = xor i8 %10704, 1
  %10706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10705, i8* %10706, align 1
  %10707 = xor i64 %10691, %10690
  %10708 = xor i64 %10707, %10694
  %10709 = lshr i64 %10708, 4
  %10710 = trunc i64 %10709 to i8
  %10711 = and i8 %10710, 1
  %10712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10711, i8* %10712, align 1
  %10713 = icmp eq i64 %10694, 0
  %10714 = zext i1 %10713 to i8
  %10715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10714, i8* %10715, align 1
  %10716 = lshr i64 %10694, 63
  %10717 = trunc i64 %10716 to i8
  %10718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10717, i8* %10718, align 1
  %10719 = lshr i64 %10690, 63
  %10720 = lshr i64 %10691, 63
  %10721 = xor i64 %10716, %10719
  %10722 = xor i64 %10716, %10720
  %10723 = add i64 %10721, %10722
  %10724 = icmp eq i64 %10723, 2
  %10725 = zext i1 %10724 to i8
  %10726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10725, i8* %10726, align 1
  store %struct.Memory* %loadMem_40c924, %struct.Memory** %MEMORY
  %loadMem_40c927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10728 = getelementptr inbounds %struct.GPR, %struct.GPR* %10727, i32 0, i32 33
  %10729 = getelementptr inbounds %struct.Reg, %struct.Reg* %10728, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %10729 to i64*
  %10730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10731 = getelementptr inbounds %struct.GPR, %struct.GPR* %10730, i32 0, i32 7
  %10732 = getelementptr inbounds %struct.Reg, %struct.Reg* %10731, i32 0, i32 0
  %RDX.i565 = bitcast %union.anon* %10732 to i64*
  %10733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10734 = getelementptr inbounds %struct.GPR, %struct.GPR* %10733, i32 0, i32 15
  %10735 = getelementptr inbounds %struct.Reg, %struct.Reg* %10734, i32 0, i32 0
  %RBP.i566 = bitcast %union.anon* %10735 to i64*
  %10736 = load i64, i64* %RBP.i566
  %10737 = sub i64 %10736, 8
  %10738 = load i64, i64* %PC.i564
  %10739 = add i64 %10738, 4
  store i64 %10739, i64* %PC.i564
  %10740 = inttoptr i64 %10737 to i32*
  %10741 = load i32, i32* %10740
  %10742 = sext i32 %10741 to i64
  store i64 %10742, i64* %RDX.i565, align 8
  store %struct.Memory* %loadMem_40c927, %struct.Memory** %MEMORY
  %loadMem_40c92b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10744 = getelementptr inbounds %struct.GPR, %struct.GPR* %10743, i32 0, i32 33
  %10745 = getelementptr inbounds %struct.Reg, %struct.Reg* %10744, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %10745 to i64*
  %10746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10747 = getelementptr inbounds %struct.GPR, %struct.GPR* %10746, i32 0, i32 7
  %10748 = getelementptr inbounds %struct.Reg, %struct.Reg* %10747, i32 0, i32 0
  %RDX.i563 = bitcast %union.anon* %10748 to i64*
  %10749 = load i64, i64* %RDX.i563
  %10750 = load i64, i64* %PC.i562
  %10751 = add i64 %10750, 7
  store i64 %10751, i64* %PC.i562
  %10752 = sext i64 %10749 to i128
  %10753 = and i128 %10752, -18446744073709551616
  %10754 = zext i64 %10749 to i128
  %10755 = or i128 %10753, %10754
  %10756 = mul i128 744, %10755
  %10757 = trunc i128 %10756 to i64
  store i64 %10757, i64* %RDX.i563, align 8
  %10758 = sext i64 %10757 to i128
  %10759 = icmp ne i128 %10758, %10756
  %10760 = zext i1 %10759 to i8
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10760, i8* %10761, align 1
  %10762 = trunc i128 %10756 to i32
  %10763 = and i32 %10762, 255
  %10764 = call i32 @llvm.ctpop.i32(i32 %10763)
  %10765 = trunc i32 %10764 to i8
  %10766 = and i8 %10765, 1
  %10767 = xor i8 %10766, 1
  %10768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10767, i8* %10768, align 1
  %10769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10769, align 1
  %10770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10770, align 1
  %10771 = lshr i64 %10757, 63
  %10772 = trunc i64 %10771 to i8
  %10773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10772, i8* %10773, align 1
  %10774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10760, i8* %10774, align 1
  store %struct.Memory* %loadMem_40c92b, %struct.Memory** %MEMORY
  %loadMem_40c932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10776 = getelementptr inbounds %struct.GPR, %struct.GPR* %10775, i32 0, i32 33
  %10777 = getelementptr inbounds %struct.Reg, %struct.Reg* %10776, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %10777 to i64*
  %10778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10779 = getelementptr inbounds %struct.GPR, %struct.GPR* %10778, i32 0, i32 1
  %10780 = getelementptr inbounds %struct.Reg, %struct.Reg* %10779, i32 0, i32 0
  %RAX.i560 = bitcast %union.anon* %10780 to i64*
  %10781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10782 = getelementptr inbounds %struct.GPR, %struct.GPR* %10781, i32 0, i32 11
  %10783 = getelementptr inbounds %struct.Reg, %struct.Reg* %10782, i32 0, i32 0
  %RDI.i561 = bitcast %union.anon* %10783 to i64*
  %10784 = load i64, i64* %RAX.i560
  %10785 = load i64, i64* %PC.i559
  %10786 = add i64 %10785, 3
  store i64 %10786, i64* %PC.i559
  store i64 %10784, i64* %RDI.i561, align 8
  store %struct.Memory* %loadMem_40c932, %struct.Memory** %MEMORY
  %loadMem_40c935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10788 = getelementptr inbounds %struct.GPR, %struct.GPR* %10787, i32 0, i32 33
  %10789 = getelementptr inbounds %struct.Reg, %struct.Reg* %10788, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %10789 to i64*
  %10790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10791 = getelementptr inbounds %struct.GPR, %struct.GPR* %10790, i32 0, i32 7
  %10792 = getelementptr inbounds %struct.Reg, %struct.Reg* %10791, i32 0, i32 0
  %RDX.i557 = bitcast %union.anon* %10792 to i64*
  %10793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10794 = getelementptr inbounds %struct.GPR, %struct.GPR* %10793, i32 0, i32 11
  %10795 = getelementptr inbounds %struct.Reg, %struct.Reg* %10794, i32 0, i32 0
  %RDI.i558 = bitcast %union.anon* %10795 to i64*
  %10796 = load i64, i64* %RDI.i558
  %10797 = load i64, i64* %RDX.i557
  %10798 = load i64, i64* %PC.i556
  %10799 = add i64 %10798, 3
  store i64 %10799, i64* %PC.i556
  %10800 = add i64 %10797, %10796
  store i64 %10800, i64* %RDI.i558, align 8
  %10801 = icmp ult i64 %10800, %10796
  %10802 = icmp ult i64 %10800, %10797
  %10803 = or i1 %10801, %10802
  %10804 = zext i1 %10803 to i8
  %10805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10804, i8* %10805, align 1
  %10806 = trunc i64 %10800 to i32
  %10807 = and i32 %10806, 255
  %10808 = call i32 @llvm.ctpop.i32(i32 %10807)
  %10809 = trunc i32 %10808 to i8
  %10810 = and i8 %10809, 1
  %10811 = xor i8 %10810, 1
  %10812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10811, i8* %10812, align 1
  %10813 = xor i64 %10797, %10796
  %10814 = xor i64 %10813, %10800
  %10815 = lshr i64 %10814, 4
  %10816 = trunc i64 %10815 to i8
  %10817 = and i8 %10816, 1
  %10818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10817, i8* %10818, align 1
  %10819 = icmp eq i64 %10800, 0
  %10820 = zext i1 %10819 to i8
  %10821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10820, i8* %10821, align 1
  %10822 = lshr i64 %10800, 63
  %10823 = trunc i64 %10822 to i8
  %10824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10823, i8* %10824, align 1
  %10825 = lshr i64 %10796, 63
  %10826 = lshr i64 %10797, 63
  %10827 = xor i64 %10822, %10825
  %10828 = xor i64 %10822, %10826
  %10829 = add i64 %10827, %10828
  %10830 = icmp eq i64 %10829, 2
  %10831 = zext i1 %10830 to i8
  %10832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10831, i8* %10832, align 1
  store %struct.Memory* %loadMem_40c935, %struct.Memory** %MEMORY
  %loadMem_40c938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10834 = getelementptr inbounds %struct.GPR, %struct.GPR* %10833, i32 0, i32 33
  %10835 = getelementptr inbounds %struct.Reg, %struct.Reg* %10834, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %10835 to i64*
  %10836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10837 = getelementptr inbounds %struct.GPR, %struct.GPR* %10836, i32 0, i32 17
  %10838 = getelementptr inbounds %struct.Reg, %struct.Reg* %10837, i32 0, i32 0
  %R8D.i554 = bitcast %union.anon* %10838 to i32*
  %10839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10840 = getelementptr inbounds %struct.GPR, %struct.GPR* %10839, i32 0, i32 11
  %10841 = getelementptr inbounds %struct.Reg, %struct.Reg* %10840, i32 0, i32 0
  %RDI.i555 = bitcast %union.anon* %10841 to i64*
  %10842 = bitcast i32* %R8D.i554 to i64*
  %10843 = load i64, i64* %RDI.i555
  %10844 = add i64 %10843, 96
  %10845 = load i64, i64* %PC.i553
  %10846 = add i64 %10845, 4
  store i64 %10846, i64* %PC.i553
  %10847 = inttoptr i64 %10844 to i32*
  %10848 = load i32, i32* %10847
  %10849 = zext i32 %10848 to i64
  store i64 %10849, i64* %10842, align 8
  store %struct.Memory* %loadMem_40c938, %struct.Memory** %MEMORY
  %loadMem_40c93c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10851 = getelementptr inbounds %struct.GPR, %struct.GPR* %10850, i32 0, i32 33
  %10852 = getelementptr inbounds %struct.Reg, %struct.Reg* %10851, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %10852 to i64*
  %10853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10854 = getelementptr inbounds %struct.GPR, %struct.GPR* %10853, i32 0, i32 17
  %10855 = getelementptr inbounds %struct.Reg, %struct.Reg* %10854, i32 0, i32 0
  %R8D.i551 = bitcast %union.anon* %10855 to i32*
  %10856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10857 = getelementptr inbounds %struct.GPR, %struct.GPR* %10856, i32 0, i32 19
  %10858 = getelementptr inbounds %struct.Reg, %struct.Reg* %10857, i32 0, i32 0
  %R9D.i552 = bitcast %union.anon* %10858 to i32*
  %10859 = bitcast i32* %R9D.i552 to i64*
  %10860 = load i32, i32* %R8D.i551
  %10861 = zext i32 %10860 to i64
  %10862 = load i64, i64* %PC.i550
  %10863 = add i64 %10862, 3
  store i64 %10863, i64* %PC.i550
  %10864 = and i64 %10861, 4294967295
  store i64 %10864, i64* %10859, align 8
  store %struct.Memory* %loadMem_40c93c, %struct.Memory** %MEMORY
  %loadMem_40c93f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10866 = getelementptr inbounds %struct.GPR, %struct.GPR* %10865, i32 0, i32 33
  %10867 = getelementptr inbounds %struct.Reg, %struct.Reg* %10866, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %10867 to i64*
  %10868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10869 = getelementptr inbounds %struct.GPR, %struct.GPR* %10868, i32 0, i32 19
  %10870 = getelementptr inbounds %struct.Reg, %struct.Reg* %10869, i32 0, i32 0
  %R9D.i549 = bitcast %union.anon* %10870 to i32*
  %10871 = bitcast i32* %R9D.i549 to i64*
  %10872 = load i32, i32* %R9D.i549
  %10873 = zext i32 %10872 to i64
  %10874 = load i64, i64* %PC.i548
  %10875 = add i64 %10874, 4
  store i64 %10875, i64* %PC.i548
  %10876 = add i32 1, %10872
  %10877 = zext i32 %10876 to i64
  store i64 %10877, i64* %10871, align 8
  %10878 = icmp ult i32 %10876, %10872
  %10879 = icmp ult i32 %10876, 1
  %10880 = or i1 %10878, %10879
  %10881 = zext i1 %10880 to i8
  %10882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10881, i8* %10882, align 1
  %10883 = and i32 %10876, 255
  %10884 = call i32 @llvm.ctpop.i32(i32 %10883)
  %10885 = trunc i32 %10884 to i8
  %10886 = and i8 %10885, 1
  %10887 = xor i8 %10886, 1
  %10888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10887, i8* %10888, align 1
  %10889 = xor i64 1, %10873
  %10890 = trunc i64 %10889 to i32
  %10891 = xor i32 %10890, %10876
  %10892 = lshr i32 %10891, 4
  %10893 = trunc i32 %10892 to i8
  %10894 = and i8 %10893, 1
  %10895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10894, i8* %10895, align 1
  %10896 = icmp eq i32 %10876, 0
  %10897 = zext i1 %10896 to i8
  %10898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10897, i8* %10898, align 1
  %10899 = lshr i32 %10876, 31
  %10900 = trunc i32 %10899 to i8
  %10901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10900, i8* %10901, align 1
  %10902 = lshr i32 %10872, 31
  %10903 = xor i32 %10899, %10902
  %10904 = add i32 %10903, %10899
  %10905 = icmp eq i32 %10904, 2
  %10906 = zext i1 %10905 to i8
  %10907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10906, i8* %10907, align 1
  store %struct.Memory* %loadMem_40c93f, %struct.Memory** %MEMORY
  %loadMem_40c943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10909 = getelementptr inbounds %struct.GPR, %struct.GPR* %10908, i32 0, i32 33
  %10910 = getelementptr inbounds %struct.Reg, %struct.Reg* %10909, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %10910 to i64*
  %10911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10912 = getelementptr inbounds %struct.GPR, %struct.GPR* %10911, i32 0, i32 19
  %10913 = getelementptr inbounds %struct.Reg, %struct.Reg* %10912, i32 0, i32 0
  %R9D.i546 = bitcast %union.anon* %10913 to i32*
  %10914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10915 = getelementptr inbounds %struct.GPR, %struct.GPR* %10914, i32 0, i32 11
  %10916 = getelementptr inbounds %struct.Reg, %struct.Reg* %10915, i32 0, i32 0
  %RDI.i547 = bitcast %union.anon* %10916 to i64*
  %10917 = load i64, i64* %RDI.i547
  %10918 = add i64 %10917, 96
  %10919 = load i32, i32* %R9D.i546
  %10920 = zext i32 %10919 to i64
  %10921 = load i64, i64* %PC.i545
  %10922 = add i64 %10921, 4
  store i64 %10922, i64* %PC.i545
  %10923 = inttoptr i64 %10918 to i32*
  store i32 %10919, i32* %10923
  store %struct.Memory* %loadMem_40c943, %struct.Memory** %MEMORY
  %loadMem_40c947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10925 = getelementptr inbounds %struct.GPR, %struct.GPR* %10924, i32 0, i32 33
  %10926 = getelementptr inbounds %struct.Reg, %struct.Reg* %10925, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %10926 to i64*
  %10927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10928 = getelementptr inbounds %struct.GPR, %struct.GPR* %10927, i32 0, i32 17
  %10929 = getelementptr inbounds %struct.Reg, %struct.Reg* %10928, i32 0, i32 0
  %R8D.i543 = bitcast %union.anon* %10929 to i32*
  %10930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10931 = getelementptr inbounds %struct.GPR, %struct.GPR* %10930, i32 0, i32 7
  %10932 = getelementptr inbounds %struct.Reg, %struct.Reg* %10931, i32 0, i32 0
  %RDX.i544 = bitcast %union.anon* %10932 to i64*
  %10933 = load i32, i32* %R8D.i543
  %10934 = zext i32 %10933 to i64
  %10935 = load i64, i64* %PC.i542
  %10936 = add i64 %10935, 3
  store i64 %10936, i64* %PC.i542
  %10937 = shl i64 %10934, 32
  %10938 = ashr exact i64 %10937, 32
  store i64 %10938, i64* %RDX.i544, align 8
  store %struct.Memory* %loadMem_40c947, %struct.Memory** %MEMORY
  %loadMem_40c94a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10940 = getelementptr inbounds %struct.GPR, %struct.GPR* %10939, i32 0, i32 33
  %10941 = getelementptr inbounds %struct.Reg, %struct.Reg* %10940, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %10941 to i64*
  %10942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10943 = getelementptr inbounds %struct.GPR, %struct.GPR* %10942, i32 0, i32 5
  %10944 = getelementptr inbounds %struct.Reg, %struct.Reg* %10943, i32 0, i32 0
  %ECX.i539 = bitcast %union.anon* %10944 to i32*
  %10945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10946 = getelementptr inbounds %struct.GPR, %struct.GPR* %10945, i32 0, i32 7
  %10947 = getelementptr inbounds %struct.Reg, %struct.Reg* %10946, i32 0, i32 0
  %RDX.i540 = bitcast %union.anon* %10947 to i64*
  %10948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10949 = getelementptr inbounds %struct.GPR, %struct.GPR* %10948, i32 0, i32 9
  %10950 = getelementptr inbounds %struct.Reg, %struct.Reg* %10949, i32 0, i32 0
  %RSI.i541 = bitcast %union.anon* %10950 to i64*
  %10951 = load i64, i64* %RSI.i541
  %10952 = load i64, i64* %RDX.i540
  %10953 = mul i64 %10952, 4
  %10954 = add i64 %10951, 100
  %10955 = add i64 %10954, %10953
  %10956 = load i32, i32* %ECX.i539
  %10957 = zext i32 %10956 to i64
  %10958 = load i64, i64* %PC.i538
  %10959 = add i64 %10958, 4
  store i64 %10959, i64* %PC.i538
  %10960 = inttoptr i64 %10955 to i32*
  store i32 %10956, i32* %10960
  store %struct.Memory* %loadMem_40c94a, %struct.Memory** %MEMORY
  %loadMem_40c94e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10962 = getelementptr inbounds %struct.GPR, %struct.GPR* %10961, i32 0, i32 33
  %10963 = getelementptr inbounds %struct.Reg, %struct.Reg* %10962, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %10963 to i64*
  %10964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10965 = getelementptr inbounds %struct.GPR, %struct.GPR* %10964, i32 0, i32 5
  %10966 = getelementptr inbounds %struct.Reg, %struct.Reg* %10965, i32 0, i32 0
  %RCX.i536 = bitcast %union.anon* %10966 to i64*
  %10967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10968 = getelementptr inbounds %struct.GPR, %struct.GPR* %10967, i32 0, i32 15
  %10969 = getelementptr inbounds %struct.Reg, %struct.Reg* %10968, i32 0, i32 0
  %RBP.i537 = bitcast %union.anon* %10969 to i64*
  %10970 = load i64, i64* %RBP.i537
  %10971 = sub i64 %10970, 4
  %10972 = load i64, i64* %PC.i535
  %10973 = add i64 %10972, 3
  store i64 %10973, i64* %PC.i535
  %10974 = inttoptr i64 %10971 to i32*
  %10975 = load i32, i32* %10974
  %10976 = zext i32 %10975 to i64
  store i64 %10976, i64* %RCX.i536, align 8
  store %struct.Memory* %loadMem_40c94e, %struct.Memory** %MEMORY
  %loadMem_40c951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10978 = getelementptr inbounds %struct.GPR, %struct.GPR* %10977, i32 0, i32 33
  %10979 = getelementptr inbounds %struct.Reg, %struct.Reg* %10978, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %10979 to i64*
  %10980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10981 = getelementptr inbounds %struct.GPR, %struct.GPR* %10980, i32 0, i32 5
  %10982 = getelementptr inbounds %struct.Reg, %struct.Reg* %10981, i32 0, i32 0
  %RCX.i534 = bitcast %union.anon* %10982 to i64*
  %10983 = load i64, i64* %RCX.i534
  %10984 = load i64, i64* %PC.i533
  %10985 = add i64 %10984, 3
  store i64 %10985, i64* %PC.i533
  %10986 = trunc i64 %10983 to i32
  %10987 = sub i32 %10986, 20
  %10988 = zext i32 %10987 to i64
  store i64 %10988, i64* %RCX.i534, align 8
  %10989 = icmp ult i32 %10986, 20
  %10990 = zext i1 %10989 to i8
  %10991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10990, i8* %10991, align 1
  %10992 = and i32 %10987, 255
  %10993 = call i32 @llvm.ctpop.i32(i32 %10992)
  %10994 = trunc i32 %10993 to i8
  %10995 = and i8 %10994, 1
  %10996 = xor i8 %10995, 1
  %10997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10996, i8* %10997, align 1
  %10998 = xor i64 20, %10983
  %10999 = trunc i64 %10998 to i32
  %11000 = xor i32 %10999, %10987
  %11001 = lshr i32 %11000, 4
  %11002 = trunc i32 %11001 to i8
  %11003 = and i8 %11002, 1
  %11004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11003, i8* %11004, align 1
  %11005 = icmp eq i32 %10987, 0
  %11006 = zext i1 %11005 to i8
  %11007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11006, i8* %11007, align 1
  %11008 = lshr i32 %10987, 31
  %11009 = trunc i32 %11008 to i8
  %11010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11009, i8* %11010, align 1
  %11011 = lshr i32 %10986, 31
  %11012 = xor i32 %11008, %11011
  %11013 = add i32 %11012, %11011
  %11014 = icmp eq i32 %11013, 2
  %11015 = zext i1 %11014 to i8
  %11016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11015, i8* %11016, align 1
  store %struct.Memory* %loadMem_40c951, %struct.Memory** %MEMORY
  %loadMem_40c954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11018 = getelementptr inbounds %struct.GPR, %struct.GPR* %11017, i32 0, i32 33
  %11019 = getelementptr inbounds %struct.Reg, %struct.Reg* %11018, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %11019 to i64*
  %11020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11021 = getelementptr inbounds %struct.GPR, %struct.GPR* %11020, i32 0, i32 5
  %11022 = getelementptr inbounds %struct.Reg, %struct.Reg* %11021, i32 0, i32 0
  %ECX.i531 = bitcast %union.anon* %11022 to i32*
  %11023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11024 = getelementptr inbounds %struct.GPR, %struct.GPR* %11023, i32 0, i32 7
  %11025 = getelementptr inbounds %struct.Reg, %struct.Reg* %11024, i32 0, i32 0
  %RDX.i532 = bitcast %union.anon* %11025 to i64*
  %11026 = load i32, i32* %ECX.i531
  %11027 = zext i32 %11026 to i64
  %11028 = load i64, i64* %PC.i530
  %11029 = add i64 %11028, 3
  store i64 %11029, i64* %PC.i530
  %11030 = shl i64 %11027, 32
  %11031 = ashr exact i64 %11030, 32
  store i64 %11031, i64* %RDX.i532, align 8
  store %struct.Memory* %loadMem_40c954, %struct.Memory** %MEMORY
  %loadMem_40c957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11033 = getelementptr inbounds %struct.GPR, %struct.GPR* %11032, i32 0, i32 33
  %11034 = getelementptr inbounds %struct.Reg, %struct.Reg* %11033, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %11034 to i64*
  %11035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11036 = getelementptr inbounds %struct.GPR, %struct.GPR* %11035, i32 0, i32 7
  %11037 = getelementptr inbounds %struct.Reg, %struct.Reg* %11036, i32 0, i32 0
  %RDX.i529 = bitcast %union.anon* %11037 to i64*
  %11038 = load i64, i64* %RDX.i529
  %11039 = mul i64 %11038, 4
  %11040 = add i64 %11039, 11187184
  %11041 = load i64, i64* %PC.i528
  %11042 = add i64 %11041, 8
  store i64 %11042, i64* %PC.i528
  %11043 = inttoptr i64 %11040 to i32*
  %11044 = load i32, i32* %11043
  %11045 = sext i32 %11044 to i64
  store i64 %11045, i64* %RDX.i529, align 8
  store %struct.Memory* %loadMem_40c957, %struct.Memory** %MEMORY
  %loadMem_40c95f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11047 = getelementptr inbounds %struct.GPR, %struct.GPR* %11046, i32 0, i32 33
  %11048 = getelementptr inbounds %struct.Reg, %struct.Reg* %11047, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %11048 to i64*
  %11049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11050 = getelementptr inbounds %struct.GPR, %struct.GPR* %11049, i32 0, i32 7
  %11051 = getelementptr inbounds %struct.Reg, %struct.Reg* %11050, i32 0, i32 0
  %RDX.i527 = bitcast %union.anon* %11051 to i64*
  %11052 = load i64, i64* %RDX.i527
  %11053 = load i64, i64* %PC.i526
  %11054 = add i64 %11053, 7
  store i64 %11054, i64* %PC.i526
  %11055 = sext i64 %11052 to i128
  %11056 = and i128 %11055, -18446744073709551616
  %11057 = zext i64 %11052 to i128
  %11058 = or i128 %11056, %11057
  %11059 = mul i128 744, %11058
  %11060 = trunc i128 %11059 to i64
  store i64 %11060, i64* %RDX.i527, align 8
  %11061 = sext i64 %11060 to i128
  %11062 = icmp ne i128 %11061, %11059
  %11063 = zext i1 %11062 to i8
  %11064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11063, i8* %11064, align 1
  %11065 = trunc i128 %11059 to i32
  %11066 = and i32 %11065, 255
  %11067 = call i32 @llvm.ctpop.i32(i32 %11066)
  %11068 = trunc i32 %11067 to i8
  %11069 = and i8 %11068, 1
  %11070 = xor i8 %11069, 1
  %11071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11070, i8* %11071, align 1
  %11072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11072, align 1
  %11073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11073, align 1
  %11074 = lshr i64 %11060, 63
  %11075 = trunc i64 %11074 to i8
  %11076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11075, i8* %11076, align 1
  %11077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11063, i8* %11077, align 1
  store %struct.Memory* %loadMem_40c95f, %struct.Memory** %MEMORY
  %loadMem_40c966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11079 = getelementptr inbounds %struct.GPR, %struct.GPR* %11078, i32 0, i32 33
  %11080 = getelementptr inbounds %struct.Reg, %struct.Reg* %11079, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %11080 to i64*
  %11081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11082 = getelementptr inbounds %struct.GPR, %struct.GPR* %11081, i32 0, i32 1
  %11083 = getelementptr inbounds %struct.Reg, %struct.Reg* %11082, i32 0, i32 0
  %RAX.i524 = bitcast %union.anon* %11083 to i64*
  %11084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11085 = getelementptr inbounds %struct.GPR, %struct.GPR* %11084, i32 0, i32 9
  %11086 = getelementptr inbounds %struct.Reg, %struct.Reg* %11085, i32 0, i32 0
  %RSI.i525 = bitcast %union.anon* %11086 to i64*
  %11087 = load i64, i64* %RAX.i524
  %11088 = load i64, i64* %PC.i523
  %11089 = add i64 %11088, 3
  store i64 %11089, i64* %PC.i523
  store i64 %11087, i64* %RSI.i525, align 8
  store %struct.Memory* %loadMem_40c966, %struct.Memory** %MEMORY
  %loadMem_40c969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11091 = getelementptr inbounds %struct.GPR, %struct.GPR* %11090, i32 0, i32 33
  %11092 = getelementptr inbounds %struct.Reg, %struct.Reg* %11091, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %11092 to i64*
  %11093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11094 = getelementptr inbounds %struct.GPR, %struct.GPR* %11093, i32 0, i32 7
  %11095 = getelementptr inbounds %struct.Reg, %struct.Reg* %11094, i32 0, i32 0
  %RDX.i521 = bitcast %union.anon* %11095 to i64*
  %11096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11097 = getelementptr inbounds %struct.GPR, %struct.GPR* %11096, i32 0, i32 9
  %11098 = getelementptr inbounds %struct.Reg, %struct.Reg* %11097, i32 0, i32 0
  %RSI.i522 = bitcast %union.anon* %11098 to i64*
  %11099 = load i64, i64* %RSI.i522
  %11100 = load i64, i64* %RDX.i521
  %11101 = load i64, i64* %PC.i520
  %11102 = add i64 %11101, 3
  store i64 %11102, i64* %PC.i520
  %11103 = add i64 %11100, %11099
  store i64 %11103, i64* %RSI.i522, align 8
  %11104 = icmp ult i64 %11103, %11099
  %11105 = icmp ult i64 %11103, %11100
  %11106 = or i1 %11104, %11105
  %11107 = zext i1 %11106 to i8
  %11108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11107, i8* %11108, align 1
  %11109 = trunc i64 %11103 to i32
  %11110 = and i32 %11109, 255
  %11111 = call i32 @llvm.ctpop.i32(i32 %11110)
  %11112 = trunc i32 %11111 to i8
  %11113 = and i8 %11112, 1
  %11114 = xor i8 %11113, 1
  %11115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11114, i8* %11115, align 1
  %11116 = xor i64 %11100, %11099
  %11117 = xor i64 %11116, %11103
  %11118 = lshr i64 %11117, 4
  %11119 = trunc i64 %11118 to i8
  %11120 = and i8 %11119, 1
  %11121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11120, i8* %11121, align 1
  %11122 = icmp eq i64 %11103, 0
  %11123 = zext i1 %11122 to i8
  %11124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11123, i8* %11124, align 1
  %11125 = lshr i64 %11103, 63
  %11126 = trunc i64 %11125 to i8
  %11127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11126, i8* %11127, align 1
  %11128 = lshr i64 %11099, 63
  %11129 = lshr i64 %11100, 63
  %11130 = xor i64 %11125, %11128
  %11131 = xor i64 %11125, %11129
  %11132 = add i64 %11130, %11131
  %11133 = icmp eq i64 %11132, 2
  %11134 = zext i1 %11133 to i8
  %11135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11134, i8* %11135, align 1
  store %struct.Memory* %loadMem_40c969, %struct.Memory** %MEMORY
  %loadMem_40c96c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11137 = getelementptr inbounds %struct.GPR, %struct.GPR* %11136, i32 0, i32 33
  %11138 = getelementptr inbounds %struct.Reg, %struct.Reg* %11137, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %11138 to i64*
  %11139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11140 = getelementptr inbounds %struct.GPR, %struct.GPR* %11139, i32 0, i32 9
  %11141 = getelementptr inbounds %struct.Reg, %struct.Reg* %11140, i32 0, i32 0
  %RSI.i519 = bitcast %union.anon* %11141 to i64*
  %11142 = load i64, i64* %RSI.i519
  %11143 = load i64, i64* %PC.i518
  %11144 = add i64 %11143, 4
  store i64 %11144, i64* %PC.i518
  %11145 = add i64 96, %11142
  store i64 %11145, i64* %RSI.i519, align 8
  %11146 = icmp ult i64 %11145, %11142
  %11147 = icmp ult i64 %11145, 96
  %11148 = or i1 %11146, %11147
  %11149 = zext i1 %11148 to i8
  %11150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11149, i8* %11150, align 1
  %11151 = trunc i64 %11145 to i32
  %11152 = and i32 %11151, 255
  %11153 = call i32 @llvm.ctpop.i32(i32 %11152)
  %11154 = trunc i32 %11153 to i8
  %11155 = and i8 %11154, 1
  %11156 = xor i8 %11155, 1
  %11157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11156, i8* %11157, align 1
  %11158 = xor i64 96, %11142
  %11159 = xor i64 %11158, %11145
  %11160 = lshr i64 %11159, 4
  %11161 = trunc i64 %11160 to i8
  %11162 = and i8 %11161, 1
  %11163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11162, i8* %11163, align 1
  %11164 = icmp eq i64 %11145, 0
  %11165 = zext i1 %11164 to i8
  %11166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11165, i8* %11166, align 1
  %11167 = lshr i64 %11145, 63
  %11168 = trunc i64 %11167 to i8
  %11169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11168, i8* %11169, align 1
  %11170 = lshr i64 %11142, 63
  %11171 = xor i64 %11167, %11170
  %11172 = add i64 %11171, %11167
  %11173 = icmp eq i64 %11172, 2
  %11174 = zext i1 %11173 to i8
  %11175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11174, i8* %11175, align 1
  store %struct.Memory* %loadMem_40c96c, %struct.Memory** %MEMORY
  %loadMem_40c970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11177 = getelementptr inbounds %struct.GPR, %struct.GPR* %11176, i32 0, i32 33
  %11178 = getelementptr inbounds %struct.Reg, %struct.Reg* %11177, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %11178 to i64*
  %11179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11180 = getelementptr inbounds %struct.GPR, %struct.GPR* %11179, i32 0, i32 7
  %11181 = getelementptr inbounds %struct.Reg, %struct.Reg* %11180, i32 0, i32 0
  %RDX.i517 = bitcast %union.anon* %11181 to i64*
  %11182 = load i64, i64* %PC.i516
  %11183 = add i64 %11182, 8
  store i64 %11183, i64* %PC.i516
  %11184 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %11184, i64* %RDX.i517, align 8
  store %struct.Memory* %loadMem_40c970, %struct.Memory** %MEMORY
  %loadMem_40c978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11186 = getelementptr inbounds %struct.GPR, %struct.GPR* %11185, i32 0, i32 33
  %11187 = getelementptr inbounds %struct.Reg, %struct.Reg* %11186, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %11187 to i64*
  %11188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11189 = getelementptr inbounds %struct.GPR, %struct.GPR* %11188, i32 0, i32 7
  %11190 = getelementptr inbounds %struct.Reg, %struct.Reg* %11189, i32 0, i32 0
  %RDX.i514 = bitcast %union.anon* %11190 to i64*
  %11191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11192 = getelementptr inbounds %struct.GPR, %struct.GPR* %11191, i32 0, i32 9
  %11193 = getelementptr inbounds %struct.Reg, %struct.Reg* %11192, i32 0, i32 0
  %RSI.i515 = bitcast %union.anon* %11193 to i64*
  %11194 = load i64, i64* %RDX.i514
  %11195 = load i64, i64* %RSI.i515
  %11196 = load i64, i64* %PC.i513
  %11197 = add i64 %11196, 3
  store i64 %11197, i64* %PC.i513
  %11198 = inttoptr i64 %11194 to i64*
  store i64 %11195, i64* %11198
  store %struct.Memory* %loadMem_40c978, %struct.Memory** %MEMORY
  %loadMem_40c97b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11200 = getelementptr inbounds %struct.GPR, %struct.GPR* %11199, i32 0, i32 33
  %11201 = getelementptr inbounds %struct.Reg, %struct.Reg* %11200, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %11201 to i64*
  %11202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11203 = getelementptr inbounds %struct.GPR, %struct.GPR* %11202, i32 0, i32 5
  %11204 = getelementptr inbounds %struct.Reg, %struct.Reg* %11203, i32 0, i32 0
  %RCX.i511 = bitcast %union.anon* %11204 to i64*
  %11205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11206 = getelementptr inbounds %struct.GPR, %struct.GPR* %11205, i32 0, i32 15
  %11207 = getelementptr inbounds %struct.Reg, %struct.Reg* %11206, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %11207 to i64*
  %11208 = load i64, i64* %RBP.i512
  %11209 = sub i64 %11208, 4
  %11210 = load i64, i64* %PC.i510
  %11211 = add i64 %11210, 3
  store i64 %11211, i64* %PC.i510
  %11212 = inttoptr i64 %11209 to i32*
  %11213 = load i32, i32* %11212
  %11214 = zext i32 %11213 to i64
  store i64 %11214, i64* %RCX.i511, align 8
  store %struct.Memory* %loadMem_40c97b, %struct.Memory** %MEMORY
  %loadMem_40c97e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11216 = getelementptr inbounds %struct.GPR, %struct.GPR* %11215, i32 0, i32 33
  %11217 = getelementptr inbounds %struct.Reg, %struct.Reg* %11216, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %11217 to i64*
  %11218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11219 = getelementptr inbounds %struct.GPR, %struct.GPR* %11218, i32 0, i32 5
  %11220 = getelementptr inbounds %struct.Reg, %struct.Reg* %11219, i32 0, i32 0
  %RCX.i509 = bitcast %union.anon* %11220 to i64*
  %11221 = load i64, i64* %RCX.i509
  %11222 = load i64, i64* %PC.i508
  %11223 = add i64 %11222, 3
  store i64 %11223, i64* %PC.i508
  %11224 = trunc i64 %11221 to i32
  %11225 = sub i32 %11224, 20
  %11226 = zext i32 %11225 to i64
  store i64 %11226, i64* %RCX.i509, align 8
  %11227 = icmp ult i32 %11224, 20
  %11228 = zext i1 %11227 to i8
  %11229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11228, i8* %11229, align 1
  %11230 = and i32 %11225, 255
  %11231 = call i32 @llvm.ctpop.i32(i32 %11230)
  %11232 = trunc i32 %11231 to i8
  %11233 = and i8 %11232, 1
  %11234 = xor i8 %11233, 1
  %11235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11234, i8* %11235, align 1
  %11236 = xor i64 20, %11221
  %11237 = trunc i64 %11236 to i32
  %11238 = xor i32 %11237, %11225
  %11239 = lshr i32 %11238, 4
  %11240 = trunc i32 %11239 to i8
  %11241 = and i8 %11240, 1
  %11242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11241, i8* %11242, align 1
  %11243 = icmp eq i32 %11225, 0
  %11244 = zext i1 %11243 to i8
  %11245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11244, i8* %11245, align 1
  %11246 = lshr i32 %11225, 31
  %11247 = trunc i32 %11246 to i8
  %11248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11247, i8* %11248, align 1
  %11249 = lshr i32 %11224, 31
  %11250 = xor i32 %11246, %11249
  %11251 = add i32 %11250, %11249
  %11252 = icmp eq i32 %11251, 2
  %11253 = zext i1 %11252 to i8
  %11254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11253, i8* %11254, align 1
  store %struct.Memory* %loadMem_40c97e, %struct.Memory** %MEMORY
  %loadMem_40c981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11256 = getelementptr inbounds %struct.GPR, %struct.GPR* %11255, i32 0, i32 33
  %11257 = getelementptr inbounds %struct.Reg, %struct.Reg* %11256, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %11257 to i64*
  %11258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11259 = getelementptr inbounds %struct.GPR, %struct.GPR* %11258, i32 0, i32 5
  %11260 = getelementptr inbounds %struct.Reg, %struct.Reg* %11259, i32 0, i32 0
  %ECX.i506 = bitcast %union.anon* %11260 to i32*
  %11261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11262 = getelementptr inbounds %struct.GPR, %struct.GPR* %11261, i32 0, i32 7
  %11263 = getelementptr inbounds %struct.Reg, %struct.Reg* %11262, i32 0, i32 0
  %RDX.i507 = bitcast %union.anon* %11263 to i64*
  %11264 = load i32, i32* %ECX.i506
  %11265 = zext i32 %11264 to i64
  %11266 = load i64, i64* %PC.i505
  %11267 = add i64 %11266, 3
  store i64 %11267, i64* %PC.i505
  %11268 = shl i64 %11265, 32
  %11269 = ashr exact i64 %11268, 32
  store i64 %11269, i64* %RDX.i507, align 8
  store %struct.Memory* %loadMem_40c981, %struct.Memory** %MEMORY
  %loadMem_40c984 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11271 = getelementptr inbounds %struct.GPR, %struct.GPR* %11270, i32 0, i32 33
  %11272 = getelementptr inbounds %struct.Reg, %struct.Reg* %11271, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %11272 to i64*
  %11273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11274 = getelementptr inbounds %struct.GPR, %struct.GPR* %11273, i32 0, i32 7
  %11275 = getelementptr inbounds %struct.Reg, %struct.Reg* %11274, i32 0, i32 0
  %RDX.i504 = bitcast %union.anon* %11275 to i64*
  %11276 = load i64, i64* %RDX.i504
  %11277 = mul i64 %11276, 4
  %11278 = add i64 %11277, 11187184
  %11279 = load i64, i64* %PC.i503
  %11280 = add i64 %11279, 8
  store i64 %11280, i64* %PC.i503
  %11281 = inttoptr i64 %11278 to i32*
  %11282 = load i32, i32* %11281
  %11283 = sext i32 %11282 to i64
  store i64 %11283, i64* %RDX.i504, align 8
  store %struct.Memory* %loadMem_40c984, %struct.Memory** %MEMORY
  %loadMem_40c98c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11285 = getelementptr inbounds %struct.GPR, %struct.GPR* %11284, i32 0, i32 33
  %11286 = getelementptr inbounds %struct.Reg, %struct.Reg* %11285, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %11286 to i64*
  %11287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11288 = getelementptr inbounds %struct.GPR, %struct.GPR* %11287, i32 0, i32 7
  %11289 = getelementptr inbounds %struct.Reg, %struct.Reg* %11288, i32 0, i32 0
  %RDX.i502 = bitcast %union.anon* %11289 to i64*
  %11290 = load i64, i64* %RDX.i502
  %11291 = load i64, i64* %PC.i501
  %11292 = add i64 %11291, 7
  store i64 %11292, i64* %PC.i501
  %11293 = sext i64 %11290 to i128
  %11294 = and i128 %11293, -18446744073709551616
  %11295 = zext i64 %11290 to i128
  %11296 = or i128 %11294, %11295
  %11297 = mul i128 744, %11296
  %11298 = trunc i128 %11297 to i64
  store i64 %11298, i64* %RDX.i502, align 8
  %11299 = sext i64 %11298 to i128
  %11300 = icmp ne i128 %11299, %11297
  %11301 = zext i1 %11300 to i8
  %11302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11301, i8* %11302, align 1
  %11303 = trunc i128 %11297 to i32
  %11304 = and i32 %11303, 255
  %11305 = call i32 @llvm.ctpop.i32(i32 %11304)
  %11306 = trunc i32 %11305 to i8
  %11307 = and i8 %11306, 1
  %11308 = xor i8 %11307, 1
  %11309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11308, i8* %11309, align 1
  %11310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11310, align 1
  %11311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11311, align 1
  %11312 = lshr i64 %11298, 63
  %11313 = trunc i64 %11312 to i8
  %11314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11313, i8* %11314, align 1
  %11315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11301, i8* %11315, align 1
  store %struct.Memory* %loadMem_40c98c, %struct.Memory** %MEMORY
  %loadMem_40c993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11317 = getelementptr inbounds %struct.GPR, %struct.GPR* %11316, i32 0, i32 33
  %11318 = getelementptr inbounds %struct.Reg, %struct.Reg* %11317, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %11318 to i64*
  %11319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11320 = getelementptr inbounds %struct.GPR, %struct.GPR* %11319, i32 0, i32 1
  %11321 = getelementptr inbounds %struct.Reg, %struct.Reg* %11320, i32 0, i32 0
  %RAX.i499 = bitcast %union.anon* %11321 to i64*
  %11322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11323 = getelementptr inbounds %struct.GPR, %struct.GPR* %11322, i32 0, i32 9
  %11324 = getelementptr inbounds %struct.Reg, %struct.Reg* %11323, i32 0, i32 0
  %RSI.i500 = bitcast %union.anon* %11324 to i64*
  %11325 = load i64, i64* %RAX.i499
  %11326 = load i64, i64* %PC.i498
  %11327 = add i64 %11326, 3
  store i64 %11327, i64* %PC.i498
  store i64 %11325, i64* %RSI.i500, align 8
  store %struct.Memory* %loadMem_40c993, %struct.Memory** %MEMORY
  %loadMem_40c996 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11329 = getelementptr inbounds %struct.GPR, %struct.GPR* %11328, i32 0, i32 33
  %11330 = getelementptr inbounds %struct.Reg, %struct.Reg* %11329, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %11330 to i64*
  %11331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11332 = getelementptr inbounds %struct.GPR, %struct.GPR* %11331, i32 0, i32 7
  %11333 = getelementptr inbounds %struct.Reg, %struct.Reg* %11332, i32 0, i32 0
  %RDX.i496 = bitcast %union.anon* %11333 to i64*
  %11334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11335 = getelementptr inbounds %struct.GPR, %struct.GPR* %11334, i32 0, i32 9
  %11336 = getelementptr inbounds %struct.Reg, %struct.Reg* %11335, i32 0, i32 0
  %RSI.i497 = bitcast %union.anon* %11336 to i64*
  %11337 = load i64, i64* %RSI.i497
  %11338 = load i64, i64* %RDX.i496
  %11339 = load i64, i64* %PC.i495
  %11340 = add i64 %11339, 3
  store i64 %11340, i64* %PC.i495
  %11341 = add i64 %11338, %11337
  store i64 %11341, i64* %RSI.i497, align 8
  %11342 = icmp ult i64 %11341, %11337
  %11343 = icmp ult i64 %11341, %11338
  %11344 = or i1 %11342, %11343
  %11345 = zext i1 %11344 to i8
  %11346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11345, i8* %11346, align 1
  %11347 = trunc i64 %11341 to i32
  %11348 = and i32 %11347, 255
  %11349 = call i32 @llvm.ctpop.i32(i32 %11348)
  %11350 = trunc i32 %11349 to i8
  %11351 = and i8 %11350, 1
  %11352 = xor i8 %11351, 1
  %11353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11352, i8* %11353, align 1
  %11354 = xor i64 %11338, %11337
  %11355 = xor i64 %11354, %11341
  %11356 = lshr i64 %11355, 4
  %11357 = trunc i64 %11356 to i8
  %11358 = and i8 %11357, 1
  %11359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11358, i8* %11359, align 1
  %11360 = icmp eq i64 %11341, 0
  %11361 = zext i1 %11360 to i8
  %11362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11361, i8* %11362, align 1
  %11363 = lshr i64 %11341, 63
  %11364 = trunc i64 %11363 to i8
  %11365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11364, i8* %11365, align 1
  %11366 = lshr i64 %11337, 63
  %11367 = lshr i64 %11338, 63
  %11368 = xor i64 %11363, %11366
  %11369 = xor i64 %11363, %11367
  %11370 = add i64 %11368, %11369
  %11371 = icmp eq i64 %11370, 2
  %11372 = zext i1 %11371 to i8
  %11373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11372, i8* %11373, align 1
  store %struct.Memory* %loadMem_40c996, %struct.Memory** %MEMORY
  %loadMem_40c999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11375 = getelementptr inbounds %struct.GPR, %struct.GPR* %11374, i32 0, i32 33
  %11376 = getelementptr inbounds %struct.Reg, %struct.Reg* %11375, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %11376 to i64*
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11378 = getelementptr inbounds %struct.GPR, %struct.GPR* %11377, i32 0, i32 5
  %11379 = getelementptr inbounds %struct.Reg, %struct.Reg* %11378, i32 0, i32 0
  %RCX.i493 = bitcast %union.anon* %11379 to i64*
  %11380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11381 = getelementptr inbounds %struct.GPR, %struct.GPR* %11380, i32 0, i32 9
  %11382 = getelementptr inbounds %struct.Reg, %struct.Reg* %11381, i32 0, i32 0
  %RSI.i494 = bitcast %union.anon* %11382 to i64*
  %11383 = load i64, i64* %RSI.i494
  %11384 = add i64 %11383, 96
  %11385 = load i64, i64* %PC.i492
  %11386 = add i64 %11385, 3
  store i64 %11386, i64* %PC.i492
  %11387 = inttoptr i64 %11384 to i32*
  %11388 = load i32, i32* %11387
  %11389 = zext i32 %11388 to i64
  store i64 %11389, i64* %RCX.i493, align 8
  store %struct.Memory* %loadMem_40c999, %struct.Memory** %MEMORY
  %loadMem_40c99c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11391 = getelementptr inbounds %struct.GPR, %struct.GPR* %11390, i32 0, i32 33
  %11392 = getelementptr inbounds %struct.Reg, %struct.Reg* %11391, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %11392 to i64*
  %11393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11394 = getelementptr inbounds %struct.GPR, %struct.GPR* %11393, i32 0, i32 7
  %11395 = getelementptr inbounds %struct.Reg, %struct.Reg* %11394, i32 0, i32 0
  %RDX.i491 = bitcast %union.anon* %11395 to i64*
  %11396 = load i64, i64* %PC.i490
  %11397 = add i64 %11396, 8
  store i64 %11397, i64* %PC.i490
  %11398 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %11398, i64* %RDX.i491, align 8
  store %struct.Memory* %loadMem_40c99c, %struct.Memory** %MEMORY
  %loadMem_40c9a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11400 = getelementptr inbounds %struct.GPR, %struct.GPR* %11399, i32 0, i32 33
  %11401 = getelementptr inbounds %struct.Reg, %struct.Reg* %11400, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %11401 to i64*
  %11402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11403 = getelementptr inbounds %struct.GPR, %struct.GPR* %11402, i32 0, i32 7
  %11404 = getelementptr inbounds %struct.Reg, %struct.Reg* %11403, i32 0, i32 0
  %RDX.i488 = bitcast %union.anon* %11404 to i64*
  %11405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11406 = getelementptr inbounds %struct.GPR, %struct.GPR* %11405, i32 0, i32 9
  %11407 = getelementptr inbounds %struct.Reg, %struct.Reg* %11406, i32 0, i32 0
  %RSI.i489 = bitcast %union.anon* %11407 to i64*
  %11408 = load i64, i64* %RDX.i488
  %11409 = load i64, i64* %PC.i487
  %11410 = add i64 %11409, 3
  store i64 %11410, i64* %PC.i487
  store i64 %11408, i64* %RSI.i489, align 8
  store %struct.Memory* %loadMem_40c9a4, %struct.Memory** %MEMORY
  %loadMem_40c9a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11412 = getelementptr inbounds %struct.GPR, %struct.GPR* %11411, i32 0, i32 33
  %11413 = getelementptr inbounds %struct.Reg, %struct.Reg* %11412, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %11413 to i64*
  %11414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11415 = getelementptr inbounds %struct.GPR, %struct.GPR* %11414, i32 0, i32 9
  %11416 = getelementptr inbounds %struct.Reg, %struct.Reg* %11415, i32 0, i32 0
  %RSI.i486 = bitcast %union.anon* %11416 to i64*
  %11417 = load i64, i64* %RSI.i486
  %11418 = load i64, i64* %PC.i485
  %11419 = add i64 %11418, 4
  store i64 %11419, i64* %PC.i485
  %11420 = add i64 16, %11417
  store i64 %11420, i64* %RSI.i486, align 8
  %11421 = icmp ult i64 %11420, %11417
  %11422 = icmp ult i64 %11420, 16
  %11423 = or i1 %11421, %11422
  %11424 = zext i1 %11423 to i8
  %11425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11424, i8* %11425, align 1
  %11426 = trunc i64 %11420 to i32
  %11427 = and i32 %11426, 255
  %11428 = call i32 @llvm.ctpop.i32(i32 %11427)
  %11429 = trunc i32 %11428 to i8
  %11430 = and i8 %11429, 1
  %11431 = xor i8 %11430, 1
  %11432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11431, i8* %11432, align 1
  %11433 = xor i64 16, %11417
  %11434 = xor i64 %11433, %11420
  %11435 = lshr i64 %11434, 4
  %11436 = trunc i64 %11435 to i8
  %11437 = and i8 %11436, 1
  %11438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11437, i8* %11438, align 1
  %11439 = icmp eq i64 %11420, 0
  %11440 = zext i1 %11439 to i8
  %11441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11440, i8* %11441, align 1
  %11442 = lshr i64 %11420, 63
  %11443 = trunc i64 %11442 to i8
  %11444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11443, i8* %11444, align 1
  %11445 = lshr i64 %11417, 63
  %11446 = xor i64 %11442, %11445
  %11447 = add i64 %11446, %11442
  %11448 = icmp eq i64 %11447, 2
  %11449 = zext i1 %11448 to i8
  %11450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11449, i8* %11450, align 1
  store %struct.Memory* %loadMem_40c9a7, %struct.Memory** %MEMORY
  %loadMem_40c9ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %11451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11452 = getelementptr inbounds %struct.GPR, %struct.GPR* %11451, i32 0, i32 33
  %11453 = getelementptr inbounds %struct.Reg, %struct.Reg* %11452, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %11453 to i64*
  %11454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11455 = getelementptr inbounds %struct.GPR, %struct.GPR* %11454, i32 0, i32 9
  %11456 = getelementptr inbounds %struct.Reg, %struct.Reg* %11455, i32 0, i32 0
  %RSI.i484 = bitcast %union.anon* %11456 to i64*
  %11457 = load i64, i64* %RSI.i484
  %11458 = load i64, i64* %PC.i483
  %11459 = add i64 %11458, 8
  store i64 %11459, i64* %PC.i483
  store i64 %11457, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40c9ab, %struct.Memory** %MEMORY
  %loadMem_40c9b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11461 = getelementptr inbounds %struct.GPR, %struct.GPR* %11460, i32 0, i32 33
  %11462 = getelementptr inbounds %struct.Reg, %struct.Reg* %11461, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %11462 to i64*
  %11463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11464 = getelementptr inbounds %struct.GPR, %struct.GPR* %11463, i32 0, i32 5
  %11465 = getelementptr inbounds %struct.Reg, %struct.Reg* %11464, i32 0, i32 0
  %ECX.i481 = bitcast %union.anon* %11465 to i32*
  %11466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11467 = getelementptr inbounds %struct.GPR, %struct.GPR* %11466, i32 0, i32 7
  %11468 = getelementptr inbounds %struct.Reg, %struct.Reg* %11467, i32 0, i32 0
  %RDX.i482 = bitcast %union.anon* %11468 to i64*
  %11469 = load i64, i64* %RDX.i482
  %11470 = add i64 %11469, 8
  %11471 = load i32, i32* %ECX.i481
  %11472 = zext i32 %11471 to i64
  %11473 = load i64, i64* %PC.i480
  %11474 = add i64 %11473, 3
  store i64 %11474, i64* %PC.i480
  %11475 = inttoptr i64 %11470 to i32*
  store i32 %11471, i32* %11475
  store %struct.Memory* %loadMem_40c9b3, %struct.Memory** %MEMORY
  %loadMem_40c9b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11477 = getelementptr inbounds %struct.GPR, %struct.GPR* %11476, i32 0, i32 33
  %11478 = getelementptr inbounds %struct.Reg, %struct.Reg* %11477, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %11478 to i64*
  %11479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11480 = getelementptr inbounds %struct.GPR, %struct.GPR* %11479, i32 0, i32 7
  %11481 = getelementptr inbounds %struct.Reg, %struct.Reg* %11480, i32 0, i32 0
  %RDX.i478 = bitcast %union.anon* %11481 to i64*
  %11482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11483 = getelementptr inbounds %struct.GPR, %struct.GPR* %11482, i32 0, i32 15
  %11484 = getelementptr inbounds %struct.Reg, %struct.Reg* %11483, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %11484 to i64*
  %11485 = load i64, i64* %RBP.i479
  %11486 = sub i64 %11485, 4
  %11487 = load i64, i64* %PC.i477
  %11488 = add i64 %11487, 4
  store i64 %11488, i64* %PC.i477
  %11489 = inttoptr i64 %11486 to i32*
  %11490 = load i32, i32* %11489
  %11491 = sext i32 %11490 to i64
  store i64 %11491, i64* %RDX.i478, align 8
  store %struct.Memory* %loadMem_40c9b6, %struct.Memory** %MEMORY
  %loadMem_40c9ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %11492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11493 = getelementptr inbounds %struct.GPR, %struct.GPR* %11492, i32 0, i32 33
  %11494 = getelementptr inbounds %struct.Reg, %struct.Reg* %11493, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %11494 to i64*
  %11495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11496 = getelementptr inbounds %struct.GPR, %struct.GPR* %11495, i32 0, i32 5
  %11497 = getelementptr inbounds %struct.Reg, %struct.Reg* %11496, i32 0, i32 0
  %RCX.i475 = bitcast %union.anon* %11497 to i64*
  %11498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11499 = getelementptr inbounds %struct.GPR, %struct.GPR* %11498, i32 0, i32 7
  %11500 = getelementptr inbounds %struct.Reg, %struct.Reg* %11499, i32 0, i32 0
  %RDX.i476 = bitcast %union.anon* %11500 to i64*
  %11501 = load i64, i64* %RDX.i476
  %11502 = mul i64 %11501, 4
  %11503 = add i64 %11502, 11187184
  %11504 = load i64, i64* %PC.i474
  %11505 = add i64 %11504, 7
  store i64 %11505, i64* %PC.i474
  %11506 = inttoptr i64 %11503 to i32*
  %11507 = load i32, i32* %11506
  %11508 = zext i32 %11507 to i64
  store i64 %11508, i64* %RCX.i475, align 8
  store %struct.Memory* %loadMem_40c9ba, %struct.Memory** %MEMORY
  %loadMem_40c9c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11510 = getelementptr inbounds %struct.GPR, %struct.GPR* %11509, i32 0, i32 33
  %11511 = getelementptr inbounds %struct.Reg, %struct.Reg* %11510, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %11511 to i64*
  %11512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11513 = getelementptr inbounds %struct.GPR, %struct.GPR* %11512, i32 0, i32 17
  %11514 = getelementptr inbounds %struct.Reg, %struct.Reg* %11513, i32 0, i32 0
  %R8D.i472 = bitcast %union.anon* %11514 to i32*
  %11515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11516 = getelementptr inbounds %struct.GPR, %struct.GPR* %11515, i32 0, i32 15
  %11517 = getelementptr inbounds %struct.Reg, %struct.Reg* %11516, i32 0, i32 0
  %RBP.i473 = bitcast %union.anon* %11517 to i64*
  %11518 = bitcast i32* %R8D.i472 to i64*
  %11519 = load i64, i64* %RBP.i473
  %11520 = sub i64 %11519, 4
  %11521 = load i64, i64* %PC.i471
  %11522 = add i64 %11521, 4
  store i64 %11522, i64* %PC.i471
  %11523 = inttoptr i64 %11520 to i32*
  %11524 = load i32, i32* %11523
  %11525 = zext i32 %11524 to i64
  store i64 %11525, i64* %11518, align 8
  store %struct.Memory* %loadMem_40c9c1, %struct.Memory** %MEMORY
  %loadMem_40c9c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11527 = getelementptr inbounds %struct.GPR, %struct.GPR* %11526, i32 0, i32 33
  %11528 = getelementptr inbounds %struct.Reg, %struct.Reg* %11527, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %11528 to i64*
  %11529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11530 = getelementptr inbounds %struct.GPR, %struct.GPR* %11529, i32 0, i32 17
  %11531 = getelementptr inbounds %struct.Reg, %struct.Reg* %11530, i32 0, i32 0
  %R8D.i470 = bitcast %union.anon* %11531 to i32*
  %11532 = bitcast i32* %R8D.i470 to i64*
  %11533 = load i32, i32* %R8D.i470
  %11534 = zext i32 %11533 to i64
  %11535 = load i64, i64* %PC.i469
  %11536 = add i64 %11535, 4
  store i64 %11536, i64* %PC.i469
  %11537 = sub i32 %11533, 20
  %11538 = zext i32 %11537 to i64
  store i64 %11538, i64* %11532, align 8
  %11539 = icmp ult i32 %11533, 20
  %11540 = zext i1 %11539 to i8
  %11541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11540, i8* %11541, align 1
  %11542 = and i32 %11537, 255
  %11543 = call i32 @llvm.ctpop.i32(i32 %11542)
  %11544 = trunc i32 %11543 to i8
  %11545 = and i8 %11544, 1
  %11546 = xor i8 %11545, 1
  %11547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11546, i8* %11547, align 1
  %11548 = xor i64 20, %11534
  %11549 = trunc i64 %11548 to i32
  %11550 = xor i32 %11549, %11537
  %11551 = lshr i32 %11550, 4
  %11552 = trunc i32 %11551 to i8
  %11553 = and i8 %11552, 1
  %11554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11553, i8* %11554, align 1
  %11555 = icmp eq i32 %11537, 0
  %11556 = zext i1 %11555 to i8
  %11557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11556, i8* %11557, align 1
  %11558 = lshr i32 %11537, 31
  %11559 = trunc i32 %11558 to i8
  %11560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11559, i8* %11560, align 1
  %11561 = lshr i32 %11533, 31
  %11562 = xor i32 %11558, %11561
  %11563 = add i32 %11562, %11561
  %11564 = icmp eq i32 %11563, 2
  %11565 = zext i1 %11564 to i8
  %11566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11565, i8* %11566, align 1
  store %struct.Memory* %loadMem_40c9c5, %struct.Memory** %MEMORY
  %loadMem_40c9c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11568 = getelementptr inbounds %struct.GPR, %struct.GPR* %11567, i32 0, i32 33
  %11569 = getelementptr inbounds %struct.Reg, %struct.Reg* %11568, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %11569 to i64*
  %11570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11571 = getelementptr inbounds %struct.GPR, %struct.GPR* %11570, i32 0, i32 17
  %11572 = getelementptr inbounds %struct.Reg, %struct.Reg* %11571, i32 0, i32 0
  %R8D.i467 = bitcast %union.anon* %11572 to i32*
  %11573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11574 = getelementptr inbounds %struct.GPR, %struct.GPR* %11573, i32 0, i32 7
  %11575 = getelementptr inbounds %struct.Reg, %struct.Reg* %11574, i32 0, i32 0
  %RDX.i468 = bitcast %union.anon* %11575 to i64*
  %11576 = load i32, i32* %R8D.i467
  %11577 = zext i32 %11576 to i64
  %11578 = load i64, i64* %PC.i466
  %11579 = add i64 %11578, 3
  store i64 %11579, i64* %PC.i466
  %11580 = shl i64 %11577, 32
  %11581 = ashr exact i64 %11580, 32
  store i64 %11581, i64* %RDX.i468, align 8
  store %struct.Memory* %loadMem_40c9c9, %struct.Memory** %MEMORY
  %loadMem_40c9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11583 = getelementptr inbounds %struct.GPR, %struct.GPR* %11582, i32 0, i32 33
  %11584 = getelementptr inbounds %struct.Reg, %struct.Reg* %11583, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %11584 to i64*
  %11585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11586 = getelementptr inbounds %struct.GPR, %struct.GPR* %11585, i32 0, i32 7
  %11587 = getelementptr inbounds %struct.Reg, %struct.Reg* %11586, i32 0, i32 0
  %RDX.i465 = bitcast %union.anon* %11587 to i64*
  %11588 = load i64, i64* %RDX.i465
  %11589 = mul i64 %11588, 4
  %11590 = add i64 %11589, 11187184
  %11591 = load i64, i64* %PC.i464
  %11592 = add i64 %11591, 8
  store i64 %11592, i64* %PC.i464
  %11593 = inttoptr i64 %11590 to i32*
  %11594 = load i32, i32* %11593
  %11595 = sext i32 %11594 to i64
  store i64 %11595, i64* %RDX.i465, align 8
  store %struct.Memory* %loadMem_40c9cc, %struct.Memory** %MEMORY
  %loadMem_40c9d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11597 = getelementptr inbounds %struct.GPR, %struct.GPR* %11596, i32 0, i32 33
  %11598 = getelementptr inbounds %struct.Reg, %struct.Reg* %11597, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %11598 to i64*
  %11599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11600 = getelementptr inbounds %struct.GPR, %struct.GPR* %11599, i32 0, i32 7
  %11601 = getelementptr inbounds %struct.Reg, %struct.Reg* %11600, i32 0, i32 0
  %RDX.i463 = bitcast %union.anon* %11601 to i64*
  %11602 = load i64, i64* %RDX.i463
  %11603 = load i64, i64* %PC.i462
  %11604 = add i64 %11603, 7
  store i64 %11604, i64* %PC.i462
  %11605 = sext i64 %11602 to i128
  %11606 = and i128 %11605, -18446744073709551616
  %11607 = zext i64 %11602 to i128
  %11608 = or i128 %11606, %11607
  %11609 = mul i128 744, %11608
  %11610 = trunc i128 %11609 to i64
  store i64 %11610, i64* %RDX.i463, align 8
  %11611 = sext i64 %11610 to i128
  %11612 = icmp ne i128 %11611, %11609
  %11613 = zext i1 %11612 to i8
  %11614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11613, i8* %11614, align 1
  %11615 = trunc i128 %11609 to i32
  %11616 = and i32 %11615, 255
  %11617 = call i32 @llvm.ctpop.i32(i32 %11616)
  %11618 = trunc i32 %11617 to i8
  %11619 = and i8 %11618, 1
  %11620 = xor i8 %11619, 1
  %11621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11620, i8* %11621, align 1
  %11622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11622, align 1
  %11623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11623, align 1
  %11624 = lshr i64 %11610, 63
  %11625 = trunc i64 %11624 to i8
  %11626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11625, i8* %11626, align 1
  %11627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11613, i8* %11627, align 1
  store %struct.Memory* %loadMem_40c9d4, %struct.Memory** %MEMORY
  %loadMem_40c9db = load %struct.Memory*, %struct.Memory** %MEMORY
  %11628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11629 = getelementptr inbounds %struct.GPR, %struct.GPR* %11628, i32 0, i32 33
  %11630 = getelementptr inbounds %struct.Reg, %struct.Reg* %11629, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %11630 to i64*
  %11631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11632 = getelementptr inbounds %struct.GPR, %struct.GPR* %11631, i32 0, i32 1
  %11633 = getelementptr inbounds %struct.Reg, %struct.Reg* %11632, i32 0, i32 0
  %RAX.i460 = bitcast %union.anon* %11633 to i64*
  %11634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11635 = getelementptr inbounds %struct.GPR, %struct.GPR* %11634, i32 0, i32 9
  %11636 = getelementptr inbounds %struct.Reg, %struct.Reg* %11635, i32 0, i32 0
  %RSI.i461 = bitcast %union.anon* %11636 to i64*
  %11637 = load i64, i64* %RAX.i460
  %11638 = load i64, i64* %PC.i459
  %11639 = add i64 %11638, 3
  store i64 %11639, i64* %PC.i459
  store i64 %11637, i64* %RSI.i461, align 8
  store %struct.Memory* %loadMem_40c9db, %struct.Memory** %MEMORY
  %loadMem_40c9de = load %struct.Memory*, %struct.Memory** %MEMORY
  %11640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11641 = getelementptr inbounds %struct.GPR, %struct.GPR* %11640, i32 0, i32 33
  %11642 = getelementptr inbounds %struct.Reg, %struct.Reg* %11641, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %11642 to i64*
  %11643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11644 = getelementptr inbounds %struct.GPR, %struct.GPR* %11643, i32 0, i32 7
  %11645 = getelementptr inbounds %struct.Reg, %struct.Reg* %11644, i32 0, i32 0
  %RDX.i457 = bitcast %union.anon* %11645 to i64*
  %11646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11647 = getelementptr inbounds %struct.GPR, %struct.GPR* %11646, i32 0, i32 9
  %11648 = getelementptr inbounds %struct.Reg, %struct.Reg* %11647, i32 0, i32 0
  %RSI.i458 = bitcast %union.anon* %11648 to i64*
  %11649 = load i64, i64* %RSI.i458
  %11650 = load i64, i64* %RDX.i457
  %11651 = load i64, i64* %PC.i456
  %11652 = add i64 %11651, 3
  store i64 %11652, i64* %PC.i456
  %11653 = add i64 %11650, %11649
  store i64 %11653, i64* %RSI.i458, align 8
  %11654 = icmp ult i64 %11653, %11649
  %11655 = icmp ult i64 %11653, %11650
  %11656 = or i1 %11654, %11655
  %11657 = zext i1 %11656 to i8
  %11658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11657, i8* %11658, align 1
  %11659 = trunc i64 %11653 to i32
  %11660 = and i32 %11659, 255
  %11661 = call i32 @llvm.ctpop.i32(i32 %11660)
  %11662 = trunc i32 %11661 to i8
  %11663 = and i8 %11662, 1
  %11664 = xor i8 %11663, 1
  %11665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11664, i8* %11665, align 1
  %11666 = xor i64 %11650, %11649
  %11667 = xor i64 %11666, %11653
  %11668 = lshr i64 %11667, 4
  %11669 = trunc i64 %11668 to i8
  %11670 = and i8 %11669, 1
  %11671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11670, i8* %11671, align 1
  %11672 = icmp eq i64 %11653, 0
  %11673 = zext i1 %11672 to i8
  %11674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11673, i8* %11674, align 1
  %11675 = lshr i64 %11653, 63
  %11676 = trunc i64 %11675 to i8
  %11677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11676, i8* %11677, align 1
  %11678 = lshr i64 %11649, 63
  %11679 = lshr i64 %11650, 63
  %11680 = xor i64 %11675, %11678
  %11681 = xor i64 %11675, %11679
  %11682 = add i64 %11680, %11681
  %11683 = icmp eq i64 %11682, 2
  %11684 = zext i1 %11683 to i8
  %11685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11684, i8* %11685, align 1
  store %struct.Memory* %loadMem_40c9de, %struct.Memory** %MEMORY
  %loadMem_40c9e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11687 = getelementptr inbounds %struct.GPR, %struct.GPR* %11686, i32 0, i32 33
  %11688 = getelementptr inbounds %struct.Reg, %struct.Reg* %11687, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %11688 to i64*
  %11689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11690 = getelementptr inbounds %struct.GPR, %struct.GPR* %11689, i32 0, i32 17
  %11691 = getelementptr inbounds %struct.Reg, %struct.Reg* %11690, i32 0, i32 0
  %R8D.i454 = bitcast %union.anon* %11691 to i32*
  %11692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11693 = getelementptr inbounds %struct.GPR, %struct.GPR* %11692, i32 0, i32 15
  %11694 = getelementptr inbounds %struct.Reg, %struct.Reg* %11693, i32 0, i32 0
  %RBP.i455 = bitcast %union.anon* %11694 to i64*
  %11695 = bitcast i32* %R8D.i454 to i64*
  %11696 = load i64, i64* %RBP.i455
  %11697 = sub i64 %11696, 4
  %11698 = load i64, i64* %PC.i453
  %11699 = add i64 %11698, 4
  store i64 %11699, i64* %PC.i453
  %11700 = inttoptr i64 %11697 to i32*
  %11701 = load i32, i32* %11700
  %11702 = zext i32 %11701 to i64
  store i64 %11702, i64* %11695, align 8
  store %struct.Memory* %loadMem_40c9e1, %struct.Memory** %MEMORY
  %loadMem_40c9e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11704 = getelementptr inbounds %struct.GPR, %struct.GPR* %11703, i32 0, i32 33
  %11705 = getelementptr inbounds %struct.Reg, %struct.Reg* %11704, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %11705 to i64*
  %11706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11707 = getelementptr inbounds %struct.GPR, %struct.GPR* %11706, i32 0, i32 17
  %11708 = getelementptr inbounds %struct.Reg, %struct.Reg* %11707, i32 0, i32 0
  %R8D.i452 = bitcast %union.anon* %11708 to i32*
  %11709 = bitcast i32* %R8D.i452 to i64*
  %11710 = load i32, i32* %R8D.i452
  %11711 = zext i32 %11710 to i64
  %11712 = load i64, i64* %PC.i451
  %11713 = add i64 %11712, 4
  store i64 %11713, i64* %PC.i451
  %11714 = sub i32 %11710, 20
  %11715 = zext i32 %11714 to i64
  store i64 %11715, i64* %11709, align 8
  %11716 = icmp ult i32 %11710, 20
  %11717 = zext i1 %11716 to i8
  %11718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11717, i8* %11718, align 1
  %11719 = and i32 %11714, 255
  %11720 = call i32 @llvm.ctpop.i32(i32 %11719)
  %11721 = trunc i32 %11720 to i8
  %11722 = and i8 %11721, 1
  %11723 = xor i8 %11722, 1
  %11724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11723, i8* %11724, align 1
  %11725 = xor i64 20, %11711
  %11726 = trunc i64 %11725 to i32
  %11727 = xor i32 %11726, %11714
  %11728 = lshr i32 %11727, 4
  %11729 = trunc i32 %11728 to i8
  %11730 = and i8 %11729, 1
  %11731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11730, i8* %11731, align 1
  %11732 = icmp eq i32 %11714, 0
  %11733 = zext i1 %11732 to i8
  %11734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11733, i8* %11734, align 1
  %11735 = lshr i32 %11714, 31
  %11736 = trunc i32 %11735 to i8
  %11737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11736, i8* %11737, align 1
  %11738 = lshr i32 %11710, 31
  %11739 = xor i32 %11735, %11738
  %11740 = add i32 %11739, %11738
  %11741 = icmp eq i32 %11740, 2
  %11742 = zext i1 %11741 to i8
  %11743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11742, i8* %11743, align 1
  store %struct.Memory* %loadMem_40c9e5, %struct.Memory** %MEMORY
  %loadMem_40c9e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11745 = getelementptr inbounds %struct.GPR, %struct.GPR* %11744, i32 0, i32 33
  %11746 = getelementptr inbounds %struct.Reg, %struct.Reg* %11745, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %11746 to i64*
  %11747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11748 = getelementptr inbounds %struct.GPR, %struct.GPR* %11747, i32 0, i32 17
  %11749 = getelementptr inbounds %struct.Reg, %struct.Reg* %11748, i32 0, i32 0
  %R8D.i449 = bitcast %union.anon* %11749 to i32*
  %11750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11751 = getelementptr inbounds %struct.GPR, %struct.GPR* %11750, i32 0, i32 7
  %11752 = getelementptr inbounds %struct.Reg, %struct.Reg* %11751, i32 0, i32 0
  %RDX.i450 = bitcast %union.anon* %11752 to i64*
  %11753 = load i32, i32* %R8D.i449
  %11754 = zext i32 %11753 to i64
  %11755 = load i64, i64* %PC.i448
  %11756 = add i64 %11755, 3
  store i64 %11756, i64* %PC.i448
  %11757 = shl i64 %11754, 32
  %11758 = ashr exact i64 %11757, 32
  store i64 %11758, i64* %RDX.i450, align 8
  store %struct.Memory* %loadMem_40c9e9, %struct.Memory** %MEMORY
  %loadMem_40c9ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %11759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11760 = getelementptr inbounds %struct.GPR, %struct.GPR* %11759, i32 0, i32 33
  %11761 = getelementptr inbounds %struct.Reg, %struct.Reg* %11760, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %11761 to i64*
  %11762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11763 = getelementptr inbounds %struct.GPR, %struct.GPR* %11762, i32 0, i32 7
  %11764 = getelementptr inbounds %struct.Reg, %struct.Reg* %11763, i32 0, i32 0
  %RDX.i447 = bitcast %union.anon* %11764 to i64*
  %11765 = load i64, i64* %RDX.i447
  %11766 = mul i64 %11765, 4
  %11767 = add i64 %11766, 11187184
  %11768 = load i64, i64* %PC.i446
  %11769 = add i64 %11768, 8
  store i64 %11769, i64* %PC.i446
  %11770 = inttoptr i64 %11767 to i32*
  %11771 = load i32, i32* %11770
  %11772 = sext i32 %11771 to i64
  store i64 %11772, i64* %RDX.i447, align 8
  store %struct.Memory* %loadMem_40c9ec, %struct.Memory** %MEMORY
  %loadMem_40c9f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11774 = getelementptr inbounds %struct.GPR, %struct.GPR* %11773, i32 0, i32 33
  %11775 = getelementptr inbounds %struct.Reg, %struct.Reg* %11774, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %11775 to i64*
  %11776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11777 = getelementptr inbounds %struct.GPR, %struct.GPR* %11776, i32 0, i32 7
  %11778 = getelementptr inbounds %struct.Reg, %struct.Reg* %11777, i32 0, i32 0
  %RDX.i445 = bitcast %union.anon* %11778 to i64*
  %11779 = load i64, i64* %RDX.i445
  %11780 = load i64, i64* %PC.i444
  %11781 = add i64 %11780, 7
  store i64 %11781, i64* %PC.i444
  %11782 = sext i64 %11779 to i128
  %11783 = and i128 %11782, -18446744073709551616
  %11784 = zext i64 %11779 to i128
  %11785 = or i128 %11783, %11784
  %11786 = mul i128 744, %11785
  %11787 = trunc i128 %11786 to i64
  store i64 %11787, i64* %RDX.i445, align 8
  %11788 = sext i64 %11787 to i128
  %11789 = icmp ne i128 %11788, %11786
  %11790 = zext i1 %11789 to i8
  %11791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11790, i8* %11791, align 1
  %11792 = trunc i128 %11786 to i32
  %11793 = and i32 %11792, 255
  %11794 = call i32 @llvm.ctpop.i32(i32 %11793)
  %11795 = trunc i32 %11794 to i8
  %11796 = and i8 %11795, 1
  %11797 = xor i8 %11796, 1
  %11798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11797, i8* %11798, align 1
  %11799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11799, align 1
  %11800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11800, align 1
  %11801 = lshr i64 %11787, 63
  %11802 = trunc i64 %11801 to i8
  %11803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11802, i8* %11803, align 1
  %11804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11790, i8* %11804, align 1
  store %struct.Memory* %loadMem_40c9f4, %struct.Memory** %MEMORY
  %loadMem_40c9fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11806 = getelementptr inbounds %struct.GPR, %struct.GPR* %11805, i32 0, i32 33
  %11807 = getelementptr inbounds %struct.Reg, %struct.Reg* %11806, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %11807 to i64*
  %11808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11809 = getelementptr inbounds %struct.GPR, %struct.GPR* %11808, i32 0, i32 1
  %11810 = getelementptr inbounds %struct.Reg, %struct.Reg* %11809, i32 0, i32 0
  %RAX.i442 = bitcast %union.anon* %11810 to i64*
  %11811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11812 = getelementptr inbounds %struct.GPR, %struct.GPR* %11811, i32 0, i32 11
  %11813 = getelementptr inbounds %struct.Reg, %struct.Reg* %11812, i32 0, i32 0
  %RDI.i443 = bitcast %union.anon* %11813 to i64*
  %11814 = load i64, i64* %RAX.i442
  %11815 = load i64, i64* %PC.i441
  %11816 = add i64 %11815, 3
  store i64 %11816, i64* %PC.i441
  store i64 %11814, i64* %RDI.i443, align 8
  store %struct.Memory* %loadMem_40c9fb, %struct.Memory** %MEMORY
  %loadMem_40c9fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %11817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11818 = getelementptr inbounds %struct.GPR, %struct.GPR* %11817, i32 0, i32 33
  %11819 = getelementptr inbounds %struct.Reg, %struct.Reg* %11818, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %11819 to i64*
  %11820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11821 = getelementptr inbounds %struct.GPR, %struct.GPR* %11820, i32 0, i32 7
  %11822 = getelementptr inbounds %struct.Reg, %struct.Reg* %11821, i32 0, i32 0
  %RDX.i439 = bitcast %union.anon* %11822 to i64*
  %11823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11824 = getelementptr inbounds %struct.GPR, %struct.GPR* %11823, i32 0, i32 11
  %11825 = getelementptr inbounds %struct.Reg, %struct.Reg* %11824, i32 0, i32 0
  %RDI.i440 = bitcast %union.anon* %11825 to i64*
  %11826 = load i64, i64* %RDI.i440
  %11827 = load i64, i64* %RDX.i439
  %11828 = load i64, i64* %PC.i438
  %11829 = add i64 %11828, 3
  store i64 %11829, i64* %PC.i438
  %11830 = add i64 %11827, %11826
  store i64 %11830, i64* %RDI.i440, align 8
  %11831 = icmp ult i64 %11830, %11826
  %11832 = icmp ult i64 %11830, %11827
  %11833 = or i1 %11831, %11832
  %11834 = zext i1 %11833 to i8
  %11835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11834, i8* %11835, align 1
  %11836 = trunc i64 %11830 to i32
  %11837 = and i32 %11836, 255
  %11838 = call i32 @llvm.ctpop.i32(i32 %11837)
  %11839 = trunc i32 %11838 to i8
  %11840 = and i8 %11839, 1
  %11841 = xor i8 %11840, 1
  %11842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11841, i8* %11842, align 1
  %11843 = xor i64 %11827, %11826
  %11844 = xor i64 %11843, %11830
  %11845 = lshr i64 %11844, 4
  %11846 = trunc i64 %11845 to i8
  %11847 = and i8 %11846, 1
  %11848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11847, i8* %11848, align 1
  %11849 = icmp eq i64 %11830, 0
  %11850 = zext i1 %11849 to i8
  %11851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11850, i8* %11851, align 1
  %11852 = lshr i64 %11830, 63
  %11853 = trunc i64 %11852 to i8
  %11854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11853, i8* %11854, align 1
  %11855 = lshr i64 %11826, 63
  %11856 = lshr i64 %11827, 63
  %11857 = xor i64 %11852, %11855
  %11858 = xor i64 %11852, %11856
  %11859 = add i64 %11857, %11858
  %11860 = icmp eq i64 %11859, 2
  %11861 = zext i1 %11860 to i8
  %11862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11861, i8* %11862, align 1
  store %struct.Memory* %loadMem_40c9fe, %struct.Memory** %MEMORY
  %loadMem_40ca01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11864 = getelementptr inbounds %struct.GPR, %struct.GPR* %11863, i32 0, i32 33
  %11865 = getelementptr inbounds %struct.Reg, %struct.Reg* %11864, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %11865 to i64*
  %11866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11867 = getelementptr inbounds %struct.GPR, %struct.GPR* %11866, i32 0, i32 17
  %11868 = getelementptr inbounds %struct.Reg, %struct.Reg* %11867, i32 0, i32 0
  %R8D.i436 = bitcast %union.anon* %11868 to i32*
  %11869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11870 = getelementptr inbounds %struct.GPR, %struct.GPR* %11869, i32 0, i32 11
  %11871 = getelementptr inbounds %struct.Reg, %struct.Reg* %11870, i32 0, i32 0
  %RDI.i437 = bitcast %union.anon* %11871 to i64*
  %11872 = bitcast i32* %R8D.i436 to i64*
  %11873 = load i64, i64* %RDI.i437
  %11874 = add i64 %11873, 96
  %11875 = load i64, i64* %PC.i435
  %11876 = add i64 %11875, 4
  store i64 %11876, i64* %PC.i435
  %11877 = inttoptr i64 %11874 to i32*
  %11878 = load i32, i32* %11877
  %11879 = zext i32 %11878 to i64
  store i64 %11879, i64* %11872, align 8
  store %struct.Memory* %loadMem_40ca01, %struct.Memory** %MEMORY
  %loadMem_40ca05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11881 = getelementptr inbounds %struct.GPR, %struct.GPR* %11880, i32 0, i32 33
  %11882 = getelementptr inbounds %struct.Reg, %struct.Reg* %11881, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %11882 to i64*
  %11883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11884 = getelementptr inbounds %struct.GPR, %struct.GPR* %11883, i32 0, i32 17
  %11885 = getelementptr inbounds %struct.Reg, %struct.Reg* %11884, i32 0, i32 0
  %R8D.i433 = bitcast %union.anon* %11885 to i32*
  %11886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11887 = getelementptr inbounds %struct.GPR, %struct.GPR* %11886, i32 0, i32 19
  %11888 = getelementptr inbounds %struct.Reg, %struct.Reg* %11887, i32 0, i32 0
  %R9D.i434 = bitcast %union.anon* %11888 to i32*
  %11889 = bitcast i32* %R9D.i434 to i64*
  %11890 = load i32, i32* %R8D.i433
  %11891 = zext i32 %11890 to i64
  %11892 = load i64, i64* %PC.i432
  %11893 = add i64 %11892, 3
  store i64 %11893, i64* %PC.i432
  %11894 = and i64 %11891, 4294967295
  store i64 %11894, i64* %11889, align 8
  store %struct.Memory* %loadMem_40ca05, %struct.Memory** %MEMORY
  %loadMem_40ca08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11896 = getelementptr inbounds %struct.GPR, %struct.GPR* %11895, i32 0, i32 33
  %11897 = getelementptr inbounds %struct.Reg, %struct.Reg* %11896, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %11897 to i64*
  %11898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11899 = getelementptr inbounds %struct.GPR, %struct.GPR* %11898, i32 0, i32 19
  %11900 = getelementptr inbounds %struct.Reg, %struct.Reg* %11899, i32 0, i32 0
  %R9D.i431 = bitcast %union.anon* %11900 to i32*
  %11901 = bitcast i32* %R9D.i431 to i64*
  %11902 = load i32, i32* %R9D.i431
  %11903 = zext i32 %11902 to i64
  %11904 = load i64, i64* %PC.i430
  %11905 = add i64 %11904, 4
  store i64 %11905, i64* %PC.i430
  %11906 = add i32 1, %11902
  %11907 = zext i32 %11906 to i64
  store i64 %11907, i64* %11901, align 8
  %11908 = icmp ult i32 %11906, %11902
  %11909 = icmp ult i32 %11906, 1
  %11910 = or i1 %11908, %11909
  %11911 = zext i1 %11910 to i8
  %11912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11911, i8* %11912, align 1
  %11913 = and i32 %11906, 255
  %11914 = call i32 @llvm.ctpop.i32(i32 %11913)
  %11915 = trunc i32 %11914 to i8
  %11916 = and i8 %11915, 1
  %11917 = xor i8 %11916, 1
  %11918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11917, i8* %11918, align 1
  %11919 = xor i64 1, %11903
  %11920 = trunc i64 %11919 to i32
  %11921 = xor i32 %11920, %11906
  %11922 = lshr i32 %11921, 4
  %11923 = trunc i32 %11922 to i8
  %11924 = and i8 %11923, 1
  %11925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11924, i8* %11925, align 1
  %11926 = icmp eq i32 %11906, 0
  %11927 = zext i1 %11926 to i8
  %11928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11927, i8* %11928, align 1
  %11929 = lshr i32 %11906, 31
  %11930 = trunc i32 %11929 to i8
  %11931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11930, i8* %11931, align 1
  %11932 = lshr i32 %11902, 31
  %11933 = xor i32 %11929, %11932
  %11934 = add i32 %11933, %11929
  %11935 = icmp eq i32 %11934, 2
  %11936 = zext i1 %11935 to i8
  %11937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11936, i8* %11937, align 1
  store %struct.Memory* %loadMem_40ca08, %struct.Memory** %MEMORY
  %loadMem_40ca0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11939 = getelementptr inbounds %struct.GPR, %struct.GPR* %11938, i32 0, i32 33
  %11940 = getelementptr inbounds %struct.Reg, %struct.Reg* %11939, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %11940 to i64*
  %11941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11942 = getelementptr inbounds %struct.GPR, %struct.GPR* %11941, i32 0, i32 19
  %11943 = getelementptr inbounds %struct.Reg, %struct.Reg* %11942, i32 0, i32 0
  %R9D.i428 = bitcast %union.anon* %11943 to i32*
  %11944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11945 = getelementptr inbounds %struct.GPR, %struct.GPR* %11944, i32 0, i32 11
  %11946 = getelementptr inbounds %struct.Reg, %struct.Reg* %11945, i32 0, i32 0
  %RDI.i429 = bitcast %union.anon* %11946 to i64*
  %11947 = load i64, i64* %RDI.i429
  %11948 = add i64 %11947, 96
  %11949 = load i32, i32* %R9D.i428
  %11950 = zext i32 %11949 to i64
  %11951 = load i64, i64* %PC.i427
  %11952 = add i64 %11951, 4
  store i64 %11952, i64* %PC.i427
  %11953 = inttoptr i64 %11948 to i32*
  store i32 %11949, i32* %11953
  store %struct.Memory* %loadMem_40ca0c, %struct.Memory** %MEMORY
  %loadMem_40ca10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11955 = getelementptr inbounds %struct.GPR, %struct.GPR* %11954, i32 0, i32 33
  %11956 = getelementptr inbounds %struct.Reg, %struct.Reg* %11955, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %11956 to i64*
  %11957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11958 = getelementptr inbounds %struct.GPR, %struct.GPR* %11957, i32 0, i32 17
  %11959 = getelementptr inbounds %struct.Reg, %struct.Reg* %11958, i32 0, i32 0
  %R8D.i425 = bitcast %union.anon* %11959 to i32*
  %11960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11961 = getelementptr inbounds %struct.GPR, %struct.GPR* %11960, i32 0, i32 7
  %11962 = getelementptr inbounds %struct.Reg, %struct.Reg* %11961, i32 0, i32 0
  %RDX.i426 = bitcast %union.anon* %11962 to i64*
  %11963 = load i32, i32* %R8D.i425
  %11964 = zext i32 %11963 to i64
  %11965 = load i64, i64* %PC.i424
  %11966 = add i64 %11965, 3
  store i64 %11966, i64* %PC.i424
  %11967 = shl i64 %11964, 32
  %11968 = ashr exact i64 %11967, 32
  store i64 %11968, i64* %RDX.i426, align 8
  store %struct.Memory* %loadMem_40ca10, %struct.Memory** %MEMORY
  %loadMem_40ca13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11970 = getelementptr inbounds %struct.GPR, %struct.GPR* %11969, i32 0, i32 33
  %11971 = getelementptr inbounds %struct.Reg, %struct.Reg* %11970, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %11971 to i64*
  %11972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11973 = getelementptr inbounds %struct.GPR, %struct.GPR* %11972, i32 0, i32 5
  %11974 = getelementptr inbounds %struct.Reg, %struct.Reg* %11973, i32 0, i32 0
  %ECX.i421 = bitcast %union.anon* %11974 to i32*
  %11975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11976 = getelementptr inbounds %struct.GPR, %struct.GPR* %11975, i32 0, i32 7
  %11977 = getelementptr inbounds %struct.Reg, %struct.Reg* %11976, i32 0, i32 0
  %RDX.i422 = bitcast %union.anon* %11977 to i64*
  %11978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11979 = getelementptr inbounds %struct.GPR, %struct.GPR* %11978, i32 0, i32 9
  %11980 = getelementptr inbounds %struct.Reg, %struct.Reg* %11979, i32 0, i32 0
  %RSI.i423 = bitcast %union.anon* %11980 to i64*
  %11981 = load i64, i64* %RSI.i423
  %11982 = load i64, i64* %RDX.i422
  %11983 = mul i64 %11982, 4
  %11984 = add i64 %11981, 100
  %11985 = add i64 %11984, %11983
  %11986 = load i32, i32* %ECX.i421
  %11987 = zext i32 %11986 to i64
  %11988 = load i64, i64* %PC.i420
  %11989 = add i64 %11988, 4
  store i64 %11989, i64* %PC.i420
  %11990 = inttoptr i64 %11985 to i32*
  store i32 %11986, i32* %11990
  store %struct.Memory* %loadMem_40ca13, %struct.Memory** %MEMORY
  %loadMem_40ca17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11992 = getelementptr inbounds %struct.GPR, %struct.GPR* %11991, i32 0, i32 33
  %11993 = getelementptr inbounds %struct.Reg, %struct.Reg* %11992, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %11993 to i64*
  %11994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11995 = getelementptr inbounds %struct.GPR, %struct.GPR* %11994, i32 0, i32 5
  %11996 = getelementptr inbounds %struct.Reg, %struct.Reg* %11995, i32 0, i32 0
  %RCX.i419 = bitcast %union.anon* %11996 to i64*
  %11997 = load i64, i64* %PC.i418
  %11998 = add i64 %11997, 7
  store i64 %11998, i64* %PC.i418
  %11999 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %12000 = zext i32 %11999 to i64
  store i64 %12000, i64* %RCX.i419, align 8
  store %struct.Memory* %loadMem_40ca17, %struct.Memory** %MEMORY
  %loadMem_40ca1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12002 = getelementptr inbounds %struct.GPR, %struct.GPR* %12001, i32 0, i32 33
  %12003 = getelementptr inbounds %struct.Reg, %struct.Reg* %12002, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %12003 to i64*
  %12004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12005 = getelementptr inbounds %struct.GPR, %struct.GPR* %12004, i32 0, i32 17
  %12006 = getelementptr inbounds %struct.Reg, %struct.Reg* %12005, i32 0, i32 0
  %R8D.i416 = bitcast %union.anon* %12006 to i32*
  %12007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12008 = getelementptr inbounds %struct.GPR, %struct.GPR* %12007, i32 0, i32 15
  %12009 = getelementptr inbounds %struct.Reg, %struct.Reg* %12008, i32 0, i32 0
  %RBP.i417 = bitcast %union.anon* %12009 to i64*
  %12010 = bitcast i32* %R8D.i416 to i64*
  %12011 = load i64, i64* %RBP.i417
  %12012 = sub i64 %12011, 4
  %12013 = load i64, i64* %PC.i415
  %12014 = add i64 %12013, 4
  store i64 %12014, i64* %PC.i415
  %12015 = inttoptr i64 %12012 to i32*
  %12016 = load i32, i32* %12015
  %12017 = zext i32 %12016 to i64
  store i64 %12017, i64* %12010, align 8
  store %struct.Memory* %loadMem_40ca1e, %struct.Memory** %MEMORY
  %loadMem_40ca22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12019 = getelementptr inbounds %struct.GPR, %struct.GPR* %12018, i32 0, i32 33
  %12020 = getelementptr inbounds %struct.Reg, %struct.Reg* %12019, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %12020 to i64*
  %12021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12022 = getelementptr inbounds %struct.GPR, %struct.GPR* %12021, i32 0, i32 17
  %12023 = getelementptr inbounds %struct.Reg, %struct.Reg* %12022, i32 0, i32 0
  %R8D.i414 = bitcast %union.anon* %12023 to i32*
  %12024 = bitcast i32* %R8D.i414 to i64*
  %12025 = load i32, i32* %R8D.i414
  %12026 = zext i32 %12025 to i64
  %12027 = load i64, i64* %PC.i413
  %12028 = add i64 %12027, 4
  store i64 %12028, i64* %PC.i413
  %12029 = sub i32 %12025, 20
  %12030 = zext i32 %12029 to i64
  store i64 %12030, i64* %12024, align 8
  %12031 = icmp ult i32 %12025, 20
  %12032 = zext i1 %12031 to i8
  %12033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12032, i8* %12033, align 1
  %12034 = and i32 %12029, 255
  %12035 = call i32 @llvm.ctpop.i32(i32 %12034)
  %12036 = trunc i32 %12035 to i8
  %12037 = and i8 %12036, 1
  %12038 = xor i8 %12037, 1
  %12039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12038, i8* %12039, align 1
  %12040 = xor i64 20, %12026
  %12041 = trunc i64 %12040 to i32
  %12042 = xor i32 %12041, %12029
  %12043 = lshr i32 %12042, 4
  %12044 = trunc i32 %12043 to i8
  %12045 = and i8 %12044, 1
  %12046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12045, i8* %12046, align 1
  %12047 = icmp eq i32 %12029, 0
  %12048 = zext i1 %12047 to i8
  %12049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12048, i8* %12049, align 1
  %12050 = lshr i32 %12029, 31
  %12051 = trunc i32 %12050 to i8
  %12052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12051, i8* %12052, align 1
  %12053 = lshr i32 %12025, 31
  %12054 = xor i32 %12050, %12053
  %12055 = add i32 %12054, %12053
  %12056 = icmp eq i32 %12055, 2
  %12057 = zext i1 %12056 to i8
  %12058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12057, i8* %12058, align 1
  store %struct.Memory* %loadMem_40ca22, %struct.Memory** %MEMORY
  %loadMem_40ca26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12060 = getelementptr inbounds %struct.GPR, %struct.GPR* %12059, i32 0, i32 33
  %12061 = getelementptr inbounds %struct.Reg, %struct.Reg* %12060, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %12061 to i64*
  %12062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12063 = getelementptr inbounds %struct.GPR, %struct.GPR* %12062, i32 0, i32 17
  %12064 = getelementptr inbounds %struct.Reg, %struct.Reg* %12063, i32 0, i32 0
  %R8D.i411 = bitcast %union.anon* %12064 to i32*
  %12065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12066 = getelementptr inbounds %struct.GPR, %struct.GPR* %12065, i32 0, i32 7
  %12067 = getelementptr inbounds %struct.Reg, %struct.Reg* %12066, i32 0, i32 0
  %RDX.i412 = bitcast %union.anon* %12067 to i64*
  %12068 = load i32, i32* %R8D.i411
  %12069 = zext i32 %12068 to i64
  %12070 = load i64, i64* %PC.i410
  %12071 = add i64 %12070, 3
  store i64 %12071, i64* %PC.i410
  %12072 = shl i64 %12069, 32
  %12073 = ashr exact i64 %12072, 32
  store i64 %12073, i64* %RDX.i412, align 8
  store %struct.Memory* %loadMem_40ca26, %struct.Memory** %MEMORY
  %loadMem_40ca29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12075 = getelementptr inbounds %struct.GPR, %struct.GPR* %12074, i32 0, i32 33
  %12076 = getelementptr inbounds %struct.Reg, %struct.Reg* %12075, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %12076 to i64*
  %12077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12078 = getelementptr inbounds %struct.GPR, %struct.GPR* %12077, i32 0, i32 7
  %12079 = getelementptr inbounds %struct.Reg, %struct.Reg* %12078, i32 0, i32 0
  %RDX.i409 = bitcast %union.anon* %12079 to i64*
  %12080 = load i64, i64* %RDX.i409
  %12081 = mul i64 %12080, 4
  %12082 = add i64 %12081, 11187184
  %12083 = load i64, i64* %PC.i408
  %12084 = add i64 %12083, 8
  store i64 %12084, i64* %PC.i408
  %12085 = inttoptr i64 %12082 to i32*
  %12086 = load i32, i32* %12085
  %12087 = sext i32 %12086 to i64
  store i64 %12087, i64* %RDX.i409, align 8
  store %struct.Memory* %loadMem_40ca29, %struct.Memory** %MEMORY
  %loadMem_40ca31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12089 = getelementptr inbounds %struct.GPR, %struct.GPR* %12088, i32 0, i32 33
  %12090 = getelementptr inbounds %struct.Reg, %struct.Reg* %12089, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %12090 to i64*
  %12091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12092 = getelementptr inbounds %struct.GPR, %struct.GPR* %12091, i32 0, i32 7
  %12093 = getelementptr inbounds %struct.Reg, %struct.Reg* %12092, i32 0, i32 0
  %RDX.i407 = bitcast %union.anon* %12093 to i64*
  %12094 = load i64, i64* %RDX.i407
  %12095 = load i64, i64* %PC.i406
  %12096 = add i64 %12095, 7
  store i64 %12096, i64* %PC.i406
  %12097 = sext i64 %12094 to i128
  %12098 = and i128 %12097, -18446744073709551616
  %12099 = zext i64 %12094 to i128
  %12100 = or i128 %12098, %12099
  %12101 = mul i128 744, %12100
  %12102 = trunc i128 %12101 to i64
  store i64 %12102, i64* %RDX.i407, align 8
  %12103 = sext i64 %12102 to i128
  %12104 = icmp ne i128 %12103, %12101
  %12105 = zext i1 %12104 to i8
  %12106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12105, i8* %12106, align 1
  %12107 = trunc i128 %12101 to i32
  %12108 = and i32 %12107, 255
  %12109 = call i32 @llvm.ctpop.i32(i32 %12108)
  %12110 = trunc i32 %12109 to i8
  %12111 = and i8 %12110, 1
  %12112 = xor i8 %12111, 1
  %12113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12112, i8* %12113, align 1
  %12114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12114, align 1
  %12115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12115, align 1
  %12116 = lshr i64 %12102, 63
  %12117 = trunc i64 %12116 to i8
  %12118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12117, i8* %12118, align 1
  %12119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12105, i8* %12119, align 1
  store %struct.Memory* %loadMem_40ca31, %struct.Memory** %MEMORY
  %loadMem_40ca38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12121 = getelementptr inbounds %struct.GPR, %struct.GPR* %12120, i32 0, i32 33
  %12122 = getelementptr inbounds %struct.Reg, %struct.Reg* %12121, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %12122 to i64*
  %12123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12124 = getelementptr inbounds %struct.GPR, %struct.GPR* %12123, i32 0, i32 1
  %12125 = getelementptr inbounds %struct.Reg, %struct.Reg* %12124, i32 0, i32 0
  %RAX.i404 = bitcast %union.anon* %12125 to i64*
  %12126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12127 = getelementptr inbounds %struct.GPR, %struct.GPR* %12126, i32 0, i32 7
  %12128 = getelementptr inbounds %struct.Reg, %struct.Reg* %12127, i32 0, i32 0
  %RDX.i405 = bitcast %union.anon* %12128 to i64*
  %12129 = load i64, i64* %RAX.i404
  %12130 = load i64, i64* %RDX.i405
  %12131 = load i64, i64* %PC.i403
  %12132 = add i64 %12131, 3
  store i64 %12132, i64* %PC.i403
  %12133 = add i64 %12130, %12129
  store i64 %12133, i64* %RAX.i404, align 8
  %12134 = icmp ult i64 %12133, %12129
  %12135 = icmp ult i64 %12133, %12130
  %12136 = or i1 %12134, %12135
  %12137 = zext i1 %12136 to i8
  %12138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12137, i8* %12138, align 1
  %12139 = trunc i64 %12133 to i32
  %12140 = and i32 %12139, 255
  %12141 = call i32 @llvm.ctpop.i32(i32 %12140)
  %12142 = trunc i32 %12141 to i8
  %12143 = and i8 %12142, 1
  %12144 = xor i8 %12143, 1
  %12145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12144, i8* %12145, align 1
  %12146 = xor i64 %12130, %12129
  %12147 = xor i64 %12146, %12133
  %12148 = lshr i64 %12147, 4
  %12149 = trunc i64 %12148 to i8
  %12150 = and i8 %12149, 1
  %12151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12150, i8* %12151, align 1
  %12152 = icmp eq i64 %12133, 0
  %12153 = zext i1 %12152 to i8
  %12154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12153, i8* %12154, align 1
  %12155 = lshr i64 %12133, 63
  %12156 = trunc i64 %12155 to i8
  %12157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12156, i8* %12157, align 1
  %12158 = lshr i64 %12129, 63
  %12159 = lshr i64 %12130, 63
  %12160 = xor i64 %12155, %12158
  %12161 = xor i64 %12155, %12159
  %12162 = add i64 %12160, %12161
  %12163 = icmp eq i64 %12162, 2
  %12164 = zext i1 %12163 to i8
  %12165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12164, i8* %12165, align 1
  store %struct.Memory* %loadMem_40ca38, %struct.Memory** %MEMORY
  %loadMem_40ca3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12167 = getelementptr inbounds %struct.GPR, %struct.GPR* %12166, i32 0, i32 33
  %12168 = getelementptr inbounds %struct.Reg, %struct.Reg* %12167, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %12168 to i64*
  %12169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12170 = getelementptr inbounds %struct.GPR, %struct.GPR* %12169, i32 0, i32 5
  %12171 = getelementptr inbounds %struct.Reg, %struct.Reg* %12170, i32 0, i32 0
  %ECX.i401 = bitcast %union.anon* %12171 to i32*
  %12172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12173 = getelementptr inbounds %struct.GPR, %struct.GPR* %12172, i32 0, i32 1
  %12174 = getelementptr inbounds %struct.Reg, %struct.Reg* %12173, i32 0, i32 0
  %RAX.i402 = bitcast %union.anon* %12174 to i64*
  %12175 = load i64, i64* %RAX.i402
  %12176 = add i64 %12175, 740
  %12177 = load i32, i32* %ECX.i401
  %12178 = zext i32 %12177 to i64
  %12179 = load i64, i64* %PC.i400
  %12180 = add i64 %12179, 6
  store i64 %12180, i64* %PC.i400
  %12181 = inttoptr i64 %12176 to i32*
  store i32 %12177, i32* %12181
  store %struct.Memory* %loadMem_40ca3b, %struct.Memory** %MEMORY
  %loadMem_40ca41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12183 = getelementptr inbounds %struct.GPR, %struct.GPR* %12182, i32 0, i32 33
  %12184 = getelementptr inbounds %struct.Reg, %struct.Reg* %12183, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %12184 to i64*
  %12185 = load i64, i64* %PC.i399
  %12186 = add i64 %12185, 108
  %12187 = load i64, i64* %PC.i399
  %12188 = add i64 %12187, 5
  store i64 %12188, i64* %PC.i399
  %12189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12186, i64* %12189, align 8
  store %struct.Memory* %loadMem_40ca41, %struct.Memory** %MEMORY
  br label %block_.L_40caad

block_.L_40ca46:                                  ; preds = %block_40c8c4, %block_.L_40c8aa
  %loadMem_40ca46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12191 = getelementptr inbounds %struct.GPR, %struct.GPR* %12190, i32 0, i32 33
  %12192 = getelementptr inbounds %struct.Reg, %struct.Reg* %12191, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %12192 to i64*
  %12193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12194 = getelementptr inbounds %struct.GPR, %struct.GPR* %12193, i32 0, i32 1
  %12195 = getelementptr inbounds %struct.Reg, %struct.Reg* %12194, i32 0, i32 0
  %RAX.i397 = bitcast %union.anon* %12195 to i64*
  %12196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12197 = getelementptr inbounds %struct.GPR, %struct.GPR* %12196, i32 0, i32 15
  %12198 = getelementptr inbounds %struct.Reg, %struct.Reg* %12197, i32 0, i32 0
  %RBP.i398 = bitcast %union.anon* %12198 to i64*
  %12199 = load i64, i64* %RBP.i398
  %12200 = sub i64 %12199, 4
  %12201 = load i64, i64* %PC.i396
  %12202 = add i64 %12201, 3
  store i64 %12202, i64* %PC.i396
  %12203 = inttoptr i64 %12200 to i32*
  %12204 = load i32, i32* %12203
  %12205 = zext i32 %12204 to i64
  store i64 %12205, i64* %RAX.i397, align 8
  store %struct.Memory* %loadMem_40ca46, %struct.Memory** %MEMORY
  %loadMem_40ca49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12207 = getelementptr inbounds %struct.GPR, %struct.GPR* %12206, i32 0, i32 33
  %12208 = getelementptr inbounds %struct.Reg, %struct.Reg* %12207, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %12208 to i64*
  %12209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12210 = getelementptr inbounds %struct.GPR, %struct.GPR* %12209, i32 0, i32 1
  %12211 = getelementptr inbounds %struct.Reg, %struct.Reg* %12210, i32 0, i32 0
  %RAX.i395 = bitcast %union.anon* %12211 to i64*
  %12212 = load i64, i64* %RAX.i395
  %12213 = load i64, i64* %PC.i394
  %12214 = add i64 %12213, 3
  store i64 %12214, i64* %PC.i394
  %12215 = trunc i64 %12212 to i32
  %12216 = sub i32 %12215, 20
  %12217 = zext i32 %12216 to i64
  store i64 %12217, i64* %RAX.i395, align 8
  %12218 = icmp ult i32 %12215, 20
  %12219 = zext i1 %12218 to i8
  %12220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12219, i8* %12220, align 1
  %12221 = and i32 %12216, 255
  %12222 = call i32 @llvm.ctpop.i32(i32 %12221)
  %12223 = trunc i32 %12222 to i8
  %12224 = and i8 %12223, 1
  %12225 = xor i8 %12224, 1
  %12226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12225, i8* %12226, align 1
  %12227 = xor i64 20, %12212
  %12228 = trunc i64 %12227 to i32
  %12229 = xor i32 %12228, %12216
  %12230 = lshr i32 %12229, 4
  %12231 = trunc i32 %12230 to i8
  %12232 = and i8 %12231, 1
  %12233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12232, i8* %12233, align 1
  %12234 = icmp eq i32 %12216, 0
  %12235 = zext i1 %12234 to i8
  %12236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12235, i8* %12236, align 1
  %12237 = lshr i32 %12216, 31
  %12238 = trunc i32 %12237 to i8
  %12239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12238, i8* %12239, align 1
  %12240 = lshr i32 %12215, 31
  %12241 = xor i32 %12237, %12240
  %12242 = add i32 %12241, %12240
  %12243 = icmp eq i32 %12242, 2
  %12244 = zext i1 %12243 to i8
  %12245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12244, i8* %12245, align 1
  store %struct.Memory* %loadMem_40ca49, %struct.Memory** %MEMORY
  %loadMem_40ca4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12247 = getelementptr inbounds %struct.GPR, %struct.GPR* %12246, i32 0, i32 33
  %12248 = getelementptr inbounds %struct.Reg, %struct.Reg* %12247, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %12248 to i64*
  %12249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12250 = getelementptr inbounds %struct.GPR, %struct.GPR* %12249, i32 0, i32 1
  %12251 = getelementptr inbounds %struct.Reg, %struct.Reg* %12250, i32 0, i32 0
  %EAX.i392 = bitcast %union.anon* %12251 to i32*
  %12252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12253 = getelementptr inbounds %struct.GPR, %struct.GPR* %12252, i32 0, i32 5
  %12254 = getelementptr inbounds %struct.Reg, %struct.Reg* %12253, i32 0, i32 0
  %RCX.i393 = bitcast %union.anon* %12254 to i64*
  %12255 = load i32, i32* %EAX.i392
  %12256 = zext i32 %12255 to i64
  %12257 = load i64, i64* %PC.i391
  %12258 = add i64 %12257, 3
  store i64 %12258, i64* %PC.i391
  %12259 = shl i64 %12256, 32
  %12260 = ashr exact i64 %12259, 32
  store i64 %12260, i64* %RCX.i393, align 8
  store %struct.Memory* %loadMem_40ca4c, %struct.Memory** %MEMORY
  %loadMem_40ca4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12262 = getelementptr inbounds %struct.GPR, %struct.GPR* %12261, i32 0, i32 33
  %12263 = getelementptr inbounds %struct.Reg, %struct.Reg* %12262, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %12263 to i64*
  %12264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12265 = getelementptr inbounds %struct.GPR, %struct.GPR* %12264, i32 0, i32 1
  %12266 = getelementptr inbounds %struct.Reg, %struct.Reg* %12265, i32 0, i32 0
  %RAX.i389 = bitcast %union.anon* %12266 to i64*
  %12267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12268 = getelementptr inbounds %struct.GPR, %struct.GPR* %12267, i32 0, i32 5
  %12269 = getelementptr inbounds %struct.Reg, %struct.Reg* %12268, i32 0, i32 0
  %RCX.i390 = bitcast %union.anon* %12269 to i64*
  %12270 = load i64, i64* %RCX.i390
  %12271 = add i64 %12270, 12099168
  %12272 = load i64, i64* %PC.i388
  %12273 = add i64 %12272, 8
  store i64 %12273, i64* %PC.i388
  %12274 = inttoptr i64 %12271 to i8*
  %12275 = load i8, i8* %12274
  %12276 = zext i8 %12275 to i64
  store i64 %12276, i64* %RAX.i389, align 8
  store %struct.Memory* %loadMem_40ca4f, %struct.Memory** %MEMORY
  %loadMem_40ca57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12278 = getelementptr inbounds %struct.GPR, %struct.GPR* %12277, i32 0, i32 33
  %12279 = getelementptr inbounds %struct.Reg, %struct.Reg* %12278, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %12279 to i64*
  %12280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12281 = getelementptr inbounds %struct.GPR, %struct.GPR* %12280, i32 0, i32 1
  %12282 = getelementptr inbounds %struct.Reg, %struct.Reg* %12281, i32 0, i32 0
  %EAX.i386 = bitcast %union.anon* %12282 to i32*
  %12283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12284 = getelementptr inbounds %struct.GPR, %struct.GPR* %12283, i32 0, i32 15
  %12285 = getelementptr inbounds %struct.Reg, %struct.Reg* %12284, i32 0, i32 0
  %RBP.i387 = bitcast %union.anon* %12285 to i64*
  %12286 = load i32, i32* %EAX.i386
  %12287 = zext i32 %12286 to i64
  %12288 = load i64, i64* %RBP.i387
  %12289 = sub i64 %12288, 12
  %12290 = load i64, i64* %PC.i385
  %12291 = add i64 %12290, 3
  store i64 %12291, i64* %PC.i385
  %12292 = inttoptr i64 %12289 to i32*
  %12293 = load i32, i32* %12292
  %12294 = sub i32 %12286, %12293
  %12295 = icmp ult i32 %12286, %12293
  %12296 = zext i1 %12295 to i8
  %12297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12296, i8* %12297, align 1
  %12298 = and i32 %12294, 255
  %12299 = call i32 @llvm.ctpop.i32(i32 %12298)
  %12300 = trunc i32 %12299 to i8
  %12301 = and i8 %12300, 1
  %12302 = xor i8 %12301, 1
  %12303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12302, i8* %12303, align 1
  %12304 = xor i32 %12293, %12286
  %12305 = xor i32 %12304, %12294
  %12306 = lshr i32 %12305, 4
  %12307 = trunc i32 %12306 to i8
  %12308 = and i8 %12307, 1
  %12309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12308, i8* %12309, align 1
  %12310 = icmp eq i32 %12294, 0
  %12311 = zext i1 %12310 to i8
  %12312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12311, i8* %12312, align 1
  %12313 = lshr i32 %12294, 31
  %12314 = trunc i32 %12313 to i8
  %12315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12314, i8* %12315, align 1
  %12316 = lshr i32 %12286, 31
  %12317 = lshr i32 %12293, 31
  %12318 = xor i32 %12317, %12316
  %12319 = xor i32 %12313, %12316
  %12320 = add i32 %12319, %12318
  %12321 = icmp eq i32 %12320, 2
  %12322 = zext i1 %12321 to i8
  %12323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12322, i8* %12323, align 1
  store %struct.Memory* %loadMem_40ca57, %struct.Memory** %MEMORY
  %loadMem_40ca5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12325 = getelementptr inbounds %struct.GPR, %struct.GPR* %12324, i32 0, i32 33
  %12326 = getelementptr inbounds %struct.Reg, %struct.Reg* %12325, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %12326 to i64*
  %12327 = load i64, i64* %PC.i384
  %12328 = add i64 %12327, 78
  %12329 = load i64, i64* %PC.i384
  %12330 = add i64 %12329, 6
  %12331 = load i64, i64* %PC.i384
  %12332 = add i64 %12331, 6
  store i64 %12332, i64* %PC.i384
  %12333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12334 = load i8, i8* %12333, align 1
  %12335 = icmp eq i8 %12334, 0
  %12336 = zext i1 %12335 to i8
  store i8 %12336, i8* %BRANCH_TAKEN, align 1
  %12337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12338 = select i1 %12335, i64 %12328, i64 %12330
  store i64 %12338, i64* %12337, align 8
  store %struct.Memory* %loadMem_40ca5a, %struct.Memory** %MEMORY
  %loadBr_40ca5a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ca5a = icmp eq i8 %loadBr_40ca5a, 1
  br i1 %cmpBr_40ca5a, label %block_.L_40caa8, label %block_40ca60

block_40ca60:                                     ; preds = %block_.L_40ca46
  %loadMem_40ca60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12340 = getelementptr inbounds %struct.GPR, %struct.GPR* %12339, i32 0, i32 33
  %12341 = getelementptr inbounds %struct.Reg, %struct.Reg* %12340, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %12341 to i64*
  %12342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12343 = getelementptr inbounds %struct.GPR, %struct.GPR* %12342, i32 0, i32 1
  %12344 = getelementptr inbounds %struct.Reg, %struct.Reg* %12343, i32 0, i32 0
  %RAX.i383 = bitcast %union.anon* %12344 to i64*
  %12345 = load i64, i64* %PC.i382
  %12346 = add i64 %12345, 10
  store i64 %12346, i64* %PC.i382
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i383, align 8
  store %struct.Memory* %loadMem_40ca60, %struct.Memory** %MEMORY
  %loadMem_40ca6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12348 = getelementptr inbounds %struct.GPR, %struct.GPR* %12347, i32 0, i32 33
  %12349 = getelementptr inbounds %struct.Reg, %struct.Reg* %12348, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %12349 to i64*
  %12350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12351 = getelementptr inbounds %struct.GPR, %struct.GPR* %12350, i32 0, i32 5
  %12352 = getelementptr inbounds %struct.Reg, %struct.Reg* %12351, i32 0, i32 0
  %RCX.i380 = bitcast %union.anon* %12352 to i64*
  %12353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12354 = getelementptr inbounds %struct.GPR, %struct.GPR* %12353, i32 0, i32 15
  %12355 = getelementptr inbounds %struct.Reg, %struct.Reg* %12354, i32 0, i32 0
  %RBP.i381 = bitcast %union.anon* %12355 to i64*
  %12356 = load i64, i64* %RBP.i381
  %12357 = sub i64 %12356, 4
  %12358 = load i64, i64* %PC.i379
  %12359 = add i64 %12358, 3
  store i64 %12359, i64* %PC.i379
  %12360 = inttoptr i64 %12357 to i32*
  %12361 = load i32, i32* %12360
  %12362 = zext i32 %12361 to i64
  store i64 %12362, i64* %RCX.i380, align 8
  store %struct.Memory* %loadMem_40ca6a, %struct.Memory** %MEMORY
  %loadMem_40ca6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12364 = getelementptr inbounds %struct.GPR, %struct.GPR* %12363, i32 0, i32 33
  %12365 = getelementptr inbounds %struct.Reg, %struct.Reg* %12364, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %12365 to i64*
  %12366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12367 = getelementptr inbounds %struct.GPR, %struct.GPR* %12366, i32 0, i32 5
  %12368 = getelementptr inbounds %struct.Reg, %struct.Reg* %12367, i32 0, i32 0
  %RCX.i378 = bitcast %union.anon* %12368 to i64*
  %12369 = load i64, i64* %RCX.i378
  %12370 = load i64, i64* %PC.i377
  %12371 = add i64 %12370, 3
  store i64 %12371, i64* %PC.i377
  %12372 = trunc i64 %12369 to i32
  %12373 = sub i32 %12372, 20
  %12374 = zext i32 %12373 to i64
  store i64 %12374, i64* %RCX.i378, align 8
  %12375 = icmp ult i32 %12372, 20
  %12376 = zext i1 %12375 to i8
  %12377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12376, i8* %12377, align 1
  %12378 = and i32 %12373, 255
  %12379 = call i32 @llvm.ctpop.i32(i32 %12378)
  %12380 = trunc i32 %12379 to i8
  %12381 = and i8 %12380, 1
  %12382 = xor i8 %12381, 1
  %12383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12382, i8* %12383, align 1
  %12384 = xor i64 20, %12369
  %12385 = trunc i64 %12384 to i32
  %12386 = xor i32 %12385, %12373
  %12387 = lshr i32 %12386, 4
  %12388 = trunc i32 %12387 to i8
  %12389 = and i8 %12388, 1
  %12390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12389, i8* %12390, align 1
  %12391 = icmp eq i32 %12373, 0
  %12392 = zext i1 %12391 to i8
  %12393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12392, i8* %12393, align 1
  %12394 = lshr i32 %12373, 31
  %12395 = trunc i32 %12394 to i8
  %12396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12395, i8* %12396, align 1
  %12397 = lshr i32 %12372, 31
  %12398 = xor i32 %12394, %12397
  %12399 = add i32 %12398, %12397
  %12400 = icmp eq i32 %12399, 2
  %12401 = zext i1 %12400 to i8
  %12402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12401, i8* %12402, align 1
  store %struct.Memory* %loadMem_40ca6d, %struct.Memory** %MEMORY
  %loadMem_40ca70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12404 = getelementptr inbounds %struct.GPR, %struct.GPR* %12403, i32 0, i32 33
  %12405 = getelementptr inbounds %struct.Reg, %struct.Reg* %12404, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %12405 to i64*
  %12406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12407 = getelementptr inbounds %struct.GPR, %struct.GPR* %12406, i32 0, i32 5
  %12408 = getelementptr inbounds %struct.Reg, %struct.Reg* %12407, i32 0, i32 0
  %ECX.i375 = bitcast %union.anon* %12408 to i32*
  %12409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12410 = getelementptr inbounds %struct.GPR, %struct.GPR* %12409, i32 0, i32 7
  %12411 = getelementptr inbounds %struct.Reg, %struct.Reg* %12410, i32 0, i32 0
  %RDX.i376 = bitcast %union.anon* %12411 to i64*
  %12412 = load i32, i32* %ECX.i375
  %12413 = zext i32 %12412 to i64
  %12414 = load i64, i64* %PC.i374
  %12415 = add i64 %12414, 3
  store i64 %12415, i64* %PC.i374
  %12416 = shl i64 %12413, 32
  %12417 = ashr exact i64 %12416, 32
  store i64 %12417, i64* %RDX.i376, align 8
  store %struct.Memory* %loadMem_40ca70, %struct.Memory** %MEMORY
  %loadMem_40ca73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12419 = getelementptr inbounds %struct.GPR, %struct.GPR* %12418, i32 0, i32 33
  %12420 = getelementptr inbounds %struct.Reg, %struct.Reg* %12419, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %12420 to i64*
  %12421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12422 = getelementptr inbounds %struct.GPR, %struct.GPR* %12421, i32 0, i32 7
  %12423 = getelementptr inbounds %struct.Reg, %struct.Reg* %12422, i32 0, i32 0
  %RDX.i373 = bitcast %union.anon* %12423 to i64*
  %12424 = load i64, i64* %RDX.i373
  %12425 = mul i64 %12424, 4
  %12426 = add i64 %12425, 11187184
  %12427 = load i64, i64* %PC.i372
  %12428 = add i64 %12427, 8
  store i64 %12428, i64* %PC.i372
  %12429 = inttoptr i64 %12426 to i32*
  %12430 = load i32, i32* %12429
  %12431 = sext i32 %12430 to i64
  store i64 %12431, i64* %RDX.i373, align 8
  store %struct.Memory* %loadMem_40ca73, %struct.Memory** %MEMORY
  %loadMem_40ca7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12433 = getelementptr inbounds %struct.GPR, %struct.GPR* %12432, i32 0, i32 33
  %12434 = getelementptr inbounds %struct.Reg, %struct.Reg* %12433, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %12434 to i64*
  %12435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12436 = getelementptr inbounds %struct.GPR, %struct.GPR* %12435, i32 0, i32 7
  %12437 = getelementptr inbounds %struct.Reg, %struct.Reg* %12436, i32 0, i32 0
  %RDX.i371 = bitcast %union.anon* %12437 to i64*
  %12438 = load i64, i64* %RDX.i371
  %12439 = load i64, i64* %PC.i370
  %12440 = add i64 %12439, 7
  store i64 %12440, i64* %PC.i370
  %12441 = sext i64 %12438 to i128
  %12442 = and i128 %12441, -18446744073709551616
  %12443 = zext i64 %12438 to i128
  %12444 = or i128 %12442, %12443
  %12445 = mul i128 744, %12444
  %12446 = trunc i128 %12445 to i64
  store i64 %12446, i64* %RDX.i371, align 8
  %12447 = sext i64 %12446 to i128
  %12448 = icmp ne i128 %12447, %12445
  %12449 = zext i1 %12448 to i8
  %12450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12449, i8* %12450, align 1
  %12451 = trunc i128 %12445 to i32
  %12452 = and i32 %12451, 255
  %12453 = call i32 @llvm.ctpop.i32(i32 %12452)
  %12454 = trunc i32 %12453 to i8
  %12455 = and i8 %12454, 1
  %12456 = xor i8 %12455, 1
  %12457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12456, i8* %12457, align 1
  %12458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12458, align 1
  %12459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12459, align 1
  %12460 = lshr i64 %12446, 63
  %12461 = trunc i64 %12460 to i8
  %12462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12461, i8* %12462, align 1
  %12463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12449, i8* %12463, align 1
  store %struct.Memory* %loadMem_40ca7b, %struct.Memory** %MEMORY
  %loadMem_40ca82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12465 = getelementptr inbounds %struct.GPR, %struct.GPR* %12464, i32 0, i32 33
  %12466 = getelementptr inbounds %struct.Reg, %struct.Reg* %12465, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %12466 to i64*
  %12467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12468 = getelementptr inbounds %struct.GPR, %struct.GPR* %12467, i32 0, i32 1
  %12469 = getelementptr inbounds %struct.Reg, %struct.Reg* %12468, i32 0, i32 0
  %RAX.i368 = bitcast %union.anon* %12469 to i64*
  %12470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12471 = getelementptr inbounds %struct.GPR, %struct.GPR* %12470, i32 0, i32 7
  %12472 = getelementptr inbounds %struct.Reg, %struct.Reg* %12471, i32 0, i32 0
  %RDX.i369 = bitcast %union.anon* %12472 to i64*
  %12473 = load i64, i64* %RAX.i368
  %12474 = load i64, i64* %RDX.i369
  %12475 = load i64, i64* %PC.i367
  %12476 = add i64 %12475, 3
  store i64 %12476, i64* %PC.i367
  %12477 = add i64 %12474, %12473
  store i64 %12477, i64* %RAX.i368, align 8
  %12478 = icmp ult i64 %12477, %12473
  %12479 = icmp ult i64 %12477, %12474
  %12480 = or i1 %12478, %12479
  %12481 = zext i1 %12480 to i8
  %12482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12481, i8* %12482, align 1
  %12483 = trunc i64 %12477 to i32
  %12484 = and i32 %12483, 255
  %12485 = call i32 @llvm.ctpop.i32(i32 %12484)
  %12486 = trunc i32 %12485 to i8
  %12487 = and i8 %12486, 1
  %12488 = xor i8 %12487, 1
  %12489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12488, i8* %12489, align 1
  %12490 = xor i64 %12474, %12473
  %12491 = xor i64 %12490, %12477
  %12492 = lshr i64 %12491, 4
  %12493 = trunc i64 %12492 to i8
  %12494 = and i8 %12493, 1
  %12495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12494, i8* %12495, align 1
  %12496 = icmp eq i64 %12477, 0
  %12497 = zext i1 %12496 to i8
  %12498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12497, i8* %12498, align 1
  %12499 = lshr i64 %12477, 63
  %12500 = trunc i64 %12499 to i8
  %12501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12500, i8* %12501, align 1
  %12502 = lshr i64 %12473, 63
  %12503 = lshr i64 %12474, 63
  %12504 = xor i64 %12499, %12502
  %12505 = xor i64 %12499, %12503
  %12506 = add i64 %12504, %12505
  %12507 = icmp eq i64 %12506, 2
  %12508 = zext i1 %12507 to i8
  %12509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12508, i8* %12509, align 1
  store %struct.Memory* %loadMem_40ca82, %struct.Memory** %MEMORY
  %loadMem_40ca85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12511 = getelementptr inbounds %struct.GPR, %struct.GPR* %12510, i32 0, i32 33
  %12512 = getelementptr inbounds %struct.Reg, %struct.Reg* %12511, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %12512 to i64*
  %12513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12514 = getelementptr inbounds %struct.GPR, %struct.GPR* %12513, i32 0, i32 1
  %12515 = getelementptr inbounds %struct.Reg, %struct.Reg* %12514, i32 0, i32 0
  %RAX.i365 = bitcast %union.anon* %12515 to i64*
  %12516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12517 = getelementptr inbounds %struct.GPR, %struct.GPR* %12516, i32 0, i32 5
  %12518 = getelementptr inbounds %struct.Reg, %struct.Reg* %12517, i32 0, i32 0
  %RCX.i366 = bitcast %union.anon* %12518 to i64*
  %12519 = load i64, i64* %RAX.i365
  %12520 = add i64 %12519, 740
  %12521 = load i64, i64* %PC.i364
  %12522 = add i64 %12521, 6
  store i64 %12522, i64* %PC.i364
  %12523 = inttoptr i64 %12520 to i32*
  %12524 = load i32, i32* %12523
  %12525 = zext i32 %12524 to i64
  store i64 %12525, i64* %RCX.i366, align 8
  store %struct.Memory* %loadMem_40ca85, %struct.Memory** %MEMORY
  %loadMem_40ca8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12527 = getelementptr inbounds %struct.GPR, %struct.GPR* %12526, i32 0, i32 33
  %12528 = getelementptr inbounds %struct.Reg, %struct.Reg* %12527, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %12528 to i64*
  %12529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12530 = getelementptr inbounds %struct.GPR, %struct.GPR* %12529, i32 0, i32 5
  %12531 = getelementptr inbounds %struct.Reg, %struct.Reg* %12530, i32 0, i32 0
  %ECX.i363 = bitcast %union.anon* %12531 to i32*
  %12532 = load i32, i32* %ECX.i363
  %12533 = zext i32 %12532 to i64
  %12534 = load i64, i64* %PC.i362
  %12535 = add i64 %12534, 7
  store i64 %12535, i64* %PC.i362
  %12536 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %12537 = sub i32 %12532, %12536
  %12538 = icmp ult i32 %12532, %12536
  %12539 = zext i1 %12538 to i8
  %12540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12539, i8* %12540, align 1
  %12541 = and i32 %12537, 255
  %12542 = call i32 @llvm.ctpop.i32(i32 %12541)
  %12543 = trunc i32 %12542 to i8
  %12544 = and i8 %12543, 1
  %12545 = xor i8 %12544, 1
  %12546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12545, i8* %12546, align 1
  %12547 = xor i32 %12536, %12532
  %12548 = xor i32 %12547, %12537
  %12549 = lshr i32 %12548, 4
  %12550 = trunc i32 %12549 to i8
  %12551 = and i8 %12550, 1
  %12552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12551, i8* %12552, align 1
  %12553 = icmp eq i32 %12537, 0
  %12554 = zext i1 %12553 to i8
  %12555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12554, i8* %12555, align 1
  %12556 = lshr i32 %12537, 31
  %12557 = trunc i32 %12556 to i8
  %12558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12557, i8* %12558, align 1
  %12559 = lshr i32 %12532, 31
  %12560 = lshr i32 %12536, 31
  %12561 = xor i32 %12560, %12559
  %12562 = xor i32 %12556, %12559
  %12563 = add i32 %12562, %12561
  %12564 = icmp eq i32 %12563, 2
  %12565 = zext i1 %12564 to i8
  %12566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12565, i8* %12566, align 1
  store %struct.Memory* %loadMem_40ca8b, %struct.Memory** %MEMORY
  %loadMem_40ca92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12568 = getelementptr inbounds %struct.GPR, %struct.GPR* %12567, i32 0, i32 33
  %12569 = getelementptr inbounds %struct.Reg, %struct.Reg* %12568, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %12569 to i64*
  %12570 = load i64, i64* %PC.i361
  %12571 = add i64 %12570, 22
  %12572 = load i64, i64* %PC.i361
  %12573 = add i64 %12572, 6
  %12574 = load i64, i64* %PC.i361
  %12575 = add i64 %12574, 6
  store i64 %12575, i64* %PC.i361
  %12576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12577 = load i8, i8* %12576, align 1
  store i8 %12577, i8* %BRANCH_TAKEN, align 1
  %12578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12579 = icmp ne i8 %12577, 0
  %12580 = select i1 %12579, i64 %12571, i64 %12573
  store i64 %12580, i64* %12578, align 8
  store %struct.Memory* %loadMem_40ca92, %struct.Memory** %MEMORY
  %loadBr_40ca92 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ca92 = icmp eq i8 %loadBr_40ca92, 1
  br i1 %cmpBr_40ca92, label %block_.L_40caa8, label %block_40ca98

block_40ca98:                                     ; preds = %block_40ca60
  %loadMem_40ca98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12582 = getelementptr inbounds %struct.GPR, %struct.GPR* %12581, i32 0, i32 33
  %12583 = getelementptr inbounds %struct.Reg, %struct.Reg* %12582, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %12583 to i64*
  %12584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12585 = getelementptr inbounds %struct.GPR, %struct.GPR* %12584, i32 0, i32 11
  %12586 = getelementptr inbounds %struct.Reg, %struct.Reg* %12585, i32 0, i32 0
  %RDI.i359 = bitcast %union.anon* %12586 to i64*
  %12587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12588 = getelementptr inbounds %struct.GPR, %struct.GPR* %12587, i32 0, i32 15
  %12589 = getelementptr inbounds %struct.Reg, %struct.Reg* %12588, i32 0, i32 0
  %RBP.i360 = bitcast %union.anon* %12589 to i64*
  %12590 = load i64, i64* %RBP.i360
  %12591 = sub i64 %12590, 8
  %12592 = load i64, i64* %PC.i358
  %12593 = add i64 %12592, 3
  store i64 %12593, i64* %PC.i358
  %12594 = inttoptr i64 %12591 to i32*
  %12595 = load i32, i32* %12594
  %12596 = zext i32 %12595 to i64
  store i64 %12596, i64* %RDI.i359, align 8
  store %struct.Memory* %loadMem_40ca98, %struct.Memory** %MEMORY
  %loadMem_40ca9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12598 = getelementptr inbounds %struct.GPR, %struct.GPR* %12597, i32 0, i32 33
  %12599 = getelementptr inbounds %struct.Reg, %struct.Reg* %12598, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %12599 to i64*
  %12600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12601 = getelementptr inbounds %struct.GPR, %struct.GPR* %12600, i32 0, i32 1
  %12602 = getelementptr inbounds %struct.Reg, %struct.Reg* %12601, i32 0, i32 0
  %RAX.i356 = bitcast %union.anon* %12602 to i64*
  %12603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12604 = getelementptr inbounds %struct.GPR, %struct.GPR* %12603, i32 0, i32 15
  %12605 = getelementptr inbounds %struct.Reg, %struct.Reg* %12604, i32 0, i32 0
  %RBP.i357 = bitcast %union.anon* %12605 to i64*
  %12606 = load i64, i64* %RBP.i357
  %12607 = sub i64 %12606, 4
  %12608 = load i64, i64* %PC.i355
  %12609 = add i64 %12608, 3
  store i64 %12609, i64* %PC.i355
  %12610 = inttoptr i64 %12607 to i32*
  %12611 = load i32, i32* %12610
  %12612 = zext i32 %12611 to i64
  store i64 %12612, i64* %RAX.i356, align 8
  store %struct.Memory* %loadMem_40ca9b, %struct.Memory** %MEMORY
  %loadMem_40ca9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12614 = getelementptr inbounds %struct.GPR, %struct.GPR* %12613, i32 0, i32 33
  %12615 = getelementptr inbounds %struct.Reg, %struct.Reg* %12614, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %12615 to i64*
  %12616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12617 = getelementptr inbounds %struct.GPR, %struct.GPR* %12616, i32 0, i32 1
  %12618 = getelementptr inbounds %struct.Reg, %struct.Reg* %12617, i32 0, i32 0
  %RAX.i354 = bitcast %union.anon* %12618 to i64*
  %12619 = load i64, i64* %RAX.i354
  %12620 = load i64, i64* %PC.i353
  %12621 = add i64 %12620, 3
  store i64 %12621, i64* %PC.i353
  %12622 = trunc i64 %12619 to i32
  %12623 = sub i32 %12622, 20
  %12624 = zext i32 %12623 to i64
  store i64 %12624, i64* %RAX.i354, align 8
  %12625 = icmp ult i32 %12622, 20
  %12626 = zext i1 %12625 to i8
  %12627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12626, i8* %12627, align 1
  %12628 = and i32 %12623, 255
  %12629 = call i32 @llvm.ctpop.i32(i32 %12628)
  %12630 = trunc i32 %12629 to i8
  %12631 = and i8 %12630, 1
  %12632 = xor i8 %12631, 1
  %12633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12632, i8* %12633, align 1
  %12634 = xor i64 20, %12619
  %12635 = trunc i64 %12634 to i32
  %12636 = xor i32 %12635, %12623
  %12637 = lshr i32 %12636, 4
  %12638 = trunc i32 %12637 to i8
  %12639 = and i8 %12638, 1
  %12640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12639, i8* %12640, align 1
  %12641 = icmp eq i32 %12623, 0
  %12642 = zext i1 %12641 to i8
  %12643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12642, i8* %12643, align 1
  %12644 = lshr i32 %12623, 31
  %12645 = trunc i32 %12644 to i8
  %12646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12645, i8* %12646, align 1
  %12647 = lshr i32 %12622, 31
  %12648 = xor i32 %12644, %12647
  %12649 = add i32 %12648, %12647
  %12650 = icmp eq i32 %12649, 2
  %12651 = zext i1 %12650 to i8
  %12652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12651, i8* %12652, align 1
  store %struct.Memory* %loadMem_40ca9e, %struct.Memory** %MEMORY
  %loadMem_40caa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12654 = getelementptr inbounds %struct.GPR, %struct.GPR* %12653, i32 0, i32 33
  %12655 = getelementptr inbounds %struct.Reg, %struct.Reg* %12654, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %12655 to i64*
  %12656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12657 = getelementptr inbounds %struct.GPR, %struct.GPR* %12656, i32 0, i32 1
  %12658 = getelementptr inbounds %struct.Reg, %struct.Reg* %12657, i32 0, i32 0
  %EAX.i351 = bitcast %union.anon* %12658 to i32*
  %12659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12660 = getelementptr inbounds %struct.GPR, %struct.GPR* %12659, i32 0, i32 9
  %12661 = getelementptr inbounds %struct.Reg, %struct.Reg* %12660, i32 0, i32 0
  %RSI.i352 = bitcast %union.anon* %12661 to i64*
  %12662 = load i32, i32* %EAX.i351
  %12663 = zext i32 %12662 to i64
  %12664 = load i64, i64* %PC.i350
  %12665 = add i64 %12664, 2
  store i64 %12665, i64* %PC.i350
  %12666 = and i64 %12663, 4294967295
  store i64 %12666, i64* %RSI.i352, align 8
  store %struct.Memory* %loadMem_40caa1, %struct.Memory** %MEMORY
  %loadMem1_40caa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12668 = getelementptr inbounds %struct.GPR, %struct.GPR* %12667, i32 0, i32 33
  %12669 = getelementptr inbounds %struct.Reg, %struct.Reg* %12668, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %12669 to i64*
  %12670 = load i64, i64* %PC.i349
  %12671 = add i64 %12670, 685
  %12672 = load i64, i64* %PC.i349
  %12673 = add i64 %12672, 5
  %12674 = load i64, i64* %PC.i349
  %12675 = add i64 %12674, 5
  store i64 %12675, i64* %PC.i349
  %12676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12677 = load i64, i64* %12676, align 8
  %12678 = add i64 %12677, -8
  %12679 = inttoptr i64 %12678 to i64*
  store i64 %12673, i64* %12679
  store i64 %12678, i64* %12676, align 8
  %12680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12671, i64* %12680, align 8
  store %struct.Memory* %loadMem1_40caa3, %struct.Memory** %MEMORY
  %loadMem2_40caa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40caa3 = load i64, i64* %3
  %call2_40caa3 = call %struct.Memory* @sub_40cd50.assimilate_string(%struct.State* %0, i64 %loadPC_40caa3, %struct.Memory* %loadMem2_40caa3)
  store %struct.Memory* %call2_40caa3, %struct.Memory** %MEMORY
  br label %block_.L_40caa8

block_.L_40caa8:                                  ; preds = %block_40ca98, %block_40ca60, %block_.L_40ca46
  %loadMem_40caa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12682 = getelementptr inbounds %struct.GPR, %struct.GPR* %12681, i32 0, i32 33
  %12683 = getelementptr inbounds %struct.Reg, %struct.Reg* %12682, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %12683 to i64*
  %12684 = load i64, i64* %PC.i348
  %12685 = add i64 %12684, 5
  %12686 = load i64, i64* %PC.i348
  %12687 = add i64 %12686, 5
  store i64 %12687, i64* %PC.i348
  %12688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12685, i64* %12688, align 8
  store %struct.Memory* %loadMem_40caa8, %struct.Memory** %MEMORY
  br label %block_.L_40caad

block_.L_40caad:                                  ; preds = %block_.L_40caa8, %block_40c8fc
  %loadMem_40caad = load %struct.Memory*, %struct.Memory** %MEMORY
  %12689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12690 = getelementptr inbounds %struct.GPR, %struct.GPR* %12689, i32 0, i32 33
  %12691 = getelementptr inbounds %struct.Reg, %struct.Reg* %12690, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %12691 to i64*
  %12692 = load i64, i64* %PC.i347
  %12693 = add i64 %12692, 5
  %12694 = load i64, i64* %PC.i347
  %12695 = add i64 %12694, 5
  store i64 %12695, i64* %PC.i347
  %12696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12693, i64* %12696, align 8
  store %struct.Memory* %loadMem_40caad, %struct.Memory** %MEMORY
  br label %block_.L_40cab2

block_.L_40cab2:                                  ; preds = %block_.L_40caad, %block_.L_40c86d
  %loadMem_40cab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12698 = getelementptr inbounds %struct.GPR, %struct.GPR* %12697, i32 0, i32 33
  %12699 = getelementptr inbounds %struct.Reg, %struct.Reg* %12698, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %12699 to i64*
  %12700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12701 = getelementptr inbounds %struct.GPR, %struct.GPR* %12700, i32 0, i32 1
  %12702 = getelementptr inbounds %struct.Reg, %struct.Reg* %12701, i32 0, i32 0
  %RAX.i345 = bitcast %union.anon* %12702 to i64*
  %12703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12704 = getelementptr inbounds %struct.GPR, %struct.GPR* %12703, i32 0, i32 15
  %12705 = getelementptr inbounds %struct.Reg, %struct.Reg* %12704, i32 0, i32 0
  %RBP.i346 = bitcast %union.anon* %12705 to i64*
  %12706 = load i64, i64* %RBP.i346
  %12707 = sub i64 %12706, 4
  %12708 = load i64, i64* %PC.i344
  %12709 = add i64 %12708, 3
  store i64 %12709, i64* %PC.i344
  %12710 = inttoptr i64 %12707 to i32*
  %12711 = load i32, i32* %12710
  %12712 = zext i32 %12711 to i64
  store i64 %12712, i64* %RAX.i345, align 8
  store %struct.Memory* %loadMem_40cab2, %struct.Memory** %MEMORY
  %loadMem_40cab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12714 = getelementptr inbounds %struct.GPR, %struct.GPR* %12713, i32 0, i32 33
  %12715 = getelementptr inbounds %struct.Reg, %struct.Reg* %12714, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %12715 to i64*
  %12716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12717 = getelementptr inbounds %struct.GPR, %struct.GPR* %12716, i32 0, i32 1
  %12718 = getelementptr inbounds %struct.Reg, %struct.Reg* %12717, i32 0, i32 0
  %RAX.i343 = bitcast %union.anon* %12718 to i64*
  %12719 = load i64, i64* %RAX.i343
  %12720 = load i64, i64* %PC.i342
  %12721 = add i64 %12720, 3
  store i64 %12721, i64* %PC.i342
  %12722 = trunc i64 %12719 to i32
  %12723 = add i32 1, %12722
  %12724 = zext i32 %12723 to i64
  store i64 %12724, i64* %RAX.i343, align 8
  %12725 = icmp ult i32 %12723, %12722
  %12726 = icmp ult i32 %12723, 1
  %12727 = or i1 %12725, %12726
  %12728 = zext i1 %12727 to i8
  %12729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12728, i8* %12729, align 1
  %12730 = and i32 %12723, 255
  %12731 = call i32 @llvm.ctpop.i32(i32 %12730)
  %12732 = trunc i32 %12731 to i8
  %12733 = and i8 %12732, 1
  %12734 = xor i8 %12733, 1
  %12735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12734, i8* %12735, align 1
  %12736 = xor i64 1, %12719
  %12737 = trunc i64 %12736 to i32
  %12738 = xor i32 %12737, %12723
  %12739 = lshr i32 %12738, 4
  %12740 = trunc i32 %12739 to i8
  %12741 = and i8 %12740, 1
  %12742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12741, i8* %12742, align 1
  %12743 = icmp eq i32 %12723, 0
  %12744 = zext i1 %12743 to i8
  %12745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12744, i8* %12745, align 1
  %12746 = lshr i32 %12723, 31
  %12747 = trunc i32 %12746 to i8
  %12748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12747, i8* %12748, align 1
  %12749 = lshr i32 %12722, 31
  %12750 = xor i32 %12746, %12749
  %12751 = add i32 %12750, %12746
  %12752 = icmp eq i32 %12751, 2
  %12753 = zext i1 %12752 to i8
  %12754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12753, i8* %12754, align 1
  store %struct.Memory* %loadMem_40cab5, %struct.Memory** %MEMORY
  %loadMem_40cab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12756 = getelementptr inbounds %struct.GPR, %struct.GPR* %12755, i32 0, i32 33
  %12757 = getelementptr inbounds %struct.Reg, %struct.Reg* %12756, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %12757 to i64*
  %12758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12759 = getelementptr inbounds %struct.GPR, %struct.GPR* %12758, i32 0, i32 1
  %12760 = getelementptr inbounds %struct.Reg, %struct.Reg* %12759, i32 0, i32 0
  %EAX.i340 = bitcast %union.anon* %12760 to i32*
  %12761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12762 = getelementptr inbounds %struct.GPR, %struct.GPR* %12761, i32 0, i32 5
  %12763 = getelementptr inbounds %struct.Reg, %struct.Reg* %12762, i32 0, i32 0
  %RCX.i341 = bitcast %union.anon* %12763 to i64*
  %12764 = load i32, i32* %EAX.i340
  %12765 = zext i32 %12764 to i64
  %12766 = load i64, i64* %PC.i339
  %12767 = add i64 %12766, 3
  store i64 %12767, i64* %PC.i339
  %12768 = shl i64 %12765, 32
  %12769 = ashr exact i64 %12768, 32
  store i64 %12769, i64* %RCX.i341, align 8
  store %struct.Memory* %loadMem_40cab8, %struct.Memory** %MEMORY
  %loadMem_40cabb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12771 = getelementptr inbounds %struct.GPR, %struct.GPR* %12770, i32 0, i32 33
  %12772 = getelementptr inbounds %struct.Reg, %struct.Reg* %12771, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %12772 to i64*
  %12773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12774 = getelementptr inbounds %struct.GPR, %struct.GPR* %12773, i32 0, i32 1
  %12775 = getelementptr inbounds %struct.Reg, %struct.Reg* %12774, i32 0, i32 0
  %RAX.i337 = bitcast %union.anon* %12775 to i64*
  %12776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12777 = getelementptr inbounds %struct.GPR, %struct.GPR* %12776, i32 0, i32 5
  %12778 = getelementptr inbounds %struct.Reg, %struct.Reg* %12777, i32 0, i32 0
  %RCX.i338 = bitcast %union.anon* %12778 to i64*
  %12779 = load i64, i64* %RCX.i338
  %12780 = add i64 %12779, 12099168
  %12781 = load i64, i64* %PC.i336
  %12782 = add i64 %12781, 8
  store i64 %12782, i64* %PC.i336
  %12783 = inttoptr i64 %12780 to i8*
  %12784 = load i8, i8* %12783
  %12785 = zext i8 %12784 to i64
  store i64 %12785, i64* %RAX.i337, align 8
  store %struct.Memory* %loadMem_40cabb, %struct.Memory** %MEMORY
  %loadMem_40cac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12787 = getelementptr inbounds %struct.GPR, %struct.GPR* %12786, i32 0, i32 33
  %12788 = getelementptr inbounds %struct.Reg, %struct.Reg* %12787, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %12788 to i64*
  %12789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12790 = getelementptr inbounds %struct.GPR, %struct.GPR* %12789, i32 0, i32 1
  %12791 = getelementptr inbounds %struct.Reg, %struct.Reg* %12790, i32 0, i32 0
  %EAX.i335 = bitcast %union.anon* %12791 to i32*
  %12792 = load i32, i32* %EAX.i335
  %12793 = zext i32 %12792 to i64
  %12794 = load i64, i64* %PC.i334
  %12795 = add i64 %12794, 3
  store i64 %12795, i64* %PC.i334
  %12796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12796, align 1
  %12797 = and i32 %12792, 255
  %12798 = call i32 @llvm.ctpop.i32(i32 %12797)
  %12799 = trunc i32 %12798 to i8
  %12800 = and i8 %12799, 1
  %12801 = xor i8 %12800, 1
  %12802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12801, i8* %12802, align 1
  %12803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12803, align 1
  %12804 = icmp eq i32 %12792, 0
  %12805 = zext i1 %12804 to i8
  %12806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12805, i8* %12806, align 1
  %12807 = lshr i32 %12792, 31
  %12808 = trunc i32 %12807 to i8
  %12809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12808, i8* %12809, align 1
  %12810 = lshr i32 %12792, 31
  %12811 = xor i32 %12807, %12810
  %12812 = add i32 %12811, %12810
  %12813 = icmp eq i32 %12812, 2
  %12814 = zext i1 %12813 to i8
  %12815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12814, i8* %12815, align 1
  store %struct.Memory* %loadMem_40cac3, %struct.Memory** %MEMORY
  %loadMem_40cac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12817 = getelementptr inbounds %struct.GPR, %struct.GPR* %12816, i32 0, i32 33
  %12818 = getelementptr inbounds %struct.Reg, %struct.Reg* %12817, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %12818 to i64*
  %12819 = load i64, i64* %PC.i333
  %12820 = add i64 %12819, 167
  %12821 = load i64, i64* %PC.i333
  %12822 = add i64 %12821, 6
  %12823 = load i64, i64* %PC.i333
  %12824 = add i64 %12823, 6
  store i64 %12824, i64* %PC.i333
  %12825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12826 = load i8, i8* %12825, align 1
  %12827 = icmp eq i8 %12826, 0
  %12828 = zext i1 %12827 to i8
  store i8 %12828, i8* %BRANCH_TAKEN, align 1
  %12829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12830 = select i1 %12827, i64 %12820, i64 %12822
  store i64 %12830, i64* %12829, align 8
  store %struct.Memory* %loadMem_40cac6, %struct.Memory** %MEMORY
  %loadBr_40cac6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cac6 = icmp eq i8 %loadBr_40cac6, 1
  br i1 %cmpBr_40cac6, label %block_.L_40cb6d, label %block_40cacc

block_40cacc:                                     ; preds = %block_.L_40cab2
  %loadMem_40cacc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12832 = getelementptr inbounds %struct.GPR, %struct.GPR* %12831, i32 0, i32 33
  %12833 = getelementptr inbounds %struct.Reg, %struct.Reg* %12832, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %12833 to i64*
  %12834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12835 = getelementptr inbounds %struct.GPR, %struct.GPR* %12834, i32 0, i32 1
  %12836 = getelementptr inbounds %struct.Reg, %struct.Reg* %12835, i32 0, i32 0
  %RAX.i331 = bitcast %union.anon* %12836 to i64*
  %12837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12838 = getelementptr inbounds %struct.GPR, %struct.GPR* %12837, i32 0, i32 15
  %12839 = getelementptr inbounds %struct.Reg, %struct.Reg* %12838, i32 0, i32 0
  %RBP.i332 = bitcast %union.anon* %12839 to i64*
  %12840 = load i64, i64* %RBP.i332
  %12841 = sub i64 %12840, 4
  %12842 = load i64, i64* %PC.i330
  %12843 = add i64 %12842, 3
  store i64 %12843, i64* %PC.i330
  %12844 = inttoptr i64 %12841 to i32*
  %12845 = load i32, i32* %12844
  %12846 = zext i32 %12845 to i64
  store i64 %12846, i64* %RAX.i331, align 8
  store %struct.Memory* %loadMem_40cacc, %struct.Memory** %MEMORY
  %loadMem_40cacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12848 = getelementptr inbounds %struct.GPR, %struct.GPR* %12847, i32 0, i32 33
  %12849 = getelementptr inbounds %struct.Reg, %struct.Reg* %12848, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %12849 to i64*
  %12850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12851 = getelementptr inbounds %struct.GPR, %struct.GPR* %12850, i32 0, i32 1
  %12852 = getelementptr inbounds %struct.Reg, %struct.Reg* %12851, i32 0, i32 0
  %RAX.i329 = bitcast %union.anon* %12852 to i64*
  %12853 = load i64, i64* %RAX.i329
  %12854 = load i64, i64* %PC.i328
  %12855 = add i64 %12854, 3
  store i64 %12855, i64* %PC.i328
  %12856 = trunc i64 %12853 to i32
  %12857 = add i32 1, %12856
  %12858 = zext i32 %12857 to i64
  store i64 %12858, i64* %RAX.i329, align 8
  %12859 = icmp ult i32 %12857, %12856
  %12860 = icmp ult i32 %12857, 1
  %12861 = or i1 %12859, %12860
  %12862 = zext i1 %12861 to i8
  %12863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12862, i8* %12863, align 1
  %12864 = and i32 %12857, 255
  %12865 = call i32 @llvm.ctpop.i32(i32 %12864)
  %12866 = trunc i32 %12865 to i8
  %12867 = and i8 %12866, 1
  %12868 = xor i8 %12867, 1
  %12869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12868, i8* %12869, align 1
  %12870 = xor i64 1, %12853
  %12871 = trunc i64 %12870 to i32
  %12872 = xor i32 %12871, %12857
  %12873 = lshr i32 %12872, 4
  %12874 = trunc i32 %12873 to i8
  %12875 = and i8 %12874, 1
  %12876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12875, i8* %12876, align 1
  %12877 = icmp eq i32 %12857, 0
  %12878 = zext i1 %12877 to i8
  %12879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12878, i8* %12879, align 1
  %12880 = lshr i32 %12857, 31
  %12881 = trunc i32 %12880 to i8
  %12882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12881, i8* %12882, align 1
  %12883 = lshr i32 %12856, 31
  %12884 = xor i32 %12880, %12883
  %12885 = add i32 %12884, %12880
  %12886 = icmp eq i32 %12885, 2
  %12887 = zext i1 %12886 to i8
  %12888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12887, i8* %12888, align 1
  store %struct.Memory* %loadMem_40cacf, %struct.Memory** %MEMORY
  %loadMem_40cad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12890 = getelementptr inbounds %struct.GPR, %struct.GPR* %12889, i32 0, i32 33
  %12891 = getelementptr inbounds %struct.Reg, %struct.Reg* %12890, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %12891 to i64*
  %12892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12893 = getelementptr inbounds %struct.GPR, %struct.GPR* %12892, i32 0, i32 1
  %12894 = getelementptr inbounds %struct.Reg, %struct.Reg* %12893, i32 0, i32 0
  %EAX.i326 = bitcast %union.anon* %12894 to i32*
  %12895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12896 = getelementptr inbounds %struct.GPR, %struct.GPR* %12895, i32 0, i32 5
  %12897 = getelementptr inbounds %struct.Reg, %struct.Reg* %12896, i32 0, i32 0
  %RCX.i327 = bitcast %union.anon* %12897 to i64*
  %12898 = load i32, i32* %EAX.i326
  %12899 = zext i32 %12898 to i64
  %12900 = load i64, i64* %PC.i325
  %12901 = add i64 %12900, 3
  store i64 %12901, i64* %PC.i325
  %12902 = shl i64 %12899, 32
  %12903 = ashr exact i64 %12902, 32
  store i64 %12903, i64* %RCX.i327, align 8
  store %struct.Memory* %loadMem_40cad2, %struct.Memory** %MEMORY
  %loadMem_40cad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12905 = getelementptr inbounds %struct.GPR, %struct.GPR* %12904, i32 0, i32 33
  %12906 = getelementptr inbounds %struct.Reg, %struct.Reg* %12905, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %12906 to i64*
  %12907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12908 = getelementptr inbounds %struct.GPR, %struct.GPR* %12907, i32 0, i32 1
  %12909 = getelementptr inbounds %struct.Reg, %struct.Reg* %12908, i32 0, i32 0
  %RAX.i323 = bitcast %union.anon* %12909 to i64*
  %12910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12911 = getelementptr inbounds %struct.GPR, %struct.GPR* %12910, i32 0, i32 5
  %12912 = getelementptr inbounds %struct.Reg, %struct.Reg* %12911, i32 0, i32 0
  %RCX.i324 = bitcast %union.anon* %12912 to i64*
  %12913 = load i64, i64* %RCX.i324
  %12914 = mul i64 %12913, 4
  %12915 = add i64 %12914, 11185584
  %12916 = load i64, i64* %PC.i322
  %12917 = add i64 %12916, 7
  store i64 %12917, i64* %PC.i322
  %12918 = inttoptr i64 %12915 to i32*
  %12919 = load i32, i32* %12918
  %12920 = zext i32 %12919 to i64
  store i64 %12920, i64* %RAX.i323, align 8
  store %struct.Memory* %loadMem_40cad5, %struct.Memory** %MEMORY
  %loadMem_40cadc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12922 = getelementptr inbounds %struct.GPR, %struct.GPR* %12921, i32 0, i32 33
  %12923 = getelementptr inbounds %struct.Reg, %struct.Reg* %12922, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %12923 to i64*
  %12924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12925 = getelementptr inbounds %struct.GPR, %struct.GPR* %12924, i32 0, i32 1
  %12926 = getelementptr inbounds %struct.Reg, %struct.Reg* %12925, i32 0, i32 0
  %EAX.i321 = bitcast %union.anon* %12926 to i32*
  %12927 = load i32, i32* %EAX.i321
  %12928 = zext i32 %12927 to i64
  %12929 = load i64, i64* %PC.i320
  %12930 = add i64 %12929, 7
  store i64 %12930, i64* %PC.i320
  %12931 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %12932 = sub i32 %12927, %12931
  %12933 = icmp ult i32 %12927, %12931
  %12934 = zext i1 %12933 to i8
  %12935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12934, i8* %12935, align 1
  %12936 = and i32 %12932, 255
  %12937 = call i32 @llvm.ctpop.i32(i32 %12936)
  %12938 = trunc i32 %12937 to i8
  %12939 = and i8 %12938, 1
  %12940 = xor i8 %12939, 1
  %12941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12940, i8* %12941, align 1
  %12942 = xor i32 %12931, %12927
  %12943 = xor i32 %12942, %12932
  %12944 = lshr i32 %12943, 4
  %12945 = trunc i32 %12944 to i8
  %12946 = and i8 %12945, 1
  %12947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12946, i8* %12947, align 1
  %12948 = icmp eq i32 %12932, 0
  %12949 = zext i1 %12948 to i8
  %12950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12949, i8* %12950, align 1
  %12951 = lshr i32 %12932, 31
  %12952 = trunc i32 %12951 to i8
  %12953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12952, i8* %12953, align 1
  %12954 = lshr i32 %12927, 31
  %12955 = lshr i32 %12931, 31
  %12956 = xor i32 %12955, %12954
  %12957 = xor i32 %12951, %12954
  %12958 = add i32 %12957, %12956
  %12959 = icmp eq i32 %12958, 2
  %12960 = zext i1 %12959 to i8
  %12961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12960, i8* %12961, align 1
  store %struct.Memory* %loadMem_40cadc, %struct.Memory** %MEMORY
  %loadMem_40cae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12963 = getelementptr inbounds %struct.GPR, %struct.GPR* %12962, i32 0, i32 33
  %12964 = getelementptr inbounds %struct.Reg, %struct.Reg* %12963, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %12964 to i64*
  %12965 = load i64, i64* %PC.i319
  %12966 = add i64 %12965, 138
  %12967 = load i64, i64* %PC.i319
  %12968 = add i64 %12967, 6
  %12969 = load i64, i64* %PC.i319
  %12970 = add i64 %12969, 6
  store i64 %12970, i64* %PC.i319
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12972 = load i8, i8* %12971, align 1
  store i8 %12972, i8* %BRANCH_TAKEN, align 1
  %12973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12974 = icmp ne i8 %12972, 0
  %12975 = select i1 %12974, i64 %12966, i64 %12968
  store i64 %12975, i64* %12973, align 8
  store %struct.Memory* %loadMem_40cae3, %struct.Memory** %MEMORY
  %loadBr_40cae3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cae3 = icmp eq i8 %loadBr_40cae3, 1
  br i1 %cmpBr_40cae3, label %block_.L_40cb6d, label %block_40cae9

block_40cae9:                                     ; preds = %block_40cacc
  %loadMem_40cae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12977 = getelementptr inbounds %struct.GPR, %struct.GPR* %12976, i32 0, i32 33
  %12978 = getelementptr inbounds %struct.Reg, %struct.Reg* %12977, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %12978 to i64*
  %12979 = load i64, i64* %PC.i318
  %12980 = add i64 %12979, 5
  %12981 = load i64, i64* %PC.i318
  %12982 = add i64 %12981, 5
  store i64 %12982, i64* %PC.i318
  %12983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12980, i64* %12983, align 8
  store %struct.Memory* %loadMem_40cae9, %struct.Memory** %MEMORY
  br label %block_.L_40caee

block_.L_40caee:                                  ; preds = %block_40cae9
  %loadMem_40caee = load %struct.Memory*, %struct.Memory** %MEMORY
  %12984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12985 = getelementptr inbounds %struct.GPR, %struct.GPR* %12984, i32 0, i32 33
  %12986 = getelementptr inbounds %struct.Reg, %struct.Reg* %12985, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %12986 to i64*
  %12987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12988 = getelementptr inbounds %struct.GPR, %struct.GPR* %12987, i32 0, i32 1
  %12989 = getelementptr inbounds %struct.Reg, %struct.Reg* %12988, i32 0, i32 0
  %RAX.i317 = bitcast %union.anon* %12989 to i64*
  %12990 = load i64, i64* %PC.i316
  %12991 = add i64 %12990, 10
  store i64 %12991, i64* %PC.i316
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i317, align 8
  store %struct.Memory* %loadMem_40caee, %struct.Memory** %MEMORY
  %loadMem_40caf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12993 = getelementptr inbounds %struct.GPR, %struct.GPR* %12992, i32 0, i32 33
  %12994 = getelementptr inbounds %struct.Reg, %struct.Reg* %12993, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %12994 to i64*
  %12995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12996 = getelementptr inbounds %struct.GPR, %struct.GPR* %12995, i32 0, i32 5
  %12997 = getelementptr inbounds %struct.Reg, %struct.Reg* %12996, i32 0, i32 0
  %RCX.i314 = bitcast %union.anon* %12997 to i64*
  %12998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12999 = getelementptr inbounds %struct.GPR, %struct.GPR* %12998, i32 0, i32 15
  %13000 = getelementptr inbounds %struct.Reg, %struct.Reg* %12999, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %13000 to i64*
  %13001 = load i64, i64* %RBP.i315
  %13002 = sub i64 %13001, 8
  %13003 = load i64, i64* %PC.i313
  %13004 = add i64 %13003, 4
  store i64 %13004, i64* %PC.i313
  %13005 = inttoptr i64 %13002 to i32*
  %13006 = load i32, i32* %13005
  %13007 = sext i32 %13006 to i64
  store i64 %13007, i64* %RCX.i314, align 8
  store %struct.Memory* %loadMem_40caf8, %struct.Memory** %MEMORY
  %loadMem_40cafc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13009 = getelementptr inbounds %struct.GPR, %struct.GPR* %13008, i32 0, i32 33
  %13010 = getelementptr inbounds %struct.Reg, %struct.Reg* %13009, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %13010 to i64*
  %13011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13012 = getelementptr inbounds %struct.GPR, %struct.GPR* %13011, i32 0, i32 5
  %13013 = getelementptr inbounds %struct.Reg, %struct.Reg* %13012, i32 0, i32 0
  %RCX.i312 = bitcast %union.anon* %13013 to i64*
  %13014 = load i64, i64* %RCX.i312
  %13015 = load i64, i64* %PC.i311
  %13016 = add i64 %13015, 7
  store i64 %13016, i64* %PC.i311
  %13017 = sext i64 %13014 to i128
  %13018 = and i128 %13017, -18446744073709551616
  %13019 = zext i64 %13014 to i128
  %13020 = or i128 %13018, %13019
  %13021 = mul i128 744, %13020
  %13022 = trunc i128 %13021 to i64
  store i64 %13022, i64* %RCX.i312, align 8
  %13023 = sext i64 %13022 to i128
  %13024 = icmp ne i128 %13023, %13021
  %13025 = zext i1 %13024 to i8
  %13026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13025, i8* %13026, align 1
  %13027 = trunc i128 %13021 to i32
  %13028 = and i32 %13027, 255
  %13029 = call i32 @llvm.ctpop.i32(i32 %13028)
  %13030 = trunc i32 %13029 to i8
  %13031 = and i8 %13030, 1
  %13032 = xor i8 %13031, 1
  %13033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13032, i8* %13033, align 1
  %13034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13034, align 1
  %13035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13035, align 1
  %13036 = lshr i64 %13022, 63
  %13037 = trunc i64 %13036 to i8
  %13038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13037, i8* %13038, align 1
  %13039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13025, i8* %13039, align 1
  store %struct.Memory* %loadMem_40cafc, %struct.Memory** %MEMORY
  %loadMem_40cb03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13041 = getelementptr inbounds %struct.GPR, %struct.GPR* %13040, i32 0, i32 33
  %13042 = getelementptr inbounds %struct.Reg, %struct.Reg* %13041, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %13042 to i64*
  %13043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13044 = getelementptr inbounds %struct.GPR, %struct.GPR* %13043, i32 0, i32 1
  %13045 = getelementptr inbounds %struct.Reg, %struct.Reg* %13044, i32 0, i32 0
  %RAX.i309 = bitcast %union.anon* %13045 to i64*
  %13046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13047 = getelementptr inbounds %struct.GPR, %struct.GPR* %13046, i32 0, i32 5
  %13048 = getelementptr inbounds %struct.Reg, %struct.Reg* %13047, i32 0, i32 0
  %RCX.i310 = bitcast %union.anon* %13048 to i64*
  %13049 = load i64, i64* %RAX.i309
  %13050 = load i64, i64* %RCX.i310
  %13051 = load i64, i64* %PC.i308
  %13052 = add i64 %13051, 3
  store i64 %13052, i64* %PC.i308
  %13053 = add i64 %13050, %13049
  store i64 %13053, i64* %RAX.i309, align 8
  %13054 = icmp ult i64 %13053, %13049
  %13055 = icmp ult i64 %13053, %13050
  %13056 = or i1 %13054, %13055
  %13057 = zext i1 %13056 to i8
  %13058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13057, i8* %13058, align 1
  %13059 = trunc i64 %13053 to i32
  %13060 = and i32 %13059, 255
  %13061 = call i32 @llvm.ctpop.i32(i32 %13060)
  %13062 = trunc i32 %13061 to i8
  %13063 = and i8 %13062, 1
  %13064 = xor i8 %13063, 1
  %13065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13064, i8* %13065, align 1
  %13066 = xor i64 %13050, %13049
  %13067 = xor i64 %13066, %13053
  %13068 = lshr i64 %13067, 4
  %13069 = trunc i64 %13068 to i8
  %13070 = and i8 %13069, 1
  %13071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13070, i8* %13071, align 1
  %13072 = icmp eq i64 %13053, 0
  %13073 = zext i1 %13072 to i8
  %13074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13073, i8* %13074, align 1
  %13075 = lshr i64 %13053, 63
  %13076 = trunc i64 %13075 to i8
  %13077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13076, i8* %13077, align 1
  %13078 = lshr i64 %13049, 63
  %13079 = lshr i64 %13050, 63
  %13080 = xor i64 %13075, %13078
  %13081 = xor i64 %13075, %13079
  %13082 = add i64 %13080, %13081
  %13083 = icmp eq i64 %13082, 2
  %13084 = zext i1 %13083 to i8
  %13085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13084, i8* %13085, align 1
  store %struct.Memory* %loadMem_40cb03, %struct.Memory** %MEMORY
  %loadMem_40cb06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13087 = getelementptr inbounds %struct.GPR, %struct.GPR* %13086, i32 0, i32 33
  %13088 = getelementptr inbounds %struct.Reg, %struct.Reg* %13087, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %13088 to i64*
  %13089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13090 = getelementptr inbounds %struct.GPR, %struct.GPR* %13089, i32 0, i32 1
  %13091 = getelementptr inbounds %struct.Reg, %struct.Reg* %13090, i32 0, i32 0
  %RAX.i307 = bitcast %union.anon* %13091 to i64*
  %13092 = load i64, i64* %RAX.i307
  %13093 = add i64 %13092, 12
  %13094 = load i64, i64* %PC.i306
  %13095 = add i64 %13094, 4
  store i64 %13095, i64* %PC.i306
  %13096 = inttoptr i64 %13093 to i32*
  %13097 = load i32, i32* %13096
  %13098 = sub i32 %13097, 20
  %13099 = icmp ult i32 %13097, 20
  %13100 = zext i1 %13099 to i8
  %13101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13100, i8* %13101, align 1
  %13102 = and i32 %13098, 255
  %13103 = call i32 @llvm.ctpop.i32(i32 %13102)
  %13104 = trunc i32 %13103 to i8
  %13105 = and i8 %13104, 1
  %13106 = xor i8 %13105, 1
  %13107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13106, i8* %13107, align 1
  %13108 = xor i32 %13097, 20
  %13109 = xor i32 %13108, %13098
  %13110 = lshr i32 %13109, 4
  %13111 = trunc i32 %13110 to i8
  %13112 = and i8 %13111, 1
  %13113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13112, i8* %13113, align 1
  %13114 = icmp eq i32 %13098, 0
  %13115 = zext i1 %13114 to i8
  %13116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13115, i8* %13116, align 1
  %13117 = lshr i32 %13098, 31
  %13118 = trunc i32 %13117 to i8
  %13119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13118, i8* %13119, align 1
  %13120 = lshr i32 %13097, 31
  %13121 = xor i32 %13117, %13120
  %13122 = add i32 %13121, %13120
  %13123 = icmp eq i32 %13122, 2
  %13124 = zext i1 %13123 to i8
  %13125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13124, i8* %13125, align 1
  store %struct.Memory* %loadMem_40cb06, %struct.Memory** %MEMORY
  %loadMem_40cb0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13127 = getelementptr inbounds %struct.GPR, %struct.GPR* %13126, i32 0, i32 33
  %13128 = getelementptr inbounds %struct.Reg, %struct.Reg* %13127, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %13128 to i64*
  %13129 = load i64, i64* %PC.i305
  %13130 = add i64 %13129, 61
  %13131 = load i64, i64* %PC.i305
  %13132 = add i64 %13131, 6
  %13133 = load i64, i64* %PC.i305
  %13134 = add i64 %13133, 6
  store i64 %13134, i64* %PC.i305
  %13135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13136 = load i8, i8* %13135, align 1
  %13137 = icmp ne i8 %13136, 0
  %13138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13139 = load i8, i8* %13138, align 1
  %13140 = icmp ne i8 %13139, 0
  %13141 = xor i1 %13137, %13140
  %13142 = xor i1 %13141, true
  %13143 = zext i1 %13142 to i8
  store i8 %13143, i8* %BRANCH_TAKEN, align 1
  %13144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13145 = select i1 %13141, i64 %13132, i64 %13130
  store i64 %13145, i64* %13144, align 8
  store %struct.Memory* %loadMem_40cb0a, %struct.Memory** %MEMORY
  %loadBr_40cb0a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cb0a = icmp eq i8 %loadBr_40cb0a, 1
  br i1 %cmpBr_40cb0a, label %block_.L_40cb47, label %block_40cb10

block_40cb10:                                     ; preds = %block_.L_40caee
  %loadMem_40cb10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13147 = getelementptr inbounds %struct.GPR, %struct.GPR* %13146, i32 0, i32 33
  %13148 = getelementptr inbounds %struct.Reg, %struct.Reg* %13147, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %13148 to i64*
  %13149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13150 = getelementptr inbounds %struct.GPR, %struct.GPR* %13149, i32 0, i32 1
  %13151 = getelementptr inbounds %struct.Reg, %struct.Reg* %13150, i32 0, i32 0
  %RAX.i304 = bitcast %union.anon* %13151 to i64*
  %13152 = load i64, i64* %PC.i303
  %13153 = add i64 %13152, 10
  store i64 %13153, i64* %PC.i303
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i304, align 8
  store %struct.Memory* %loadMem_40cb10, %struct.Memory** %MEMORY
  %loadMem_40cb1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13155 = getelementptr inbounds %struct.GPR, %struct.GPR* %13154, i32 0, i32 33
  %13156 = getelementptr inbounds %struct.Reg, %struct.Reg* %13155, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %13156 to i64*
  %13157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13158 = getelementptr inbounds %struct.GPR, %struct.GPR* %13157, i32 0, i32 5
  %13159 = getelementptr inbounds %struct.Reg, %struct.Reg* %13158, i32 0, i32 0
  %RCX.i301 = bitcast %union.anon* %13159 to i64*
  %13160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13161 = getelementptr inbounds %struct.GPR, %struct.GPR* %13160, i32 0, i32 15
  %13162 = getelementptr inbounds %struct.Reg, %struct.Reg* %13161, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %13162 to i64*
  %13163 = load i64, i64* %RBP.i302
  %13164 = sub i64 %13163, 4
  %13165 = load i64, i64* %PC.i300
  %13166 = add i64 %13165, 3
  store i64 %13166, i64* %PC.i300
  %13167 = inttoptr i64 %13164 to i32*
  %13168 = load i32, i32* %13167
  %13169 = zext i32 %13168 to i64
  store i64 %13169, i64* %RCX.i301, align 8
  store %struct.Memory* %loadMem_40cb1a, %struct.Memory** %MEMORY
  %loadMem_40cb1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13171 = getelementptr inbounds %struct.GPR, %struct.GPR* %13170, i32 0, i32 33
  %13172 = getelementptr inbounds %struct.Reg, %struct.Reg* %13171, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %13172 to i64*
  %13173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13174 = getelementptr inbounds %struct.GPR, %struct.GPR* %13173, i32 0, i32 5
  %13175 = getelementptr inbounds %struct.Reg, %struct.Reg* %13174, i32 0, i32 0
  %RCX.i299 = bitcast %union.anon* %13175 to i64*
  %13176 = load i64, i64* %RCX.i299
  %13177 = load i64, i64* %PC.i298
  %13178 = add i64 %13177, 3
  store i64 %13178, i64* %PC.i298
  %13179 = trunc i64 %13176 to i32
  %13180 = add i32 1, %13179
  %13181 = zext i32 %13180 to i64
  store i64 %13181, i64* %RCX.i299, align 8
  %13182 = icmp ult i32 %13180, %13179
  %13183 = icmp ult i32 %13180, 1
  %13184 = or i1 %13182, %13183
  %13185 = zext i1 %13184 to i8
  %13186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13185, i8* %13186, align 1
  %13187 = and i32 %13180, 255
  %13188 = call i32 @llvm.ctpop.i32(i32 %13187)
  %13189 = trunc i32 %13188 to i8
  %13190 = and i8 %13189, 1
  %13191 = xor i8 %13190, 1
  %13192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13191, i8* %13192, align 1
  %13193 = xor i64 1, %13176
  %13194 = trunc i64 %13193 to i32
  %13195 = xor i32 %13194, %13180
  %13196 = lshr i32 %13195, 4
  %13197 = trunc i32 %13196 to i8
  %13198 = and i8 %13197, 1
  %13199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13198, i8* %13199, align 1
  %13200 = icmp eq i32 %13180, 0
  %13201 = zext i1 %13200 to i8
  %13202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13201, i8* %13202, align 1
  %13203 = lshr i32 %13180, 31
  %13204 = trunc i32 %13203 to i8
  %13205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13204, i8* %13205, align 1
  %13206 = lshr i32 %13179, 31
  %13207 = xor i32 %13203, %13206
  %13208 = add i32 %13207, %13203
  %13209 = icmp eq i32 %13208, 2
  %13210 = zext i1 %13209 to i8
  %13211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13210, i8* %13211, align 1
  store %struct.Memory* %loadMem_40cb1d, %struct.Memory** %MEMORY
  %loadMem_40cb20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13213 = getelementptr inbounds %struct.GPR, %struct.GPR* %13212, i32 0, i32 33
  %13214 = getelementptr inbounds %struct.Reg, %struct.Reg* %13213, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %13214 to i64*
  %13215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13216 = getelementptr inbounds %struct.GPR, %struct.GPR* %13215, i32 0, i32 7
  %13217 = getelementptr inbounds %struct.Reg, %struct.Reg* %13216, i32 0, i32 0
  %RDX.i296 = bitcast %union.anon* %13217 to i64*
  %13218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13219 = getelementptr inbounds %struct.GPR, %struct.GPR* %13218, i32 0, i32 15
  %13220 = getelementptr inbounds %struct.Reg, %struct.Reg* %13219, i32 0, i32 0
  %RBP.i297 = bitcast %union.anon* %13220 to i64*
  %13221 = load i64, i64* %RBP.i297
  %13222 = sub i64 %13221, 8
  %13223 = load i64, i64* %PC.i295
  %13224 = add i64 %13223, 4
  store i64 %13224, i64* %PC.i295
  %13225 = inttoptr i64 %13222 to i32*
  %13226 = load i32, i32* %13225
  %13227 = sext i32 %13226 to i64
  store i64 %13227, i64* %RDX.i296, align 8
  store %struct.Memory* %loadMem_40cb20, %struct.Memory** %MEMORY
  %loadMem_40cb24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13229 = getelementptr inbounds %struct.GPR, %struct.GPR* %13228, i32 0, i32 33
  %13230 = getelementptr inbounds %struct.Reg, %struct.Reg* %13229, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %13230 to i64*
  %13231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13232 = getelementptr inbounds %struct.GPR, %struct.GPR* %13231, i32 0, i32 7
  %13233 = getelementptr inbounds %struct.Reg, %struct.Reg* %13232, i32 0, i32 0
  %RDX.i294 = bitcast %union.anon* %13233 to i64*
  %13234 = load i64, i64* %RDX.i294
  %13235 = load i64, i64* %PC.i293
  %13236 = add i64 %13235, 7
  store i64 %13236, i64* %PC.i293
  %13237 = sext i64 %13234 to i128
  %13238 = and i128 %13237, -18446744073709551616
  %13239 = zext i64 %13234 to i128
  %13240 = or i128 %13238, %13239
  %13241 = mul i128 744, %13240
  %13242 = trunc i128 %13241 to i64
  store i64 %13242, i64* %RDX.i294, align 8
  %13243 = sext i64 %13242 to i128
  %13244 = icmp ne i128 %13243, %13241
  %13245 = zext i1 %13244 to i8
  %13246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13245, i8* %13246, align 1
  %13247 = trunc i128 %13241 to i32
  %13248 = and i32 %13247, 255
  %13249 = call i32 @llvm.ctpop.i32(i32 %13248)
  %13250 = trunc i32 %13249 to i8
  %13251 = and i8 %13250, 1
  %13252 = xor i8 %13251, 1
  %13253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13252, i8* %13253, align 1
  %13254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13254, align 1
  %13255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13255, align 1
  %13256 = lshr i64 %13242, 63
  %13257 = trunc i64 %13256 to i8
  %13258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13257, i8* %13258, align 1
  %13259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13245, i8* %13259, align 1
  store %struct.Memory* %loadMem_40cb24, %struct.Memory** %MEMORY
  %loadMem_40cb2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13261 = getelementptr inbounds %struct.GPR, %struct.GPR* %13260, i32 0, i32 33
  %13262 = getelementptr inbounds %struct.Reg, %struct.Reg* %13261, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %13262 to i64*
  %13263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13264 = getelementptr inbounds %struct.GPR, %struct.GPR* %13263, i32 0, i32 1
  %13265 = getelementptr inbounds %struct.Reg, %struct.Reg* %13264, i32 0, i32 0
  %RAX.i291 = bitcast %union.anon* %13265 to i64*
  %13266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13267 = getelementptr inbounds %struct.GPR, %struct.GPR* %13266, i32 0, i32 9
  %13268 = getelementptr inbounds %struct.Reg, %struct.Reg* %13267, i32 0, i32 0
  %RSI.i292 = bitcast %union.anon* %13268 to i64*
  %13269 = load i64, i64* %RAX.i291
  %13270 = load i64, i64* %PC.i290
  %13271 = add i64 %13270, 3
  store i64 %13271, i64* %PC.i290
  store i64 %13269, i64* %RSI.i292, align 8
  store %struct.Memory* %loadMem_40cb2b, %struct.Memory** %MEMORY
  %loadMem_40cb2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13273 = getelementptr inbounds %struct.GPR, %struct.GPR* %13272, i32 0, i32 33
  %13274 = getelementptr inbounds %struct.Reg, %struct.Reg* %13273, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %13274 to i64*
  %13275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13276 = getelementptr inbounds %struct.GPR, %struct.GPR* %13275, i32 0, i32 7
  %13277 = getelementptr inbounds %struct.Reg, %struct.Reg* %13276, i32 0, i32 0
  %RDX.i288 = bitcast %union.anon* %13277 to i64*
  %13278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13279 = getelementptr inbounds %struct.GPR, %struct.GPR* %13278, i32 0, i32 9
  %13280 = getelementptr inbounds %struct.Reg, %struct.Reg* %13279, i32 0, i32 0
  %RSI.i289 = bitcast %union.anon* %13280 to i64*
  %13281 = load i64, i64* %RSI.i289
  %13282 = load i64, i64* %RDX.i288
  %13283 = load i64, i64* %PC.i287
  %13284 = add i64 %13283, 3
  store i64 %13284, i64* %PC.i287
  %13285 = add i64 %13282, %13281
  store i64 %13285, i64* %RSI.i289, align 8
  %13286 = icmp ult i64 %13285, %13281
  %13287 = icmp ult i64 %13285, %13282
  %13288 = or i1 %13286, %13287
  %13289 = zext i1 %13288 to i8
  %13290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13289, i8* %13290, align 1
  %13291 = trunc i64 %13285 to i32
  %13292 = and i32 %13291, 255
  %13293 = call i32 @llvm.ctpop.i32(i32 %13292)
  %13294 = trunc i32 %13293 to i8
  %13295 = and i8 %13294, 1
  %13296 = xor i8 %13295, 1
  %13297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13296, i8* %13297, align 1
  %13298 = xor i64 %13282, %13281
  %13299 = xor i64 %13298, %13285
  %13300 = lshr i64 %13299, 4
  %13301 = trunc i64 %13300 to i8
  %13302 = and i8 %13301, 1
  %13303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13302, i8* %13303, align 1
  %13304 = icmp eq i64 %13285, 0
  %13305 = zext i1 %13304 to i8
  %13306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13305, i8* %13306, align 1
  %13307 = lshr i64 %13285, 63
  %13308 = trunc i64 %13307 to i8
  %13309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13308, i8* %13309, align 1
  %13310 = lshr i64 %13281, 63
  %13311 = lshr i64 %13282, 63
  %13312 = xor i64 %13307, %13310
  %13313 = xor i64 %13307, %13311
  %13314 = add i64 %13312, %13313
  %13315 = icmp eq i64 %13314, 2
  %13316 = zext i1 %13315 to i8
  %13317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13316, i8* %13317, align 1
  store %struct.Memory* %loadMem_40cb2e, %struct.Memory** %MEMORY
  %loadMem_40cb31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13319 = getelementptr inbounds %struct.GPR, %struct.GPR* %13318, i32 0, i32 33
  %13320 = getelementptr inbounds %struct.Reg, %struct.Reg* %13319, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %13320 to i64*
  %13321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13322 = getelementptr inbounds %struct.GPR, %struct.GPR* %13321, i32 0, i32 7
  %13323 = getelementptr inbounds %struct.Reg, %struct.Reg* %13322, i32 0, i32 0
  %RDX.i285 = bitcast %union.anon* %13323 to i64*
  %13324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13325 = getelementptr inbounds %struct.GPR, %struct.GPR* %13324, i32 0, i32 15
  %13326 = getelementptr inbounds %struct.Reg, %struct.Reg* %13325, i32 0, i32 0
  %RBP.i286 = bitcast %union.anon* %13326 to i64*
  %13327 = load i64, i64* %RBP.i286
  %13328 = sub i64 %13327, 8
  %13329 = load i64, i64* %PC.i284
  %13330 = add i64 %13329, 4
  store i64 %13330, i64* %PC.i284
  %13331 = inttoptr i64 %13328 to i32*
  %13332 = load i32, i32* %13331
  %13333 = sext i32 %13332 to i64
  store i64 %13333, i64* %RDX.i285, align 8
  store %struct.Memory* %loadMem_40cb31, %struct.Memory** %MEMORY
  %loadMem_40cb35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13335 = getelementptr inbounds %struct.GPR, %struct.GPR* %13334, i32 0, i32 33
  %13336 = getelementptr inbounds %struct.Reg, %struct.Reg* %13335, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %13336 to i64*
  %13337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13338 = getelementptr inbounds %struct.GPR, %struct.GPR* %13337, i32 0, i32 7
  %13339 = getelementptr inbounds %struct.Reg, %struct.Reg* %13338, i32 0, i32 0
  %RDX.i283 = bitcast %union.anon* %13339 to i64*
  %13340 = load i64, i64* %RDX.i283
  %13341 = load i64, i64* %PC.i282
  %13342 = add i64 %13341, 7
  store i64 %13342, i64* %PC.i282
  %13343 = sext i64 %13340 to i128
  %13344 = and i128 %13343, -18446744073709551616
  %13345 = zext i64 %13340 to i128
  %13346 = or i128 %13344, %13345
  %13347 = mul i128 744, %13346
  %13348 = trunc i128 %13347 to i64
  store i64 %13348, i64* %RDX.i283, align 8
  %13349 = sext i64 %13348 to i128
  %13350 = icmp ne i128 %13349, %13347
  %13351 = zext i1 %13350 to i8
  %13352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13351, i8* %13352, align 1
  %13353 = trunc i128 %13347 to i32
  %13354 = and i32 %13353, 255
  %13355 = call i32 @llvm.ctpop.i32(i32 %13354)
  %13356 = trunc i32 %13355 to i8
  %13357 = and i8 %13356, 1
  %13358 = xor i8 %13357, 1
  %13359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13358, i8* %13359, align 1
  %13360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13360, align 1
  %13361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13361, align 1
  %13362 = lshr i64 %13348, 63
  %13363 = trunc i64 %13362 to i8
  %13364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13363, i8* %13364, align 1
  %13365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13351, i8* %13365, align 1
  store %struct.Memory* %loadMem_40cb35, %struct.Memory** %MEMORY
  %loadMem_40cb3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13367 = getelementptr inbounds %struct.GPR, %struct.GPR* %13366, i32 0, i32 33
  %13368 = getelementptr inbounds %struct.Reg, %struct.Reg* %13367, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %13368 to i64*
  %13369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13370 = getelementptr inbounds %struct.GPR, %struct.GPR* %13369, i32 0, i32 1
  %13371 = getelementptr inbounds %struct.Reg, %struct.Reg* %13370, i32 0, i32 0
  %RAX.i280 = bitcast %union.anon* %13371 to i64*
  %13372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13373 = getelementptr inbounds %struct.GPR, %struct.GPR* %13372, i32 0, i32 7
  %13374 = getelementptr inbounds %struct.Reg, %struct.Reg* %13373, i32 0, i32 0
  %RDX.i281 = bitcast %union.anon* %13374 to i64*
  %13375 = load i64, i64* %RAX.i280
  %13376 = load i64, i64* %RDX.i281
  %13377 = load i64, i64* %PC.i279
  %13378 = add i64 %13377, 3
  store i64 %13378, i64* %PC.i279
  %13379 = add i64 %13376, %13375
  store i64 %13379, i64* %RAX.i280, align 8
  %13380 = icmp ult i64 %13379, %13375
  %13381 = icmp ult i64 %13379, %13376
  %13382 = or i1 %13380, %13381
  %13383 = zext i1 %13382 to i8
  %13384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13383, i8* %13384, align 1
  %13385 = trunc i64 %13379 to i32
  %13386 = and i32 %13385, 255
  %13387 = call i32 @llvm.ctpop.i32(i32 %13386)
  %13388 = trunc i32 %13387 to i8
  %13389 = and i8 %13388, 1
  %13390 = xor i8 %13389, 1
  %13391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13390, i8* %13391, align 1
  %13392 = xor i64 %13376, %13375
  %13393 = xor i64 %13392, %13379
  %13394 = lshr i64 %13393, 4
  %13395 = trunc i64 %13394 to i8
  %13396 = and i8 %13395, 1
  %13397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13396, i8* %13397, align 1
  %13398 = icmp eq i64 %13379, 0
  %13399 = zext i1 %13398 to i8
  %13400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13399, i8* %13400, align 1
  %13401 = lshr i64 %13379, 63
  %13402 = trunc i64 %13401 to i8
  %13403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13402, i8* %13403, align 1
  %13404 = lshr i64 %13375, 63
  %13405 = lshr i64 %13376, 63
  %13406 = xor i64 %13401, %13404
  %13407 = xor i64 %13401, %13405
  %13408 = add i64 %13406, %13407
  %13409 = icmp eq i64 %13408, 2
  %13410 = zext i1 %13409 to i8
  %13411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13410, i8* %13411, align 1
  store %struct.Memory* %loadMem_40cb3c, %struct.Memory** %MEMORY
  %loadMem_40cb3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13413 = getelementptr inbounds %struct.GPR, %struct.GPR* %13412, i32 0, i32 33
  %13414 = getelementptr inbounds %struct.Reg, %struct.Reg* %13413, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %13414 to i64*
  %13415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13416 = getelementptr inbounds %struct.GPR, %struct.GPR* %13415, i32 0, i32 1
  %13417 = getelementptr inbounds %struct.Reg, %struct.Reg* %13416, i32 0, i32 0
  %RAX.i278 = bitcast %union.anon* %13417 to i64*
  %13418 = load i64, i64* %RAX.i278
  %13419 = add i64 %13418, 12
  %13420 = load i64, i64* %PC.i277
  %13421 = add i64 %13420, 4
  store i64 %13421, i64* %PC.i277
  %13422 = inttoptr i64 %13419 to i32*
  %13423 = load i32, i32* %13422
  %13424 = sext i32 %13423 to i64
  store i64 %13424, i64* %RAX.i278, align 8
  store %struct.Memory* %loadMem_40cb3f, %struct.Memory** %MEMORY
  %loadMem_40cb43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13426 = getelementptr inbounds %struct.GPR, %struct.GPR* %13425, i32 0, i32 33
  %13427 = getelementptr inbounds %struct.Reg, %struct.Reg* %13426, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %13427 to i64*
  %13428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13429 = getelementptr inbounds %struct.GPR, %struct.GPR* %13428, i32 0, i32 5
  %13430 = getelementptr inbounds %struct.Reg, %struct.Reg* %13429, i32 0, i32 0
  %ECX.i274 = bitcast %union.anon* %13430 to i32*
  %13431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13432 = getelementptr inbounds %struct.GPR, %struct.GPR* %13431, i32 0, i32 1
  %13433 = getelementptr inbounds %struct.Reg, %struct.Reg* %13432, i32 0, i32 0
  %RAX.i275 = bitcast %union.anon* %13433 to i64*
  %13434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13435 = getelementptr inbounds %struct.GPR, %struct.GPR* %13434, i32 0, i32 9
  %13436 = getelementptr inbounds %struct.Reg, %struct.Reg* %13435, i32 0, i32 0
  %RSI.i276 = bitcast %union.anon* %13436 to i64*
  %13437 = load i64, i64* %RSI.i276
  %13438 = load i64, i64* %RAX.i275
  %13439 = mul i64 %13438, 4
  %13440 = add i64 %13437, 16
  %13441 = add i64 %13440, %13439
  %13442 = load i32, i32* %ECX.i274
  %13443 = zext i32 %13442 to i64
  %13444 = load i64, i64* %PC.i273
  %13445 = add i64 %13444, 4
  store i64 %13445, i64* %PC.i273
  %13446 = inttoptr i64 %13441 to i32*
  store i32 %13442, i32* %13446
  store %struct.Memory* %loadMem_40cb43, %struct.Memory** %MEMORY
  br label %block_.L_40cb47

block_.L_40cb47:                                  ; preds = %block_40cb10, %block_.L_40caee
  %loadMem_40cb47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13448 = getelementptr inbounds %struct.GPR, %struct.GPR* %13447, i32 0, i32 33
  %13449 = getelementptr inbounds %struct.Reg, %struct.Reg* %13448, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %13449 to i64*
  %13450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13451 = getelementptr inbounds %struct.GPR, %struct.GPR* %13450, i32 0, i32 1
  %13452 = getelementptr inbounds %struct.Reg, %struct.Reg* %13451, i32 0, i32 0
  %RAX.i272 = bitcast %union.anon* %13452 to i64*
  %13453 = load i64, i64* %PC.i271
  %13454 = add i64 %13453, 10
  store i64 %13454, i64* %PC.i271
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i272, align 8
  store %struct.Memory* %loadMem_40cb47, %struct.Memory** %MEMORY
  %loadMem_40cb51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13456 = getelementptr inbounds %struct.GPR, %struct.GPR* %13455, i32 0, i32 33
  %13457 = getelementptr inbounds %struct.Reg, %struct.Reg* %13456, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %13457 to i64*
  %13458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13459 = getelementptr inbounds %struct.GPR, %struct.GPR* %13458, i32 0, i32 5
  %13460 = getelementptr inbounds %struct.Reg, %struct.Reg* %13459, i32 0, i32 0
  %RCX.i269 = bitcast %union.anon* %13460 to i64*
  %13461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13462 = getelementptr inbounds %struct.GPR, %struct.GPR* %13461, i32 0, i32 15
  %13463 = getelementptr inbounds %struct.Reg, %struct.Reg* %13462, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %13463 to i64*
  %13464 = load i64, i64* %RBP.i270
  %13465 = sub i64 %13464, 8
  %13466 = load i64, i64* %PC.i268
  %13467 = add i64 %13466, 4
  store i64 %13467, i64* %PC.i268
  %13468 = inttoptr i64 %13465 to i32*
  %13469 = load i32, i32* %13468
  %13470 = sext i32 %13469 to i64
  store i64 %13470, i64* %RCX.i269, align 8
  store %struct.Memory* %loadMem_40cb51, %struct.Memory** %MEMORY
  %loadMem_40cb55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13472 = getelementptr inbounds %struct.GPR, %struct.GPR* %13471, i32 0, i32 33
  %13473 = getelementptr inbounds %struct.Reg, %struct.Reg* %13472, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %13473 to i64*
  %13474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13475 = getelementptr inbounds %struct.GPR, %struct.GPR* %13474, i32 0, i32 5
  %13476 = getelementptr inbounds %struct.Reg, %struct.Reg* %13475, i32 0, i32 0
  %RCX.i267 = bitcast %union.anon* %13476 to i64*
  %13477 = load i64, i64* %RCX.i267
  %13478 = load i64, i64* %PC.i266
  %13479 = add i64 %13478, 7
  store i64 %13479, i64* %PC.i266
  %13480 = sext i64 %13477 to i128
  %13481 = and i128 %13480, -18446744073709551616
  %13482 = zext i64 %13477 to i128
  %13483 = or i128 %13481, %13482
  %13484 = mul i128 744, %13483
  %13485 = trunc i128 %13484 to i64
  store i64 %13485, i64* %RCX.i267, align 8
  %13486 = sext i64 %13485 to i128
  %13487 = icmp ne i128 %13486, %13484
  %13488 = zext i1 %13487 to i8
  %13489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13488, i8* %13489, align 1
  %13490 = trunc i128 %13484 to i32
  %13491 = and i32 %13490, 255
  %13492 = call i32 @llvm.ctpop.i32(i32 %13491)
  %13493 = trunc i32 %13492 to i8
  %13494 = and i8 %13493, 1
  %13495 = xor i8 %13494, 1
  %13496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13495, i8* %13496, align 1
  %13497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13497, align 1
  %13498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13498, align 1
  %13499 = lshr i64 %13485, 63
  %13500 = trunc i64 %13499 to i8
  %13501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13500, i8* %13501, align 1
  %13502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13488, i8* %13502, align 1
  store %struct.Memory* %loadMem_40cb55, %struct.Memory** %MEMORY
  %loadMem_40cb5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13504 = getelementptr inbounds %struct.GPR, %struct.GPR* %13503, i32 0, i32 33
  %13505 = getelementptr inbounds %struct.Reg, %struct.Reg* %13504, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %13505 to i64*
  %13506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13507 = getelementptr inbounds %struct.GPR, %struct.GPR* %13506, i32 0, i32 1
  %13508 = getelementptr inbounds %struct.Reg, %struct.Reg* %13507, i32 0, i32 0
  %RAX.i264 = bitcast %union.anon* %13508 to i64*
  %13509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13510 = getelementptr inbounds %struct.GPR, %struct.GPR* %13509, i32 0, i32 5
  %13511 = getelementptr inbounds %struct.Reg, %struct.Reg* %13510, i32 0, i32 0
  %RCX.i265 = bitcast %union.anon* %13511 to i64*
  %13512 = load i64, i64* %RAX.i264
  %13513 = load i64, i64* %RCX.i265
  %13514 = load i64, i64* %PC.i263
  %13515 = add i64 %13514, 3
  store i64 %13515, i64* %PC.i263
  %13516 = add i64 %13513, %13512
  store i64 %13516, i64* %RAX.i264, align 8
  %13517 = icmp ult i64 %13516, %13512
  %13518 = icmp ult i64 %13516, %13513
  %13519 = or i1 %13517, %13518
  %13520 = zext i1 %13519 to i8
  %13521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13520, i8* %13521, align 1
  %13522 = trunc i64 %13516 to i32
  %13523 = and i32 %13522, 255
  %13524 = call i32 @llvm.ctpop.i32(i32 %13523)
  %13525 = trunc i32 %13524 to i8
  %13526 = and i8 %13525, 1
  %13527 = xor i8 %13526, 1
  %13528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13527, i8* %13528, align 1
  %13529 = xor i64 %13513, %13512
  %13530 = xor i64 %13529, %13516
  %13531 = lshr i64 %13530, 4
  %13532 = trunc i64 %13531 to i8
  %13533 = and i8 %13532, 1
  %13534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13533, i8* %13534, align 1
  %13535 = icmp eq i64 %13516, 0
  %13536 = zext i1 %13535 to i8
  %13537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13536, i8* %13537, align 1
  %13538 = lshr i64 %13516, 63
  %13539 = trunc i64 %13538 to i8
  %13540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13539, i8* %13540, align 1
  %13541 = lshr i64 %13512, 63
  %13542 = lshr i64 %13513, 63
  %13543 = xor i64 %13538, %13541
  %13544 = xor i64 %13538, %13542
  %13545 = add i64 %13543, %13544
  %13546 = icmp eq i64 %13545, 2
  %13547 = zext i1 %13546 to i8
  %13548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13547, i8* %13548, align 1
  store %struct.Memory* %loadMem_40cb5c, %struct.Memory** %MEMORY
  %loadMem_40cb5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13550 = getelementptr inbounds %struct.GPR, %struct.GPR* %13549, i32 0, i32 33
  %13551 = getelementptr inbounds %struct.Reg, %struct.Reg* %13550, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %13551 to i64*
  %13552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13553 = getelementptr inbounds %struct.GPR, %struct.GPR* %13552, i32 0, i32 1
  %13554 = getelementptr inbounds %struct.Reg, %struct.Reg* %13553, i32 0, i32 0
  %RAX.i261 = bitcast %union.anon* %13554 to i64*
  %13555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13556 = getelementptr inbounds %struct.GPR, %struct.GPR* %13555, i32 0, i32 7
  %13557 = getelementptr inbounds %struct.Reg, %struct.Reg* %13556, i32 0, i32 0
  %RDX.i262 = bitcast %union.anon* %13557 to i64*
  %13558 = load i64, i64* %RAX.i261
  %13559 = add i64 %13558, 12
  %13560 = load i64, i64* %PC.i260
  %13561 = add i64 %13560, 3
  store i64 %13561, i64* %PC.i260
  %13562 = inttoptr i64 %13559 to i32*
  %13563 = load i32, i32* %13562
  %13564 = zext i32 %13563 to i64
  store i64 %13564, i64* %RDX.i262, align 8
  store %struct.Memory* %loadMem_40cb5f, %struct.Memory** %MEMORY
  %loadMem_40cb62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13566 = getelementptr inbounds %struct.GPR, %struct.GPR* %13565, i32 0, i32 33
  %13567 = getelementptr inbounds %struct.Reg, %struct.Reg* %13566, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %13567 to i64*
  %13568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13569 = getelementptr inbounds %struct.GPR, %struct.GPR* %13568, i32 0, i32 7
  %13570 = getelementptr inbounds %struct.Reg, %struct.Reg* %13569, i32 0, i32 0
  %RDX.i259 = bitcast %union.anon* %13570 to i64*
  %13571 = load i64, i64* %RDX.i259
  %13572 = load i64, i64* %PC.i258
  %13573 = add i64 %13572, 3
  store i64 %13573, i64* %PC.i258
  %13574 = trunc i64 %13571 to i32
  %13575 = add i32 1, %13574
  %13576 = zext i32 %13575 to i64
  store i64 %13576, i64* %RDX.i259, align 8
  %13577 = icmp ult i32 %13575, %13574
  %13578 = icmp ult i32 %13575, 1
  %13579 = or i1 %13577, %13578
  %13580 = zext i1 %13579 to i8
  %13581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13580, i8* %13581, align 1
  %13582 = and i32 %13575, 255
  %13583 = call i32 @llvm.ctpop.i32(i32 %13582)
  %13584 = trunc i32 %13583 to i8
  %13585 = and i8 %13584, 1
  %13586 = xor i8 %13585, 1
  %13587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13586, i8* %13587, align 1
  %13588 = xor i64 1, %13571
  %13589 = trunc i64 %13588 to i32
  %13590 = xor i32 %13589, %13575
  %13591 = lshr i32 %13590, 4
  %13592 = trunc i32 %13591 to i8
  %13593 = and i8 %13592, 1
  %13594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13593, i8* %13594, align 1
  %13595 = icmp eq i32 %13575, 0
  %13596 = zext i1 %13595 to i8
  %13597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13596, i8* %13597, align 1
  %13598 = lshr i32 %13575, 31
  %13599 = trunc i32 %13598 to i8
  %13600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13599, i8* %13600, align 1
  %13601 = lshr i32 %13574, 31
  %13602 = xor i32 %13598, %13601
  %13603 = add i32 %13602, %13598
  %13604 = icmp eq i32 %13603, 2
  %13605 = zext i1 %13604 to i8
  %13606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13605, i8* %13606, align 1
  store %struct.Memory* %loadMem_40cb62, %struct.Memory** %MEMORY
  %loadMem_40cb65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13608 = getelementptr inbounds %struct.GPR, %struct.GPR* %13607, i32 0, i32 33
  %13609 = getelementptr inbounds %struct.Reg, %struct.Reg* %13608, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %13609 to i64*
  %13610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13611 = getelementptr inbounds %struct.GPR, %struct.GPR* %13610, i32 0, i32 7
  %13612 = getelementptr inbounds %struct.Reg, %struct.Reg* %13611, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %13612 to i32*
  %13613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13614 = getelementptr inbounds %struct.GPR, %struct.GPR* %13613, i32 0, i32 1
  %13615 = getelementptr inbounds %struct.Reg, %struct.Reg* %13614, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %13615 to i64*
  %13616 = load i64, i64* %RAX.i257
  %13617 = add i64 %13616, 12
  %13618 = load i32, i32* %EDX.i
  %13619 = zext i32 %13618 to i64
  %13620 = load i64, i64* %PC.i256
  %13621 = add i64 %13620, 3
  store i64 %13621, i64* %PC.i256
  %13622 = inttoptr i64 %13617 to i32*
  store i32 %13618, i32* %13622
  store %struct.Memory* %loadMem_40cb65, %struct.Memory** %MEMORY
  %loadMem_40cb68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13624 = getelementptr inbounds %struct.GPR, %struct.GPR* %13623, i32 0, i32 33
  %13625 = getelementptr inbounds %struct.Reg, %struct.Reg* %13624, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %13625 to i64*
  %13626 = load i64, i64* %PC.i255
  %13627 = add i64 %13626, 480
  %13628 = load i64, i64* %PC.i255
  %13629 = add i64 %13628, 5
  store i64 %13629, i64* %PC.i255
  %13630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13627, i64* %13630, align 8
  store %struct.Memory* %loadMem_40cb68, %struct.Memory** %MEMORY
  br label %block_.L_40cd48

block_.L_40cb6d:                                  ; preds = %block_40cacc, %block_.L_40cab2
  %loadMem_40cb6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13632 = getelementptr inbounds %struct.GPR, %struct.GPR* %13631, i32 0, i32 33
  %13633 = getelementptr inbounds %struct.Reg, %struct.Reg* %13632, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %13633 to i64*
  %13634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13635 = getelementptr inbounds %struct.GPR, %struct.GPR* %13634, i32 0, i32 1
  %13636 = getelementptr inbounds %struct.Reg, %struct.Reg* %13635, i32 0, i32 0
  %RAX.i253 = bitcast %union.anon* %13636 to i64*
  %13637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13638 = getelementptr inbounds %struct.GPR, %struct.GPR* %13637, i32 0, i32 15
  %13639 = getelementptr inbounds %struct.Reg, %struct.Reg* %13638, i32 0, i32 0
  %RBP.i254 = bitcast %union.anon* %13639 to i64*
  %13640 = load i64, i64* %RBP.i254
  %13641 = sub i64 %13640, 4
  %13642 = load i64, i64* %PC.i252
  %13643 = add i64 %13642, 3
  store i64 %13643, i64* %PC.i252
  %13644 = inttoptr i64 %13641 to i32*
  %13645 = load i32, i32* %13644
  %13646 = zext i32 %13645 to i64
  store i64 %13646, i64* %RAX.i253, align 8
  store %struct.Memory* %loadMem_40cb6d, %struct.Memory** %MEMORY
  %loadMem_40cb70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13648 = getelementptr inbounds %struct.GPR, %struct.GPR* %13647, i32 0, i32 33
  %13649 = getelementptr inbounds %struct.Reg, %struct.Reg* %13648, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %13649 to i64*
  %13650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13651 = getelementptr inbounds %struct.GPR, %struct.GPR* %13650, i32 0, i32 1
  %13652 = getelementptr inbounds %struct.Reg, %struct.Reg* %13651, i32 0, i32 0
  %RAX.i251 = bitcast %union.anon* %13652 to i64*
  %13653 = load i64, i64* %RAX.i251
  %13654 = load i64, i64* %PC.i250
  %13655 = add i64 %13654, 3
  store i64 %13655, i64* %PC.i250
  %13656 = trunc i64 %13653 to i32
  %13657 = add i32 1, %13656
  %13658 = zext i32 %13657 to i64
  store i64 %13658, i64* %RAX.i251, align 8
  %13659 = icmp ult i32 %13657, %13656
  %13660 = icmp ult i32 %13657, 1
  %13661 = or i1 %13659, %13660
  %13662 = zext i1 %13661 to i8
  %13663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13662, i8* %13663, align 1
  %13664 = and i32 %13657, 255
  %13665 = call i32 @llvm.ctpop.i32(i32 %13664)
  %13666 = trunc i32 %13665 to i8
  %13667 = and i8 %13666, 1
  %13668 = xor i8 %13667, 1
  %13669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13668, i8* %13669, align 1
  %13670 = xor i64 1, %13653
  %13671 = trunc i64 %13670 to i32
  %13672 = xor i32 %13671, %13657
  %13673 = lshr i32 %13672, 4
  %13674 = trunc i32 %13673 to i8
  %13675 = and i8 %13674, 1
  %13676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13675, i8* %13676, align 1
  %13677 = icmp eq i32 %13657, 0
  %13678 = zext i1 %13677 to i8
  %13679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13678, i8* %13679, align 1
  %13680 = lshr i32 %13657, 31
  %13681 = trunc i32 %13680 to i8
  %13682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13681, i8* %13682, align 1
  %13683 = lshr i32 %13656, 31
  %13684 = xor i32 %13680, %13683
  %13685 = add i32 %13684, %13680
  %13686 = icmp eq i32 %13685, 2
  %13687 = zext i1 %13686 to i8
  %13688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13687, i8* %13688, align 1
  store %struct.Memory* %loadMem_40cb70, %struct.Memory** %MEMORY
  %loadMem_40cb73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13690 = getelementptr inbounds %struct.GPR, %struct.GPR* %13689, i32 0, i32 33
  %13691 = getelementptr inbounds %struct.Reg, %struct.Reg* %13690, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %13691 to i64*
  %13692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13693 = getelementptr inbounds %struct.GPR, %struct.GPR* %13692, i32 0, i32 1
  %13694 = getelementptr inbounds %struct.Reg, %struct.Reg* %13693, i32 0, i32 0
  %EAX.i248 = bitcast %union.anon* %13694 to i32*
  %13695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13696 = getelementptr inbounds %struct.GPR, %struct.GPR* %13695, i32 0, i32 5
  %13697 = getelementptr inbounds %struct.Reg, %struct.Reg* %13696, i32 0, i32 0
  %RCX.i249 = bitcast %union.anon* %13697 to i64*
  %13698 = load i32, i32* %EAX.i248
  %13699 = zext i32 %13698 to i64
  %13700 = load i64, i64* %PC.i247
  %13701 = add i64 %13700, 3
  store i64 %13701, i64* %PC.i247
  %13702 = shl i64 %13699, 32
  %13703 = ashr exact i64 %13702, 32
  store i64 %13703, i64* %RCX.i249, align 8
  store %struct.Memory* %loadMem_40cb73, %struct.Memory** %MEMORY
  %loadMem_40cb76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13705 = getelementptr inbounds %struct.GPR, %struct.GPR* %13704, i32 0, i32 33
  %13706 = getelementptr inbounds %struct.Reg, %struct.Reg* %13705, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %13706 to i64*
  %13707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13708 = getelementptr inbounds %struct.GPR, %struct.GPR* %13707, i32 0, i32 1
  %13709 = getelementptr inbounds %struct.Reg, %struct.Reg* %13708, i32 0, i32 0
  %RAX.i245 = bitcast %union.anon* %13709 to i64*
  %13710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13711 = getelementptr inbounds %struct.GPR, %struct.GPR* %13710, i32 0, i32 5
  %13712 = getelementptr inbounds %struct.Reg, %struct.Reg* %13711, i32 0, i32 0
  %RCX.i246 = bitcast %union.anon* %13712 to i64*
  %13713 = load i64, i64* %RCX.i246
  %13714 = add i64 %13713, 12099168
  %13715 = load i64, i64* %PC.i244
  %13716 = add i64 %13715, 8
  store i64 %13716, i64* %PC.i244
  %13717 = inttoptr i64 %13714 to i8*
  %13718 = load i8, i8* %13717
  %13719 = zext i8 %13718 to i64
  store i64 %13719, i64* %RAX.i245, align 8
  store %struct.Memory* %loadMem_40cb76, %struct.Memory** %MEMORY
  %loadMem_40cb7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13721 = getelementptr inbounds %struct.GPR, %struct.GPR* %13720, i32 0, i32 33
  %13722 = getelementptr inbounds %struct.Reg, %struct.Reg* %13721, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %13722 to i64*
  %13723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13724 = getelementptr inbounds %struct.GPR, %struct.GPR* %13723, i32 0, i32 1
  %13725 = getelementptr inbounds %struct.Reg, %struct.Reg* %13724, i32 0, i32 0
  %EAX.i242 = bitcast %union.anon* %13725 to i32*
  %13726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13727 = getelementptr inbounds %struct.GPR, %struct.GPR* %13726, i32 0, i32 15
  %13728 = getelementptr inbounds %struct.Reg, %struct.Reg* %13727, i32 0, i32 0
  %RBP.i243 = bitcast %union.anon* %13728 to i64*
  %13729 = load i32, i32* %EAX.i242
  %13730 = zext i32 %13729 to i64
  %13731 = load i64, i64* %RBP.i243
  %13732 = sub i64 %13731, 16
  %13733 = load i64, i64* %PC.i241
  %13734 = add i64 %13733, 3
  store i64 %13734, i64* %PC.i241
  %13735 = inttoptr i64 %13732 to i32*
  %13736 = load i32, i32* %13735
  %13737 = sub i32 %13729, %13736
  %13738 = icmp ult i32 %13729, %13736
  %13739 = zext i1 %13738 to i8
  %13740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13739, i8* %13740, align 1
  %13741 = and i32 %13737, 255
  %13742 = call i32 @llvm.ctpop.i32(i32 %13741)
  %13743 = trunc i32 %13742 to i8
  %13744 = and i8 %13743, 1
  %13745 = xor i8 %13744, 1
  %13746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13745, i8* %13746, align 1
  %13747 = xor i32 %13736, %13729
  %13748 = xor i32 %13747, %13737
  %13749 = lshr i32 %13748, 4
  %13750 = trunc i32 %13749 to i8
  %13751 = and i8 %13750, 1
  %13752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13751, i8* %13752, align 1
  %13753 = icmp eq i32 %13737, 0
  %13754 = zext i1 %13753 to i8
  %13755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13754, i8* %13755, align 1
  %13756 = lshr i32 %13737, 31
  %13757 = trunc i32 %13756 to i8
  %13758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13757, i8* %13758, align 1
  %13759 = lshr i32 %13729, 31
  %13760 = lshr i32 %13736, 31
  %13761 = xor i32 %13760, %13759
  %13762 = xor i32 %13756, %13759
  %13763 = add i32 %13762, %13761
  %13764 = icmp eq i32 %13763, 2
  %13765 = zext i1 %13764 to i8
  %13766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13765, i8* %13766, align 1
  store %struct.Memory* %loadMem_40cb7e, %struct.Memory** %MEMORY
  %loadMem_40cb81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13768 = getelementptr inbounds %struct.GPR, %struct.GPR* %13767, i32 0, i32 33
  %13769 = getelementptr inbounds %struct.Reg, %struct.Reg* %13768, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %13769 to i64*
  %13770 = load i64, i64* %PC.i240
  %13771 = add i64 %13770, 347
  %13772 = load i64, i64* %PC.i240
  %13773 = add i64 %13772, 6
  %13774 = load i64, i64* %PC.i240
  %13775 = add i64 %13774, 6
  store i64 %13775, i64* %PC.i240
  %13776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13777 = load i8, i8* %13776, align 1
  %13778 = icmp eq i8 %13777, 0
  %13779 = zext i1 %13778 to i8
  store i8 %13779, i8* %BRANCH_TAKEN, align 1
  %13780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13781 = select i1 %13778, i64 %13771, i64 %13773
  store i64 %13781, i64* %13780, align 8
  store %struct.Memory* %loadMem_40cb81, %struct.Memory** %MEMORY
  %loadBr_40cb81 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cb81 = icmp eq i8 %loadBr_40cb81, 1
  br i1 %cmpBr_40cb81, label %block_.L_40ccdc, label %block_40cb87

block_40cb87:                                     ; preds = %block_.L_40cb6d
  %loadMem_40cb87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13783 = getelementptr inbounds %struct.GPR, %struct.GPR* %13782, i32 0, i32 33
  %13784 = getelementptr inbounds %struct.Reg, %struct.Reg* %13783, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %13784 to i64*
  %13785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13786 = getelementptr inbounds %struct.GPR, %struct.GPR* %13785, i32 0, i32 1
  %13787 = getelementptr inbounds %struct.Reg, %struct.Reg* %13786, i32 0, i32 0
  %RAX.i239 = bitcast %union.anon* %13787 to i64*
  %13788 = load i64, i64* %PC.i238
  %13789 = add i64 %13788, 10
  store i64 %13789, i64* %PC.i238
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i239, align 8
  store %struct.Memory* %loadMem_40cb87, %struct.Memory** %MEMORY
  %loadMem_40cb91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13791 = getelementptr inbounds %struct.GPR, %struct.GPR* %13790, i32 0, i32 33
  %13792 = getelementptr inbounds %struct.Reg, %struct.Reg* %13791, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %13792 to i64*
  %13793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13794 = getelementptr inbounds %struct.GPR, %struct.GPR* %13793, i32 0, i32 5
  %13795 = getelementptr inbounds %struct.Reg, %struct.Reg* %13794, i32 0, i32 0
  %RCX.i236 = bitcast %union.anon* %13795 to i64*
  %13796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13797 = getelementptr inbounds %struct.GPR, %struct.GPR* %13796, i32 0, i32 15
  %13798 = getelementptr inbounds %struct.Reg, %struct.Reg* %13797, i32 0, i32 0
  %RBP.i237 = bitcast %union.anon* %13798 to i64*
  %13799 = load i64, i64* %RBP.i237
  %13800 = sub i64 %13799, 4
  %13801 = load i64, i64* %PC.i235
  %13802 = add i64 %13801, 3
  store i64 %13802, i64* %PC.i235
  %13803 = inttoptr i64 %13800 to i32*
  %13804 = load i32, i32* %13803
  %13805 = zext i32 %13804 to i64
  store i64 %13805, i64* %RCX.i236, align 8
  store %struct.Memory* %loadMem_40cb91, %struct.Memory** %MEMORY
  %loadMem_40cb94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13807 = getelementptr inbounds %struct.GPR, %struct.GPR* %13806, i32 0, i32 33
  %13808 = getelementptr inbounds %struct.Reg, %struct.Reg* %13807, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %13808 to i64*
  %13809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13810 = getelementptr inbounds %struct.GPR, %struct.GPR* %13809, i32 0, i32 5
  %13811 = getelementptr inbounds %struct.Reg, %struct.Reg* %13810, i32 0, i32 0
  %RCX.i234 = bitcast %union.anon* %13811 to i64*
  %13812 = load i64, i64* %RCX.i234
  %13813 = load i64, i64* %PC.i233
  %13814 = add i64 %13813, 3
  store i64 %13814, i64* %PC.i233
  %13815 = trunc i64 %13812 to i32
  %13816 = add i32 1, %13815
  %13817 = zext i32 %13816 to i64
  store i64 %13817, i64* %RCX.i234, align 8
  %13818 = icmp ult i32 %13816, %13815
  %13819 = icmp ult i32 %13816, 1
  %13820 = or i1 %13818, %13819
  %13821 = zext i1 %13820 to i8
  %13822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13821, i8* %13822, align 1
  %13823 = and i32 %13816, 255
  %13824 = call i32 @llvm.ctpop.i32(i32 %13823)
  %13825 = trunc i32 %13824 to i8
  %13826 = and i8 %13825, 1
  %13827 = xor i8 %13826, 1
  %13828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13827, i8* %13828, align 1
  %13829 = xor i64 1, %13812
  %13830 = trunc i64 %13829 to i32
  %13831 = xor i32 %13830, %13816
  %13832 = lshr i32 %13831, 4
  %13833 = trunc i32 %13832 to i8
  %13834 = and i8 %13833, 1
  %13835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13834, i8* %13835, align 1
  %13836 = icmp eq i32 %13816, 0
  %13837 = zext i1 %13836 to i8
  %13838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13837, i8* %13838, align 1
  %13839 = lshr i32 %13816, 31
  %13840 = trunc i32 %13839 to i8
  %13841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13840, i8* %13841, align 1
  %13842 = lshr i32 %13815, 31
  %13843 = xor i32 %13839, %13842
  %13844 = add i32 %13843, %13839
  %13845 = icmp eq i32 %13844, 2
  %13846 = zext i1 %13845 to i8
  %13847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13846, i8* %13847, align 1
  store %struct.Memory* %loadMem_40cb94, %struct.Memory** %MEMORY
  %loadMem_40cb97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13849 = getelementptr inbounds %struct.GPR, %struct.GPR* %13848, i32 0, i32 33
  %13850 = getelementptr inbounds %struct.Reg, %struct.Reg* %13849, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %13850 to i64*
  %13851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13852 = getelementptr inbounds %struct.GPR, %struct.GPR* %13851, i32 0, i32 5
  %13853 = getelementptr inbounds %struct.Reg, %struct.Reg* %13852, i32 0, i32 0
  %ECX.i231 = bitcast %union.anon* %13853 to i32*
  %13854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13855 = getelementptr inbounds %struct.GPR, %struct.GPR* %13854, i32 0, i32 7
  %13856 = getelementptr inbounds %struct.Reg, %struct.Reg* %13855, i32 0, i32 0
  %RDX.i232 = bitcast %union.anon* %13856 to i64*
  %13857 = load i32, i32* %ECX.i231
  %13858 = zext i32 %13857 to i64
  %13859 = load i64, i64* %PC.i230
  %13860 = add i64 %13859, 3
  store i64 %13860, i64* %PC.i230
  %13861 = shl i64 %13858, 32
  %13862 = ashr exact i64 %13861, 32
  store i64 %13862, i64* %RDX.i232, align 8
  store %struct.Memory* %loadMem_40cb97, %struct.Memory** %MEMORY
  %loadMem_40cb9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13864 = getelementptr inbounds %struct.GPR, %struct.GPR* %13863, i32 0, i32 33
  %13865 = getelementptr inbounds %struct.Reg, %struct.Reg* %13864, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %13865 to i64*
  %13866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13867 = getelementptr inbounds %struct.GPR, %struct.GPR* %13866, i32 0, i32 7
  %13868 = getelementptr inbounds %struct.Reg, %struct.Reg* %13867, i32 0, i32 0
  %RDX.i229 = bitcast %union.anon* %13868 to i64*
  %13869 = load i64, i64* %RDX.i229
  %13870 = mul i64 %13869, 4
  %13871 = add i64 %13870, 11187184
  %13872 = load i64, i64* %PC.i228
  %13873 = add i64 %13872, 8
  store i64 %13873, i64* %PC.i228
  %13874 = inttoptr i64 %13871 to i32*
  %13875 = load i32, i32* %13874
  %13876 = sext i32 %13875 to i64
  store i64 %13876, i64* %RDX.i229, align 8
  store %struct.Memory* %loadMem_40cb9a, %struct.Memory** %MEMORY
  %loadMem_40cba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13878 = getelementptr inbounds %struct.GPR, %struct.GPR* %13877, i32 0, i32 33
  %13879 = getelementptr inbounds %struct.Reg, %struct.Reg* %13878, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %13879 to i64*
  %13880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13881 = getelementptr inbounds %struct.GPR, %struct.GPR* %13880, i32 0, i32 7
  %13882 = getelementptr inbounds %struct.Reg, %struct.Reg* %13881, i32 0, i32 0
  %RDX.i227 = bitcast %union.anon* %13882 to i64*
  %13883 = load i64, i64* %RDX.i227
  %13884 = load i64, i64* %PC.i226
  %13885 = add i64 %13884, 7
  store i64 %13885, i64* %PC.i226
  %13886 = sext i64 %13883 to i128
  %13887 = and i128 %13886, -18446744073709551616
  %13888 = zext i64 %13883 to i128
  %13889 = or i128 %13887, %13888
  %13890 = mul i128 744, %13889
  %13891 = trunc i128 %13890 to i64
  store i64 %13891, i64* %RDX.i227, align 8
  %13892 = sext i64 %13891 to i128
  %13893 = icmp ne i128 %13892, %13890
  %13894 = zext i1 %13893 to i8
  %13895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13894, i8* %13895, align 1
  %13896 = trunc i128 %13890 to i32
  %13897 = and i32 %13896, 255
  %13898 = call i32 @llvm.ctpop.i32(i32 %13897)
  %13899 = trunc i32 %13898 to i8
  %13900 = and i8 %13899, 1
  %13901 = xor i8 %13900, 1
  %13902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13901, i8* %13902, align 1
  %13903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13903, align 1
  %13904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13904, align 1
  %13905 = lshr i64 %13891, 63
  %13906 = trunc i64 %13905 to i8
  %13907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13906, i8* %13907, align 1
  %13908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13894, i8* %13908, align 1
  store %struct.Memory* %loadMem_40cba2, %struct.Memory** %MEMORY
  %loadMem_40cba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13910 = getelementptr inbounds %struct.GPR, %struct.GPR* %13909, i32 0, i32 33
  %13911 = getelementptr inbounds %struct.Reg, %struct.Reg* %13910, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %13911 to i64*
  %13912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13913 = getelementptr inbounds %struct.GPR, %struct.GPR* %13912, i32 0, i32 1
  %13914 = getelementptr inbounds %struct.Reg, %struct.Reg* %13913, i32 0, i32 0
  %RAX.i224 = bitcast %union.anon* %13914 to i64*
  %13915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13916 = getelementptr inbounds %struct.GPR, %struct.GPR* %13915, i32 0, i32 7
  %13917 = getelementptr inbounds %struct.Reg, %struct.Reg* %13916, i32 0, i32 0
  %RDX.i225 = bitcast %union.anon* %13917 to i64*
  %13918 = load i64, i64* %RAX.i224
  %13919 = load i64, i64* %RDX.i225
  %13920 = load i64, i64* %PC.i223
  %13921 = add i64 %13920, 3
  store i64 %13921, i64* %PC.i223
  %13922 = add i64 %13919, %13918
  store i64 %13922, i64* %RAX.i224, align 8
  %13923 = icmp ult i64 %13922, %13918
  %13924 = icmp ult i64 %13922, %13919
  %13925 = or i1 %13923, %13924
  %13926 = zext i1 %13925 to i8
  %13927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13926, i8* %13927, align 1
  %13928 = trunc i64 %13922 to i32
  %13929 = and i32 %13928, 255
  %13930 = call i32 @llvm.ctpop.i32(i32 %13929)
  %13931 = trunc i32 %13930 to i8
  %13932 = and i8 %13931, 1
  %13933 = xor i8 %13932, 1
  %13934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13933, i8* %13934, align 1
  %13935 = xor i64 %13919, %13918
  %13936 = xor i64 %13935, %13922
  %13937 = lshr i64 %13936, 4
  %13938 = trunc i64 %13937 to i8
  %13939 = and i8 %13938, 1
  %13940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13939, i8* %13940, align 1
  %13941 = icmp eq i64 %13922, 0
  %13942 = zext i1 %13941 to i8
  %13943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13942, i8* %13943, align 1
  %13944 = lshr i64 %13922, 63
  %13945 = trunc i64 %13944 to i8
  %13946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13945, i8* %13946, align 1
  %13947 = lshr i64 %13918, 63
  %13948 = lshr i64 %13919, 63
  %13949 = xor i64 %13944, %13947
  %13950 = xor i64 %13944, %13948
  %13951 = add i64 %13949, %13950
  %13952 = icmp eq i64 %13951, 2
  %13953 = zext i1 %13952 to i8
  %13954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13953, i8* %13954, align 1
  store %struct.Memory* %loadMem_40cba9, %struct.Memory** %MEMORY
  %loadMem_40cbac = load %struct.Memory*, %struct.Memory** %MEMORY
  %13955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13956 = getelementptr inbounds %struct.GPR, %struct.GPR* %13955, i32 0, i32 33
  %13957 = getelementptr inbounds %struct.Reg, %struct.Reg* %13956, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %13957 to i64*
  %13958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13959 = getelementptr inbounds %struct.GPR, %struct.GPR* %13958, i32 0, i32 1
  %13960 = getelementptr inbounds %struct.Reg, %struct.Reg* %13959, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %13960 to i64*
  %13961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13962 = getelementptr inbounds %struct.GPR, %struct.GPR* %13961, i32 0, i32 5
  %13963 = getelementptr inbounds %struct.Reg, %struct.Reg* %13962, i32 0, i32 0
  %RCX.i222 = bitcast %union.anon* %13963 to i64*
  %13964 = load i64, i64* %RAX.i221
  %13965 = add i64 %13964, 740
  %13966 = load i64, i64* %PC.i220
  %13967 = add i64 %13966, 6
  store i64 %13967, i64* %PC.i220
  %13968 = inttoptr i64 %13965 to i32*
  %13969 = load i32, i32* %13968
  %13970 = zext i32 %13969 to i64
  store i64 %13970, i64* %RCX.i222, align 8
  store %struct.Memory* %loadMem_40cbac, %struct.Memory** %MEMORY
  %loadMem_40cbb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13972 = getelementptr inbounds %struct.GPR, %struct.GPR* %13971, i32 0, i32 33
  %13973 = getelementptr inbounds %struct.Reg, %struct.Reg* %13972, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %13973 to i64*
  %13974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13975 = getelementptr inbounds %struct.GPR, %struct.GPR* %13974, i32 0, i32 5
  %13976 = getelementptr inbounds %struct.Reg, %struct.Reg* %13975, i32 0, i32 0
  %ECX.i219 = bitcast %union.anon* %13976 to i32*
  %13977 = load i32, i32* %ECX.i219
  %13978 = zext i32 %13977 to i64
  %13979 = load i64, i64* %PC.i218
  %13980 = add i64 %13979, 7
  store i64 %13980, i64* %PC.i218
  %13981 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %13982 = sub i32 %13977, %13981
  %13983 = icmp ult i32 %13977, %13981
  %13984 = zext i1 %13983 to i8
  %13985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13984, i8* %13985, align 1
  %13986 = and i32 %13982, 255
  %13987 = call i32 @llvm.ctpop.i32(i32 %13986)
  %13988 = trunc i32 %13987 to i8
  %13989 = and i8 %13988, 1
  %13990 = xor i8 %13989, 1
  %13991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13990, i8* %13991, align 1
  %13992 = xor i32 %13981, %13977
  %13993 = xor i32 %13992, %13982
  %13994 = lshr i32 %13993, 4
  %13995 = trunc i32 %13994 to i8
  %13996 = and i8 %13995, 1
  %13997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13996, i8* %13997, align 1
  %13998 = icmp eq i32 %13982, 0
  %13999 = zext i1 %13998 to i8
  %14000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13999, i8* %14000, align 1
  %14001 = lshr i32 %13982, 31
  %14002 = trunc i32 %14001 to i8
  %14003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14002, i8* %14003, align 1
  %14004 = lshr i32 %13977, 31
  %14005 = lshr i32 %13981, 31
  %14006 = xor i32 %14005, %14004
  %14007 = xor i32 %14001, %14004
  %14008 = add i32 %14007, %14006
  %14009 = icmp eq i32 %14008, 2
  %14010 = zext i1 %14009 to i8
  %14011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14010, i8* %14011, align 1
  store %struct.Memory* %loadMem_40cbb2, %struct.Memory** %MEMORY
  %loadMem_40cbb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14013 = getelementptr inbounds %struct.GPR, %struct.GPR* %14012, i32 0, i32 33
  %14014 = getelementptr inbounds %struct.Reg, %struct.Reg* %14013, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %14014 to i64*
  %14015 = load i64, i64* %PC.i217
  %14016 = add i64 %14015, 291
  %14017 = load i64, i64* %PC.i217
  %14018 = add i64 %14017, 6
  %14019 = load i64, i64* %PC.i217
  %14020 = add i64 %14019, 6
  store i64 %14020, i64* %PC.i217
  %14021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14022 = load i8, i8* %14021, align 1
  store i8 %14022, i8* %BRANCH_TAKEN, align 1
  %14023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14024 = icmp ne i8 %14022, 0
  %14025 = select i1 %14024, i64 %14016, i64 %14018
  store i64 %14025, i64* %14023, align 8
  store %struct.Memory* %loadMem_40cbb9, %struct.Memory** %MEMORY
  %loadBr_40cbb9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cbb9 = icmp eq i8 %loadBr_40cbb9, 1
  br i1 %cmpBr_40cbb9, label %block_.L_40ccdc, label %block_40cbbf

block_40cbbf:                                     ; preds = %block_40cb87
  %loadMem_40cbbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %14026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14027 = getelementptr inbounds %struct.GPR, %struct.GPR* %14026, i32 0, i32 33
  %14028 = getelementptr inbounds %struct.Reg, %struct.Reg* %14027, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %14028 to i64*
  %14029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14030 = getelementptr inbounds %struct.GPR, %struct.GPR* %14029, i32 0, i32 1
  %14031 = getelementptr inbounds %struct.Reg, %struct.Reg* %14030, i32 0, i32 0
  %RAX.i216 = bitcast %union.anon* %14031 to i64*
  %14032 = load i64, i64* %PC.i215
  %14033 = add i64 %14032, 10
  store i64 %14033, i64* %PC.i215
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i216, align 8
  store %struct.Memory* %loadMem_40cbbf, %struct.Memory** %MEMORY
  %loadMem_40cbc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14035 = getelementptr inbounds %struct.GPR, %struct.GPR* %14034, i32 0, i32 33
  %14036 = getelementptr inbounds %struct.Reg, %struct.Reg* %14035, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %14036 to i64*
  %14037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14038 = getelementptr inbounds %struct.GPR, %struct.GPR* %14037, i32 0, i32 5
  %14039 = getelementptr inbounds %struct.Reg, %struct.Reg* %14038, i32 0, i32 0
  %RCX.i213 = bitcast %union.anon* %14039 to i64*
  %14040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14041 = getelementptr inbounds %struct.GPR, %struct.GPR* %14040, i32 0, i32 15
  %14042 = getelementptr inbounds %struct.Reg, %struct.Reg* %14041, i32 0, i32 0
  %RBP.i214 = bitcast %union.anon* %14042 to i64*
  %14043 = load i64, i64* %RBP.i214
  %14044 = sub i64 %14043, 4
  %14045 = load i64, i64* %PC.i212
  %14046 = add i64 %14045, 3
  store i64 %14046, i64* %PC.i212
  %14047 = inttoptr i64 %14044 to i32*
  %14048 = load i32, i32* %14047
  %14049 = zext i32 %14048 to i64
  store i64 %14049, i64* %RCX.i213, align 8
  store %struct.Memory* %loadMem_40cbc9, %struct.Memory** %MEMORY
  %loadMem_40cbcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %14050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14051 = getelementptr inbounds %struct.GPR, %struct.GPR* %14050, i32 0, i32 33
  %14052 = getelementptr inbounds %struct.Reg, %struct.Reg* %14051, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %14052 to i64*
  %14053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14054 = getelementptr inbounds %struct.GPR, %struct.GPR* %14053, i32 0, i32 5
  %14055 = getelementptr inbounds %struct.Reg, %struct.Reg* %14054, i32 0, i32 0
  %RCX.i211 = bitcast %union.anon* %14055 to i64*
  %14056 = load i64, i64* %RCX.i211
  %14057 = load i64, i64* %PC.i210
  %14058 = add i64 %14057, 3
  store i64 %14058, i64* %PC.i210
  %14059 = trunc i64 %14056 to i32
  %14060 = add i32 1, %14059
  %14061 = zext i32 %14060 to i64
  store i64 %14061, i64* %RCX.i211, align 8
  %14062 = icmp ult i32 %14060, %14059
  %14063 = icmp ult i32 %14060, 1
  %14064 = or i1 %14062, %14063
  %14065 = zext i1 %14064 to i8
  %14066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14065, i8* %14066, align 1
  %14067 = and i32 %14060, 255
  %14068 = call i32 @llvm.ctpop.i32(i32 %14067)
  %14069 = trunc i32 %14068 to i8
  %14070 = and i8 %14069, 1
  %14071 = xor i8 %14070, 1
  %14072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14071, i8* %14072, align 1
  %14073 = xor i64 1, %14056
  %14074 = trunc i64 %14073 to i32
  %14075 = xor i32 %14074, %14060
  %14076 = lshr i32 %14075, 4
  %14077 = trunc i32 %14076 to i8
  %14078 = and i8 %14077, 1
  %14079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14078, i8* %14079, align 1
  %14080 = icmp eq i32 %14060, 0
  %14081 = zext i1 %14080 to i8
  %14082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14081, i8* %14082, align 1
  %14083 = lshr i32 %14060, 31
  %14084 = trunc i32 %14083 to i8
  %14085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14084, i8* %14085, align 1
  %14086 = lshr i32 %14059, 31
  %14087 = xor i32 %14083, %14086
  %14088 = add i32 %14087, %14083
  %14089 = icmp eq i32 %14088, 2
  %14090 = zext i1 %14089 to i8
  %14091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14090, i8* %14091, align 1
  store %struct.Memory* %loadMem_40cbcc, %struct.Memory** %MEMORY
  %loadMem_40cbcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %14092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14093 = getelementptr inbounds %struct.GPR, %struct.GPR* %14092, i32 0, i32 33
  %14094 = getelementptr inbounds %struct.Reg, %struct.Reg* %14093, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %14094 to i64*
  %14095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14096 = getelementptr inbounds %struct.GPR, %struct.GPR* %14095, i32 0, i32 5
  %14097 = getelementptr inbounds %struct.Reg, %struct.Reg* %14096, i32 0, i32 0
  %ECX.i208 = bitcast %union.anon* %14097 to i32*
  %14098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14099 = getelementptr inbounds %struct.GPR, %struct.GPR* %14098, i32 0, i32 7
  %14100 = getelementptr inbounds %struct.Reg, %struct.Reg* %14099, i32 0, i32 0
  %RDX.i209 = bitcast %union.anon* %14100 to i64*
  %14101 = load i32, i32* %ECX.i208
  %14102 = zext i32 %14101 to i64
  %14103 = load i64, i64* %PC.i207
  %14104 = add i64 %14103, 3
  store i64 %14104, i64* %PC.i207
  %14105 = shl i64 %14102, 32
  %14106 = ashr exact i64 %14105, 32
  store i64 %14106, i64* %RDX.i209, align 8
  store %struct.Memory* %loadMem_40cbcf, %struct.Memory** %MEMORY
  %loadMem_40cbd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14108 = getelementptr inbounds %struct.GPR, %struct.GPR* %14107, i32 0, i32 33
  %14109 = getelementptr inbounds %struct.Reg, %struct.Reg* %14108, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %14109 to i64*
  %14110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14111 = getelementptr inbounds %struct.GPR, %struct.GPR* %14110, i32 0, i32 5
  %14112 = getelementptr inbounds %struct.Reg, %struct.Reg* %14111, i32 0, i32 0
  %RCX.i205 = bitcast %union.anon* %14112 to i64*
  %14113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14114 = getelementptr inbounds %struct.GPR, %struct.GPR* %14113, i32 0, i32 7
  %14115 = getelementptr inbounds %struct.Reg, %struct.Reg* %14114, i32 0, i32 0
  %RDX.i206 = bitcast %union.anon* %14115 to i64*
  %14116 = load i64, i64* %RDX.i206
  %14117 = mul i64 %14116, 4
  %14118 = add i64 %14117, 11187184
  %14119 = load i64, i64* %PC.i204
  %14120 = add i64 %14119, 7
  store i64 %14120, i64* %PC.i204
  %14121 = inttoptr i64 %14118 to i32*
  %14122 = load i32, i32* %14121
  %14123 = zext i32 %14122 to i64
  store i64 %14123, i64* %RCX.i205, align 8
  store %struct.Memory* %loadMem_40cbd2, %struct.Memory** %MEMORY
  %loadMem_40cbd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14125 = getelementptr inbounds %struct.GPR, %struct.GPR* %14124, i32 0, i32 33
  %14126 = getelementptr inbounds %struct.Reg, %struct.Reg* %14125, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %14126 to i64*
  %14127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14128 = getelementptr inbounds %struct.GPR, %struct.GPR* %14127, i32 0, i32 7
  %14129 = getelementptr inbounds %struct.Reg, %struct.Reg* %14128, i32 0, i32 0
  %RDX.i202 = bitcast %union.anon* %14129 to i64*
  %14130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14131 = getelementptr inbounds %struct.GPR, %struct.GPR* %14130, i32 0, i32 15
  %14132 = getelementptr inbounds %struct.Reg, %struct.Reg* %14131, i32 0, i32 0
  %RBP.i203 = bitcast %union.anon* %14132 to i64*
  %14133 = load i64, i64* %RBP.i203
  %14134 = sub i64 %14133, 8
  %14135 = load i64, i64* %PC.i201
  %14136 = add i64 %14135, 4
  store i64 %14136, i64* %PC.i201
  %14137 = inttoptr i64 %14134 to i32*
  %14138 = load i32, i32* %14137
  %14139 = sext i32 %14138 to i64
  store i64 %14139, i64* %RDX.i202, align 8
  store %struct.Memory* %loadMem_40cbd9, %struct.Memory** %MEMORY
  %loadMem_40cbdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14141 = getelementptr inbounds %struct.GPR, %struct.GPR* %14140, i32 0, i32 33
  %14142 = getelementptr inbounds %struct.Reg, %struct.Reg* %14141, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %14142 to i64*
  %14143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14144 = getelementptr inbounds %struct.GPR, %struct.GPR* %14143, i32 0, i32 7
  %14145 = getelementptr inbounds %struct.Reg, %struct.Reg* %14144, i32 0, i32 0
  %RDX.i200 = bitcast %union.anon* %14145 to i64*
  %14146 = load i64, i64* %RDX.i200
  %14147 = load i64, i64* %PC.i199
  %14148 = add i64 %14147, 7
  store i64 %14148, i64* %PC.i199
  %14149 = sext i64 %14146 to i128
  %14150 = and i128 %14149, -18446744073709551616
  %14151 = zext i64 %14146 to i128
  %14152 = or i128 %14150, %14151
  %14153 = mul i128 744, %14152
  %14154 = trunc i128 %14153 to i64
  store i64 %14154, i64* %RDX.i200, align 8
  %14155 = sext i64 %14154 to i128
  %14156 = icmp ne i128 %14155, %14153
  %14157 = zext i1 %14156 to i8
  %14158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14157, i8* %14158, align 1
  %14159 = trunc i128 %14153 to i32
  %14160 = and i32 %14159, 255
  %14161 = call i32 @llvm.ctpop.i32(i32 %14160)
  %14162 = trunc i32 %14161 to i8
  %14163 = and i8 %14162, 1
  %14164 = xor i8 %14163, 1
  %14165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14164, i8* %14165, align 1
  %14166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14166, align 1
  %14167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14167, align 1
  %14168 = lshr i64 %14154, 63
  %14169 = trunc i64 %14168 to i8
  %14170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14169, i8* %14170, align 1
  %14171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14157, i8* %14171, align 1
  store %struct.Memory* %loadMem_40cbdd, %struct.Memory** %MEMORY
  %loadMem_40cbe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14173 = getelementptr inbounds %struct.GPR, %struct.GPR* %14172, i32 0, i32 33
  %14174 = getelementptr inbounds %struct.Reg, %struct.Reg* %14173, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %14174 to i64*
  %14175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14176 = getelementptr inbounds %struct.GPR, %struct.GPR* %14175, i32 0, i32 1
  %14177 = getelementptr inbounds %struct.Reg, %struct.Reg* %14176, i32 0, i32 0
  %RAX.i197 = bitcast %union.anon* %14177 to i64*
  %14178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14179 = getelementptr inbounds %struct.GPR, %struct.GPR* %14178, i32 0, i32 9
  %14180 = getelementptr inbounds %struct.Reg, %struct.Reg* %14179, i32 0, i32 0
  %RSI.i198 = bitcast %union.anon* %14180 to i64*
  %14181 = load i64, i64* %RAX.i197
  %14182 = load i64, i64* %PC.i196
  %14183 = add i64 %14182, 3
  store i64 %14183, i64* %PC.i196
  store i64 %14181, i64* %RSI.i198, align 8
  store %struct.Memory* %loadMem_40cbe4, %struct.Memory** %MEMORY
  %loadMem_40cbe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14185 = getelementptr inbounds %struct.GPR, %struct.GPR* %14184, i32 0, i32 33
  %14186 = getelementptr inbounds %struct.Reg, %struct.Reg* %14185, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %14186 to i64*
  %14187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14188 = getelementptr inbounds %struct.GPR, %struct.GPR* %14187, i32 0, i32 7
  %14189 = getelementptr inbounds %struct.Reg, %struct.Reg* %14188, i32 0, i32 0
  %RDX.i194 = bitcast %union.anon* %14189 to i64*
  %14190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14191 = getelementptr inbounds %struct.GPR, %struct.GPR* %14190, i32 0, i32 9
  %14192 = getelementptr inbounds %struct.Reg, %struct.Reg* %14191, i32 0, i32 0
  %RSI.i195 = bitcast %union.anon* %14192 to i64*
  %14193 = load i64, i64* %RSI.i195
  %14194 = load i64, i64* %RDX.i194
  %14195 = load i64, i64* %PC.i193
  %14196 = add i64 %14195, 3
  store i64 %14196, i64* %PC.i193
  %14197 = add i64 %14194, %14193
  store i64 %14197, i64* %RSI.i195, align 8
  %14198 = icmp ult i64 %14197, %14193
  %14199 = icmp ult i64 %14197, %14194
  %14200 = or i1 %14198, %14199
  %14201 = zext i1 %14200 to i8
  %14202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14201, i8* %14202, align 1
  %14203 = trunc i64 %14197 to i32
  %14204 = and i32 %14203, 255
  %14205 = call i32 @llvm.ctpop.i32(i32 %14204)
  %14206 = trunc i32 %14205 to i8
  %14207 = and i8 %14206, 1
  %14208 = xor i8 %14207, 1
  %14209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14208, i8* %14209, align 1
  %14210 = xor i64 %14194, %14193
  %14211 = xor i64 %14210, %14197
  %14212 = lshr i64 %14211, 4
  %14213 = trunc i64 %14212 to i8
  %14214 = and i8 %14213, 1
  %14215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14214, i8* %14215, align 1
  %14216 = icmp eq i64 %14197, 0
  %14217 = zext i1 %14216 to i8
  %14218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14217, i8* %14218, align 1
  %14219 = lshr i64 %14197, 63
  %14220 = trunc i64 %14219 to i8
  %14221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14220, i8* %14221, align 1
  %14222 = lshr i64 %14193, 63
  %14223 = lshr i64 %14194, 63
  %14224 = xor i64 %14219, %14222
  %14225 = xor i64 %14219, %14223
  %14226 = add i64 %14224, %14225
  %14227 = icmp eq i64 %14226, 2
  %14228 = zext i1 %14227 to i8
  %14229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14228, i8* %14229, align 1
  store %struct.Memory* %loadMem_40cbe7, %struct.Memory** %MEMORY
  %loadMem_40cbea = load %struct.Memory*, %struct.Memory** %MEMORY
  %14230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14231 = getelementptr inbounds %struct.GPR, %struct.GPR* %14230, i32 0, i32 33
  %14232 = getelementptr inbounds %struct.Reg, %struct.Reg* %14231, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %14232 to i64*
  %14233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14234 = getelementptr inbounds %struct.GPR, %struct.GPR* %14233, i32 0, i32 7
  %14235 = getelementptr inbounds %struct.Reg, %struct.Reg* %14234, i32 0, i32 0
  %RDX.i191 = bitcast %union.anon* %14235 to i64*
  %14236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14237 = getelementptr inbounds %struct.GPR, %struct.GPR* %14236, i32 0, i32 15
  %14238 = getelementptr inbounds %struct.Reg, %struct.Reg* %14237, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %14238 to i64*
  %14239 = load i64, i64* %RBP.i192
  %14240 = sub i64 %14239, 8
  %14241 = load i64, i64* %PC.i190
  %14242 = add i64 %14241, 4
  store i64 %14242, i64* %PC.i190
  %14243 = inttoptr i64 %14240 to i32*
  %14244 = load i32, i32* %14243
  %14245 = sext i32 %14244 to i64
  store i64 %14245, i64* %RDX.i191, align 8
  store %struct.Memory* %loadMem_40cbea, %struct.Memory** %MEMORY
  %loadMem_40cbee = load %struct.Memory*, %struct.Memory** %MEMORY
  %14246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14247 = getelementptr inbounds %struct.GPR, %struct.GPR* %14246, i32 0, i32 33
  %14248 = getelementptr inbounds %struct.Reg, %struct.Reg* %14247, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %14248 to i64*
  %14249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14250 = getelementptr inbounds %struct.GPR, %struct.GPR* %14249, i32 0, i32 7
  %14251 = getelementptr inbounds %struct.Reg, %struct.Reg* %14250, i32 0, i32 0
  %RDX.i189 = bitcast %union.anon* %14251 to i64*
  %14252 = load i64, i64* %RDX.i189
  %14253 = load i64, i64* %PC.i188
  %14254 = add i64 %14253, 7
  store i64 %14254, i64* %PC.i188
  %14255 = sext i64 %14252 to i128
  %14256 = and i128 %14255, -18446744073709551616
  %14257 = zext i64 %14252 to i128
  %14258 = or i128 %14256, %14257
  %14259 = mul i128 744, %14258
  %14260 = trunc i128 %14259 to i64
  store i64 %14260, i64* %RDX.i189, align 8
  %14261 = sext i64 %14260 to i128
  %14262 = icmp ne i128 %14261, %14259
  %14263 = zext i1 %14262 to i8
  %14264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14263, i8* %14264, align 1
  %14265 = trunc i128 %14259 to i32
  %14266 = and i32 %14265, 255
  %14267 = call i32 @llvm.ctpop.i32(i32 %14266)
  %14268 = trunc i32 %14267 to i8
  %14269 = and i8 %14268, 1
  %14270 = xor i8 %14269, 1
  %14271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14270, i8* %14271, align 1
  %14272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14272, align 1
  %14273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14273, align 1
  %14274 = lshr i64 %14260, 63
  %14275 = trunc i64 %14274 to i8
  %14276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14275, i8* %14276, align 1
  %14277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14263, i8* %14277, align 1
  store %struct.Memory* %loadMem_40cbee, %struct.Memory** %MEMORY
  %loadMem_40cbf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14279 = getelementptr inbounds %struct.GPR, %struct.GPR* %14278, i32 0, i32 33
  %14280 = getelementptr inbounds %struct.Reg, %struct.Reg* %14279, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %14280 to i64*
  %14281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14282 = getelementptr inbounds %struct.GPR, %struct.GPR* %14281, i32 0, i32 1
  %14283 = getelementptr inbounds %struct.Reg, %struct.Reg* %14282, i32 0, i32 0
  %RAX.i186 = bitcast %union.anon* %14283 to i64*
  %14284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14285 = getelementptr inbounds %struct.GPR, %struct.GPR* %14284, i32 0, i32 11
  %14286 = getelementptr inbounds %struct.Reg, %struct.Reg* %14285, i32 0, i32 0
  %RDI.i187 = bitcast %union.anon* %14286 to i64*
  %14287 = load i64, i64* %RAX.i186
  %14288 = load i64, i64* %PC.i185
  %14289 = add i64 %14288, 3
  store i64 %14289, i64* %PC.i185
  store i64 %14287, i64* %RDI.i187, align 8
  store %struct.Memory* %loadMem_40cbf5, %struct.Memory** %MEMORY
  %loadMem_40cbf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14291 = getelementptr inbounds %struct.GPR, %struct.GPR* %14290, i32 0, i32 33
  %14292 = getelementptr inbounds %struct.Reg, %struct.Reg* %14291, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %14292 to i64*
  %14293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14294 = getelementptr inbounds %struct.GPR, %struct.GPR* %14293, i32 0, i32 7
  %14295 = getelementptr inbounds %struct.Reg, %struct.Reg* %14294, i32 0, i32 0
  %RDX.i183 = bitcast %union.anon* %14295 to i64*
  %14296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14297 = getelementptr inbounds %struct.GPR, %struct.GPR* %14296, i32 0, i32 11
  %14298 = getelementptr inbounds %struct.Reg, %struct.Reg* %14297, i32 0, i32 0
  %RDI.i184 = bitcast %union.anon* %14298 to i64*
  %14299 = load i64, i64* %RDI.i184
  %14300 = load i64, i64* %RDX.i183
  %14301 = load i64, i64* %PC.i182
  %14302 = add i64 %14301, 3
  store i64 %14302, i64* %PC.i182
  %14303 = add i64 %14300, %14299
  store i64 %14303, i64* %RDI.i184, align 8
  %14304 = icmp ult i64 %14303, %14299
  %14305 = icmp ult i64 %14303, %14300
  %14306 = or i1 %14304, %14305
  %14307 = zext i1 %14306 to i8
  %14308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14307, i8* %14308, align 1
  %14309 = trunc i64 %14303 to i32
  %14310 = and i32 %14309, 255
  %14311 = call i32 @llvm.ctpop.i32(i32 %14310)
  %14312 = trunc i32 %14311 to i8
  %14313 = and i8 %14312, 1
  %14314 = xor i8 %14313, 1
  %14315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14314, i8* %14315, align 1
  %14316 = xor i64 %14300, %14299
  %14317 = xor i64 %14316, %14303
  %14318 = lshr i64 %14317, 4
  %14319 = trunc i64 %14318 to i8
  %14320 = and i8 %14319, 1
  %14321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14320, i8* %14321, align 1
  %14322 = icmp eq i64 %14303, 0
  %14323 = zext i1 %14322 to i8
  %14324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14323, i8* %14324, align 1
  %14325 = lshr i64 %14303, 63
  %14326 = trunc i64 %14325 to i8
  %14327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14326, i8* %14327, align 1
  %14328 = lshr i64 %14299, 63
  %14329 = lshr i64 %14300, 63
  %14330 = xor i64 %14325, %14328
  %14331 = xor i64 %14325, %14329
  %14332 = add i64 %14330, %14331
  %14333 = icmp eq i64 %14332, 2
  %14334 = zext i1 %14333 to i8
  %14335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14334, i8* %14335, align 1
  store %struct.Memory* %loadMem_40cbf8, %struct.Memory** %MEMORY
  %loadMem_40cbfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %14336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14337 = getelementptr inbounds %struct.GPR, %struct.GPR* %14336, i32 0, i32 33
  %14338 = getelementptr inbounds %struct.Reg, %struct.Reg* %14337, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %14338 to i64*
  %14339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14340 = getelementptr inbounds %struct.GPR, %struct.GPR* %14339, i32 0, i32 17
  %14341 = getelementptr inbounds %struct.Reg, %struct.Reg* %14340, i32 0, i32 0
  %R8D.i180 = bitcast %union.anon* %14341 to i32*
  %14342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14343 = getelementptr inbounds %struct.GPR, %struct.GPR* %14342, i32 0, i32 11
  %14344 = getelementptr inbounds %struct.Reg, %struct.Reg* %14343, i32 0, i32 0
  %RDI.i181 = bitcast %union.anon* %14344 to i64*
  %14345 = bitcast i32* %R8D.i180 to i64*
  %14346 = load i64, i64* %RDI.i181
  %14347 = add i64 %14346, 96
  %14348 = load i64, i64* %PC.i179
  %14349 = add i64 %14348, 4
  store i64 %14349, i64* %PC.i179
  %14350 = inttoptr i64 %14347 to i32*
  %14351 = load i32, i32* %14350
  %14352 = zext i32 %14351 to i64
  store i64 %14352, i64* %14345, align 8
  store %struct.Memory* %loadMem_40cbfb, %struct.Memory** %MEMORY
  %loadMem_40cbff = load %struct.Memory*, %struct.Memory** %MEMORY
  %14353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14354 = getelementptr inbounds %struct.GPR, %struct.GPR* %14353, i32 0, i32 33
  %14355 = getelementptr inbounds %struct.Reg, %struct.Reg* %14354, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %14355 to i64*
  %14356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14357 = getelementptr inbounds %struct.GPR, %struct.GPR* %14356, i32 0, i32 17
  %14358 = getelementptr inbounds %struct.Reg, %struct.Reg* %14357, i32 0, i32 0
  %R8D.i177 = bitcast %union.anon* %14358 to i32*
  %14359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14360 = getelementptr inbounds %struct.GPR, %struct.GPR* %14359, i32 0, i32 19
  %14361 = getelementptr inbounds %struct.Reg, %struct.Reg* %14360, i32 0, i32 0
  %R9D.i178 = bitcast %union.anon* %14361 to i32*
  %14362 = bitcast i32* %R9D.i178 to i64*
  %14363 = load i32, i32* %R8D.i177
  %14364 = zext i32 %14363 to i64
  %14365 = load i64, i64* %PC.i176
  %14366 = add i64 %14365, 3
  store i64 %14366, i64* %PC.i176
  %14367 = and i64 %14364, 4294967295
  store i64 %14367, i64* %14362, align 8
  store %struct.Memory* %loadMem_40cbff, %struct.Memory** %MEMORY
  %loadMem_40cc02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14369 = getelementptr inbounds %struct.GPR, %struct.GPR* %14368, i32 0, i32 33
  %14370 = getelementptr inbounds %struct.Reg, %struct.Reg* %14369, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %14370 to i64*
  %14371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14372 = getelementptr inbounds %struct.GPR, %struct.GPR* %14371, i32 0, i32 19
  %14373 = getelementptr inbounds %struct.Reg, %struct.Reg* %14372, i32 0, i32 0
  %R9D.i175 = bitcast %union.anon* %14373 to i32*
  %14374 = bitcast i32* %R9D.i175 to i64*
  %14375 = load i32, i32* %R9D.i175
  %14376 = zext i32 %14375 to i64
  %14377 = load i64, i64* %PC.i174
  %14378 = add i64 %14377, 4
  store i64 %14378, i64* %PC.i174
  %14379 = add i32 1, %14375
  %14380 = zext i32 %14379 to i64
  store i64 %14380, i64* %14374, align 8
  %14381 = icmp ult i32 %14379, %14375
  %14382 = icmp ult i32 %14379, 1
  %14383 = or i1 %14381, %14382
  %14384 = zext i1 %14383 to i8
  %14385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14384, i8* %14385, align 1
  %14386 = and i32 %14379, 255
  %14387 = call i32 @llvm.ctpop.i32(i32 %14386)
  %14388 = trunc i32 %14387 to i8
  %14389 = and i8 %14388, 1
  %14390 = xor i8 %14389, 1
  %14391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14390, i8* %14391, align 1
  %14392 = xor i64 1, %14376
  %14393 = trunc i64 %14392 to i32
  %14394 = xor i32 %14393, %14379
  %14395 = lshr i32 %14394, 4
  %14396 = trunc i32 %14395 to i8
  %14397 = and i8 %14396, 1
  %14398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14397, i8* %14398, align 1
  %14399 = icmp eq i32 %14379, 0
  %14400 = zext i1 %14399 to i8
  %14401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14400, i8* %14401, align 1
  %14402 = lshr i32 %14379, 31
  %14403 = trunc i32 %14402 to i8
  %14404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14403, i8* %14404, align 1
  %14405 = lshr i32 %14375, 31
  %14406 = xor i32 %14402, %14405
  %14407 = add i32 %14406, %14402
  %14408 = icmp eq i32 %14407, 2
  %14409 = zext i1 %14408 to i8
  %14410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14409, i8* %14410, align 1
  store %struct.Memory* %loadMem_40cc02, %struct.Memory** %MEMORY
  %loadMem_40cc06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14412 = getelementptr inbounds %struct.GPR, %struct.GPR* %14411, i32 0, i32 33
  %14413 = getelementptr inbounds %struct.Reg, %struct.Reg* %14412, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %14413 to i64*
  %14414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14415 = getelementptr inbounds %struct.GPR, %struct.GPR* %14414, i32 0, i32 19
  %14416 = getelementptr inbounds %struct.Reg, %struct.Reg* %14415, i32 0, i32 0
  %R9D.i172 = bitcast %union.anon* %14416 to i32*
  %14417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14418 = getelementptr inbounds %struct.GPR, %struct.GPR* %14417, i32 0, i32 11
  %14419 = getelementptr inbounds %struct.Reg, %struct.Reg* %14418, i32 0, i32 0
  %RDI.i173 = bitcast %union.anon* %14419 to i64*
  %14420 = load i64, i64* %RDI.i173
  %14421 = add i64 %14420, 96
  %14422 = load i32, i32* %R9D.i172
  %14423 = zext i32 %14422 to i64
  %14424 = load i64, i64* %PC.i171
  %14425 = add i64 %14424, 4
  store i64 %14425, i64* %PC.i171
  %14426 = inttoptr i64 %14421 to i32*
  store i32 %14422, i32* %14426
  store %struct.Memory* %loadMem_40cc06, %struct.Memory** %MEMORY
  %loadMem_40cc0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14428 = getelementptr inbounds %struct.GPR, %struct.GPR* %14427, i32 0, i32 33
  %14429 = getelementptr inbounds %struct.Reg, %struct.Reg* %14428, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %14429 to i64*
  %14430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14431 = getelementptr inbounds %struct.GPR, %struct.GPR* %14430, i32 0, i32 17
  %14432 = getelementptr inbounds %struct.Reg, %struct.Reg* %14431, i32 0, i32 0
  %R8D.i169 = bitcast %union.anon* %14432 to i32*
  %14433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14434 = getelementptr inbounds %struct.GPR, %struct.GPR* %14433, i32 0, i32 7
  %14435 = getelementptr inbounds %struct.Reg, %struct.Reg* %14434, i32 0, i32 0
  %RDX.i170 = bitcast %union.anon* %14435 to i64*
  %14436 = load i32, i32* %R8D.i169
  %14437 = zext i32 %14436 to i64
  %14438 = load i64, i64* %PC.i168
  %14439 = add i64 %14438, 3
  store i64 %14439, i64* %PC.i168
  %14440 = shl i64 %14437, 32
  %14441 = ashr exact i64 %14440, 32
  store i64 %14441, i64* %RDX.i170, align 8
  store %struct.Memory* %loadMem_40cc0a, %struct.Memory** %MEMORY
  %loadMem_40cc0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14443 = getelementptr inbounds %struct.GPR, %struct.GPR* %14442, i32 0, i32 33
  %14444 = getelementptr inbounds %struct.Reg, %struct.Reg* %14443, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %14444 to i64*
  %14445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14446 = getelementptr inbounds %struct.GPR, %struct.GPR* %14445, i32 0, i32 5
  %14447 = getelementptr inbounds %struct.Reg, %struct.Reg* %14446, i32 0, i32 0
  %ECX.i165 = bitcast %union.anon* %14447 to i32*
  %14448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14449 = getelementptr inbounds %struct.GPR, %struct.GPR* %14448, i32 0, i32 7
  %14450 = getelementptr inbounds %struct.Reg, %struct.Reg* %14449, i32 0, i32 0
  %RDX.i166 = bitcast %union.anon* %14450 to i64*
  %14451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14452 = getelementptr inbounds %struct.GPR, %struct.GPR* %14451, i32 0, i32 9
  %14453 = getelementptr inbounds %struct.Reg, %struct.Reg* %14452, i32 0, i32 0
  %RSI.i167 = bitcast %union.anon* %14453 to i64*
  %14454 = load i64, i64* %RSI.i167
  %14455 = load i64, i64* %RDX.i166
  %14456 = mul i64 %14455, 4
  %14457 = add i64 %14454, 100
  %14458 = add i64 %14457, %14456
  %14459 = load i32, i32* %ECX.i165
  %14460 = zext i32 %14459 to i64
  %14461 = load i64, i64* %PC.i164
  %14462 = add i64 %14461, 4
  store i64 %14462, i64* %PC.i164
  %14463 = inttoptr i64 %14458 to i32*
  store i32 %14459, i32* %14463
  store %struct.Memory* %loadMem_40cc0d, %struct.Memory** %MEMORY
  %loadMem_40cc11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14465 = getelementptr inbounds %struct.GPR, %struct.GPR* %14464, i32 0, i32 33
  %14466 = getelementptr inbounds %struct.Reg, %struct.Reg* %14465, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %14466 to i64*
  %14467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14468 = getelementptr inbounds %struct.GPR, %struct.GPR* %14467, i32 0, i32 5
  %14469 = getelementptr inbounds %struct.Reg, %struct.Reg* %14468, i32 0, i32 0
  %RCX.i162 = bitcast %union.anon* %14469 to i64*
  %14470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14471 = getelementptr inbounds %struct.GPR, %struct.GPR* %14470, i32 0, i32 15
  %14472 = getelementptr inbounds %struct.Reg, %struct.Reg* %14471, i32 0, i32 0
  %RBP.i163 = bitcast %union.anon* %14472 to i64*
  %14473 = load i64, i64* %RBP.i163
  %14474 = sub i64 %14473, 4
  %14475 = load i64, i64* %PC.i161
  %14476 = add i64 %14475, 3
  store i64 %14476, i64* %PC.i161
  %14477 = inttoptr i64 %14474 to i32*
  %14478 = load i32, i32* %14477
  %14479 = zext i32 %14478 to i64
  store i64 %14479, i64* %RCX.i162, align 8
  store %struct.Memory* %loadMem_40cc11, %struct.Memory** %MEMORY
  %loadMem_40cc14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14481 = getelementptr inbounds %struct.GPR, %struct.GPR* %14480, i32 0, i32 33
  %14482 = getelementptr inbounds %struct.Reg, %struct.Reg* %14481, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %14482 to i64*
  %14483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14484 = getelementptr inbounds %struct.GPR, %struct.GPR* %14483, i32 0, i32 5
  %14485 = getelementptr inbounds %struct.Reg, %struct.Reg* %14484, i32 0, i32 0
  %RCX.i160 = bitcast %union.anon* %14485 to i64*
  %14486 = load i64, i64* %RCX.i160
  %14487 = load i64, i64* %PC.i159
  %14488 = add i64 %14487, 3
  store i64 %14488, i64* %PC.i159
  %14489 = trunc i64 %14486 to i32
  %14490 = add i32 1, %14489
  %14491 = zext i32 %14490 to i64
  store i64 %14491, i64* %RCX.i160, align 8
  %14492 = icmp ult i32 %14490, %14489
  %14493 = icmp ult i32 %14490, 1
  %14494 = or i1 %14492, %14493
  %14495 = zext i1 %14494 to i8
  %14496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14495, i8* %14496, align 1
  %14497 = and i32 %14490, 255
  %14498 = call i32 @llvm.ctpop.i32(i32 %14497)
  %14499 = trunc i32 %14498 to i8
  %14500 = and i8 %14499, 1
  %14501 = xor i8 %14500, 1
  %14502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14501, i8* %14502, align 1
  %14503 = xor i64 1, %14486
  %14504 = trunc i64 %14503 to i32
  %14505 = xor i32 %14504, %14490
  %14506 = lshr i32 %14505, 4
  %14507 = trunc i32 %14506 to i8
  %14508 = and i8 %14507, 1
  %14509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14508, i8* %14509, align 1
  %14510 = icmp eq i32 %14490, 0
  %14511 = zext i1 %14510 to i8
  %14512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14511, i8* %14512, align 1
  %14513 = lshr i32 %14490, 31
  %14514 = trunc i32 %14513 to i8
  %14515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14514, i8* %14515, align 1
  %14516 = lshr i32 %14489, 31
  %14517 = xor i32 %14513, %14516
  %14518 = add i32 %14517, %14513
  %14519 = icmp eq i32 %14518, 2
  %14520 = zext i1 %14519 to i8
  %14521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14520, i8* %14521, align 1
  store %struct.Memory* %loadMem_40cc14, %struct.Memory** %MEMORY
  %loadMem_40cc17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14523 = getelementptr inbounds %struct.GPR, %struct.GPR* %14522, i32 0, i32 33
  %14524 = getelementptr inbounds %struct.Reg, %struct.Reg* %14523, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %14524 to i64*
  %14525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14526 = getelementptr inbounds %struct.GPR, %struct.GPR* %14525, i32 0, i32 5
  %14527 = getelementptr inbounds %struct.Reg, %struct.Reg* %14526, i32 0, i32 0
  %ECX.i157 = bitcast %union.anon* %14527 to i32*
  %14528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14529 = getelementptr inbounds %struct.GPR, %struct.GPR* %14528, i32 0, i32 7
  %14530 = getelementptr inbounds %struct.Reg, %struct.Reg* %14529, i32 0, i32 0
  %RDX.i158 = bitcast %union.anon* %14530 to i64*
  %14531 = load i32, i32* %ECX.i157
  %14532 = zext i32 %14531 to i64
  %14533 = load i64, i64* %PC.i156
  %14534 = add i64 %14533, 3
  store i64 %14534, i64* %PC.i156
  %14535 = shl i64 %14532, 32
  %14536 = ashr exact i64 %14535, 32
  store i64 %14536, i64* %RDX.i158, align 8
  store %struct.Memory* %loadMem_40cc17, %struct.Memory** %MEMORY
  %loadMem_40cc1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14538 = getelementptr inbounds %struct.GPR, %struct.GPR* %14537, i32 0, i32 33
  %14539 = getelementptr inbounds %struct.Reg, %struct.Reg* %14538, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %14539 to i64*
  %14540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14541 = getelementptr inbounds %struct.GPR, %struct.GPR* %14540, i32 0, i32 7
  %14542 = getelementptr inbounds %struct.Reg, %struct.Reg* %14541, i32 0, i32 0
  %RDX.i155 = bitcast %union.anon* %14542 to i64*
  %14543 = load i64, i64* %RDX.i155
  %14544 = mul i64 %14543, 4
  %14545 = add i64 %14544, 11187184
  %14546 = load i64, i64* %PC.i154
  %14547 = add i64 %14546, 8
  store i64 %14547, i64* %PC.i154
  %14548 = inttoptr i64 %14545 to i32*
  %14549 = load i32, i32* %14548
  %14550 = sext i32 %14549 to i64
  store i64 %14550, i64* %RDX.i155, align 8
  store %struct.Memory* %loadMem_40cc1a, %struct.Memory** %MEMORY
  %loadMem_40cc22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14552 = getelementptr inbounds %struct.GPR, %struct.GPR* %14551, i32 0, i32 33
  %14553 = getelementptr inbounds %struct.Reg, %struct.Reg* %14552, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %14553 to i64*
  %14554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14555 = getelementptr inbounds %struct.GPR, %struct.GPR* %14554, i32 0, i32 7
  %14556 = getelementptr inbounds %struct.Reg, %struct.Reg* %14555, i32 0, i32 0
  %RDX.i153 = bitcast %union.anon* %14556 to i64*
  %14557 = load i64, i64* %RDX.i153
  %14558 = load i64, i64* %PC.i152
  %14559 = add i64 %14558, 7
  store i64 %14559, i64* %PC.i152
  %14560 = sext i64 %14557 to i128
  %14561 = and i128 %14560, -18446744073709551616
  %14562 = zext i64 %14557 to i128
  %14563 = or i128 %14561, %14562
  %14564 = mul i128 744, %14563
  %14565 = trunc i128 %14564 to i64
  store i64 %14565, i64* %RDX.i153, align 8
  %14566 = sext i64 %14565 to i128
  %14567 = icmp ne i128 %14566, %14564
  %14568 = zext i1 %14567 to i8
  %14569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14568, i8* %14569, align 1
  %14570 = trunc i128 %14564 to i32
  %14571 = and i32 %14570, 255
  %14572 = call i32 @llvm.ctpop.i32(i32 %14571)
  %14573 = trunc i32 %14572 to i8
  %14574 = and i8 %14573, 1
  %14575 = xor i8 %14574, 1
  %14576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14575, i8* %14576, align 1
  %14577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14577, align 1
  %14578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14578, align 1
  %14579 = lshr i64 %14565, 63
  %14580 = trunc i64 %14579 to i8
  %14581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14580, i8* %14581, align 1
  %14582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14568, i8* %14582, align 1
  store %struct.Memory* %loadMem_40cc22, %struct.Memory** %MEMORY
  %loadMem_40cc29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14584 = getelementptr inbounds %struct.GPR, %struct.GPR* %14583, i32 0, i32 33
  %14585 = getelementptr inbounds %struct.Reg, %struct.Reg* %14584, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %14585 to i64*
  %14586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14587 = getelementptr inbounds %struct.GPR, %struct.GPR* %14586, i32 0, i32 1
  %14588 = getelementptr inbounds %struct.Reg, %struct.Reg* %14587, i32 0, i32 0
  %RAX.i150 = bitcast %union.anon* %14588 to i64*
  %14589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14590 = getelementptr inbounds %struct.GPR, %struct.GPR* %14589, i32 0, i32 9
  %14591 = getelementptr inbounds %struct.Reg, %struct.Reg* %14590, i32 0, i32 0
  %RSI.i151 = bitcast %union.anon* %14591 to i64*
  %14592 = load i64, i64* %RAX.i150
  %14593 = load i64, i64* %PC.i149
  %14594 = add i64 %14593, 3
  store i64 %14594, i64* %PC.i149
  store i64 %14592, i64* %RSI.i151, align 8
  store %struct.Memory* %loadMem_40cc29, %struct.Memory** %MEMORY
  %loadMem_40cc2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14596 = getelementptr inbounds %struct.GPR, %struct.GPR* %14595, i32 0, i32 33
  %14597 = getelementptr inbounds %struct.Reg, %struct.Reg* %14596, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %14597 to i64*
  %14598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14599 = getelementptr inbounds %struct.GPR, %struct.GPR* %14598, i32 0, i32 7
  %14600 = getelementptr inbounds %struct.Reg, %struct.Reg* %14599, i32 0, i32 0
  %RDX.i147 = bitcast %union.anon* %14600 to i64*
  %14601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14602 = getelementptr inbounds %struct.GPR, %struct.GPR* %14601, i32 0, i32 9
  %14603 = getelementptr inbounds %struct.Reg, %struct.Reg* %14602, i32 0, i32 0
  %RSI.i148 = bitcast %union.anon* %14603 to i64*
  %14604 = load i64, i64* %RSI.i148
  %14605 = load i64, i64* %RDX.i147
  %14606 = load i64, i64* %PC.i146
  %14607 = add i64 %14606, 3
  store i64 %14607, i64* %PC.i146
  %14608 = add i64 %14605, %14604
  store i64 %14608, i64* %RSI.i148, align 8
  %14609 = icmp ult i64 %14608, %14604
  %14610 = icmp ult i64 %14608, %14605
  %14611 = or i1 %14609, %14610
  %14612 = zext i1 %14611 to i8
  %14613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14612, i8* %14613, align 1
  %14614 = trunc i64 %14608 to i32
  %14615 = and i32 %14614, 255
  %14616 = call i32 @llvm.ctpop.i32(i32 %14615)
  %14617 = trunc i32 %14616 to i8
  %14618 = and i8 %14617, 1
  %14619 = xor i8 %14618, 1
  %14620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14619, i8* %14620, align 1
  %14621 = xor i64 %14605, %14604
  %14622 = xor i64 %14621, %14608
  %14623 = lshr i64 %14622, 4
  %14624 = trunc i64 %14623 to i8
  %14625 = and i8 %14624, 1
  %14626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14625, i8* %14626, align 1
  %14627 = icmp eq i64 %14608, 0
  %14628 = zext i1 %14627 to i8
  %14629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14628, i8* %14629, align 1
  %14630 = lshr i64 %14608, 63
  %14631 = trunc i64 %14630 to i8
  %14632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14631, i8* %14632, align 1
  %14633 = lshr i64 %14604, 63
  %14634 = lshr i64 %14605, 63
  %14635 = xor i64 %14630, %14633
  %14636 = xor i64 %14630, %14634
  %14637 = add i64 %14635, %14636
  %14638 = icmp eq i64 %14637, 2
  %14639 = zext i1 %14638 to i8
  %14640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14639, i8* %14640, align 1
  store %struct.Memory* %loadMem_40cc2c, %struct.Memory** %MEMORY
  %loadMem_40cc2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14642 = getelementptr inbounds %struct.GPR, %struct.GPR* %14641, i32 0, i32 33
  %14643 = getelementptr inbounds %struct.Reg, %struct.Reg* %14642, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %14643 to i64*
  %14644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14645 = getelementptr inbounds %struct.GPR, %struct.GPR* %14644, i32 0, i32 9
  %14646 = getelementptr inbounds %struct.Reg, %struct.Reg* %14645, i32 0, i32 0
  %RSI.i145 = bitcast %union.anon* %14646 to i64*
  %14647 = load i64, i64* %RSI.i145
  %14648 = load i64, i64* %PC.i144
  %14649 = add i64 %14648, 4
  store i64 %14649, i64* %PC.i144
  %14650 = add i64 96, %14647
  store i64 %14650, i64* %RSI.i145, align 8
  %14651 = icmp ult i64 %14650, %14647
  %14652 = icmp ult i64 %14650, 96
  %14653 = or i1 %14651, %14652
  %14654 = zext i1 %14653 to i8
  %14655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14654, i8* %14655, align 1
  %14656 = trunc i64 %14650 to i32
  %14657 = and i32 %14656, 255
  %14658 = call i32 @llvm.ctpop.i32(i32 %14657)
  %14659 = trunc i32 %14658 to i8
  %14660 = and i8 %14659, 1
  %14661 = xor i8 %14660, 1
  %14662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14661, i8* %14662, align 1
  %14663 = xor i64 96, %14647
  %14664 = xor i64 %14663, %14650
  %14665 = lshr i64 %14664, 4
  %14666 = trunc i64 %14665 to i8
  %14667 = and i8 %14666, 1
  %14668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14667, i8* %14668, align 1
  %14669 = icmp eq i64 %14650, 0
  %14670 = zext i1 %14669 to i8
  %14671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14670, i8* %14671, align 1
  %14672 = lshr i64 %14650, 63
  %14673 = trunc i64 %14672 to i8
  %14674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14673, i8* %14674, align 1
  %14675 = lshr i64 %14647, 63
  %14676 = xor i64 %14672, %14675
  %14677 = add i64 %14676, %14672
  %14678 = icmp eq i64 %14677, 2
  %14679 = zext i1 %14678 to i8
  %14680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14679, i8* %14680, align 1
  store %struct.Memory* %loadMem_40cc2f, %struct.Memory** %MEMORY
  %loadMem_40cc33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14682 = getelementptr inbounds %struct.GPR, %struct.GPR* %14681, i32 0, i32 33
  %14683 = getelementptr inbounds %struct.Reg, %struct.Reg* %14682, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %14683 to i64*
  %14684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14685 = getelementptr inbounds %struct.GPR, %struct.GPR* %14684, i32 0, i32 7
  %14686 = getelementptr inbounds %struct.Reg, %struct.Reg* %14685, i32 0, i32 0
  %RDX.i143 = bitcast %union.anon* %14686 to i64*
  %14687 = load i64, i64* %PC.i142
  %14688 = add i64 %14687, 8
  store i64 %14688, i64* %PC.i142
  %14689 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %14689, i64* %RDX.i143, align 8
  store %struct.Memory* %loadMem_40cc33, %struct.Memory** %MEMORY
  %loadMem_40cc3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14691 = getelementptr inbounds %struct.GPR, %struct.GPR* %14690, i32 0, i32 33
  %14692 = getelementptr inbounds %struct.Reg, %struct.Reg* %14691, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %14692 to i64*
  %14693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14694 = getelementptr inbounds %struct.GPR, %struct.GPR* %14693, i32 0, i32 7
  %14695 = getelementptr inbounds %struct.Reg, %struct.Reg* %14694, i32 0, i32 0
  %RDX.i140 = bitcast %union.anon* %14695 to i64*
  %14696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14697 = getelementptr inbounds %struct.GPR, %struct.GPR* %14696, i32 0, i32 9
  %14698 = getelementptr inbounds %struct.Reg, %struct.Reg* %14697, i32 0, i32 0
  %RSI.i141 = bitcast %union.anon* %14698 to i64*
  %14699 = load i64, i64* %RDX.i140
  %14700 = load i64, i64* %RSI.i141
  %14701 = load i64, i64* %PC.i139
  %14702 = add i64 %14701, 3
  store i64 %14702, i64* %PC.i139
  %14703 = inttoptr i64 %14699 to i64*
  store i64 %14700, i64* %14703
  store %struct.Memory* %loadMem_40cc3b, %struct.Memory** %MEMORY
  %loadMem_40cc3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14705 = getelementptr inbounds %struct.GPR, %struct.GPR* %14704, i32 0, i32 33
  %14706 = getelementptr inbounds %struct.Reg, %struct.Reg* %14705, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %14706 to i64*
  %14707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14708 = getelementptr inbounds %struct.GPR, %struct.GPR* %14707, i32 0, i32 5
  %14709 = getelementptr inbounds %struct.Reg, %struct.Reg* %14708, i32 0, i32 0
  %RCX.i137 = bitcast %union.anon* %14709 to i64*
  %14710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14711 = getelementptr inbounds %struct.GPR, %struct.GPR* %14710, i32 0, i32 15
  %14712 = getelementptr inbounds %struct.Reg, %struct.Reg* %14711, i32 0, i32 0
  %RBP.i138 = bitcast %union.anon* %14712 to i64*
  %14713 = load i64, i64* %RBP.i138
  %14714 = sub i64 %14713, 4
  %14715 = load i64, i64* %PC.i136
  %14716 = add i64 %14715, 3
  store i64 %14716, i64* %PC.i136
  %14717 = inttoptr i64 %14714 to i32*
  %14718 = load i32, i32* %14717
  %14719 = zext i32 %14718 to i64
  store i64 %14719, i64* %RCX.i137, align 8
  store %struct.Memory* %loadMem_40cc3e, %struct.Memory** %MEMORY
  %loadMem_40cc41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14721 = getelementptr inbounds %struct.GPR, %struct.GPR* %14720, i32 0, i32 33
  %14722 = getelementptr inbounds %struct.Reg, %struct.Reg* %14721, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %14722 to i64*
  %14723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14724 = getelementptr inbounds %struct.GPR, %struct.GPR* %14723, i32 0, i32 5
  %14725 = getelementptr inbounds %struct.Reg, %struct.Reg* %14724, i32 0, i32 0
  %RCX.i135 = bitcast %union.anon* %14725 to i64*
  %14726 = load i64, i64* %RCX.i135
  %14727 = load i64, i64* %PC.i134
  %14728 = add i64 %14727, 3
  store i64 %14728, i64* %PC.i134
  %14729 = trunc i64 %14726 to i32
  %14730 = add i32 1, %14729
  %14731 = zext i32 %14730 to i64
  store i64 %14731, i64* %RCX.i135, align 8
  %14732 = icmp ult i32 %14730, %14729
  %14733 = icmp ult i32 %14730, 1
  %14734 = or i1 %14732, %14733
  %14735 = zext i1 %14734 to i8
  %14736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14735, i8* %14736, align 1
  %14737 = and i32 %14730, 255
  %14738 = call i32 @llvm.ctpop.i32(i32 %14737)
  %14739 = trunc i32 %14738 to i8
  %14740 = and i8 %14739, 1
  %14741 = xor i8 %14740, 1
  %14742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14741, i8* %14742, align 1
  %14743 = xor i64 1, %14726
  %14744 = trunc i64 %14743 to i32
  %14745 = xor i32 %14744, %14730
  %14746 = lshr i32 %14745, 4
  %14747 = trunc i32 %14746 to i8
  %14748 = and i8 %14747, 1
  %14749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14748, i8* %14749, align 1
  %14750 = icmp eq i32 %14730, 0
  %14751 = zext i1 %14750 to i8
  %14752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14751, i8* %14752, align 1
  %14753 = lshr i32 %14730, 31
  %14754 = trunc i32 %14753 to i8
  %14755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14754, i8* %14755, align 1
  %14756 = lshr i32 %14729, 31
  %14757 = xor i32 %14753, %14756
  %14758 = add i32 %14757, %14753
  %14759 = icmp eq i32 %14758, 2
  %14760 = zext i1 %14759 to i8
  %14761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14760, i8* %14761, align 1
  store %struct.Memory* %loadMem_40cc41, %struct.Memory** %MEMORY
  %loadMem_40cc44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14763 = getelementptr inbounds %struct.GPR, %struct.GPR* %14762, i32 0, i32 33
  %14764 = getelementptr inbounds %struct.Reg, %struct.Reg* %14763, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %14764 to i64*
  %14765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14766 = getelementptr inbounds %struct.GPR, %struct.GPR* %14765, i32 0, i32 5
  %14767 = getelementptr inbounds %struct.Reg, %struct.Reg* %14766, i32 0, i32 0
  %ECX.i132 = bitcast %union.anon* %14767 to i32*
  %14768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14769 = getelementptr inbounds %struct.GPR, %struct.GPR* %14768, i32 0, i32 7
  %14770 = getelementptr inbounds %struct.Reg, %struct.Reg* %14769, i32 0, i32 0
  %RDX.i133 = bitcast %union.anon* %14770 to i64*
  %14771 = load i32, i32* %ECX.i132
  %14772 = zext i32 %14771 to i64
  %14773 = load i64, i64* %PC.i131
  %14774 = add i64 %14773, 3
  store i64 %14774, i64* %PC.i131
  %14775 = shl i64 %14772, 32
  %14776 = ashr exact i64 %14775, 32
  store i64 %14776, i64* %RDX.i133, align 8
  store %struct.Memory* %loadMem_40cc44, %struct.Memory** %MEMORY
  %loadMem_40cc47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14778 = getelementptr inbounds %struct.GPR, %struct.GPR* %14777, i32 0, i32 33
  %14779 = getelementptr inbounds %struct.Reg, %struct.Reg* %14778, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %14779 to i64*
  %14780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14781 = getelementptr inbounds %struct.GPR, %struct.GPR* %14780, i32 0, i32 7
  %14782 = getelementptr inbounds %struct.Reg, %struct.Reg* %14781, i32 0, i32 0
  %RDX.i130 = bitcast %union.anon* %14782 to i64*
  %14783 = load i64, i64* %RDX.i130
  %14784 = mul i64 %14783, 4
  %14785 = add i64 %14784, 11187184
  %14786 = load i64, i64* %PC.i129
  %14787 = add i64 %14786, 8
  store i64 %14787, i64* %PC.i129
  %14788 = inttoptr i64 %14785 to i32*
  %14789 = load i32, i32* %14788
  %14790 = sext i32 %14789 to i64
  store i64 %14790, i64* %RDX.i130, align 8
  store %struct.Memory* %loadMem_40cc47, %struct.Memory** %MEMORY
  %loadMem_40cc4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14792 = getelementptr inbounds %struct.GPR, %struct.GPR* %14791, i32 0, i32 33
  %14793 = getelementptr inbounds %struct.Reg, %struct.Reg* %14792, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %14793 to i64*
  %14794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14795 = getelementptr inbounds %struct.GPR, %struct.GPR* %14794, i32 0, i32 7
  %14796 = getelementptr inbounds %struct.Reg, %struct.Reg* %14795, i32 0, i32 0
  %RDX.i128 = bitcast %union.anon* %14796 to i64*
  %14797 = load i64, i64* %RDX.i128
  %14798 = load i64, i64* %PC.i127
  %14799 = add i64 %14798, 7
  store i64 %14799, i64* %PC.i127
  %14800 = sext i64 %14797 to i128
  %14801 = and i128 %14800, -18446744073709551616
  %14802 = zext i64 %14797 to i128
  %14803 = or i128 %14801, %14802
  %14804 = mul i128 744, %14803
  %14805 = trunc i128 %14804 to i64
  store i64 %14805, i64* %RDX.i128, align 8
  %14806 = sext i64 %14805 to i128
  %14807 = icmp ne i128 %14806, %14804
  %14808 = zext i1 %14807 to i8
  %14809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14808, i8* %14809, align 1
  %14810 = trunc i128 %14804 to i32
  %14811 = and i32 %14810, 255
  %14812 = call i32 @llvm.ctpop.i32(i32 %14811)
  %14813 = trunc i32 %14812 to i8
  %14814 = and i8 %14813, 1
  %14815 = xor i8 %14814, 1
  %14816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14815, i8* %14816, align 1
  %14817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14817, align 1
  %14818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14818, align 1
  %14819 = lshr i64 %14805, 63
  %14820 = trunc i64 %14819 to i8
  %14821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14820, i8* %14821, align 1
  %14822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14808, i8* %14822, align 1
  store %struct.Memory* %loadMem_40cc4f, %struct.Memory** %MEMORY
  %loadMem_40cc56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14824 = getelementptr inbounds %struct.GPR, %struct.GPR* %14823, i32 0, i32 33
  %14825 = getelementptr inbounds %struct.Reg, %struct.Reg* %14824, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %14825 to i64*
  %14826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14827 = getelementptr inbounds %struct.GPR, %struct.GPR* %14826, i32 0, i32 1
  %14828 = getelementptr inbounds %struct.Reg, %struct.Reg* %14827, i32 0, i32 0
  %RAX.i125 = bitcast %union.anon* %14828 to i64*
  %14829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14830 = getelementptr inbounds %struct.GPR, %struct.GPR* %14829, i32 0, i32 9
  %14831 = getelementptr inbounds %struct.Reg, %struct.Reg* %14830, i32 0, i32 0
  %RSI.i126 = bitcast %union.anon* %14831 to i64*
  %14832 = load i64, i64* %RAX.i125
  %14833 = load i64, i64* %PC.i124
  %14834 = add i64 %14833, 3
  store i64 %14834, i64* %PC.i124
  store i64 %14832, i64* %RSI.i126, align 8
  store %struct.Memory* %loadMem_40cc56, %struct.Memory** %MEMORY
  %loadMem_40cc59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14836 = getelementptr inbounds %struct.GPR, %struct.GPR* %14835, i32 0, i32 33
  %14837 = getelementptr inbounds %struct.Reg, %struct.Reg* %14836, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %14837 to i64*
  %14838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14839 = getelementptr inbounds %struct.GPR, %struct.GPR* %14838, i32 0, i32 7
  %14840 = getelementptr inbounds %struct.Reg, %struct.Reg* %14839, i32 0, i32 0
  %RDX.i122 = bitcast %union.anon* %14840 to i64*
  %14841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14842 = getelementptr inbounds %struct.GPR, %struct.GPR* %14841, i32 0, i32 9
  %14843 = getelementptr inbounds %struct.Reg, %struct.Reg* %14842, i32 0, i32 0
  %RSI.i123 = bitcast %union.anon* %14843 to i64*
  %14844 = load i64, i64* %RSI.i123
  %14845 = load i64, i64* %RDX.i122
  %14846 = load i64, i64* %PC.i121
  %14847 = add i64 %14846, 3
  store i64 %14847, i64* %PC.i121
  %14848 = add i64 %14845, %14844
  store i64 %14848, i64* %RSI.i123, align 8
  %14849 = icmp ult i64 %14848, %14844
  %14850 = icmp ult i64 %14848, %14845
  %14851 = or i1 %14849, %14850
  %14852 = zext i1 %14851 to i8
  %14853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14852, i8* %14853, align 1
  %14854 = trunc i64 %14848 to i32
  %14855 = and i32 %14854, 255
  %14856 = call i32 @llvm.ctpop.i32(i32 %14855)
  %14857 = trunc i32 %14856 to i8
  %14858 = and i8 %14857, 1
  %14859 = xor i8 %14858, 1
  %14860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14859, i8* %14860, align 1
  %14861 = xor i64 %14845, %14844
  %14862 = xor i64 %14861, %14848
  %14863 = lshr i64 %14862, 4
  %14864 = trunc i64 %14863 to i8
  %14865 = and i8 %14864, 1
  %14866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14865, i8* %14866, align 1
  %14867 = icmp eq i64 %14848, 0
  %14868 = zext i1 %14867 to i8
  %14869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14868, i8* %14869, align 1
  %14870 = lshr i64 %14848, 63
  %14871 = trunc i64 %14870 to i8
  %14872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14871, i8* %14872, align 1
  %14873 = lshr i64 %14844, 63
  %14874 = lshr i64 %14845, 63
  %14875 = xor i64 %14870, %14873
  %14876 = xor i64 %14870, %14874
  %14877 = add i64 %14875, %14876
  %14878 = icmp eq i64 %14877, 2
  %14879 = zext i1 %14878 to i8
  %14880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14879, i8* %14880, align 1
  store %struct.Memory* %loadMem_40cc59, %struct.Memory** %MEMORY
  %loadMem_40cc5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14882 = getelementptr inbounds %struct.GPR, %struct.GPR* %14881, i32 0, i32 33
  %14883 = getelementptr inbounds %struct.Reg, %struct.Reg* %14882, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %14883 to i64*
  %14884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14885 = getelementptr inbounds %struct.GPR, %struct.GPR* %14884, i32 0, i32 5
  %14886 = getelementptr inbounds %struct.Reg, %struct.Reg* %14885, i32 0, i32 0
  %RCX.i119 = bitcast %union.anon* %14886 to i64*
  %14887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14888 = getelementptr inbounds %struct.GPR, %struct.GPR* %14887, i32 0, i32 9
  %14889 = getelementptr inbounds %struct.Reg, %struct.Reg* %14888, i32 0, i32 0
  %RSI.i120 = bitcast %union.anon* %14889 to i64*
  %14890 = load i64, i64* %RSI.i120
  %14891 = add i64 %14890, 96
  %14892 = load i64, i64* %PC.i118
  %14893 = add i64 %14892, 3
  store i64 %14893, i64* %PC.i118
  %14894 = inttoptr i64 %14891 to i32*
  %14895 = load i32, i32* %14894
  %14896 = zext i32 %14895 to i64
  store i64 %14896, i64* %RCX.i119, align 8
  store %struct.Memory* %loadMem_40cc5c, %struct.Memory** %MEMORY
  %loadMem_40cc5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14898 = getelementptr inbounds %struct.GPR, %struct.GPR* %14897, i32 0, i32 33
  %14899 = getelementptr inbounds %struct.Reg, %struct.Reg* %14898, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %14899 to i64*
  %14900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14901 = getelementptr inbounds %struct.GPR, %struct.GPR* %14900, i32 0, i32 7
  %14902 = getelementptr inbounds %struct.Reg, %struct.Reg* %14901, i32 0, i32 0
  %RDX.i117 = bitcast %union.anon* %14902 to i64*
  %14903 = load i64, i64* %PC.i116
  %14904 = add i64 %14903, 8
  store i64 %14904, i64* %PC.i116
  %14905 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %14905, i64* %RDX.i117, align 8
  store %struct.Memory* %loadMem_40cc5f, %struct.Memory** %MEMORY
  %loadMem_40cc67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14907 = getelementptr inbounds %struct.GPR, %struct.GPR* %14906, i32 0, i32 33
  %14908 = getelementptr inbounds %struct.Reg, %struct.Reg* %14907, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %14908 to i64*
  %14909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14910 = getelementptr inbounds %struct.GPR, %struct.GPR* %14909, i32 0, i32 7
  %14911 = getelementptr inbounds %struct.Reg, %struct.Reg* %14910, i32 0, i32 0
  %RDX.i114 = bitcast %union.anon* %14911 to i64*
  %14912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14913 = getelementptr inbounds %struct.GPR, %struct.GPR* %14912, i32 0, i32 9
  %14914 = getelementptr inbounds %struct.Reg, %struct.Reg* %14913, i32 0, i32 0
  %RSI.i115 = bitcast %union.anon* %14914 to i64*
  %14915 = load i64, i64* %RDX.i114
  %14916 = load i64, i64* %PC.i113
  %14917 = add i64 %14916, 3
  store i64 %14917, i64* %PC.i113
  store i64 %14915, i64* %RSI.i115, align 8
  store %struct.Memory* %loadMem_40cc67, %struct.Memory** %MEMORY
  %loadMem_40cc6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14919 = getelementptr inbounds %struct.GPR, %struct.GPR* %14918, i32 0, i32 33
  %14920 = getelementptr inbounds %struct.Reg, %struct.Reg* %14919, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %14920 to i64*
  %14921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14922 = getelementptr inbounds %struct.GPR, %struct.GPR* %14921, i32 0, i32 9
  %14923 = getelementptr inbounds %struct.Reg, %struct.Reg* %14922, i32 0, i32 0
  %RSI.i112 = bitcast %union.anon* %14923 to i64*
  %14924 = load i64, i64* %RSI.i112
  %14925 = load i64, i64* %PC.i111
  %14926 = add i64 %14925, 4
  store i64 %14926, i64* %PC.i111
  %14927 = add i64 16, %14924
  store i64 %14927, i64* %RSI.i112, align 8
  %14928 = icmp ult i64 %14927, %14924
  %14929 = icmp ult i64 %14927, 16
  %14930 = or i1 %14928, %14929
  %14931 = zext i1 %14930 to i8
  %14932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14931, i8* %14932, align 1
  %14933 = trunc i64 %14927 to i32
  %14934 = and i32 %14933, 255
  %14935 = call i32 @llvm.ctpop.i32(i32 %14934)
  %14936 = trunc i32 %14935 to i8
  %14937 = and i8 %14936, 1
  %14938 = xor i8 %14937, 1
  %14939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14938, i8* %14939, align 1
  %14940 = xor i64 16, %14924
  %14941 = xor i64 %14940, %14927
  %14942 = lshr i64 %14941, 4
  %14943 = trunc i64 %14942 to i8
  %14944 = and i8 %14943, 1
  %14945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14944, i8* %14945, align 1
  %14946 = icmp eq i64 %14927, 0
  %14947 = zext i1 %14946 to i8
  %14948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14947, i8* %14948, align 1
  %14949 = lshr i64 %14927, 63
  %14950 = trunc i64 %14949 to i8
  %14951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14950, i8* %14951, align 1
  %14952 = lshr i64 %14924, 63
  %14953 = xor i64 %14949, %14952
  %14954 = add i64 %14953, %14949
  %14955 = icmp eq i64 %14954, 2
  %14956 = zext i1 %14955 to i8
  %14957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14956, i8* %14957, align 1
  store %struct.Memory* %loadMem_40cc6a, %struct.Memory** %MEMORY
  %loadMem_40cc6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14959 = getelementptr inbounds %struct.GPR, %struct.GPR* %14958, i32 0, i32 33
  %14960 = getelementptr inbounds %struct.Reg, %struct.Reg* %14959, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %14960 to i64*
  %14961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14962 = getelementptr inbounds %struct.GPR, %struct.GPR* %14961, i32 0, i32 9
  %14963 = getelementptr inbounds %struct.Reg, %struct.Reg* %14962, i32 0, i32 0
  %RSI.i110 = bitcast %union.anon* %14963 to i64*
  %14964 = load i64, i64* %RSI.i110
  %14965 = load i64, i64* %PC.i109
  %14966 = add i64 %14965, 8
  store i64 %14966, i64* %PC.i109
  store i64 %14964, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store %struct.Memory* %loadMem_40cc6e, %struct.Memory** %MEMORY
  %loadMem_40cc76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14968 = getelementptr inbounds %struct.GPR, %struct.GPR* %14967, i32 0, i32 33
  %14969 = getelementptr inbounds %struct.Reg, %struct.Reg* %14968, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %14969 to i64*
  %14970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14971 = getelementptr inbounds %struct.GPR, %struct.GPR* %14970, i32 0, i32 5
  %14972 = getelementptr inbounds %struct.Reg, %struct.Reg* %14971, i32 0, i32 0
  %ECX.i107 = bitcast %union.anon* %14972 to i32*
  %14973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14974 = getelementptr inbounds %struct.GPR, %struct.GPR* %14973, i32 0, i32 7
  %14975 = getelementptr inbounds %struct.Reg, %struct.Reg* %14974, i32 0, i32 0
  %RDX.i108 = bitcast %union.anon* %14975 to i64*
  %14976 = load i64, i64* %RDX.i108
  %14977 = add i64 %14976, 8
  %14978 = load i32, i32* %ECX.i107
  %14979 = zext i32 %14978 to i64
  %14980 = load i64, i64* %PC.i106
  %14981 = add i64 %14980, 3
  store i64 %14981, i64* %PC.i106
  %14982 = inttoptr i64 %14977 to i32*
  store i32 %14978, i32* %14982
  store %struct.Memory* %loadMem_40cc76, %struct.Memory** %MEMORY
  %loadMem_40cc79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14984 = getelementptr inbounds %struct.GPR, %struct.GPR* %14983, i32 0, i32 33
  %14985 = getelementptr inbounds %struct.Reg, %struct.Reg* %14984, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %14985 to i64*
  %14986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14987 = getelementptr inbounds %struct.GPR, %struct.GPR* %14986, i32 0, i32 7
  %14988 = getelementptr inbounds %struct.Reg, %struct.Reg* %14987, i32 0, i32 0
  %RDX.i104 = bitcast %union.anon* %14988 to i64*
  %14989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14990 = getelementptr inbounds %struct.GPR, %struct.GPR* %14989, i32 0, i32 15
  %14991 = getelementptr inbounds %struct.Reg, %struct.Reg* %14990, i32 0, i32 0
  %RBP.i105 = bitcast %union.anon* %14991 to i64*
  %14992 = load i64, i64* %RBP.i105
  %14993 = sub i64 %14992, 4
  %14994 = load i64, i64* %PC.i103
  %14995 = add i64 %14994, 4
  store i64 %14995, i64* %PC.i103
  %14996 = inttoptr i64 %14993 to i32*
  %14997 = load i32, i32* %14996
  %14998 = sext i32 %14997 to i64
  store i64 %14998, i64* %RDX.i104, align 8
  store %struct.Memory* %loadMem_40cc79, %struct.Memory** %MEMORY
  %loadMem_40cc7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15000 = getelementptr inbounds %struct.GPR, %struct.GPR* %14999, i32 0, i32 33
  %15001 = getelementptr inbounds %struct.Reg, %struct.Reg* %15000, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %15001 to i64*
  %15002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15003 = getelementptr inbounds %struct.GPR, %struct.GPR* %15002, i32 0, i32 5
  %15004 = getelementptr inbounds %struct.Reg, %struct.Reg* %15003, i32 0, i32 0
  %RCX.i101 = bitcast %union.anon* %15004 to i64*
  %15005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15006 = getelementptr inbounds %struct.GPR, %struct.GPR* %15005, i32 0, i32 7
  %15007 = getelementptr inbounds %struct.Reg, %struct.Reg* %15006, i32 0, i32 0
  %RDX.i102 = bitcast %union.anon* %15007 to i64*
  %15008 = load i64, i64* %RDX.i102
  %15009 = mul i64 %15008, 4
  %15010 = add i64 %15009, 11187184
  %15011 = load i64, i64* %PC.i100
  %15012 = add i64 %15011, 7
  store i64 %15012, i64* %PC.i100
  %15013 = inttoptr i64 %15010 to i32*
  %15014 = load i32, i32* %15013
  %15015 = zext i32 %15014 to i64
  store i64 %15015, i64* %RCX.i101, align 8
  store %struct.Memory* %loadMem_40cc7d, %struct.Memory** %MEMORY
  %loadMem_40cc84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15017 = getelementptr inbounds %struct.GPR, %struct.GPR* %15016, i32 0, i32 33
  %15018 = getelementptr inbounds %struct.Reg, %struct.Reg* %15017, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %15018 to i64*
  %15019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15020 = getelementptr inbounds %struct.GPR, %struct.GPR* %15019, i32 0, i32 17
  %15021 = getelementptr inbounds %struct.Reg, %struct.Reg* %15020, i32 0, i32 0
  %R8D.i98 = bitcast %union.anon* %15021 to i32*
  %15022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15023 = getelementptr inbounds %struct.GPR, %struct.GPR* %15022, i32 0, i32 15
  %15024 = getelementptr inbounds %struct.Reg, %struct.Reg* %15023, i32 0, i32 0
  %RBP.i99 = bitcast %union.anon* %15024 to i64*
  %15025 = bitcast i32* %R8D.i98 to i64*
  %15026 = load i64, i64* %RBP.i99
  %15027 = sub i64 %15026, 4
  %15028 = load i64, i64* %PC.i97
  %15029 = add i64 %15028, 4
  store i64 %15029, i64* %PC.i97
  %15030 = inttoptr i64 %15027 to i32*
  %15031 = load i32, i32* %15030
  %15032 = zext i32 %15031 to i64
  store i64 %15032, i64* %15025, align 8
  store %struct.Memory* %loadMem_40cc84, %struct.Memory** %MEMORY
  %loadMem_40cc88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15034 = getelementptr inbounds %struct.GPR, %struct.GPR* %15033, i32 0, i32 33
  %15035 = getelementptr inbounds %struct.Reg, %struct.Reg* %15034, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %15035 to i64*
  %15036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15037 = getelementptr inbounds %struct.GPR, %struct.GPR* %15036, i32 0, i32 17
  %15038 = getelementptr inbounds %struct.Reg, %struct.Reg* %15037, i32 0, i32 0
  %R8D.i96 = bitcast %union.anon* %15038 to i32*
  %15039 = bitcast i32* %R8D.i96 to i64*
  %15040 = load i32, i32* %R8D.i96
  %15041 = zext i32 %15040 to i64
  %15042 = load i64, i64* %PC.i95
  %15043 = add i64 %15042, 4
  store i64 %15043, i64* %PC.i95
  %15044 = add i32 1, %15040
  %15045 = zext i32 %15044 to i64
  store i64 %15045, i64* %15039, align 8
  %15046 = icmp ult i32 %15044, %15040
  %15047 = icmp ult i32 %15044, 1
  %15048 = or i1 %15046, %15047
  %15049 = zext i1 %15048 to i8
  %15050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15049, i8* %15050, align 1
  %15051 = and i32 %15044, 255
  %15052 = call i32 @llvm.ctpop.i32(i32 %15051)
  %15053 = trunc i32 %15052 to i8
  %15054 = and i8 %15053, 1
  %15055 = xor i8 %15054, 1
  %15056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15055, i8* %15056, align 1
  %15057 = xor i64 1, %15041
  %15058 = trunc i64 %15057 to i32
  %15059 = xor i32 %15058, %15044
  %15060 = lshr i32 %15059, 4
  %15061 = trunc i32 %15060 to i8
  %15062 = and i8 %15061, 1
  %15063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15062, i8* %15063, align 1
  %15064 = icmp eq i32 %15044, 0
  %15065 = zext i1 %15064 to i8
  %15066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15065, i8* %15066, align 1
  %15067 = lshr i32 %15044, 31
  %15068 = trunc i32 %15067 to i8
  %15069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15068, i8* %15069, align 1
  %15070 = lshr i32 %15040, 31
  %15071 = xor i32 %15067, %15070
  %15072 = add i32 %15071, %15067
  %15073 = icmp eq i32 %15072, 2
  %15074 = zext i1 %15073 to i8
  %15075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15074, i8* %15075, align 1
  store %struct.Memory* %loadMem_40cc88, %struct.Memory** %MEMORY
  %loadMem_40cc8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15077 = getelementptr inbounds %struct.GPR, %struct.GPR* %15076, i32 0, i32 33
  %15078 = getelementptr inbounds %struct.Reg, %struct.Reg* %15077, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %15078 to i64*
  %15079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15080 = getelementptr inbounds %struct.GPR, %struct.GPR* %15079, i32 0, i32 17
  %15081 = getelementptr inbounds %struct.Reg, %struct.Reg* %15080, i32 0, i32 0
  %R8D.i93 = bitcast %union.anon* %15081 to i32*
  %15082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15083 = getelementptr inbounds %struct.GPR, %struct.GPR* %15082, i32 0, i32 7
  %15084 = getelementptr inbounds %struct.Reg, %struct.Reg* %15083, i32 0, i32 0
  %RDX.i94 = bitcast %union.anon* %15084 to i64*
  %15085 = load i32, i32* %R8D.i93
  %15086 = zext i32 %15085 to i64
  %15087 = load i64, i64* %PC.i92
  %15088 = add i64 %15087, 3
  store i64 %15088, i64* %PC.i92
  %15089 = shl i64 %15086, 32
  %15090 = ashr exact i64 %15089, 32
  store i64 %15090, i64* %RDX.i94, align 8
  store %struct.Memory* %loadMem_40cc8c, %struct.Memory** %MEMORY
  %loadMem_40cc8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15092 = getelementptr inbounds %struct.GPR, %struct.GPR* %15091, i32 0, i32 33
  %15093 = getelementptr inbounds %struct.Reg, %struct.Reg* %15092, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %15093 to i64*
  %15094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15095 = getelementptr inbounds %struct.GPR, %struct.GPR* %15094, i32 0, i32 7
  %15096 = getelementptr inbounds %struct.Reg, %struct.Reg* %15095, i32 0, i32 0
  %RDX.i91 = bitcast %union.anon* %15096 to i64*
  %15097 = load i64, i64* %RDX.i91
  %15098 = mul i64 %15097, 4
  %15099 = add i64 %15098, 11187184
  %15100 = load i64, i64* %PC.i90
  %15101 = add i64 %15100, 8
  store i64 %15101, i64* %PC.i90
  %15102 = inttoptr i64 %15099 to i32*
  %15103 = load i32, i32* %15102
  %15104 = sext i32 %15103 to i64
  store i64 %15104, i64* %RDX.i91, align 8
  store %struct.Memory* %loadMem_40cc8f, %struct.Memory** %MEMORY
  %loadMem_40cc97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15106 = getelementptr inbounds %struct.GPR, %struct.GPR* %15105, i32 0, i32 33
  %15107 = getelementptr inbounds %struct.Reg, %struct.Reg* %15106, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %15107 to i64*
  %15108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15109 = getelementptr inbounds %struct.GPR, %struct.GPR* %15108, i32 0, i32 7
  %15110 = getelementptr inbounds %struct.Reg, %struct.Reg* %15109, i32 0, i32 0
  %RDX.i89 = bitcast %union.anon* %15110 to i64*
  %15111 = load i64, i64* %RDX.i89
  %15112 = load i64, i64* %PC.i88
  %15113 = add i64 %15112, 7
  store i64 %15113, i64* %PC.i88
  %15114 = sext i64 %15111 to i128
  %15115 = and i128 %15114, -18446744073709551616
  %15116 = zext i64 %15111 to i128
  %15117 = or i128 %15115, %15116
  %15118 = mul i128 744, %15117
  %15119 = trunc i128 %15118 to i64
  store i64 %15119, i64* %RDX.i89, align 8
  %15120 = sext i64 %15119 to i128
  %15121 = icmp ne i128 %15120, %15118
  %15122 = zext i1 %15121 to i8
  %15123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15122, i8* %15123, align 1
  %15124 = trunc i128 %15118 to i32
  %15125 = and i32 %15124, 255
  %15126 = call i32 @llvm.ctpop.i32(i32 %15125)
  %15127 = trunc i32 %15126 to i8
  %15128 = and i8 %15127, 1
  %15129 = xor i8 %15128, 1
  %15130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15129, i8* %15130, align 1
  %15131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15131, align 1
  %15132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15132, align 1
  %15133 = lshr i64 %15119, 63
  %15134 = trunc i64 %15133 to i8
  %15135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15134, i8* %15135, align 1
  %15136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15122, i8* %15136, align 1
  store %struct.Memory* %loadMem_40cc97, %struct.Memory** %MEMORY
  %loadMem_40cc9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15138 = getelementptr inbounds %struct.GPR, %struct.GPR* %15137, i32 0, i32 33
  %15139 = getelementptr inbounds %struct.Reg, %struct.Reg* %15138, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %15139 to i64*
  %15140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15141 = getelementptr inbounds %struct.GPR, %struct.GPR* %15140, i32 0, i32 1
  %15142 = getelementptr inbounds %struct.Reg, %struct.Reg* %15141, i32 0, i32 0
  %RAX.i86 = bitcast %union.anon* %15142 to i64*
  %15143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15144 = getelementptr inbounds %struct.GPR, %struct.GPR* %15143, i32 0, i32 9
  %15145 = getelementptr inbounds %struct.Reg, %struct.Reg* %15144, i32 0, i32 0
  %RSI.i87 = bitcast %union.anon* %15145 to i64*
  %15146 = load i64, i64* %RAX.i86
  %15147 = load i64, i64* %PC.i85
  %15148 = add i64 %15147, 3
  store i64 %15148, i64* %PC.i85
  store i64 %15146, i64* %RSI.i87, align 8
  store %struct.Memory* %loadMem_40cc9e, %struct.Memory** %MEMORY
  %loadMem_40cca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15150 = getelementptr inbounds %struct.GPR, %struct.GPR* %15149, i32 0, i32 33
  %15151 = getelementptr inbounds %struct.Reg, %struct.Reg* %15150, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %15151 to i64*
  %15152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15153 = getelementptr inbounds %struct.GPR, %struct.GPR* %15152, i32 0, i32 7
  %15154 = getelementptr inbounds %struct.Reg, %struct.Reg* %15153, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %15154 to i64*
  %15155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15156 = getelementptr inbounds %struct.GPR, %struct.GPR* %15155, i32 0, i32 9
  %15157 = getelementptr inbounds %struct.Reg, %struct.Reg* %15156, i32 0, i32 0
  %RSI.i84 = bitcast %union.anon* %15157 to i64*
  %15158 = load i64, i64* %RSI.i84
  %15159 = load i64, i64* %RDX.i83
  %15160 = load i64, i64* %PC.i82
  %15161 = add i64 %15160, 3
  store i64 %15161, i64* %PC.i82
  %15162 = add i64 %15159, %15158
  store i64 %15162, i64* %RSI.i84, align 8
  %15163 = icmp ult i64 %15162, %15158
  %15164 = icmp ult i64 %15162, %15159
  %15165 = or i1 %15163, %15164
  %15166 = zext i1 %15165 to i8
  %15167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15166, i8* %15167, align 1
  %15168 = trunc i64 %15162 to i32
  %15169 = and i32 %15168, 255
  %15170 = call i32 @llvm.ctpop.i32(i32 %15169)
  %15171 = trunc i32 %15170 to i8
  %15172 = and i8 %15171, 1
  %15173 = xor i8 %15172, 1
  %15174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15173, i8* %15174, align 1
  %15175 = xor i64 %15159, %15158
  %15176 = xor i64 %15175, %15162
  %15177 = lshr i64 %15176, 4
  %15178 = trunc i64 %15177 to i8
  %15179 = and i8 %15178, 1
  %15180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15179, i8* %15180, align 1
  %15181 = icmp eq i64 %15162, 0
  %15182 = zext i1 %15181 to i8
  %15183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15182, i8* %15183, align 1
  %15184 = lshr i64 %15162, 63
  %15185 = trunc i64 %15184 to i8
  %15186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15185, i8* %15186, align 1
  %15187 = lshr i64 %15158, 63
  %15188 = lshr i64 %15159, 63
  %15189 = xor i64 %15184, %15187
  %15190 = xor i64 %15184, %15188
  %15191 = add i64 %15189, %15190
  %15192 = icmp eq i64 %15191, 2
  %15193 = zext i1 %15192 to i8
  %15194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15193, i8* %15194, align 1
  store %struct.Memory* %loadMem_40cca1, %struct.Memory** %MEMORY
  %loadMem_40cca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15196 = getelementptr inbounds %struct.GPR, %struct.GPR* %15195, i32 0, i32 33
  %15197 = getelementptr inbounds %struct.Reg, %struct.Reg* %15196, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %15197 to i64*
  %15198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15199 = getelementptr inbounds %struct.GPR, %struct.GPR* %15198, i32 0, i32 17
  %15200 = getelementptr inbounds %struct.Reg, %struct.Reg* %15199, i32 0, i32 0
  %R8D.i80 = bitcast %union.anon* %15200 to i32*
  %15201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15202 = getelementptr inbounds %struct.GPR, %struct.GPR* %15201, i32 0, i32 15
  %15203 = getelementptr inbounds %struct.Reg, %struct.Reg* %15202, i32 0, i32 0
  %RBP.i81 = bitcast %union.anon* %15203 to i64*
  %15204 = bitcast i32* %R8D.i80 to i64*
  %15205 = load i64, i64* %RBP.i81
  %15206 = sub i64 %15205, 4
  %15207 = load i64, i64* %PC.i79
  %15208 = add i64 %15207, 4
  store i64 %15208, i64* %PC.i79
  %15209 = inttoptr i64 %15206 to i32*
  %15210 = load i32, i32* %15209
  %15211 = zext i32 %15210 to i64
  store i64 %15211, i64* %15204, align 8
  store %struct.Memory* %loadMem_40cca4, %struct.Memory** %MEMORY
  %loadMem_40cca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15213 = getelementptr inbounds %struct.GPR, %struct.GPR* %15212, i32 0, i32 33
  %15214 = getelementptr inbounds %struct.Reg, %struct.Reg* %15213, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %15214 to i64*
  %15215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15216 = getelementptr inbounds %struct.GPR, %struct.GPR* %15215, i32 0, i32 17
  %15217 = getelementptr inbounds %struct.Reg, %struct.Reg* %15216, i32 0, i32 0
  %R8D.i78 = bitcast %union.anon* %15217 to i32*
  %15218 = bitcast i32* %R8D.i78 to i64*
  %15219 = load i32, i32* %R8D.i78
  %15220 = zext i32 %15219 to i64
  %15221 = load i64, i64* %PC.i77
  %15222 = add i64 %15221, 4
  store i64 %15222, i64* %PC.i77
  %15223 = add i32 1, %15219
  %15224 = zext i32 %15223 to i64
  store i64 %15224, i64* %15218, align 8
  %15225 = icmp ult i32 %15223, %15219
  %15226 = icmp ult i32 %15223, 1
  %15227 = or i1 %15225, %15226
  %15228 = zext i1 %15227 to i8
  %15229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15228, i8* %15229, align 1
  %15230 = and i32 %15223, 255
  %15231 = call i32 @llvm.ctpop.i32(i32 %15230)
  %15232 = trunc i32 %15231 to i8
  %15233 = and i8 %15232, 1
  %15234 = xor i8 %15233, 1
  %15235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15234, i8* %15235, align 1
  %15236 = xor i64 1, %15220
  %15237 = trunc i64 %15236 to i32
  %15238 = xor i32 %15237, %15223
  %15239 = lshr i32 %15238, 4
  %15240 = trunc i32 %15239 to i8
  %15241 = and i8 %15240, 1
  %15242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15241, i8* %15242, align 1
  %15243 = icmp eq i32 %15223, 0
  %15244 = zext i1 %15243 to i8
  %15245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15244, i8* %15245, align 1
  %15246 = lshr i32 %15223, 31
  %15247 = trunc i32 %15246 to i8
  %15248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15247, i8* %15248, align 1
  %15249 = lshr i32 %15219, 31
  %15250 = xor i32 %15246, %15249
  %15251 = add i32 %15250, %15246
  %15252 = icmp eq i32 %15251, 2
  %15253 = zext i1 %15252 to i8
  %15254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15253, i8* %15254, align 1
  store %struct.Memory* %loadMem_40cca8, %struct.Memory** %MEMORY
  %loadMem_40ccac = load %struct.Memory*, %struct.Memory** %MEMORY
  %15255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15256 = getelementptr inbounds %struct.GPR, %struct.GPR* %15255, i32 0, i32 33
  %15257 = getelementptr inbounds %struct.Reg, %struct.Reg* %15256, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %15257 to i64*
  %15258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15259 = getelementptr inbounds %struct.GPR, %struct.GPR* %15258, i32 0, i32 17
  %15260 = getelementptr inbounds %struct.Reg, %struct.Reg* %15259, i32 0, i32 0
  %R8D.i75 = bitcast %union.anon* %15260 to i32*
  %15261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15262 = getelementptr inbounds %struct.GPR, %struct.GPR* %15261, i32 0, i32 7
  %15263 = getelementptr inbounds %struct.Reg, %struct.Reg* %15262, i32 0, i32 0
  %RDX.i76 = bitcast %union.anon* %15263 to i64*
  %15264 = load i32, i32* %R8D.i75
  %15265 = zext i32 %15264 to i64
  %15266 = load i64, i64* %PC.i74
  %15267 = add i64 %15266, 3
  store i64 %15267, i64* %PC.i74
  %15268 = shl i64 %15265, 32
  %15269 = ashr exact i64 %15268, 32
  store i64 %15269, i64* %RDX.i76, align 8
  store %struct.Memory* %loadMem_40ccac, %struct.Memory** %MEMORY
  %loadMem_40ccaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %15270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15271 = getelementptr inbounds %struct.GPR, %struct.GPR* %15270, i32 0, i32 33
  %15272 = getelementptr inbounds %struct.Reg, %struct.Reg* %15271, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %15272 to i64*
  %15273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15274 = getelementptr inbounds %struct.GPR, %struct.GPR* %15273, i32 0, i32 7
  %15275 = getelementptr inbounds %struct.Reg, %struct.Reg* %15274, i32 0, i32 0
  %RDX.i73 = bitcast %union.anon* %15275 to i64*
  %15276 = load i64, i64* %RDX.i73
  %15277 = mul i64 %15276, 4
  %15278 = add i64 %15277, 11187184
  %15279 = load i64, i64* %PC.i72
  %15280 = add i64 %15279, 8
  store i64 %15280, i64* %PC.i72
  %15281 = inttoptr i64 %15278 to i32*
  %15282 = load i32, i32* %15281
  %15283 = sext i32 %15282 to i64
  store i64 %15283, i64* %RDX.i73, align 8
  store %struct.Memory* %loadMem_40ccaf, %struct.Memory** %MEMORY
  %loadMem_40ccb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15285 = getelementptr inbounds %struct.GPR, %struct.GPR* %15284, i32 0, i32 33
  %15286 = getelementptr inbounds %struct.Reg, %struct.Reg* %15285, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %15286 to i64*
  %15287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15288 = getelementptr inbounds %struct.GPR, %struct.GPR* %15287, i32 0, i32 7
  %15289 = getelementptr inbounds %struct.Reg, %struct.Reg* %15288, i32 0, i32 0
  %RDX.i71 = bitcast %union.anon* %15289 to i64*
  %15290 = load i64, i64* %RDX.i71
  %15291 = load i64, i64* %PC.i70
  %15292 = add i64 %15291, 7
  store i64 %15292, i64* %PC.i70
  %15293 = sext i64 %15290 to i128
  %15294 = and i128 %15293, -18446744073709551616
  %15295 = zext i64 %15290 to i128
  %15296 = or i128 %15294, %15295
  %15297 = mul i128 744, %15296
  %15298 = trunc i128 %15297 to i64
  store i64 %15298, i64* %RDX.i71, align 8
  %15299 = sext i64 %15298 to i128
  %15300 = icmp ne i128 %15299, %15297
  %15301 = zext i1 %15300 to i8
  %15302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15301, i8* %15302, align 1
  %15303 = trunc i128 %15297 to i32
  %15304 = and i32 %15303, 255
  %15305 = call i32 @llvm.ctpop.i32(i32 %15304)
  %15306 = trunc i32 %15305 to i8
  %15307 = and i8 %15306, 1
  %15308 = xor i8 %15307, 1
  %15309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15308, i8* %15309, align 1
  %15310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15310, align 1
  %15311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15311, align 1
  %15312 = lshr i64 %15298, 63
  %15313 = trunc i64 %15312 to i8
  %15314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15313, i8* %15314, align 1
  %15315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15301, i8* %15315, align 1
  store %struct.Memory* %loadMem_40ccb7, %struct.Memory** %MEMORY
  %loadMem_40ccbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %15316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15317 = getelementptr inbounds %struct.GPR, %struct.GPR* %15316, i32 0, i32 33
  %15318 = getelementptr inbounds %struct.Reg, %struct.Reg* %15317, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %15318 to i64*
  %15319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15320 = getelementptr inbounds %struct.GPR, %struct.GPR* %15319, i32 0, i32 1
  %15321 = getelementptr inbounds %struct.Reg, %struct.Reg* %15320, i32 0, i32 0
  %RAX.i68 = bitcast %union.anon* %15321 to i64*
  %15322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15323 = getelementptr inbounds %struct.GPR, %struct.GPR* %15322, i32 0, i32 7
  %15324 = getelementptr inbounds %struct.Reg, %struct.Reg* %15323, i32 0, i32 0
  %RDX.i69 = bitcast %union.anon* %15324 to i64*
  %15325 = load i64, i64* %RAX.i68
  %15326 = load i64, i64* %RDX.i69
  %15327 = load i64, i64* %PC.i67
  %15328 = add i64 %15327, 3
  store i64 %15328, i64* %PC.i67
  %15329 = add i64 %15326, %15325
  store i64 %15329, i64* %RAX.i68, align 8
  %15330 = icmp ult i64 %15329, %15325
  %15331 = icmp ult i64 %15329, %15326
  %15332 = or i1 %15330, %15331
  %15333 = zext i1 %15332 to i8
  %15334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15333, i8* %15334, align 1
  %15335 = trunc i64 %15329 to i32
  %15336 = and i32 %15335, 255
  %15337 = call i32 @llvm.ctpop.i32(i32 %15336)
  %15338 = trunc i32 %15337 to i8
  %15339 = and i8 %15338, 1
  %15340 = xor i8 %15339, 1
  %15341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15340, i8* %15341, align 1
  %15342 = xor i64 %15326, %15325
  %15343 = xor i64 %15342, %15329
  %15344 = lshr i64 %15343, 4
  %15345 = trunc i64 %15344 to i8
  %15346 = and i8 %15345, 1
  %15347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15346, i8* %15347, align 1
  %15348 = icmp eq i64 %15329, 0
  %15349 = zext i1 %15348 to i8
  %15350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15349, i8* %15350, align 1
  %15351 = lshr i64 %15329, 63
  %15352 = trunc i64 %15351 to i8
  %15353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15352, i8* %15353, align 1
  %15354 = lshr i64 %15325, 63
  %15355 = lshr i64 %15326, 63
  %15356 = xor i64 %15351, %15354
  %15357 = xor i64 %15351, %15355
  %15358 = add i64 %15356, %15357
  %15359 = icmp eq i64 %15358, 2
  %15360 = zext i1 %15359 to i8
  %15361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15360, i8* %15361, align 1
  store %struct.Memory* %loadMem_40ccbe, %struct.Memory** %MEMORY
  %loadMem_40ccc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15363 = getelementptr inbounds %struct.GPR, %struct.GPR* %15362, i32 0, i32 33
  %15364 = getelementptr inbounds %struct.Reg, %struct.Reg* %15363, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %15364 to i64*
  %15365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15366 = getelementptr inbounds %struct.GPR, %struct.GPR* %15365, i32 0, i32 17
  %15367 = getelementptr inbounds %struct.Reg, %struct.Reg* %15366, i32 0, i32 0
  %R8D.i65 = bitcast %union.anon* %15367 to i32*
  %15368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15369 = getelementptr inbounds %struct.GPR, %struct.GPR* %15368, i32 0, i32 1
  %15370 = getelementptr inbounds %struct.Reg, %struct.Reg* %15369, i32 0, i32 0
  %RAX.i66 = bitcast %union.anon* %15370 to i64*
  %15371 = bitcast i32* %R8D.i65 to i64*
  %15372 = load i64, i64* %RAX.i66
  %15373 = add i64 %15372, 96
  %15374 = load i64, i64* %PC.i64
  %15375 = add i64 %15374, 4
  store i64 %15375, i64* %PC.i64
  %15376 = inttoptr i64 %15373 to i32*
  %15377 = load i32, i32* %15376
  %15378 = zext i32 %15377 to i64
  store i64 %15378, i64* %15371, align 8
  store %struct.Memory* %loadMem_40ccc1, %struct.Memory** %MEMORY
  %loadMem_40ccc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15380 = getelementptr inbounds %struct.GPR, %struct.GPR* %15379, i32 0, i32 33
  %15381 = getelementptr inbounds %struct.Reg, %struct.Reg* %15380, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %15381 to i64*
  %15382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15383 = getelementptr inbounds %struct.GPR, %struct.GPR* %15382, i32 0, i32 17
  %15384 = getelementptr inbounds %struct.Reg, %struct.Reg* %15383, i32 0, i32 0
  %R8D.i62 = bitcast %union.anon* %15384 to i32*
  %15385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15386 = getelementptr inbounds %struct.GPR, %struct.GPR* %15385, i32 0, i32 19
  %15387 = getelementptr inbounds %struct.Reg, %struct.Reg* %15386, i32 0, i32 0
  %R9D.i63 = bitcast %union.anon* %15387 to i32*
  %15388 = bitcast i32* %R9D.i63 to i64*
  %15389 = load i32, i32* %R8D.i62
  %15390 = zext i32 %15389 to i64
  %15391 = load i64, i64* %PC.i61
  %15392 = add i64 %15391, 3
  store i64 %15392, i64* %PC.i61
  %15393 = and i64 %15390, 4294967295
  store i64 %15393, i64* %15388, align 8
  store %struct.Memory* %loadMem_40ccc5, %struct.Memory** %MEMORY
  %loadMem_40ccc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15395 = getelementptr inbounds %struct.GPR, %struct.GPR* %15394, i32 0, i32 33
  %15396 = getelementptr inbounds %struct.Reg, %struct.Reg* %15395, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %15396 to i64*
  %15397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15398 = getelementptr inbounds %struct.GPR, %struct.GPR* %15397, i32 0, i32 19
  %15399 = getelementptr inbounds %struct.Reg, %struct.Reg* %15398, i32 0, i32 0
  %R9D.i60 = bitcast %union.anon* %15399 to i32*
  %15400 = bitcast i32* %R9D.i60 to i64*
  %15401 = load i32, i32* %R9D.i60
  %15402 = zext i32 %15401 to i64
  %15403 = load i64, i64* %PC.i59
  %15404 = add i64 %15403, 4
  store i64 %15404, i64* %PC.i59
  %15405 = add i32 1, %15401
  %15406 = zext i32 %15405 to i64
  store i64 %15406, i64* %15400, align 8
  %15407 = icmp ult i32 %15405, %15401
  %15408 = icmp ult i32 %15405, 1
  %15409 = or i1 %15407, %15408
  %15410 = zext i1 %15409 to i8
  %15411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15410, i8* %15411, align 1
  %15412 = and i32 %15405, 255
  %15413 = call i32 @llvm.ctpop.i32(i32 %15412)
  %15414 = trunc i32 %15413 to i8
  %15415 = and i8 %15414, 1
  %15416 = xor i8 %15415, 1
  %15417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15416, i8* %15417, align 1
  %15418 = xor i64 1, %15402
  %15419 = trunc i64 %15418 to i32
  %15420 = xor i32 %15419, %15405
  %15421 = lshr i32 %15420, 4
  %15422 = trunc i32 %15421 to i8
  %15423 = and i8 %15422, 1
  %15424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15423, i8* %15424, align 1
  %15425 = icmp eq i32 %15405, 0
  %15426 = zext i1 %15425 to i8
  %15427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15426, i8* %15427, align 1
  %15428 = lshr i32 %15405, 31
  %15429 = trunc i32 %15428 to i8
  %15430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15429, i8* %15430, align 1
  %15431 = lshr i32 %15401, 31
  %15432 = xor i32 %15428, %15431
  %15433 = add i32 %15432, %15428
  %15434 = icmp eq i32 %15433, 2
  %15435 = zext i1 %15434 to i8
  %15436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15435, i8* %15436, align 1
  store %struct.Memory* %loadMem_40ccc8, %struct.Memory** %MEMORY
  %loadMem_40cccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15438 = getelementptr inbounds %struct.GPR, %struct.GPR* %15437, i32 0, i32 33
  %15439 = getelementptr inbounds %struct.Reg, %struct.Reg* %15438, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %15439 to i64*
  %15440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15441 = getelementptr inbounds %struct.GPR, %struct.GPR* %15440, i32 0, i32 19
  %15442 = getelementptr inbounds %struct.Reg, %struct.Reg* %15441, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %15442 to i32*
  %15443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15444 = getelementptr inbounds %struct.GPR, %struct.GPR* %15443, i32 0, i32 1
  %15445 = getelementptr inbounds %struct.Reg, %struct.Reg* %15444, i32 0, i32 0
  %RAX.i58 = bitcast %union.anon* %15445 to i64*
  %15446 = load i64, i64* %RAX.i58
  %15447 = add i64 %15446, 96
  %15448 = load i32, i32* %R9D.i
  %15449 = zext i32 %15448 to i64
  %15450 = load i64, i64* %PC.i57
  %15451 = add i64 %15450, 4
  store i64 %15451, i64* %PC.i57
  %15452 = inttoptr i64 %15447 to i32*
  store i32 %15448, i32* %15452
  store %struct.Memory* %loadMem_40cccc, %struct.Memory** %MEMORY
  %loadMem_40ccd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15454 = getelementptr inbounds %struct.GPR, %struct.GPR* %15453, i32 0, i32 33
  %15455 = getelementptr inbounds %struct.Reg, %struct.Reg* %15454, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %15455 to i64*
  %15456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15457 = getelementptr inbounds %struct.GPR, %struct.GPR* %15456, i32 0, i32 17
  %15458 = getelementptr inbounds %struct.Reg, %struct.Reg* %15457, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %15458 to i32*
  %15459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15460 = getelementptr inbounds %struct.GPR, %struct.GPR* %15459, i32 0, i32 1
  %15461 = getelementptr inbounds %struct.Reg, %struct.Reg* %15460, i32 0, i32 0
  %RAX.i56 = bitcast %union.anon* %15461 to i64*
  %15462 = load i32, i32* %R8D.i
  %15463 = zext i32 %15462 to i64
  %15464 = load i64, i64* %PC.i55
  %15465 = add i64 %15464, 3
  store i64 %15465, i64* %PC.i55
  %15466 = shl i64 %15463, 32
  %15467 = ashr exact i64 %15466, 32
  store i64 %15467, i64* %RAX.i56, align 8
  store %struct.Memory* %loadMem_40ccd0, %struct.Memory** %MEMORY
  %loadMem_40ccd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15469 = getelementptr inbounds %struct.GPR, %struct.GPR* %15468, i32 0, i32 33
  %15470 = getelementptr inbounds %struct.Reg, %struct.Reg* %15469, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %15470 to i64*
  %15471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15472 = getelementptr inbounds %struct.GPR, %struct.GPR* %15471, i32 0, i32 5
  %15473 = getelementptr inbounds %struct.Reg, %struct.Reg* %15472, i32 0, i32 0
  %ECX.i52 = bitcast %union.anon* %15473 to i32*
  %15474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15475 = getelementptr inbounds %struct.GPR, %struct.GPR* %15474, i32 0, i32 1
  %15476 = getelementptr inbounds %struct.Reg, %struct.Reg* %15475, i32 0, i32 0
  %RAX.i53 = bitcast %union.anon* %15476 to i64*
  %15477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15478 = getelementptr inbounds %struct.GPR, %struct.GPR* %15477, i32 0, i32 9
  %15479 = getelementptr inbounds %struct.Reg, %struct.Reg* %15478, i32 0, i32 0
  %RSI.i54 = bitcast %union.anon* %15479 to i64*
  %15480 = load i64, i64* %RSI.i54
  %15481 = load i64, i64* %RAX.i53
  %15482 = mul i64 %15481, 4
  %15483 = add i64 %15480, 100
  %15484 = add i64 %15483, %15482
  %15485 = load i32, i32* %ECX.i52
  %15486 = zext i32 %15485 to i64
  %15487 = load i64, i64* %PC.i51
  %15488 = add i64 %15487, 4
  store i64 %15488, i64* %PC.i51
  %15489 = inttoptr i64 %15484 to i32*
  store i32 %15485, i32* %15489
  store %struct.Memory* %loadMem_40ccd3, %struct.Memory** %MEMORY
  %loadMem_40ccd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15491 = getelementptr inbounds %struct.GPR, %struct.GPR* %15490, i32 0, i32 33
  %15492 = getelementptr inbounds %struct.Reg, %struct.Reg* %15491, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %15492 to i64*
  %15493 = load i64, i64* %PC.i50
  %15494 = add i64 %15493, 108
  %15495 = load i64, i64* %PC.i50
  %15496 = add i64 %15495, 5
  store i64 %15496, i64* %PC.i50
  %15497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15494, i64* %15497, align 8
  store %struct.Memory* %loadMem_40ccd7, %struct.Memory** %MEMORY
  br label %block_.L_40cd43

block_.L_40ccdc:                                  ; preds = %block_40cb87, %block_.L_40cb6d
  %loadMem_40ccdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15499 = getelementptr inbounds %struct.GPR, %struct.GPR* %15498, i32 0, i32 33
  %15500 = getelementptr inbounds %struct.Reg, %struct.Reg* %15499, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %15500 to i64*
  %15501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15502 = getelementptr inbounds %struct.GPR, %struct.GPR* %15501, i32 0, i32 1
  %15503 = getelementptr inbounds %struct.Reg, %struct.Reg* %15502, i32 0, i32 0
  %RAX.i48 = bitcast %union.anon* %15503 to i64*
  %15504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15505 = getelementptr inbounds %struct.GPR, %struct.GPR* %15504, i32 0, i32 15
  %15506 = getelementptr inbounds %struct.Reg, %struct.Reg* %15505, i32 0, i32 0
  %RBP.i49 = bitcast %union.anon* %15506 to i64*
  %15507 = load i64, i64* %RBP.i49
  %15508 = sub i64 %15507, 4
  %15509 = load i64, i64* %PC.i47
  %15510 = add i64 %15509, 3
  store i64 %15510, i64* %PC.i47
  %15511 = inttoptr i64 %15508 to i32*
  %15512 = load i32, i32* %15511
  %15513 = zext i32 %15512 to i64
  store i64 %15513, i64* %RAX.i48, align 8
  store %struct.Memory* %loadMem_40ccdc, %struct.Memory** %MEMORY
  %loadMem_40ccdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %15514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15515 = getelementptr inbounds %struct.GPR, %struct.GPR* %15514, i32 0, i32 33
  %15516 = getelementptr inbounds %struct.Reg, %struct.Reg* %15515, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %15516 to i64*
  %15517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15518 = getelementptr inbounds %struct.GPR, %struct.GPR* %15517, i32 0, i32 1
  %15519 = getelementptr inbounds %struct.Reg, %struct.Reg* %15518, i32 0, i32 0
  %RAX.i46 = bitcast %union.anon* %15519 to i64*
  %15520 = load i64, i64* %RAX.i46
  %15521 = load i64, i64* %PC.i45
  %15522 = add i64 %15521, 3
  store i64 %15522, i64* %PC.i45
  %15523 = trunc i64 %15520 to i32
  %15524 = add i32 1, %15523
  %15525 = zext i32 %15524 to i64
  store i64 %15525, i64* %RAX.i46, align 8
  %15526 = icmp ult i32 %15524, %15523
  %15527 = icmp ult i32 %15524, 1
  %15528 = or i1 %15526, %15527
  %15529 = zext i1 %15528 to i8
  %15530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15529, i8* %15530, align 1
  %15531 = and i32 %15524, 255
  %15532 = call i32 @llvm.ctpop.i32(i32 %15531)
  %15533 = trunc i32 %15532 to i8
  %15534 = and i8 %15533, 1
  %15535 = xor i8 %15534, 1
  %15536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15535, i8* %15536, align 1
  %15537 = xor i64 1, %15520
  %15538 = trunc i64 %15537 to i32
  %15539 = xor i32 %15538, %15524
  %15540 = lshr i32 %15539, 4
  %15541 = trunc i32 %15540 to i8
  %15542 = and i8 %15541, 1
  %15543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15542, i8* %15543, align 1
  %15544 = icmp eq i32 %15524, 0
  %15545 = zext i1 %15544 to i8
  %15546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15545, i8* %15546, align 1
  %15547 = lshr i32 %15524, 31
  %15548 = trunc i32 %15547 to i8
  %15549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15548, i8* %15549, align 1
  %15550 = lshr i32 %15523, 31
  %15551 = xor i32 %15547, %15550
  %15552 = add i32 %15551, %15547
  %15553 = icmp eq i32 %15552, 2
  %15554 = zext i1 %15553 to i8
  %15555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15554, i8* %15555, align 1
  store %struct.Memory* %loadMem_40ccdf, %struct.Memory** %MEMORY
  %loadMem_40cce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15557 = getelementptr inbounds %struct.GPR, %struct.GPR* %15556, i32 0, i32 33
  %15558 = getelementptr inbounds %struct.Reg, %struct.Reg* %15557, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %15558 to i64*
  %15559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15560 = getelementptr inbounds %struct.GPR, %struct.GPR* %15559, i32 0, i32 1
  %15561 = getelementptr inbounds %struct.Reg, %struct.Reg* %15560, i32 0, i32 0
  %EAX.i43 = bitcast %union.anon* %15561 to i32*
  %15562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15563 = getelementptr inbounds %struct.GPR, %struct.GPR* %15562, i32 0, i32 5
  %15564 = getelementptr inbounds %struct.Reg, %struct.Reg* %15563, i32 0, i32 0
  %RCX.i44 = bitcast %union.anon* %15564 to i64*
  %15565 = load i32, i32* %EAX.i43
  %15566 = zext i32 %15565 to i64
  %15567 = load i64, i64* %PC.i42
  %15568 = add i64 %15567, 3
  store i64 %15568, i64* %PC.i42
  %15569 = shl i64 %15566, 32
  %15570 = ashr exact i64 %15569, 32
  store i64 %15570, i64* %RCX.i44, align 8
  store %struct.Memory* %loadMem_40cce2, %struct.Memory** %MEMORY
  %loadMem_40cce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15572 = getelementptr inbounds %struct.GPR, %struct.GPR* %15571, i32 0, i32 33
  %15573 = getelementptr inbounds %struct.Reg, %struct.Reg* %15572, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %15573 to i64*
  %15574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15575 = getelementptr inbounds %struct.GPR, %struct.GPR* %15574, i32 0, i32 1
  %15576 = getelementptr inbounds %struct.Reg, %struct.Reg* %15575, i32 0, i32 0
  %RAX.i40 = bitcast %union.anon* %15576 to i64*
  %15577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15578 = getelementptr inbounds %struct.GPR, %struct.GPR* %15577, i32 0, i32 5
  %15579 = getelementptr inbounds %struct.Reg, %struct.Reg* %15578, i32 0, i32 0
  %RCX.i41 = bitcast %union.anon* %15579 to i64*
  %15580 = load i64, i64* %RCX.i41
  %15581 = add i64 %15580, 12099168
  %15582 = load i64, i64* %PC.i39
  %15583 = add i64 %15582, 8
  store i64 %15583, i64* %PC.i39
  %15584 = inttoptr i64 %15581 to i8*
  %15585 = load i8, i8* %15584
  %15586 = zext i8 %15585 to i64
  store i64 %15586, i64* %RAX.i40, align 8
  store %struct.Memory* %loadMem_40cce5, %struct.Memory** %MEMORY
  %loadMem_40cced = load %struct.Memory*, %struct.Memory** %MEMORY
  %15587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15588 = getelementptr inbounds %struct.GPR, %struct.GPR* %15587, i32 0, i32 33
  %15589 = getelementptr inbounds %struct.Reg, %struct.Reg* %15588, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %15589 to i64*
  %15590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15591 = getelementptr inbounds %struct.GPR, %struct.GPR* %15590, i32 0, i32 1
  %15592 = getelementptr inbounds %struct.Reg, %struct.Reg* %15591, i32 0, i32 0
  %EAX.i37 = bitcast %union.anon* %15592 to i32*
  %15593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15594 = getelementptr inbounds %struct.GPR, %struct.GPR* %15593, i32 0, i32 15
  %15595 = getelementptr inbounds %struct.Reg, %struct.Reg* %15594, i32 0, i32 0
  %RBP.i38 = bitcast %union.anon* %15595 to i64*
  %15596 = load i32, i32* %EAX.i37
  %15597 = zext i32 %15596 to i64
  %15598 = load i64, i64* %RBP.i38
  %15599 = sub i64 %15598, 12
  %15600 = load i64, i64* %PC.i36
  %15601 = add i64 %15600, 3
  store i64 %15601, i64* %PC.i36
  %15602 = inttoptr i64 %15599 to i32*
  %15603 = load i32, i32* %15602
  %15604 = sub i32 %15596, %15603
  %15605 = icmp ult i32 %15596, %15603
  %15606 = zext i1 %15605 to i8
  %15607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15606, i8* %15607, align 1
  %15608 = and i32 %15604, 255
  %15609 = call i32 @llvm.ctpop.i32(i32 %15608)
  %15610 = trunc i32 %15609 to i8
  %15611 = and i8 %15610, 1
  %15612 = xor i8 %15611, 1
  %15613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15612, i8* %15613, align 1
  %15614 = xor i32 %15603, %15596
  %15615 = xor i32 %15614, %15604
  %15616 = lshr i32 %15615, 4
  %15617 = trunc i32 %15616 to i8
  %15618 = and i8 %15617, 1
  %15619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15618, i8* %15619, align 1
  %15620 = icmp eq i32 %15604, 0
  %15621 = zext i1 %15620 to i8
  %15622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15621, i8* %15622, align 1
  %15623 = lshr i32 %15604, 31
  %15624 = trunc i32 %15623 to i8
  %15625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15624, i8* %15625, align 1
  %15626 = lshr i32 %15596, 31
  %15627 = lshr i32 %15603, 31
  %15628 = xor i32 %15627, %15626
  %15629 = xor i32 %15623, %15626
  %15630 = add i32 %15629, %15628
  %15631 = icmp eq i32 %15630, 2
  %15632 = zext i1 %15631 to i8
  %15633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15632, i8* %15633, align 1
  store %struct.Memory* %loadMem_40cced, %struct.Memory** %MEMORY
  %loadMem_40ccf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15635 = getelementptr inbounds %struct.GPR, %struct.GPR* %15634, i32 0, i32 33
  %15636 = getelementptr inbounds %struct.Reg, %struct.Reg* %15635, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %15636 to i64*
  %15637 = load i64, i64* %PC.i35
  %15638 = add i64 %15637, 78
  %15639 = load i64, i64* %PC.i35
  %15640 = add i64 %15639, 6
  %15641 = load i64, i64* %PC.i35
  %15642 = add i64 %15641, 6
  store i64 %15642, i64* %PC.i35
  %15643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15644 = load i8, i8* %15643, align 1
  %15645 = icmp eq i8 %15644, 0
  %15646 = zext i1 %15645 to i8
  store i8 %15646, i8* %BRANCH_TAKEN, align 1
  %15647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15648 = select i1 %15645, i64 %15638, i64 %15640
  store i64 %15648, i64* %15647, align 8
  store %struct.Memory* %loadMem_40ccf0, %struct.Memory** %MEMORY
  %loadBr_40ccf0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ccf0 = icmp eq i8 %loadBr_40ccf0, 1
  br i1 %cmpBr_40ccf0, label %block_.L_40cd3e, label %block_40ccf6

block_40ccf6:                                     ; preds = %block_.L_40ccdc
  %loadMem_40ccf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15650 = getelementptr inbounds %struct.GPR, %struct.GPR* %15649, i32 0, i32 33
  %15651 = getelementptr inbounds %struct.Reg, %struct.Reg* %15650, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %15651 to i64*
  %15652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15653 = getelementptr inbounds %struct.GPR, %struct.GPR* %15652, i32 0, i32 1
  %15654 = getelementptr inbounds %struct.Reg, %struct.Reg* %15653, i32 0, i32 0
  %RAX.i34 = bitcast %union.anon* %15654 to i64*
  %15655 = load i64, i64* %PC.i33
  %15656 = add i64 %15655, 10
  store i64 %15656, i64* %PC.i33
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i34, align 8
  store %struct.Memory* %loadMem_40ccf6, %struct.Memory** %MEMORY
  %loadMem_40cd00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15658 = getelementptr inbounds %struct.GPR, %struct.GPR* %15657, i32 0, i32 33
  %15659 = getelementptr inbounds %struct.Reg, %struct.Reg* %15658, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %15659 to i64*
  %15660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15661 = getelementptr inbounds %struct.GPR, %struct.GPR* %15660, i32 0, i32 5
  %15662 = getelementptr inbounds %struct.Reg, %struct.Reg* %15661, i32 0, i32 0
  %RCX.i31 = bitcast %union.anon* %15662 to i64*
  %15663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15664 = getelementptr inbounds %struct.GPR, %struct.GPR* %15663, i32 0, i32 15
  %15665 = getelementptr inbounds %struct.Reg, %struct.Reg* %15664, i32 0, i32 0
  %RBP.i32 = bitcast %union.anon* %15665 to i64*
  %15666 = load i64, i64* %RBP.i32
  %15667 = sub i64 %15666, 4
  %15668 = load i64, i64* %PC.i30
  %15669 = add i64 %15668, 3
  store i64 %15669, i64* %PC.i30
  %15670 = inttoptr i64 %15667 to i32*
  %15671 = load i32, i32* %15670
  %15672 = zext i32 %15671 to i64
  store i64 %15672, i64* %RCX.i31, align 8
  store %struct.Memory* %loadMem_40cd00, %struct.Memory** %MEMORY
  %loadMem_40cd03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15674 = getelementptr inbounds %struct.GPR, %struct.GPR* %15673, i32 0, i32 33
  %15675 = getelementptr inbounds %struct.Reg, %struct.Reg* %15674, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %15675 to i64*
  %15676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15677 = getelementptr inbounds %struct.GPR, %struct.GPR* %15676, i32 0, i32 5
  %15678 = getelementptr inbounds %struct.Reg, %struct.Reg* %15677, i32 0, i32 0
  %RCX.i29 = bitcast %union.anon* %15678 to i64*
  %15679 = load i64, i64* %RCX.i29
  %15680 = load i64, i64* %PC.i28
  %15681 = add i64 %15680, 3
  store i64 %15681, i64* %PC.i28
  %15682 = trunc i64 %15679 to i32
  %15683 = add i32 1, %15682
  %15684 = zext i32 %15683 to i64
  store i64 %15684, i64* %RCX.i29, align 8
  %15685 = icmp ult i32 %15683, %15682
  %15686 = icmp ult i32 %15683, 1
  %15687 = or i1 %15685, %15686
  %15688 = zext i1 %15687 to i8
  %15689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15688, i8* %15689, align 1
  %15690 = and i32 %15683, 255
  %15691 = call i32 @llvm.ctpop.i32(i32 %15690)
  %15692 = trunc i32 %15691 to i8
  %15693 = and i8 %15692, 1
  %15694 = xor i8 %15693, 1
  %15695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15694, i8* %15695, align 1
  %15696 = xor i64 1, %15679
  %15697 = trunc i64 %15696 to i32
  %15698 = xor i32 %15697, %15683
  %15699 = lshr i32 %15698, 4
  %15700 = trunc i32 %15699 to i8
  %15701 = and i8 %15700, 1
  %15702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15701, i8* %15702, align 1
  %15703 = icmp eq i32 %15683, 0
  %15704 = zext i1 %15703 to i8
  %15705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15704, i8* %15705, align 1
  %15706 = lshr i32 %15683, 31
  %15707 = trunc i32 %15706 to i8
  %15708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15707, i8* %15708, align 1
  %15709 = lshr i32 %15682, 31
  %15710 = xor i32 %15706, %15709
  %15711 = add i32 %15710, %15706
  %15712 = icmp eq i32 %15711, 2
  %15713 = zext i1 %15712 to i8
  %15714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15713, i8* %15714, align 1
  store %struct.Memory* %loadMem_40cd03, %struct.Memory** %MEMORY
  %loadMem_40cd06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15716 = getelementptr inbounds %struct.GPR, %struct.GPR* %15715, i32 0, i32 33
  %15717 = getelementptr inbounds %struct.Reg, %struct.Reg* %15716, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %15717 to i64*
  %15718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15719 = getelementptr inbounds %struct.GPR, %struct.GPR* %15718, i32 0, i32 5
  %15720 = getelementptr inbounds %struct.Reg, %struct.Reg* %15719, i32 0, i32 0
  %ECX.i26 = bitcast %union.anon* %15720 to i32*
  %15721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15722 = getelementptr inbounds %struct.GPR, %struct.GPR* %15721, i32 0, i32 7
  %15723 = getelementptr inbounds %struct.Reg, %struct.Reg* %15722, i32 0, i32 0
  %RDX.i27 = bitcast %union.anon* %15723 to i64*
  %15724 = load i32, i32* %ECX.i26
  %15725 = zext i32 %15724 to i64
  %15726 = load i64, i64* %PC.i25
  %15727 = add i64 %15726, 3
  store i64 %15727, i64* %PC.i25
  %15728 = shl i64 %15725, 32
  %15729 = ashr exact i64 %15728, 32
  store i64 %15729, i64* %RDX.i27, align 8
  store %struct.Memory* %loadMem_40cd06, %struct.Memory** %MEMORY
  %loadMem_40cd09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15731 = getelementptr inbounds %struct.GPR, %struct.GPR* %15730, i32 0, i32 33
  %15732 = getelementptr inbounds %struct.Reg, %struct.Reg* %15731, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %15732 to i64*
  %15733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15734 = getelementptr inbounds %struct.GPR, %struct.GPR* %15733, i32 0, i32 7
  %15735 = getelementptr inbounds %struct.Reg, %struct.Reg* %15734, i32 0, i32 0
  %RDX.i24 = bitcast %union.anon* %15735 to i64*
  %15736 = load i64, i64* %RDX.i24
  %15737 = mul i64 %15736, 4
  %15738 = add i64 %15737, 11187184
  %15739 = load i64, i64* %PC.i23
  %15740 = add i64 %15739, 8
  store i64 %15740, i64* %PC.i23
  %15741 = inttoptr i64 %15738 to i32*
  %15742 = load i32, i32* %15741
  %15743 = sext i32 %15742 to i64
  store i64 %15743, i64* %RDX.i24, align 8
  store %struct.Memory* %loadMem_40cd09, %struct.Memory** %MEMORY
  %loadMem_40cd11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15745 = getelementptr inbounds %struct.GPR, %struct.GPR* %15744, i32 0, i32 33
  %15746 = getelementptr inbounds %struct.Reg, %struct.Reg* %15745, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %15746 to i64*
  %15747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15748 = getelementptr inbounds %struct.GPR, %struct.GPR* %15747, i32 0, i32 7
  %15749 = getelementptr inbounds %struct.Reg, %struct.Reg* %15748, i32 0, i32 0
  %RDX.i22 = bitcast %union.anon* %15749 to i64*
  %15750 = load i64, i64* %RDX.i22
  %15751 = load i64, i64* %PC.i21
  %15752 = add i64 %15751, 7
  store i64 %15752, i64* %PC.i21
  %15753 = sext i64 %15750 to i128
  %15754 = and i128 %15753, -18446744073709551616
  %15755 = zext i64 %15750 to i128
  %15756 = or i128 %15754, %15755
  %15757 = mul i128 744, %15756
  %15758 = trunc i128 %15757 to i64
  store i64 %15758, i64* %RDX.i22, align 8
  %15759 = sext i64 %15758 to i128
  %15760 = icmp ne i128 %15759, %15757
  %15761 = zext i1 %15760 to i8
  %15762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15761, i8* %15762, align 1
  %15763 = trunc i128 %15757 to i32
  %15764 = and i32 %15763, 255
  %15765 = call i32 @llvm.ctpop.i32(i32 %15764)
  %15766 = trunc i32 %15765 to i8
  %15767 = and i8 %15766, 1
  %15768 = xor i8 %15767, 1
  %15769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15768, i8* %15769, align 1
  %15770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15770, align 1
  %15771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15771, align 1
  %15772 = lshr i64 %15758, 63
  %15773 = trunc i64 %15772 to i8
  %15774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15773, i8* %15774, align 1
  %15775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15761, i8* %15775, align 1
  store %struct.Memory* %loadMem_40cd11, %struct.Memory** %MEMORY
  %loadMem_40cd18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15777 = getelementptr inbounds %struct.GPR, %struct.GPR* %15776, i32 0, i32 33
  %15778 = getelementptr inbounds %struct.Reg, %struct.Reg* %15777, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %15778 to i64*
  %15779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15780 = getelementptr inbounds %struct.GPR, %struct.GPR* %15779, i32 0, i32 1
  %15781 = getelementptr inbounds %struct.Reg, %struct.Reg* %15780, i32 0, i32 0
  %RAX.i20 = bitcast %union.anon* %15781 to i64*
  %15782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15783 = getelementptr inbounds %struct.GPR, %struct.GPR* %15782, i32 0, i32 7
  %15784 = getelementptr inbounds %struct.Reg, %struct.Reg* %15783, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %15784 to i64*
  %15785 = load i64, i64* %RAX.i20
  %15786 = load i64, i64* %RDX.i
  %15787 = load i64, i64* %PC.i19
  %15788 = add i64 %15787, 3
  store i64 %15788, i64* %PC.i19
  %15789 = add i64 %15786, %15785
  store i64 %15789, i64* %RAX.i20, align 8
  %15790 = icmp ult i64 %15789, %15785
  %15791 = icmp ult i64 %15789, %15786
  %15792 = or i1 %15790, %15791
  %15793 = zext i1 %15792 to i8
  %15794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15793, i8* %15794, align 1
  %15795 = trunc i64 %15789 to i32
  %15796 = and i32 %15795, 255
  %15797 = call i32 @llvm.ctpop.i32(i32 %15796)
  %15798 = trunc i32 %15797 to i8
  %15799 = and i8 %15798, 1
  %15800 = xor i8 %15799, 1
  %15801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15800, i8* %15801, align 1
  %15802 = xor i64 %15786, %15785
  %15803 = xor i64 %15802, %15789
  %15804 = lshr i64 %15803, 4
  %15805 = trunc i64 %15804 to i8
  %15806 = and i8 %15805, 1
  %15807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15806, i8* %15807, align 1
  %15808 = icmp eq i64 %15789, 0
  %15809 = zext i1 %15808 to i8
  %15810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15809, i8* %15810, align 1
  %15811 = lshr i64 %15789, 63
  %15812 = trunc i64 %15811 to i8
  %15813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15812, i8* %15813, align 1
  %15814 = lshr i64 %15785, 63
  %15815 = lshr i64 %15786, 63
  %15816 = xor i64 %15811, %15814
  %15817 = xor i64 %15811, %15815
  %15818 = add i64 %15816, %15817
  %15819 = icmp eq i64 %15818, 2
  %15820 = zext i1 %15819 to i8
  %15821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15820, i8* %15821, align 1
  store %struct.Memory* %loadMem_40cd18, %struct.Memory** %MEMORY
  %loadMem_40cd1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15823 = getelementptr inbounds %struct.GPR, %struct.GPR* %15822, i32 0, i32 33
  %15824 = getelementptr inbounds %struct.Reg, %struct.Reg* %15823, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %15824 to i64*
  %15825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15826 = getelementptr inbounds %struct.GPR, %struct.GPR* %15825, i32 0, i32 1
  %15827 = getelementptr inbounds %struct.Reg, %struct.Reg* %15826, i32 0, i32 0
  %RAX.i18 = bitcast %union.anon* %15827 to i64*
  %15828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15829 = getelementptr inbounds %struct.GPR, %struct.GPR* %15828, i32 0, i32 5
  %15830 = getelementptr inbounds %struct.Reg, %struct.Reg* %15829, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %15830 to i64*
  %15831 = load i64, i64* %RAX.i18
  %15832 = add i64 %15831, 740
  %15833 = load i64, i64* %PC.i17
  %15834 = add i64 %15833, 6
  store i64 %15834, i64* %PC.i17
  %15835 = inttoptr i64 %15832 to i32*
  %15836 = load i32, i32* %15835
  %15837 = zext i32 %15836 to i64
  store i64 %15837, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_40cd1b, %struct.Memory** %MEMORY
  %loadMem_40cd21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15839 = getelementptr inbounds %struct.GPR, %struct.GPR* %15838, i32 0, i32 33
  %15840 = getelementptr inbounds %struct.Reg, %struct.Reg* %15839, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %15840 to i64*
  %15841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15842 = getelementptr inbounds %struct.GPR, %struct.GPR* %15841, i32 0, i32 5
  %15843 = getelementptr inbounds %struct.Reg, %struct.Reg* %15842, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %15843 to i32*
  %15844 = load i32, i32* %ECX.i
  %15845 = zext i32 %15844 to i64
  %15846 = load i64, i64* %PC.i16
  %15847 = add i64 %15846, 7
  store i64 %15847, i64* %PC.i16
  %15848 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %15849 = sub i32 %15844, %15848
  %15850 = icmp ult i32 %15844, %15848
  %15851 = zext i1 %15850 to i8
  %15852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15851, i8* %15852, align 1
  %15853 = and i32 %15849, 255
  %15854 = call i32 @llvm.ctpop.i32(i32 %15853)
  %15855 = trunc i32 %15854 to i8
  %15856 = and i8 %15855, 1
  %15857 = xor i8 %15856, 1
  %15858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15857, i8* %15858, align 1
  %15859 = xor i32 %15848, %15844
  %15860 = xor i32 %15859, %15849
  %15861 = lshr i32 %15860, 4
  %15862 = trunc i32 %15861 to i8
  %15863 = and i8 %15862, 1
  %15864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15863, i8* %15864, align 1
  %15865 = icmp eq i32 %15849, 0
  %15866 = zext i1 %15865 to i8
  %15867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15866, i8* %15867, align 1
  %15868 = lshr i32 %15849, 31
  %15869 = trunc i32 %15868 to i8
  %15870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15869, i8* %15870, align 1
  %15871 = lshr i32 %15844, 31
  %15872 = lshr i32 %15848, 31
  %15873 = xor i32 %15872, %15871
  %15874 = xor i32 %15868, %15871
  %15875 = add i32 %15874, %15873
  %15876 = icmp eq i32 %15875, 2
  %15877 = zext i1 %15876 to i8
  %15878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15877, i8* %15878, align 1
  store %struct.Memory* %loadMem_40cd21, %struct.Memory** %MEMORY
  %loadMem_40cd28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15880 = getelementptr inbounds %struct.GPR, %struct.GPR* %15879, i32 0, i32 33
  %15881 = getelementptr inbounds %struct.Reg, %struct.Reg* %15880, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %15881 to i64*
  %15882 = load i64, i64* %PC.i15
  %15883 = add i64 %15882, 22
  %15884 = load i64, i64* %PC.i15
  %15885 = add i64 %15884, 6
  %15886 = load i64, i64* %PC.i15
  %15887 = add i64 %15886, 6
  store i64 %15887, i64* %PC.i15
  %15888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15889 = load i8, i8* %15888, align 1
  store i8 %15889, i8* %BRANCH_TAKEN, align 1
  %15890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15891 = icmp ne i8 %15889, 0
  %15892 = select i1 %15891, i64 %15883, i64 %15885
  store i64 %15892, i64* %15890, align 8
  store %struct.Memory* %loadMem_40cd28, %struct.Memory** %MEMORY
  %loadBr_40cd28 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cd28 = icmp eq i8 %loadBr_40cd28, 1
  br i1 %cmpBr_40cd28, label %block_.L_40cd3e, label %block_40cd2e

block_40cd2e:                                     ; preds = %block_40ccf6
  %loadMem_40cd2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15894 = getelementptr inbounds %struct.GPR, %struct.GPR* %15893, i32 0, i32 33
  %15895 = getelementptr inbounds %struct.Reg, %struct.Reg* %15894, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %15895 to i64*
  %15896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15897 = getelementptr inbounds %struct.GPR, %struct.GPR* %15896, i32 0, i32 11
  %15898 = getelementptr inbounds %struct.Reg, %struct.Reg* %15897, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %15898 to i64*
  %15899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15900 = getelementptr inbounds %struct.GPR, %struct.GPR* %15899, i32 0, i32 15
  %15901 = getelementptr inbounds %struct.Reg, %struct.Reg* %15900, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %15901 to i64*
  %15902 = load i64, i64* %RBP.i14
  %15903 = sub i64 %15902, 8
  %15904 = load i64, i64* %PC.i13
  %15905 = add i64 %15904, 3
  store i64 %15905, i64* %PC.i13
  %15906 = inttoptr i64 %15903 to i32*
  %15907 = load i32, i32* %15906
  %15908 = zext i32 %15907 to i64
  store i64 %15908, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_40cd2e, %struct.Memory** %MEMORY
  %loadMem_40cd31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15910 = getelementptr inbounds %struct.GPR, %struct.GPR* %15909, i32 0, i32 33
  %15911 = getelementptr inbounds %struct.Reg, %struct.Reg* %15910, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %15911 to i64*
  %15912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15913 = getelementptr inbounds %struct.GPR, %struct.GPR* %15912, i32 0, i32 1
  %15914 = getelementptr inbounds %struct.Reg, %struct.Reg* %15913, i32 0, i32 0
  %RAX.i11 = bitcast %union.anon* %15914 to i64*
  %15915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15916 = getelementptr inbounds %struct.GPR, %struct.GPR* %15915, i32 0, i32 15
  %15917 = getelementptr inbounds %struct.Reg, %struct.Reg* %15916, i32 0, i32 0
  %RBP.i12 = bitcast %union.anon* %15917 to i64*
  %15918 = load i64, i64* %RBP.i12
  %15919 = sub i64 %15918, 4
  %15920 = load i64, i64* %PC.i10
  %15921 = add i64 %15920, 3
  store i64 %15921, i64* %PC.i10
  %15922 = inttoptr i64 %15919 to i32*
  %15923 = load i32, i32* %15922
  %15924 = zext i32 %15923 to i64
  store i64 %15924, i64* %RAX.i11, align 8
  store %struct.Memory* %loadMem_40cd31, %struct.Memory** %MEMORY
  %loadMem_40cd34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15926 = getelementptr inbounds %struct.GPR, %struct.GPR* %15925, i32 0, i32 33
  %15927 = getelementptr inbounds %struct.Reg, %struct.Reg* %15926, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %15927 to i64*
  %15928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15929 = getelementptr inbounds %struct.GPR, %struct.GPR* %15928, i32 0, i32 1
  %15930 = getelementptr inbounds %struct.Reg, %struct.Reg* %15929, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %15930 to i64*
  %15931 = load i64, i64* %RAX.i
  %15932 = load i64, i64* %PC.i9
  %15933 = add i64 %15932, 3
  store i64 %15933, i64* %PC.i9
  %15934 = trunc i64 %15931 to i32
  %15935 = add i32 1, %15934
  %15936 = zext i32 %15935 to i64
  store i64 %15936, i64* %RAX.i, align 8
  %15937 = icmp ult i32 %15935, %15934
  %15938 = icmp ult i32 %15935, 1
  %15939 = or i1 %15937, %15938
  %15940 = zext i1 %15939 to i8
  %15941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15940, i8* %15941, align 1
  %15942 = and i32 %15935, 255
  %15943 = call i32 @llvm.ctpop.i32(i32 %15942)
  %15944 = trunc i32 %15943 to i8
  %15945 = and i8 %15944, 1
  %15946 = xor i8 %15945, 1
  %15947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15946, i8* %15947, align 1
  %15948 = xor i64 1, %15931
  %15949 = trunc i64 %15948 to i32
  %15950 = xor i32 %15949, %15935
  %15951 = lshr i32 %15950, 4
  %15952 = trunc i32 %15951 to i8
  %15953 = and i8 %15952, 1
  %15954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15953, i8* %15954, align 1
  %15955 = icmp eq i32 %15935, 0
  %15956 = zext i1 %15955 to i8
  %15957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15956, i8* %15957, align 1
  %15958 = lshr i32 %15935, 31
  %15959 = trunc i32 %15958 to i8
  %15960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15959, i8* %15960, align 1
  %15961 = lshr i32 %15934, 31
  %15962 = xor i32 %15958, %15961
  %15963 = add i32 %15962, %15958
  %15964 = icmp eq i32 %15963, 2
  %15965 = zext i1 %15964 to i8
  %15966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15965, i8* %15966, align 1
  store %struct.Memory* %loadMem_40cd34, %struct.Memory** %MEMORY
  %loadMem_40cd37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15968 = getelementptr inbounds %struct.GPR, %struct.GPR* %15967, i32 0, i32 33
  %15969 = getelementptr inbounds %struct.Reg, %struct.Reg* %15968, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %15969 to i64*
  %15970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15971 = getelementptr inbounds %struct.GPR, %struct.GPR* %15970, i32 0, i32 1
  %15972 = getelementptr inbounds %struct.Reg, %struct.Reg* %15971, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %15972 to i32*
  %15973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15974 = getelementptr inbounds %struct.GPR, %struct.GPR* %15973, i32 0, i32 9
  %15975 = getelementptr inbounds %struct.Reg, %struct.Reg* %15974, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %15975 to i64*
  %15976 = load i32, i32* %EAX.i
  %15977 = zext i32 %15976 to i64
  %15978 = load i64, i64* %PC.i8
  %15979 = add i64 %15978, 2
  store i64 %15979, i64* %PC.i8
  %15980 = and i64 %15977, 4294967295
  store i64 %15980, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_40cd37, %struct.Memory** %MEMORY
  %loadMem1_40cd39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15982 = getelementptr inbounds %struct.GPR, %struct.GPR* %15981, i32 0, i32 33
  %15983 = getelementptr inbounds %struct.Reg, %struct.Reg* %15982, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %15983 to i64*
  %15984 = load i64, i64* %PC.i7
  %15985 = add i64 %15984, 23
  %15986 = load i64, i64* %PC.i7
  %15987 = add i64 %15986, 5
  %15988 = load i64, i64* %PC.i7
  %15989 = add i64 %15988, 5
  store i64 %15989, i64* %PC.i7
  %15990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15991 = load i64, i64* %15990, align 8
  %15992 = add i64 %15991, -8
  %15993 = inttoptr i64 %15992 to i64*
  store i64 %15987, i64* %15993
  store i64 %15992, i64* %15990, align 8
  %15994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15985, i64* %15994, align 8
  store %struct.Memory* %loadMem1_40cd39, %struct.Memory** %MEMORY
  %loadMem2_40cd39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40cd39 = load i64, i64* %3
  %call2_40cd39 = call %struct.Memory* @sub_40cd50.assimilate_string(%struct.State* %0, i64 %loadPC_40cd39, %struct.Memory* %loadMem2_40cd39)
  store %struct.Memory* %call2_40cd39, %struct.Memory** %MEMORY
  br label %block_.L_40cd3e

block_.L_40cd3e:                                  ; preds = %block_40cd2e, %block_40ccf6, %block_.L_40ccdc
  %loadMem_40cd3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15996 = getelementptr inbounds %struct.GPR, %struct.GPR* %15995, i32 0, i32 33
  %15997 = getelementptr inbounds %struct.Reg, %struct.Reg* %15996, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %15997 to i64*
  %15998 = load i64, i64* %PC.i6
  %15999 = add i64 %15998, 5
  %16000 = load i64, i64* %PC.i6
  %16001 = add i64 %16000, 5
  store i64 %16001, i64* %PC.i6
  %16002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15999, i64* %16002, align 8
  store %struct.Memory* %loadMem_40cd3e, %struct.Memory** %MEMORY
  br label %block_.L_40cd43

block_.L_40cd43:                                  ; preds = %block_.L_40cd3e, %block_40cbbf
  %loadMem_40cd43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16004 = getelementptr inbounds %struct.GPR, %struct.GPR* %16003, i32 0, i32 33
  %16005 = getelementptr inbounds %struct.Reg, %struct.Reg* %16004, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %16005 to i64*
  %16006 = load i64, i64* %PC.i5
  %16007 = add i64 %16006, 5
  %16008 = load i64, i64* %PC.i5
  %16009 = add i64 %16008, 5
  store i64 %16009, i64* %PC.i5
  %16010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16007, i64* %16010, align 8
  store %struct.Memory* %loadMem_40cd43, %struct.Memory** %MEMORY
  br label %block_.L_40cd48

block_.L_40cd48:                                  ; preds = %block_.L_40cd43, %block_.L_40cb47
  %loadMem_40cd48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16012 = getelementptr inbounds %struct.GPR, %struct.GPR* %16011, i32 0, i32 33
  %16013 = getelementptr inbounds %struct.Reg, %struct.Reg* %16012, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %16013 to i64*
  %16014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16015 = getelementptr inbounds %struct.GPR, %struct.GPR* %16014, i32 0, i32 13
  %16016 = getelementptr inbounds %struct.Reg, %struct.Reg* %16015, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %16016 to i64*
  %16017 = load i64, i64* %RSP.i
  %16018 = load i64, i64* %PC.i4
  %16019 = add i64 %16018, 4
  store i64 %16019, i64* %PC.i4
  %16020 = add i64 48, %16017
  store i64 %16020, i64* %RSP.i, align 8
  %16021 = icmp ult i64 %16020, %16017
  %16022 = icmp ult i64 %16020, 48
  %16023 = or i1 %16021, %16022
  %16024 = zext i1 %16023 to i8
  %16025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16024, i8* %16025, align 1
  %16026 = trunc i64 %16020 to i32
  %16027 = and i32 %16026, 255
  %16028 = call i32 @llvm.ctpop.i32(i32 %16027)
  %16029 = trunc i32 %16028 to i8
  %16030 = and i8 %16029, 1
  %16031 = xor i8 %16030, 1
  %16032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16031, i8* %16032, align 1
  %16033 = xor i64 48, %16017
  %16034 = xor i64 %16033, %16020
  %16035 = lshr i64 %16034, 4
  %16036 = trunc i64 %16035 to i8
  %16037 = and i8 %16036, 1
  %16038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16037, i8* %16038, align 1
  %16039 = icmp eq i64 %16020, 0
  %16040 = zext i1 %16039 to i8
  %16041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16040, i8* %16041, align 1
  %16042 = lshr i64 %16020, 63
  %16043 = trunc i64 %16042 to i8
  %16044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16043, i8* %16044, align 1
  %16045 = lshr i64 %16017, 63
  %16046 = xor i64 %16042, %16045
  %16047 = add i64 %16046, %16042
  %16048 = icmp eq i64 %16047, 2
  %16049 = zext i1 %16048 to i8
  %16050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16049, i8* %16050, align 1
  store %struct.Memory* %loadMem_40cd48, %struct.Memory** %MEMORY
  %loadMem_40cd4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16052 = getelementptr inbounds %struct.GPR, %struct.GPR* %16051, i32 0, i32 33
  %16053 = getelementptr inbounds %struct.Reg, %struct.Reg* %16052, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %16053 to i64*
  %16054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16055 = getelementptr inbounds %struct.GPR, %struct.GPR* %16054, i32 0, i32 15
  %16056 = getelementptr inbounds %struct.Reg, %struct.Reg* %16055, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %16056 to i64*
  %16057 = load i64, i64* %PC.i2
  %16058 = add i64 %16057, 1
  store i64 %16058, i64* %PC.i2
  %16059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16060 = load i64, i64* %16059, align 8
  %16061 = add i64 %16060, 8
  %16062 = inttoptr i64 %16060 to i64*
  %16063 = load i64, i64* %16062
  store i64 %16063, i64* %RBP.i3, align 8
  store i64 %16061, i64* %16059, align 8
  store %struct.Memory* %loadMem_40cd4c, %struct.Memory** %MEMORY
  %loadMem_40cd4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16065 = getelementptr inbounds %struct.GPR, %struct.GPR* %16064, i32 0, i32 33
  %16066 = getelementptr inbounds %struct.Reg, %struct.Reg* %16065, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %16066 to i64*
  %16067 = load i64, i64* %PC.i1
  %16068 = add i64 %16067, 1
  store i64 %16068, i64* %PC.i1
  %16069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16071 = load i64, i64* %16070, align 8
  %16072 = inttoptr i64 %16071 to i64*
  %16073 = load i64, i64* %16072
  store i64 %16073, i64* %16069, align 8
  %16074 = add i64 %16071, 8
  store i64 %16074, i64* %16070, align 8
  store %struct.Memory* %loadMem_40cd4d, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_40cd4d
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x30___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 48
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 48
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 48, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x99da00___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x99da00_type* @G__0x99da00 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rdx_1____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0xc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xa0e710___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax____rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da00___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da00_type* @G_0x99da00 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xa0e710___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x10___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 16, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 16
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 16, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__0xa0e710(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x99da00(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x99da00_type* @G_0x99da00 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xf0__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 240
  %16 = icmp ult i32 %14, 240
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 240
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c0f3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c14c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57a16e___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57a16e_type* @G__0x57a16e to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xce0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3296, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57a321___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57a321_type* @G__0x57a321 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 20, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r9___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abortgo(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xa7f430___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0xaab3f0___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11187184
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0xaaba30___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11188784
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x2e8___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 744, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x4__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0xc__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x60__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da04___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x99da04(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da08___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x99da08(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x2e4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 740
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c2f6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xaaadb0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11185584
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x99da04___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40c2f6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c260(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x2e8___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 744, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x14__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 20
  %16 = icmp ult i32 %14, 20
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 20
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c2b9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x10__rsi__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 16
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da04___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da04_type* @G_0x99da04 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0xaaadb0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11185584
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c4fe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 16
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c492(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xaab3f0___rdx_4____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 11187184
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x2e4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 740
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x99da08___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40c492(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xaab3f0___rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11187184
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x60__rdi____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 1, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 1
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 1, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x60__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 96
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r8d___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x64__rsi__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 100
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x60___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 96, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 96
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 96, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi____rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x60__rsi____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x10___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 16, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 16
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 16, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__0xa0e710(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0xa0e710_type* @G_0xa0e710 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 20, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 20
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 20, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c4f9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c4f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40c4f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.assimilate_string(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c5d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40c5d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c53a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c593(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c7d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c76c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40c76c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = sub i32 %10, 1
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %10, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1, %11
  %26 = trunc i64 %25 to i32
  %27 = xor i32 %26, %14
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %14, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %14, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %10, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c7d3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c7ce(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40c7ce(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c8aa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40c8aa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c814(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c86d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cab2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40ca46(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40ca46(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = sub i32 %10, 20
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %10, 20
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 20, %11
  %26 = trunc i64 %25 to i32
  %27 = xor i32 %26, %14
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %14, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %14, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %10, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40caad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40caa8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40caa8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40cb6d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40cb6d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40caee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40cb47(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cd48(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40ccdc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40ccdc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 1, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 1
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 1, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x60__rax____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0x60__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 96
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r8d___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x64__rsi__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 100
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cd43(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40cd3e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40cd3e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x30___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 48, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 48
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 48, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
