; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_41fc30.is_same_dragon(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_415cb0.mark_string(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_452090.abortgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4011f0.ceil_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_423120.are_neighbor_dragons(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_474970.start_draw_board(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_474a20.draw_color_char(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_474da0.end_draw_board(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x6cd68__rip__type = type <{ [8 x i8] }>
@G_0x6cd68__rip_= global %G_0x6cd68__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cea2__rip__type = type <{ [8 x i8] }>
@G_0x6cea2__rip_= global %G_0x6cea2__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x7ae438_type = type <{ [4 x i8] }>
@G_0x7ae438= global %G_0x7ae438_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xab0fe0_type = type <{ [8 x i8] }>
@G_0xab0fe0= global %G_0xab0fe0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xb63050_type = type <{ [4 x i8] }>
@G_0xb63050= global %G_0xb63050_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x58192c_type = type <{ [8 x i8] }>
@G__0x58192c= global %G__0x58192c_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x5819e3_type = type <{ [8 x i8] }>
@G__0x5819e3= global %G__0x5819e3_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x5819f6_type = type <{ [8 x i8] }>
@G__0x5819f6= global %G__0x5819f6_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0xb0eff0_type = type <{ [8 x i8] }>
@G__0xb0eff0= global %G__0xb0eff0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0xb44530_type = type <{ [8 x i8] }>
@G__0xb44530= global %G__0xb44530_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0xb4bd20_type = type <{ [8 x i8] }>
@G__0xb4bd20= global %G__0xb4bd20_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @compute_surroundings(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .compute_surroundings:	 RIP: 4757d0	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 4757d0	 Bytes: 1
  %loadMem_4757d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4757d0 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4757d0)
  store %struct.Memory* %call_4757d0, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 4757d1	 Bytes: 3
  %loadMem_4757d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4757d1 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4757d1)
  store %struct.Memory* %call_4757d1, %struct.Memory** %MEMORY

  ; Code: subq $0x4d0, %rsp	 RIP: 4757d4	 Bytes: 7
  %loadMem_4757d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4757d4 = call %struct.Memory* @routine_subq__0x4d0___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4757d4)
  store %struct.Memory* %call_4757d4, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 4757db	 Bytes: 2
  %loadMem_4757db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4757db = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4757db)
  store %struct.Memory* %call_4757db, %struct.Memory** %MEMORY

  ; Code: movl $0x190, %r8d	 RIP: 4757dd	 Bytes: 6
  %loadMem_4757dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4757dd = call %struct.Memory* @routine_movl__0x190___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4757dd)
  store %struct.Memory* %call_4757dd, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %r9d	 RIP: 4757e3	 Bytes: 3
  %loadMem_4757e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4757e3 = call %struct.Memory* @routine_movl__r8d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4757e3)
  store %struct.Memory* %call_4757e3, %struct.Memory** %MEMORY

  ; Code: leaq -0x410(%rbp), %r10	 RIP: 4757e6	 Bytes: 7
  %loadMem_4757e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4757e6 = call %struct.Memory* @routine_leaq_MINUS0x410__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4757e6)
  store %struct.Memory* %call_4757e6, %struct.Memory** %MEMORY

  ; Code: leaq -0x280(%rbp), %r11	 RIP: 4757ed	 Bytes: 7
  %loadMem_4757ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4757ed = call %struct.Memory* @routine_leaq_MINUS0x280__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4757ed)
  store %struct.Memory* %call_4757ed, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %r8d	 RIP: 4757f4	 Bytes: 6
  %loadMem_4757f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4757f4 = call %struct.Memory* @routine_movl__0x3___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4757f4)
  store %struct.Memory* %call_4757f4, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x8(%rbp)	 RIP: 4757fa	 Bytes: 3
  %loadMem_4757fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4757fa = call %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4757fa)
  store %struct.Memory* %call_4757fa, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0xc(%rbp)	 RIP: 4757fd	 Bytes: 3
  %loadMem_4757fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4757fd = call %struct.Memory* @routine_movl__esi__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4757fd)
  store %struct.Memory* %call_4757fd, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x10(%rbp)	 RIP: 475800	 Bytes: 3
  %loadMem_475800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475800 = call %struct.Memory* @routine_movl__edx__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475800)
  store %struct.Memory* %call_475800, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x18(%rbp)	 RIP: 475803	 Bytes: 4
  %loadMem_475803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475803 = call %struct.Memory* @routine_movq__rcx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475803)
  store %struct.Memory* %call_475803, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xd4(%rbp)	 RIP: 475807	 Bytes: 10
  %loadMem_475807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475807 = call %struct.Memory* @routine_movl__0x0__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475807)
  store %struct.Memory* %call_475807, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xd8(%rbp)	 RIP: 475811	 Bytes: 10
  %loadMem_475811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475811 = call %struct.Memory* @routine_movl__0x0__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475811)
  store %struct.Memory* %call_475811, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 47581b	 Bytes: 4
  %loadMem_47581b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47581b = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47581b)
  store %struct.Memory* %call_47581b, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %edx	 RIP: 47581f	 Bytes: 8
  %loadMem_47581f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47581f = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47581f)
  store %struct.Memory* %call_47581f, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0xe4(%rbp)	 RIP: 475827	 Bytes: 6
  %loadMem_475827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475827 = call %struct.Memory* @routine_movl__edx__MINUS0xe4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475827)
  store %struct.Memory* %call_475827, %struct.Memory** %MEMORY

  ; Code: subl -0xe4(%rbp), %r8d	 RIP: 47582d	 Bytes: 7
  %loadMem_47582d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47582d = call %struct.Memory* @routine_subl_MINUS0xe4__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47582d)
  store %struct.Memory* %call_47582d, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0xe8(%rbp)	 RIP: 475834	 Bytes: 7
  %loadMem_475834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475834 = call %struct.Memory* @routine_movl__r8d__MINUS0xe8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475834)
  store %struct.Memory* %call_475834, %struct.Memory** %MEMORY

  ; Code: movq %r11, %rdi	 RIP: 47583b	 Bytes: 3
  %loadMem_47583b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47583b = call %struct.Memory* @routine_movq__r11___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47583b)
  store %struct.Memory* %call_47583b, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 47583e	 Bytes: 2
  %loadMem_47583e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47583e = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47583e)
  store %struct.Memory* %call_47583e, %struct.Memory** %MEMORY

  ; Code: movq %r9, %rdx	 RIP: 475840	 Bytes: 3
  %loadMem_475840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475840 = call %struct.Memory* @routine_movq__r9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475840)
  store %struct.Memory* %call_475840, %struct.Memory** %MEMORY

  ; Code: movq %r10, -0x480(%rbp)	 RIP: 475843	 Bytes: 7
  %loadMem_475843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475843 = call %struct.Memory* @routine_movq__r10__MINUS0x480__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475843)
  store %struct.Memory* %call_475843, %struct.Memory** %MEMORY

  ; Code: movq %r9, -0x488(%rbp)	 RIP: 47584a	 Bytes: 7
  %loadMem_47584a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47584a = call %struct.Memory* @routine_movq__r9__MINUS0x488__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47584a)
  store %struct.Memory* %call_47584a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x48c(%rbp)	 RIP: 475851	 Bytes: 6
  %loadMem_475851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475851 = call %struct.Memory* @routine_movl__eax__MINUS0x48c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475851)
  store %struct.Memory* %call_475851, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 475857	 Bytes: 5
  %loadMem1_475857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_475857 = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_475857, i64 -477159, i64 5, i64 5)
  store %struct.Memory* %call1_475857, %struct.Memory** %MEMORY

  %loadMem2_475857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_475857 = load i64, i64* %3
  %call2_475857 = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_475857, %struct.Memory* %loadMem2_475857)
  store %struct.Memory* %call2_475857, %struct.Memory** %MEMORY

  ; Code: movq -0x480(%rbp), %rdi	 RIP: 47585c	 Bytes: 7
  %loadMem_47585c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47585c = call %struct.Memory* @routine_movq_MINUS0x480__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47585c)
  store %struct.Memory* %call_47585c, %struct.Memory** %MEMORY

  ; Code: movl -0x48c(%rbp), %esi	 RIP: 475863	 Bytes: 6
  %loadMem_475863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475863 = call %struct.Memory* @routine_movl_MINUS0x48c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475863)
  store %struct.Memory* %call_475863, %struct.Memory** %MEMORY

  ; Code: movq -0x488(%rbp), %rdx	 RIP: 475869	 Bytes: 7
  %loadMem_475869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475869 = call %struct.Memory* @routine_movq_MINUS0x488__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475869)
  store %struct.Memory* %call_475869, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 475870	 Bytes: 5
  %loadMem1_475870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_475870 = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_475870, i64 -477184, i64 5, i64 5)
  store %struct.Memory* %call1_475870, %struct.Memory** %MEMORY

  %loadMem2_475870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_475870 = load i64, i64* %3
  %call2_475870 = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_475870, %struct.Memory* %loadMem2_475870)
  store %struct.Memory* %call2_475870, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x30(%rbp)	 RIP: 475875	 Bytes: 7
  %loadMem_475875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475875 = call %struct.Memory* @routine_movl__0x15__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475875)
  store %struct.Memory* %call_475875, %struct.Memory** %MEMORY

  ; Code: .L_47587c:	 RIP: 47587c	 Bytes: 0
  br label %block_.L_47587c
block_.L_47587c:

  ; Code: cmpl $0x190, -0x30(%rbp)	 RIP: 47587c	 Bytes: 7
  %loadMem_47587c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47587c = call %struct.Memory* @routine_cmpl__0x190__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47587c)
  store %struct.Memory* %call_47587c, %struct.Memory** %MEMORY

  ; Code: jge .L_4758fd	 RIP: 475883	 Bytes: 6
  %loadMem_475883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475883 = call %struct.Memory* @routine_jge_.L_4758fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475883, i8* %BRANCH_TAKEN, i64 122, i64 6, i64 6)
  store %struct.Memory* %call_475883, %struct.Memory** %MEMORY

  %loadBr_475883 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475883 = icmp eq i8 %loadBr_475883, 1
  br i1 %cmpBr_475883, label %block_.L_4758fd, label %block_475889

block_475889:
  ; Code: movslq -0x30(%rbp), %rax	 RIP: 475889	 Bytes: 4
  %loadMem_475889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475889 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475889)
  store %struct.Memory* %call_475889, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 47588d	 Bytes: 8
  %loadMem_47588d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47588d = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47588d)
  store %struct.Memory* %call_47588d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 475895	 Bytes: 3
  %loadMem_475895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475895 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475895)
  store %struct.Memory* %call_475895, %struct.Memory** %MEMORY

  ; Code: je .L_4758ea	 RIP: 475898	 Bytes: 6
  %loadMem_475898 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475898 = call %struct.Memory* @routine_je_.L_4758ea(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475898, i8* %BRANCH_TAKEN, i64 82, i64 6, i64 6)
  store %struct.Memory* %call_475898, %struct.Memory** %MEMORY

  %loadBr_475898 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475898 = icmp eq i8 %loadBr_475898, 1
  br i1 %cmpBr_475898, label %block_.L_4758ea, label %block_47589e

block_47589e:
  ; Code: movq $0xb0eff0, %rax	 RIP: 47589e	 Bytes: 10
  %loadMem_47589e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47589e = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47589e)
  store %struct.Memory* %call_47589e, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4758a8	 Bytes: 4
  %loadMem_4758a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758a8 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758a8)
  store %struct.Memory* %call_4758a8, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 4758ac	 Bytes: 7
  %loadMem_4758ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758ac = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758ac)
  store %struct.Memory* %call_4758ac, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4758b3	 Bytes: 3
  %loadMem_4758b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758b3 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758b3)
  store %struct.Memory* %call_4758b3, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %edx	 RIP: 4758b6	 Bytes: 3
  %loadMem_4758b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758b6 = call %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758b6)
  store %struct.Memory* %call_4758b6, %struct.Memory** %MEMORY

  ; Code: cmpl -0x30(%rbp), %edx	 RIP: 4758b9	 Bytes: 3
  %loadMem_4758b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758b9 = call %struct.Memory* @routine_cmpl_MINUS0x30__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758b9)
  store %struct.Memory* %call_4758b9, %struct.Memory** %MEMORY

  ; Code: jne .L_4758ea	 RIP: 4758bc	 Bytes: 6
  %loadMem_4758bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758bc = call %struct.Memory* @routine_jne_.L_4758ea(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758bc, i8* %BRANCH_TAKEN, i64 46, i64 6, i64 6)
  store %struct.Memory* %call_4758bc, %struct.Memory** %MEMORY

  %loadBr_4758bc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4758bc = icmp eq i8 %loadBr_4758bc, 1
  br i1 %cmpBr_4758bc, label %block_.L_4758ea, label %block_4758c2

block_4758c2:
  ; Code: movl -0x30(%rbp), %edi	 RIP: 4758c2	 Bytes: 3
  %loadMem_4758c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758c2 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758c2)
  store %struct.Memory* %call_4758c2, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %esi	 RIP: 4758c5	 Bytes: 3
  %loadMem_4758c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758c5 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758c5)
  store %struct.Memory* %call_4758c5, %struct.Memory** %MEMORY

  ; Code: callq .is_same_dragon	 RIP: 4758c8	 Bytes: 5
  %loadMem1_4758c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4758c8 = call %struct.Memory* @routine_callq_.is_same_dragon(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4758c8, i64 -351384, i64 5, i64 5)
  store %struct.Memory* %call1_4758c8, %struct.Memory** %MEMORY

  %loadMem2_4758c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4758c8 = load i64, i64* %3
  %call2_4758c8 = call %struct.Memory* @sub_41fc30.is_same_dragon(%struct.State* %0, i64  %loadPC_4758c8, %struct.Memory* %loadMem2_4758c8)
  store %struct.Memory* %call2_4758c8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4758cd	 Bytes: 3
  %loadMem_4758cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758cd = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758cd)
  store %struct.Memory* %call_4758cd, %struct.Memory** %MEMORY

  ; Code: je .L_4758ea	 RIP: 4758d0	 Bytes: 6
  %loadMem_4758d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758d0 = call %struct.Memory* @routine_je_.L_4758ea(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758d0, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_4758d0, %struct.Memory** %MEMORY

  %loadBr_4758d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4758d0 = icmp eq i8 %loadBr_4758d0, 1
  br i1 %cmpBr_4758d0, label %block_.L_4758ea, label %block_4758d6

block_4758d6:
  ; Code: movl $0x1, %edx	 RIP: 4758d6	 Bytes: 5
  %loadMem_4758d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758d6 = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758d6)
  store %struct.Memory* %call_4758d6, %struct.Memory** %MEMORY

  ; Code: leaq -0x280(%rbp), %rsi	 RIP: 4758db	 Bytes: 7
  %loadMem_4758db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758db = call %struct.Memory* @routine_leaq_MINUS0x280__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758db)
  store %struct.Memory* %call_4758db, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %edi	 RIP: 4758e2	 Bytes: 3
  %loadMem_4758e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758e2 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758e2)
  store %struct.Memory* %call_4758e2, %struct.Memory** %MEMORY

  ; Code: callq .mark_string	 RIP: 4758e5	 Bytes: 5
  %loadMem1_4758e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4758e5 = call %struct.Memory* @routine_callq_.mark_string(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4758e5, i64 -392245, i64 5, i64 5)
  store %struct.Memory* %call1_4758e5, %struct.Memory** %MEMORY

  %loadMem2_4758e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4758e5 = load i64, i64* %3
  %call2_4758e5 = call %struct.Memory* @sub_415cb0.mark_string(%struct.State* %0, i64  %loadPC_4758e5, %struct.Memory* %loadMem2_4758e5)
  store %struct.Memory* %call2_4758e5, %struct.Memory** %MEMORY

  ; Code: .L_4758ea:	 RIP: 4758ea	 Bytes: 0
  br label %block_.L_4758ea
block_.L_4758ea:

  ; Code: jmpq .L_4758ef	 RIP: 4758ea	 Bytes: 5
  %loadMem_4758ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758ea = call %struct.Memory* @routine_jmpq_.L_4758ef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758ea, i64 5, i64 5)
  store %struct.Memory* %call_4758ea, %struct.Memory** %MEMORY

  br label %block_.L_4758ef

  ; Code: .L_4758ef:	 RIP: 4758ef	 Bytes: 0
block_.L_4758ef:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4758ef	 Bytes: 3
  %loadMem_4758ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758ef = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758ef)
  store %struct.Memory* %call_4758ef, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4758f2	 Bytes: 3
  %loadMem_4758f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758f2 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758f2)
  store %struct.Memory* %call_4758f2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4758f5	 Bytes: 3
  %loadMem_4758f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758f5 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758f5)
  store %struct.Memory* %call_4758f5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47587c	 RIP: 4758f8	 Bytes: 5
  %loadMem_4758f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758f8 = call %struct.Memory* @routine_jmpq_.L_47587c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758f8, i64 -124, i64 5)
  store %struct.Memory* %call_4758f8, %struct.Memory** %MEMORY

  br label %block_.L_47587c

  ; Code: .L_4758fd:	 RIP: 4758fd	 Bytes: 0
block_.L_4758fd:

  ; Code: movq $0xb4bd20, %rax	 RIP: 4758fd	 Bytes: 10
  %loadMem_4758fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4758fd = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4758fd)
  store %struct.Memory* %call_4758fd, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 475907	 Bytes: 8
  %loadMem_475907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475907 = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475907)
  store %struct.Memory* %call_475907, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 47590f	 Bytes: 4
  %loadMem_47590f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47590f = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47590f)
  store %struct.Memory* %call_47590f, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rdx, %rdx	 RIP: 475913	 Bytes: 4
  %loadMem_475913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475913 = call %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475913)
  store %struct.Memory* %call_475913, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 475917	 Bytes: 3
  %loadMem_475917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475917 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475917)
  store %struct.Memory* %call_475917, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 47591a	 Bytes: 4
  %loadMem_47591a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47591a = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47591a)
  store %struct.Memory* %call_47591a, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 47591e	 Bytes: 4
  %loadMem_47591e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47591e = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47591e)
  store %struct.Memory* %call_47591e, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 475922	 Bytes: 3
  %loadMem_475922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475922 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475922)
  store %struct.Memory* %call_475922, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x30(%rcx)	 RIP: 475925	 Bytes: 4
  %loadMem_475925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475925 = call %struct.Memory* @routine_cmpl__0x0__0x30__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475925)
  store %struct.Memory* %call_475925, %struct.Memory** %MEMORY

  ; Code: jne .L_47593b	 RIP: 475929	 Bytes: 6
  %loadMem_475929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475929 = call %struct.Memory* @routine_jne_.L_47593b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475929, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_475929, %struct.Memory** %MEMORY

  %loadBr_475929 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475929 = icmp eq i8 %loadBr_475929, 1
  br i1 %cmpBr_475929, label %block_.L_47593b, label %block_47592f

block_47592f:
  ; Code: movl $0x0, -0x4(%rbp)	 RIP: 47592f	 Bytes: 7
  %loadMem_47592f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47592f = call %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47592f)
  store %struct.Memory* %call_47592f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476f29	 RIP: 475936	 Bytes: 5
  %loadMem_475936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475936 = call %struct.Memory* @routine_jmpq_.L_476f29(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475936, i64 5619, i64 5)
  store %struct.Memory* %call_475936, %struct.Memory** %MEMORY

  br label %block_.L_476f29

  ; Code: .L_47593b:	 RIP: 47593b	 Bytes: 0
block_.L_47593b:

  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 47593b	 Bytes: 7
  %loadMem_47593b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47593b = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47593b)
  store %struct.Memory* %call_47593b, %struct.Memory** %MEMORY

  ; Code: .L_475942:	 RIP: 475942	 Bytes: 0
  br label %block_.L_475942
block_.L_475942:

  ; Code: movq $0xb4bd20, %rax	 RIP: 475942	 Bytes: 10
  %loadMem_475942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475942 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475942)
  store %struct.Memory* %call_475942, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %ecx	 RIP: 47594c	 Bytes: 3
  %loadMem_47594c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47594c = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47594c)
  store %struct.Memory* %call_47594c, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rdx	 RIP: 47594f	 Bytes: 8
  %loadMem_47594f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47594f = call %struct.Memory* @routine_movq_0xab0fe0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47594f)
  store %struct.Memory* %call_47594f, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rsi	 RIP: 475957	 Bytes: 4
  %loadMem_475957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475957 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475957)
  store %struct.Memory* %call_475957, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 47595b	 Bytes: 4
  %loadMem_47595b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47595b = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47595b)
  store %struct.Memory* %call_47595b, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rax	 RIP: 47595f	 Bytes: 3
  %loadMem_47595f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47595f = call %struct.Memory* @routine_addq__rsi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47595f)
  store %struct.Memory* %call_47595f, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax), %rax	 RIP: 475962	 Bytes: 4
  %loadMem_475962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475962 = call %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475962)
  store %struct.Memory* %call_475962, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rax, %rax	 RIP: 475966	 Bytes: 4
  %loadMem_475966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475966 = call %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475966)
  store %struct.Memory* %call_475966, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rdx	 RIP: 47596a	 Bytes: 3
  %loadMem_47596a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47596a = call %struct.Memory* @routine_addq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47596a)
  store %struct.Memory* %call_47596a, %struct.Memory** %MEMORY

  ; Code: cmpl 0x2c(%rdx), %ecx	 RIP: 47596d	 Bytes: 3
  %loadMem_47596d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47596d = call %struct.Memory* @routine_cmpl_0x2c__rdx____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47596d)
  store %struct.Memory* %call_47596d, %struct.Memory** %MEMORY

  ; Code: jge .L_475a8e	 RIP: 475970	 Bytes: 6
  %loadMem_475970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475970 = call %struct.Memory* @routine_jge_.L_475a8e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475970, i8* %BRANCH_TAKEN, i64 286, i64 6, i64 6)
  store %struct.Memory* %call_475970, %struct.Memory** %MEMORY

  %loadBr_475970 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475970 = icmp eq i8 %loadBr_475970, 1
  br i1 %cmpBr_475970, label %block_.L_475a8e, label %block_475976

block_475976:
  ; Code: movq $0xb4bd20, %rax	 RIP: 475976	 Bytes: 10
  %loadMem_475976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475976 = call %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475976)
  store %struct.Memory* %call_475976, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rcx	 RIP: 475980	 Bytes: 8
  %loadMem_475980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475980 = call %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475980)
  store %struct.Memory* %call_475980, %struct.Memory** %MEMORY

  ; Code: movq 0xab0fe0, %rdx	 RIP: 475988	 Bytes: 8
  %loadMem_475988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475988 = call %struct.Memory* @routine_movq_0xab0fe0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475988)
  store %struct.Memory* %call_475988, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rsi	 RIP: 475990	 Bytes: 4
  %loadMem_475990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475990 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475990)
  store %struct.Memory* %call_475990, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rsi, %rsi	 RIP: 475994	 Bytes: 4
  %loadMem_475994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475994 = call %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475994)
  store %struct.Memory* %call_475994, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 475998	 Bytes: 3
  %loadMem_475998 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475998 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475998)
  store %struct.Memory* %call_475998, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 47599b	 Bytes: 3
  %loadMem_47599b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47599b = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47599b)
  store %struct.Memory* %call_47599b, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rdi), %rsi	 RIP: 47599e	 Bytes: 4
  %loadMem_47599e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47599e = call %struct.Memory* @routine_movslq_0x4__rdi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47599e)
  store %struct.Memory* %call_47599e, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rsi, %rsi	 RIP: 4759a2	 Bytes: 4
  %loadMem_4759a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759a2 = call %struct.Memory* @routine_imulq__0x68___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759a2)
  store %struct.Memory* %call_4759a2, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4759a6	 Bytes: 3
  %loadMem_4759a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759a6 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759a6)
  store %struct.Memory* %call_4759a6, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4759a9	 Bytes: 4
  %loadMem_4759a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759a9 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759a9)
  store %struct.Memory* %call_4759a9, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rdx,%rsi,4), %rdx	 RIP: 4759ad	 Bytes: 5
  %loadMem_4759ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759ad = call %struct.Memory* @routine_movslq_0x4__rdx__rsi_4____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759ad)
  store %struct.Memory* %call_4759ad, %struct.Memory** %MEMORY

  ; Code: imulq $0x68, %rdx, %rdx	 RIP: 4759b2	 Bytes: 4
  %loadMem_4759b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759b2 = call %struct.Memory* @routine_imulq__0x68___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759b2)
  store %struct.Memory* %call_4759b2, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4759b6	 Bytes: 3
  %loadMem_4759b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759b6 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759b6)
  store %struct.Memory* %call_4759b6, %struct.Memory** %MEMORY

  ; Code: movslq (%rcx), %rcx	 RIP: 4759b9	 Bytes: 3
  %loadMem_4759b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759b9 = call %struct.Memory* @routine_movslq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759b9)
  store %struct.Memory* %call_4759b9, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rcx, %rcx	 RIP: 4759bc	 Bytes: 4
  %loadMem_4759bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759bc = call %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759bc)
  store %struct.Memory* %call_4759bc, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4759c0	 Bytes: 3
  %loadMem_4759c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759c0 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759c0)
  store %struct.Memory* %call_4759c0, %struct.Memory** %MEMORY

  ; Code: movl 0x8(%rax), %r8d	 RIP: 4759c3	 Bytes: 4
  %loadMem_4759c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759c3 = call %struct.Memory* @routine_movl_0x8__rax____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759c3)
  store %struct.Memory* %call_4759c3, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x414(%rbp)	 RIP: 4759c7	 Bytes: 7
  %loadMem_4759c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759c7 = call %struct.Memory* @routine_movl__r8d__MINUS0x414__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759c7)
  store %struct.Memory* %call_4759c7, %struct.Memory** %MEMORY

  ; Code: movslq -0x414(%rbp), %rax	 RIP: 4759ce	 Bytes: 7
  %loadMem_4759ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759ce = call %struct.Memory* @routine_movslq_MINUS0x414__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759ce)
  store %struct.Memory* %call_4759ce, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %r8d	 RIP: 4759d5	 Bytes: 9
  %loadMem_4759d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759d5 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759d5)
  store %struct.Memory* %call_4759d5, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe4(%rbp), %r8d	 RIP: 4759de	 Bytes: 7
  %loadMem_4759de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759de = call %struct.Memory* @routine_cmpl_MINUS0xe4__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759de)
  store %struct.Memory* %call_4759de, %struct.Memory** %MEMORY

  ; Code: je .L_475a7b	 RIP: 4759e5	 Bytes: 6
  %loadMem_4759e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759e5 = call %struct.Memory* @routine_je_.L_475a7b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759e5, i8* %BRANCH_TAKEN, i64 150, i64 6, i64 6)
  store %struct.Memory* %call_4759e5, %struct.Memory** %MEMORY

  %loadBr_4759e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4759e5 = icmp eq i8 %loadBr_4759e5, 1
  br i1 %cmpBr_4759e5, label %block_.L_475a7b, label %block_4759eb

block_4759eb:
  ; Code: movl $0x15, -0x30(%rbp)	 RIP: 4759eb	 Bytes: 7
  %loadMem_4759eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759eb = call %struct.Memory* @routine_movl__0x15__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759eb)
  store %struct.Memory* %call_4759eb, %struct.Memory** %MEMORY

  ; Code: .L_4759f2:	 RIP: 4759f2	 Bytes: 0
  br label %block_.L_4759f2
block_.L_4759f2:

  ; Code: cmpl $0x190, -0x30(%rbp)	 RIP: 4759f2	 Bytes: 7
  %loadMem_4759f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759f2 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759f2)
  store %struct.Memory* %call_4759f2, %struct.Memory** %MEMORY

  ; Code: jge .L_475a76	 RIP: 4759f9	 Bytes: 6
  %loadMem_4759f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759f9 = call %struct.Memory* @routine_jge_.L_475a76(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759f9, i8* %BRANCH_TAKEN, i64 125, i64 6, i64 6)
  store %struct.Memory* %call_4759f9, %struct.Memory** %MEMORY

  %loadBr_4759f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4759f9 = icmp eq i8 %loadBr_4759f9, 1
  br i1 %cmpBr_4759f9, label %block_.L_475a76, label %block_4759ff

block_4759ff:
  ; Code: movslq -0x30(%rbp), %rax	 RIP: 4759ff	 Bytes: 4
  %loadMem_4759ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4759ff = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4759ff)
  store %struct.Memory* %call_4759ff, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 475a03	 Bytes: 8
  %loadMem_475a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a03 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a03)
  store %struct.Memory* %call_475a03, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 475a0b	 Bytes: 3
  %loadMem_475a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a0b = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a0b)
  store %struct.Memory* %call_475a0b, %struct.Memory** %MEMORY

  ; Code: je .L_475a63	 RIP: 475a0e	 Bytes: 6
  %loadMem_475a0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a0e = call %struct.Memory* @routine_je_.L_475a63(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a0e, i8* %BRANCH_TAKEN, i64 85, i64 6, i64 6)
  store %struct.Memory* %call_475a0e, %struct.Memory** %MEMORY

  %loadBr_475a0e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475a0e = icmp eq i8 %loadBr_475a0e, 1
  br i1 %cmpBr_475a0e, label %block_.L_475a63, label %block_475a14

block_475a14:
  ; Code: movq $0xb0eff0, %rax	 RIP: 475a14	 Bytes: 10
  %loadMem_475a14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a14 = call %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a14)
  store %struct.Memory* %call_475a14, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 475a1e	 Bytes: 4
  %loadMem_475a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a1e = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a1e)
  store %struct.Memory* %call_475a1e, %struct.Memory** %MEMORY

  ; Code: imulq $0x17c, %rcx, %rcx	 RIP: 475a22	 Bytes: 7
  %loadMem_475a22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a22 = call %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a22)
  store %struct.Memory* %call_475a22, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 475a29	 Bytes: 3
  %loadMem_475a29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a29 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a29)
  store %struct.Memory* %call_475a29, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rax), %edx	 RIP: 475a2c	 Bytes: 3
  %loadMem_475a2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a2c = call %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a2c)
  store %struct.Memory* %call_475a2c, %struct.Memory** %MEMORY

  ; Code: cmpl -0x30(%rbp), %edx	 RIP: 475a2f	 Bytes: 3
  %loadMem_475a2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a2f = call %struct.Memory* @routine_cmpl_MINUS0x30__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a2f)
  store %struct.Memory* %call_475a2f, %struct.Memory** %MEMORY

  ; Code: jne .L_475a63	 RIP: 475a32	 Bytes: 6
  %loadMem_475a32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a32 = call %struct.Memory* @routine_jne_.L_475a63(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a32, i8* %BRANCH_TAKEN, i64 49, i64 6, i64 6)
  store %struct.Memory* %call_475a32, %struct.Memory** %MEMORY

  %loadBr_475a32 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475a32 = icmp eq i8 %loadBr_475a32, 1
  br i1 %cmpBr_475a32, label %block_.L_475a63, label %block_475a38

block_475a38:
  ; Code: movl -0x30(%rbp), %edi	 RIP: 475a38	 Bytes: 3
  %loadMem_475a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a38 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a38)
  store %struct.Memory* %call_475a38, %struct.Memory** %MEMORY

  ; Code: movl -0x414(%rbp), %esi	 RIP: 475a3b	 Bytes: 6
  %loadMem_475a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a3b = call %struct.Memory* @routine_movl_MINUS0x414__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a3b)
  store %struct.Memory* %call_475a3b, %struct.Memory** %MEMORY

  ; Code: callq .is_same_dragon	 RIP: 475a41	 Bytes: 5
  %loadMem1_475a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_475a41 = call %struct.Memory* @routine_callq_.is_same_dragon(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_475a41, i64 -351761, i64 5, i64 5)
  store %struct.Memory* %call1_475a41, %struct.Memory** %MEMORY

  %loadMem2_475a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_475a41 = load i64, i64* %3
  %call2_475a41 = call %struct.Memory* @sub_41fc30.is_same_dragon(%struct.State* %0, i64  %loadPC_475a41, %struct.Memory* %loadMem2_475a41)
  store %struct.Memory* %call2_475a41, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 475a46	 Bytes: 3
  %loadMem_475a46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a46 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a46)
  store %struct.Memory* %call_475a46, %struct.Memory** %MEMORY

  ; Code: je .L_475a63	 RIP: 475a49	 Bytes: 6
  %loadMem_475a49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a49 = call %struct.Memory* @routine_je_.L_475a63(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a49, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_475a49, %struct.Memory** %MEMORY

  %loadBr_475a49 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475a49 = icmp eq i8 %loadBr_475a49, 1
  br i1 %cmpBr_475a49, label %block_.L_475a63, label %block_475a4f

block_475a4f:
  ; Code: movl $0x1, %edx	 RIP: 475a4f	 Bytes: 5
  %loadMem_475a4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a4f = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a4f)
  store %struct.Memory* %call_475a4f, %struct.Memory** %MEMORY

  ; Code: leaq -0x410(%rbp), %rsi	 RIP: 475a54	 Bytes: 7
  %loadMem_475a54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a54 = call %struct.Memory* @routine_leaq_MINUS0x410__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a54)
  store %struct.Memory* %call_475a54, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %edi	 RIP: 475a5b	 Bytes: 3
  %loadMem_475a5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a5b = call %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a5b)
  store %struct.Memory* %call_475a5b, %struct.Memory** %MEMORY

  ; Code: callq .mark_string	 RIP: 475a5e	 Bytes: 5
  %loadMem1_475a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_475a5e = call %struct.Memory* @routine_callq_.mark_string(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_475a5e, i64 -392622, i64 5, i64 5)
  store %struct.Memory* %call1_475a5e, %struct.Memory** %MEMORY

  %loadMem2_475a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_475a5e = load i64, i64* %3
  %call2_475a5e = call %struct.Memory* @sub_415cb0.mark_string(%struct.State* %0, i64  %loadPC_475a5e, %struct.Memory* %loadMem2_475a5e)
  store %struct.Memory* %call2_475a5e, %struct.Memory** %MEMORY

  ; Code: .L_475a63:	 RIP: 475a63	 Bytes: 0
  br label %block_.L_475a63
block_.L_475a63:

  ; Code: jmpq .L_475a68	 RIP: 475a63	 Bytes: 5
  %loadMem_475a63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a63 = call %struct.Memory* @routine_jmpq_.L_475a68(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a63, i64 5, i64 5)
  store %struct.Memory* %call_475a63, %struct.Memory** %MEMORY

  br label %block_.L_475a68

  ; Code: .L_475a68:	 RIP: 475a68	 Bytes: 0
block_.L_475a68:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 475a68	 Bytes: 3
  %loadMem_475a68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a68 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a68)
  store %struct.Memory* %call_475a68, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 475a6b	 Bytes: 3
  %loadMem_475a6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a6b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a6b)
  store %struct.Memory* %call_475a6b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 475a6e	 Bytes: 3
  %loadMem_475a6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a6e = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a6e)
  store %struct.Memory* %call_475a6e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4759f2	 RIP: 475a71	 Bytes: 5
  %loadMem_475a71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a71 = call %struct.Memory* @routine_jmpq_.L_4759f2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a71, i64 -127, i64 5)
  store %struct.Memory* %call_475a71, %struct.Memory** %MEMORY

  br label %block_.L_4759f2

  ; Code: .L_475a76:	 RIP: 475a76	 Bytes: 0
block_.L_475a76:

  ; Code: jmpq .L_475a7b	 RIP: 475a76	 Bytes: 5
  %loadMem_475a76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a76 = call %struct.Memory* @routine_jmpq_.L_475a7b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a76, i64 5, i64 5)
  store %struct.Memory* %call_475a76, %struct.Memory** %MEMORY

  br label %block_.L_475a7b

  ; Code: .L_475a7b:	 RIP: 475a7b	 Bytes: 0
block_.L_475a7b:

  ; Code: jmpq .L_475a80	 RIP: 475a7b	 Bytes: 5
  %loadMem_475a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a7b = call %struct.Memory* @routine_jmpq_.L_475a80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a7b, i64 5, i64 5)
  store %struct.Memory* %call_475a7b, %struct.Memory** %MEMORY

  br label %block_.L_475a80

  ; Code: .L_475a80:	 RIP: 475a80	 Bytes: 0
block_.L_475a80:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 475a80	 Bytes: 3
  %loadMem_475a80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a80 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a80)
  store %struct.Memory* %call_475a80, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 475a83	 Bytes: 3
  %loadMem_475a83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a83 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a83)
  store %struct.Memory* %call_475a83, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 475a86	 Bytes: 3
  %loadMem_475a86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a86 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a86)
  store %struct.Memory* %call_475a86, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475942	 RIP: 475a89	 Bytes: 5
  %loadMem_475a89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a89 = call %struct.Memory* @routine_jmpq_.L_475942(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a89, i64 -327, i64 5)
  store %struct.Memory* %call_475a89, %struct.Memory** %MEMORY

  br label %block_.L_475942

  ; Code: .L_475a8e:	 RIP: 475a8e	 Bytes: 0
block_.L_475a8e:

  ; Code: cmpl $0x0, -0xc(%rbp)	 RIP: 475a8e	 Bytes: 4
  %loadMem_475a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a8e = call %struct.Memory* @routine_cmpl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a8e)
  store %struct.Memory* %call_475a8e, %struct.Memory** %MEMORY

  ; Code: je .L_475ae6	 RIP: 475a92	 Bytes: 6
  %loadMem_475a92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a92 = call %struct.Memory* @routine_je_.L_475ae6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a92, i8* %BRANCH_TAKEN, i64 84, i64 6, i64 6)
  store %struct.Memory* %call_475a92, %struct.Memory** %MEMORY

  %loadBr_475a92 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475a92 = icmp eq i8 %loadBr_475a92, 1
  br i1 %cmpBr_475a92, label %block_.L_475ae6, label %block_475a98

block_475a98:
  ; Code: movslq -0xc(%rbp), %rax	 RIP: 475a98	 Bytes: 4
  %loadMem_475a98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a98 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a98)
  store %struct.Memory* %call_475a98, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 475a9c	 Bytes: 8
  %loadMem_475a9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475a9c = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475a9c)
  store %struct.Memory* %call_475a9c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 475aa4	 Bytes: 3
  %loadMem_475aa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475aa4 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475aa4)
  store %struct.Memory* %call_475aa4, %struct.Memory** %MEMORY

  ; Code: je .L_475ab2	 RIP: 475aa7	 Bytes: 6
  %loadMem_475aa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475aa7 = call %struct.Memory* @routine_je_.L_475ab2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475aa7, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_475aa7, %struct.Memory** %MEMORY

  %loadBr_475aa7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475aa7 = icmp eq i8 %loadBr_475aa7, 1
  br i1 %cmpBr_475aa7, label %block_.L_475ab2, label %block_475aad

block_475aad:
  ; Code: jmpq .L_475ada	 RIP: 475aad	 Bytes: 5
  %loadMem_475aad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475aad = call %struct.Memory* @routine_jmpq_.L_475ada(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475aad, i64 45, i64 5)
  store %struct.Memory* %call_475aad, %struct.Memory** %MEMORY

  br label %block_.L_475ada

  ; Code: .L_475ab2:	 RIP: 475ab2	 Bytes: 0
block_.L_475ab2:

  ; Code: movq $0x58192c, %rdi	 RIP: 475ab2	 Bytes: 10
  %loadMem_475ab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ab2 = call %struct.Memory* @routine_movq__0x58192c___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ab2)
  store %struct.Memory* %call_475ab2, %struct.Memory** %MEMORY

  ; Code: movl $0x7c, %esi	 RIP: 475abc	 Bytes: 5
  %loadMem_475abc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475abc = call %struct.Memory* @routine_movl__0x7c___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475abc)
  store %struct.Memory* %call_475abc, %struct.Memory** %MEMORY

  ; Code: movq $0x5819e3, %rdx	 RIP: 475ac1	 Bytes: 10
  %loadMem_475ac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ac1 = call %struct.Memory* @routine_movq__0x5819e3___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ac1)
  store %struct.Memory* %call_475ac1, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %eax	 RIP: 475acb	 Bytes: 5
  %loadMem_475acb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475acb = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475acb)
  store %struct.Memory* %call_475acb, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 475ad0	 Bytes: 2
  %loadMem_475ad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ad0 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ad0)
  store %struct.Memory* %call_475ad0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 475ad2	 Bytes: 3
  %loadMem_475ad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ad2 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ad2)
  store %struct.Memory* %call_475ad2, %struct.Memory** %MEMORY

  ; Code: callq .abortgo	 RIP: 475ad5	 Bytes: 5
  %loadMem1_475ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_475ad5 = call %struct.Memory* @routine_callq_.abortgo(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_475ad5, i64 -145989, i64 5, i64 5)
  store %struct.Memory* %call1_475ad5, %struct.Memory** %MEMORY

  %loadMem2_475ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_475ad5 = load i64, i64* %3
  %call2_475ad5 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64  %loadPC_475ad5, %struct.Memory* %loadMem2_475ad5)
  store %struct.Memory* %call2_475ad5, %struct.Memory** %MEMORY

  ; Code: .L_475ada:	 RIP: 475ada	 Bytes: 0
  br label %block_.L_475ada
block_.L_475ada:

  ; Code: movslq -0xc(%rbp), %rax	 RIP: 475ada	 Bytes: 4
  %loadMem_475ada = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ada = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ada)
  store %struct.Memory* %call_475ada, %struct.Memory** %MEMORY

  ; Code: movb $0x1, -0x410(%rbp,%rax,1)	 RIP: 475ade	 Bytes: 8
  %loadMem_475ade = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ade = call %struct.Memory* @routine_movb__0x1__MINUS0x410__rbp__rax_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ade)
  store %struct.Memory* %call_475ade, %struct.Memory** %MEMORY

  ; Code: .L_475ae6:	 RIP: 475ae6	 Bytes: 0
  br label %block_.L_475ae6
block_.L_475ae6:

  ; Code: movl $0xffffffff, -0xdc(%rbp)	 RIP: 475ae6	 Bytes: 10
  %loadMem_475ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ae6 = call %struct.Memory* @routine_movl__0xffffffff__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ae6)
  store %struct.Memory* %call_475ae6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x24(%rbp)	 RIP: 475af0	 Bytes: 7
  %loadMem_475af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475af0 = call %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475af0)
  store %struct.Memory* %call_475af0, %struct.Memory** %MEMORY

  ; Code: .L_475af7:	 RIP: 475af7	 Bytes: 0
  br label %block_.L_475af7
block_.L_475af7:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 475af7	 Bytes: 3
  %loadMem_475af7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475af7 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475af7)
  store %struct.Memory* %call_475af7, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 475afa	 Bytes: 7
  %loadMem_475afa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475afa = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475afa)
  store %struct.Memory* %call_475afa, %struct.Memory** %MEMORY

  ; Code: jge .L_475b8c	 RIP: 475b01	 Bytes: 6
  %loadMem_475b01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b01 = call %struct.Memory* @routine_jge_.L_475b8c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b01, i8* %BRANCH_TAKEN, i64 139, i64 6, i64 6)
  store %struct.Memory* %call_475b01, %struct.Memory** %MEMORY

  %loadBr_475b01 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475b01 = icmp eq i8 %loadBr_475b01, 1
  br i1 %cmpBr_475b01, label %block_.L_475b8c, label %block_475b07

block_475b07:
  ; Code: cmpl $0xffffffff, -0xdc(%rbp)	 RIP: 475b07	 Bytes: 7
  %loadMem_475b07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b07 = call %struct.Memory* @routine_cmpl__0xffffffff__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b07)
  store %struct.Memory* %call_475b07, %struct.Memory** %MEMORY

  ; Code: je .L_475b19	 RIP: 475b0e	 Bytes: 6
  %loadMem_475b0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b0e = call %struct.Memory* @routine_je_.L_475b19(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b0e, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_475b0e, %struct.Memory** %MEMORY

  %loadBr_475b0e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475b0e = icmp eq i8 %loadBr_475b0e, 1
  br i1 %cmpBr_475b0e, label %block_.L_475b19, label %block_475b14

block_475b14:
  ; Code: jmpq .L_475b8c	 RIP: 475b14	 Bytes: 5
  %loadMem_475b14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b14 = call %struct.Memory* @routine_jmpq_.L_475b8c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b14, i64 120, i64 5)
  store %struct.Memory* %call_475b14, %struct.Memory** %MEMORY

  br label %block_.L_475b8c

  ; Code: .L_475b19:	 RIP: 475b19	 Bytes: 0
block_.L_475b19:

  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 475b19	 Bytes: 7
  %loadMem_475b19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b19 = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b19)
  store %struct.Memory* %call_475b19, %struct.Memory** %MEMORY

  ; Code: .L_475b20:	 RIP: 475b20	 Bytes: 0
  br label %block_.L_475b20
block_.L_475b20:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 475b20	 Bytes: 3
  %loadMem_475b20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b20 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b20)
  store %struct.Memory* %call_475b20, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 475b23	 Bytes: 7
  %loadMem_475b23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b23 = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b23)
  store %struct.Memory* %call_475b23, %struct.Memory** %MEMORY

  ; Code: jge .L_475b79	 RIP: 475b2a	 Bytes: 6
  %loadMem_475b2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b2a = call %struct.Memory* @routine_jge_.L_475b79(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b2a, i8* %BRANCH_TAKEN, i64 79, i64 6, i64 6)
  store %struct.Memory* %call_475b2a, %struct.Memory** %MEMORY

  %loadBr_475b2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475b2a = icmp eq i8 %loadBr_475b2a, 1
  br i1 %cmpBr_475b2a, label %block_.L_475b79, label %block_475b30

block_475b30:
  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 475b30	 Bytes: 4
  %loadMem_475b30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b30 = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b30)
  store %struct.Memory* %call_475b30, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 475b34	 Bytes: 3
  %loadMem_475b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b34 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b34)
  store %struct.Memory* %call_475b34, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 475b37	 Bytes: 3
  %loadMem_475b37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b37 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b37)
  store %struct.Memory* %call_475b37, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 475b3a	 Bytes: 3
  %loadMem_475b3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b3a = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b3a)
  store %struct.Memory* %call_475b3a, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, -0x410(%rbp,%rcx,1)	 RIP: 475b3d	 Bytes: 8
  %loadMem_475b3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b3d = call %struct.Memory* @routine_cmpb__0x0__MINUS0x410__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b3d)
  store %struct.Memory* %call_475b3d, %struct.Memory** %MEMORY

  ; Code: je .L_475b66	 RIP: 475b45	 Bytes: 6
  %loadMem_475b45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b45 = call %struct.Memory* @routine_je_.L_475b66(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b45, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_475b45, %struct.Memory** %MEMORY

  %loadBr_475b45 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475b45 = icmp eq i8 %loadBr_475b45, 1
  br i1 %cmpBr_475b45, label %block_.L_475b66, label %block_475b4b

block_475b4b:
  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 475b4b	 Bytes: 4
  %loadMem_475b4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b4b = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b4b)
  store %struct.Memory* %call_475b4b, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 475b4f	 Bytes: 3
  %loadMem_475b4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b4f = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b4f)
  store %struct.Memory* %call_475b4f, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 475b52	 Bytes: 3
  %loadMem_475b52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b52 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b52)
  store %struct.Memory* %call_475b52, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x80(%rbp)	 RIP: 475b55	 Bytes: 3
  %loadMem_475b55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b55 = call %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b55)
  store %struct.Memory* %call_475b55, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 475b58	 Bytes: 3
  %loadMem_475b58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b58 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b58)
  store %struct.Memory* %call_475b58, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xdc(%rbp)	 RIP: 475b5b	 Bytes: 6
  %loadMem_475b5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b5b = call %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b5b)
  store %struct.Memory* %call_475b5b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475b79	 RIP: 475b61	 Bytes: 5
  %loadMem_475b61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b61 = call %struct.Memory* @routine_jmpq_.L_475b79(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b61, i64 24, i64 5)
  store %struct.Memory* %call_475b61, %struct.Memory** %MEMORY

  br label %block_.L_475b79

  ; Code: .L_475b66:	 RIP: 475b66	 Bytes: 0
block_.L_475b66:

  ; Code: jmpq .L_475b6b	 RIP: 475b66	 Bytes: 5
  %loadMem_475b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b66 = call %struct.Memory* @routine_jmpq_.L_475b6b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b66, i64 5, i64 5)
  store %struct.Memory* %call_475b66, %struct.Memory** %MEMORY

  br label %block_.L_475b6b

  ; Code: .L_475b6b:	 RIP: 475b6b	 Bytes: 0
block_.L_475b6b:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 475b6b	 Bytes: 3
  %loadMem_475b6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b6b = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b6b)
  store %struct.Memory* %call_475b6b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 475b6e	 Bytes: 3
  %loadMem_475b6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b6e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b6e)
  store %struct.Memory* %call_475b6e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 475b71	 Bytes: 3
  %loadMem_475b71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b71 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b71)
  store %struct.Memory* %call_475b71, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475b20	 RIP: 475b74	 Bytes: 5
  %loadMem_475b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b74 = call %struct.Memory* @routine_jmpq_.L_475b20(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b74, i64 -84, i64 5)
  store %struct.Memory* %call_475b74, %struct.Memory** %MEMORY

  br label %block_.L_475b20

  ; Code: .L_475b79:	 RIP: 475b79	 Bytes: 0
block_.L_475b79:

  ; Code: jmpq .L_475b7e	 RIP: 475b79	 Bytes: 5
  %loadMem_475b79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b79 = call %struct.Memory* @routine_jmpq_.L_475b7e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b79, i64 5, i64 5)
  store %struct.Memory* %call_475b79, %struct.Memory** %MEMORY

  br label %block_.L_475b7e

  ; Code: .L_475b7e:	 RIP: 475b7e	 Bytes: 0
block_.L_475b7e:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 475b7e	 Bytes: 3
  %loadMem_475b7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b7e = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b7e)
  store %struct.Memory* %call_475b7e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 475b81	 Bytes: 3
  %loadMem_475b81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b81 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b81)
  store %struct.Memory* %call_475b81, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 475b84	 Bytes: 3
  %loadMem_475b84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b84 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b84)
  store %struct.Memory* %call_475b84, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475af7	 RIP: 475b87	 Bytes: 5
  %loadMem_475b87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b87 = call %struct.Memory* @routine_jmpq_.L_475af7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b87, i64 -144, i64 5)
  store %struct.Memory* %call_475b87, %struct.Memory** %MEMORY

  br label %block_.L_475af7

  ; Code: .L_475b8c:	 RIP: 475b8c	 Bytes: 0
block_.L_475b8c:

  ; Code: movl $0xffffffff, -0xe0(%rbp)	 RIP: 475b8c	 Bytes: 10
  %loadMem_475b8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b8c = call %struct.Memory* @routine_movl__0xffffffff__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b8c)
  store %struct.Memory* %call_475b8c, %struct.Memory** %MEMORY

  ; Code: movl 0x7ae438, %eax	 RIP: 475b96	 Bytes: 7
  %loadMem_475b96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b96 = call %struct.Memory* @routine_movl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b96)
  store %struct.Memory* %call_475b96, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 475b9d	 Bytes: 3
  %loadMem_475b9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475b9d = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475b9d)
  store %struct.Memory* %call_475b9d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 475ba0	 Bytes: 3
  %loadMem_475ba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ba0 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ba0)
  store %struct.Memory* %call_475ba0, %struct.Memory** %MEMORY

  ; Code: .L_475ba3:	 RIP: 475ba3	 Bytes: 0
  br label %block_.L_475ba3
block_.L_475ba3:

  ; Code: cmpl $0x0, -0x24(%rbp)	 RIP: 475ba3	 Bytes: 4
  %loadMem_475ba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ba3 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ba3)
  store %struct.Memory* %call_475ba3, %struct.Memory** %MEMORY

  ; Code: jl .L_475c25	 RIP: 475ba7	 Bytes: 6
  %loadMem_475ba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ba7 = call %struct.Memory* @routine_jl_.L_475c25(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ba7, i8* %BRANCH_TAKEN, i64 126, i64 6, i64 6)
  store %struct.Memory* %call_475ba7, %struct.Memory** %MEMORY

  %loadBr_475ba7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475ba7 = icmp eq i8 %loadBr_475ba7, 1
  br i1 %cmpBr_475ba7, label %block_.L_475c25, label %block_475bad

block_475bad:
  ; Code: cmpl $0xffffffff, -0xe0(%rbp)	 RIP: 475bad	 Bytes: 7
  %loadMem_475bad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bad = call %struct.Memory* @routine_cmpl__0xffffffff__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bad)
  store %struct.Memory* %call_475bad, %struct.Memory** %MEMORY

  ; Code: je .L_475bbf	 RIP: 475bb4	 Bytes: 6
  %loadMem_475bb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bb4 = call %struct.Memory* @routine_je_.L_475bbf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bb4, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_475bb4, %struct.Memory** %MEMORY

  %loadBr_475bb4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475bb4 = icmp eq i8 %loadBr_475bb4, 1
  br i1 %cmpBr_475bb4, label %block_.L_475bbf, label %block_475bba

block_475bba:
  ; Code: jmpq .L_475c25	 RIP: 475bba	 Bytes: 5
  %loadMem_475bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bba = call %struct.Memory* @routine_jmpq_.L_475c25(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bba, i64 107, i64 5)
  store %struct.Memory* %call_475bba, %struct.Memory** %MEMORY

  br label %block_.L_475c25

  ; Code: .L_475bbf:	 RIP: 475bbf	 Bytes: 0
block_.L_475bbf:

  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 475bbf	 Bytes: 7
  %loadMem_475bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bbf = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bbf)
  store %struct.Memory* %call_475bbf, %struct.Memory** %MEMORY

  ; Code: .L_475bc6:	 RIP: 475bc6	 Bytes: 0
  br label %block_.L_475bc6
block_.L_475bc6:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 475bc6	 Bytes: 3
  %loadMem_475bc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bc6 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bc6)
  store %struct.Memory* %call_475bc6, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 475bc9	 Bytes: 7
  %loadMem_475bc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bc9 = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bc9)
  store %struct.Memory* %call_475bc9, %struct.Memory** %MEMORY

  ; Code: jge .L_475c12	 RIP: 475bd0	 Bytes: 6
  %loadMem_475bd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bd0 = call %struct.Memory* @routine_jge_.L_475c12(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bd0, i8* %BRANCH_TAKEN, i64 66, i64 6, i64 6)
  store %struct.Memory* %call_475bd0, %struct.Memory** %MEMORY

  %loadBr_475bd0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475bd0 = icmp eq i8 %loadBr_475bd0, 1
  br i1 %cmpBr_475bd0, label %block_.L_475c12, label %block_475bd6

block_475bd6:
  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 475bd6	 Bytes: 4
  %loadMem_475bd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bd6 = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bd6)
  store %struct.Memory* %call_475bd6, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 475bda	 Bytes: 3
  %loadMem_475bda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bda = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bda)
  store %struct.Memory* %call_475bda, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 475bdd	 Bytes: 3
  %loadMem_475bdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bdd = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bdd)
  store %struct.Memory* %call_475bdd, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 475be0	 Bytes: 3
  %loadMem_475be0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475be0 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475be0)
  store %struct.Memory* %call_475be0, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, -0x410(%rbp,%rcx,1)	 RIP: 475be3	 Bytes: 8
  %loadMem_475be3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475be3 = call %struct.Memory* @routine_cmpb__0x0__MINUS0x410__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475be3)
  store %struct.Memory* %call_475be3, %struct.Memory** %MEMORY

  ; Code: je .L_475bff	 RIP: 475beb	 Bytes: 6
  %loadMem_475beb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475beb = call %struct.Memory* @routine_je_.L_475bff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475beb, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_475beb, %struct.Memory** %MEMORY

  %loadBr_475beb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475beb = icmp eq i8 %loadBr_475beb, 1
  br i1 %cmpBr_475beb, label %block_.L_475bff, label %block_475bf1

block_475bf1:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 475bf1	 Bytes: 3
  %loadMem_475bf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bf1 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bf1)
  store %struct.Memory* %call_475bf1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe0(%rbp)	 RIP: 475bf4	 Bytes: 6
  %loadMem_475bf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bf4 = call %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bf4)
  store %struct.Memory* %call_475bf4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475c12	 RIP: 475bfa	 Bytes: 5
  %loadMem_475bfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bfa = call %struct.Memory* @routine_jmpq_.L_475c12(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bfa, i64 24, i64 5)
  store %struct.Memory* %call_475bfa, %struct.Memory** %MEMORY

  br label %block_.L_475c12

  ; Code: .L_475bff:	 RIP: 475bff	 Bytes: 0
block_.L_475bff:

  ; Code: jmpq .L_475c04	 RIP: 475bff	 Bytes: 5
  %loadMem_475bff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475bff = call %struct.Memory* @routine_jmpq_.L_475c04(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475bff, i64 5, i64 5)
  store %struct.Memory* %call_475bff, %struct.Memory** %MEMORY

  br label %block_.L_475c04

  ; Code: .L_475c04:	 RIP: 475c04	 Bytes: 0
block_.L_475c04:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 475c04	 Bytes: 3
  %loadMem_475c04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c04 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c04)
  store %struct.Memory* %call_475c04, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 475c07	 Bytes: 3
  %loadMem_475c07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c07 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c07)
  store %struct.Memory* %call_475c07, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 475c0a	 Bytes: 3
  %loadMem_475c0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c0a = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c0a)
  store %struct.Memory* %call_475c0a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475bc6	 RIP: 475c0d	 Bytes: 5
  %loadMem_475c0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c0d = call %struct.Memory* @routine_jmpq_.L_475bc6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c0d, i64 -71, i64 5)
  store %struct.Memory* %call_475c0d, %struct.Memory** %MEMORY

  br label %block_.L_475bc6

  ; Code: .L_475c12:	 RIP: 475c12	 Bytes: 0
block_.L_475c12:

  ; Code: jmpq .L_475c17	 RIP: 475c12	 Bytes: 5
  %loadMem_475c12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c12 = call %struct.Memory* @routine_jmpq_.L_475c17(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c12, i64 5, i64 5)
  store %struct.Memory* %call_475c12, %struct.Memory** %MEMORY

  br label %block_.L_475c17

  ; Code: .L_475c17:	 RIP: 475c17	 Bytes: 0
block_.L_475c17:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 475c17	 Bytes: 3
  %loadMem_475c17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c17 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c17)
  store %struct.Memory* %call_475c17, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %eax	 RIP: 475c1a	 Bytes: 3
  %loadMem_475c1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c1a = call %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c1a)
  store %struct.Memory* %call_475c1a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 475c1d	 Bytes: 3
  %loadMem_475c1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c1d = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c1d)
  store %struct.Memory* %call_475c1d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475ba3	 RIP: 475c20	 Bytes: 5
  %loadMem_475c20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c20 = call %struct.Memory* @routine_jmpq_.L_475ba3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c20, i64 -125, i64 5)
  store %struct.Memory* %call_475c20, %struct.Memory** %MEMORY

  br label %block_.L_475ba3

  ; Code: .L_475c25:	 RIP: 475c25	 Bytes: 0
block_.L_475c25:

  ; Code: movl $0x1, -0xd4(%rbp)	 RIP: 475c25	 Bytes: 10
  %loadMem_475c25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c25 = call %struct.Memory* @routine_movl__0x1__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c25)
  store %struct.Memory* %call_475c25, %struct.Memory** %MEMORY

  ; Code: .L_475c2f:	 RIP: 475c2f	 Bytes: 0
  br label %block_.L_475c2f
block_.L_475c2f:

  ; Code: movl $0x14, %eax	 RIP: 475c2f	 Bytes: 5
  %loadMem_475c2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c2f = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c2f)
  store %struct.Memory* %call_475c2f, %struct.Memory** %MEMORY

  ; Code: movl -0xd4(%rbp), %ecx	 RIP: 475c34	 Bytes: 6
  %loadMem_475c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c34 = call %struct.Memory* @routine_movl_MINUS0xd4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c34)
  store %struct.Memory* %call_475c34, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 475c3a	 Bytes: 3
  %loadMem_475c3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c3a = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c3a)
  store %struct.Memory* %call_475c3a, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 475c3d	 Bytes: 3
  %loadMem_475c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c3d = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c3d)
  store %struct.Memory* %call_475c3d, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rdx,4), %ecx	 RIP: 475c40	 Bytes: 4
  %loadMem_475c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c40 = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c40)
  store %struct.Memory* %call_475c40, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x490(%rbp)	 RIP: 475c44	 Bytes: 6
  %loadMem_475c44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c44 = call %struct.Memory* @routine_movl__eax__MINUS0x490__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c44)
  store %struct.Memory* %call_475c44, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 475c4a	 Bytes: 2
  %loadMem_475c4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c4a = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c4a)
  store %struct.Memory* %call_475c4a, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 475c4c	 Bytes: 1
  %loadMem_475c4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c4c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c4c)
  store %struct.Memory* %call_475c4c, %struct.Memory** %MEMORY

  ; Code: movl -0x490(%rbp), %ecx	 RIP: 475c4d	 Bytes: 6
  %loadMem_475c4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c4d = call %struct.Memory* @routine_movl_MINUS0x490__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c4d)
  store %struct.Memory* %call_475c4d, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 475c53	 Bytes: 2
  %loadMem_475c53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c53 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c53)
  store %struct.Memory* %call_475c53, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 475c55	 Bytes: 3
  %loadMem_475c55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c55 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c55)
  store %struct.Memory* %call_475c55, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe0(%rbp), %eax	 RIP: 475c58	 Bytes: 6
  %loadMem_475c58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c58 = call %struct.Memory* @routine_cmpl_MINUS0xe0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c58)
  store %struct.Memory* %call_475c58, %struct.Memory** %MEMORY

  ; Code: jge .L_475e12	 RIP: 475c5e	 Bytes: 6
  %loadMem_475c5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c5e = call %struct.Memory* @routine_jge_.L_475e12(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c5e, i8* %BRANCH_TAKEN, i64 436, i64 6, i64 6)
  store %struct.Memory* %call_475c5e, %struct.Memory** %MEMORY

  %loadBr_475c5e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475c5e = icmp eq i8 %loadBr_475c5e, 1
  br i1 %cmpBr_475c5e, label %block_.L_475e12, label %block_475c64

block_475c64:
  ; Code: movl $0x14, %eax	 RIP: 475c64	 Bytes: 5
  %loadMem_475c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c64 = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c64)
  store %struct.Memory* %call_475c64, %struct.Memory** %MEMORY

  ; Code: xorps %xmm0, %xmm0	 RIP: 475c69	 Bytes: 3
  %loadMem_475c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c69 = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c69)
  store %struct.Memory* %call_475c69, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x418(%rbp)	 RIP: 475c6c	 Bytes: 10
  %loadMem_475c6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c6c = call %struct.Memory* @routine_movl__0x0__MINUS0x418__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c6c)
  store %struct.Memory* %call_475c6c, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0x41c(%rbp)	 RIP: 475c76	 Bytes: 8
  %loadMem_475c76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c76 = call %struct.Memory* @routine_movss__xmm0__MINUS0x41c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c76)
  store %struct.Memory* %call_475c76, %struct.Memory** %MEMORY

  ; Code: movl -0xd4(%rbp), %ecx	 RIP: 475c7e	 Bytes: 6
  %loadMem_475c7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c7e = call %struct.Memory* @routine_movl_MINUS0xd4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c7e)
  store %struct.Memory* %call_475c7e, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 475c84	 Bytes: 3
  %loadMem_475c84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c84 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c84)
  store %struct.Memory* %call_475c84, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 475c87	 Bytes: 3
  %loadMem_475c87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c87 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c87)
  store %struct.Memory* %call_475c87, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rdx,4), %ecx	 RIP: 475c8a	 Bytes: 4
  %loadMem_475c8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c8a = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c8a)
  store %struct.Memory* %call_475c8a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x494(%rbp)	 RIP: 475c8e	 Bytes: 6
  %loadMem_475c8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c8e = call %struct.Memory* @routine_movl__eax__MINUS0x494__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c8e)
  store %struct.Memory* %call_475c8e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 475c94	 Bytes: 2
  %loadMem_475c94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c94 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c94)
  store %struct.Memory* %call_475c94, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 475c96	 Bytes: 1
  %loadMem_475c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c96 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c96)
  store %struct.Memory* %call_475c96, %struct.Memory** %MEMORY

  ; Code: movl -0x494(%rbp), %ecx	 RIP: 475c97	 Bytes: 6
  %loadMem_475c97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c97 = call %struct.Memory* @routine_movl_MINUS0x494__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c97)
  store %struct.Memory* %call_475c97, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 475c9d	 Bytes: 2
  %loadMem_475c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c9d = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c9d)
  store %struct.Memory* %call_475c9d, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 475c9f	 Bytes: 3
  %loadMem_475c9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475c9f = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475c9f)
  store %struct.Memory* %call_475c9f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x420(%rbp)	 RIP: 475ca2	 Bytes: 6
  %loadMem_475ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ca2 = call %struct.Memory* @routine_movl__eax__MINUS0x420__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ca2)
  store %struct.Memory* %call_475ca2, %struct.Memory** %MEMORY

  ; Code: movl -0xd4(%rbp), %eax	 RIP: 475ca8	 Bytes: 6
  %loadMem_475ca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ca8 = call %struct.Memory* @routine_movl_MINUS0xd4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ca8)
  store %struct.Memory* %call_475ca8, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 475cae	 Bytes: 3
  %loadMem_475cae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cae = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cae)
  store %struct.Memory* %call_475cae, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 475cb1	 Bytes: 3
  %loadMem_475cb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cb1 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cb1)
  store %struct.Memory* %call_475cb1, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rsi,4), %eax	 RIP: 475cb4	 Bytes: 4
  %loadMem_475cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cb4 = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cb4)
  store %struct.Memory* %call_475cb4, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 475cb8	 Bytes: 1
  %loadMem_475cb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cb8 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cb8)
  store %struct.Memory* %call_475cb8, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 475cb9	 Bytes: 2
  %loadMem_475cb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cb9 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cb9)
  store %struct.Memory* %call_475cb9, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 475cbb	 Bytes: 3
  %loadMem_475cbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cbb = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cbb)
  store %struct.Memory* %call_475cbb, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x424(%rbp)	 RIP: 475cbe	 Bytes: 6
  %loadMem_475cbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cbe = call %struct.Memory* @routine_movl__edx__MINUS0x424__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cbe)
  store %struct.Memory* %call_475cbe, %struct.Memory** %MEMORY

  ; Code: movl -0x420(%rbp), %edx	 RIP: 475cc4	 Bytes: 6
  %loadMem_475cc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cc4 = call %struct.Memory* @routine_movl_MINUS0x420__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cc4)
  store %struct.Memory* %call_475cc4, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 475cca	 Bytes: 3
  %loadMem_475cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cca = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cca)
  store %struct.Memory* %call_475cca, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1c(%rbp)	 RIP: 475ccd	 Bytes: 3
  %loadMem_475ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ccd = call %struct.Memory* @routine_movl__edx__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ccd)
  store %struct.Memory* %call_475ccd, %struct.Memory** %MEMORY

  ; Code: .L_475cd0:	 RIP: 475cd0	 Bytes: 0
  br label %block_.L_475cd0
block_.L_475cd0:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 475cd0	 Bytes: 3
  %loadMem_475cd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cd0 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cd0)
  store %struct.Memory* %call_475cd0, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe0(%rbp), %eax	 RIP: 475cd3	 Bytes: 6
  %loadMem_475cd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cd3 = call %struct.Memory* @routine_cmpl_MINUS0xe0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cd3)
  store %struct.Memory* %call_475cd3, %struct.Memory** %MEMORY

  ; Code: jg .L_475da8	 RIP: 475cd9	 Bytes: 6
  %loadMem_475cd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cd9 = call %struct.Memory* @routine_jg_.L_475da8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cd9, i8* %BRANCH_TAKEN, i64 207, i64 6, i64 6)
  store %struct.Memory* %call_475cd9, %struct.Memory** %MEMORY

  %loadBr_475cd9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475cd9 = icmp eq i8 %loadBr_475cd9, 1
  br i1 %cmpBr_475cd9, label %block_.L_475da8, label %block_475cdf

block_475cdf:
  ; Code: movl $0x0, -0x20(%rbp)	 RIP: 475cdf	 Bytes: 7
  %loadMem_475cdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cdf = call %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cdf)
  store %struct.Memory* %call_475cdf, %struct.Memory** %MEMORY

  ; Code: .L_475ce6:	 RIP: 475ce6	 Bytes: 0
  br label %block_.L_475ce6
block_.L_475ce6:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 475ce6	 Bytes: 3
  %loadMem_475ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ce6 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ce6)
  store %struct.Memory* %call_475ce6, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 475ce9	 Bytes: 7
  %loadMem_475ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ce9 = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ce9)
  store %struct.Memory* %call_475ce9, %struct.Memory** %MEMORY

  ; Code: jge .L_475d95	 RIP: 475cf0	 Bytes: 6
  %loadMem_475cf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cf0 = call %struct.Memory* @routine_jge_.L_475d95(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cf0, i8* %BRANCH_TAKEN, i64 165, i64 6, i64 6)
  store %struct.Memory* %call_475cf0, %struct.Memory** %MEMORY

  %loadBr_475cf0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475cf0 = icmp eq i8 %loadBr_475cf0, 1
  br i1 %cmpBr_475cf0, label %block_.L_475d95, label %block_475cf6

block_475cf6:
  ; Code: imull $0x14, -0x1c(%rbp), %eax	 RIP: 475cf6	 Bytes: 4
  %loadMem_475cf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cf6 = call %struct.Memory* @routine_imull__0x14__MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cf6)
  store %struct.Memory* %call_475cf6, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 475cfa	 Bytes: 3
  %loadMem_475cfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cfa = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cfa)
  store %struct.Memory* %call_475cfa, %struct.Memory** %MEMORY

  ; Code: addl -0x20(%rbp), %eax	 RIP: 475cfd	 Bytes: 3
  %loadMem_475cfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475cfd = call %struct.Memory* @routine_addl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475cfd)
  store %struct.Memory* %call_475cfd, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 475d00	 Bytes: 3
  %loadMem_475d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d00 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d00)
  store %struct.Memory* %call_475d00, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, -0x410(%rbp,%rcx,1)	 RIP: 475d03	 Bytes: 8
  %loadMem_475d03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d03 = call %struct.Memory* @routine_cmpb__0x0__MINUS0x410__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d03)
  store %struct.Memory* %call_475d03, %struct.Memory** %MEMORY

  ; Code: je .L_475d82	 RIP: 475d0b	 Bytes: 6
  %loadMem_475d0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d0b = call %struct.Memory* @routine_je_.L_475d82(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d0b, i8* %BRANCH_TAKEN, i64 119, i64 6, i64 6)
  store %struct.Memory* %call_475d0b, %struct.Memory** %MEMORY

  %loadBr_475d0b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475d0b = icmp eq i8 %loadBr_475d0b, 1
  br i1 %cmpBr_475d0b, label %block_.L_475d82, label %block_475d11

block_475d11:
  ; Code: movl -0x20(%rbp), %eax	 RIP: 475d11	 Bytes: 3
  %loadMem_475d11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d11 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d11)
  store %struct.Memory* %call_475d11, %struct.Memory** %MEMORY

  ; Code: subl -0x424(%rbp), %eax	 RIP: 475d14	 Bytes: 6
  %loadMem_475d14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d14 = call %struct.Memory* @routine_subl_MINUS0x424__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d14)
  store %struct.Memory* %call_475d14, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 475d1a	 Bytes: 4
  %loadMem_475d1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d1a = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d1a)
  store %struct.Memory* %call_475d1a, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 475d1e	 Bytes: 3
  %loadMem_475d1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d1e = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d1e)
  store %struct.Memory* %call_475d1e, %struct.Memory** %MEMORY

  ; Code: subl -0x420(%rbp), %eax	 RIP: 475d21	 Bytes: 6
  %loadMem_475d21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d21 = call %struct.Memory* @routine_subl_MINUS0x420__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d21)
  store %struct.Memory* %call_475d21, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 475d27	 Bytes: 4
  %loadMem_475d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d27 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d27)
  store %struct.Memory* %call_475d27, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 475d2b	 Bytes: 4
  %loadMem_475d2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d2b = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d2b)
  store %struct.Memory* %call_475d2b, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0x428(%rbp)	 RIP: 475d2f	 Bytes: 8
  %loadMem_475d2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d2f = call %struct.Memory* @routine_movss__xmm0__MINUS0x428__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d2f)
  store %struct.Memory* %call_475d2f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x418(%rbp)	 RIP: 475d37	 Bytes: 7
  %loadMem_475d37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d37 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x418__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d37)
  store %struct.Memory* %call_475d37, %struct.Memory** %MEMORY

  ; Code: je .L_475d5d	 RIP: 475d3e	 Bytes: 6
  %loadMem_475d3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d3e = call %struct.Memory* @routine_je_.L_475d5d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d3e, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_475d3e, %struct.Memory** %MEMORY

  %loadBr_475d3e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475d3e = icmp eq i8 %loadBr_475d3e, 1
  br i1 %cmpBr_475d3e, label %block_.L_475d5d, label %block_475d44

block_475d44:
  ; Code: movss -0x428(%rbp), %xmm0	 RIP: 475d44	 Bytes: 8
  %loadMem_475d44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d44 = call %struct.Memory* @routine_movss_MINUS0x428__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d44)
  store %struct.Memory* %call_475d44, %struct.Memory** %MEMORY

  ; Code: movss -0x41c(%rbp), %xmm1	 RIP: 475d4c	 Bytes: 8
  %loadMem_475d4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d4c = call %struct.Memory* @routine_movss_MINUS0x41c__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d4c)
  store %struct.Memory* %call_475d4c, %struct.Memory** %MEMORY

  ; Code: ucomiss %xmm0, %xmm1	 RIP: 475d54	 Bytes: 3
  %loadMem_475d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d54 = call %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d54)
  store %struct.Memory* %call_475d54, %struct.Memory** %MEMORY

  ; Code: jbe .L_475d7d	 RIP: 475d57	 Bytes: 6
  %loadMem_475d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d57 = call %struct.Memory* @routine_jbe_.L_475d7d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d57, i8* %BRANCH_TAKEN, i64 38, i64 6, i64 6)
  store %struct.Memory* %call_475d57, %struct.Memory** %MEMORY

  %loadBr_475d57 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475d57 = icmp eq i8 %loadBr_475d57, 1
  br i1 %cmpBr_475d57, label %block_.L_475d7d, label %block_.L_475d5d

  ; Code: .L_475d5d:	 RIP: 475d5d	 Bytes: 0
block_.L_475d5d:

  ; Code: imull $0x14, -0x1c(%rbp), %eax	 RIP: 475d5d	 Bytes: 4
  %loadMem_475d5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d5d = call %struct.Memory* @routine_imull__0x14__MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d5d)
  store %struct.Memory* %call_475d5d, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 475d61	 Bytes: 3
  %loadMem_475d61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d61 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d61)
  store %struct.Memory* %call_475d61, %struct.Memory** %MEMORY

  ; Code: addl -0x20(%rbp), %eax	 RIP: 475d64	 Bytes: 3
  %loadMem_475d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d64 = call %struct.Memory* @routine_addl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d64)
  store %struct.Memory* %call_475d64, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x418(%rbp)	 RIP: 475d67	 Bytes: 6
  %loadMem_475d67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d67 = call %struct.Memory* @routine_movl__eax__MINUS0x418__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d67)
  store %struct.Memory* %call_475d67, %struct.Memory** %MEMORY

  ; Code: movss -0x428(%rbp), %xmm0	 RIP: 475d6d	 Bytes: 8
  %loadMem_475d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d6d = call %struct.Memory* @routine_movss_MINUS0x428__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d6d)
  store %struct.Memory* %call_475d6d, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0x41c(%rbp)	 RIP: 475d75	 Bytes: 8
  %loadMem_475d75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d75 = call %struct.Memory* @routine_movss__xmm0__MINUS0x41c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d75)
  store %struct.Memory* %call_475d75, %struct.Memory** %MEMORY

  ; Code: .L_475d7d:	 RIP: 475d7d	 Bytes: 0
  br label %block_.L_475d7d
block_.L_475d7d:

  ; Code: jmpq .L_475d82	 RIP: 475d7d	 Bytes: 5
  %loadMem_475d7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d7d = call %struct.Memory* @routine_jmpq_.L_475d82(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d7d, i64 5, i64 5)
  store %struct.Memory* %call_475d7d, %struct.Memory** %MEMORY

  br label %block_.L_475d82

  ; Code: .L_475d82:	 RIP: 475d82	 Bytes: 0
block_.L_475d82:

  ; Code: jmpq .L_475d87	 RIP: 475d82	 Bytes: 5
  %loadMem_475d82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d82 = call %struct.Memory* @routine_jmpq_.L_475d87(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d82, i64 5, i64 5)
  store %struct.Memory* %call_475d82, %struct.Memory** %MEMORY

  br label %block_.L_475d87

  ; Code: .L_475d87:	 RIP: 475d87	 Bytes: 0
block_.L_475d87:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 475d87	 Bytes: 3
  %loadMem_475d87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d87 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d87)
  store %struct.Memory* %call_475d87, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 475d8a	 Bytes: 3
  %loadMem_475d8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d8a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d8a)
  store %struct.Memory* %call_475d8a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 475d8d	 Bytes: 3
  %loadMem_475d8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d8d = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d8d)
  store %struct.Memory* %call_475d8d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475ce6	 RIP: 475d90	 Bytes: 5
  %loadMem_475d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d90 = call %struct.Memory* @routine_jmpq_.L_475ce6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d90, i64 -170, i64 5)
  store %struct.Memory* %call_475d90, %struct.Memory** %MEMORY

  br label %block_.L_475ce6

  ; Code: .L_475d95:	 RIP: 475d95	 Bytes: 0
block_.L_475d95:

  ; Code: jmpq .L_475d9a	 RIP: 475d95	 Bytes: 5
  %loadMem_475d95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d95 = call %struct.Memory* @routine_jmpq_.L_475d9a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d95, i64 5, i64 5)
  store %struct.Memory* %call_475d95, %struct.Memory** %MEMORY

  br label %block_.L_475d9a

  ; Code: .L_475d9a:	 RIP: 475d9a	 Bytes: 0
block_.L_475d9a:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 475d9a	 Bytes: 3
  %loadMem_475d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d9a = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d9a)
  store %struct.Memory* %call_475d9a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 475d9d	 Bytes: 3
  %loadMem_475d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475d9d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475d9d)
  store %struct.Memory* %call_475d9d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c(%rbp)	 RIP: 475da0	 Bytes: 3
  %loadMem_475da0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475da0 = call %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475da0)
  store %struct.Memory* %call_475da0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475cd0	 RIP: 475da3	 Bytes: 5
  %loadMem_475da3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475da3 = call %struct.Memory* @routine_jmpq_.L_475cd0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475da3, i64 -211, i64 5)
  store %struct.Memory* %call_475da3, %struct.Memory** %MEMORY

  br label %block_.L_475cd0

  ; Code: .L_475da8:	 RIP: 475da8	 Bytes: 0
block_.L_475da8:

  ; Code: movslq -0x418(%rbp), %rax	 RIP: 475da8	 Bytes: 7
  %loadMem_475da8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475da8 = call %struct.Memory* @routine_movslq_MINUS0x418__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475da8)
  store %struct.Memory* %call_475da8, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 475daf	 Bytes: 8
  %loadMem_475daf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475daf = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475daf)
  store %struct.Memory* %call_475daf, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 475db7	 Bytes: 3
  %loadMem_475db7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475db7 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475db7)
  store %struct.Memory* %call_475db7, %struct.Memory** %MEMORY

  ; Code: je .L_475dc5	 RIP: 475dba	 Bytes: 6
  %loadMem_475dba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475dba = call %struct.Memory* @routine_je_.L_475dc5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475dba, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_475dba, %struct.Memory** %MEMORY

  %loadBr_475dba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475dba = icmp eq i8 %loadBr_475dba, 1
  br i1 %cmpBr_475dba, label %block_.L_475dc5, label %block_475dc0

block_475dc0:
  ; Code: jmpq .L_475ded	 RIP: 475dc0	 Bytes: 5
  %loadMem_475dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475dc0 = call %struct.Memory* @routine_jmpq_.L_475ded(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475dc0, i64 45, i64 5)
  store %struct.Memory* %call_475dc0, %struct.Memory** %MEMORY

  br label %block_.L_475ded

  ; Code: .L_475dc5:	 RIP: 475dc5	 Bytes: 0
block_.L_475dc5:

  ; Code: movq $0x58192c, %rdi	 RIP: 475dc5	 Bytes: 10
  %loadMem_475dc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475dc5 = call %struct.Memory* @routine_movq__0x58192c___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475dc5)
  store %struct.Memory* %call_475dc5, %struct.Memory** %MEMORY

  ; Code: movl $0xaf, %esi	 RIP: 475dcf	 Bytes: 5
  %loadMem_475dcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475dcf = call %struct.Memory* @routine_movl__0xaf___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475dcf)
  store %struct.Memory* %call_475dcf, %struct.Memory** %MEMORY

  ; Code: movq $0x5819f6, %rdx	 RIP: 475dd4	 Bytes: 10
  %loadMem_475dd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475dd4 = call %struct.Memory* @routine_movq__0x5819f6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475dd4)
  store %struct.Memory* %call_475dd4, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %eax	 RIP: 475dde	 Bytes: 5
  %loadMem_475dde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475dde = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475dde)
  store %struct.Memory* %call_475dde, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 475de3	 Bytes: 2
  %loadMem_475de3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475de3 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475de3)
  store %struct.Memory* %call_475de3, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 475de5	 Bytes: 3
  %loadMem_475de5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475de5 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475de5)
  store %struct.Memory* %call_475de5, %struct.Memory** %MEMORY

  ; Code: callq .abortgo	 RIP: 475de8	 Bytes: 5
  %loadMem1_475de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_475de8 = call %struct.Memory* @routine_callq_.abortgo(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_475de8, i64 -146776, i64 5, i64 5)
  store %struct.Memory* %call1_475de8, %struct.Memory** %MEMORY

  %loadMem2_475de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_475de8 = load i64, i64* %3
  %call2_475de8 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64  %loadPC_475de8, %struct.Memory* %loadMem2_475de8)
  store %struct.Memory* %call2_475de8, %struct.Memory** %MEMORY

  ; Code: .L_475ded:	 RIP: 475ded	 Bytes: 0
  br label %block_.L_475ded
block_.L_475ded:

  ; Code: movl -0x418(%rbp), %eax	 RIP: 475ded	 Bytes: 6
  %loadMem_475ded = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ded = call %struct.Memory* @routine_movl_MINUS0x418__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ded)
  store %struct.Memory* %call_475ded, %struct.Memory** %MEMORY

  ; Code: movslq -0xd4(%rbp), %rcx	 RIP: 475df3	 Bytes: 7
  %loadMem_475df3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475df3 = call %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475df3)
  store %struct.Memory* %call_475df3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x80(%rbp,%rcx,4)	 RIP: 475dfa	 Bytes: 4
  %loadMem_475dfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475dfa = call %struct.Memory* @routine_movl__eax__MINUS0x80__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475dfa)
  store %struct.Memory* %call_475dfa, %struct.Memory** %MEMORY

  ; Code: movl -0xd4(%rbp), %eax	 RIP: 475dfe	 Bytes: 6
  %loadMem_475dfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475dfe = call %struct.Memory* @routine_movl_MINUS0xd4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475dfe)
  store %struct.Memory* %call_475dfe, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 475e04	 Bytes: 3
  %loadMem_475e04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e04 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e04)
  store %struct.Memory* %call_475e04, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd4(%rbp)	 RIP: 475e07	 Bytes: 6
  %loadMem_475e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e07 = call %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e07)
  store %struct.Memory* %call_475e07, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475c2f	 RIP: 475e0d	 Bytes: 5
  %loadMem_475e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e0d = call %struct.Memory* @routine_jmpq_.L_475c2f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e0d, i64 -478, i64 5)
  store %struct.Memory* %call_475e0d, %struct.Memory** %MEMORY

  br label %block_.L_475c2f

  ; Code: .L_475e12:	 RIP: 475e12	 Bytes: 0
block_.L_475e12:

  ; Code: movl 0x7ae438, %eax	 RIP: 475e12	 Bytes: 7
  %loadMem_475e12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e12 = call %struct.Memory* @routine_movl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e12)
  store %struct.Memory* %call_475e12, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 475e19	 Bytes: 3
  %loadMem_475e19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e19 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e19)
  store %struct.Memory* %call_475e19, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 475e1c	 Bytes: 3
  %loadMem_475e1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e1c = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e1c)
  store %struct.Memory* %call_475e1c, %struct.Memory** %MEMORY

  ; Code: .L_475e1f:	 RIP: 475e1f	 Bytes: 0
  br label %block_.L_475e1f
block_.L_475e1f:

  ; Code: cmpl $0x0, -0x28(%rbp)	 RIP: 475e1f	 Bytes: 4
  %loadMem_475e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e1f = call %struct.Memory* @routine_cmpl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e1f)
  store %struct.Memory* %call_475e1f, %struct.Memory** %MEMORY

  ; Code: jl .L_475e72	 RIP: 475e23	 Bytes: 6
  %loadMem_475e23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e23 = call %struct.Memory* @routine_jl_.L_475e72(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e23, i8* %BRANCH_TAKEN, i64 79, i64 6, i64 6)
  store %struct.Memory* %call_475e23, %struct.Memory** %MEMORY

  %loadBr_475e23 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475e23 = icmp eq i8 %loadBr_475e23, 1
  br i1 %cmpBr_475e23, label %block_.L_475e72, label %block_475e29

block_475e29:
  ; Code: imull $0x14, -0xdc(%rbp), %eax	 RIP: 475e29	 Bytes: 7
  %loadMem_475e29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e29 = call %struct.Memory* @routine_imull__0x14__MINUS0xdc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e29)
  store %struct.Memory* %call_475e29, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 475e30	 Bytes: 3
  %loadMem_475e30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e30 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e30)
  store %struct.Memory* %call_475e30, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 475e33	 Bytes: 3
  %loadMem_475e33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e33 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e33)
  store %struct.Memory* %call_475e33, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 475e36	 Bytes: 3
  %loadMem_475e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e36 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e36)
  store %struct.Memory* %call_475e36, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, -0x410(%rbp,%rcx,1)	 RIP: 475e39	 Bytes: 8
  %loadMem_475e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e39 = call %struct.Memory* @routine_cmpb__0x0__MINUS0x410__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e39)
  store %struct.Memory* %call_475e39, %struct.Memory** %MEMORY

  ; Code: je .L_475e5f	 RIP: 475e41	 Bytes: 6
  %loadMem_475e41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e41 = call %struct.Memory* @routine_je_.L_475e5f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e41, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_475e41, %struct.Memory** %MEMORY

  %loadBr_475e41 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475e41 = icmp eq i8 %loadBr_475e41, 1
  br i1 %cmpBr_475e41, label %block_.L_475e5f, label %block_475e47

block_475e47:
  ; Code: imull $0x14, -0xdc(%rbp), %eax	 RIP: 475e47	 Bytes: 7
  %loadMem_475e47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e47 = call %struct.Memory* @routine_imull__0x14__MINUS0xdc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e47)
  store %struct.Memory* %call_475e47, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 475e4e	 Bytes: 3
  %loadMem_475e4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e4e = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e4e)
  store %struct.Memory* %call_475e4e, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 475e51	 Bytes: 3
  %loadMem_475e51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e51 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e51)
  store %struct.Memory* %call_475e51, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd0(%rbp)	 RIP: 475e54	 Bytes: 6
  %loadMem_475e54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e54 = call %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e54)
  store %struct.Memory* %call_475e54, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475e72	 RIP: 475e5a	 Bytes: 5
  %loadMem_475e5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e5a = call %struct.Memory* @routine_jmpq_.L_475e72(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e5a, i64 24, i64 5)
  store %struct.Memory* %call_475e5a, %struct.Memory** %MEMORY

  br label %block_.L_475e72

  ; Code: .L_475e5f:	 RIP: 475e5f	 Bytes: 0
block_.L_475e5f:

  ; Code: jmpq .L_475e64	 RIP: 475e5f	 Bytes: 5
  %loadMem_475e5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e5f = call %struct.Memory* @routine_jmpq_.L_475e64(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e5f, i64 5, i64 5)
  store %struct.Memory* %call_475e5f, %struct.Memory** %MEMORY

  br label %block_.L_475e64

  ; Code: .L_475e64:	 RIP: 475e64	 Bytes: 0
block_.L_475e64:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 475e64	 Bytes: 3
  %loadMem_475e64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e64 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e64)
  store %struct.Memory* %call_475e64, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %eax	 RIP: 475e67	 Bytes: 3
  %loadMem_475e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e67 = call %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e67)
  store %struct.Memory* %call_475e67, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 475e6a	 Bytes: 3
  %loadMem_475e6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e6a = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e6a)
  store %struct.Memory* %call_475e6a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475e1f	 RIP: 475e6d	 Bytes: 5
  %loadMem_475e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e6d = call %struct.Memory* @routine_jmpq_.L_475e1f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e6d, i64 -78, i64 5)
  store %struct.Memory* %call_475e6d, %struct.Memory** %MEMORY

  br label %block_.L_475e1f

  ; Code: .L_475e72:	 RIP: 475e72	 Bytes: 0
block_.L_475e72:

  ; Code: movl $0x1, -0xd8(%rbp)	 RIP: 475e72	 Bytes: 10
  %loadMem_475e72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e72 = call %struct.Memory* @routine_movl__0x1__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e72)
  store %struct.Memory* %call_475e72, %struct.Memory** %MEMORY

  ; Code: .L_475e7c:	 RIP: 475e7c	 Bytes: 0
  br label %block_.L_475e7c
block_.L_475e7c:

  ; Code: movl $0x14, %eax	 RIP: 475e7c	 Bytes: 5
  %loadMem_475e7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e7c = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e7c)
  store %struct.Memory* %call_475e7c, %struct.Memory** %MEMORY

  ; Code: movl -0xd8(%rbp), %ecx	 RIP: 475e81	 Bytes: 6
  %loadMem_475e81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e81 = call %struct.Memory* @routine_movl_MINUS0xd8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e81)
  store %struct.Memory* %call_475e81, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 475e87	 Bytes: 3
  %loadMem_475e87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e87 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e87)
  store %struct.Memory* %call_475e87, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 475e8a	 Bytes: 3
  %loadMem_475e8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e8a = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e8a)
  store %struct.Memory* %call_475e8a, %struct.Memory** %MEMORY

  ; Code: movl -0xd0(%rbp,%rdx,4), %ecx	 RIP: 475e8d	 Bytes: 7
  %loadMem_475e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e8d = call %struct.Memory* @routine_movl_MINUS0xd0__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e8d)
  store %struct.Memory* %call_475e8d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x498(%rbp)	 RIP: 475e94	 Bytes: 6
  %loadMem_475e94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e94 = call %struct.Memory* @routine_movl__eax__MINUS0x498__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e94)
  store %struct.Memory* %call_475e94, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 475e9a	 Bytes: 2
  %loadMem_475e9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e9a = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e9a)
  store %struct.Memory* %call_475e9a, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 475e9c	 Bytes: 1
  %loadMem_475e9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e9c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e9c)
  store %struct.Memory* %call_475e9c, %struct.Memory** %MEMORY

  ; Code: movl -0x498(%rbp), %ecx	 RIP: 475e9d	 Bytes: 6
  %loadMem_475e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475e9d = call %struct.Memory* @routine_movl_MINUS0x498__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475e9d)
  store %struct.Memory* %call_475e9d, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 475ea3	 Bytes: 2
  %loadMem_475ea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ea3 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ea3)
  store %struct.Memory* %call_475ea3, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 475ea5	 Bytes: 3
  %loadMem_475ea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ea5 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ea5)
  store %struct.Memory* %call_475ea5, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe0(%rbp), %eax	 RIP: 475ea8	 Bytes: 6
  %loadMem_475ea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ea8 = call %struct.Memory* @routine_cmpl_MINUS0xe0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ea8)
  store %struct.Memory* %call_475ea8, %struct.Memory** %MEMORY

  ; Code: jge .L_476067	 RIP: 475eae	 Bytes: 6
  %loadMem_475eae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475eae = call %struct.Memory* @routine_jge_.L_476067(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475eae, i8* %BRANCH_TAKEN, i64 441, i64 6, i64 6)
  store %struct.Memory* %call_475eae, %struct.Memory** %MEMORY

  %loadBr_475eae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475eae = icmp eq i8 %loadBr_475eae, 1
  br i1 %cmpBr_475eae, label %block_.L_476067, label %block_475eb4

block_475eb4:
  ; Code: movl $0x14, %eax	 RIP: 475eb4	 Bytes: 5
  %loadMem_475eb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475eb4 = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475eb4)
  store %struct.Memory* %call_475eb4, %struct.Memory** %MEMORY

  ; Code: xorps %xmm0, %xmm0	 RIP: 475eb9	 Bytes: 3
  %loadMem_475eb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475eb9 = call %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475eb9)
  store %struct.Memory* %call_475eb9, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x42c(%rbp)	 RIP: 475ebc	 Bytes: 10
  %loadMem_475ebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ebc = call %struct.Memory* @routine_movl__0x0__MINUS0x42c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ebc)
  store %struct.Memory* %call_475ebc, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0x430(%rbp)	 RIP: 475ec6	 Bytes: 8
  %loadMem_475ec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ec6 = call %struct.Memory* @routine_movss__xmm0__MINUS0x430__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ec6)
  store %struct.Memory* %call_475ec6, %struct.Memory** %MEMORY

  ; Code: movl -0xd8(%rbp), %ecx	 RIP: 475ece	 Bytes: 6
  %loadMem_475ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ece = call %struct.Memory* @routine_movl_MINUS0xd8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ece)
  store %struct.Memory* %call_475ece, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 475ed4	 Bytes: 3
  %loadMem_475ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ed4 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ed4)
  store %struct.Memory* %call_475ed4, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 475ed7	 Bytes: 3
  %loadMem_475ed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ed7 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ed7)
  store %struct.Memory* %call_475ed7, %struct.Memory** %MEMORY

  ; Code: movl -0xd0(%rbp,%rdx,4), %ecx	 RIP: 475eda	 Bytes: 7
  %loadMem_475eda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475eda = call %struct.Memory* @routine_movl_MINUS0xd0__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475eda)
  store %struct.Memory* %call_475eda, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x49c(%rbp)	 RIP: 475ee1	 Bytes: 6
  %loadMem_475ee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ee1 = call %struct.Memory* @routine_movl__eax__MINUS0x49c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ee1)
  store %struct.Memory* %call_475ee1, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 475ee7	 Bytes: 2
  %loadMem_475ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ee7 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ee7)
  store %struct.Memory* %call_475ee7, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 475ee9	 Bytes: 1
  %loadMem_475ee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ee9 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ee9)
  store %struct.Memory* %call_475ee9, %struct.Memory** %MEMORY

  ; Code: movl -0x49c(%rbp), %ecx	 RIP: 475eea	 Bytes: 6
  %loadMem_475eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475eea = call %struct.Memory* @routine_movl_MINUS0x49c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475eea)
  store %struct.Memory* %call_475eea, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 475ef0	 Bytes: 2
  %loadMem_475ef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ef0 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ef0)
  store %struct.Memory* %call_475ef0, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 475ef2	 Bytes: 3
  %loadMem_475ef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ef2 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ef2)
  store %struct.Memory* %call_475ef2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x434(%rbp)	 RIP: 475ef5	 Bytes: 6
  %loadMem_475ef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ef5 = call %struct.Memory* @routine_movl__eax__MINUS0x434__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ef5)
  store %struct.Memory* %call_475ef5, %struct.Memory** %MEMORY

  ; Code: movl -0xd8(%rbp), %eax	 RIP: 475efb	 Bytes: 6
  %loadMem_475efb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475efb = call %struct.Memory* @routine_movl_MINUS0xd8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475efb)
  store %struct.Memory* %call_475efb, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 475f01	 Bytes: 3
  %loadMem_475f01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f01 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f01)
  store %struct.Memory* %call_475f01, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 475f04	 Bytes: 3
  %loadMem_475f04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f04 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f04)
  store %struct.Memory* %call_475f04, %struct.Memory** %MEMORY

  ; Code: movl -0xd0(%rbp,%rsi,4), %eax	 RIP: 475f07	 Bytes: 7
  %loadMem_475f07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f07 = call %struct.Memory* @routine_movl_MINUS0xd0__rbp__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f07)
  store %struct.Memory* %call_475f07, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 475f0e	 Bytes: 1
  %loadMem_475f0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f0e = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f0e)
  store %struct.Memory* %call_475f0e, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 475f0f	 Bytes: 2
  %loadMem_475f0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f0f = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f0f)
  store %struct.Memory* %call_475f0f, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 475f11	 Bytes: 3
  %loadMem_475f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f11 = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f11)
  store %struct.Memory* %call_475f11, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x438(%rbp)	 RIP: 475f14	 Bytes: 6
  %loadMem_475f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f14 = call %struct.Memory* @routine_movl__edx__MINUS0x438__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f14)
  store %struct.Memory* %call_475f14, %struct.Memory** %MEMORY

  ; Code: movl -0x434(%rbp), %edx	 RIP: 475f1a	 Bytes: 6
  %loadMem_475f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f1a = call %struct.Memory* @routine_movl_MINUS0x434__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f1a)
  store %struct.Memory* %call_475f1a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 475f20	 Bytes: 3
  %loadMem_475f20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f20 = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f20)
  store %struct.Memory* %call_475f20, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1c(%rbp)	 RIP: 475f23	 Bytes: 3
  %loadMem_475f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f23 = call %struct.Memory* @routine_movl__edx__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f23)
  store %struct.Memory* %call_475f23, %struct.Memory** %MEMORY

  ; Code: .L_475f26:	 RIP: 475f26	 Bytes: 0
  br label %block_.L_475f26
block_.L_475f26:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 475f26	 Bytes: 3
  %loadMem_475f26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f26 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f26)
  store %struct.Memory* %call_475f26, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe0(%rbp), %eax	 RIP: 475f29	 Bytes: 6
  %loadMem_475f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f29 = call %struct.Memory* @routine_cmpl_MINUS0xe0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f29)
  store %struct.Memory* %call_475f29, %struct.Memory** %MEMORY

  ; Code: jg .L_475ffa	 RIP: 475f2f	 Bytes: 6
  %loadMem_475f2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f2f = call %struct.Memory* @routine_jg_.L_475ffa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f2f, i8* %BRANCH_TAKEN, i64 203, i64 6, i64 6)
  store %struct.Memory* %call_475f2f, %struct.Memory** %MEMORY

  %loadBr_475f2f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475f2f = icmp eq i8 %loadBr_475f2f, 1
  br i1 %cmpBr_475f2f, label %block_.L_475ffa, label %block_475f35

block_475f35:
  ; Code: movl 0x7ae438, %eax	 RIP: 475f35	 Bytes: 7
  %loadMem_475f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f35 = call %struct.Memory* @routine_movl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f35)
  store %struct.Memory* %call_475f35, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 475f3c	 Bytes: 3
  %loadMem_475f3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f3c = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f3c)
  store %struct.Memory* %call_475f3c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 475f3f	 Bytes: 3
  %loadMem_475f3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f3f = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f3f)
  store %struct.Memory* %call_475f3f, %struct.Memory** %MEMORY

  ; Code: .L_475f42:	 RIP: 475f42	 Bytes: 0
  br label %block_.L_475f42
block_.L_475f42:

  ; Code: cmpl $0x0, -0x20(%rbp)	 RIP: 475f42	 Bytes: 4
  %loadMem_475f42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f42 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f42)
  store %struct.Memory* %call_475f42, %struct.Memory** %MEMORY

  ; Code: jl .L_475fe7	 RIP: 475f46	 Bytes: 6
  %loadMem_475f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f46 = call %struct.Memory* @routine_jl_.L_475fe7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f46, i8* %BRANCH_TAKEN, i64 161, i64 6, i64 6)
  store %struct.Memory* %call_475f46, %struct.Memory** %MEMORY

  %loadBr_475f46 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475f46 = icmp eq i8 %loadBr_475f46, 1
  br i1 %cmpBr_475f46, label %block_.L_475fe7, label %block_475f4c

block_475f4c:
  ; Code: imull $0x14, -0x1c(%rbp), %eax	 RIP: 475f4c	 Bytes: 4
  %loadMem_475f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f4c = call %struct.Memory* @routine_imull__0x14__MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f4c)
  store %struct.Memory* %call_475f4c, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 475f50	 Bytes: 3
  %loadMem_475f50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f50 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f50)
  store %struct.Memory* %call_475f50, %struct.Memory** %MEMORY

  ; Code: addl -0x20(%rbp), %eax	 RIP: 475f53	 Bytes: 3
  %loadMem_475f53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f53 = call %struct.Memory* @routine_addl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f53)
  store %struct.Memory* %call_475f53, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 475f56	 Bytes: 3
  %loadMem_475f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f56 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f56)
  store %struct.Memory* %call_475f56, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, -0x410(%rbp,%rcx,1)	 RIP: 475f59	 Bytes: 8
  %loadMem_475f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f59 = call %struct.Memory* @routine_cmpb__0x0__MINUS0x410__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f59)
  store %struct.Memory* %call_475f59, %struct.Memory** %MEMORY

  ; Code: je .L_475fd4	 RIP: 475f61	 Bytes: 6
  %loadMem_475f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f61 = call %struct.Memory* @routine_je_.L_475fd4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f61, i8* %BRANCH_TAKEN, i64 115, i64 6, i64 6)
  store %struct.Memory* %call_475f61, %struct.Memory** %MEMORY

  %loadBr_475f61 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475f61 = icmp eq i8 %loadBr_475f61, 1
  br i1 %cmpBr_475f61, label %block_.L_475fd4, label %block_475f67

block_475f67:
  ; Code: movl -0x20(%rbp), %eax	 RIP: 475f67	 Bytes: 3
  %loadMem_475f67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f67 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f67)
  store %struct.Memory* %call_475f67, %struct.Memory** %MEMORY

  ; Code: subl -0x438(%rbp), %eax	 RIP: 475f6a	 Bytes: 6
  %loadMem_475f6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f6a = call %struct.Memory* @routine_subl_MINUS0x438__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f6a)
  store %struct.Memory* %call_475f6a, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm0	 RIP: 475f70	 Bytes: 4
  %loadMem_475f70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f70 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f70)
  store %struct.Memory* %call_475f70, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 475f74	 Bytes: 3
  %loadMem_475f74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f74 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f74)
  store %struct.Memory* %call_475f74, %struct.Memory** %MEMORY

  ; Code: subl -0x434(%rbp), %eax	 RIP: 475f77	 Bytes: 6
  %loadMem_475f77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f77 = call %struct.Memory* @routine_subl_MINUS0x434__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f77)
  store %struct.Memory* %call_475f77, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 475f7d	 Bytes: 4
  %loadMem_475f7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f7d = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f7d)
  store %struct.Memory* %call_475f7d, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 475f81	 Bytes: 4
  %loadMem_475f81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f81 = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f81)
  store %struct.Memory* %call_475f81, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0x43c(%rbp)	 RIP: 475f85	 Bytes: 8
  %loadMem_475f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f85 = call %struct.Memory* @routine_movss__xmm0__MINUS0x43c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f85)
  store %struct.Memory* %call_475f85, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x42c(%rbp)	 RIP: 475f8d	 Bytes: 7
  %loadMem_475f8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f8d = call %struct.Memory* @routine_cmpl__0x0__MINUS0x42c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f8d)
  store %struct.Memory* %call_475f8d, %struct.Memory** %MEMORY

  ; Code: je .L_475faf	 RIP: 475f94	 Bytes: 6
  %loadMem_475f94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f94 = call %struct.Memory* @routine_je_.L_475faf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f94, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_475f94, %struct.Memory** %MEMORY

  %loadBr_475f94 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475f94 = icmp eq i8 %loadBr_475f94, 1
  br i1 %cmpBr_475f94, label %block_.L_475faf, label %block_475f9a

block_475f9a:
  ; Code: movss -0x43c(%rbp), %xmm0	 RIP: 475f9a	 Bytes: 8
  %loadMem_475f9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475f9a = call %struct.Memory* @routine_movss_MINUS0x43c__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475f9a)
  store %struct.Memory* %call_475f9a, %struct.Memory** %MEMORY

  ; Code: ucomiss -0x430(%rbp), %xmm0	 RIP: 475fa2	 Bytes: 7
  %loadMem_475fa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fa2 = call %struct.Memory* @routine_ucomiss_MINUS0x430__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fa2)
  store %struct.Memory* %call_475fa2, %struct.Memory** %MEMORY

  ; Code: jbe .L_475fcf	 RIP: 475fa9	 Bytes: 6
  %loadMem_475fa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fa9 = call %struct.Memory* @routine_jbe_.L_475fcf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fa9, i8* %BRANCH_TAKEN, i64 38, i64 6, i64 6)
  store %struct.Memory* %call_475fa9, %struct.Memory** %MEMORY

  %loadBr_475fa9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475fa9 = icmp eq i8 %loadBr_475fa9, 1
  br i1 %cmpBr_475fa9, label %block_.L_475fcf, label %block_.L_475faf

  ; Code: .L_475faf:	 RIP: 475faf	 Bytes: 0
block_.L_475faf:

  ; Code: imull $0x14, -0x1c(%rbp), %eax	 RIP: 475faf	 Bytes: 4
  %loadMem_475faf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475faf = call %struct.Memory* @routine_imull__0x14__MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475faf)
  store %struct.Memory* %call_475faf, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 475fb3	 Bytes: 3
  %loadMem_475fb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fb3 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fb3)
  store %struct.Memory* %call_475fb3, %struct.Memory** %MEMORY

  ; Code: addl -0x20(%rbp), %eax	 RIP: 475fb6	 Bytes: 3
  %loadMem_475fb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fb6 = call %struct.Memory* @routine_addl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fb6)
  store %struct.Memory* %call_475fb6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x42c(%rbp)	 RIP: 475fb9	 Bytes: 6
  %loadMem_475fb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fb9 = call %struct.Memory* @routine_movl__eax__MINUS0x42c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fb9)
  store %struct.Memory* %call_475fb9, %struct.Memory** %MEMORY

  ; Code: movss -0x43c(%rbp), %xmm0	 RIP: 475fbf	 Bytes: 8
  %loadMem_475fbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fbf = call %struct.Memory* @routine_movss_MINUS0x43c__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fbf)
  store %struct.Memory* %call_475fbf, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0x430(%rbp)	 RIP: 475fc7	 Bytes: 8
  %loadMem_475fc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fc7 = call %struct.Memory* @routine_movss__xmm0__MINUS0x430__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fc7)
  store %struct.Memory* %call_475fc7, %struct.Memory** %MEMORY

  ; Code: .L_475fcf:	 RIP: 475fcf	 Bytes: 0
  br label %block_.L_475fcf
block_.L_475fcf:

  ; Code: jmpq .L_475fd4	 RIP: 475fcf	 Bytes: 5
  %loadMem_475fcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fcf = call %struct.Memory* @routine_jmpq_.L_475fd4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fcf, i64 5, i64 5)
  store %struct.Memory* %call_475fcf, %struct.Memory** %MEMORY

  br label %block_.L_475fd4

  ; Code: .L_475fd4:	 RIP: 475fd4	 Bytes: 0
block_.L_475fd4:

  ; Code: jmpq .L_475fd9	 RIP: 475fd4	 Bytes: 5
  %loadMem_475fd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fd4 = call %struct.Memory* @routine_jmpq_.L_475fd9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fd4, i64 5, i64 5)
  store %struct.Memory* %call_475fd4, %struct.Memory** %MEMORY

  br label %block_.L_475fd9

  ; Code: .L_475fd9:	 RIP: 475fd9	 Bytes: 0
block_.L_475fd9:

  ; Code: movl -0x20(%rbp), %eax	 RIP: 475fd9	 Bytes: 3
  %loadMem_475fd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fd9 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fd9)
  store %struct.Memory* %call_475fd9, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %eax	 RIP: 475fdc	 Bytes: 3
  %loadMem_475fdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fdc = call %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fdc)
  store %struct.Memory* %call_475fdc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 475fdf	 Bytes: 3
  %loadMem_475fdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fdf = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fdf)
  store %struct.Memory* %call_475fdf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475f42	 RIP: 475fe2	 Bytes: 5
  %loadMem_475fe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fe2 = call %struct.Memory* @routine_jmpq_.L_475f42(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fe2, i64 -160, i64 5)
  store %struct.Memory* %call_475fe2, %struct.Memory** %MEMORY

  br label %block_.L_475f42

  ; Code: .L_475fe7:	 RIP: 475fe7	 Bytes: 0
block_.L_475fe7:

  ; Code: jmpq .L_475fec	 RIP: 475fe7	 Bytes: 5
  %loadMem_475fe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fe7 = call %struct.Memory* @routine_jmpq_.L_475fec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fe7, i64 5, i64 5)
  store %struct.Memory* %call_475fe7, %struct.Memory** %MEMORY

  br label %block_.L_475fec

  ; Code: .L_475fec:	 RIP: 475fec	 Bytes: 0
block_.L_475fec:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 475fec	 Bytes: 3
  %loadMem_475fec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fec = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fec)
  store %struct.Memory* %call_475fec, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 475fef	 Bytes: 3
  %loadMem_475fef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475fef = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475fef)
  store %struct.Memory* %call_475fef, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c(%rbp)	 RIP: 475ff2	 Bytes: 3
  %loadMem_475ff2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ff2 = call %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ff2)
  store %struct.Memory* %call_475ff2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475f26	 RIP: 475ff5	 Bytes: 5
  %loadMem_475ff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ff5 = call %struct.Memory* @routine_jmpq_.L_475f26(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ff5, i64 -207, i64 5)
  store %struct.Memory* %call_475ff5, %struct.Memory** %MEMORY

  br label %block_.L_475f26

  ; Code: .L_475ffa:	 RIP: 475ffa	 Bytes: 0
block_.L_475ffa:

  ; Code: movslq -0x42c(%rbp), %rax	 RIP: 475ffa	 Bytes: 7
  %loadMem_475ffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_475ffa = call %struct.Memory* @routine_movslq_MINUS0x42c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_475ffa)
  store %struct.Memory* %call_475ffa, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 476001	 Bytes: 8
  %loadMem_476001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476001 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476001)
  store %struct.Memory* %call_476001, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 476009	 Bytes: 3
  %loadMem_476009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476009 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476009)
  store %struct.Memory* %call_476009, %struct.Memory** %MEMORY

  ; Code: je .L_476017	 RIP: 47600c	 Bytes: 6
  %loadMem_47600c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47600c = call %struct.Memory* @routine_je_.L_476017(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47600c, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_47600c, %struct.Memory** %MEMORY

  %loadBr_47600c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47600c = icmp eq i8 %loadBr_47600c, 1
  br i1 %cmpBr_47600c, label %block_.L_476017, label %block_476012

block_476012:
  ; Code: jmpq .L_47603f	 RIP: 476012	 Bytes: 5
  %loadMem_476012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476012 = call %struct.Memory* @routine_jmpq_.L_47603f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476012, i64 45, i64 5)
  store %struct.Memory* %call_476012, %struct.Memory** %MEMORY

  br label %block_.L_47603f

  ; Code: .L_476017:	 RIP: 476017	 Bytes: 0
block_.L_476017:

  ; Code: movq $0x58192c, %rdi	 RIP: 476017	 Bytes: 10
  %loadMem_476017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476017 = call %struct.Memory* @routine_movq__0x58192c___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476017)
  store %struct.Memory* %call_476017, %struct.Memory** %MEMORY

  ; Code: movl $0xcf, %esi	 RIP: 476021	 Bytes: 5
  %loadMem_476021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476021 = call %struct.Memory* @routine_movl__0xcf___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476021)
  store %struct.Memory* %call_476021, %struct.Memory** %MEMORY

  ; Code: movq $0x5819f6, %rdx	 RIP: 476026	 Bytes: 10
  %loadMem_476026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476026 = call %struct.Memory* @routine_movq__0x5819f6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476026)
  store %struct.Memory* %call_476026, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %eax	 RIP: 476030	 Bytes: 5
  %loadMem_476030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476030 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476030)
  store %struct.Memory* %call_476030, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 476035	 Bytes: 2
  %loadMem_476035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476035 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476035)
  store %struct.Memory* %call_476035, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 476037	 Bytes: 3
  %loadMem_476037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476037 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476037)
  store %struct.Memory* %call_476037, %struct.Memory** %MEMORY

  ; Code: callq .abortgo	 RIP: 47603a	 Bytes: 5
  %loadMem1_47603a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_47603a = call %struct.Memory* @routine_callq_.abortgo(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_47603a, i64 -147370, i64 5, i64 5)
  store %struct.Memory* %call1_47603a, %struct.Memory** %MEMORY

  %loadMem2_47603a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47603a = load i64, i64* %3
  %call2_47603a = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64  %loadPC_47603a, %struct.Memory* %loadMem2_47603a)
  store %struct.Memory* %call2_47603a, %struct.Memory** %MEMORY

  ; Code: .L_47603f:	 RIP: 47603f	 Bytes: 0
  br label %block_.L_47603f
block_.L_47603f:

  ; Code: movl -0x42c(%rbp), %eax	 RIP: 47603f	 Bytes: 6
  %loadMem_47603f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47603f = call %struct.Memory* @routine_movl_MINUS0x42c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47603f)
  store %struct.Memory* %call_47603f, %struct.Memory** %MEMORY

  ; Code: movslq -0xd8(%rbp), %rcx	 RIP: 476045	 Bytes: 7
  %loadMem_476045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476045 = call %struct.Memory* @routine_movslq_MINUS0xd8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476045)
  store %struct.Memory* %call_476045, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd0(%rbp,%rcx,4)	 RIP: 47604c	 Bytes: 7
  %loadMem_47604c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47604c = call %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47604c)
  store %struct.Memory* %call_47604c, %struct.Memory** %MEMORY

  ; Code: movl -0xd8(%rbp), %eax	 RIP: 476053	 Bytes: 6
  %loadMem_476053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476053 = call %struct.Memory* @routine_movl_MINUS0xd8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476053)
  store %struct.Memory* %call_476053, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476059	 Bytes: 3
  %loadMem_476059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476059 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476059)
  store %struct.Memory* %call_476059, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd8(%rbp)	 RIP: 47605c	 Bytes: 6
  %loadMem_47605c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47605c = call %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47605c)
  store %struct.Memory* %call_47605c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_475e7c	 RIP: 476062	 Bytes: 5
  %loadMem_476062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476062 = call %struct.Memory* @routine_jmpq_.L_475e7c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476062, i64 -486, i64 5)
  store %struct.Memory* %call_476062, %struct.Memory** %MEMORY

  br label %block_.L_475e7c

  ; Code: .L_476067:	 RIP: 476067	 Bytes: 0
block_.L_476067:

  ; Code: movl $0x14, %eax	 RIP: 476067	 Bytes: 5
  %loadMem_476067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476067 = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476067)
  store %struct.Memory* %call_476067, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp), %ecx	 RIP: 47606c	 Bytes: 3
  %loadMem_47606c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47606c = call %struct.Memory* @routine_movl_MINUS0x80__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47606c)
  store %struct.Memory* %call_47606c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4a0(%rbp)	 RIP: 47606f	 Bytes: 6
  %loadMem_47606f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47606f = call %struct.Memory* @routine_movl__eax__MINUS0x4a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47606f)
  store %struct.Memory* %call_47606f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 476075	 Bytes: 2
  %loadMem_476075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476075 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476075)
  store %struct.Memory* %call_476075, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 476077	 Bytes: 1
  %loadMem_476077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476077 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476077)
  store %struct.Memory* %call_476077, %struct.Memory** %MEMORY

  ; Code: movl -0x4a0(%rbp), %ecx	 RIP: 476078	 Bytes: 6
  %loadMem_476078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476078 = call %struct.Memory* @routine_movl_MINUS0x4a0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476078)
  store %struct.Memory* %call_476078, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47607e	 Bytes: 2
  %loadMem_47607e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47607e = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47607e)
  store %struct.Memory* %call_47607e, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 476080	 Bytes: 3
  %loadMem_476080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476080 = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476080)
  store %struct.Memory* %call_476080, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x28(%rbp)	 RIP: 476083	 Bytes: 3
  %loadMem_476083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476083 = call %struct.Memory* @routine_movl__edx__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476083)
  store %struct.Memory* %call_476083, %struct.Memory** %MEMORY

  ; Code: .L_476086:	 RIP: 476086	 Bytes: 0
  br label %block_.L_476086
block_.L_476086:

  ; Code: movl $0x14, %eax	 RIP: 476086	 Bytes: 5
  %loadMem_476086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476086 = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476086)
  store %struct.Memory* %call_476086, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %ecx	 RIP: 47608b	 Bytes: 3
  %loadMem_47608b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47608b = call %struct.Memory* @routine_movl_MINUS0x28__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47608b)
  store %struct.Memory* %call_47608b, %struct.Memory** %MEMORY

  ; Code: movl -0xd0(%rbp), %edx	 RIP: 47608e	 Bytes: 6
  %loadMem_47608e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47608e = call %struct.Memory* @routine_movl_MINUS0xd0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47608e)
  store %struct.Memory* %call_47608e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4a4(%rbp)	 RIP: 476094	 Bytes: 6
  %loadMem_476094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476094 = call %struct.Memory* @routine_movl__eax__MINUS0x4a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476094)
  store %struct.Memory* %call_476094, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 47609a	 Bytes: 2
  %loadMem_47609a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47609a = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47609a)
  store %struct.Memory* %call_47609a, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47609c	 Bytes: 1
  %loadMem_47609c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47609c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47609c)
  store %struct.Memory* %call_47609c, %struct.Memory** %MEMORY

  ; Code: movl -0x4a4(%rbp), %esi	 RIP: 47609d	 Bytes: 6
  %loadMem_47609d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47609d = call %struct.Memory* @routine_movl_MINUS0x4a4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47609d)
  store %struct.Memory* %call_47609d, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4760a3	 Bytes: 2
  %loadMem_4760a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760a3 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760a3)
  store %struct.Memory* %call_4760a3, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 4760a5	 Bytes: 3
  %loadMem_4760a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760a5 = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760a5)
  store %struct.Memory* %call_4760a5, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 4760a8	 Bytes: 2
  %loadMem_4760a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760a8 = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760a8)
  store %struct.Memory* %call_4760a8, %struct.Memory** %MEMORY

  ; Code: jg .L_4760d6	 RIP: 4760aa	 Bytes: 6
  %loadMem_4760aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760aa = call %struct.Memory* @routine_jg_.L_4760d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760aa, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_4760aa, %struct.Memory** %MEMORY

  %loadBr_4760aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4760aa = icmp eq i8 %loadBr_4760aa, 1
  br i1 %cmpBr_4760aa, label %block_.L_4760d6, label %block_4760b0

block_4760b0:
  ; Code: imull $0x14, -0xdc(%rbp), %eax	 RIP: 4760b0	 Bytes: 7
  %loadMem_4760b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760b0 = call %struct.Memory* @routine_imull__0x14__MINUS0xdc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760b0)
  store %struct.Memory* %call_4760b0, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 4760b7	 Bytes: 3
  %loadMem_4760b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760b7 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760b7)
  store %struct.Memory* %call_4760b7, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 4760ba	 Bytes: 3
  %loadMem_4760ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760ba = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760ba)
  store %struct.Memory* %call_4760ba, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4760bd	 Bytes: 3
  %loadMem_4760bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760bd = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760bd)
  store %struct.Memory* %call_4760bd, %struct.Memory** %MEMORY

  ; Code: movb $0x1, -0x410(%rbp,%rcx,1)	 RIP: 4760c0	 Bytes: 8
  %loadMem_4760c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760c0 = call %struct.Memory* @routine_movb__0x1__MINUS0x410__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760c0)
  store %struct.Memory* %call_4760c0, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %eax	 RIP: 4760c8	 Bytes: 3
  %loadMem_4760c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760c8 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760c8)
  store %struct.Memory* %call_4760c8, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4760cb	 Bytes: 3
  %loadMem_4760cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760cb = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760cb)
  store %struct.Memory* %call_4760cb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 4760ce	 Bytes: 3
  %loadMem_4760ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760ce = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760ce)
  store %struct.Memory* %call_4760ce, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476086	 RIP: 4760d1	 Bytes: 5
  %loadMem_4760d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760d1 = call %struct.Memory* @routine_jmpq_.L_476086(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760d1, i64 -75, i64 5)
  store %struct.Memory* %call_4760d1, %struct.Memory** %MEMORY

  br label %block_.L_476086

  ; Code: .L_4760d6:	 RIP: 4760d6	 Bytes: 0
block_.L_4760d6:

  ; Code: movl $0x14, %eax	 RIP: 4760d6	 Bytes: 5
  %loadMem_4760d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760d6 = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760d6)
  store %struct.Memory* %call_4760d6, %struct.Memory** %MEMORY

  ; Code: movl -0xd4(%rbp), %ecx	 RIP: 4760db	 Bytes: 6
  %loadMem_4760db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760db = call %struct.Memory* @routine_movl_MINUS0xd4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760db)
  store %struct.Memory* %call_4760db, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 4760e1	 Bytes: 3
  %loadMem_4760e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760e1 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760e1)
  store %struct.Memory* %call_4760e1, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4760e4	 Bytes: 3
  %loadMem_4760e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760e4 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760e4)
  store %struct.Memory* %call_4760e4, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rdx,4), %ecx	 RIP: 4760e7	 Bytes: 4
  %loadMem_4760e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760e7 = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760e7)
  store %struct.Memory* %call_4760e7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4a8(%rbp)	 RIP: 4760eb	 Bytes: 6
  %loadMem_4760eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760eb = call %struct.Memory* @routine_movl__eax__MINUS0x4a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760eb)
  store %struct.Memory* %call_4760eb, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 4760f1	 Bytes: 2
  %loadMem_4760f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760f1 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760f1)
  store %struct.Memory* %call_4760f1, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4760f3	 Bytes: 1
  %loadMem_4760f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760f3 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760f3)
  store %struct.Memory* %call_4760f3, %struct.Memory** %MEMORY

  ; Code: movl -0x4a8(%rbp), %ecx	 RIP: 4760f4	 Bytes: 6
  %loadMem_4760f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760f4 = call %struct.Memory* @routine_movl_MINUS0x4a8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760f4)
  store %struct.Memory* %call_4760f4, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4760fa	 Bytes: 2
  %loadMem_4760fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760fa = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760fa)
  store %struct.Memory* %call_4760fa, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 4760fc	 Bytes: 3
  %loadMem_4760fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760fc = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760fc)
  store %struct.Memory* %call_4760fc, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x28(%rbp)	 RIP: 4760ff	 Bytes: 3
  %loadMem_4760ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4760ff = call %struct.Memory* @routine_movl__edx__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4760ff)
  store %struct.Memory* %call_4760ff, %struct.Memory** %MEMORY

  ; Code: .L_476102:	 RIP: 476102	 Bytes: 0
  br label %block_.L_476102
block_.L_476102:

  ; Code: movl $0x14, %eax	 RIP: 476102	 Bytes: 5
  %loadMem_476102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476102 = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476102)
  store %struct.Memory* %call_476102, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %ecx	 RIP: 476107	 Bytes: 3
  %loadMem_476107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476107 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476107)
  store %struct.Memory* %call_476107, %struct.Memory** %MEMORY

  ; Code: movl -0xd8(%rbp), %edx	 RIP: 47610a	 Bytes: 6
  %loadMem_47610a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47610a = call %struct.Memory* @routine_movl_MINUS0xd8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47610a)
  store %struct.Memory* %call_47610a, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 476110	 Bytes: 3
  %loadMem_476110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476110 = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476110)
  store %struct.Memory* %call_476110, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 476113	 Bytes: 3
  %loadMem_476113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476113 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476113)
  store %struct.Memory* %call_476113, %struct.Memory** %MEMORY

  ; Code: movl -0xd0(%rbp,%rsi,4), %edx	 RIP: 476116	 Bytes: 7
  %loadMem_476116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476116 = call %struct.Memory* @routine_movl_MINUS0xd0__rbp__rsi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476116)
  store %struct.Memory* %call_476116, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4ac(%rbp)	 RIP: 47611d	 Bytes: 6
  %loadMem_47611d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47611d = call %struct.Memory* @routine_movl__eax__MINUS0x4ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47611d)
  store %struct.Memory* %call_47611d, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 476123	 Bytes: 2
  %loadMem_476123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476123 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476123)
  store %struct.Memory* %call_476123, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 476125	 Bytes: 1
  %loadMem_476125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476125 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476125)
  store %struct.Memory* %call_476125, %struct.Memory** %MEMORY

  ; Code: movl -0x4ac(%rbp), %edi	 RIP: 476126	 Bytes: 6
  %loadMem_476126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476126 = call %struct.Memory* @routine_movl_MINUS0x4ac__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476126)
  store %struct.Memory* %call_476126, %struct.Memory** %MEMORY

  ; Code: idivl %edi	 RIP: 47612c	 Bytes: 2
  %loadMem_47612c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47612c = call %struct.Memory* @routine_idivl__edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47612c)
  store %struct.Memory* %call_47612c, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 47612e	 Bytes: 3
  %loadMem_47612e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47612e = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47612e)
  store %struct.Memory* %call_47612e, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 476131	 Bytes: 2
  %loadMem_476131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476131 = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476131)
  store %struct.Memory* %call_476131, %struct.Memory** %MEMORY

  ; Code: jg .L_47615f	 RIP: 476133	 Bytes: 6
  %loadMem_476133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476133 = call %struct.Memory* @routine_jg_.L_47615f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476133, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_476133, %struct.Memory** %MEMORY

  %loadBr_476133 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476133 = icmp eq i8 %loadBr_476133, 1
  br i1 %cmpBr_476133, label %block_.L_47615f, label %block_476139

block_476139:
  ; Code: imull $0x14, -0xe0(%rbp), %eax	 RIP: 476139	 Bytes: 7
  %loadMem_476139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476139 = call %struct.Memory* @routine_imull__0x14__MINUS0xe0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476139)
  store %struct.Memory* %call_476139, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 476140	 Bytes: 3
  %loadMem_476140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476140 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476140)
  store %struct.Memory* %call_476140, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 476143	 Bytes: 3
  %loadMem_476143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476143 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476143)
  store %struct.Memory* %call_476143, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476146	 Bytes: 3
  %loadMem_476146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476146 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476146)
  store %struct.Memory* %call_476146, %struct.Memory** %MEMORY

  ; Code: movb $0x1, -0x410(%rbp,%rcx,1)	 RIP: 476149	 Bytes: 8
  %loadMem_476149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476149 = call %struct.Memory* @routine_movb__0x1__MINUS0x410__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476149)
  store %struct.Memory* %call_476149, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %eax	 RIP: 476151	 Bytes: 3
  %loadMem_476151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476151 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476151)
  store %struct.Memory* %call_476151, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476154	 Bytes: 3
  %loadMem_476154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476154 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476154)
  store %struct.Memory* %call_476154, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 476157	 Bytes: 3
  %loadMem_476157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476157 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476157)
  store %struct.Memory* %call_476157, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476102	 RIP: 47615a	 Bytes: 5
  %loadMem_47615a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47615a = call %struct.Memory* @routine_jmpq_.L_476102(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47615a, i64 -88, i64 5)
  store %struct.Memory* %call_47615a, %struct.Memory** %MEMORY

  br label %block_.L_476102

  ; Code: .L_47615f:	 RIP: 47615f	 Bytes: 0
block_.L_47615f:

  ; Code: movl -0xdc(%rbp), %eax	 RIP: 47615f	 Bytes: 6
  %loadMem_47615f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47615f = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47615f)
  store %struct.Memory* %call_47615f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476165	 Bytes: 3
  %loadMem_476165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476165 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476165)
  store %struct.Memory* %call_476165, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 476168	 Bytes: 3
  %loadMem_476168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476168 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476168)
  store %struct.Memory* %call_476168, %struct.Memory** %MEMORY

  ; Code: .L_47616b:	 RIP: 47616b	 Bytes: 0
  br label %block_.L_47616b
block_.L_47616b:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 47616b	 Bytes: 3
  %loadMem_47616b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47616b = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47616b)
  store %struct.Memory* %call_47616b, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe0(%rbp), %eax	 RIP: 47616e	 Bytes: 6
  %loadMem_47616e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47616e = call %struct.Memory* @routine_cmpl_MINUS0xe0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47616e)
  store %struct.Memory* %call_47616e, %struct.Memory** %MEMORY

  ; Code: jge .L_476469	 RIP: 476174	 Bytes: 6
  %loadMem_476174 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476174 = call %struct.Memory* @routine_jge_.L_476469(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476174, i8* %BRANCH_TAKEN, i64 757, i64 6, i64 6)
  store %struct.Memory* %call_476174, %struct.Memory** %MEMORY

  %loadBr_476174 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476174 = icmp eq i8 %loadBr_476174, 1
  br i1 %cmpBr_476174, label %block_.L_476469, label %block_47617a

block_47617a:
  ; Code: movl $0xffffffff, -0x440(%rbp)	 RIP: 47617a	 Bytes: 10
  %loadMem_47617a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47617a = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x440__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47617a)
  store %struct.Memory* %call_47617a, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, -0x444(%rbp)	 RIP: 476184	 Bytes: 10
  %loadMem_476184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476184 = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x444__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476184)
  store %struct.Memory* %call_476184, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x2c(%rbp)	 RIP: 47618e	 Bytes: 7
  %loadMem_47618e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47618e = call %struct.Memory* @routine_movl__0x1__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47618e)
  store %struct.Memory* %call_47618e, %struct.Memory** %MEMORY

  ; Code: .L_476195:	 RIP: 476195	 Bytes: 0
  br label %block_.L_476195
block_.L_476195:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 476195	 Bytes: 3
  %loadMem_476195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476195 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476195)
  store %struct.Memory* %call_476195, %struct.Memory** %MEMORY

  ; Code: cmpl -0xd4(%rbp), %eax	 RIP: 476198	 Bytes: 6
  %loadMem_476198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476198 = call %struct.Memory* @routine_cmpl_MINUS0xd4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476198)
  store %struct.Memory* %call_476198, %struct.Memory** %MEMORY

  ; Code: jge .L_4762cd	 RIP: 47619e	 Bytes: 6
  %loadMem_47619e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47619e = call %struct.Memory* @routine_jge_.L_4762cd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47619e, i8* %BRANCH_TAKEN, i64 303, i64 6, i64 6)
  store %struct.Memory* %call_47619e, %struct.Memory** %MEMORY

  %loadBr_47619e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47619e = icmp eq i8 %loadBr_47619e, 1
  br i1 %cmpBr_47619e, label %block_.L_4762cd, label %block_4761a4

block_4761a4:
  ; Code: movl $0x14, %eax	 RIP: 4761a4	 Bytes: 5
  %loadMem_4761a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761a4 = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761a4)
  store %struct.Memory* %call_4761a4, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4761a9	 Bytes: 4
  %loadMem_4761a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761a9 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761a9)
  store %struct.Memory* %call_4761a9, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rcx,4), %edx	 RIP: 4761ad	 Bytes: 4
  %loadMem_4761ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761ad = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761ad)
  store %struct.Memory* %call_4761ad, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4b0(%rbp)	 RIP: 4761b1	 Bytes: 6
  %loadMem_4761b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761b1 = call %struct.Memory* @routine_movl__eax__MINUS0x4b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761b1)
  store %struct.Memory* %call_4761b1, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4761b7	 Bytes: 2
  %loadMem_4761b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761b7 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761b7)
  store %struct.Memory* %call_4761b7, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4761b9	 Bytes: 1
  %loadMem_4761b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761b9 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761b9)
  store %struct.Memory* %call_4761b9, %struct.Memory** %MEMORY

  ; Code: movl -0x4b0(%rbp), %esi	 RIP: 4761ba	 Bytes: 6
  %loadMem_4761ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761ba = call %struct.Memory* @routine_movl_MINUS0x4b0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761ba)
  store %struct.Memory* %call_4761ba, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 4761c0	 Bytes: 2
  %loadMem_4761c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761c0 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761c0)
  store %struct.Memory* %call_4761c0, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 4761c2	 Bytes: 3
  %loadMem_4761c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761c2 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761c2)
  store %struct.Memory* %call_4761c2, %struct.Memory** %MEMORY

  ; Code: cmpl -0x24(%rbp), %eax	 RIP: 4761c5	 Bytes: 3
  %loadMem_4761c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761c5 = call %struct.Memory* @routine_cmpl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761c5)
  store %struct.Memory* %call_4761c5, %struct.Memory** %MEMORY

  ; Code: jle .L_4762ba	 RIP: 4761c8	 Bytes: 6
  %loadMem_4761c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761c8 = call %struct.Memory* @routine_jle_.L_4762ba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761c8, i8* %BRANCH_TAKEN, i64 242, i64 6, i64 6)
  store %struct.Memory* %call_4761c8, %struct.Memory** %MEMORY

  %loadBr_4761c8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4761c8 = icmp eq i8 %loadBr_4761c8, 1
  br i1 %cmpBr_4761c8, label %block_.L_4762ba, label %block_4761ce

block_4761ce:
  ; Code: movsd 0x6cea2(%rip), %xmm0	 RIP: 4761ce	 Bytes: 8
  %loadMem_4761ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761ce = call %struct.Memory* @routine_movsd_0x6cea2__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761ce)
  store %struct.Memory* %call_4761ce, %struct.Memory** %MEMORY

  ; Code: movl $0x14, %eax	 RIP: 4761d6	 Bytes: 5
  %loadMem_4761d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761d6 = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761d6)
  store %struct.Memory* %call_4761d6, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %ecx	 RIP: 4761db	 Bytes: 3
  %loadMem_4761db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761db = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761db)
  store %struct.Memory* %call_4761db, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 4761de	 Bytes: 3
  %loadMem_4761de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761de = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761de)
  store %struct.Memory* %call_4761de, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 4761e1	 Bytes: 3
  %loadMem_4761e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761e1 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761e1)
  store %struct.Memory* %call_4761e1, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rdx,4), %ecx	 RIP: 4761e4	 Bytes: 4
  %loadMem_4761e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761e4 = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761e4)
  store %struct.Memory* %call_4761e4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4b4(%rbp)	 RIP: 4761e8	 Bytes: 6
  %loadMem_4761e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761e8 = call %struct.Memory* @routine_movl__eax__MINUS0x4b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761e8)
  store %struct.Memory* %call_4761e8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 4761ee	 Bytes: 2
  %loadMem_4761ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761ee = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761ee)
  store %struct.Memory* %call_4761ee, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4761f0	 Bytes: 1
  %loadMem_4761f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761f0 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761f0)
  store %struct.Memory* %call_4761f0, %struct.Memory** %MEMORY

  ; Code: movl -0x4b4(%rbp), %ecx	 RIP: 4761f1	 Bytes: 6
  %loadMem_4761f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761f1 = call %struct.Memory* @routine_movl_MINUS0x4b4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761f1)
  store %struct.Memory* %call_4761f1, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4761f7	 Bytes: 2
  %loadMem_4761f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761f7 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761f7)
  store %struct.Memory* %call_4761f7, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 4761f9	 Bytes: 3
  %loadMem_4761f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761f9 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761f9)
  store %struct.Memory* %call_4761f9, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 4761fc	 Bytes: 4
  %loadMem_4761fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4761fc = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4761fc)
  store %struct.Memory* %call_4761fc, %struct.Memory** %MEMORY

  ; Code: movss %xmm1, -0x448(%rbp)	 RIP: 476200	 Bytes: 8
  %loadMem_476200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476200 = call %struct.Memory* @routine_movss__xmm1__MINUS0x448__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476200)
  store %struct.Memory* %call_476200, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 476208	 Bytes: 3
  %loadMem_476208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476208 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476208)
  store %struct.Memory* %call_476208, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47620b	 Bytes: 3
  %loadMem_47620b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47620b = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47620b)
  store %struct.Memory* %call_47620b, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 47620e	 Bytes: 3
  %loadMem_47620e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47620e = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47620e)
  store %struct.Memory* %call_47620e, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rsi,4), %eax	 RIP: 476211	 Bytes: 4
  %loadMem_476211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476211 = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476211)
  store %struct.Memory* %call_476211, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 476215	 Bytes: 1
  %loadMem_476215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476215 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476215)
  store %struct.Memory* %call_476215, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 476216	 Bytes: 2
  %loadMem_476216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476216 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476216)
  store %struct.Memory* %call_476216, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 476218	 Bytes: 3
  %loadMem_476218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476218 = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476218)
  store %struct.Memory* %call_476218, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %edx, %xmm1	 RIP: 47621b	 Bytes: 4
  %loadMem_47621b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47621b = call %struct.Memory* @routine_cvtsi2ssl__edx___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47621b)
  store %struct.Memory* %call_47621b, %struct.Memory** %MEMORY

  ; Code: movss %xmm1, -0x44c(%rbp)	 RIP: 47621f	 Bytes: 8
  %loadMem_47621f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47621f = call %struct.Memory* @routine_movss__xmm1__MINUS0x44c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47621f)
  store %struct.Memory* %call_47621f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 476227	 Bytes: 4
  %loadMem_476227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476227 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476227)
  store %struct.Memory* %call_476227, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rsi,4), %edx	 RIP: 47622b	 Bytes: 4
  %loadMem_47622b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47622b = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rsi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47622b)
  store %struct.Memory* %call_47622b, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 47622f	 Bytes: 2
  %loadMem_47622f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47622f = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47622f)
  store %struct.Memory* %call_47622f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 476231	 Bytes: 1
  %loadMem_476231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476231 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476231)
  store %struct.Memory* %call_476231, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 476232	 Bytes: 2
  %loadMem_476232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476232 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476232)
  store %struct.Memory* %call_476232, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476234	 Bytes: 3
  %loadMem_476234 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476234 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476234)
  store %struct.Memory* %call_476234, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 476237	 Bytes: 4
  %loadMem_476237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476237 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476237)
  store %struct.Memory* %call_476237, %struct.Memory** %MEMORY

  ; Code: movss %xmm1, -0x450(%rbp)	 RIP: 47623b	 Bytes: 8
  %loadMem_47623b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47623b = call %struct.Memory* @routine_movss__xmm1__MINUS0x450__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47623b)
  store %struct.Memory* %call_47623b, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 476243	 Bytes: 4
  %loadMem_476243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476243 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476243)
  store %struct.Memory* %call_476243, %struct.Memory** %MEMORY

  ; Code: movl -0x80(%rbp,%rsi,4), %eax	 RIP: 476247	 Bytes: 4
  %loadMem_476247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476247 = call %struct.Memory* @routine_movl_MINUS0x80__rbp__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476247)
  store %struct.Memory* %call_476247, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47624b	 Bytes: 1
  %loadMem_47624b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47624b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47624b)
  store %struct.Memory* %call_47624b, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47624c	 Bytes: 2
  %loadMem_47624c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47624c = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47624c)
  store %struct.Memory* %call_47624c, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 47624e	 Bytes: 3
  %loadMem_47624e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47624e = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47624e)
  store %struct.Memory* %call_47624e, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %edx, %xmm1	 RIP: 476251	 Bytes: 4
  %loadMem_476251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476251 = call %struct.Memory* @routine_cvtsi2ssl__edx___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476251)
  store %struct.Memory* %call_476251, %struct.Memory** %MEMORY

  ; Code: movss %xmm1, -0x454(%rbp)	 RIP: 476255	 Bytes: 8
  %loadMem_476255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476255 = call %struct.Memory* @routine_movss__xmm1__MINUS0x454__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476255)
  store %struct.Memory* %call_476255, %struct.Memory** %MEMORY

  ; Code: cvtss2sd -0x44c(%rbp), %xmm1	 RIP: 47625d	 Bytes: 8
  %loadMem_47625d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47625d = call %struct.Memory* @routine_cvtss2sd_MINUS0x44c__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47625d)
  store %struct.Memory* %call_47625d, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm0	 RIP: 476265	 Bytes: 4
  %loadMem_476265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476265 = call %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476265)
  store %struct.Memory* %call_476265, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl -0x24(%rbp), %xmm1	 RIP: 476269	 Bytes: 5
  %loadMem_476269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476269 = call %struct.Memory* @routine_cvtsi2ssl_MINUS0x24__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476269)
  store %struct.Memory* %call_476269, %struct.Memory** %MEMORY

  ; Code: subss -0x448(%rbp), %xmm1	 RIP: 47626e	 Bytes: 8
  %loadMem_47626e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47626e = call %struct.Memory* @routine_subss_MINUS0x448__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47626e)
  store %struct.Memory* %call_47626e, %struct.Memory** %MEMORY

  ; Code: movss -0x454(%rbp), %xmm2	 RIP: 476276	 Bytes: 8
  %loadMem_476276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476276 = call %struct.Memory* @routine_movss_MINUS0x454__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476276)
  store %struct.Memory* %call_476276, %struct.Memory** %MEMORY

  ; Code: subss -0x44c(%rbp), %xmm2	 RIP: 47627e	 Bytes: 8
  %loadMem_47627e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47627e = call %struct.Memory* @routine_subss_MINUS0x44c__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47627e)
  store %struct.Memory* %call_47627e, %struct.Memory** %MEMORY

  ; Code: mulss %xmm2, %xmm1	 RIP: 476286	 Bytes: 4
  %loadMem_476286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476286 = call %struct.Memory* @routine_mulss__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476286)
  store %struct.Memory* %call_476286, %struct.Memory** %MEMORY

  ; Code: movss -0x450(%rbp), %xmm2	 RIP: 47628a	 Bytes: 8
  %loadMem_47628a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47628a = call %struct.Memory* @routine_movss_MINUS0x450__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47628a)
  store %struct.Memory* %call_47628a, %struct.Memory** %MEMORY

  ; Code: subss -0x448(%rbp), %xmm2	 RIP: 476292	 Bytes: 8
  %loadMem_476292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476292 = call %struct.Memory* @routine_subss_MINUS0x448__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476292)
  store %struct.Memory* %call_476292, %struct.Memory** %MEMORY

  ; Code: divss %xmm2, %xmm1	 RIP: 47629a	 Bytes: 4
  %loadMem_47629a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47629a = call %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47629a)
  store %struct.Memory* %call_47629a, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm1, %xmm1	 RIP: 47629e	 Bytes: 4
  %loadMem_47629e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47629e = call %struct.Memory* @routine_cvtss2sd__xmm1___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47629e)
  store %struct.Memory* %call_47629e, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm0	 RIP: 4762a2	 Bytes: 4
  %loadMem_4762a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762a2 = call %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762a2)
  store %struct.Memory* %call_4762a2, %struct.Memory** %MEMORY

  ; Code: callq .ceil_plt	 RIP: 4762a6	 Bytes: 5
  %loadMem1_4762a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4762a6 = call %struct.Memory* @routine_callq_.ceil_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4762a6, i64 -479414, i64 5, i64 5)
  store %struct.Memory* %call1_4762a6, %struct.Memory** %MEMORY

  %loadMem2_4762a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4762a6 = load i64, i64* %3
  %call2_4762a6 = call %struct.Memory* @sub_4011f0.ceil_plt(%struct.State* %0, i64  %loadPC_4762a6, %struct.Memory* %loadMem2_4762a6)
  store %struct.Memory* %call2_4762a6, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %ecx	 RIP: 4762ab	 Bytes: 4
  %loadMem_4762ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762ab = call %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762ab)
  store %struct.Memory* %call_4762ab, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x440(%rbp)	 RIP: 4762af	 Bytes: 6
  %loadMem_4762af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762af = call %struct.Memory* @routine_movl__ecx__MINUS0x440__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762af)
  store %struct.Memory* %call_4762af, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4762cd	 RIP: 4762b5	 Bytes: 5
  %loadMem_4762b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762b5 = call %struct.Memory* @routine_jmpq_.L_4762cd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762b5, i64 24, i64 5)
  store %struct.Memory* %call_4762b5, %struct.Memory** %MEMORY

  br label %block_.L_4762cd

  ; Code: .L_4762ba:	 RIP: 4762ba	 Bytes: 0
block_.L_4762ba:

  ; Code: jmpq .L_4762bf	 RIP: 4762ba	 Bytes: 5
  %loadMem_4762ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762ba = call %struct.Memory* @routine_jmpq_.L_4762bf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762ba, i64 5, i64 5)
  store %struct.Memory* %call_4762ba, %struct.Memory** %MEMORY

  br label %block_.L_4762bf

  ; Code: .L_4762bf:	 RIP: 4762bf	 Bytes: 0
block_.L_4762bf:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4762bf	 Bytes: 3
  %loadMem_4762bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762bf = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762bf)
  store %struct.Memory* %call_4762bf, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4762c2	 Bytes: 3
  %loadMem_4762c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762c2 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762c2)
  store %struct.Memory* %call_4762c2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4762c5	 Bytes: 3
  %loadMem_4762c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762c5 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762c5)
  store %struct.Memory* %call_4762c5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476195	 RIP: 4762c8	 Bytes: 5
  %loadMem_4762c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762c8 = call %struct.Memory* @routine_jmpq_.L_476195(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762c8, i64 -307, i64 5)
  store %struct.Memory* %call_4762c8, %struct.Memory** %MEMORY

  br label %block_.L_476195

  ; Code: .L_4762cd:	 RIP: 4762cd	 Bytes: 0
block_.L_4762cd:

  ; Code: movl $0x1, -0x2c(%rbp)	 RIP: 4762cd	 Bytes: 7
  %loadMem_4762cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762cd = call %struct.Memory* @routine_movl__0x1__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762cd)
  store %struct.Memory* %call_4762cd, %struct.Memory** %MEMORY

  ; Code: .L_4762d4:	 RIP: 4762d4	 Bytes: 0
  br label %block_.L_4762d4
block_.L_4762d4:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4762d4	 Bytes: 3
  %loadMem_4762d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762d4 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762d4)
  store %struct.Memory* %call_4762d4, %struct.Memory** %MEMORY

  ; Code: cmpl -0xd8(%rbp), %eax	 RIP: 4762d7	 Bytes: 6
  %loadMem_4762d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762d7 = call %struct.Memory* @routine_cmpl_MINUS0xd8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762d7)
  store %struct.Memory* %call_4762d7, %struct.Memory** %MEMORY

  ; Code: jge .L_47641b	 RIP: 4762dd	 Bytes: 6
  %loadMem_4762dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762dd = call %struct.Memory* @routine_jge_.L_47641b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762dd, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_4762dd, %struct.Memory** %MEMORY

  %loadBr_4762dd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4762dd = icmp eq i8 %loadBr_4762dd, 1
  br i1 %cmpBr_4762dd, label %block_.L_47641b, label %block_4762e3

block_4762e3:
  ; Code: movl $0x14, %eax	 RIP: 4762e3	 Bytes: 5
  %loadMem_4762e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762e3 = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762e3)
  store %struct.Memory* %call_4762e3, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4762e8	 Bytes: 4
  %loadMem_4762e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762e8 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762e8)
  store %struct.Memory* %call_4762e8, %struct.Memory** %MEMORY

  ; Code: movl -0xd0(%rbp,%rcx,4), %edx	 RIP: 4762ec	 Bytes: 7
  %loadMem_4762ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762ec = call %struct.Memory* @routine_movl_MINUS0xd0__rbp__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762ec)
  store %struct.Memory* %call_4762ec, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4b8(%rbp)	 RIP: 4762f3	 Bytes: 6
  %loadMem_4762f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762f3 = call %struct.Memory* @routine_movl__eax__MINUS0x4b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762f3)
  store %struct.Memory* %call_4762f3, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4762f9	 Bytes: 2
  %loadMem_4762f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762f9 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762f9)
  store %struct.Memory* %call_4762f9, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4762fb	 Bytes: 1
  %loadMem_4762fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762fb = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762fb)
  store %struct.Memory* %call_4762fb, %struct.Memory** %MEMORY

  ; Code: movl -0x4b8(%rbp), %esi	 RIP: 4762fc	 Bytes: 6
  %loadMem_4762fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4762fc = call %struct.Memory* @routine_movl_MINUS0x4b8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4762fc)
  store %struct.Memory* %call_4762fc, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 476302	 Bytes: 2
  %loadMem_476302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476302 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476302)
  store %struct.Memory* %call_476302, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476304	 Bytes: 3
  %loadMem_476304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476304 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476304)
  store %struct.Memory* %call_476304, %struct.Memory** %MEMORY

  ; Code: cmpl -0x24(%rbp), %eax	 RIP: 476307	 Bytes: 3
  %loadMem_476307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476307 = call %struct.Memory* @routine_cmpl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476307)
  store %struct.Memory* %call_476307, %struct.Memory** %MEMORY

  ; Code: jle .L_476408	 RIP: 47630a	 Bytes: 6
  %loadMem_47630a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47630a = call %struct.Memory* @routine_jle_.L_476408(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47630a, i8* %BRANCH_TAKEN, i64 254, i64 6, i64 6)
  store %struct.Memory* %call_47630a, %struct.Memory** %MEMORY

  %loadBr_47630a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47630a = icmp eq i8 %loadBr_47630a, 1
  br i1 %cmpBr_47630a, label %block_.L_476408, label %block_476310

block_476310:
  ; Code: movsd 0x6cd68(%rip), %xmm0	 RIP: 476310	 Bytes: 8
  %loadMem_476310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476310 = call %struct.Memory* @routine_movsd_0x6cd68__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476310)
  store %struct.Memory* %call_476310, %struct.Memory** %MEMORY

  ; Code: movl $0x14, %eax	 RIP: 476318	 Bytes: 5
  %loadMem_476318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476318 = call %struct.Memory* @routine_movl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476318)
  store %struct.Memory* %call_476318, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %ecx	 RIP: 47631d	 Bytes: 3
  %loadMem_47631d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47631d = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47631d)
  store %struct.Memory* %call_47631d, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 476320	 Bytes: 3
  %loadMem_476320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476320 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476320)
  store %struct.Memory* %call_476320, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 476323	 Bytes: 3
  %loadMem_476323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476323 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476323)
  store %struct.Memory* %call_476323, %struct.Memory** %MEMORY

  ; Code: movl -0xd0(%rbp,%rdx,4), %ecx	 RIP: 476326	 Bytes: 7
  %loadMem_476326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476326 = call %struct.Memory* @routine_movl_MINUS0xd0__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476326)
  store %struct.Memory* %call_476326, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4bc(%rbp)	 RIP: 47632d	 Bytes: 6
  %loadMem_47632d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47632d = call %struct.Memory* @routine_movl__eax__MINUS0x4bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47632d)
  store %struct.Memory* %call_47632d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 476333	 Bytes: 2
  %loadMem_476333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476333 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476333)
  store %struct.Memory* %call_476333, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 476335	 Bytes: 1
  %loadMem_476335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476335 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476335)
  store %struct.Memory* %call_476335, %struct.Memory** %MEMORY

  ; Code: movl -0x4bc(%rbp), %ecx	 RIP: 476336	 Bytes: 6
  %loadMem_476336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476336 = call %struct.Memory* @routine_movl_MINUS0x4bc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476336)
  store %struct.Memory* %call_476336, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47633c	 Bytes: 2
  %loadMem_47633c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47633c = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47633c)
  store %struct.Memory* %call_47633c, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47633e	 Bytes: 3
  %loadMem_47633e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47633e = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47633e)
  store %struct.Memory* %call_47633e, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 476341	 Bytes: 4
  %loadMem_476341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476341 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476341)
  store %struct.Memory* %call_476341, %struct.Memory** %MEMORY

  ; Code: movss %xmm1, -0x458(%rbp)	 RIP: 476345	 Bytes: 8
  %loadMem_476345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476345 = call %struct.Memory* @routine_movss__xmm1__MINUS0x458__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476345)
  store %struct.Memory* %call_476345, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 47634d	 Bytes: 3
  %loadMem_47634d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47634d = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47634d)
  store %struct.Memory* %call_47634d, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476350	 Bytes: 3
  %loadMem_476350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476350 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476350)
  store %struct.Memory* %call_476350, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 476353	 Bytes: 3
  %loadMem_476353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476353 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476353)
  store %struct.Memory* %call_476353, %struct.Memory** %MEMORY

  ; Code: movl -0xd0(%rbp,%rsi,4), %eax	 RIP: 476356	 Bytes: 7
  %loadMem_476356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476356 = call %struct.Memory* @routine_movl_MINUS0xd0__rbp__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476356)
  store %struct.Memory* %call_476356, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47635d	 Bytes: 1
  %loadMem_47635d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47635d = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47635d)
  store %struct.Memory* %call_47635d, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47635e	 Bytes: 2
  %loadMem_47635e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47635e = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47635e)
  store %struct.Memory* %call_47635e, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 476360	 Bytes: 3
  %loadMem_476360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476360 = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476360)
  store %struct.Memory* %call_476360, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %edx, %xmm1	 RIP: 476363	 Bytes: 4
  %loadMem_476363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476363 = call %struct.Memory* @routine_cvtsi2ssl__edx___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476363)
  store %struct.Memory* %call_476363, %struct.Memory** %MEMORY

  ; Code: movss %xmm1, -0x45c(%rbp)	 RIP: 476367	 Bytes: 8
  %loadMem_476367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476367 = call %struct.Memory* @routine_movss__xmm1__MINUS0x45c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476367)
  store %struct.Memory* %call_476367, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 47636f	 Bytes: 4
  %loadMem_47636f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47636f = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47636f)
  store %struct.Memory* %call_47636f, %struct.Memory** %MEMORY

  ; Code: movl -0xd0(%rbp,%rsi,4), %edx	 RIP: 476373	 Bytes: 7
  %loadMem_476373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476373 = call %struct.Memory* @routine_movl_MINUS0xd0__rbp__rsi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476373)
  store %struct.Memory* %call_476373, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 47637a	 Bytes: 2
  %loadMem_47637a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47637a = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47637a)
  store %struct.Memory* %call_47637a, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 47637c	 Bytes: 1
  %loadMem_47637c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47637c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47637c)
  store %struct.Memory* %call_47637c, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47637d	 Bytes: 2
  %loadMem_47637d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47637d = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47637d)
  store %struct.Memory* %call_47637d, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47637f	 Bytes: 3
  %loadMem_47637f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47637f = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47637f)
  store %struct.Memory* %call_47637f, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 476382	 Bytes: 4
  %loadMem_476382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476382 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476382)
  store %struct.Memory* %call_476382, %struct.Memory** %MEMORY

  ; Code: movss %xmm1, -0x460(%rbp)	 RIP: 476386	 Bytes: 8
  %loadMem_476386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476386 = call %struct.Memory* @routine_movss__xmm1__MINUS0x460__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476386)
  store %struct.Memory* %call_476386, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 47638e	 Bytes: 4
  %loadMem_47638e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47638e = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47638e)
  store %struct.Memory* %call_47638e, %struct.Memory** %MEMORY

  ; Code: movl -0xd0(%rbp,%rsi,4), %eax	 RIP: 476392	 Bytes: 7
  %loadMem_476392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476392 = call %struct.Memory* @routine_movl_MINUS0xd0__rbp__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476392)
  store %struct.Memory* %call_476392, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 476399	 Bytes: 1
  %loadMem_476399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476399 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476399)
  store %struct.Memory* %call_476399, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 47639a	 Bytes: 2
  %loadMem_47639a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47639a = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47639a)
  store %struct.Memory* %call_47639a, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 47639c	 Bytes: 3
  %loadMem_47639c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47639c = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47639c)
  store %struct.Memory* %call_47639c, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %edx, %xmm1	 RIP: 47639f	 Bytes: 4
  %loadMem_47639f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47639f = call %struct.Memory* @routine_cvtsi2ssl__edx___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47639f)
  store %struct.Memory* %call_47639f, %struct.Memory** %MEMORY

  ; Code: movss %xmm1, -0x464(%rbp)	 RIP: 4763a3	 Bytes: 8
  %loadMem_4763a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763a3 = call %struct.Memory* @routine_movss__xmm1__MINUS0x464__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763a3)
  store %struct.Memory* %call_4763a3, %struct.Memory** %MEMORY

  ; Code: cvtss2sd -0x45c(%rbp), %xmm1	 RIP: 4763ab	 Bytes: 8
  %loadMem_4763ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763ab = call %struct.Memory* @routine_cvtss2sd_MINUS0x45c__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763ab)
  store %struct.Memory* %call_4763ab, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm0	 RIP: 4763b3	 Bytes: 4
  %loadMem_4763b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763b3 = call %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763b3)
  store %struct.Memory* %call_4763b3, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl -0x24(%rbp), %xmm1	 RIP: 4763b7	 Bytes: 5
  %loadMem_4763b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763b7 = call %struct.Memory* @routine_cvtsi2ssl_MINUS0x24__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763b7)
  store %struct.Memory* %call_4763b7, %struct.Memory** %MEMORY

  ; Code: subss -0x458(%rbp), %xmm1	 RIP: 4763bc	 Bytes: 8
  %loadMem_4763bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763bc = call %struct.Memory* @routine_subss_MINUS0x458__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763bc)
  store %struct.Memory* %call_4763bc, %struct.Memory** %MEMORY

  ; Code: movss -0x464(%rbp), %xmm2	 RIP: 4763c4	 Bytes: 8
  %loadMem_4763c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763c4 = call %struct.Memory* @routine_movss_MINUS0x464__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763c4)
  store %struct.Memory* %call_4763c4, %struct.Memory** %MEMORY

  ; Code: subss -0x45c(%rbp), %xmm2	 RIP: 4763cc	 Bytes: 8
  %loadMem_4763cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763cc = call %struct.Memory* @routine_subss_MINUS0x45c__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763cc)
  store %struct.Memory* %call_4763cc, %struct.Memory** %MEMORY

  ; Code: mulss %xmm2, %xmm1	 RIP: 4763d4	 Bytes: 4
  %loadMem_4763d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763d4 = call %struct.Memory* @routine_mulss__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763d4)
  store %struct.Memory* %call_4763d4, %struct.Memory** %MEMORY

  ; Code: movss -0x460(%rbp), %xmm2	 RIP: 4763d8	 Bytes: 8
  %loadMem_4763d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763d8 = call %struct.Memory* @routine_movss_MINUS0x460__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763d8)
  store %struct.Memory* %call_4763d8, %struct.Memory** %MEMORY

  ; Code: subss -0x458(%rbp), %xmm2	 RIP: 4763e0	 Bytes: 8
  %loadMem_4763e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763e0 = call %struct.Memory* @routine_subss_MINUS0x458__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763e0)
  store %struct.Memory* %call_4763e0, %struct.Memory** %MEMORY

  ; Code: divss %xmm2, %xmm1	 RIP: 4763e8	 Bytes: 4
  %loadMem_4763e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763e8 = call %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763e8)
  store %struct.Memory* %call_4763e8, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm1, %xmm1	 RIP: 4763ec	 Bytes: 4
  %loadMem_4763ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763ec = call %struct.Memory* @routine_cvtss2sd__xmm1___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763ec)
  store %struct.Memory* %call_4763ec, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm0	 RIP: 4763f0	 Bytes: 4
  %loadMem_4763f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763f0 = call %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763f0)
  store %struct.Memory* %call_4763f0, %struct.Memory** %MEMORY

  ; Code: callq .floor_plt	 RIP: 4763f4	 Bytes: 5
  %loadMem1_4763f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4763f4 = call %struct.Memory* @routine_callq_.floor_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4763f4, i64 -479828, i64 5, i64 5)
  store %struct.Memory* %call1_4763f4, %struct.Memory** %MEMORY

  %loadMem2_4763f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4763f4 = load i64, i64* %3
  %call2_4763f4 = call %struct.Memory* @ext_floor(%struct.State* %0, i64  %loadPC_4763f4, %struct.Memory* %loadMem2_4763f4)
  store %struct.Memory* %call2_4763f4, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %ecx	 RIP: 4763f9	 Bytes: 4
  %loadMem_4763f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763f9 = call %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763f9)
  store %struct.Memory* %call_4763f9, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x444(%rbp)	 RIP: 4763fd	 Bytes: 6
  %loadMem_4763fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4763fd = call %struct.Memory* @routine_movl__ecx__MINUS0x444__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4763fd)
  store %struct.Memory* %call_4763fd, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47641b	 RIP: 476403	 Bytes: 5
  %loadMem_476403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476403 = call %struct.Memory* @routine_jmpq_.L_47641b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476403, i64 24, i64 5)
  store %struct.Memory* %call_476403, %struct.Memory** %MEMORY

  br label %block_.L_47641b

  ; Code: .L_476408:	 RIP: 476408	 Bytes: 0
block_.L_476408:

  ; Code: jmpq .L_47640d	 RIP: 476408	 Bytes: 5
  %loadMem_476408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476408 = call %struct.Memory* @routine_jmpq_.L_47640d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476408, i64 5, i64 5)
  store %struct.Memory* %call_476408, %struct.Memory** %MEMORY

  br label %block_.L_47640d

  ; Code: .L_47640d:	 RIP: 47640d	 Bytes: 0
block_.L_47640d:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 47640d	 Bytes: 3
  %loadMem_47640d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47640d = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47640d)
  store %struct.Memory* %call_47640d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476410	 Bytes: 3
  %loadMem_476410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476410 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476410)
  store %struct.Memory* %call_476410, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 476413	 Bytes: 3
  %loadMem_476413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476413 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476413)
  store %struct.Memory* %call_476413, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4762d4	 RIP: 476416	 Bytes: 5
  %loadMem_476416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476416 = call %struct.Memory* @routine_jmpq_.L_4762d4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476416, i64 -322, i64 5)
  store %struct.Memory* %call_476416, %struct.Memory** %MEMORY

  br label %block_.L_4762d4

  ; Code: .L_47641b:	 RIP: 47641b	 Bytes: 0
block_.L_47641b:

  ; Code: movl -0x440(%rbp), %eax	 RIP: 47641b	 Bytes: 6
  %loadMem_47641b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47641b = call %struct.Memory* @routine_movl_MINUS0x440__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47641b)
  store %struct.Memory* %call_47641b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 476421	 Bytes: 3
  %loadMem_476421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476421 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476421)
  store %struct.Memory* %call_476421, %struct.Memory** %MEMORY

  ; Code: .L_476424:	 RIP: 476424	 Bytes: 0
  br label %block_.L_476424
block_.L_476424:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 476424	 Bytes: 3
  %loadMem_476424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476424 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476424)
  store %struct.Memory* %call_476424, %struct.Memory** %MEMORY

  ; Code: cmpl -0x444(%rbp), %eax	 RIP: 476427	 Bytes: 6
  %loadMem_476427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476427 = call %struct.Memory* @routine_cmpl_MINUS0x444__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476427)
  store %struct.Memory* %call_476427, %struct.Memory** %MEMORY

  ; Code: jg .L_476456	 RIP: 47642d	 Bytes: 6
  %loadMem_47642d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47642d = call %struct.Memory* @routine_jg_.L_476456(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47642d, i8* %BRANCH_TAKEN, i64 41, i64 6, i64 6)
  store %struct.Memory* %call_47642d, %struct.Memory** %MEMORY

  %loadBr_47642d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47642d = icmp eq i8 %loadBr_47642d, 1
  br i1 %cmpBr_47642d, label %block_.L_476456, label %block_476433

block_476433:
  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 476433	 Bytes: 4
  %loadMem_476433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476433 = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476433)
  store %struct.Memory* %call_476433, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 476437	 Bytes: 3
  %loadMem_476437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476437 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476437)
  store %struct.Memory* %call_476437, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 47643a	 Bytes: 3
  %loadMem_47643a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47643a = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47643a)
  store %struct.Memory* %call_47643a, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 47643d	 Bytes: 3
  %loadMem_47643d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47643d = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47643d)
  store %struct.Memory* %call_47643d, %struct.Memory** %MEMORY

  ; Code: movb $0x1, -0x410(%rbp,%rcx,1)	 RIP: 476440	 Bytes: 8
  %loadMem_476440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476440 = call %struct.Memory* @routine_movb__0x1__MINUS0x410__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476440)
  store %struct.Memory* %call_476440, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %eax	 RIP: 476448	 Bytes: 3
  %loadMem_476448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476448 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476448)
  store %struct.Memory* %call_476448, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47644b	 Bytes: 3
  %loadMem_47644b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47644b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47644b)
  store %struct.Memory* %call_47644b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 47644e	 Bytes: 3
  %loadMem_47644e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47644e = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47644e)
  store %struct.Memory* %call_47644e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476424	 RIP: 476451	 Bytes: 5
  %loadMem_476451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476451 = call %struct.Memory* @routine_jmpq_.L_476424(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476451, i64 -45, i64 5)
  store %struct.Memory* %call_476451, %struct.Memory** %MEMORY

  br label %block_.L_476424

  ; Code: .L_476456:	 RIP: 476456	 Bytes: 0
block_.L_476456:

  ; Code: jmpq .L_47645b	 RIP: 476456	 Bytes: 5
  %loadMem_476456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476456 = call %struct.Memory* @routine_jmpq_.L_47645b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476456, i64 5, i64 5)
  store %struct.Memory* %call_476456, %struct.Memory** %MEMORY

  br label %block_.L_47645b

  ; Code: .L_47645b:	 RIP: 47645b	 Bytes: 0
block_.L_47645b:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 47645b	 Bytes: 3
  %loadMem_47645b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47645b = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47645b)
  store %struct.Memory* %call_47645b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47645e	 Bytes: 3
  %loadMem_47645e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47645e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47645e)
  store %struct.Memory* %call_47645e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 476461	 Bytes: 3
  %loadMem_476461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476461 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476461)
  store %struct.Memory* %call_476461, %struct.Memory** %MEMORY

  ; Code: jmpq .L_47616b	 RIP: 476464	 Bytes: 5
  %loadMem_476464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476464 = call %struct.Memory* @routine_jmpq_.L_47616b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476464, i64 -761, i64 5)
  store %struct.Memory* %call_476464, %struct.Memory** %MEMORY

  br label %block_.L_47616b

  ; Code: .L_476469:	 RIP: 476469	 Bytes: 0
block_.L_476469:

  ; Code: movl $0x15, -0x30(%rbp)	 RIP: 476469	 Bytes: 7
  %loadMem_476469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476469 = call %struct.Memory* @routine_movl__0x15__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476469)
  store %struct.Memory* %call_476469, %struct.Memory** %MEMORY

  ; Code: .L_476470:	 RIP: 476470	 Bytes: 0
  br label %block_.L_476470
block_.L_476470:

  ; Code: cmpl $0x190, -0x30(%rbp)	 RIP: 476470	 Bytes: 7
  %loadMem_476470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476470 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476470)
  store %struct.Memory* %call_476470, %struct.Memory** %MEMORY

  ; Code: jge .L_47653d	 RIP: 476477	 Bytes: 6
  %loadMem_476477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476477 = call %struct.Memory* @routine_jge_.L_47653d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476477, i8* %BRANCH_TAKEN, i64 198, i64 6, i64 6)
  store %struct.Memory* %call_476477, %struct.Memory** %MEMORY

  %loadBr_476477 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476477 = icmp eq i8 %loadBr_476477, 1
  br i1 %cmpBr_476477, label %block_.L_47653d, label %block_47647d

block_47647d:
  ; Code: movslq -0x30(%rbp), %rax	 RIP: 47647d	 Bytes: 4
  %loadMem_47647d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47647d = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47647d)
  store %struct.Memory* %call_47647d, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 476481	 Bytes: 8
  %loadMem_476481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476481 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476481)
  store %struct.Memory* %call_476481, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 476489	 Bytes: 3
  %loadMem_476489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476489 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476489)
  store %struct.Memory* %call_476489, %struct.Memory** %MEMORY

  ; Code: je .L_47652a	 RIP: 47648c	 Bytes: 6
  %loadMem_47648c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47648c = call %struct.Memory* @routine_je_.L_47652a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47648c, i8* %BRANCH_TAKEN, i64 158, i64 6, i64 6)
  store %struct.Memory* %call_47648c, %struct.Memory** %MEMORY

  %loadBr_47648c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47648c = icmp eq i8 %loadBr_47648c, 1
  br i1 %cmpBr_47648c, label %block_.L_47652a, label %block_476492

block_476492:
  ; Code: movslq -0x30(%rbp), %rax	 RIP: 476492	 Bytes: 4
  %loadMem_476492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476492 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476492)
  store %struct.Memory* %call_476492, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rax,1), %ecx	 RIP: 476496	 Bytes: 8
  %loadMem_476496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476496 = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476496)
  store %struct.Memory* %call_476496, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %ecx	 RIP: 47649e	 Bytes: 3
  %loadMem_47649e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47649e = call %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47649e)
  store %struct.Memory* %call_47649e, %struct.Memory** %MEMORY

  ; Code: jne .L_47652a	 RIP: 4764a1	 Bytes: 6
  %loadMem_4764a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764a1 = call %struct.Memory* @routine_jne_.L_47652a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764a1, i8* %BRANCH_TAKEN, i64 137, i64 6, i64 6)
  store %struct.Memory* %call_4764a1, %struct.Memory** %MEMORY

  %loadBr_4764a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4764a1 = icmp eq i8 %loadBr_4764a1, 1
  br i1 %cmpBr_4764a1, label %block_.L_47652a, label %block_4764a7

block_4764a7:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4764a7	 Bytes: 7
  %loadMem_4764a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764a7 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764a7)
  store %struct.Memory* %call_4764a7, %struct.Memory** %MEMORY

  ; Code: .L_4764ae:	 RIP: 4764ae	 Bytes: 0
  br label %block_.L_4764ae
block_.L_4764ae:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 4764ae	 Bytes: 4
  %loadMem_4764ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764ae = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764ae)
  store %struct.Memory* %call_4764ae, %struct.Memory** %MEMORY

  ; Code: jge .L_476525	 RIP: 4764b2	 Bytes: 6
  %loadMem_4764b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764b2 = call %struct.Memory* @routine_jge_.L_476525(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764b2, i8* %BRANCH_TAKEN, i64 115, i64 6, i64 6)
  store %struct.Memory* %call_4764b2, %struct.Memory** %MEMORY

  %loadBr_4764b2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4764b2 = icmp eq i8 %loadBr_4764b2, 1
  br i1 %cmpBr_4764b2, label %block_.L_476525, label %block_4764b8

block_4764b8:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4764b8	 Bytes: 3
  %loadMem_4764b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764b8 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764b8)
  store %struct.Memory* %call_4764b8, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4764bb	 Bytes: 4
  %loadMem_4764bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764bb = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764bb)
  store %struct.Memory* %call_4764bb, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 4764bf	 Bytes: 7
  %loadMem_4764bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764bf = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764bf)
  store %struct.Memory* %call_4764bf, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4764c6	 Bytes: 3
  %loadMem_4764c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764c6 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764c6)
  store %struct.Memory* %call_4764c6, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4764c9	 Bytes: 8
  %loadMem_4764c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764c9 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764c9)
  store %struct.Memory* %call_4764c9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 4764d1	 Bytes: 3
  %loadMem_4764d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764d1 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764d1)
  store %struct.Memory* %call_4764d1, %struct.Memory** %MEMORY

  ; Code: je .L_476512	 RIP: 4764d4	 Bytes: 6
  %loadMem_4764d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764d4 = call %struct.Memory* @routine_je_.L_476512(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764d4, i8* %BRANCH_TAKEN, i64 62, i64 6, i64 6)
  store %struct.Memory* %call_4764d4, %struct.Memory** %MEMORY

  %loadBr_4764d4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4764d4 = icmp eq i8 %loadBr_4764d4, 1
  br i1 %cmpBr_4764d4, label %block_.L_476512, label %block_4764da

block_4764da:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4764da	 Bytes: 3
  %loadMem_4764da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764da = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764da)
  store %struct.Memory* %call_4764da, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4764dd	 Bytes: 4
  %loadMem_4764dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764dd = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764dd)
  store %struct.Memory* %call_4764dd, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 4764e1	 Bytes: 7
  %loadMem_4764e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764e1 = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764e1)
  store %struct.Memory* %call_4764e1, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4764e8	 Bytes: 3
  %loadMem_4764e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764e8 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764e8)
  store %struct.Memory* %call_4764e8, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, -0x410(%rbp,%rcx,1)	 RIP: 4764eb	 Bytes: 8
  %loadMem_4764eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764eb = call %struct.Memory* @routine_cmpb__0x0__MINUS0x410__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764eb)
  store %struct.Memory* %call_4764eb, %struct.Memory** %MEMORY

  ; Code: jne .L_476512	 RIP: 4764f3	 Bytes: 6
  %loadMem_4764f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764f3 = call %struct.Memory* @routine_jne_.L_476512(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764f3, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_4764f3, %struct.Memory** %MEMORY

  %loadBr_4764f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4764f3 = icmp eq i8 %loadBr_4764f3, 1
  br i1 %cmpBr_4764f3, label %block_.L_476512, label %block_4764f9

block_4764f9:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4764f9	 Bytes: 3
  %loadMem_4764f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764f9 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764f9)
  store %struct.Memory* %call_4764f9, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4764fc	 Bytes: 4
  %loadMem_4764fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4764fc = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4764fc)
  store %struct.Memory* %call_4764fc, %struct.Memory** %MEMORY

  ; Code: addl 0x7ae1b0(,%rcx,4), %eax	 RIP: 476500	 Bytes: 7
  %loadMem_476500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476500 = call %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476500)
  store %struct.Memory* %call_476500, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476507	 Bytes: 3
  %loadMem_476507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476507 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476507)
  store %struct.Memory* %call_476507, %struct.Memory** %MEMORY

  ; Code: movb $0x2, -0x410(%rbp,%rcx,1)	 RIP: 47650a	 Bytes: 8
  %loadMem_47650a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47650a = call %struct.Memory* @routine_movb__0x2__MINUS0x410__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47650a)
  store %struct.Memory* %call_47650a, %struct.Memory** %MEMORY

  ; Code: .L_476512:	 RIP: 476512	 Bytes: 0
  br label %block_.L_476512
block_.L_476512:

  ; Code: jmpq .L_476517	 RIP: 476512	 Bytes: 5
  %loadMem_476512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476512 = call %struct.Memory* @routine_jmpq_.L_476517(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476512, i64 5, i64 5)
  store %struct.Memory* %call_476512, %struct.Memory** %MEMORY

  br label %block_.L_476517

  ; Code: .L_476517:	 RIP: 476517	 Bytes: 0
block_.L_476517:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 476517	 Bytes: 3
  %loadMem_476517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476517 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476517)
  store %struct.Memory* %call_476517, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47651a	 Bytes: 3
  %loadMem_47651a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47651a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47651a)
  store %struct.Memory* %call_47651a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 47651d	 Bytes: 3
  %loadMem_47651d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47651d = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47651d)
  store %struct.Memory* %call_47651d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4764ae	 RIP: 476520	 Bytes: 5
  %loadMem_476520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476520 = call %struct.Memory* @routine_jmpq_.L_4764ae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476520, i64 -114, i64 5)
  store %struct.Memory* %call_476520, %struct.Memory** %MEMORY

  br label %block_.L_4764ae

  ; Code: .L_476525:	 RIP: 476525	 Bytes: 0
block_.L_476525:

  ; Code: jmpq .L_47652a	 RIP: 476525	 Bytes: 5
  %loadMem_476525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476525 = call %struct.Memory* @routine_jmpq_.L_47652a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476525, i64 5, i64 5)
  store %struct.Memory* %call_476525, %struct.Memory** %MEMORY

  br label %block_.L_47652a

  ; Code: .L_47652a:	 RIP: 47652a	 Bytes: 0
block_.L_47652a:

  ; Code: jmpq .L_47652f	 RIP: 47652a	 Bytes: 5
  %loadMem_47652a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47652a = call %struct.Memory* @routine_jmpq_.L_47652f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47652a, i64 5, i64 5)
  store %struct.Memory* %call_47652a, %struct.Memory** %MEMORY

  br label %block_.L_47652f

  ; Code: .L_47652f:	 RIP: 47652f	 Bytes: 0
block_.L_47652f:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 47652f	 Bytes: 3
  %loadMem_47652f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47652f = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47652f)
  store %struct.Memory* %call_47652f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476532	 Bytes: 3
  %loadMem_476532 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476532 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476532)
  store %struct.Memory* %call_476532, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 476535	 Bytes: 3
  %loadMem_476535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476535 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476535)
  store %struct.Memory* %call_476535, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476470	 RIP: 476538	 Bytes: 5
  %loadMem_476538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476538 = call %struct.Memory* @routine_jmpq_.L_476470(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476538, i64 -200, i64 5)
  store %struct.Memory* %call_476538, %struct.Memory** %MEMORY

  br label %block_.L_476470

  ; Code: .L_47653d:	 RIP: 47653d	 Bytes: 0
block_.L_47653d:

  ; Code: movl $0x15, -0x30(%rbp)	 RIP: 47653d	 Bytes: 7
  %loadMem_47653d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47653d = call %struct.Memory* @routine_movl__0x15__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47653d)
  store %struct.Memory* %call_47653d, %struct.Memory** %MEMORY

  ; Code: .L_476544:	 RIP: 476544	 Bytes: 0
  br label %block_.L_476544
block_.L_476544:

  ; Code: cmpl $0x190, -0x30(%rbp)	 RIP: 476544	 Bytes: 7
  %loadMem_476544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476544 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476544)
  store %struct.Memory* %call_476544, %struct.Memory** %MEMORY

  ; Code: jge .L_476642	 RIP: 47654b	 Bytes: 6
  %loadMem_47654b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47654b = call %struct.Memory* @routine_jge_.L_476642(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47654b, i8* %BRANCH_TAKEN, i64 247, i64 6, i64 6)
  store %struct.Memory* %call_47654b, %struct.Memory** %MEMORY

  %loadBr_47654b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47654b = icmp eq i8 %loadBr_47654b, 1
  br i1 %cmpBr_47654b, label %block_.L_476642, label %block_476551

block_476551:
  ; Code: movslq -0x30(%rbp), %rax	 RIP: 476551	 Bytes: 4
  %loadMem_476551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476551 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476551)
  store %struct.Memory* %call_476551, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 476555	 Bytes: 8
  %loadMem_476555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476555 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476555)
  store %struct.Memory* %call_476555, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 47655d	 Bytes: 3
  %loadMem_47655d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47655d = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47655d)
  store %struct.Memory* %call_47655d, %struct.Memory** %MEMORY

  ; Code: je .L_47662f	 RIP: 476560	 Bytes: 6
  %loadMem_476560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476560 = call %struct.Memory* @routine_je_.L_47662f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476560, i8* %BRANCH_TAKEN, i64 207, i64 6, i64 6)
  store %struct.Memory* %call_476560, %struct.Memory** %MEMORY

  %loadBr_476560 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476560 = icmp eq i8 %loadBr_476560, 1
  br i1 %cmpBr_476560, label %block_.L_47662f, label %block_476566

block_476566:
  ; Code: movslq -0x30(%rbp), %rax	 RIP: 476566	 Bytes: 4
  %loadMem_476566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476566 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476566)
  store %struct.Memory* %call_476566, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rax,1), %ecx	 RIP: 47656a	 Bytes: 8
  %loadMem_47656a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47656a = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47656a)
  store %struct.Memory* %call_47656a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %ecx	 RIP: 476572	 Bytes: 3
  %loadMem_476572 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476572 = call %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476572)
  store %struct.Memory* %call_476572, %struct.Memory** %MEMORY

  ; Code: jne .L_47662f	 RIP: 476575	 Bytes: 6
  %loadMem_476575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476575 = call %struct.Memory* @routine_jne_.L_47662f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476575, i8* %BRANCH_TAKEN, i64 186, i64 6, i64 6)
  store %struct.Memory* %call_476575, %struct.Memory** %MEMORY

  %loadBr_476575 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476575 = icmp eq i8 %loadBr_476575, 1
  br i1 %cmpBr_476575, label %block_.L_47662f, label %block_47657b

block_47657b:
  ; Code: movslq -0x30(%rbp), %rax	 RIP: 47657b	 Bytes: 4
  %loadMem_47657b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47657b = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47657b)
  store %struct.Memory* %call_47657b, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 47657f	 Bytes: 8
  %loadMem_47657f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47657f = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47657f)
  store %struct.Memory* %call_47657f, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe4(%rbp), %ecx	 RIP: 476587	 Bytes: 6
  %loadMem_476587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476587 = call %struct.Memory* @routine_cmpl_MINUS0xe4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476587)
  store %struct.Memory* %call_476587, %struct.Memory** %MEMORY

  ; Code: jne .L_47662f	 RIP: 47658d	 Bytes: 6
  %loadMem_47658d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47658d = call %struct.Memory* @routine_jne_.L_47662f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47658d, i8* %BRANCH_TAKEN, i64 162, i64 6, i64 6)
  store %struct.Memory* %call_47658d, %struct.Memory** %MEMORY

  %loadBr_47658d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47658d = icmp eq i8 %loadBr_47658d, 1
  br i1 %cmpBr_47658d, label %block_.L_47662f, label %block_476593

block_476593:
  ; Code: movl -0x8(%rbp), %edi	 RIP: 476593	 Bytes: 3
  %loadMem_476593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476593 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476593)
  store %struct.Memory* %call_476593, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %esi	 RIP: 476596	 Bytes: 3
  %loadMem_476596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476596 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476596)
  store %struct.Memory* %call_476596, %struct.Memory** %MEMORY

  ; Code: callq .are_neighbor_dragons	 RIP: 476599	 Bytes: 5
  %loadMem1_476599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_476599 = call %struct.Memory* @routine_callq_.are_neighbor_dragons(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_476599, i64 -341113, i64 5, i64 5)
  store %struct.Memory* %call1_476599, %struct.Memory** %MEMORY

  %loadMem2_476599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_476599 = load i64, i64* %3
  %call2_476599 = call %struct.Memory* @sub_423120.are_neighbor_dragons(%struct.State* %0, i64  %loadPC_476599, %struct.Memory* %loadMem2_476599)
  store %struct.Memory* %call2_476599, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 47659e	 Bytes: 3
  %loadMem_47659e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47659e = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47659e)
  store %struct.Memory* %call_47659e, %struct.Memory** %MEMORY

  ; Code: je .L_47662f	 RIP: 4765a1	 Bytes: 6
  %loadMem_4765a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765a1 = call %struct.Memory* @routine_je_.L_47662f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765a1, i8* %BRANCH_TAKEN, i64 142, i64 6, i64 6)
  store %struct.Memory* %call_4765a1, %struct.Memory** %MEMORY

  %loadBr_4765a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4765a1 = icmp eq i8 %loadBr_4765a1, 1
  br i1 %cmpBr_4765a1, label %block_.L_47662f, label %block_4765a7

block_4765a7:
  ; Code: movslq -0x30(%rbp), %rax	 RIP: 4765a7	 Bytes: 4
  %loadMem_4765a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765a7 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765a7)
  store %struct.Memory* %call_4765a7, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, -0x280(%rbp,%rax,1)	 RIP: 4765ab	 Bytes: 8
  %loadMem_4765ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765ab = call %struct.Memory* @routine_cmpb__0x0__MINUS0x280__rbp__rax_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765ab)
  store %struct.Memory* %call_4765ab, %struct.Memory** %MEMORY

  ; Code: jne .L_47662f	 RIP: 4765b3	 Bytes: 6
  %loadMem_4765b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765b3 = call %struct.Memory* @routine_jne_.L_47662f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765b3, i8* %BRANCH_TAKEN, i64 124, i64 6, i64 6)
  store %struct.Memory* %call_4765b3, %struct.Memory** %MEMORY

  %loadBr_4765b3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4765b3 = icmp eq i8 %loadBr_4765b3, 1
  br i1 %cmpBr_4765b3, label %block_.L_47662f, label %block_4765b9

block_4765b9:
  ; Code: movl $0x15, -0x468(%rbp)	 RIP: 4765b9	 Bytes: 10
  %loadMem_4765b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765b9 = call %struct.Memory* @routine_movl__0x15__MINUS0x468__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765b9)
  store %struct.Memory* %call_4765b9, %struct.Memory** %MEMORY

  ; Code: .L_4765c3:	 RIP: 4765c3	 Bytes: 0
  br label %block_.L_4765c3
block_.L_4765c3:

  ; Code: cmpl $0x190, -0x468(%rbp)	 RIP: 4765c3	 Bytes: 10
  %loadMem_4765c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765c3 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x468__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765c3)
  store %struct.Memory* %call_4765c3, %struct.Memory** %MEMORY

  ; Code: jge .L_47662a	 RIP: 4765cd	 Bytes: 6
  %loadMem_4765cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765cd = call %struct.Memory* @routine_jge_.L_47662a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765cd, i8* %BRANCH_TAKEN, i64 93, i64 6, i64 6)
  store %struct.Memory* %call_4765cd, %struct.Memory** %MEMORY

  %loadBr_4765cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4765cd = icmp eq i8 %loadBr_4765cd, 1
  br i1 %cmpBr_4765cd, label %block_.L_47662a, label %block_4765d3

block_4765d3:
  ; Code: movslq -0x468(%rbp), %rax	 RIP: 4765d3	 Bytes: 7
  %loadMem_4765d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765d3 = call %struct.Memory* @routine_movslq_MINUS0x468__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765d3)
  store %struct.Memory* %call_4765d3, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 4765da	 Bytes: 8
  %loadMem_4765da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765da = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765da)
  store %struct.Memory* %call_4765da, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 4765e2	 Bytes: 3
  %loadMem_4765e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765e2 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765e2)
  store %struct.Memory* %call_4765e2, %struct.Memory** %MEMORY

  ; Code: je .L_476611	 RIP: 4765e5	 Bytes: 6
  %loadMem_4765e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765e5 = call %struct.Memory* @routine_je_.L_476611(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765e5, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_4765e5, %struct.Memory** %MEMORY

  %loadBr_4765e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4765e5 = icmp eq i8 %loadBr_4765e5, 1
  br i1 %cmpBr_4765e5, label %block_.L_476611, label %block_4765eb

block_4765eb:
  ; Code: movl -0x468(%rbp), %edi	 RIP: 4765eb	 Bytes: 6
  %loadMem_4765eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765eb = call %struct.Memory* @routine_movl_MINUS0x468__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765eb)
  store %struct.Memory* %call_4765eb, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %esi	 RIP: 4765f1	 Bytes: 3
  %loadMem_4765f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765f1 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765f1)
  store %struct.Memory* %call_4765f1, %struct.Memory** %MEMORY

  ; Code: callq .is_same_dragon	 RIP: 4765f4	 Bytes: 5
  %loadMem1_4765f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4765f4 = call %struct.Memory* @routine_callq_.is_same_dragon(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4765f4, i64 -354756, i64 5, i64 5)
  store %struct.Memory* %call1_4765f4, %struct.Memory** %MEMORY

  %loadMem2_4765f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4765f4 = load i64, i64* %3
  %call2_4765f4 = call %struct.Memory* @sub_41fc30.is_same_dragon(%struct.State* %0, i64  %loadPC_4765f4, %struct.Memory* %loadMem2_4765f4)
  store %struct.Memory* %call2_4765f4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4765f9	 Bytes: 3
  %loadMem_4765f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765f9 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765f9)
  store %struct.Memory* %call_4765f9, %struct.Memory** %MEMORY

  ; Code: je .L_476611	 RIP: 4765fc	 Bytes: 6
  %loadMem_4765fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4765fc = call %struct.Memory* @routine_je_.L_476611(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4765fc, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4765fc, %struct.Memory** %MEMORY

  %loadBr_4765fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4765fc = icmp eq i8 %loadBr_4765fc, 1
  br i1 %cmpBr_4765fc, label %block_.L_476611, label %block_476602

block_476602:
  ; Code: movslq -0x468(%rbp), %rax	 RIP: 476602	 Bytes: 7
  %loadMem_476602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476602 = call %struct.Memory* @routine_movslq_MINUS0x468__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476602)
  store %struct.Memory* %call_476602, %struct.Memory** %MEMORY

  ; Code: movb $0x2, -0x280(%rbp,%rax,1)	 RIP: 476609	 Bytes: 8
  %loadMem_476609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476609 = call %struct.Memory* @routine_movb__0x2__MINUS0x280__rbp__rax_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476609)
  store %struct.Memory* %call_476609, %struct.Memory** %MEMORY

  ; Code: .L_476611:	 RIP: 476611	 Bytes: 0
  br label %block_.L_476611
block_.L_476611:

  ; Code: jmpq .L_476616	 RIP: 476611	 Bytes: 5
  %loadMem_476611 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476611 = call %struct.Memory* @routine_jmpq_.L_476616(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476611, i64 5, i64 5)
  store %struct.Memory* %call_476611, %struct.Memory** %MEMORY

  br label %block_.L_476616

  ; Code: .L_476616:	 RIP: 476616	 Bytes: 0
block_.L_476616:

  ; Code: movl -0x468(%rbp), %eax	 RIP: 476616	 Bytes: 6
  %loadMem_476616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476616 = call %struct.Memory* @routine_movl_MINUS0x468__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476616)
  store %struct.Memory* %call_476616, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47661c	 Bytes: 3
  %loadMem_47661c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47661c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47661c)
  store %struct.Memory* %call_47661c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x468(%rbp)	 RIP: 47661f	 Bytes: 6
  %loadMem_47661f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47661f = call %struct.Memory* @routine_movl__eax__MINUS0x468__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47661f)
  store %struct.Memory* %call_47661f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4765c3	 RIP: 476625	 Bytes: 5
  %loadMem_476625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476625 = call %struct.Memory* @routine_jmpq_.L_4765c3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476625, i64 -98, i64 5)
  store %struct.Memory* %call_476625, %struct.Memory** %MEMORY

  br label %block_.L_4765c3

  ; Code: .L_47662a:	 RIP: 47662a	 Bytes: 0
block_.L_47662a:

  ; Code: jmpq .L_47662f	 RIP: 47662a	 Bytes: 5
  %loadMem_47662a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47662a = call %struct.Memory* @routine_jmpq_.L_47662f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47662a, i64 5, i64 5)
  store %struct.Memory* %call_47662a, %struct.Memory** %MEMORY

  br label %block_.L_47662f

  ; Code: .L_47662f:	 RIP: 47662f	 Bytes: 0
block_.L_47662f:

  ; Code: jmpq .L_476634	 RIP: 47662f	 Bytes: 5
  %loadMem_47662f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47662f = call %struct.Memory* @routine_jmpq_.L_476634(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47662f, i64 5, i64 5)
  store %struct.Memory* %call_47662f, %struct.Memory** %MEMORY

  br label %block_.L_476634

  ; Code: .L_476634:	 RIP: 476634	 Bytes: 0
block_.L_476634:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 476634	 Bytes: 3
  %loadMem_476634 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476634 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476634)
  store %struct.Memory* %call_476634, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476637	 Bytes: 3
  %loadMem_476637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476637 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476637)
  store %struct.Memory* %call_476637, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 47663a	 Bytes: 3
  %loadMem_47663a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47663a = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47663a)
  store %struct.Memory* %call_47663a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476544	 RIP: 47663d	 Bytes: 5
  %loadMem_47663d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47663d = call %struct.Memory* @routine_jmpq_.L_476544(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47663d, i64 -249, i64 5)
  store %struct.Memory* %call_47663d, %struct.Memory** %MEMORY

  br label %block_.L_476544

  ; Code: .L_476642:	 RIP: 476642	 Bytes: 0
block_.L_476642:

  ; Code: movl $0x1, -0x34(%rbp)	 RIP: 476642	 Bytes: 7
  %loadMem_476642 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476642 = call %struct.Memory* @routine_movl__0x1__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476642)
  store %struct.Memory* %call_476642, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x24(%rbp)	 RIP: 476649	 Bytes: 7
  %loadMem_476649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476649 = call %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476649)
  store %struct.Memory* %call_476649, %struct.Memory** %MEMORY

  ; Code: .L_476650:	 RIP: 476650	 Bytes: 0
  br label %block_.L_476650
block_.L_476650:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 476650	 Bytes: 3
  %loadMem_476650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476650 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476650)
  store %struct.Memory* %call_476650, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 476653	 Bytes: 7
  %loadMem_476653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476653 = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476653)
  store %struct.Memory* %call_476653, %struct.Memory** %MEMORY

  ; Code: jge .L_476711	 RIP: 47665a	 Bytes: 6
  %loadMem_47665a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47665a = call %struct.Memory* @routine_jge_.L_476711(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47665a, i8* %BRANCH_TAKEN, i64 183, i64 6, i64 6)
  store %struct.Memory* %call_47665a, %struct.Memory** %MEMORY

  %loadBr_47665a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47665a = icmp eq i8 %loadBr_47665a, 1
  br i1 %cmpBr_47665a, label %block_.L_476711, label %block_476660

block_476660:
  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 476660	 Bytes: 7
  %loadMem_476660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476660 = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476660)
  store %struct.Memory* %call_476660, %struct.Memory** %MEMORY

  ; Code: .L_476667:	 RIP: 476667	 Bytes: 0
  br label %block_.L_476667
block_.L_476667:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 476667	 Bytes: 3
  %loadMem_476667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476667 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476667)
  store %struct.Memory* %call_476667, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 47666a	 Bytes: 7
  %loadMem_47666a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47666a = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47666a)
  store %struct.Memory* %call_47666a, %struct.Memory** %MEMORY

  ; Code: jge .L_4766fe	 RIP: 476671	 Bytes: 6
  %loadMem_476671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476671 = call %struct.Memory* @routine_jge_.L_4766fe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476671, i8* %BRANCH_TAKEN, i64 141, i64 6, i64 6)
  store %struct.Memory* %call_476671, %struct.Memory** %MEMORY

  %loadBr_476671 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476671 = icmp eq i8 %loadBr_476671, 1
  br i1 %cmpBr_476671, label %block_.L_4766fe, label %block_476677

block_476677:
  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 476677	 Bytes: 4
  %loadMem_476677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476677 = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476677)
  store %struct.Memory* %call_476677, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 47667b	 Bytes: 3
  %loadMem_47667b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47667b = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47667b)
  store %struct.Memory* %call_47667b, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 47667e	 Bytes: 3
  %loadMem_47667e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47667e = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47667e)
  store %struct.Memory* %call_47667e, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476681	 Bytes: 3
  %loadMem_476681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476681 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476681)
  store %struct.Memory* %call_476681, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, -0x280(%rbp,%rcx,1)	 RIP: 476684	 Bytes: 8
  %loadMem_476684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476684 = call %struct.Memory* @routine_cmpb__0x0__MINUS0x280__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476684)
  store %struct.Memory* %call_476684, %struct.Memory** %MEMORY

  ; Code: je .L_4766eb	 RIP: 47668c	 Bytes: 6
  %loadMem_47668c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47668c = call %struct.Memory* @routine_je_.L_4766eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47668c, i8* %BRANCH_TAKEN, i64 95, i64 6, i64 6)
  store %struct.Memory* %call_47668c, %struct.Memory** %MEMORY

  %loadBr_47668c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47668c = icmp eq i8 %loadBr_47668c, 1
  br i1 %cmpBr_47668c, label %block_.L_4766eb, label %block_476692

block_476692:
  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 476692	 Bytes: 4
  %loadMem_476692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476692 = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476692)
  store %struct.Memory* %call_476692, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 476696	 Bytes: 3
  %loadMem_476696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476696 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476696)
  store %struct.Memory* %call_476696, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 476699	 Bytes: 3
  %loadMem_476699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476699 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476699)
  store %struct.Memory* %call_476699, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 47669c	 Bytes: 3
  %loadMem_47669c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47669c = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47669c)
  store %struct.Memory* %call_47669c, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rcx,1), %eax	 RIP: 47669f	 Bytes: 8
  %loadMem_47669f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47669f = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47669f)
  store %struct.Memory* %call_47669f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4766a7	 Bytes: 3
  %loadMem_4766a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766a7 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766a7)
  store %struct.Memory* %call_4766a7, %struct.Memory** %MEMORY

  ; Code: jne .L_4766bc	 RIP: 4766aa	 Bytes: 6
  %loadMem_4766aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766aa = call %struct.Memory* @routine_jne_.L_4766bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766aa, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_4766aa, %struct.Memory** %MEMORY

  %loadBr_4766aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4766aa = icmp eq i8 %loadBr_4766aa, 1
  br i1 %cmpBr_4766aa, label %block_.L_4766bc, label %block_4766b0

block_4766b0:
  ; Code: movl $0x0, -0x34(%rbp)	 RIP: 4766b0	 Bytes: 7
  %loadMem_4766b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766b0 = call %struct.Memory* @routine_movl__0x0__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766b0)
  store %struct.Memory* %call_4766b0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4766fe	 RIP: 4766b7	 Bytes: 5
  %loadMem_4766b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766b7 = call %struct.Memory* @routine_jmpq_.L_4766fe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766b7, i64 71, i64 5)
  store %struct.Memory* %call_4766b7, %struct.Memory** %MEMORY

  br label %block_.L_4766fe

  ; Code: .L_4766bc:	 RIP: 4766bc	 Bytes: 0
block_.L_4766bc:

  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 4766bc	 Bytes: 4
  %loadMem_4766bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766bc = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766bc)
  store %struct.Memory* %call_4766bc, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 4766c0	 Bytes: 3
  %loadMem_4766c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766c0 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766c0)
  store %struct.Memory* %call_4766c0, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 4766c3	 Bytes: 3
  %loadMem_4766c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766c3 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766c3)
  store %struct.Memory* %call_4766c3, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4766c6	 Bytes: 3
  %loadMem_4766c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766c6 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766c6)
  store %struct.Memory* %call_4766c6, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rcx,1), %eax	 RIP: 4766c9	 Bytes: 8
  %loadMem_4766c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766c9 = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766c9)
  store %struct.Memory* %call_4766c9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 4766d1	 Bytes: 3
  %loadMem_4766d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766d1 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766d1)
  store %struct.Memory* %call_4766d1, %struct.Memory** %MEMORY

  ; Code: jne .L_4766e1	 RIP: 4766d4	 Bytes: 6
  %loadMem_4766d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766d4 = call %struct.Memory* @routine_jne_.L_4766e1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766d4, i8* %BRANCH_TAKEN, i64 13, i64 6, i64 6)
  store %struct.Memory* %call_4766d4, %struct.Memory** %MEMORY

  %loadBr_4766d4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4766d4 = icmp eq i8 %loadBr_4766d4, 1
  br i1 %cmpBr_4766d4, label %block_.L_4766e1, label %block_4766da

block_4766da:
  ; Code: movl $0x2, -0x34(%rbp)	 RIP: 4766da	 Bytes: 7
  %loadMem_4766da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766da = call %struct.Memory* @routine_movl__0x2__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766da)
  store %struct.Memory* %call_4766da, %struct.Memory** %MEMORY

  ; Code: .L_4766e1:	 RIP: 4766e1	 Bytes: 0
  br label %block_.L_4766e1
block_.L_4766e1:

  ; Code: jmpq .L_4766e6	 RIP: 4766e1	 Bytes: 5
  %loadMem_4766e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766e1 = call %struct.Memory* @routine_jmpq_.L_4766e6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766e1, i64 5, i64 5)
  store %struct.Memory* %call_4766e1, %struct.Memory** %MEMORY

  br label %block_.L_4766e6

  ; Code: .L_4766e6:	 RIP: 4766e6	 Bytes: 0
block_.L_4766e6:

  ; Code: jmpq .L_4766eb	 RIP: 4766e6	 Bytes: 5
  %loadMem_4766e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766e6 = call %struct.Memory* @routine_jmpq_.L_4766eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766e6, i64 5, i64 5)
  store %struct.Memory* %call_4766e6, %struct.Memory** %MEMORY

  br label %block_.L_4766eb

  ; Code: .L_4766eb:	 RIP: 4766eb	 Bytes: 0
block_.L_4766eb:

  ; Code: jmpq .L_4766f0	 RIP: 4766eb	 Bytes: 5
  %loadMem_4766eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766eb = call %struct.Memory* @routine_jmpq_.L_4766f0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766eb, i64 5, i64 5)
  store %struct.Memory* %call_4766eb, %struct.Memory** %MEMORY

  br label %block_.L_4766f0

  ; Code: .L_4766f0:	 RIP: 4766f0	 Bytes: 0
block_.L_4766f0:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 4766f0	 Bytes: 3
  %loadMem_4766f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766f0 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766f0)
  store %struct.Memory* %call_4766f0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4766f3	 Bytes: 3
  %loadMem_4766f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766f3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766f3)
  store %struct.Memory* %call_4766f3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 4766f6	 Bytes: 3
  %loadMem_4766f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766f6 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766f6)
  store %struct.Memory* %call_4766f6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476667	 RIP: 4766f9	 Bytes: 5
  %loadMem_4766f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766f9 = call %struct.Memory* @routine_jmpq_.L_476667(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766f9, i64 -146, i64 5)
  store %struct.Memory* %call_4766f9, %struct.Memory** %MEMORY

  br label %block_.L_476667

  ; Code: .L_4766fe:	 RIP: 4766fe	 Bytes: 0
block_.L_4766fe:

  ; Code: jmpq .L_476703	 RIP: 4766fe	 Bytes: 5
  %loadMem_4766fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4766fe = call %struct.Memory* @routine_jmpq_.L_476703(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4766fe, i64 5, i64 5)
  store %struct.Memory* %call_4766fe, %struct.Memory** %MEMORY

  br label %block_.L_476703

  ; Code: .L_476703:	 RIP: 476703	 Bytes: 0
block_.L_476703:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 476703	 Bytes: 3
  %loadMem_476703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476703 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476703)
  store %struct.Memory* %call_476703, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476706	 Bytes: 3
  %loadMem_476706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476706 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476706)
  store %struct.Memory* %call_476706, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 476709	 Bytes: 3
  %loadMem_476709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476709 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476709)
  store %struct.Memory* %call_476709, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476650	 RIP: 47670c	 Bytes: 5
  %loadMem_47670c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47670c = call %struct.Memory* @routine_jmpq_.L_476650(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47670c, i64 -188, i64 5)
  store %struct.Memory* %call_47670c, %struct.Memory** %MEMORY

  br label %block_.L_476650

  ; Code: .L_476711:	 RIP: 476711	 Bytes: 0
block_.L_476711:

  ; Code: cmpl $0x0, -0x34(%rbp)	 RIP: 476711	 Bytes: 4
  %loadMem_476711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476711 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476711)
  store %struct.Memory* %call_476711, %struct.Memory** %MEMORY

  ; Code: je .L_476bc7	 RIP: 476715	 Bytes: 6
  %loadMem_476715 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476715 = call %struct.Memory* @routine_je_.L_476bc7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476715, i8* %BRANCH_TAKEN, i64 1202, i64 6, i64 6)
  store %struct.Memory* %call_476715, %struct.Memory** %MEMORY

  %loadBr_476715 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476715 = icmp eq i8 %loadBr_476715, 1
  br i1 %cmpBr_476715, label %block_.L_476bc7, label %block_47671b

block_47671b:
  ; Code: movl $0x15, -0x30(%rbp)	 RIP: 47671b	 Bytes: 7
  %loadMem_47671b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47671b = call %struct.Memory* @routine_movl__0x15__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47671b)
  store %struct.Memory* %call_47671b, %struct.Memory** %MEMORY

  ; Code: .L_476722:	 RIP: 476722	 Bytes: 0
  br label %block_.L_476722
block_.L_476722:

  ; Code: xorl %eax, %eax	 RIP: 476722	 Bytes: 2
  %loadMem_476722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476722 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476722)
  store %struct.Memory* %call_476722, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 476724	 Bytes: 2
  %loadMem_476724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476724 = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476724)
  store %struct.Memory* %call_476724, %struct.Memory** %MEMORY

  ; Code: cmpl $0x190, -0x30(%rbp)	 RIP: 476726	 Bytes: 7
  %loadMem_476726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476726 = call %struct.Memory* @routine_cmpl__0x190__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476726)
  store %struct.Memory* %call_476726, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x4bd(%rbp)	 RIP: 47672d	 Bytes: 6
  %loadMem_47672d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47672d = call %struct.Memory* @routine_movb__cl__MINUS0x4bd__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47672d)
  store %struct.Memory* %call_47672d, %struct.Memory** %MEMORY

  ; Code: jge .L_476746	 RIP: 476733	 Bytes: 6
  %loadMem_476733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476733 = call %struct.Memory* @routine_jge_.L_476746(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476733, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_476733, %struct.Memory** %MEMORY

  %loadBr_476733 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476733 = icmp eq i8 %loadBr_476733, 1
  br i1 %cmpBr_476733, label %block_.L_476746, label %block_476739

block_476739:
  ; Code: cmpl $0x0, -0x34(%rbp)	 RIP: 476739	 Bytes: 4
  %loadMem_476739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476739 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476739)
  store %struct.Memory* %call_476739, %struct.Memory** %MEMORY

  ; Code: setne %al	 RIP: 47673d	 Bytes: 3
  %loadMem_47673d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47673d = call %struct.Memory* @routine_setne__al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47673d)
  store %struct.Memory* %call_47673d, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x4bd(%rbp)	 RIP: 476740	 Bytes: 6
  %loadMem_476740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476740 = call %struct.Memory* @routine_movb__al__MINUS0x4bd__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476740)
  store %struct.Memory* %call_476740, %struct.Memory** %MEMORY

  ; Code: .L_476746:	 RIP: 476746	 Bytes: 0
  br label %block_.L_476746
block_.L_476746:

  ; Code: movb -0x4bd(%rbp), %al	 RIP: 476746	 Bytes: 6
  %loadMem_476746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476746 = call %struct.Memory* @routine_movb_MINUS0x4bd__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476746)
  store %struct.Memory* %call_476746, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 47674c	 Bytes: 2
  %loadMem_47674c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47674c = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47674c)
  store %struct.Memory* %call_47674c, %struct.Memory** %MEMORY

  ; Code: jne .L_476759	 RIP: 47674e	 Bytes: 6
  %loadMem_47674e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47674e = call %struct.Memory* @routine_jne_.L_476759(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47674e, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_47674e, %struct.Memory** %MEMORY

  %loadBr_47674e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47674e = icmp eq i8 %loadBr_47674e, 1
  br i1 %cmpBr_47674e, label %block_.L_476759, label %block_476754

block_476754:
  ; Code: jmpq .L_476bc2	 RIP: 476754	 Bytes: 5
  %loadMem_476754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476754 = call %struct.Memory* @routine_jmpq_.L_476bc2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476754, i64 1134, i64 5)
  store %struct.Memory* %call_476754, %struct.Memory** %MEMORY

  br label %block_.L_476bc2

  ; Code: .L_476759:	 RIP: 476759	 Bytes: 0
block_.L_476759:

  ; Code: movslq -0x30(%rbp), %rax	 RIP: 476759	 Bytes: 4
  %loadMem_476759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476759 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476759)
  store %struct.Memory* %call_476759, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 47675d	 Bytes: 8
  %loadMem_47675d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47675d = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47675d)
  store %struct.Memory* %call_47675d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 476765	 Bytes: 3
  %loadMem_476765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476765 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476765)
  store %struct.Memory* %call_476765, %struct.Memory** %MEMORY

  ; Code: je .L_476baf	 RIP: 476768	 Bytes: 6
  %loadMem_476768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476768 = call %struct.Memory* @routine_je_.L_476baf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476768, i8* %BRANCH_TAKEN, i64 1095, i64 6, i64 6)
  store %struct.Memory* %call_476768, %struct.Memory** %MEMORY

  %loadBr_476768 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476768 = icmp eq i8 %loadBr_476768, 1
  br i1 %cmpBr_476768, label %block_.L_476baf, label %block_47676e

block_47676e:
  ; Code: movslq -0x30(%rbp), %rax	 RIP: 47676e	 Bytes: 4
  %loadMem_47676e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47676e = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47676e)
  store %struct.Memory* %call_47676e, %struct.Memory** %MEMORY

  ; Code: movsbl -0x280(%rbp,%rax,1), %ecx	 RIP: 476772	 Bytes: 8
  %loadMem_476772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476772 = call %struct.Memory* @routine_movsbl_MINUS0x280__rbp__rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476772)
  store %struct.Memory* %call_476772, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 47677a	 Bytes: 3
  %loadMem_47677a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47677a = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47677a)
  store %struct.Memory* %call_47677a, %struct.Memory** %MEMORY

  ; Code: je .L_476baf	 RIP: 47677d	 Bytes: 6
  %loadMem_47677d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47677d = call %struct.Memory* @routine_je_.L_476baf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47677d, i8* %BRANCH_TAKEN, i64 1074, i64 6, i64 6)
  store %struct.Memory* %call_47677d, %struct.Memory** %MEMORY

  %loadBr_47677d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47677d = icmp eq i8 %loadBr_47677d, 1
  br i1 %cmpBr_47677d, label %block_.L_476baf, label %block_476783

block_476783:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476783	 Bytes: 3
  %loadMem_476783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476783 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476783)
  store %struct.Memory* %call_476783, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 476786	 Bytes: 3
  %loadMem_476786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476786 = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476786)
  store %struct.Memory* %call_476786, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476789	 Bytes: 3
  %loadMem_476789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476789 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476789)
  store %struct.Memory* %call_476789, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 47678c	 Bytes: 8
  %loadMem_47678c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47678c = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47678c)
  store %struct.Memory* %call_47678c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 476794	 Bytes: 3
  %loadMem_476794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476794 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476794)
  store %struct.Memory* %call_476794, %struct.Memory** %MEMORY

  ; Code: je .L_47688b	 RIP: 476797	 Bytes: 6
  %loadMem_476797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476797 = call %struct.Memory* @routine_je_.L_47688b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476797, i8* %BRANCH_TAKEN, i64 244, i64 6, i64 6)
  store %struct.Memory* %call_476797, %struct.Memory** %MEMORY

  %loadBr_476797 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476797 = icmp eq i8 %loadBr_476797, 1
  br i1 %cmpBr_476797, label %block_.L_47688b, label %block_47679d

block_47679d:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 47679d	 Bytes: 3
  %loadMem_47679d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47679d = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47679d)
  store %struct.Memory* %call_47679d, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 4767a0	 Bytes: 3
  %loadMem_4767a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767a0 = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767a0)
  store %struct.Memory* %call_4767a0, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4767a3	 Bytes: 3
  %loadMem_4767a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767a3 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767a3)
  store %struct.Memory* %call_4767a3, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4767a6	 Bytes: 8
  %loadMem_4767a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767a6 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767a6)
  store %struct.Memory* %call_4767a6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4767ae	 Bytes: 3
  %loadMem_4767ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767ae = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767ae)
  store %struct.Memory* %call_4767ae, %struct.Memory** %MEMORY

  ; Code: jne .L_47688b	 RIP: 4767b1	 Bytes: 6
  %loadMem_4767b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767b1 = call %struct.Memory* @routine_jne_.L_47688b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767b1, i8* %BRANCH_TAKEN, i64 218, i64 6, i64 6)
  store %struct.Memory* %call_4767b1, %struct.Memory** %MEMORY

  %loadBr_4767b1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4767b1 = icmp eq i8 %loadBr_4767b1, 1
  br i1 %cmpBr_4767b1, label %block_.L_47688b, label %block_4767b7

block_4767b7:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4767b7	 Bytes: 3
  %loadMem_4767b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767b7 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767b7)
  store %struct.Memory* %call_4767b7, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 4767ba	 Bytes: 3
  %loadMem_4767ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767ba = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767ba)
  store %struct.Memory* %call_4767ba, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 4767bd	 Bytes: 3
  %loadMem_4767bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767bd = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767bd)
  store %struct.Memory* %call_4767bd, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4767c0	 Bytes: 3
  %loadMem_4767c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767c0 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767c0)
  store %struct.Memory* %call_4767c0, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4767c3	 Bytes: 8
  %loadMem_4767c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767c3 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767c3)
  store %struct.Memory* %call_4767c3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 4767cb	 Bytes: 3
  %loadMem_4767cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767cb = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767cb)
  store %struct.Memory* %call_4767cb, %struct.Memory** %MEMORY

  ; Code: je .L_47688b	 RIP: 4767ce	 Bytes: 6
  %loadMem_4767ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767ce = call %struct.Memory* @routine_je_.L_47688b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767ce, i8* %BRANCH_TAKEN, i64 189, i64 6, i64 6)
  store %struct.Memory* %call_4767ce, %struct.Memory** %MEMORY

  %loadBr_4767ce = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4767ce = icmp eq i8 %loadBr_4767ce, 1
  br i1 %cmpBr_4767ce, label %block_.L_47688b, label %block_4767d4

block_4767d4:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4767d4	 Bytes: 3
  %loadMem_4767d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767d4 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767d4)
  store %struct.Memory* %call_4767d4, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 4767d7	 Bytes: 3
  %loadMem_4767d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767d7 = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767d7)
  store %struct.Memory* %call_4767d7, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 4767da	 Bytes: 3
  %loadMem_4767da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767da = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767da)
  store %struct.Memory* %call_4767da, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4767dd	 Bytes: 3
  %loadMem_4767dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767dd = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767dd)
  store %struct.Memory* %call_4767dd, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4767e0	 Bytes: 8
  %loadMem_4767e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767e0 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767e0)
  store %struct.Memory* %call_4767e0, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe4(%rbp), %eax	 RIP: 4767e8	 Bytes: 6
  %loadMem_4767e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767e8 = call %struct.Memory* @routine_cmpl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767e8)
  store %struct.Memory* %call_4767e8, %struct.Memory** %MEMORY

  ; Code: jne .L_47688b	 RIP: 4767ee	 Bytes: 6
  %loadMem_4767ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767ee = call %struct.Memory* @routine_jne_.L_47688b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767ee, i8* %BRANCH_TAKEN, i64 157, i64 6, i64 6)
  store %struct.Memory* %call_4767ee, %struct.Memory** %MEMORY

  %loadBr_4767ee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4767ee = icmp eq i8 %loadBr_4767ee, 1
  br i1 %cmpBr_4767ee, label %block_.L_47688b, label %block_4767f4

block_4767f4:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4767f4	 Bytes: 3
  %loadMem_4767f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767f4 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767f4)
  store %struct.Memory* %call_4767f4, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 4767f7	 Bytes: 3
  %loadMem_4767f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767f7 = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767f7)
  store %struct.Memory* %call_4767f7, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 4767fa	 Bytes: 3
  %loadMem_4767fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767fa = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767fa)
  store %struct.Memory* %call_4767fa, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4767fd	 Bytes: 3
  %loadMem_4767fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4767fd = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4767fd)
  store %struct.Memory* %call_4767fd, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rcx,1), %eax	 RIP: 476800	 Bytes: 8
  %loadMem_476800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476800 = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476800)
  store %struct.Memory* %call_476800, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 476808	 Bytes: 3
  %loadMem_476808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476808 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476808)
  store %struct.Memory* %call_476808, %struct.Memory** %MEMORY

  ; Code: je .L_47688b	 RIP: 47680b	 Bytes: 6
  %loadMem_47680b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47680b = call %struct.Memory* @routine_je_.L_47688b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47680b, i8* %BRANCH_TAKEN, i64 128, i64 6, i64 6)
  store %struct.Memory* %call_47680b, %struct.Memory** %MEMORY

  %loadBr_47680b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47680b = icmp eq i8 %loadBr_47680b, 1
  br i1 %cmpBr_47680b, label %block_.L_47688b, label %block_476811

block_476811:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476811	 Bytes: 3
  %loadMem_476811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476811 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476811)
  store %struct.Memory* %call_476811, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 476814	 Bytes: 3
  %loadMem_476814 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476814 = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476814)
  store %struct.Memory* %call_476814, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476817	 Bytes: 3
  %loadMem_476817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476817 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476817)
  store %struct.Memory* %call_476817, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 47681a	 Bytes: 3
  %loadMem_47681a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47681a = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47681a)
  store %struct.Memory* %call_47681a, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 47681d	 Bytes: 8
  %loadMem_47681d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47681d = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47681d)
  store %struct.Memory* %call_47681d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 476825	 Bytes: 3
  %loadMem_476825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476825 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476825)
  store %struct.Memory* %call_476825, %struct.Memory** %MEMORY

  ; Code: je .L_47688b	 RIP: 476828	 Bytes: 6
  %loadMem_476828 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476828 = call %struct.Memory* @routine_je_.L_47688b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476828, i8* %BRANCH_TAKEN, i64 99, i64 6, i64 6)
  store %struct.Memory* %call_476828, %struct.Memory** %MEMORY

  %loadBr_476828 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476828 = icmp eq i8 %loadBr_476828, 1
  br i1 %cmpBr_476828, label %block_.L_47688b, label %block_47682e

block_47682e:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 47682e	 Bytes: 3
  %loadMem_47682e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47682e = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47682e)
  store %struct.Memory* %call_47682e, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 476831	 Bytes: 3
  %loadMem_476831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476831 = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476831)
  store %struct.Memory* %call_476831, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476834	 Bytes: 3
  %loadMem_476834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476834 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476834)
  store %struct.Memory* %call_476834, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476837	 Bytes: 3
  %loadMem_476837 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476837 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476837)
  store %struct.Memory* %call_476837, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 47683a	 Bytes: 8
  %loadMem_47683a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47683a = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47683a)
  store %struct.Memory* %call_47683a, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe8(%rbp), %eax	 RIP: 476842	 Bytes: 6
  %loadMem_476842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476842 = call %struct.Memory* @routine_cmpl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476842)
  store %struct.Memory* %call_476842, %struct.Memory** %MEMORY

  ; Code: je .L_47688b	 RIP: 476848	 Bytes: 6
  %loadMem_476848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476848 = call %struct.Memory* @routine_je_.L_47688b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476848, i8* %BRANCH_TAKEN, i64 67, i64 6, i64 6)
  store %struct.Memory* %call_476848, %struct.Memory** %MEMORY

  %loadBr_476848 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476848 = icmp eq i8 %loadBr_476848, 1
  br i1 %cmpBr_476848, label %block_.L_47688b, label %block_47684e

block_47684e:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 47684e	 Bytes: 3
  %loadMem_47684e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47684e = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47684e)
  store %struct.Memory* %call_47684e, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 476851	 Bytes: 3
  %loadMem_476851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476851 = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476851)
  store %struct.Memory* %call_476851, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476854	 Bytes: 3
  %loadMem_476854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476854 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476854)
  store %struct.Memory* %call_476854, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476857	 Bytes: 3
  %loadMem_476857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476857 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476857)
  store %struct.Memory* %call_476857, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 47685a	 Bytes: 8
  %loadMem_47685a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47685a = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47685a)
  store %struct.Memory* %call_47685a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 476862	 Bytes: 3
  %loadMem_476862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476862 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476862)
  store %struct.Memory* %call_476862, %struct.Memory** %MEMORY

  ; Code: je .L_47688b	 RIP: 476865	 Bytes: 6
  %loadMem_476865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476865 = call %struct.Memory* @routine_je_.L_47688b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476865, i8* %BRANCH_TAKEN, i64 38, i64 6, i64 6)
  store %struct.Memory* %call_476865, %struct.Memory** %MEMORY

  %loadBr_476865 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476865 = icmp eq i8 %loadBr_476865, 1
  br i1 %cmpBr_476865, label %block_.L_47688b, label %block_47686b

block_47686b:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 47686b	 Bytes: 3
  %loadMem_47686b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47686b = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47686b)
  store %struct.Memory* %call_47686b, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 47686e	 Bytes: 3
  %loadMem_47686e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47686e = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47686e)
  store %struct.Memory* %call_47686e, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476871	 Bytes: 3
  %loadMem_476871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476871 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476871)
  store %struct.Memory* %call_476871, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476874	 Bytes: 3
  %loadMem_476874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476874 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476874)
  store %struct.Memory* %call_476874, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476877	 Bytes: 8
  %loadMem_476877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476877 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476877)
  store %struct.Memory* %call_476877, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe8(%rbp), %eax	 RIP: 47687f	 Bytes: 6
  %loadMem_47687f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47687f = call %struct.Memory* @routine_cmpl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47687f)
  store %struct.Memory* %call_47687f, %struct.Memory** %MEMORY

  ; Code: jne .L_476ba3	 RIP: 476885	 Bytes: 6
  %loadMem_476885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476885 = call %struct.Memory* @routine_jne_.L_476ba3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476885, i8* %BRANCH_TAKEN, i64 798, i64 6, i64 6)
  store %struct.Memory* %call_476885, %struct.Memory** %MEMORY

  %loadBr_476885 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476885 = icmp eq i8 %loadBr_476885, 1
  br i1 %cmpBr_476885, label %block_.L_476ba3, label %block_.L_47688b

  ; Code: .L_47688b:	 RIP: 47688b	 Bytes: 0
block_.L_47688b:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 47688b	 Bytes: 3
  %loadMem_47688b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47688b = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47688b)
  store %struct.Memory* %call_47688b, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 47688e	 Bytes: 3
  %loadMem_47688e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47688e = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47688e)
  store %struct.Memory* %call_47688e, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476891	 Bytes: 3
  %loadMem_476891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476891 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476891)
  store %struct.Memory* %call_476891, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476894	 Bytes: 8
  %loadMem_476894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476894 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476894)
  store %struct.Memory* %call_476894, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 47689c	 Bytes: 3
  %loadMem_47689c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47689c = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47689c)
  store %struct.Memory* %call_47689c, %struct.Memory** %MEMORY

  ; Code: je .L_476993	 RIP: 47689f	 Bytes: 6
  %loadMem_47689f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47689f = call %struct.Memory* @routine_je_.L_476993(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47689f, i8* %BRANCH_TAKEN, i64 244, i64 6, i64 6)
  store %struct.Memory* %call_47689f, %struct.Memory** %MEMORY

  %loadBr_47689f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47689f = icmp eq i8 %loadBr_47689f, 1
  br i1 %cmpBr_47689f, label %block_.L_476993, label %block_4768a5

block_4768a5:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4768a5	 Bytes: 3
  %loadMem_4768a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768a5 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768a5)
  store %struct.Memory* %call_4768a5, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 4768a8	 Bytes: 3
  %loadMem_4768a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768a8 = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768a8)
  store %struct.Memory* %call_4768a8, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4768ab	 Bytes: 3
  %loadMem_4768ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768ab = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768ab)
  store %struct.Memory* %call_4768ab, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4768ae	 Bytes: 8
  %loadMem_4768ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768ae = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768ae)
  store %struct.Memory* %call_4768ae, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4768b6	 Bytes: 3
  %loadMem_4768b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768b6 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768b6)
  store %struct.Memory* %call_4768b6, %struct.Memory** %MEMORY

  ; Code: jne .L_476993	 RIP: 4768b9	 Bytes: 6
  %loadMem_4768b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768b9 = call %struct.Memory* @routine_jne_.L_476993(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768b9, i8* %BRANCH_TAKEN, i64 218, i64 6, i64 6)
  store %struct.Memory* %call_4768b9, %struct.Memory** %MEMORY

  %loadBr_4768b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4768b9 = icmp eq i8 %loadBr_4768b9, 1
  br i1 %cmpBr_4768b9, label %block_.L_476993, label %block_4768bf

block_4768bf:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4768bf	 Bytes: 3
  %loadMem_4768bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768bf = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768bf)
  store %struct.Memory* %call_4768bf, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 4768c2	 Bytes: 3
  %loadMem_4768c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768c2 = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768c2)
  store %struct.Memory* %call_4768c2, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 4768c5	 Bytes: 3
  %loadMem_4768c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768c5 = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768c5)
  store %struct.Memory* %call_4768c5, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4768c8	 Bytes: 3
  %loadMem_4768c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768c8 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768c8)
  store %struct.Memory* %call_4768c8, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4768cb	 Bytes: 8
  %loadMem_4768cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768cb = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768cb)
  store %struct.Memory* %call_4768cb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 4768d3	 Bytes: 3
  %loadMem_4768d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768d3 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768d3)
  store %struct.Memory* %call_4768d3, %struct.Memory** %MEMORY

  ; Code: je .L_476993	 RIP: 4768d6	 Bytes: 6
  %loadMem_4768d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768d6 = call %struct.Memory* @routine_je_.L_476993(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768d6, i8* %BRANCH_TAKEN, i64 189, i64 6, i64 6)
  store %struct.Memory* %call_4768d6, %struct.Memory** %MEMORY

  %loadBr_4768d6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4768d6 = icmp eq i8 %loadBr_4768d6, 1
  br i1 %cmpBr_4768d6, label %block_.L_476993, label %block_4768dc

block_4768dc:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4768dc	 Bytes: 3
  %loadMem_4768dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768dc = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768dc)
  store %struct.Memory* %call_4768dc, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 4768df	 Bytes: 3
  %loadMem_4768df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768df = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768df)
  store %struct.Memory* %call_4768df, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 4768e2	 Bytes: 3
  %loadMem_4768e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768e2 = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768e2)
  store %struct.Memory* %call_4768e2, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4768e5	 Bytes: 3
  %loadMem_4768e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768e5 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768e5)
  store %struct.Memory* %call_4768e5, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4768e8	 Bytes: 8
  %loadMem_4768e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768e8 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768e8)
  store %struct.Memory* %call_4768e8, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe4(%rbp), %eax	 RIP: 4768f0	 Bytes: 6
  %loadMem_4768f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768f0 = call %struct.Memory* @routine_cmpl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768f0)
  store %struct.Memory* %call_4768f0, %struct.Memory** %MEMORY

  ; Code: jne .L_476993	 RIP: 4768f6	 Bytes: 6
  %loadMem_4768f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768f6 = call %struct.Memory* @routine_jne_.L_476993(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768f6, i8* %BRANCH_TAKEN, i64 157, i64 6, i64 6)
  store %struct.Memory* %call_4768f6, %struct.Memory** %MEMORY

  %loadBr_4768f6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4768f6 = icmp eq i8 %loadBr_4768f6, 1
  br i1 %cmpBr_4768f6, label %block_.L_476993, label %block_4768fc

block_4768fc:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4768fc	 Bytes: 3
  %loadMem_4768fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768fc = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768fc)
  store %struct.Memory* %call_4768fc, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 4768ff	 Bytes: 3
  %loadMem_4768ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4768ff = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4768ff)
  store %struct.Memory* %call_4768ff, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 476902	 Bytes: 3
  %loadMem_476902 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476902 = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476902)
  store %struct.Memory* %call_476902, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476905	 Bytes: 3
  %loadMem_476905 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476905 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476905)
  store %struct.Memory* %call_476905, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rcx,1), %eax	 RIP: 476908	 Bytes: 8
  %loadMem_476908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476908 = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476908)
  store %struct.Memory* %call_476908, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 476910	 Bytes: 3
  %loadMem_476910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476910 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476910)
  store %struct.Memory* %call_476910, %struct.Memory** %MEMORY

  ; Code: je .L_476993	 RIP: 476913	 Bytes: 6
  %loadMem_476913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476913 = call %struct.Memory* @routine_je_.L_476993(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476913, i8* %BRANCH_TAKEN, i64 128, i64 6, i64 6)
  store %struct.Memory* %call_476913, %struct.Memory** %MEMORY

  %loadBr_476913 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476913 = icmp eq i8 %loadBr_476913, 1
  br i1 %cmpBr_476913, label %block_.L_476993, label %block_476919

block_476919:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476919	 Bytes: 3
  %loadMem_476919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476919 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476919)
  store %struct.Memory* %call_476919, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 47691c	 Bytes: 3
  %loadMem_47691c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47691c = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47691c)
  store %struct.Memory* %call_47691c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47691f	 Bytes: 3
  %loadMem_47691f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47691f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47691f)
  store %struct.Memory* %call_47691f, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476922	 Bytes: 3
  %loadMem_476922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476922 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476922)
  store %struct.Memory* %call_476922, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476925	 Bytes: 8
  %loadMem_476925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476925 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476925)
  store %struct.Memory* %call_476925, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 47692d	 Bytes: 3
  %loadMem_47692d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47692d = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47692d)
  store %struct.Memory* %call_47692d, %struct.Memory** %MEMORY

  ; Code: je .L_476993	 RIP: 476930	 Bytes: 6
  %loadMem_476930 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476930 = call %struct.Memory* @routine_je_.L_476993(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476930, i8* %BRANCH_TAKEN, i64 99, i64 6, i64 6)
  store %struct.Memory* %call_476930, %struct.Memory** %MEMORY

  %loadBr_476930 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476930 = icmp eq i8 %loadBr_476930, 1
  br i1 %cmpBr_476930, label %block_.L_476993, label %block_476936

block_476936:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476936	 Bytes: 3
  %loadMem_476936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476936 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476936)
  store %struct.Memory* %call_476936, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 476939	 Bytes: 3
  %loadMem_476939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476939 = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476939)
  store %struct.Memory* %call_476939, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 47693c	 Bytes: 3
  %loadMem_47693c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47693c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47693c)
  store %struct.Memory* %call_47693c, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 47693f	 Bytes: 3
  %loadMem_47693f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47693f = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47693f)
  store %struct.Memory* %call_47693f, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476942	 Bytes: 8
  %loadMem_476942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476942 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476942)
  store %struct.Memory* %call_476942, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe8(%rbp), %eax	 RIP: 47694a	 Bytes: 6
  %loadMem_47694a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47694a = call %struct.Memory* @routine_cmpl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47694a)
  store %struct.Memory* %call_47694a, %struct.Memory** %MEMORY

  ; Code: je .L_476993	 RIP: 476950	 Bytes: 6
  %loadMem_476950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476950 = call %struct.Memory* @routine_je_.L_476993(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476950, i8* %BRANCH_TAKEN, i64 67, i64 6, i64 6)
  store %struct.Memory* %call_476950, %struct.Memory** %MEMORY

  %loadBr_476950 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476950 = icmp eq i8 %loadBr_476950, 1
  br i1 %cmpBr_476950, label %block_.L_476993, label %block_476956

block_476956:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476956	 Bytes: 3
  %loadMem_476956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476956 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476956)
  store %struct.Memory* %call_476956, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 476959	 Bytes: 3
  %loadMem_476959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476959 = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476959)
  store %struct.Memory* %call_476959, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 47695c	 Bytes: 3
  %loadMem_47695c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47695c = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47695c)
  store %struct.Memory* %call_47695c, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 47695f	 Bytes: 3
  %loadMem_47695f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47695f = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47695f)
  store %struct.Memory* %call_47695f, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476962	 Bytes: 8
  %loadMem_476962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476962 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476962)
  store %struct.Memory* %call_476962, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 47696a	 Bytes: 3
  %loadMem_47696a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47696a = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47696a)
  store %struct.Memory* %call_47696a, %struct.Memory** %MEMORY

  ; Code: je .L_476993	 RIP: 47696d	 Bytes: 6
  %loadMem_47696d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47696d = call %struct.Memory* @routine_je_.L_476993(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47696d, i8* %BRANCH_TAKEN, i64 38, i64 6, i64 6)
  store %struct.Memory* %call_47696d, %struct.Memory** %MEMORY

  %loadBr_47696d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47696d = icmp eq i8 %loadBr_47696d, 1
  br i1 %cmpBr_47696d, label %block_.L_476993, label %block_476973

block_476973:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476973	 Bytes: 3
  %loadMem_476973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476973 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476973)
  store %struct.Memory* %call_476973, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 476976	 Bytes: 3
  %loadMem_476976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476976 = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476976)
  store %struct.Memory* %call_476976, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476979	 Bytes: 3
  %loadMem_476979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476979 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476979)
  store %struct.Memory* %call_476979, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 47697c	 Bytes: 3
  %loadMem_47697c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47697c = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47697c)
  store %struct.Memory* %call_47697c, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 47697f	 Bytes: 8
  %loadMem_47697f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47697f = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47697f)
  store %struct.Memory* %call_47697f, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe8(%rbp), %eax	 RIP: 476987	 Bytes: 6
  %loadMem_476987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476987 = call %struct.Memory* @routine_cmpl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476987)
  store %struct.Memory* %call_476987, %struct.Memory** %MEMORY

  ; Code: jne .L_476ba3	 RIP: 47698d	 Bytes: 6
  %loadMem_47698d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47698d = call %struct.Memory* @routine_jne_.L_476ba3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47698d, i8* %BRANCH_TAKEN, i64 534, i64 6, i64 6)
  store %struct.Memory* %call_47698d, %struct.Memory** %MEMORY

  %loadBr_47698d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47698d = icmp eq i8 %loadBr_47698d, 1
  br i1 %cmpBr_47698d, label %block_.L_476ba3, label %block_.L_476993

  ; Code: .L_476993:	 RIP: 476993	 Bytes: 0
block_.L_476993:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 476993	 Bytes: 3
  %loadMem_476993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476993 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476993)
  store %struct.Memory* %call_476993, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476996	 Bytes: 3
  %loadMem_476996 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476996 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476996)
  store %struct.Memory* %call_476996, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476999	 Bytes: 3
  %loadMem_476999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476999 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476999)
  store %struct.Memory* %call_476999, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 47699c	 Bytes: 8
  %loadMem_47699c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_47699c = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_47699c)
  store %struct.Memory* %call_47699c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 4769a4	 Bytes: 3
  %loadMem_4769a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769a4 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769a4)
  store %struct.Memory* %call_4769a4, %struct.Memory** %MEMORY

  ; Code: je .L_476a9b	 RIP: 4769a7	 Bytes: 6
  %loadMem_4769a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769a7 = call %struct.Memory* @routine_je_.L_476a9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769a7, i8* %BRANCH_TAKEN, i64 244, i64 6, i64 6)
  store %struct.Memory* %call_4769a7, %struct.Memory** %MEMORY

  %loadBr_4769a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4769a7 = icmp eq i8 %loadBr_4769a7, 1
  br i1 %cmpBr_4769a7, label %block_.L_476a9b, label %block_4769ad

block_4769ad:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4769ad	 Bytes: 3
  %loadMem_4769ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769ad = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769ad)
  store %struct.Memory* %call_4769ad, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4769b0	 Bytes: 3
  %loadMem_4769b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769b0 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769b0)
  store %struct.Memory* %call_4769b0, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4769b3	 Bytes: 3
  %loadMem_4769b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769b3 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769b3)
  store %struct.Memory* %call_4769b3, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4769b6	 Bytes: 8
  %loadMem_4769b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769b6 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769b6)
  store %struct.Memory* %call_4769b6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4769be	 Bytes: 3
  %loadMem_4769be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769be = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769be)
  store %struct.Memory* %call_4769be, %struct.Memory** %MEMORY

  ; Code: jne .L_476a9b	 RIP: 4769c1	 Bytes: 6
  %loadMem_4769c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769c1 = call %struct.Memory* @routine_jne_.L_476a9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769c1, i8* %BRANCH_TAKEN, i64 218, i64 6, i64 6)
  store %struct.Memory* %call_4769c1, %struct.Memory** %MEMORY

  %loadBr_4769c1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4769c1 = icmp eq i8 %loadBr_4769c1, 1
  br i1 %cmpBr_4769c1, label %block_.L_476a9b, label %block_4769c7

block_4769c7:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4769c7	 Bytes: 3
  %loadMem_4769c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769c7 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769c7)
  store %struct.Memory* %call_4769c7, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4769ca	 Bytes: 3
  %loadMem_4769ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769ca = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769ca)
  store %struct.Memory* %call_4769ca, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4769cd	 Bytes: 3
  %loadMem_4769cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769cd = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769cd)
  store %struct.Memory* %call_4769cd, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4769d0	 Bytes: 3
  %loadMem_4769d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769d0 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769d0)
  store %struct.Memory* %call_4769d0, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4769d3	 Bytes: 8
  %loadMem_4769d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769d3 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769d3)
  store %struct.Memory* %call_4769d3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 4769db	 Bytes: 3
  %loadMem_4769db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769db = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769db)
  store %struct.Memory* %call_4769db, %struct.Memory** %MEMORY

  ; Code: je .L_476a9b	 RIP: 4769de	 Bytes: 6
  %loadMem_4769de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769de = call %struct.Memory* @routine_je_.L_476a9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769de, i8* %BRANCH_TAKEN, i64 189, i64 6, i64 6)
  store %struct.Memory* %call_4769de, %struct.Memory** %MEMORY

  %loadBr_4769de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4769de = icmp eq i8 %loadBr_4769de, 1
  br i1 %cmpBr_4769de, label %block_.L_476a9b, label %block_4769e4

block_4769e4:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 4769e4	 Bytes: 3
  %loadMem_4769e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769e4 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769e4)
  store %struct.Memory* %call_4769e4, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4769e7	 Bytes: 3
  %loadMem_4769e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769e7 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769e7)
  store %struct.Memory* %call_4769e7, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4769ea	 Bytes: 3
  %loadMem_4769ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769ea = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769ea)
  store %struct.Memory* %call_4769ea, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 4769ed	 Bytes: 3
  %loadMem_4769ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769ed = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769ed)
  store %struct.Memory* %call_4769ed, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 4769f0	 Bytes: 8
  %loadMem_4769f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769f0 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769f0)
  store %struct.Memory* %call_4769f0, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe4(%rbp), %eax	 RIP: 4769f8	 Bytes: 6
  %loadMem_4769f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769f8 = call %struct.Memory* @routine_cmpl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769f8)
  store %struct.Memory* %call_4769f8, %struct.Memory** %MEMORY

  ; Code: jne .L_476a9b	 RIP: 4769fe	 Bytes: 6
  %loadMem_4769fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4769fe = call %struct.Memory* @routine_jne_.L_476a9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4769fe, i8* %BRANCH_TAKEN, i64 157, i64 6, i64 6)
  store %struct.Memory* %call_4769fe, %struct.Memory** %MEMORY

  %loadBr_4769fe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4769fe = icmp eq i8 %loadBr_4769fe, 1
  br i1 %cmpBr_4769fe, label %block_.L_476a9b, label %block_476a04

block_476a04:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476a04	 Bytes: 3
  %loadMem_476a04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a04 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a04)
  store %struct.Memory* %call_476a04, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476a07	 Bytes: 3
  %loadMem_476a07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a07 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a07)
  store %struct.Memory* %call_476a07, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476a0a	 Bytes: 3
  %loadMem_476a0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a0a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a0a)
  store %struct.Memory* %call_476a0a, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476a0d	 Bytes: 3
  %loadMem_476a0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a0d = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a0d)
  store %struct.Memory* %call_476a0d, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rcx,1), %eax	 RIP: 476a10	 Bytes: 8
  %loadMem_476a10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a10 = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a10)
  store %struct.Memory* %call_476a10, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 476a18	 Bytes: 3
  %loadMem_476a18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a18 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a18)
  store %struct.Memory* %call_476a18, %struct.Memory** %MEMORY

  ; Code: je .L_476a9b	 RIP: 476a1b	 Bytes: 6
  %loadMem_476a1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a1b = call %struct.Memory* @routine_je_.L_476a9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a1b, i8* %BRANCH_TAKEN, i64 128, i64 6, i64 6)
  store %struct.Memory* %call_476a1b, %struct.Memory** %MEMORY

  %loadBr_476a1b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476a1b = icmp eq i8 %loadBr_476a1b, 1
  br i1 %cmpBr_476a1b, label %block_.L_476a9b, label %block_476a21

block_476a21:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476a21	 Bytes: 3
  %loadMem_476a21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a21 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a21)
  store %struct.Memory* %call_476a21, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476a24	 Bytes: 3
  %loadMem_476a24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a24 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a24)
  store %struct.Memory* %call_476a24, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 476a27	 Bytes: 3
  %loadMem_476a27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a27 = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a27)
  store %struct.Memory* %call_476a27, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476a2a	 Bytes: 3
  %loadMem_476a2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a2a = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a2a)
  store %struct.Memory* %call_476a2a, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476a2d	 Bytes: 8
  %loadMem_476a2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a2d = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a2d)
  store %struct.Memory* %call_476a2d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 476a35	 Bytes: 3
  %loadMem_476a35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a35 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a35)
  store %struct.Memory* %call_476a35, %struct.Memory** %MEMORY

  ; Code: je .L_476a9b	 RIP: 476a38	 Bytes: 6
  %loadMem_476a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a38 = call %struct.Memory* @routine_je_.L_476a9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a38, i8* %BRANCH_TAKEN, i64 99, i64 6, i64 6)
  store %struct.Memory* %call_476a38, %struct.Memory** %MEMORY

  %loadBr_476a38 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476a38 = icmp eq i8 %loadBr_476a38, 1
  br i1 %cmpBr_476a38, label %block_.L_476a9b, label %block_476a3e

block_476a3e:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476a3e	 Bytes: 3
  %loadMem_476a3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a3e = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a3e)
  store %struct.Memory* %call_476a3e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476a41	 Bytes: 3
  %loadMem_476a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a41 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a41)
  store %struct.Memory* %call_476a41, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 476a44	 Bytes: 3
  %loadMem_476a44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a44 = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a44)
  store %struct.Memory* %call_476a44, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476a47	 Bytes: 3
  %loadMem_476a47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a47 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a47)
  store %struct.Memory* %call_476a47, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476a4a	 Bytes: 8
  %loadMem_476a4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a4a = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a4a)
  store %struct.Memory* %call_476a4a, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe8(%rbp), %eax	 RIP: 476a52	 Bytes: 6
  %loadMem_476a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a52 = call %struct.Memory* @routine_cmpl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a52)
  store %struct.Memory* %call_476a52, %struct.Memory** %MEMORY

  ; Code: je .L_476a9b	 RIP: 476a58	 Bytes: 6
  %loadMem_476a58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a58 = call %struct.Memory* @routine_je_.L_476a9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a58, i8* %BRANCH_TAKEN, i64 67, i64 6, i64 6)
  store %struct.Memory* %call_476a58, %struct.Memory** %MEMORY

  %loadBr_476a58 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476a58 = icmp eq i8 %loadBr_476a58, 1
  br i1 %cmpBr_476a58, label %block_.L_476a9b, label %block_476a5e

block_476a5e:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476a5e	 Bytes: 3
  %loadMem_476a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a5e = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a5e)
  store %struct.Memory* %call_476a5e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476a61	 Bytes: 3
  %loadMem_476a61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a61 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a61)
  store %struct.Memory* %call_476a61, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 476a64	 Bytes: 3
  %loadMem_476a64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a64 = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a64)
  store %struct.Memory* %call_476a64, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476a67	 Bytes: 3
  %loadMem_476a67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a67 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a67)
  store %struct.Memory* %call_476a67, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476a6a	 Bytes: 8
  %loadMem_476a6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a6a = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a6a)
  store %struct.Memory* %call_476a6a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 476a72	 Bytes: 3
  %loadMem_476a72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a72 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a72)
  store %struct.Memory* %call_476a72, %struct.Memory** %MEMORY

  ; Code: je .L_476a9b	 RIP: 476a75	 Bytes: 6
  %loadMem_476a75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a75 = call %struct.Memory* @routine_je_.L_476a9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a75, i8* %BRANCH_TAKEN, i64 38, i64 6, i64 6)
  store %struct.Memory* %call_476a75, %struct.Memory** %MEMORY

  %loadBr_476a75 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476a75 = icmp eq i8 %loadBr_476a75, 1
  br i1 %cmpBr_476a75, label %block_.L_476a9b, label %block_476a7b

block_476a7b:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476a7b	 Bytes: 3
  %loadMem_476a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a7b = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a7b)
  store %struct.Memory* %call_476a7b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476a7e	 Bytes: 3
  %loadMem_476a7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a7e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a7e)
  store %struct.Memory* %call_476a7e, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 476a81	 Bytes: 3
  %loadMem_476a81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a81 = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a81)
  store %struct.Memory* %call_476a81, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476a84	 Bytes: 3
  %loadMem_476a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a84 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a84)
  store %struct.Memory* %call_476a84, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476a87	 Bytes: 8
  %loadMem_476a87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a87 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a87)
  store %struct.Memory* %call_476a87, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe8(%rbp), %eax	 RIP: 476a8f	 Bytes: 6
  %loadMem_476a8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a8f = call %struct.Memory* @routine_cmpl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a8f)
  store %struct.Memory* %call_476a8f, %struct.Memory** %MEMORY

  ; Code: jne .L_476ba3	 RIP: 476a95	 Bytes: 6
  %loadMem_476a95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a95 = call %struct.Memory* @routine_jne_.L_476ba3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a95, i8* %BRANCH_TAKEN, i64 270, i64 6, i64 6)
  store %struct.Memory* %call_476a95, %struct.Memory** %MEMORY

  %loadBr_476a95 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476a95 = icmp eq i8 %loadBr_476a95, 1
  br i1 %cmpBr_476a95, label %block_.L_476ba3, label %block_.L_476a9b

  ; Code: .L_476a9b:	 RIP: 476a9b	 Bytes: 0
block_.L_476a9b:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 476a9b	 Bytes: 3
  %loadMem_476a9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a9b = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a9b)
  store %struct.Memory* %call_476a9b, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476a9e	 Bytes: 3
  %loadMem_476a9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476a9e = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476a9e)
  store %struct.Memory* %call_476a9e, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476aa1	 Bytes: 3
  %loadMem_476aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476aa1 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476aa1)
  store %struct.Memory* %call_476aa1, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476aa4	 Bytes: 8
  %loadMem_476aa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476aa4 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476aa4)
  store %struct.Memory* %call_476aa4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 476aac	 Bytes: 3
  %loadMem_476aac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476aac = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476aac)
  store %struct.Memory* %call_476aac, %struct.Memory** %MEMORY

  ; Code: je .L_476baa	 RIP: 476aaf	 Bytes: 6
  %loadMem_476aaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476aaf = call %struct.Memory* @routine_je_.L_476baa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476aaf, i8* %BRANCH_TAKEN, i64 251, i64 6, i64 6)
  store %struct.Memory* %call_476aaf, %struct.Memory** %MEMORY

  %loadBr_476aaf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476aaf = icmp eq i8 %loadBr_476aaf, 1
  br i1 %cmpBr_476aaf, label %block_.L_476baa, label %block_476ab5

block_476ab5:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476ab5	 Bytes: 3
  %loadMem_476ab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ab5 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ab5)
  store %struct.Memory* %call_476ab5, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476ab8	 Bytes: 3
  %loadMem_476ab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ab8 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ab8)
  store %struct.Memory* %call_476ab8, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476abb	 Bytes: 3
  %loadMem_476abb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476abb = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476abb)
  store %struct.Memory* %call_476abb, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476abe	 Bytes: 8
  %loadMem_476abe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476abe = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476abe)
  store %struct.Memory* %call_476abe, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 476ac6	 Bytes: 3
  %loadMem_476ac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ac6 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ac6)
  store %struct.Memory* %call_476ac6, %struct.Memory** %MEMORY

  ; Code: jne .L_476baa	 RIP: 476ac9	 Bytes: 6
  %loadMem_476ac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ac9 = call %struct.Memory* @routine_jne_.L_476baa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ac9, i8* %BRANCH_TAKEN, i64 225, i64 6, i64 6)
  store %struct.Memory* %call_476ac9, %struct.Memory** %MEMORY

  %loadBr_476ac9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476ac9 = icmp eq i8 %loadBr_476ac9, 1
  br i1 %cmpBr_476ac9, label %block_.L_476baa, label %block_476acf

block_476acf:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476acf	 Bytes: 3
  %loadMem_476acf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476acf = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476acf)
  store %struct.Memory* %call_476acf, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476ad2	 Bytes: 3
  %loadMem_476ad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ad2 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ad2)
  store %struct.Memory* %call_476ad2, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476ad5	 Bytes: 3
  %loadMem_476ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ad5 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ad5)
  store %struct.Memory* %call_476ad5, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476ad8	 Bytes: 3
  %loadMem_476ad8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ad8 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ad8)
  store %struct.Memory* %call_476ad8, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476adb	 Bytes: 8
  %loadMem_476adb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476adb = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476adb)
  store %struct.Memory* %call_476adb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 476ae3	 Bytes: 3
  %loadMem_476ae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ae3 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ae3)
  store %struct.Memory* %call_476ae3, %struct.Memory** %MEMORY

  ; Code: je .L_476baa	 RIP: 476ae6	 Bytes: 6
  %loadMem_476ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ae6 = call %struct.Memory* @routine_je_.L_476baa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ae6, i8* %BRANCH_TAKEN, i64 196, i64 6, i64 6)
  store %struct.Memory* %call_476ae6, %struct.Memory** %MEMORY

  %loadBr_476ae6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476ae6 = icmp eq i8 %loadBr_476ae6, 1
  br i1 %cmpBr_476ae6, label %block_.L_476baa, label %block_476aec

block_476aec:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476aec	 Bytes: 3
  %loadMem_476aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476aec = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476aec)
  store %struct.Memory* %call_476aec, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476aef	 Bytes: 3
  %loadMem_476aef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476aef = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476aef)
  store %struct.Memory* %call_476aef, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476af2	 Bytes: 3
  %loadMem_476af2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476af2 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476af2)
  store %struct.Memory* %call_476af2, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476af5	 Bytes: 3
  %loadMem_476af5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476af5 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476af5)
  store %struct.Memory* %call_476af5, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476af8	 Bytes: 8
  %loadMem_476af8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476af8 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476af8)
  store %struct.Memory* %call_476af8, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe4(%rbp), %eax	 RIP: 476b00	 Bytes: 6
  %loadMem_476b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b00 = call %struct.Memory* @routine_cmpl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b00)
  store %struct.Memory* %call_476b00, %struct.Memory** %MEMORY

  ; Code: jne .L_476baa	 RIP: 476b06	 Bytes: 6
  %loadMem_476b06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b06 = call %struct.Memory* @routine_jne_.L_476baa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b06, i8* %BRANCH_TAKEN, i64 164, i64 6, i64 6)
  store %struct.Memory* %call_476b06, %struct.Memory** %MEMORY

  %loadBr_476b06 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476b06 = icmp eq i8 %loadBr_476b06, 1
  br i1 %cmpBr_476b06, label %block_.L_476baa, label %block_476b0c

block_476b0c:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476b0c	 Bytes: 3
  %loadMem_476b0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b0c = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b0c)
  store %struct.Memory* %call_476b0c, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476b0f	 Bytes: 3
  %loadMem_476b0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b0f = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b0f)
  store %struct.Memory* %call_476b0f, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476b12	 Bytes: 3
  %loadMem_476b12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b12 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b12)
  store %struct.Memory* %call_476b12, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476b15	 Bytes: 3
  %loadMem_476b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b15 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b15)
  store %struct.Memory* %call_476b15, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rcx,1), %eax	 RIP: 476b18	 Bytes: 8
  %loadMem_476b18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b18 = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b18)
  store %struct.Memory* %call_476b18, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 476b20	 Bytes: 3
  %loadMem_476b20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b20 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b20)
  store %struct.Memory* %call_476b20, %struct.Memory** %MEMORY

  ; Code: je .L_476baa	 RIP: 476b23	 Bytes: 6
  %loadMem_476b23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b23 = call %struct.Memory* @routine_je_.L_476baa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b23, i8* %BRANCH_TAKEN, i64 135, i64 6, i64 6)
  store %struct.Memory* %call_476b23, %struct.Memory** %MEMORY

  %loadBr_476b23 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476b23 = icmp eq i8 %loadBr_476b23, 1
  br i1 %cmpBr_476b23, label %block_.L_476baa, label %block_476b29

block_476b29:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476b29	 Bytes: 3
  %loadMem_476b29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b29 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b29)
  store %struct.Memory* %call_476b29, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476b2c	 Bytes: 3
  %loadMem_476b2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b2c = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b2c)
  store %struct.Memory* %call_476b2c, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 476b2f	 Bytes: 3
  %loadMem_476b2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b2f = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b2f)
  store %struct.Memory* %call_476b2f, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476b32	 Bytes: 3
  %loadMem_476b32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b32 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b32)
  store %struct.Memory* %call_476b32, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476b35	 Bytes: 8
  %loadMem_476b35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b35 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b35)
  store %struct.Memory* %call_476b35, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 476b3d	 Bytes: 3
  %loadMem_476b3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b3d = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b3d)
  store %struct.Memory* %call_476b3d, %struct.Memory** %MEMORY

  ; Code: je .L_476baa	 RIP: 476b40	 Bytes: 6
  %loadMem_476b40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b40 = call %struct.Memory* @routine_je_.L_476baa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b40, i8* %BRANCH_TAKEN, i64 106, i64 6, i64 6)
  store %struct.Memory* %call_476b40, %struct.Memory** %MEMORY

  %loadBr_476b40 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476b40 = icmp eq i8 %loadBr_476b40, 1
  br i1 %cmpBr_476b40, label %block_.L_476baa, label %block_476b46

block_476b46:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476b46	 Bytes: 3
  %loadMem_476b46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b46 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b46)
  store %struct.Memory* %call_476b46, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476b49	 Bytes: 3
  %loadMem_476b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b49 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b49)
  store %struct.Memory* %call_476b49, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 476b4c	 Bytes: 3
  %loadMem_476b4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b4c = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b4c)
  store %struct.Memory* %call_476b4c, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476b4f	 Bytes: 3
  %loadMem_476b4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b4f = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b4f)
  store %struct.Memory* %call_476b4f, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476b52	 Bytes: 8
  %loadMem_476b52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b52 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b52)
  store %struct.Memory* %call_476b52, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe8(%rbp), %eax	 RIP: 476b5a	 Bytes: 6
  %loadMem_476b5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b5a = call %struct.Memory* @routine_cmpl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b5a)
  store %struct.Memory* %call_476b5a, %struct.Memory** %MEMORY

  ; Code: je .L_476baa	 RIP: 476b60	 Bytes: 6
  %loadMem_476b60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b60 = call %struct.Memory* @routine_je_.L_476baa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b60, i8* %BRANCH_TAKEN, i64 74, i64 6, i64 6)
  store %struct.Memory* %call_476b60, %struct.Memory** %MEMORY

  %loadBr_476b60 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476b60 = icmp eq i8 %loadBr_476b60, 1
  br i1 %cmpBr_476b60, label %block_.L_476baa, label %block_476b66

block_476b66:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476b66	 Bytes: 3
  %loadMem_476b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b66 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b66)
  store %struct.Memory* %call_476b66, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476b69	 Bytes: 3
  %loadMem_476b69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b69 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b69)
  store %struct.Memory* %call_476b69, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 476b6c	 Bytes: 3
  %loadMem_476b6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b6c = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b6c)
  store %struct.Memory* %call_476b6c, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476b6f	 Bytes: 3
  %loadMem_476b6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b6f = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b6f)
  store %struct.Memory* %call_476b6f, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476b72	 Bytes: 8
  %loadMem_476b72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b72 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b72)
  store %struct.Memory* %call_476b72, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 476b7a	 Bytes: 3
  %loadMem_476b7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b7a = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b7a)
  store %struct.Memory* %call_476b7a, %struct.Memory** %MEMORY

  ; Code: je .L_476baa	 RIP: 476b7d	 Bytes: 6
  %loadMem_476b7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b7d = call %struct.Memory* @routine_je_.L_476baa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b7d, i8* %BRANCH_TAKEN, i64 45, i64 6, i64 6)
  store %struct.Memory* %call_476b7d, %struct.Memory** %MEMORY

  %loadBr_476b7d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476b7d = icmp eq i8 %loadBr_476b7d, 1
  br i1 %cmpBr_476b7d, label %block_.L_476baa, label %block_476b83

block_476b83:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 476b83	 Bytes: 3
  %loadMem_476b83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b83 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b83)
  store %struct.Memory* %call_476b83, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 476b86	 Bytes: 3
  %loadMem_476b86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b86 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b86)
  store %struct.Memory* %call_476b86, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 476b89	 Bytes: 3
  %loadMem_476b89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b89 = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b89)
  store %struct.Memory* %call_476b89, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476b8c	 Bytes: 3
  %loadMem_476b8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b8c = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b8c)
  store %struct.Memory* %call_476b8c, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476b8f	 Bytes: 8
  %loadMem_476b8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b8f = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b8f)
  store %struct.Memory* %call_476b8f, %struct.Memory** %MEMORY

  ; Code: cmpl -0xe8(%rbp), %eax	 RIP: 476b97	 Bytes: 6
  %loadMem_476b97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b97 = call %struct.Memory* @routine_cmpl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b97)
  store %struct.Memory* %call_476b97, %struct.Memory** %MEMORY

  ; Code: je .L_476baa	 RIP: 476b9d	 Bytes: 6
  %loadMem_476b9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476b9d = call %struct.Memory* @routine_je_.L_476baa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476b9d, i8* %BRANCH_TAKEN, i64 13, i64 6, i64 6)
  store %struct.Memory* %call_476b9d, %struct.Memory** %MEMORY

  %loadBr_476b9d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476b9d = icmp eq i8 %loadBr_476b9d, 1
  br i1 %cmpBr_476b9d, label %block_.L_476baa, label %block_.L_476ba3

  ; Code: .L_476ba3:	 RIP: 476ba3	 Bytes: 0
block_.L_476ba3:

  ; Code: movl $0x0, -0x34(%rbp)	 RIP: 476ba3	 Bytes: 7
  %loadMem_476ba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ba3 = call %struct.Memory* @routine_movl__0x0__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ba3)
  store %struct.Memory* %call_476ba3, %struct.Memory** %MEMORY

  ; Code: .L_476baa:	 RIP: 476baa	 Bytes: 0
  br label %block_.L_476baa
block_.L_476baa:

  ; Code: jmpq .L_476baf	 RIP: 476baa	 Bytes: 5
  %loadMem_476baa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476baa = call %struct.Memory* @routine_jmpq_.L_476baf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476baa, i64 5, i64 5)
  store %struct.Memory* %call_476baa, %struct.Memory** %MEMORY

  br label %block_.L_476baf

  ; Code: .L_476baf:	 RIP: 476baf	 Bytes: 0
block_.L_476baf:

  ; Code: jmpq .L_476bb4	 RIP: 476baf	 Bytes: 5
  %loadMem_476baf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476baf = call %struct.Memory* @routine_jmpq_.L_476bb4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476baf, i64 5, i64 5)
  store %struct.Memory* %call_476baf, %struct.Memory** %MEMORY

  br label %block_.L_476bb4

  ; Code: .L_476bb4:	 RIP: 476bb4	 Bytes: 0
block_.L_476bb4:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 476bb4	 Bytes: 3
  %loadMem_476bb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bb4 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bb4)
  store %struct.Memory* %call_476bb4, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476bb7	 Bytes: 3
  %loadMem_476bb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bb7 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bb7)
  store %struct.Memory* %call_476bb7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 476bba	 Bytes: 3
  %loadMem_476bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bba = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bba)
  store %struct.Memory* %call_476bba, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476722	 RIP: 476bbd	 Bytes: 5
  %loadMem_476bbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bbd = call %struct.Memory* @routine_jmpq_.L_476722(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bbd, i64 -1179, i64 5)
  store %struct.Memory* %call_476bbd, %struct.Memory** %MEMORY

  br label %block_.L_476722

  ; Code: .L_476bc2:	 RIP: 476bc2	 Bytes: 0
block_.L_476bc2:

  ; Code: jmpq .L_476bc7	 RIP: 476bc2	 Bytes: 5
  %loadMem_476bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bc2 = call %struct.Memory* @routine_jmpq_.L_476bc7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bc2, i64 5, i64 5)
  store %struct.Memory* %call_476bc2, %struct.Memory** %MEMORY

  br label %block_.L_476bc7

  ; Code: .L_476bc7:	 RIP: 476bc7	 Bytes: 0
block_.L_476bc7:

  ; Code: cmpl $0x1, -0x10(%rbp)	 RIP: 476bc7	 Bytes: 4
  %loadMem_476bc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bc7 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bc7)
  store %struct.Memory* %call_476bc7, %struct.Memory** %MEMORY

  ; Code: je .L_476be5	 RIP: 476bcb	 Bytes: 6
  %loadMem_476bcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bcb = call %struct.Memory* @routine_je_.L_476be5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bcb, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_476bcb, %struct.Memory** %MEMORY

  %loadBr_476bcb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476bcb = icmp eq i8 %loadBr_476bcb, 1
  br i1 %cmpBr_476bcb, label %block_.L_476be5, label %block_476bd1

block_476bd1:
  ; Code: cmpl $0x2, -0x10(%rbp)	 RIP: 476bd1	 Bytes: 4
  %loadMem_476bd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bd1 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bd1)
  store %struct.Memory* %call_476bd1, %struct.Memory** %MEMORY

  ; Code: jne .L_476de4	 RIP: 476bd5	 Bytes: 6
  %loadMem_476bd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bd5 = call %struct.Memory* @routine_jne_.L_476de4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bd5, i8* %BRANCH_TAKEN, i64 527, i64 6, i64 6)
  store %struct.Memory* %call_476bd5, %struct.Memory** %MEMORY

  %loadBr_476bd5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476bd5 = icmp eq i8 %loadBr_476bd5, 1
  br i1 %cmpBr_476bd5, label %block_.L_476de4, label %block_476bdb

block_476bdb:
  ; Code: cmpl $0x0, -0x34(%rbp)	 RIP: 476bdb	 Bytes: 4
  %loadMem_476bdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bdb = call %struct.Memory* @routine_cmpl__0x0__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bdb)
  store %struct.Memory* %call_476bdb, %struct.Memory** %MEMORY

  ; Code: je .L_476de4	 RIP: 476bdf	 Bytes: 6
  %loadMem_476bdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bdf = call %struct.Memory* @routine_je_.L_476de4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bdf, i8* %BRANCH_TAKEN, i64 517, i64 6, i64 6)
  store %struct.Memory* %call_476bdf, %struct.Memory** %MEMORY

  %loadBr_476bdf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476bdf = icmp eq i8 %loadBr_476bdf, 1
  br i1 %cmpBr_476bdf, label %block_.L_476de4, label %block_.L_476be5

  ; Code: .L_476be5:	 RIP: 476be5	 Bytes: 0
block_.L_476be5:

  ; Code: callq .start_draw_board	 RIP: 476be5	 Bytes: 5
  %loadMem1_476be5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_476be5 = call %struct.Memory* @routine_callq_.start_draw_board(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_476be5, i64 -8821, i64 5, i64 5)
  store %struct.Memory* %call1_476be5, %struct.Memory** %MEMORY

  %loadMem2_476be5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_476be5 = load i64, i64* %3
  %call2_476be5 = call %struct.Memory* @sub_474970.start_draw_board(%struct.State* %0, i64  %loadPC_476be5, %struct.Memory* %loadMem2_476be5)
  store %struct.Memory* %call2_476be5, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x24(%rbp)	 RIP: 476bea	 Bytes: 7
  %loadMem_476bea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bea = call %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bea)
  store %struct.Memory* %call_476bea, %struct.Memory** %MEMORY

  ; Code: .L_476bf1:	 RIP: 476bf1	 Bytes: 0
  br label %block_.L_476bf1
block_.L_476bf1:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 476bf1	 Bytes: 3
  %loadMem_476bf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bf1 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bf1)
  store %struct.Memory* %call_476bf1, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 476bf4	 Bytes: 7
  %loadMem_476bf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bf4 = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bf4)
  store %struct.Memory* %call_476bf4, %struct.Memory** %MEMORY

  ; Code: jge .L_476ddf	 RIP: 476bfb	 Bytes: 6
  %loadMem_476bfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476bfb = call %struct.Memory* @routine_jge_.L_476ddf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476bfb, i8* %BRANCH_TAKEN, i64 484, i64 6, i64 6)
  store %struct.Memory* %call_476bfb, %struct.Memory** %MEMORY

  %loadBr_476bfb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476bfb = icmp eq i8 %loadBr_476bfb, 1
  br i1 %cmpBr_476bfb, label %block_.L_476ddf, label %block_476c01

block_476c01:
  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 476c01	 Bytes: 7
  %loadMem_476c01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c01 = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c01)
  store %struct.Memory* %call_476c01, %struct.Memory** %MEMORY

  ; Code: .L_476c08:	 RIP: 476c08	 Bytes: 0
  br label %block_.L_476c08
block_.L_476c08:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 476c08	 Bytes: 3
  %loadMem_476c08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c08 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c08)
  store %struct.Memory* %call_476c08, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 476c0b	 Bytes: 7
  %loadMem_476c0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c0b = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c0b)
  store %struct.Memory* %call_476c0b, %struct.Memory** %MEMORY

  ; Code: jge .L_476dcc	 RIP: 476c12	 Bytes: 6
  %loadMem_476c12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c12 = call %struct.Memory* @routine_jge_.L_476dcc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c12, i8* %BRANCH_TAKEN, i64 442, i64 6, i64 6)
  store %struct.Memory* %call_476c12, %struct.Memory** %MEMORY

  %loadBr_476c12 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476c12 = icmp eq i8 %loadBr_476c12, 1
  br i1 %cmpBr_476c12, label %block_.L_476dcc, label %block_476c18

block_476c18:
  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 476c18	 Bytes: 4
  %loadMem_476c18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c18 = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c18)
  store %struct.Memory* %call_476c18, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 476c1c	 Bytes: 3
  %loadMem_476c1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c1c = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c1c)
  store %struct.Memory* %call_476c1c, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 476c1f	 Bytes: 3
  %loadMem_476c1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c1f = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c1f)
  store %struct.Memory* %call_476c1f, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476c22	 Bytes: 3
  %loadMem_476c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c22 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c22)
  store %struct.Memory* %call_476c22, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, -0x280(%rbp,%rcx,1)	 RIP: 476c25	 Bytes: 8
  %loadMem_476c25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c25 = call %struct.Memory* @routine_cmpb__0x0__MINUS0x280__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c25)
  store %struct.Memory* %call_476c25, %struct.Memory** %MEMORY

  ; Code: je .L_476ca1	 RIP: 476c2d	 Bytes: 6
  %loadMem_476c2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c2d = call %struct.Memory* @routine_je_.L_476ca1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c2d, i8* %BRANCH_TAKEN, i64 116, i64 6, i64 6)
  store %struct.Memory* %call_476c2d, %struct.Memory** %MEMORY

  %loadBr_476c2d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476c2d = icmp eq i8 %loadBr_476c2d, 1
  br i1 %cmpBr_476c2d, label %block_.L_476ca1, label %block_476c33

block_476c33:
  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 476c33	 Bytes: 4
  %loadMem_476c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c33 = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c33)
  store %struct.Memory* %call_476c33, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 476c37	 Bytes: 3
  %loadMem_476c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c37 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c37)
  store %struct.Memory* %call_476c37, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 476c3a	 Bytes: 3
  %loadMem_476c3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c3a = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c3a)
  store %struct.Memory* %call_476c3a, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476c3d	 Bytes: 3
  %loadMem_476c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c3d = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c3d)
  store %struct.Memory* %call_476c3d, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rcx,1), %eax	 RIP: 476c40	 Bytes: 8
  %loadMem_476c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c40 = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c40)
  store %struct.Memory* %call_476c40, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 476c48	 Bytes: 3
  %loadMem_476c48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c48 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c48)
  store %struct.Memory* %call_476c48, %struct.Memory** %MEMORY

  ; Code: jne .L_476c60	 RIP: 476c4b	 Bytes: 6
  %loadMem_476c4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c4b = call %struct.Memory* @routine_jne_.L_476c60(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c4b, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_476c4b, %struct.Memory** %MEMORY

  %loadBr_476c4b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476c4b = icmp eq i8 %loadBr_476c4b, 1
  br i1 %cmpBr_476c4b, label %block_.L_476c60, label %block_476c51

block_476c51:
  ; Code: movl $0x1, -0x46c(%rbp)	 RIP: 476c51	 Bytes: 10
  %loadMem_476c51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c51 = call %struct.Memory* @routine_movl__0x1__MINUS0x46c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c51)
  store %struct.Memory* %call_476c51, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476c9c	 RIP: 476c5b	 Bytes: 5
  %loadMem_476c5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c5b = call %struct.Memory* @routine_jmpq_.L_476c9c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c5b, i64 65, i64 5)
  store %struct.Memory* %call_476c5b, %struct.Memory** %MEMORY

  br label %block_.L_476c9c

  ; Code: .L_476c60:	 RIP: 476c60	 Bytes: 0
block_.L_476c60:

  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 476c60	 Bytes: 4
  %loadMem_476c60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c60 = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c60)
  store %struct.Memory* %call_476c60, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 476c64	 Bytes: 3
  %loadMem_476c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c64 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c64)
  store %struct.Memory* %call_476c64, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 476c67	 Bytes: 3
  %loadMem_476c67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c67 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c67)
  store %struct.Memory* %call_476c67, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476c6a	 Bytes: 3
  %loadMem_476c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c6a = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c6a)
  store %struct.Memory* %call_476c6a, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rcx,1), %eax	 RIP: 476c6d	 Bytes: 8
  %loadMem_476c6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c6d = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c6d)
  store %struct.Memory* %call_476c6d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 476c75	 Bytes: 3
  %loadMem_476c75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c75 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c75)
  store %struct.Memory* %call_476c75, %struct.Memory** %MEMORY

  ; Code: jne .L_476c8d	 RIP: 476c78	 Bytes: 6
  %loadMem_476c78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c78 = call %struct.Memory* @routine_jne_.L_476c8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c78, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_476c78, %struct.Memory** %MEMORY

  %loadBr_476c78 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476c78 = icmp eq i8 %loadBr_476c78, 1
  br i1 %cmpBr_476c78, label %block_.L_476c8d, label %block_476c7e

block_476c7e:
  ; Code: movl $0x3, -0x46c(%rbp)	 RIP: 476c7e	 Bytes: 10
  %loadMem_476c7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c7e = call %struct.Memory* @routine_movl__0x3__MINUS0x46c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c7e)
  store %struct.Memory* %call_476c7e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476c97	 RIP: 476c88	 Bytes: 5
  %loadMem_476c88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c88 = call %struct.Memory* @routine_jmpq_.L_476c97(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c88, i64 15, i64 5)
  store %struct.Memory* %call_476c88, %struct.Memory** %MEMORY

  br label %block_.L_476c97

  ; Code: .L_476c8d:	 RIP: 476c8d	 Bytes: 0
block_.L_476c8d:

  ; Code: movl $0x2, -0x46c(%rbp)	 RIP: 476c8d	 Bytes: 10
  %loadMem_476c8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c8d = call %struct.Memory* @routine_movl__0x2__MINUS0x46c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c8d)
  store %struct.Memory* %call_476c8d, %struct.Memory** %MEMORY

  ; Code: .L_476c97:	 RIP: 476c97	 Bytes: 0
  br label %block_.L_476c97
block_.L_476c97:

  ; Code: jmpq .L_476c9c	 RIP: 476c97	 Bytes: 5
  %loadMem_476c97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c97 = call %struct.Memory* @routine_jmpq_.L_476c9c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c97, i64 5, i64 5)
  store %struct.Memory* %call_476c97, %struct.Memory** %MEMORY

  br label %block_.L_476c9c

  ; Code: .L_476c9c:	 RIP: 476c9c	 Bytes: 0
block_.L_476c9c:

  ; Code: jmpq .L_476d0f	 RIP: 476c9c	 Bytes: 5
  %loadMem_476c9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476c9c = call %struct.Memory* @routine_jmpq_.L_476d0f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476c9c, i64 115, i64 5)
  store %struct.Memory* %call_476c9c, %struct.Memory** %MEMORY

  br label %block_.L_476d0f

  ; Code: .L_476ca1:	 RIP: 476ca1	 Bytes: 0
block_.L_476ca1:

  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 476ca1	 Bytes: 4
  %loadMem_476ca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ca1 = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ca1)
  store %struct.Memory* %call_476ca1, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 476ca5	 Bytes: 3
  %loadMem_476ca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ca5 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ca5)
  store %struct.Memory* %call_476ca5, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 476ca8	 Bytes: 3
  %loadMem_476ca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ca8 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ca8)
  store %struct.Memory* %call_476ca8, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476cab	 Bytes: 3
  %loadMem_476cab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cab = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cab)
  store %struct.Memory* %call_476cab, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rcx,1), %eax	 RIP: 476cae	 Bytes: 8
  %loadMem_476cae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cae = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cae)
  store %struct.Memory* %call_476cae, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 476cb6	 Bytes: 3
  %loadMem_476cb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cb6 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cb6)
  store %struct.Memory* %call_476cb6, %struct.Memory** %MEMORY

  ; Code: jne .L_476cce	 RIP: 476cb9	 Bytes: 6
  %loadMem_476cb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cb9 = call %struct.Memory* @routine_jne_.L_476cce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cb9, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_476cb9, %struct.Memory** %MEMORY

  %loadBr_476cb9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476cb9 = icmp eq i8 %loadBr_476cb9, 1
  br i1 %cmpBr_476cb9, label %block_.L_476cce, label %block_476cbf

block_476cbf:
  ; Code: movl $0x4, -0x46c(%rbp)	 RIP: 476cbf	 Bytes: 10
  %loadMem_476cbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cbf = call %struct.Memory* @routine_movl__0x4__MINUS0x46c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cbf)
  store %struct.Memory* %call_476cbf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476d0a	 RIP: 476cc9	 Bytes: 5
  %loadMem_476cc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cc9 = call %struct.Memory* @routine_jmpq_.L_476d0a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cc9, i64 65, i64 5)
  store %struct.Memory* %call_476cc9, %struct.Memory** %MEMORY

  br label %block_.L_476d0a

  ; Code: .L_476cce:	 RIP: 476cce	 Bytes: 0
block_.L_476cce:

  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 476cce	 Bytes: 4
  %loadMem_476cce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cce = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cce)
  store %struct.Memory* %call_476cce, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 476cd2	 Bytes: 3
  %loadMem_476cd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cd2 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cd2)
  store %struct.Memory* %call_476cd2, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 476cd5	 Bytes: 3
  %loadMem_476cd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cd5 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cd5)
  store %struct.Memory* %call_476cd5, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476cd8	 Bytes: 3
  %loadMem_476cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cd8 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cd8)
  store %struct.Memory* %call_476cd8, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rcx,1), %eax	 RIP: 476cdb	 Bytes: 8
  %loadMem_476cdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cdb = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cdb)
  store %struct.Memory* %call_476cdb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 476ce3	 Bytes: 3
  %loadMem_476ce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ce3 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ce3)
  store %struct.Memory* %call_476ce3, %struct.Memory** %MEMORY

  ; Code: jne .L_476cfb	 RIP: 476ce6	 Bytes: 6
  %loadMem_476ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ce6 = call %struct.Memory* @routine_jne_.L_476cfb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ce6, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_476ce6, %struct.Memory** %MEMORY

  %loadBr_476ce6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476ce6 = icmp eq i8 %loadBr_476ce6, 1
  br i1 %cmpBr_476ce6, label %block_.L_476cfb, label %block_476cec

block_476cec:
  ; Code: movl $0x6, -0x46c(%rbp)	 RIP: 476cec	 Bytes: 10
  %loadMem_476cec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cec = call %struct.Memory* @routine_movl__0x6__MINUS0x46c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cec)
  store %struct.Memory* %call_476cec, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476d05	 RIP: 476cf6	 Bytes: 5
  %loadMem_476cf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cf6 = call %struct.Memory* @routine_jmpq_.L_476d05(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cf6, i64 15, i64 5)
  store %struct.Memory* %call_476cf6, %struct.Memory** %MEMORY

  br label %block_.L_476d05

  ; Code: .L_476cfb:	 RIP: 476cfb	 Bytes: 0
block_.L_476cfb:

  ; Code: movl $0x0, -0x46c(%rbp)	 RIP: 476cfb	 Bytes: 10
  %loadMem_476cfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476cfb = call %struct.Memory* @routine_movl__0x0__MINUS0x46c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476cfb)
  store %struct.Memory* %call_476cfb, %struct.Memory** %MEMORY

  ; Code: .L_476d05:	 RIP: 476d05	 Bytes: 0
  br label %block_.L_476d05
block_.L_476d05:

  ; Code: jmpq .L_476d0a	 RIP: 476d05	 Bytes: 5
  %loadMem_476d05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d05 = call %struct.Memory* @routine_jmpq_.L_476d0a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d05, i64 5, i64 5)
  store %struct.Memory* %call_476d05, %struct.Memory** %MEMORY

  br label %block_.L_476d0a

  ; Code: .L_476d0a:	 RIP: 476d0a	 Bytes: 0
block_.L_476d0a:

  ; Code: jmpq .L_476d0f	 RIP: 476d0a	 Bytes: 5
  %loadMem_476d0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d0a = call %struct.Memory* @routine_jmpq_.L_476d0f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d0a, i64 5, i64 5)
  store %struct.Memory* %call_476d0a, %struct.Memory** %MEMORY

  br label %block_.L_476d0f

  ; Code: .L_476d0f:	 RIP: 476d0f	 Bytes: 0
block_.L_476d0f:

  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 476d0f	 Bytes: 4
  %loadMem_476d0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d0f = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d0f)
  store %struct.Memory* %call_476d0f, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 476d13	 Bytes: 3
  %loadMem_476d13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d13 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d13)
  store %struct.Memory* %call_476d13, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 476d16	 Bytes: 3
  %loadMem_476d16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d16 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d16)
  store %struct.Memory* %call_476d16, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476d19	 Bytes: 3
  %loadMem_476d19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d19 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d19)
  store %struct.Memory* %call_476d19, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476d1c	 Bytes: 8
  %loadMem_476d1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d1c = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d1c)
  store %struct.Memory* %call_476d1c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 476d24	 Bytes: 3
  %loadMem_476d24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d24 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d24)
  store %struct.Memory* %call_476d24, %struct.Memory** %MEMORY

  ; Code: jne .L_476d3c	 RIP: 476d27	 Bytes: 6
  %loadMem_476d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d27 = call %struct.Memory* @routine_jne_.L_476d3c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d27, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_476d27, %struct.Memory** %MEMORY

  %loadBr_476d27 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476d27 = icmp eq i8 %loadBr_476d27, 1
  br i1 %cmpBr_476d27, label %block_.L_476d3c, label %block_476d2d

block_476d2d:
  ; Code: movl $0x58, -0x470(%rbp)	 RIP: 476d2d	 Bytes: 10
  %loadMem_476d2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d2d = call %struct.Memory* @routine_movl__0x58__MINUS0x470__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d2d)
  store %struct.Memory* %call_476d2d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476da7	 RIP: 476d37	 Bytes: 5
  %loadMem_476d37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d37 = call %struct.Memory* @routine_jmpq_.L_476da7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d37, i64 112, i64 5)
  store %struct.Memory* %call_476d37, %struct.Memory** %MEMORY

  br label %block_.L_476da7

  ; Code: .L_476d3c:	 RIP: 476d3c	 Bytes: 0
block_.L_476d3c:

  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 476d3c	 Bytes: 4
  %loadMem_476d3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d3c = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d3c)
  store %struct.Memory* %call_476d3c, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 476d40	 Bytes: 3
  %loadMem_476d40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d40 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d40)
  store %struct.Memory* %call_476d40, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 476d43	 Bytes: 3
  %loadMem_476d43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d43 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d43)
  store %struct.Memory* %call_476d43, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476d46	 Bytes: 3
  %loadMem_476d46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d46 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d46)
  store %struct.Memory* %call_476d46, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 476d49	 Bytes: 8
  %loadMem_476d49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d49 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d49)
  store %struct.Memory* %call_476d49, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %eax	 RIP: 476d51	 Bytes: 3
  %loadMem_476d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d51 = call %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d51)
  store %struct.Memory* %call_476d51, %struct.Memory** %MEMORY

  ; Code: jne .L_476d69	 RIP: 476d54	 Bytes: 6
  %loadMem_476d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d54 = call %struct.Memory* @routine_jne_.L_476d69(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d54, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_476d54, %struct.Memory** %MEMORY

  %loadBr_476d54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476d54 = icmp eq i8 %loadBr_476d54, 1
  br i1 %cmpBr_476d54, label %block_.L_476d69, label %block_476d5a

block_476d5a:
  ; Code: movl $0x4f, -0x470(%rbp)	 RIP: 476d5a	 Bytes: 10
  %loadMem_476d5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d5a = call %struct.Memory* @routine_movl__0x4f__MINUS0x470__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d5a)
  store %struct.Memory* %call_476d5a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476da2	 RIP: 476d64	 Bytes: 5
  %loadMem_476d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d64 = call %struct.Memory* @routine_jmpq_.L_476da2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d64, i64 62, i64 5)
  store %struct.Memory* %call_476d64, %struct.Memory** %MEMORY

  br label %block_.L_476da2

  ; Code: .L_476d69:	 RIP: 476d69	 Bytes: 0
block_.L_476d69:

  ; Code: imull $0x14, -0x24(%rbp), %eax	 RIP: 476d69	 Bytes: 4
  %loadMem_476d69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d69 = call %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d69)
  store %struct.Memory* %call_476d69, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 476d6d	 Bytes: 3
  %loadMem_476d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d6d = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d6d)
  store %struct.Memory* %call_476d6d, %struct.Memory** %MEMORY

  ; Code: addl -0x28(%rbp), %eax	 RIP: 476d70	 Bytes: 3
  %loadMem_476d70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d70 = call %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d70)
  store %struct.Memory* %call_476d70, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 476d73	 Bytes: 3
  %loadMem_476d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d73 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d73)
  store %struct.Memory* %call_476d73, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, -0x410(%rbp,%rcx,1)	 RIP: 476d76	 Bytes: 8
  %loadMem_476d76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d76 = call %struct.Memory* @routine_cmpb__0x0__MINUS0x410__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d76)
  store %struct.Memory* %call_476d76, %struct.Memory** %MEMORY

  ; Code: je .L_476d93	 RIP: 476d7e	 Bytes: 6
  %loadMem_476d7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d7e = call %struct.Memory* @routine_je_.L_476d93(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d7e, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_476d7e, %struct.Memory** %MEMORY

  %loadBr_476d7e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476d7e = icmp eq i8 %loadBr_476d7e, 1
  br i1 %cmpBr_476d7e, label %block_.L_476d93, label %block_476d84

block_476d84:
  ; Code: movl $0x2a, -0x470(%rbp)	 RIP: 476d84	 Bytes: 10
  %loadMem_476d84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d84 = call %struct.Memory* @routine_movl__0x2a__MINUS0x470__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d84)
  store %struct.Memory* %call_476d84, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476d9d	 RIP: 476d8e	 Bytes: 5
  %loadMem_476d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d8e = call %struct.Memory* @routine_jmpq_.L_476d9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d8e, i64 15, i64 5)
  store %struct.Memory* %call_476d8e, %struct.Memory** %MEMORY

  br label %block_.L_476d9d

  ; Code: .L_476d93:	 RIP: 476d93	 Bytes: 0
block_.L_476d93:

  ; Code: movl $0x2e, -0x470(%rbp)	 RIP: 476d93	 Bytes: 10
  %loadMem_476d93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d93 = call %struct.Memory* @routine_movl__0x2e__MINUS0x470__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d93)
  store %struct.Memory* %call_476d93, %struct.Memory** %MEMORY

  ; Code: .L_476d9d:	 RIP: 476d9d	 Bytes: 0
  br label %block_.L_476d9d
block_.L_476d9d:

  ; Code: jmpq .L_476da2	 RIP: 476d9d	 Bytes: 5
  %loadMem_476d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476d9d = call %struct.Memory* @routine_jmpq_.L_476da2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476d9d, i64 5, i64 5)
  store %struct.Memory* %call_476d9d, %struct.Memory** %MEMORY

  br label %block_.L_476da2

  ; Code: .L_476da2:	 RIP: 476da2	 Bytes: 0
block_.L_476da2:

  ; Code: jmpq .L_476da7	 RIP: 476da2	 Bytes: 5
  %loadMem_476da2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476da2 = call %struct.Memory* @routine_jmpq_.L_476da7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476da2, i64 5, i64 5)
  store %struct.Memory* %call_476da2, %struct.Memory** %MEMORY

  br label %block_.L_476da7

  ; Code: .L_476da7:	 RIP: 476da7	 Bytes: 0
block_.L_476da7:

  ; Code: movl -0x24(%rbp), %edi	 RIP: 476da7	 Bytes: 3
  %loadMem_476da7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476da7 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476da7)
  store %struct.Memory* %call_476da7, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %esi	 RIP: 476daa	 Bytes: 3
  %loadMem_476daa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476daa = call %struct.Memory* @routine_movl_MINUS0x28__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476daa)
  store %struct.Memory* %call_476daa, %struct.Memory** %MEMORY

  ; Code: movl -0x470(%rbp), %edx	 RIP: 476dad	 Bytes: 6
  %loadMem_476dad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476dad = call %struct.Memory* @routine_movl_MINUS0x470__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476dad)
  store %struct.Memory* %call_476dad, %struct.Memory** %MEMORY

  ; Code: movl -0x46c(%rbp), %ecx	 RIP: 476db3	 Bytes: 6
  %loadMem_476db3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476db3 = call %struct.Memory* @routine_movl_MINUS0x46c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476db3)
  store %struct.Memory* %call_476db3, %struct.Memory** %MEMORY

  ; Code: callq .draw_color_char	 RIP: 476db9	 Bytes: 5
  %loadMem1_476db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_476db9 = call %struct.Memory* @routine_callq_.draw_color_char(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_476db9, i64 -9113, i64 5, i64 5)
  store %struct.Memory* %call1_476db9, %struct.Memory** %MEMORY

  %loadMem2_476db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_476db9 = load i64, i64* %3
  %call2_476db9 = call %struct.Memory* @sub_474a20.draw_color_char(%struct.State* %0, i64  %loadPC_476db9, %struct.Memory* %loadMem2_476db9)
  store %struct.Memory* %call2_476db9, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %eax	 RIP: 476dbe	 Bytes: 3
  %loadMem_476dbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476dbe = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476dbe)
  store %struct.Memory* %call_476dbe, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476dc1	 Bytes: 3
  %loadMem_476dc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476dc1 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476dc1)
  store %struct.Memory* %call_476dc1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 476dc4	 Bytes: 3
  %loadMem_476dc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476dc4 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476dc4)
  store %struct.Memory* %call_476dc4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476c08	 RIP: 476dc7	 Bytes: 5
  %loadMem_476dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476dc7 = call %struct.Memory* @routine_jmpq_.L_476c08(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476dc7, i64 -447, i64 5)
  store %struct.Memory* %call_476dc7, %struct.Memory** %MEMORY

  br label %block_.L_476c08

  ; Code: .L_476dcc:	 RIP: 476dcc	 Bytes: 0
block_.L_476dcc:

  ; Code: jmpq .L_476dd1	 RIP: 476dcc	 Bytes: 5
  %loadMem_476dcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476dcc = call %struct.Memory* @routine_jmpq_.L_476dd1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476dcc, i64 5, i64 5)
  store %struct.Memory* %call_476dcc, %struct.Memory** %MEMORY

  br label %block_.L_476dd1

  ; Code: .L_476dd1:	 RIP: 476dd1	 Bytes: 0
block_.L_476dd1:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 476dd1	 Bytes: 3
  %loadMem_476dd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476dd1 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476dd1)
  store %struct.Memory* %call_476dd1, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476dd4	 Bytes: 3
  %loadMem_476dd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476dd4 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476dd4)
  store %struct.Memory* %call_476dd4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 476dd7	 Bytes: 3
  %loadMem_476dd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476dd7 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476dd7)
  store %struct.Memory* %call_476dd7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476bf1	 RIP: 476dda	 Bytes: 5
  %loadMem_476dda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476dda = call %struct.Memory* @routine_jmpq_.L_476bf1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476dda, i64 -489, i64 5)
  store %struct.Memory* %call_476dda, %struct.Memory** %MEMORY

  br label %block_.L_476bf1

  ; Code: .L_476ddf:	 RIP: 476ddf	 Bytes: 0
block_.L_476ddf:

  ; Code: callq .end_draw_board	 RIP: 476ddf	 Bytes: 5
  %loadMem1_476ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_476ddf = call %struct.Memory* @routine_callq_.end_draw_board(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_476ddf, i64 -8255, i64 5, i64 5)
  store %struct.Memory* %call1_476ddf, %struct.Memory** %MEMORY

  %loadMem2_476ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_476ddf = load i64, i64* %3
  %call2_476ddf = call %struct.Memory* @sub_474da0.end_draw_board(%struct.State* %0, i64  %loadPC_476ddf, %struct.Memory* %loadMem2_476ddf)
  store %struct.Memory* %call2_476ddf, %struct.Memory** %MEMORY

  ; Code: .L_476de4:	 RIP: 476de4	 Bytes: 0
  br label %block_.L_476de4
block_.L_476de4:

  ; Code: cmpl $0x0, -0xc(%rbp)	 RIP: 476de4	 Bytes: 4
  %loadMem_476de4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476de4 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476de4)
  store %struct.Memory* %call_476de4, %struct.Memory** %MEMORY

  ; Code: jne .L_476e9b	 RIP: 476de8	 Bytes: 6
  %loadMem_476de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476de8 = call %struct.Memory* @routine_jne_.L_476e9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476de8, i8* %BRANCH_TAKEN, i64 179, i64 6, i64 6)
  store %struct.Memory* %call_476de8, %struct.Memory** %MEMORY

  %loadBr_476de8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476de8 = icmp eq i8 %loadBr_476de8, 1
  br i1 %cmpBr_476de8, label %block_.L_476e9b, label %block_476dee

block_476dee:
  ; Code: cmpl $0x0, -0x34(%rbp)	 RIP: 476dee	 Bytes: 4
  %loadMem_476dee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476dee = call %struct.Memory* @routine_cmpl__0x0__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476dee)
  store %struct.Memory* %call_476dee, %struct.Memory** %MEMORY

  ; Code: je .L_476e9b	 RIP: 476df2	 Bytes: 6
  %loadMem_476df2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476df2 = call %struct.Memory* @routine_je_.L_476e9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476df2, i8* %BRANCH_TAKEN, i64 169, i64 6, i64 6)
  store %struct.Memory* %call_476df2, %struct.Memory** %MEMORY

  %loadBr_476df2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476df2 = icmp eq i8 %loadBr_476df2, 1
  br i1 %cmpBr_476df2, label %block_.L_476e9b, label %block_476df8

block_476df8:
  ; Code: cmpl $0xa, 0xb63050	 RIP: 476df8	 Bytes: 8
  %loadMem_476df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476df8 = call %struct.Memory* @routine_cmpl__0xa__0xb63050(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476df8)
  store %struct.Memory* %call_476df8, %struct.Memory** %MEMORY

  ; Code: jge .L_476e9b	 RIP: 476e00	 Bytes: 6
  %loadMem_476e00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e00 = call %struct.Memory* @routine_jge_.L_476e9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e00, i8* %BRANCH_TAKEN, i64 155, i64 6, i64 6)
  store %struct.Memory* %call_476e00, %struct.Memory** %MEMORY

  %loadBr_476e00 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476e00 = icmp eq i8 %loadBr_476e00, 1
  br i1 %cmpBr_476e00, label %block_.L_476e9b, label %block_476e06

block_476e06:
  ; Code: movq $0xb44530, %rax	 RIP: 476e06	 Bytes: 10
  %loadMem_476e06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e06 = call %struct.Memory* @routine_movq__0xb44530___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e06)
  store %struct.Memory* %call_476e06, %struct.Memory** %MEMORY

  ; Code: movq $0xb4bd20, %rcx	 RIP: 476e10	 Bytes: 10
  %loadMem_476e10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e10 = call %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e10)
  store %struct.Memory* %call_476e10, %struct.Memory** %MEMORY

  ; Code: movl $0x190, %edx	 RIP: 476e1a	 Bytes: 5
  %loadMem_476e1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e1a = call %struct.Memory* @routine_movl__0x190___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e1a)
  store %struct.Memory* %call_476e1a, %struct.Memory** %MEMORY

  ; Code: leaq -0x410(%rbp), %rsi	 RIP: 476e1f	 Bytes: 7
  %loadMem_476e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e1f = call %struct.Memory* @routine_leaq_MINUS0x410__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e1f)
  store %struct.Memory* %call_476e1f, %struct.Memory** %MEMORY

  ; Code: movslq 0xb63050, %rdi	 RIP: 476e26	 Bytes: 8
  %loadMem_476e26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e26 = call %struct.Memory* @routine_movslq_0xb63050___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e26)
  store %struct.Memory* %call_476e26, %struct.Memory** %MEMORY

  ; Code: imulq $0x194, %rdi, %rdi	 RIP: 476e2e	 Bytes: 7
  %loadMem_476e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e2e = call %struct.Memory* @routine_imulq__0x194___rdi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e2e)
  store %struct.Memory* %call_476e2e, %struct.Memory** %MEMORY

  ; Code: movq %rax, %r8	 RIP: 476e35	 Bytes: 3
  %loadMem_476e35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e35 = call %struct.Memory* @routine_movq__rax___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e35)
  store %struct.Memory* %call_476e35, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %r8	 RIP: 476e38	 Bytes: 3
  %loadMem_476e38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e38 = call %struct.Memory* @routine_addq__rdi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e38)
  store %struct.Memory* %call_476e38, %struct.Memory** %MEMORY

  ; Code: addq $0x4, %r8	 RIP: 476e3b	 Bytes: 4
  %loadMem_476e3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e3b = call %struct.Memory* @routine_addq__0x4___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e3b)
  store %struct.Memory* %call_476e3b, %struct.Memory** %MEMORY

  ; Code: movq %r8, %rdi	 RIP: 476e3f	 Bytes: 3
  %loadMem_476e3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e3f = call %struct.Memory* @routine_movq__r8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e3f)
  store %struct.Memory* %call_476e3f, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x4c8(%rbp)	 RIP: 476e42	 Bytes: 7
  %loadMem_476e42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e42 = call %struct.Memory* @routine_movq__rax__MINUS0x4c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e42)
  store %struct.Memory* %call_476e42, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x4d0(%rbp)	 RIP: 476e49	 Bytes: 7
  %loadMem_476e49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e49 = call %struct.Memory* @routine_movq__rcx__MINUS0x4d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e49)
  store %struct.Memory* %call_476e49, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 476e50	 Bytes: 5
  %loadMem1_476e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_476e50 = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_476e50, i64 -482656, i64 5, i64 5)
  store %struct.Memory* %call1_476e50, %struct.Memory** %MEMORY

  %loadMem2_476e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_476e50 = load i64, i64* %3
  %call2_476e50 = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_476e50, %struct.Memory* %loadMem2_476e50)
  store %struct.Memory* %call2_476e50, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rax	 RIP: 476e55	 Bytes: 4
  %loadMem_476e55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e55 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e55)
  store %struct.Memory* %call_476e55, %struct.Memory** %MEMORY

  ; Code: imulq $0x4c, %rax, %rax	 RIP: 476e59	 Bytes: 4
  %loadMem_476e59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e59 = call %struct.Memory* @routine_imulq__0x4c___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e59)
  store %struct.Memory* %call_476e59, %struct.Memory** %MEMORY

  ; Code: movq -0x4d0(%rbp), %rcx	 RIP: 476e5d	 Bytes: 7
  %loadMem_476e5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e5d = call %struct.Memory* @routine_movq_MINUS0x4d0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e5d)
  store %struct.Memory* %call_476e5d, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 476e64	 Bytes: 3
  %loadMem_476e64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e64 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e64)
  store %struct.Memory* %call_476e64, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rcx), %r9d	 RIP: 476e67	 Bytes: 4
  %loadMem_476e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e67 = call %struct.Memory* @routine_movl_0x4__rcx____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e67)
  store %struct.Memory* %call_476e67, %struct.Memory** %MEMORY

  ; Code: movslq 0xb63050, %rax	 RIP: 476e6b	 Bytes: 8
  %loadMem_476e6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e6b = call %struct.Memory* @routine_movslq_0xb63050___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e6b)
  store %struct.Memory* %call_476e6b, %struct.Memory** %MEMORY

  ; Code: imulq $0x194, %rax, %rax	 RIP: 476e73	 Bytes: 7
  %loadMem_476e73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e73 = call %struct.Memory* @routine_imulq__0x194___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e73)
  store %struct.Memory* %call_476e73, %struct.Memory** %MEMORY

  ; Code: movq -0x4c8(%rbp), %rcx	 RIP: 476e7a	 Bytes: 7
  %loadMem_476e7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e7a = call %struct.Memory* @routine_movq_MINUS0x4c8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e7a)
  store %struct.Memory* %call_476e7a, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rcx	 RIP: 476e81	 Bytes: 3
  %loadMem_476e81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e81 = call %struct.Memory* @routine_addq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e81)
  store %struct.Memory* %call_476e81, %struct.Memory** %MEMORY

  ; Code: movl %r9d, (%rcx)	 RIP: 476e84	 Bytes: 3
  %loadMem_476e84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e84 = call %struct.Memory* @routine_movl__r9d____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e84)
  store %struct.Memory* %call_476e84, %struct.Memory** %MEMORY

  ; Code: movl 0xb63050, %r9d	 RIP: 476e87	 Bytes: 8
  %loadMem_476e87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e87 = call %struct.Memory* @routine_movl_0xb63050___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e87)
  store %struct.Memory* %call_476e87, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %r9d	 RIP: 476e8f	 Bytes: 4
  %loadMem_476e8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e8f = call %struct.Memory* @routine_addl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e8f)
  store %struct.Memory* %call_476e8f, %struct.Memory** %MEMORY

  ; Code: movl %r9d, 0xb63050	 RIP: 476e93	 Bytes: 8
  %loadMem_476e93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e93 = call %struct.Memory* @routine_movl__r9d__0xb63050(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e93)
  store %struct.Memory* %call_476e93, %struct.Memory** %MEMORY

  ; Code: .L_476e9b:	 RIP: 476e9b	 Bytes: 0
  br label %block_.L_476e9b
block_.L_476e9b:

  ; Code: cmpq $0x0, -0x18(%rbp)	 RIP: 476e9b	 Bytes: 5
  %loadMem_476e9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476e9b = call %struct.Memory* @routine_cmpq__0x0__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476e9b)
  store %struct.Memory* %call_476e9b, %struct.Memory** %MEMORY

  ; Code: je .L_476f23	 RIP: 476ea0	 Bytes: 6
  %loadMem_476ea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ea0 = call %struct.Memory* @routine_je_.L_476f23(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ea0, i8* %BRANCH_TAKEN, i64 131, i64 6, i64 6)
  store %struct.Memory* %call_476ea0, %struct.Memory** %MEMORY

  %loadBr_476ea0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476ea0 = icmp eq i8 %loadBr_476ea0, 1
  br i1 %cmpBr_476ea0, label %block_.L_476f23, label %block_476ea6

block_476ea6:
  ; Code: movq -0x18(%rbp), %rax	 RIP: 476ea6	 Bytes: 4
  %loadMem_476ea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ea6 = call %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ea6)
  store %struct.Memory* %call_476ea6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 476eaa	 Bytes: 6
  %loadMem_476eaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476eaa = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476eaa)
  store %struct.Memory* %call_476eaa, %struct.Memory** %MEMORY

  ; Code: movl $0x15, -0x474(%rbp)	 RIP: 476eb0	 Bytes: 10
  %loadMem_476eb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476eb0 = call %struct.Memory* @routine_movl__0x15__MINUS0x474__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476eb0)
  store %struct.Memory* %call_476eb0, %struct.Memory** %MEMORY

  ; Code: .L_476eba:	 RIP: 476eba	 Bytes: 0
  br label %block_.L_476eba
block_.L_476eba:

  ; Code: cmpl $0x190, -0x474(%rbp)	 RIP: 476eba	 Bytes: 10
  %loadMem_476eba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476eba = call %struct.Memory* @routine_cmpl__0x190__MINUS0x474__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476eba)
  store %struct.Memory* %call_476eba, %struct.Memory** %MEMORY

  ; Code: jge .L_476f1e	 RIP: 476ec4	 Bytes: 6
  %loadMem_476ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ec4 = call %struct.Memory* @routine_jge_.L_476f1e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ec4, i8* %BRANCH_TAKEN, i64 90, i64 6, i64 6)
  store %struct.Memory* %call_476ec4, %struct.Memory** %MEMORY

  %loadBr_476ec4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476ec4 = icmp eq i8 %loadBr_476ec4, 1
  br i1 %cmpBr_476ec4, label %block_.L_476f1e, label %block_476eca

block_476eca:
  ; Code: movslq -0x474(%rbp), %rax	 RIP: 476eca	 Bytes: 7
  %loadMem_476eca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476eca = call %struct.Memory* @routine_movslq_MINUS0x474__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476eca)
  store %struct.Memory* %call_476eca, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 476ed1	 Bytes: 8
  %loadMem_476ed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ed1 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ed1)
  store %struct.Memory* %call_476ed1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %ecx	 RIP: 476ed9	 Bytes: 3
  %loadMem_476ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ed9 = call %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ed9)
  store %struct.Memory* %call_476ed9, %struct.Memory** %MEMORY

  ; Code: je .L_476f05	 RIP: 476edc	 Bytes: 6
  %loadMem_476edc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476edc = call %struct.Memory* @routine_je_.L_476f05(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476edc, i8* %BRANCH_TAKEN, i64 41, i64 6, i64 6)
  store %struct.Memory* %call_476edc, %struct.Memory** %MEMORY

  %loadBr_476edc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476edc = icmp eq i8 %loadBr_476edc, 1
  br i1 %cmpBr_476edc, label %block_.L_476f05, label %block_476ee2

block_476ee2:
  ; Code: movslq -0x474(%rbp), %rax	 RIP: 476ee2	 Bytes: 7
  %loadMem_476ee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ee2 = call %struct.Memory* @routine_movslq_MINUS0x474__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ee2)
  store %struct.Memory* %call_476ee2, %struct.Memory** %MEMORY

  ; Code: movsbl -0x410(%rbp,%rax,1), %ecx	 RIP: 476ee9	 Bytes: 8
  %loadMem_476ee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ee9 = call %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ee9)
  store %struct.Memory* %call_476ee9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %ecx	 RIP: 476ef1	 Bytes: 3
  %loadMem_476ef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ef1 = call %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ef1)
  store %struct.Memory* %call_476ef1, %struct.Memory** %MEMORY

  ; Code: jne .L_476f05	 RIP: 476ef4	 Bytes: 6
  %loadMem_476ef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476ef4 = call %struct.Memory* @routine_jne_.L_476f05(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476ef4, i8* %BRANCH_TAKEN, i64 17, i64 6, i64 6)
  store %struct.Memory* %call_476ef4, %struct.Memory** %MEMORY

  %loadBr_476ef4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476ef4 = icmp eq i8 %loadBr_476ef4, 1
  br i1 %cmpBr_476ef4, label %block_.L_476f05, label %block_476efa

block_476efa:
  ; Code: movq -0x18(%rbp), %rax	 RIP: 476efa	 Bytes: 4
  %loadMem_476efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476efa = call %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476efa)
  store %struct.Memory* %call_476efa, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %ecx	 RIP: 476efe	 Bytes: 2
  %loadMem_476efe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476efe = call %struct.Memory* @routine_movl___rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476efe)
  store %struct.Memory* %call_476efe, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %ecx	 RIP: 476f00	 Bytes: 3
  %loadMem_476f00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f00 = call %struct.Memory* @routine_addl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f00)
  store %struct.Memory* %call_476f00, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax)	 RIP: 476f03	 Bytes: 2
  %loadMem_476f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f03 = call %struct.Memory* @routine_movl__ecx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f03)
  store %struct.Memory* %call_476f03, %struct.Memory** %MEMORY

  ; Code: .L_476f05:	 RIP: 476f05	 Bytes: 0
  br label %block_.L_476f05
block_.L_476f05:

  ; Code: jmpq .L_476f0a	 RIP: 476f05	 Bytes: 5
  %loadMem_476f05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f05 = call %struct.Memory* @routine_jmpq_.L_476f0a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f05, i64 5, i64 5)
  store %struct.Memory* %call_476f05, %struct.Memory** %MEMORY

  br label %block_.L_476f0a

  ; Code: .L_476f0a:	 RIP: 476f0a	 Bytes: 0
block_.L_476f0a:

  ; Code: movl -0x474(%rbp), %eax	 RIP: 476f0a	 Bytes: 6
  %loadMem_476f0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f0a = call %struct.Memory* @routine_movl_MINUS0x474__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f0a)
  store %struct.Memory* %call_476f0a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 476f10	 Bytes: 3
  %loadMem_476f10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f10 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f10)
  store %struct.Memory* %call_476f10, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x474(%rbp)	 RIP: 476f13	 Bytes: 6
  %loadMem_476f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f13 = call %struct.Memory* @routine_movl__eax__MINUS0x474__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f13)
  store %struct.Memory* %call_476f13, %struct.Memory** %MEMORY

  ; Code: jmpq .L_476eba	 RIP: 476f19	 Bytes: 5
  %loadMem_476f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f19 = call %struct.Memory* @routine_jmpq_.L_476eba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f19, i64 -95, i64 5)
  store %struct.Memory* %call_476f19, %struct.Memory** %MEMORY

  br label %block_.L_476eba

  ; Code: .L_476f1e:	 RIP: 476f1e	 Bytes: 0
block_.L_476f1e:

  ; Code: jmpq .L_476f23	 RIP: 476f1e	 Bytes: 5
  %loadMem_476f1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f1e = call %struct.Memory* @routine_jmpq_.L_476f23(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f1e, i64 5, i64 5)
  store %struct.Memory* %call_476f1e, %struct.Memory** %MEMORY

  br label %block_.L_476f23

  ; Code: .L_476f23:	 RIP: 476f23	 Bytes: 0
block_.L_476f23:

  ; Code: movl -0x34(%rbp), %eax	 RIP: 476f23	 Bytes: 3
  %loadMem_476f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f23 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f23)
  store %struct.Memory* %call_476f23, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4(%rbp)	 RIP: 476f26	 Bytes: 3
  %loadMem_476f26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f26 = call %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f26)
  store %struct.Memory* %call_476f26, %struct.Memory** %MEMORY

  ; Code: .L_476f29:	 RIP: 476f29	 Bytes: 0
  br label %block_.L_476f29
block_.L_476f29:

  ; Code: movl -0x4(%rbp), %eax	 RIP: 476f29	 Bytes: 3
  %loadMem_476f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f29 = call %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f29)
  store %struct.Memory* %call_476f29, %struct.Memory** %MEMORY

  ; Code: addq $0x4d0, %rsp	 RIP: 476f2c	 Bytes: 7
  %loadMem_476f2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f2c = call %struct.Memory* @routine_addq__0x4d0___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f2c)
  store %struct.Memory* %call_476f2c, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 476f33	 Bytes: 1
  %loadMem_476f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f33 = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f33)
  store %struct.Memory* %call_476f33, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 476f34	 Bytes: 1
  %loadMem_476f34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_476f34 = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_476f34)
  store %struct.Memory* %call_476f34, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_476f34
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x4d0___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 1232)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x190___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 400)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__r8d___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x410__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1040
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x280__rbp____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x3___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 3)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edx__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rcx__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0__MINUS0xd4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 212
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 216
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = zext i8 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0xe4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl_MINUS0xe4__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 228
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__r8d__MINUS0xe8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__r11___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__r9___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__r10__MINUS0x480__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1152
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__r9__MINUS0x488__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1160
  %14 = load i64, i64* %R9
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x48c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.memset_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_MINUS0x480__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_MINUS0x48c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x488__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__0x15__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 21)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 400)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_4758fd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_4758ea(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0xb0eff0_type* @G__0xb0eff0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = sext i64 %4 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = zext i64 %3 to i128
  %11 = or i128 %7, %10
  %12 = zext i64 %4 to i128
  %13 = or i128 %9, %12
  %14 = mul  i128 %13, %11
  %15 = trunc i128 %14 to i64
  store i64 %15, i64* %2, align 8
  %16 = sext i64 %15 to i128
  %17 = icmp ne i128 %16, %14
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i128 %14 to i32
  %21 = and i32 %20, 255
  %22 = tail call i32 @llvm.ctpop.i32(i32 %21) #22
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %28, align 1
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %18, i8* %32, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 380)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_MINUS0x30__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 48
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_4758ea(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.is_same_dragon(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 1)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x280__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.mark_string(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_4758ef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47587c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0xb4bd20_type* @G__0xb4bd20 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0xab0fe0_type* @G_0xab0fe0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 104)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x0__0x30__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47593b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_476f29(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0xab0fe0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0xab0fe0_type* @G_0xab0fe0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rsi___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addq__rax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_0x2c__rdx____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RDX
  %15 = add i64 %14, 44
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_475a8e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__rax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rsi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_0x4__rdi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x68___rsi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 104)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rsi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_0x4__rdx__rsi_4____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 4
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 5
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_imulq__0x68___rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 104)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq___rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 76)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x8__rax____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r8d__MINUS0x414__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1044
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x414__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1044
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 12099168
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 9
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl_MINUS0xe4__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 228
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_je_.L_475a7b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_475a76(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_475a63(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_475a63(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x414__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1044
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_leaq_MINUS0x410__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1040
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jmpq_.L_475a68(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4759f2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475a7b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475a80(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_475942(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_475ae6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_je_.L_475ab2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_475ada(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x58192c___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x58192c_type* @G__0x58192c to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x7c___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 124)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x5819e3___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x5819e3_type* @G__0x5819e3 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4294967295)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.abortgo(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i8
  %6 = inttoptr i64 %2 to i8*
  store i8 %5, i8* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__0x1__MINUS0x410__rbp__rax_1_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -1040
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 1)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0xffffffff__MINUS0xdc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 220
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0x7ae438_type* @G_0x7ae438 to i64))
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_475b8c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0xdc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 220
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_475b19(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_475b8c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_475b79(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sext i32 %7 to i64
  %9 = shl i64 %4, 32
  %10 = ashr exact i64 %9, 32
  %11 = mul  i64 %8, %10
  %12 = trunc i64 %11 to i32
  %13 = and i64 %11, 4294967295
  store i64 %13, i64* %2, align 8
  %14 = shl i64 %11, 32
  %15 = ashr exact i64 %14, 32
  %16 = icmp ne i64 %15, %11
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %12, 255
  %20 = tail call i32 @llvm.ctpop.i32(i32 %19) #22
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %26, align 1
  %27 = lshr i32 %12, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %17, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 20)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x15___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 21)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i8*
  %6 = load i8, i8* %5
  %7 = trunc i64 %3 to i8
  %8 = sub i8 %6, %7
  %9 = icmp ult i8 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = zext i8 %8 to i32
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i8 %6, %7
  %19 = xor i8 %18, %8
  %20 = lshr i8 %19, 4
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i8 %8, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i8 %8, 7
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i8 %6, 7
  %29 = lshr i8 %7, 7
  %30 = xor i8 %28, %29
  %31 = xor i8 %26, %28
  %32 = add   i8 %31, %30
  %33 = icmp eq i8 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpb__0x0__MINUS0x410__rbp__rcx_1_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = add i64 %12, -1040
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 0)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_je_.L_475b66(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_475b79(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475b6b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_475b20(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475b7e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_475af7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0xffffffff__MINUS0xe0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x7ae438___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x7ae438_type* @G_0x7ae438 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %2, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = select i1 %12, i64 %3, i64 %4
  store i64 %15, i64* %14, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jl_.L_475c25(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0xe0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_475bbf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_475c25(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jge_.L_475c12(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_je_.L_475bff(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_475c12(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475c04(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_475bc6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475c17(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 -1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_475ba3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x1__MINUS0xd4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 212
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x14___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 20)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0xd4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x80__rbp__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__eax__MINUS0x490__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1168
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl_MINUS0x490__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl_MINUS0xe0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 224
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_475e12(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PXORI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to i64*
  %7 = load i64, i64* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = getelementptr inbounds i8, i8* %4, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = xor i64 %12, %7
  %17 = xor i64 %15, %10
  %18 = trunc i64 %16 to i32
  %19 = lshr i64 %16, 32
  %20 = trunc i64 %19 to i32
  %21 = bitcast i8* %2 to i32*
  store i32 %18, i32* %21, align 1
  %22 = getelementptr inbounds i8, i8* %2, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %20, i32* %23, align 1
  %24 = trunc i64 %17 to i32
  %25 = getelementptr inbounds i8, i8* %2, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = lshr i64 %17, 32
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds i8, i8* %2, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PXORI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl__0x0__MINUS0x418__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1048
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = inttoptr i64 %2 to float*
  store float %7, float* %8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x41c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1052
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__eax__MINUS0x494__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x494__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x420__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1056
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xd4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq__eax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x80__rbp__rsi_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %19)
  ret %struct.Memory* %22
}






define %struct.Memory* @routine_subl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__edx__MINUS0x424__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1060
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x420__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1056
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__edx__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = xor i1 %15, true
  %17 = and i1 %8, %16
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %2, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %3, i64 %4
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jg_.L_475da8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_475d95(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_imull__0x14__MINUS0x1c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 20)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_MINUS0x20__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_je_.L_475d82(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_subl_MINUS0x424__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1060
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = trunc i64 %3 to i32
  %11 = sitofp i32 %10 to float
  %12 = bitcast i8* %2 to float*
  store float %11, float* %12, align 1
  %13 = extractelement <2 x i32> %6, i32 1
  %14 = getelementptr inbounds i8, i8* %2, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 1
  %16 = extractelement <2 x i32> %9, i32 0
  %17 = bitcast i8* %7 to i32*
  store i32 %16, i32* %17, align 1
  %18 = extractelement <2 x i32> %9, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_subl_MINUS0x420__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1056
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = bitcast i8* %4 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 1
  %13 = extractelement <2 x float> %7, i32 0
  %14 = extractelement <2 x float> %12, i32 0
  %15 = fdiv float %13, %14
  %16 = bitcast i8* %2 to float*
  store float %15, float* %16, align 1
  %17 = bitcast <2 x float> %7 to <2 x i32>
  %18 = extractelement <2 x i32> %17, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %10, i32 0
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %10, i32 1
  %25 = getelementptr inbounds i8, i8* %2, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movss__xmm0__MINUS0x428__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1064
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x418__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1048
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_475d5d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to float*
  %6 = load float, float* %5
  %7 = bitcast i8* %2 to float*
  store float %6, float* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 4
  %9 = bitcast i8* %8 to float*
  store float 0.000000e+00, float* %9, align 1
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to float*
  store float 0.000000e+00, float* %11, align 1
  %12 = getelementptr inbounds i8, i8* %2, i64 12
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss_MINUS0x428__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1064
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movss_MINUS0x41c__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1052
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory*, %struct.State* dereferenceable(3376), i8* nocapture readonly, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %2 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = bitcast i8* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = extractelement <2 x float> %9, i32 0
  %11 = fcmp uno float %7, %10
  br i1 %11, label %12, label %24

; <label>:12:                                     ; preds = %4
  %13 = fadd float %7, %10
  %14 = bitcast float %13 to i32
  %15 = and i32 %14, 2143289344
  %16 = icmp eq i32 %15, 2139095040
  %17 = and i32 %14, 4194303
  %18 = icmp ne i32 %17, 0
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %30

; <label>:20:                                     ; preds = %12
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %41

; <label>:24:                                     ; preds = %4
  %25 = fcmp ogt float %7, %10
  br i1 %25, label %30, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp olt float %7, %10
  br i1 %27, label %30, label %28

; <label>:28:                                     ; preds = %26
  %29 = fcmp oeq float %7, %10
  br i1 %29, label %30, label %37

; <label>:30:                                     ; preds = %28, %26, %24, %12
  %31 = phi i8 [ 0, %24 ], [ 0, %26 ], [ 1, %28 ], [ 1, %12 ]
  %32 = phi i8 [ 0, %24 ], [ 0, %26 ], [ 0, %28 ], [ 1, %12 ]
  %33 = phi i8 [ 0, %24 ], [ 1, %26 ], [ 0, %28 ], [ 1, %12 ]
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %31, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %32, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  br label %37

; <label>:37:                                     ; preds = %30, %28
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %40, align 1
  br label %41

; <label>:41:                                     ; preds = %37, %20
  %42 = phi %struct.Memory* [ %23, %20 ], [ %0, %37 ]
  ret %struct.Memory* %42
}

define %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %9 = load i8, i8* %8, align 1
  %10 = or i8 %9, %7
  %11 = icmp ne i8 %10, 0
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %2, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %14 = select i1 %11, i64 %3, i64 %4
  store i64 %14, i64* %13, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jbe_.L_475d7d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x418__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1048
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jmpq_.L_475d82(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475d87(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_475ce6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475d9a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_475cd0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movslq_MINUS0x418__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1048
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_je_.L_475dc5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_475ded(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0xaf___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 175)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x5819f6___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x5819f6_type* @G__0x5819f6 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_movl_MINUS0x418__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1048
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}






define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_475c2f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_cmpl__0x0__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jl_.L_475e72(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_imull__0x14__MINUS0xdc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 20)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_je_.L_475e5f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_475e72(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475e64(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_475e1f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x1__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 216
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl_MINUS0xd8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0xd0__rbp__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__eax__MINUS0x498__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1176
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x498__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jge_.L_476067(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__0x0__MINUS0x42c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1068
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movss__xmm0__MINUS0x430__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1072
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__eax__MINUS0x49c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x49c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x434__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1076
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xd8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0xd0__rbp__rsi_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %19)
  ret %struct.Memory* %22
}








define %struct.Memory* @routine_movl__edx__MINUS0x438__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1080
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x434__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1076
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jg_.L_475ffa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_cmpl__0x0__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jl_.L_475fe7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_je_.L_475fd4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_subl_MINUS0x438__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1080
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_subl_MINUS0x434__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1076
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movss__xmm0__MINUS0x43c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1084
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x42c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1068
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_475faf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movss_MINUS0x43c__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1084
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory*, %struct.State* dereferenceable(3376), i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %2 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = inttoptr i64 %3 to float*
  %9 = load float, float* %8
  %10 = fcmp uno float %7, %9
  br i1 %10, label %11, label %23

; <label>:11:                                     ; preds = %4
  %12 = fadd float %7, %9
  %13 = bitcast float %12 to i32
  %14 = and i32 %13, 2143289344
  %15 = icmp eq i32 %14, 2139095040
  %16 = and i32 %13, 4194303
  %17 = icmp ne i32 %16, 0
  %18 = and i1 %15, %17
  br i1 %18, label %19, label %29

; <label>:19:                                     ; preds = %11
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %21, %struct.Memory* %0) #21
  br label %40

; <label>:23:                                     ; preds = %4
  %24 = fcmp ogt float %7, %9
  br i1 %24, label %29, label %25

; <label>:25:                                     ; preds = %23
  %26 = fcmp olt float %7, %9
  br i1 %26, label %29, label %27

; <label>:27:                                     ; preds = %25
  %28 = fcmp oeq float %7, %9
  br i1 %28, label %29, label %36

; <label>:29:                                     ; preds = %27, %25, %23, %11
  %30 = phi i8 [ 0, %23 ], [ 0, %25 ], [ 1, %27 ], [ 1, %11 ]
  %31 = phi i8 [ 0, %23 ], [ 0, %25 ], [ 0, %27 ], [ 1, %11 ]
  %32 = phi i8 [ 0, %23 ], [ 1, %25 ], [ 0, %27 ], [ 1, %11 ]
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %31, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %32, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %29, %27
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %39, align 1
  br label %40

; <label>:40:                                     ; preds = %36, %19
  %41 = phi %struct.Memory* [ %22, %19 ], [ %0, %36 ]
  ret %struct.Memory* %41
}

define %struct.Memory* @routine_ucomiss_MINUS0x430__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1072
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_jbe_.L_475fcf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x42c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1068
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jmpq_.L_475fd4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475fd9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_475f42(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_475fec(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_475f26(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movslq_MINUS0x42c__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1068
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_je_.L_476017(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_47603f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0xcf___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 207)
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_movl_MINUS0x42c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1068
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0xd8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}






define %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_475e7c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x80__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x4a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x4a0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__edx__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x28__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xd0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x4a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x4a4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_idivl__esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jg_.L_4760d6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movb__0x1__MINUS0x410__rbp__rcx_1_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = add i64 %12, -1040
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 1)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_jmpq_.L_476086(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_movl__eax__MINUS0x4a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x4a8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl_MINUS0xd8__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq__edx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xd0__rbp__rsi_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__eax__MINUS0x4ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1196
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x4ac__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_idivl__edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jg_.L_47615f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_imull__0x14__MINUS0xe0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 20)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_jmpq_.L_476102(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0xdc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jge_.L_476469(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0xffffffff__MINUS0x440__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1088
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0xffffffff__MINUS0x444__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1092
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x1__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl_MINUS0xd4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 212
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_4762cd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x80__rbp__rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__eax__MINUS0x4b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1200
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x4b0__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_cmpl_MINUS0x24__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 36
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_4762ba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to double*
  store double 0.000000e+00, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd_0x6cea2__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x6cea2__rip__type* @G_0x6cea2__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_movl__eax__MINUS0x4b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1204
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x4b4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movss__xmm1__MINUS0x448__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1096
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_cvtsi2ssl__edx___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movss__xmm1__MINUS0x44c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1100
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x80__rbp__rsi_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %19)
  ret %struct.Memory* %22
}












define %struct.Memory* @routine_movss__xmm1__MINUS0x450__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1104
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movss__xmm1__MINUS0x454__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1108
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI3MVnI7vec32_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to float*
  %6 = load float, float* %5
  %7 = fpext float %6 to double
  %8 = bitcast i8* %2 to double*
  store double %7, double* %8, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x44c__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI3MVnI7vec32_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fadd double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory*, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = inttoptr i64 %3 to i32*
  %11 = load i32, i32* %10
  %12 = sitofp i32 %11 to float
  %13 = bitcast i8* %2 to float*
  store float %12, float* %13, align 1
  %14 = extractelement <2 x i32> %6, i32 1
  %15 = getelementptr inbounds i8, i8* %2, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 1
  %17 = extractelement <2 x i32> %9, i32 0
  %18 = bitcast i8* %7 to i32*
  store i32 %17, i32* %18, align 1
  %19 = extractelement <2 x i32> %9, i32 1
  %20 = getelementptr inbounds i8, i8* %2, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2ssl_MINUS0x24__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = inttoptr i64 %4 to float*
  %12 = load float, float* %11
  %13 = extractelement <2 x float> %7, i32 0
  %14 = fsub float %13, %12
  %15 = bitcast i8* %2 to float*
  store float %14, float* %15, align 1
  %16 = bitcast <2 x float> %7 to <2 x i32>
  %17 = extractelement <2 x i32> %16, i32 1
  %18 = getelementptr inbounds i8, i8* %2, i64 4
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 1
  %20 = extractelement <2 x i32> %10, i32 0
  %21 = getelementptr inbounds i8, i8* %2, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %10, i32 1
  %24 = getelementptr inbounds i8, i8* %2, i64 12
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subss_MINUS0x448__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1096
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movss_MINUS0x454__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subss_MINUS0x44c__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = bitcast i8* %4 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 1
  %13 = extractelement <2 x float> %7, i32 0
  %14 = extractelement <2 x float> %12, i32 0
  %15 = fmul float %13, %14
  %16 = bitcast i8* %2 to float*
  store float %15, float* %16, align 1
  %17 = bitcast <2 x float> %7 to <2 x i32>
  %18 = extractelement <2 x i32> %17, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %10, i32 0
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %10, i32 1
  %25 = getelementptr inbounds i8, i8* %2, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulss__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movss_MINUS0x450__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subss_MINUS0x448__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1096
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = fpext float %7 to double
  %9 = bitcast i8* %2 to double*
  store double %8, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtss2sd__xmm1___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}




define %struct.Memory* @routine_callq_.ceil_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = tail call double @llvm.trunc.f64(double %6) #22
  %8 = tail call double @llvm.fabs.f64(double %7) #22
  %9 = fcmp ogt double %8, 0x41DFFFFFFFC00000
  %10 = fptosi double %7 to i32
  %11 = zext i32 %10 to i64
  %12 = select i1 %9, i64 2147483648, i64 %11
  store i64 %12, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__ecx__MINUS0x440__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1088
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4762cd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4762bf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_476195(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_cmpl_MINUS0xd8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 216
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_47641b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_MINUS0xd0__rbp__rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl__eax__MINUS0x4b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1208
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x4b8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jle_.L_476408(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x6cd68__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x6cd68__rip__type* @G_0x6cd68__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_movl__eax__MINUS0x4bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x4bc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movss__xmm1__MINUS0x458__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1112
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movss__xmm1__MINUS0x45c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1116
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_movss__xmm1__MINUS0x460__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1120
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movss__xmm1__MINUS0x464__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1124
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cvtss2sd_MINUS0x45c__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI3MVnI7vec32_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_subss_MINUS0x458__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1112
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movss_MINUS0x464__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subss_MINUS0x45c__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1116
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movss_MINUS0x460__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subss_MINUS0x458__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1112
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_callq_.floor_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__ecx__MINUS0x444__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1092
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_47641b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47640d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4762d4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x440__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1088
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_cmpl_MINUS0x444__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 1092
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jg_.L_476456(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jmpq_.L_476424(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47645b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_47616b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_47653d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_47652a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = sext i8 %6 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rax_1____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = add i64 %15, -1040
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 8
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_47652a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_476525(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 8053168
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_476512(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jne_.L_476512(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movb__0x2__MINUS0x410__rbp__rcx_1_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = add i64 %12, -1040
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 2)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_476517(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4764ae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47652a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47652f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_476470(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_476642(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_47662f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_47662f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl_MINUS0xe4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 228
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x8__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x30__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.are_neighbor_dragons(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_cmpb__0x0__MINUS0x280__rbp__rax_1_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -640
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 0)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__0x15__MINUS0x468__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1128
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 21)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x190__MINUS0x468__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1128
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 400)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_47662a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x468__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_je_.L_476611(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x468__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movb__0x2__MINUS0x280__rbp__rax_1_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -640
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 2)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_476616(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x468__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x468__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4765c3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_47662f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_476634(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_476544(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x1__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_jge_.L_476711(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jge_.L_4766fe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpb__0x0__MINUS0x280__rbp__rcx_1_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = add i64 %12, -640
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 0)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_je_.L_4766eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rcx_1____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = add i64 %15, -1040
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 8
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_jne_.L_4766bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_4766fe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_cmpl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4766e1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_4766e6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4766eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4766f0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_476667(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_476703(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_476650(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_476bc7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__al___cl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %CL, i64 %15)
  ret %struct.Memory* %18
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i8
  %6 = inttoptr i64 %2 to i8*
  store i8 %5, i8* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__cl__MINUS0x4bd__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1213
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_476746(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i8* nocapture) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_setne__al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i8* %AL)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movb__al__MINUS0x4bd__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1213
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  store i8 %6, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb_MINUS0x4bd__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1213
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4TESTI2RnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = and i64 %3, %2
  %6 = trunc i64 %5 to i8
  %7 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %7, align 1
  %8 = trunc i64 %5 to i32
  %9 = and i32 %8, 255
  %10 = tail call i32 @llvm.ctpop.i32(i32 %9) #22
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = xor i8 %12, 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %13, i8* %14, align 1
  %15 = icmp eq i8 %6, 0
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %16, i8* %17, align 1
  %18 = lshr i8 %6, 7
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %21, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4TESTI2RnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_jne_.L_476759(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_476bc2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_je_.L_476baf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movsbl_MINUS0x280__rbp__rax_1____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = add i64 %15, -640
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 8
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_subl__0x14___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 20)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_47688b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jne_.L_47688b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


























define %struct.Memory* @routine_cmpl_MINUS0xe4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 228
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_cmpl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




























define %struct.Memory* @routine_cmpl_MINUS0xe8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 232
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






























define %struct.Memory* @routine_jne_.L_476ba3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addl__0x14___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 20)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_476993(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jne_.L_476993(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














































































































define %struct.Memory* @routine_je_.L_476a9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jne_.L_476a9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














































































































define %struct.Memory* @routine_je_.L_476baa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jne_.L_476baa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






































































































define %struct.Memory* @routine_jmpq_.L_476baf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_476bb4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_476722(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_476bc7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_476be5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x2__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_476de4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_476de4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.start_draw_board(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jge_.L_476ddf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jge_.L_476dcc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_je_.L_476ca1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_476c60(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x46c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_476c9c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_476c8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x3__MINUS0x46c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_476c97(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x2__MINUS0x46c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jmpq_.L_476d0f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_476cce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x4__MINUS0x46c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_476d0a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_476cfb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x6__MINUS0x46c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 6)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_476d05(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x46c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


















define %struct.Memory* @routine_jne_.L_476d3c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x58__MINUS0x470__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 88)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_476da7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_476d69(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x4f__MINUS0x470__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 79)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_476da2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_je_.L_476d93(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2a__MINUS0x470__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 42)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_476d9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x2e__MINUS0x470__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 46)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movl_MINUS0x24__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x28__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x470__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x46c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.draw_color_char(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jmpq_.L_476c08(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_476dd1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_476bf1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_callq_.end_draw_board(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_476e9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_476e9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0xa__0xb63050(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xb63050_type* @G_0xb63050 to i64), i64 10)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jge_.L_476e9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0xb44530___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0xb44530_type* @G__0xb44530 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0xb4bd20_type* @G__0xb4bd20 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x190___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 400)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movslq_0xb63050___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0xb63050_type* @G_0xb63050 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_imulq__0x194___rdi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 404)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rdi___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x4___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__r8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rax__MINUS0x4c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1224
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rcx__MINUS0x4d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1232
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.memcpy_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x4c___rax___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 76)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x4d0__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_0x4__rcx____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq_0xb63050___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0xb63050_type* @G_0xb63050 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_imulq__0x194___rax___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 404)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x4c8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__r9d____rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_0xb63050___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G_0xb63050_type* @G_0xb63050 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl__0x1___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__r9d__0xb63050(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R9D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xb63050_type* @G_0xb63050 to i64), i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i64*
  %6 = load i64, i64* %5
  %7 = sub i64 %6, %3
  %8 = icmp ult i64 %6, %3
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = trunc i64 %7 to i32
  %12 = and i32 %11, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i64 %6, %3
  %19 = xor i64 %18, %7
  %20 = lshr i64 %19, 4
  %21 = trunc i64 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i64 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %7, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %6, 63
  %31 = lshr i64 %3, 63
  %32 = xor i64 %30, %31
  %33 = xor i64 %27, %30
  %34 = add   i64 %33, %32
  %35 = icmp eq i64 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq__0x0__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_476f23(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x0____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x15__MINUS0x474__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 21)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x190__MINUS0x474__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 400)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_476f1e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x474__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_je_.L_476f05(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_476f05(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl___rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__ecx____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_476f0a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x474__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x474__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_476eba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_476f23(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__0x4d0___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 1232)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

