; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cd68__rip__type = type <{ [8 x i8] }>
%G_0x6cea2__rip__type = type <{ [8 x i8] }>
%G_0x7ae438_type = type <{ [4 x i8] }>
%G_0xab0fe0_type = type <{ [8 x i8] }>
%G_0xb63050_type = type <{ [4 x i8] }>
%G__0x58192c_type = type <{ [8 x i8] }>
%G__0x5819e3_type = type <{ [8 x i8] }>
%G__0x5819f6_type = type <{ [8 x i8] }>
%G__0xb0eff0_type = type <{ [8 x i8] }>
%G__0xb44530_type = type <{ [8 x i8] }>
%G__0xb4bd20_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cd68__rip_ = global %G_0x6cd68__rip__type zeroinitializer
@G_0x6cea2__rip_ = global %G_0x6cea2__rip__type zeroinitializer
@G_0x7ae438 = global %G_0x7ae438_type zeroinitializer
@G_0xab0fe0 = global %G_0xab0fe0_type zeroinitializer
@G_0xb63050 = global %G_0xb63050_type zeroinitializer
@G__0x58192c = global %G__0x58192c_type zeroinitializer
@G__0x5819e3 = global %G__0x5819e3_type zeroinitializer
@G__0x5819f6 = global %G__0x5819f6_type zeroinitializer
@G__0xb0eff0 = global %G__0xb0eff0_type zeroinitializer
@G__0xb44530 = global %G__0xb44530_type zeroinitializer
@G__0xb4bd20 = global %G__0xb4bd20_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_41fc30.is_same_dragon(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_415cb0.mark_string(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_452090.abortgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4011f0.ceil_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_423120.are_neighbor_dragons(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_474970.start_draw_board(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_474a20.draw_color_char(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_474da0.end_draw_board(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @compute_surroundings(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_4757d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_4757d0, %struct.Memory** %MEMORY
  %loadMem_4757d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i97 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i98 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i97
  %27 = load i64, i64* %PC.i96
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i96
  store i64 %26, i64* %RBP.i98, align 8
  store %struct.Memory* %loadMem_4757d1, %struct.Memory** %MEMORY
  %loadMem_4757d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1360 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1360
  %36 = load i64, i64* %PC.i1359
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1359
  %38 = sub i64 %35, 1232
  store i64 %38, i64* %RSP.i1360, align 8
  %39 = icmp ult i64 %35, 1232
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 1232, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_4757d4, %struct.Memory** %MEMORY
  %loadMem_4757db = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1402 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %EAX.i1403 = bitcast %union.anon* %72 to i32*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 1
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RAX.i1404 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RAX.i1404
  %77 = load i32, i32* %EAX.i1403
  %78 = zext i32 %77 to i64
  %79 = load i64, i64* %PC.i1402
  %80 = add i64 %79, 2
  store i64 %80, i64* %PC.i1402
  %81 = xor i64 %78, %76
  %82 = trunc i64 %81 to i32
  %83 = and i64 %81, 4294967295
  store i64 %83, i64* %RAX.i1404, align 8
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %84, align 1
  %85 = and i32 %82, 255
  %86 = call i32 @llvm.ctpop.i32(i32 %85)
  %87 = trunc i32 %86 to i8
  %88 = and i8 %87, 1
  %89 = xor i8 %88, 1
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %89, i8* %90, align 1
  %91 = icmp eq i32 %82, 0
  %92 = zext i1 %91 to i8
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %92, i8* %93, align 1
  %94 = lshr i32 %82, 31
  %95 = trunc i32 %94 to i8
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %95, i8* %96, align 1
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %98, align 1
  store %struct.Memory* %loadMem_4757db, %struct.Memory** %MEMORY
  %loadMem_4757dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i1424 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 17
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %104 to i32*
  %105 = bitcast i32* %R8D.i to i64*
  %106 = load i64, i64* %PC.i1424
  %107 = add i64 %106, 6
  store i64 %107, i64* %PC.i1424
  store i64 400, i64* %105, align 8
  store %struct.Memory* %loadMem_4757dd, %struct.Memory** %MEMORY
  %loadMem_4757e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 33
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %110 to i64*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8D.i1448 = bitcast %union.anon* %113 to i32*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9D.i1449 = bitcast %union.anon* %116 to i32*
  %117 = bitcast i32* %R9D.i1449 to i64*
  %118 = load i32, i32* %R8D.i1448
  %119 = zext i32 %118 to i64
  %120 = load i64, i64* %PC.i1447
  %121 = add i64 %120, 3
  store i64 %121, i64* %PC.i1447
  %122 = and i64 %119, 4294967295
  store i64 %122, i64* %117, align 8
  store %struct.Memory* %loadMem_4757e3, %struct.Memory** %MEMORY
  %loadMem_4757e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 33
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %125 to i64*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 15
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %RBP.i1475 = bitcast %union.anon* %128 to i64*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 21
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R10.i = bitcast %union.anon* %131 to i64*
  %132 = load i64, i64* %RBP.i1475
  %133 = sub i64 %132, 1040
  %134 = load i64, i64* %PC.i1474
  %135 = add i64 %134, 7
  store i64 %135, i64* %PC.i1474
  store i64 %133, i64* %R10.i, align 8
  store %struct.Memory* %loadMem_4757e6, %struct.Memory** %MEMORY
  %loadMem_4757ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %137 = getelementptr inbounds %struct.GPR, %struct.GPR* %136, i32 0, i32 33
  %138 = getelementptr inbounds %struct.Reg, %struct.Reg* %137, i32 0, i32 0
  %PC.i1509 = bitcast %union.anon* %138 to i64*
  %139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %140 = getelementptr inbounds %struct.GPR, %struct.GPR* %139, i32 0, i32 15
  %141 = getelementptr inbounds %struct.Reg, %struct.Reg* %140, i32 0, i32 0
  %RBP.i1510 = bitcast %union.anon* %141 to i64*
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %143 = getelementptr inbounds %struct.GPR, %struct.GPR* %142, i32 0, i32 23
  %144 = getelementptr inbounds %struct.Reg, %struct.Reg* %143, i32 0, i32 0
  %R11.i = bitcast %union.anon* %144 to i64*
  %145 = load i64, i64* %RBP.i1510
  %146 = sub i64 %145, 640
  %147 = load i64, i64* %PC.i1509
  %148 = add i64 %147, 7
  store i64 %148, i64* %PC.i1509
  store i64 %146, i64* %R11.i, align 8
  store %struct.Memory* %loadMem_4757ed, %struct.Memory** %MEMORY
  %loadMem_4757f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %150 = getelementptr inbounds %struct.GPR, %struct.GPR* %149, i32 0, i32 33
  %151 = getelementptr inbounds %struct.Reg, %struct.Reg* %150, i32 0, i32 0
  %PC.i1604 = bitcast %union.anon* %151 to i64*
  %152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %153 = getelementptr inbounds %struct.GPR, %struct.GPR* %152, i32 0, i32 17
  %154 = getelementptr inbounds %struct.Reg, %struct.Reg* %153, i32 0, i32 0
  %R8D.i1605 = bitcast %union.anon* %154 to i32*
  %155 = bitcast i32* %R8D.i1605 to i64*
  %156 = load i64, i64* %PC.i1604
  %157 = add i64 %156, 6
  store i64 %157, i64* %PC.i1604
  store i64 3, i64* %155, align 8
  store %struct.Memory* %loadMem_4757f4, %struct.Memory** %MEMORY
  %loadMem_4757fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 33
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %PC.i1625 = bitcast %union.anon* %160 to i64*
  %161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %162 = getelementptr inbounds %struct.GPR, %struct.GPR* %161, i32 0, i32 11
  %163 = getelementptr inbounds %struct.Reg, %struct.Reg* %162, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %163 to i32*
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %165 = getelementptr inbounds %struct.GPR, %struct.GPR* %164, i32 0, i32 15
  %166 = getelementptr inbounds %struct.Reg, %struct.Reg* %165, i32 0, i32 0
  %RBP.i1626 = bitcast %union.anon* %166 to i64*
  %167 = load i64, i64* %RBP.i1626
  %168 = sub i64 %167, 8
  %169 = load i32, i32* %EDI.i
  %170 = zext i32 %169 to i64
  %171 = load i64, i64* %PC.i1625
  %172 = add i64 %171, 3
  store i64 %172, i64* %PC.i1625
  %173 = inttoptr i64 %168 to i32*
  store i32 %169, i32* %173
  store %struct.Memory* %loadMem_4757fa, %struct.Memory** %MEMORY
  %loadMem_4757fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 33
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %PC.i1649 = bitcast %union.anon* %176 to i64*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 9
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %ESI.i1650 = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 15
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %RBP.i1651 = bitcast %union.anon* %182 to i64*
  %183 = load i64, i64* %RBP.i1651
  %184 = sub i64 %183, 12
  %185 = load i32, i32* %ESI.i1650
  %186 = zext i32 %185 to i64
  %187 = load i64, i64* %PC.i1649
  %188 = add i64 %187, 3
  store i64 %188, i64* %PC.i1649
  %189 = inttoptr i64 %184 to i32*
  store i32 %185, i32* %189
  store %struct.Memory* %loadMem_4757fd, %struct.Memory** %MEMORY
  %loadMem_475800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %191 = getelementptr inbounds %struct.GPR, %struct.GPR* %190, i32 0, i32 33
  %192 = getelementptr inbounds %struct.Reg, %struct.Reg* %191, i32 0, i32 0
  %PC.i1676 = bitcast %union.anon* %192 to i64*
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %194 = getelementptr inbounds %struct.GPR, %struct.GPR* %193, i32 0, i32 7
  %195 = getelementptr inbounds %struct.Reg, %struct.Reg* %194, i32 0, i32 0
  %EDX.i1677 = bitcast %union.anon* %195 to i32*
  %196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %197 = getelementptr inbounds %struct.GPR, %struct.GPR* %196, i32 0, i32 15
  %198 = getelementptr inbounds %struct.Reg, %struct.Reg* %197, i32 0, i32 0
  %RBP.i1678 = bitcast %union.anon* %198 to i64*
  %199 = load i64, i64* %RBP.i1678
  %200 = sub i64 %199, 16
  %201 = load i32, i32* %EDX.i1677
  %202 = zext i32 %201 to i64
  %203 = load i64, i64* %PC.i1676
  %204 = add i64 %203, 3
  store i64 %204, i64* %PC.i1676
  %205 = inttoptr i64 %200 to i32*
  store i32 %201, i32* %205
  store %struct.Memory* %loadMem_475800, %struct.Memory** %MEMORY
  %loadMem_475803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %207 = getelementptr inbounds %struct.GPR, %struct.GPR* %206, i32 0, i32 33
  %208 = getelementptr inbounds %struct.Reg, %struct.Reg* %207, i32 0, i32 0
  %PC.i1714 = bitcast %union.anon* %208 to i64*
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %210 = getelementptr inbounds %struct.GPR, %struct.GPR* %209, i32 0, i32 5
  %211 = getelementptr inbounds %struct.Reg, %struct.Reg* %210, i32 0, i32 0
  %RCX.i1715 = bitcast %union.anon* %211 to i64*
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %213 = getelementptr inbounds %struct.GPR, %struct.GPR* %212, i32 0, i32 15
  %214 = getelementptr inbounds %struct.Reg, %struct.Reg* %213, i32 0, i32 0
  %RBP.i1716 = bitcast %union.anon* %214 to i64*
  %215 = load i64, i64* %RBP.i1716
  %216 = sub i64 %215, 24
  %217 = load i64, i64* %RCX.i1715
  %218 = load i64, i64* %PC.i1714
  %219 = add i64 %218, 4
  store i64 %219, i64* %PC.i1714
  %220 = inttoptr i64 %216 to i64*
  store i64 %217, i64* %220
  store %struct.Memory* %loadMem_475803, %struct.Memory** %MEMORY
  %loadMem_475807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 33
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %PC.i1795 = bitcast %union.anon* %223 to i64*
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %225 = getelementptr inbounds %struct.GPR, %struct.GPR* %224, i32 0, i32 15
  %226 = getelementptr inbounds %struct.Reg, %struct.Reg* %225, i32 0, i32 0
  %RBP.i1796 = bitcast %union.anon* %226 to i64*
  %227 = load i64, i64* %RBP.i1796
  %228 = sub i64 %227, 212
  %229 = load i64, i64* %PC.i1795
  %230 = add i64 %229, 10
  store i64 %230, i64* %PC.i1795
  %231 = inttoptr i64 %228 to i32*
  store i32 0, i32* %231
  store %struct.Memory* %loadMem_475807, %struct.Memory** %MEMORY
  %loadMem_475811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %233 = getelementptr inbounds %struct.GPR, %struct.GPR* %232, i32 0, i32 33
  %234 = getelementptr inbounds %struct.Reg, %struct.Reg* %233, i32 0, i32 0
  %PC.i1832 = bitcast %union.anon* %234 to i64*
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %236 = getelementptr inbounds %struct.GPR, %struct.GPR* %235, i32 0, i32 15
  %237 = getelementptr inbounds %struct.Reg, %struct.Reg* %236, i32 0, i32 0
  %RBP.i1833 = bitcast %union.anon* %237 to i64*
  %238 = load i64, i64* %RBP.i1833
  %239 = sub i64 %238, 216
  %240 = load i64, i64* %PC.i1832
  %241 = add i64 %240, 10
  store i64 %241, i64* %PC.i1832
  %242 = inttoptr i64 %239 to i32*
  store i32 0, i32* %242
  store %struct.Memory* %loadMem_475811, %struct.Memory** %MEMORY
  %loadMem_47581b = load %struct.Memory*, %struct.Memory** %MEMORY
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %244 = getelementptr inbounds %struct.GPR, %struct.GPR* %243, i32 0, i32 33
  %245 = getelementptr inbounds %struct.Reg, %struct.Reg* %244, i32 0, i32 0
  %PC.i1890 = bitcast %union.anon* %245 to i64*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %247 = getelementptr inbounds %struct.GPR, %struct.GPR* %246, i32 0, i32 5
  %248 = getelementptr inbounds %struct.Reg, %struct.Reg* %247, i32 0, i32 0
  %RCX.i1891 = bitcast %union.anon* %248 to i64*
  %249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %250 = getelementptr inbounds %struct.GPR, %struct.GPR* %249, i32 0, i32 15
  %251 = getelementptr inbounds %struct.Reg, %struct.Reg* %250, i32 0, i32 0
  %RBP.i1892 = bitcast %union.anon* %251 to i64*
  %252 = load i64, i64* %RBP.i1892
  %253 = sub i64 %252, 8
  %254 = load i64, i64* %PC.i1890
  %255 = add i64 %254, 4
  store i64 %255, i64* %PC.i1890
  %256 = inttoptr i64 %253 to i32*
  %257 = load i32, i32* %256
  %258 = sext i32 %257 to i64
  store i64 %258, i64* %RCX.i1891, align 8
  store %struct.Memory* %loadMem_47581b, %struct.Memory** %MEMORY
  %loadMem_47581f = load %struct.Memory*, %struct.Memory** %MEMORY
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %260 = getelementptr inbounds %struct.GPR, %struct.GPR* %259, i32 0, i32 33
  %261 = getelementptr inbounds %struct.Reg, %struct.Reg* %260, i32 0, i32 0
  %PC.i1919 = bitcast %union.anon* %261 to i64*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %263 = getelementptr inbounds %struct.GPR, %struct.GPR* %262, i32 0, i32 5
  %264 = getelementptr inbounds %struct.Reg, %struct.Reg* %263, i32 0, i32 0
  %RCX.i1920 = bitcast %union.anon* %264 to i64*
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %266 = getelementptr inbounds %struct.GPR, %struct.GPR* %265, i32 0, i32 7
  %267 = getelementptr inbounds %struct.Reg, %struct.Reg* %266, i32 0, i32 0
  %RDX.i1921 = bitcast %union.anon* %267 to i64*
  %268 = load i64, i64* %RCX.i1920
  %269 = add i64 %268, 12099168
  %270 = load i64, i64* %PC.i1919
  %271 = add i64 %270, 8
  store i64 %271, i64* %PC.i1919
  %272 = inttoptr i64 %269 to i8*
  %273 = load i8, i8* %272
  %274 = zext i8 %273 to i64
  store i64 %274, i64* %RDX.i1921, align 8
  store %struct.Memory* %loadMem_47581f, %struct.Memory** %MEMORY
  %loadMem_475827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 33
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %PC.i2023 = bitcast %union.anon* %277 to i64*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 7
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %EDX.i2024 = bitcast %union.anon* %280 to i32*
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %282 = getelementptr inbounds %struct.GPR, %struct.GPR* %281, i32 0, i32 15
  %283 = getelementptr inbounds %struct.Reg, %struct.Reg* %282, i32 0, i32 0
  %RBP.i2025 = bitcast %union.anon* %283 to i64*
  %284 = load i64, i64* %RBP.i2025
  %285 = sub i64 %284, 228
  %286 = load i32, i32* %EDX.i2024
  %287 = zext i32 %286 to i64
  %288 = load i64, i64* %PC.i2023
  %289 = add i64 %288, 6
  store i64 %289, i64* %PC.i2023
  %290 = inttoptr i64 %285 to i32*
  store i32 %286, i32* %290
  store %struct.Memory* %loadMem_475827, %struct.Memory** %MEMORY
  %loadMem_47582d = load %struct.Memory*, %struct.Memory** %MEMORY
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %292 = getelementptr inbounds %struct.GPR, %struct.GPR* %291, i32 0, i32 33
  %293 = getelementptr inbounds %struct.Reg, %struct.Reg* %292, i32 0, i32 0
  %PC.i2104 = bitcast %union.anon* %293 to i64*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %295 = getelementptr inbounds %struct.GPR, %struct.GPR* %294, i32 0, i32 17
  %296 = getelementptr inbounds %struct.Reg, %struct.Reg* %295, i32 0, i32 0
  %R8D.i2105 = bitcast %union.anon* %296 to i32*
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %298 = getelementptr inbounds %struct.GPR, %struct.GPR* %297, i32 0, i32 15
  %299 = getelementptr inbounds %struct.Reg, %struct.Reg* %298, i32 0, i32 0
  %RBP.i2106 = bitcast %union.anon* %299 to i64*
  %300 = bitcast i32* %R8D.i2105 to i64*
  %301 = load i32, i32* %R8D.i2105
  %302 = zext i32 %301 to i64
  %303 = load i64, i64* %RBP.i2106
  %304 = sub i64 %303, 228
  %305 = load i64, i64* %PC.i2104
  %306 = add i64 %305, 7
  store i64 %306, i64* %PC.i2104
  %307 = inttoptr i64 %304 to i32*
  %308 = load i32, i32* %307
  %309 = sub i32 %301, %308
  %310 = zext i32 %309 to i64
  store i64 %310, i64* %300, align 8
  %311 = icmp ult i32 %301, %308
  %312 = zext i1 %311 to i8
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %312, i8* %313, align 1
  %314 = and i32 %309, 255
  %315 = call i32 @llvm.ctpop.i32(i32 %314)
  %316 = trunc i32 %315 to i8
  %317 = and i8 %316, 1
  %318 = xor i8 %317, 1
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %318, i8* %319, align 1
  %320 = xor i32 %308, %301
  %321 = xor i32 %320, %309
  %322 = lshr i32 %321, 4
  %323 = trunc i32 %322 to i8
  %324 = and i8 %323, 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %324, i8* %325, align 1
  %326 = icmp eq i32 %309, 0
  %327 = zext i1 %326 to i8
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %327, i8* %328, align 1
  %329 = lshr i32 %309, 31
  %330 = trunc i32 %329 to i8
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %330, i8* %331, align 1
  %332 = lshr i32 %301, 31
  %333 = lshr i32 %308, 31
  %334 = xor i32 %333, %332
  %335 = xor i32 %329, %332
  %336 = add i32 %335, %334
  %337 = icmp eq i32 %336, 2
  %338 = zext i1 %337 to i8
  %339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %338, i8* %339, align 1
  store %struct.Memory* %loadMem_47582d, %struct.Memory** %MEMORY
  %loadMem_475834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %341 = getelementptr inbounds %struct.GPR, %struct.GPR* %340, i32 0, i32 33
  %342 = getelementptr inbounds %struct.Reg, %struct.Reg* %341, i32 0, i32 0
  %PC.i2128 = bitcast %union.anon* %342 to i64*
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %344 = getelementptr inbounds %struct.GPR, %struct.GPR* %343, i32 0, i32 17
  %345 = getelementptr inbounds %struct.Reg, %struct.Reg* %344, i32 0, i32 0
  %R8D.i2129 = bitcast %union.anon* %345 to i32*
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %347 = getelementptr inbounds %struct.GPR, %struct.GPR* %346, i32 0, i32 15
  %348 = getelementptr inbounds %struct.Reg, %struct.Reg* %347, i32 0, i32 0
  %RBP.i2130 = bitcast %union.anon* %348 to i64*
  %349 = load i64, i64* %RBP.i2130
  %350 = sub i64 %349, 232
  %351 = load i32, i32* %R8D.i2129
  %352 = zext i32 %351 to i64
  %353 = load i64, i64* %PC.i2128
  %354 = add i64 %353, 7
  store i64 %354, i64* %PC.i2128
  %355 = inttoptr i64 %350 to i32*
  store i32 %351, i32* %355
  store %struct.Memory* %loadMem_475834, %struct.Memory** %MEMORY
  %loadMem_47583b = load %struct.Memory*, %struct.Memory** %MEMORY
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %357 = getelementptr inbounds %struct.GPR, %struct.GPR* %356, i32 0, i32 33
  %358 = getelementptr inbounds %struct.Reg, %struct.Reg* %357, i32 0, i32 0
  %PC.i2172 = bitcast %union.anon* %358 to i64*
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %360 = getelementptr inbounds %struct.GPR, %struct.GPR* %359, i32 0, i32 11
  %361 = getelementptr inbounds %struct.Reg, %struct.Reg* %360, i32 0, i32 0
  %RDI.i2173 = bitcast %union.anon* %361 to i64*
  %362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %363 = getelementptr inbounds %struct.GPR, %struct.GPR* %362, i32 0, i32 23
  %364 = getelementptr inbounds %struct.Reg, %struct.Reg* %363, i32 0, i32 0
  %R11.i2174 = bitcast %union.anon* %364 to i64*
  %365 = load i64, i64* %R11.i2174
  %366 = load i64, i64* %PC.i2172
  %367 = add i64 %366, 3
  store i64 %367, i64* %PC.i2172
  store i64 %365, i64* %RDI.i2173, align 8
  store %struct.Memory* %loadMem_47583b, %struct.Memory** %MEMORY
  %loadMem_47583e = load %struct.Memory*, %struct.Memory** %MEMORY
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %369 = getelementptr inbounds %struct.GPR, %struct.GPR* %368, i32 0, i32 33
  %370 = getelementptr inbounds %struct.Reg, %struct.Reg* %369, i32 0, i32 0
  %PC.i2334 = bitcast %union.anon* %370 to i64*
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %372 = getelementptr inbounds %struct.GPR, %struct.GPR* %371, i32 0, i32 1
  %373 = getelementptr inbounds %struct.Reg, %struct.Reg* %372, i32 0, i32 0
  %EAX.i2335 = bitcast %union.anon* %373 to i32*
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %375 = getelementptr inbounds %struct.GPR, %struct.GPR* %374, i32 0, i32 9
  %376 = getelementptr inbounds %struct.Reg, %struct.Reg* %375, i32 0, i32 0
  %RSI.i2336 = bitcast %union.anon* %376 to i64*
  %377 = load i32, i32* %EAX.i2335
  %378 = zext i32 %377 to i64
  %379 = load i64, i64* %PC.i2334
  %380 = add i64 %379, 2
  store i64 %380, i64* %PC.i2334
  %381 = and i64 %378, 4294967295
  store i64 %381, i64* %RSI.i2336, align 8
  store %struct.Memory* %loadMem_47583e, %struct.Memory** %MEMORY
  %loadMem_475840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %383 = getelementptr inbounds %struct.GPR, %struct.GPR* %382, i32 0, i32 33
  %384 = getelementptr inbounds %struct.Reg, %struct.Reg* %383, i32 0, i32 0
  %PC.i2416 = bitcast %union.anon* %384 to i64*
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %386 = getelementptr inbounds %struct.GPR, %struct.GPR* %385, i32 0, i32 7
  %387 = getelementptr inbounds %struct.Reg, %struct.Reg* %386, i32 0, i32 0
  %RDX.i2417 = bitcast %union.anon* %387 to i64*
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %389 = getelementptr inbounds %struct.GPR, %struct.GPR* %388, i32 0, i32 19
  %390 = getelementptr inbounds %struct.Reg, %struct.Reg* %389, i32 0, i32 0
  %R9.i = bitcast %union.anon* %390 to i64*
  %391 = load i64, i64* %R9.i
  %392 = load i64, i64* %PC.i2416
  %393 = add i64 %392, 3
  store i64 %393, i64* %PC.i2416
  store i64 %391, i64* %RDX.i2417, align 8
  store %struct.Memory* %loadMem_475840, %struct.Memory** %MEMORY
  %loadMem_475843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %395 = getelementptr inbounds %struct.GPR, %struct.GPR* %394, i32 0, i32 33
  %396 = getelementptr inbounds %struct.Reg, %struct.Reg* %395, i32 0, i32 0
  %PC.i2439 = bitcast %union.anon* %396 to i64*
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %398 = getelementptr inbounds %struct.GPR, %struct.GPR* %397, i32 0, i32 15
  %399 = getelementptr inbounds %struct.Reg, %struct.Reg* %398, i32 0, i32 0
  %RBP.i2440 = bitcast %union.anon* %399 to i64*
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %401 = getelementptr inbounds %struct.GPR, %struct.GPR* %400, i32 0, i32 21
  %402 = getelementptr inbounds %struct.Reg, %struct.Reg* %401, i32 0, i32 0
  %R10.i2441 = bitcast %union.anon* %402 to i64*
  %403 = load i64, i64* %RBP.i2440
  %404 = sub i64 %403, 1152
  %405 = load i64, i64* %R10.i2441
  %406 = load i64, i64* %PC.i2439
  %407 = add i64 %406, 7
  store i64 %407, i64* %PC.i2439
  %408 = inttoptr i64 %404 to i64*
  store i64 %405, i64* %408
  store %struct.Memory* %loadMem_475843, %struct.Memory** %MEMORY
  %loadMem_47584a = load %struct.Memory*, %struct.Memory** %MEMORY
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %410 = getelementptr inbounds %struct.GPR, %struct.GPR* %409, i32 0, i32 33
  %411 = getelementptr inbounds %struct.Reg, %struct.Reg* %410, i32 0, i32 0
  %PC.i2483 = bitcast %union.anon* %411 to i64*
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %413 = getelementptr inbounds %struct.GPR, %struct.GPR* %412, i32 0, i32 15
  %414 = getelementptr inbounds %struct.Reg, %struct.Reg* %413, i32 0, i32 0
  %RBP.i2484 = bitcast %union.anon* %414 to i64*
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %416 = getelementptr inbounds %struct.GPR, %struct.GPR* %415, i32 0, i32 19
  %417 = getelementptr inbounds %struct.Reg, %struct.Reg* %416, i32 0, i32 0
  %R9.i2485 = bitcast %union.anon* %417 to i64*
  %418 = load i64, i64* %RBP.i2484
  %419 = sub i64 %418, 1160
  %420 = load i64, i64* %R9.i2485
  %421 = load i64, i64* %PC.i2483
  %422 = add i64 %421, 7
  store i64 %422, i64* %PC.i2483
  %423 = inttoptr i64 %419 to i64*
  store i64 %420, i64* %423
  store %struct.Memory* %loadMem_47584a, %struct.Memory** %MEMORY
  %loadMem_475851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %425 = getelementptr inbounds %struct.GPR, %struct.GPR* %424, i32 0, i32 33
  %426 = getelementptr inbounds %struct.Reg, %struct.Reg* %425, i32 0, i32 0
  %PC.i2930 = bitcast %union.anon* %426 to i64*
  %427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %428 = getelementptr inbounds %struct.GPR, %struct.GPR* %427, i32 0, i32 1
  %429 = getelementptr inbounds %struct.Reg, %struct.Reg* %428, i32 0, i32 0
  %EAX.i2931 = bitcast %union.anon* %429 to i32*
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %431 = getelementptr inbounds %struct.GPR, %struct.GPR* %430, i32 0, i32 15
  %432 = getelementptr inbounds %struct.Reg, %struct.Reg* %431, i32 0, i32 0
  %RBP.i2932 = bitcast %union.anon* %432 to i64*
  %433 = load i64, i64* %RBP.i2932
  %434 = sub i64 %433, 1164
  %435 = load i32, i32* %EAX.i2931
  %436 = zext i32 %435 to i64
  %437 = load i64, i64* %PC.i2930
  %438 = add i64 %437, 6
  store i64 %438, i64* %PC.i2930
  %439 = inttoptr i64 %434 to i32*
  store i32 %435, i32* %439
  store %struct.Memory* %loadMem_475851, %struct.Memory** %MEMORY
  %loadMem1_475857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %441 = getelementptr inbounds %struct.GPR, %struct.GPR* %440, i32 0, i32 33
  %442 = getelementptr inbounds %struct.Reg, %struct.Reg* %441, i32 0, i32 0
  %PC.i2943 = bitcast %union.anon* %442 to i64*
  %443 = load i64, i64* %PC.i2943
  %444 = add i64 %443, -477159
  %445 = load i64, i64* %PC.i2943
  %446 = add i64 %445, 5
  %447 = load i64, i64* %PC.i2943
  %448 = add i64 %447, 5
  store i64 %448, i64* %PC.i2943
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %450 = load i64, i64* %449, align 8
  %451 = add i64 %450, -8
  %452 = inttoptr i64 %451 to i64*
  store i64 %446, i64* %452
  store i64 %451, i64* %449, align 8
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %444, i64* %453, align 8
  store %struct.Memory* %loadMem1_475857, %struct.Memory** %MEMORY
  %loadMem2_475857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_475857 = load i64, i64* %3
  %454 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %loadMem2_475857)
  store %struct.Memory* %454, %struct.Memory** %MEMORY
  %loadMem_47585c = load %struct.Memory*, %struct.Memory** %MEMORY
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %456 = getelementptr inbounds %struct.GPR, %struct.GPR* %455, i32 0, i32 33
  %457 = getelementptr inbounds %struct.Reg, %struct.Reg* %456, i32 0, i32 0
  %PC.i2940 = bitcast %union.anon* %457 to i64*
  %458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %459 = getelementptr inbounds %struct.GPR, %struct.GPR* %458, i32 0, i32 11
  %460 = getelementptr inbounds %struct.Reg, %struct.Reg* %459, i32 0, i32 0
  %RDI.i2941 = bitcast %union.anon* %460 to i64*
  %461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %462 = getelementptr inbounds %struct.GPR, %struct.GPR* %461, i32 0, i32 15
  %463 = getelementptr inbounds %struct.Reg, %struct.Reg* %462, i32 0, i32 0
  %RBP.i2942 = bitcast %union.anon* %463 to i64*
  %464 = load i64, i64* %RBP.i2942
  %465 = sub i64 %464, 1152
  %466 = load i64, i64* %PC.i2940
  %467 = add i64 %466, 7
  store i64 %467, i64* %PC.i2940
  %468 = inttoptr i64 %465 to i64*
  %469 = load i64, i64* %468
  store i64 %469, i64* %RDI.i2941, align 8
  store %struct.Memory* %loadMem_47585c, %struct.Memory** %MEMORY
  %loadMem_475863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %471 = getelementptr inbounds %struct.GPR, %struct.GPR* %470, i32 0, i32 33
  %472 = getelementptr inbounds %struct.Reg, %struct.Reg* %471, i32 0, i32 0
  %PC.i2937 = bitcast %union.anon* %472 to i64*
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %474 = getelementptr inbounds %struct.GPR, %struct.GPR* %473, i32 0, i32 9
  %475 = getelementptr inbounds %struct.Reg, %struct.Reg* %474, i32 0, i32 0
  %RSI.i2938 = bitcast %union.anon* %475 to i64*
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %477 = getelementptr inbounds %struct.GPR, %struct.GPR* %476, i32 0, i32 15
  %478 = getelementptr inbounds %struct.Reg, %struct.Reg* %477, i32 0, i32 0
  %RBP.i2939 = bitcast %union.anon* %478 to i64*
  %479 = load i64, i64* %RBP.i2939
  %480 = sub i64 %479, 1164
  %481 = load i64, i64* %PC.i2937
  %482 = add i64 %481, 6
  store i64 %482, i64* %PC.i2937
  %483 = inttoptr i64 %480 to i32*
  %484 = load i32, i32* %483
  %485 = zext i32 %484 to i64
  store i64 %485, i64* %RSI.i2938, align 8
  store %struct.Memory* %loadMem_475863, %struct.Memory** %MEMORY
  %loadMem_475869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %487 = getelementptr inbounds %struct.GPR, %struct.GPR* %486, i32 0, i32 33
  %488 = getelementptr inbounds %struct.Reg, %struct.Reg* %487, i32 0, i32 0
  %PC.i2934 = bitcast %union.anon* %488 to i64*
  %489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %490 = getelementptr inbounds %struct.GPR, %struct.GPR* %489, i32 0, i32 7
  %491 = getelementptr inbounds %struct.Reg, %struct.Reg* %490, i32 0, i32 0
  %RDX.i2935 = bitcast %union.anon* %491 to i64*
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %493 = getelementptr inbounds %struct.GPR, %struct.GPR* %492, i32 0, i32 15
  %494 = getelementptr inbounds %struct.Reg, %struct.Reg* %493, i32 0, i32 0
  %RBP.i2936 = bitcast %union.anon* %494 to i64*
  %495 = load i64, i64* %RBP.i2936
  %496 = sub i64 %495, 1160
  %497 = load i64, i64* %PC.i2934
  %498 = add i64 %497, 7
  store i64 %498, i64* %PC.i2934
  %499 = inttoptr i64 %496 to i64*
  %500 = load i64, i64* %499
  store i64 %500, i64* %RDX.i2935, align 8
  store %struct.Memory* %loadMem_475869, %struct.Memory** %MEMORY
  %loadMem1_475870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %502 = getelementptr inbounds %struct.GPR, %struct.GPR* %501, i32 0, i32 33
  %503 = getelementptr inbounds %struct.Reg, %struct.Reg* %502, i32 0, i32 0
  %PC.i2933 = bitcast %union.anon* %503 to i64*
  %504 = load i64, i64* %PC.i2933
  %505 = add i64 %504, -477184
  %506 = load i64, i64* %PC.i2933
  %507 = add i64 %506, 5
  %508 = load i64, i64* %PC.i2933
  %509 = add i64 %508, 5
  store i64 %509, i64* %PC.i2933
  %510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %511 = load i64, i64* %510, align 8
  %512 = add i64 %511, -8
  %513 = inttoptr i64 %512 to i64*
  store i64 %507, i64* %513
  store i64 %512, i64* %510, align 8
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %505, i64* %514, align 8
  store %struct.Memory* %loadMem1_475870, %struct.Memory** %MEMORY
  %loadMem2_475870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_475870 = load i64, i64* %3
  %515 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %loadMem2_475870)
  store %struct.Memory* %515, %struct.Memory** %MEMORY
  %loadMem_475875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %517 = getelementptr inbounds %struct.GPR, %struct.GPR* %516, i32 0, i32 33
  %518 = getelementptr inbounds %struct.Reg, %struct.Reg* %517, i32 0, i32 0
  %PC.i2928 = bitcast %union.anon* %518 to i64*
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %520 = getelementptr inbounds %struct.GPR, %struct.GPR* %519, i32 0, i32 15
  %521 = getelementptr inbounds %struct.Reg, %struct.Reg* %520, i32 0, i32 0
  %RBP.i2929 = bitcast %union.anon* %521 to i64*
  %522 = load i64, i64* %RBP.i2929
  %523 = sub i64 %522, 48
  %524 = load i64, i64* %PC.i2928
  %525 = add i64 %524, 7
  store i64 %525, i64* %PC.i2928
  %526 = inttoptr i64 %523 to i32*
  store i32 21, i32* %526
  store %struct.Memory* %loadMem_475875, %struct.Memory** %MEMORY
  br label %block_.L_47587c

block_.L_47587c:                                  ; preds = %block_.L_4758ef, %entry
  %loadMem_47587c = load %struct.Memory*, %struct.Memory** %MEMORY
  %527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %528 = getelementptr inbounds %struct.GPR, %struct.GPR* %527, i32 0, i32 33
  %529 = getelementptr inbounds %struct.Reg, %struct.Reg* %528, i32 0, i32 0
  %PC.i2926 = bitcast %union.anon* %529 to i64*
  %530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %531 = getelementptr inbounds %struct.GPR, %struct.GPR* %530, i32 0, i32 15
  %532 = getelementptr inbounds %struct.Reg, %struct.Reg* %531, i32 0, i32 0
  %RBP.i2927 = bitcast %union.anon* %532 to i64*
  %533 = load i64, i64* %RBP.i2927
  %534 = sub i64 %533, 48
  %535 = load i64, i64* %PC.i2926
  %536 = add i64 %535, 7
  store i64 %536, i64* %PC.i2926
  %537 = inttoptr i64 %534 to i32*
  %538 = load i32, i32* %537
  %539 = sub i32 %538, 400
  %540 = icmp ult i32 %538, 400
  %541 = zext i1 %540 to i8
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %541, i8* %542, align 1
  %543 = and i32 %539, 255
  %544 = call i32 @llvm.ctpop.i32(i32 %543)
  %545 = trunc i32 %544 to i8
  %546 = and i8 %545, 1
  %547 = xor i8 %546, 1
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %547, i8* %548, align 1
  %549 = xor i32 %538, 400
  %550 = xor i32 %549, %539
  %551 = lshr i32 %550, 4
  %552 = trunc i32 %551 to i8
  %553 = and i8 %552, 1
  %554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %553, i8* %554, align 1
  %555 = icmp eq i32 %539, 0
  %556 = zext i1 %555 to i8
  %557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %556, i8* %557, align 1
  %558 = lshr i32 %539, 31
  %559 = trunc i32 %558 to i8
  %560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %559, i8* %560, align 1
  %561 = lshr i32 %538, 31
  %562 = xor i32 %558, %561
  %563 = add i32 %562, %561
  %564 = icmp eq i32 %563, 2
  %565 = zext i1 %564 to i8
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %565, i8* %566, align 1
  store %struct.Memory* %loadMem_47587c, %struct.Memory** %MEMORY
  %loadMem_475883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %568 = getelementptr inbounds %struct.GPR, %struct.GPR* %567, i32 0, i32 33
  %569 = getelementptr inbounds %struct.Reg, %struct.Reg* %568, i32 0, i32 0
  %PC.i2925 = bitcast %union.anon* %569 to i64*
  %570 = load i64, i64* %PC.i2925
  %571 = add i64 %570, 122
  %572 = load i64, i64* %PC.i2925
  %573 = add i64 %572, 6
  %574 = load i64, i64* %PC.i2925
  %575 = add i64 %574, 6
  store i64 %575, i64* %PC.i2925
  %576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %577 = load i8, i8* %576, align 1
  %578 = icmp ne i8 %577, 0
  %579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %580 = load i8, i8* %579, align 1
  %581 = icmp ne i8 %580, 0
  %582 = xor i1 %578, %581
  %583 = xor i1 %582, true
  %584 = zext i1 %583 to i8
  store i8 %584, i8* %BRANCH_TAKEN, align 1
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %586 = select i1 %582, i64 %573, i64 %571
  store i64 %586, i64* %585, align 8
  store %struct.Memory* %loadMem_475883, %struct.Memory** %MEMORY
  %loadBr_475883 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475883 = icmp eq i8 %loadBr_475883, 1
  br i1 %cmpBr_475883, label %block_.L_4758fd, label %block_475889

block_475889:                                     ; preds = %block_.L_47587c
  %loadMem_475889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %588 = getelementptr inbounds %struct.GPR, %struct.GPR* %587, i32 0, i32 33
  %589 = getelementptr inbounds %struct.Reg, %struct.Reg* %588, i32 0, i32 0
  %PC.i2922 = bitcast %union.anon* %589 to i64*
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %591 = getelementptr inbounds %struct.GPR, %struct.GPR* %590, i32 0, i32 1
  %592 = getelementptr inbounds %struct.Reg, %struct.Reg* %591, i32 0, i32 0
  %RAX.i2923 = bitcast %union.anon* %592 to i64*
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %594 = getelementptr inbounds %struct.GPR, %struct.GPR* %593, i32 0, i32 15
  %595 = getelementptr inbounds %struct.Reg, %struct.Reg* %594, i32 0, i32 0
  %RBP.i2924 = bitcast %union.anon* %595 to i64*
  %596 = load i64, i64* %RBP.i2924
  %597 = sub i64 %596, 48
  %598 = load i64, i64* %PC.i2922
  %599 = add i64 %598, 4
  store i64 %599, i64* %PC.i2922
  %600 = inttoptr i64 %597 to i32*
  %601 = load i32, i32* %600
  %602 = sext i32 %601 to i64
  store i64 %602, i64* %RAX.i2923, align 8
  store %struct.Memory* %loadMem_475889, %struct.Memory** %MEMORY
  %loadMem_47588d = load %struct.Memory*, %struct.Memory** %MEMORY
  %603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %604 = getelementptr inbounds %struct.GPR, %struct.GPR* %603, i32 0, i32 33
  %605 = getelementptr inbounds %struct.Reg, %struct.Reg* %604, i32 0, i32 0
  %PC.i2919 = bitcast %union.anon* %605 to i64*
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %607 = getelementptr inbounds %struct.GPR, %struct.GPR* %606, i32 0, i32 1
  %608 = getelementptr inbounds %struct.Reg, %struct.Reg* %607, i32 0, i32 0
  %RAX.i2920 = bitcast %union.anon* %608 to i64*
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %610 = getelementptr inbounds %struct.GPR, %struct.GPR* %609, i32 0, i32 5
  %611 = getelementptr inbounds %struct.Reg, %struct.Reg* %610, i32 0, i32 0
  %RCX.i2921 = bitcast %union.anon* %611 to i64*
  %612 = load i64, i64* %RAX.i2920
  %613 = add i64 %612, 12099168
  %614 = load i64, i64* %PC.i2919
  %615 = add i64 %614, 8
  store i64 %615, i64* %PC.i2919
  %616 = inttoptr i64 %613 to i8*
  %617 = load i8, i8* %616
  %618 = zext i8 %617 to i64
  store i64 %618, i64* %RCX.i2921, align 8
  store %struct.Memory* %loadMem_47588d, %struct.Memory** %MEMORY
  %loadMem_475895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %620 = getelementptr inbounds %struct.GPR, %struct.GPR* %619, i32 0, i32 33
  %621 = getelementptr inbounds %struct.Reg, %struct.Reg* %620, i32 0, i32 0
  %PC.i2917 = bitcast %union.anon* %621 to i64*
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %623 = getelementptr inbounds %struct.GPR, %struct.GPR* %622, i32 0, i32 5
  %624 = getelementptr inbounds %struct.Reg, %struct.Reg* %623, i32 0, i32 0
  %ECX.i2918 = bitcast %union.anon* %624 to i32*
  %625 = load i32, i32* %ECX.i2918
  %626 = zext i32 %625 to i64
  %627 = load i64, i64* %PC.i2917
  %628 = add i64 %627, 3
  store i64 %628, i64* %PC.i2917
  %629 = sub i32 %625, 3
  %630 = icmp ult i32 %625, 3
  %631 = zext i1 %630 to i8
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %631, i8* %632, align 1
  %633 = and i32 %629, 255
  %634 = call i32 @llvm.ctpop.i32(i32 %633)
  %635 = trunc i32 %634 to i8
  %636 = and i8 %635, 1
  %637 = xor i8 %636, 1
  %638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %637, i8* %638, align 1
  %639 = xor i64 3, %626
  %640 = trunc i64 %639 to i32
  %641 = xor i32 %640, %629
  %642 = lshr i32 %641, 4
  %643 = trunc i32 %642 to i8
  %644 = and i8 %643, 1
  %645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %644, i8* %645, align 1
  %646 = icmp eq i32 %629, 0
  %647 = zext i1 %646 to i8
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %647, i8* %648, align 1
  %649 = lshr i32 %629, 31
  %650 = trunc i32 %649 to i8
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %650, i8* %651, align 1
  %652 = lshr i32 %625, 31
  %653 = xor i32 %649, %652
  %654 = add i32 %653, %652
  %655 = icmp eq i32 %654, 2
  %656 = zext i1 %655 to i8
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %656, i8* %657, align 1
  store %struct.Memory* %loadMem_475895, %struct.Memory** %MEMORY
  %loadMem_475898 = load %struct.Memory*, %struct.Memory** %MEMORY
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %659 = getelementptr inbounds %struct.GPR, %struct.GPR* %658, i32 0, i32 33
  %660 = getelementptr inbounds %struct.Reg, %struct.Reg* %659, i32 0, i32 0
  %PC.i2916 = bitcast %union.anon* %660 to i64*
  %661 = load i64, i64* %PC.i2916
  %662 = add i64 %661, 82
  %663 = load i64, i64* %PC.i2916
  %664 = add i64 %663, 6
  %665 = load i64, i64* %PC.i2916
  %666 = add i64 %665, 6
  store i64 %666, i64* %PC.i2916
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %668 = load i8, i8* %667, align 1
  store i8 %668, i8* %BRANCH_TAKEN, align 1
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %670 = icmp ne i8 %668, 0
  %671 = select i1 %670, i64 %662, i64 %664
  store i64 %671, i64* %669, align 8
  store %struct.Memory* %loadMem_475898, %struct.Memory** %MEMORY
  %loadBr_475898 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475898 = icmp eq i8 %loadBr_475898, 1
  br i1 %cmpBr_475898, label %block_.L_4758ea, label %block_47589e

block_47589e:                                     ; preds = %block_475889
  %loadMem_47589e = load %struct.Memory*, %struct.Memory** %MEMORY
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %673 = getelementptr inbounds %struct.GPR, %struct.GPR* %672, i32 0, i32 33
  %674 = getelementptr inbounds %struct.Reg, %struct.Reg* %673, i32 0, i32 0
  %PC.i2914 = bitcast %union.anon* %674 to i64*
  %675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %676 = getelementptr inbounds %struct.GPR, %struct.GPR* %675, i32 0, i32 1
  %677 = getelementptr inbounds %struct.Reg, %struct.Reg* %676, i32 0, i32 0
  %RAX.i2915 = bitcast %union.anon* %677 to i64*
  %678 = load i64, i64* %PC.i2914
  %679 = add i64 %678, 10
  store i64 %679, i64* %PC.i2914
  store i64 ptrtoint (%G__0xb0eff0_type* @G__0xb0eff0 to i64), i64* %RAX.i2915, align 8
  store %struct.Memory* %loadMem_47589e, %struct.Memory** %MEMORY
  %loadMem_4758a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %681 = getelementptr inbounds %struct.GPR, %struct.GPR* %680, i32 0, i32 33
  %682 = getelementptr inbounds %struct.Reg, %struct.Reg* %681, i32 0, i32 0
  %PC.i2911 = bitcast %union.anon* %682 to i64*
  %683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %684 = getelementptr inbounds %struct.GPR, %struct.GPR* %683, i32 0, i32 5
  %685 = getelementptr inbounds %struct.Reg, %struct.Reg* %684, i32 0, i32 0
  %RCX.i2912 = bitcast %union.anon* %685 to i64*
  %686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %687 = getelementptr inbounds %struct.GPR, %struct.GPR* %686, i32 0, i32 15
  %688 = getelementptr inbounds %struct.Reg, %struct.Reg* %687, i32 0, i32 0
  %RBP.i2913 = bitcast %union.anon* %688 to i64*
  %689 = load i64, i64* %RBP.i2913
  %690 = sub i64 %689, 48
  %691 = load i64, i64* %PC.i2911
  %692 = add i64 %691, 4
  store i64 %692, i64* %PC.i2911
  %693 = inttoptr i64 %690 to i32*
  %694 = load i32, i32* %693
  %695 = sext i32 %694 to i64
  store i64 %695, i64* %RCX.i2912, align 8
  store %struct.Memory* %loadMem_4758a8, %struct.Memory** %MEMORY
  %loadMem_4758ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %697 = getelementptr inbounds %struct.GPR, %struct.GPR* %696, i32 0, i32 33
  %698 = getelementptr inbounds %struct.Reg, %struct.Reg* %697, i32 0, i32 0
  %PC.i2909 = bitcast %union.anon* %698 to i64*
  %699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %700 = getelementptr inbounds %struct.GPR, %struct.GPR* %699, i32 0, i32 5
  %701 = getelementptr inbounds %struct.Reg, %struct.Reg* %700, i32 0, i32 0
  %RCX.i2910 = bitcast %union.anon* %701 to i64*
  %702 = load i64, i64* %RCX.i2910
  %703 = load i64, i64* %PC.i2909
  %704 = add i64 %703, 7
  store i64 %704, i64* %PC.i2909
  %705 = sext i64 %702 to i128
  %706 = and i128 %705, -18446744073709551616
  %707 = zext i64 %702 to i128
  %708 = or i128 %706, %707
  %709 = mul i128 380, %708
  %710 = trunc i128 %709 to i64
  store i64 %710, i64* %RCX.i2910, align 8
  %711 = sext i64 %710 to i128
  %712 = icmp ne i128 %711, %709
  %713 = zext i1 %712 to i8
  %714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %713, i8* %714, align 1
  %715 = trunc i128 %709 to i32
  %716 = and i32 %715, 255
  %717 = call i32 @llvm.ctpop.i32(i32 %716)
  %718 = trunc i32 %717 to i8
  %719 = and i8 %718, 1
  %720 = xor i8 %719, 1
  %721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %720, i8* %721, align 1
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %722, align 1
  %723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %723, align 1
  %724 = lshr i64 %710, 63
  %725 = trunc i64 %724 to i8
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %725, i8* %726, align 1
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %713, i8* %727, align 1
  store %struct.Memory* %loadMem_4758ac, %struct.Memory** %MEMORY
  %loadMem_4758b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %729 = getelementptr inbounds %struct.GPR, %struct.GPR* %728, i32 0, i32 33
  %730 = getelementptr inbounds %struct.Reg, %struct.Reg* %729, i32 0, i32 0
  %PC.i2906 = bitcast %union.anon* %730 to i64*
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 1
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %RAX.i2907 = bitcast %union.anon* %733 to i64*
  %734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %735 = getelementptr inbounds %struct.GPR, %struct.GPR* %734, i32 0, i32 5
  %736 = getelementptr inbounds %struct.Reg, %struct.Reg* %735, i32 0, i32 0
  %RCX.i2908 = bitcast %union.anon* %736 to i64*
  %737 = load i64, i64* %RAX.i2907
  %738 = load i64, i64* %RCX.i2908
  %739 = load i64, i64* %PC.i2906
  %740 = add i64 %739, 3
  store i64 %740, i64* %PC.i2906
  %741 = add i64 %738, %737
  store i64 %741, i64* %RAX.i2907, align 8
  %742 = icmp ult i64 %741, %737
  %743 = icmp ult i64 %741, %738
  %744 = or i1 %742, %743
  %745 = zext i1 %744 to i8
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %745, i8* %746, align 1
  %747 = trunc i64 %741 to i32
  %748 = and i32 %747, 255
  %749 = call i32 @llvm.ctpop.i32(i32 %748)
  %750 = trunc i32 %749 to i8
  %751 = and i8 %750, 1
  %752 = xor i8 %751, 1
  %753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %752, i8* %753, align 1
  %754 = xor i64 %738, %737
  %755 = xor i64 %754, %741
  %756 = lshr i64 %755, 4
  %757 = trunc i64 %756 to i8
  %758 = and i8 %757, 1
  %759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %758, i8* %759, align 1
  %760 = icmp eq i64 %741, 0
  %761 = zext i1 %760 to i8
  %762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %761, i8* %762, align 1
  %763 = lshr i64 %741, 63
  %764 = trunc i64 %763 to i8
  %765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %764, i8* %765, align 1
  %766 = lshr i64 %737, 63
  %767 = lshr i64 %738, 63
  %768 = xor i64 %763, %766
  %769 = xor i64 %763, %767
  %770 = add i64 %768, %769
  %771 = icmp eq i64 %770, 2
  %772 = zext i1 %771 to i8
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %772, i8* %773, align 1
  store %struct.Memory* %loadMem_4758b3, %struct.Memory** %MEMORY
  %loadMem_4758b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %775 = getelementptr inbounds %struct.GPR, %struct.GPR* %774, i32 0, i32 33
  %776 = getelementptr inbounds %struct.Reg, %struct.Reg* %775, i32 0, i32 0
  %PC.i2903 = bitcast %union.anon* %776 to i64*
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %778 = getelementptr inbounds %struct.GPR, %struct.GPR* %777, i32 0, i32 1
  %779 = getelementptr inbounds %struct.Reg, %struct.Reg* %778, i32 0, i32 0
  %RAX.i2904 = bitcast %union.anon* %779 to i64*
  %780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %781 = getelementptr inbounds %struct.GPR, %struct.GPR* %780, i32 0, i32 7
  %782 = getelementptr inbounds %struct.Reg, %struct.Reg* %781, i32 0, i32 0
  %RDX.i2905 = bitcast %union.anon* %782 to i64*
  %783 = load i64, i64* %RAX.i2904
  %784 = add i64 %783, 12
  %785 = load i64, i64* %PC.i2903
  %786 = add i64 %785, 3
  store i64 %786, i64* %PC.i2903
  %787 = inttoptr i64 %784 to i32*
  %788 = load i32, i32* %787
  %789 = zext i32 %788 to i64
  store i64 %789, i64* %RDX.i2905, align 8
  store %struct.Memory* %loadMem_4758b6, %struct.Memory** %MEMORY
  %loadMem_4758b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %791 = getelementptr inbounds %struct.GPR, %struct.GPR* %790, i32 0, i32 33
  %792 = getelementptr inbounds %struct.Reg, %struct.Reg* %791, i32 0, i32 0
  %PC.i2900 = bitcast %union.anon* %792 to i64*
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %794 = getelementptr inbounds %struct.GPR, %struct.GPR* %793, i32 0, i32 7
  %795 = getelementptr inbounds %struct.Reg, %struct.Reg* %794, i32 0, i32 0
  %EDX.i2901 = bitcast %union.anon* %795 to i32*
  %796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %797 = getelementptr inbounds %struct.GPR, %struct.GPR* %796, i32 0, i32 15
  %798 = getelementptr inbounds %struct.Reg, %struct.Reg* %797, i32 0, i32 0
  %RBP.i2902 = bitcast %union.anon* %798 to i64*
  %799 = load i32, i32* %EDX.i2901
  %800 = zext i32 %799 to i64
  %801 = load i64, i64* %RBP.i2902
  %802 = sub i64 %801, 48
  %803 = load i64, i64* %PC.i2900
  %804 = add i64 %803, 3
  store i64 %804, i64* %PC.i2900
  %805 = inttoptr i64 %802 to i32*
  %806 = load i32, i32* %805
  %807 = sub i32 %799, %806
  %808 = icmp ult i32 %799, %806
  %809 = zext i1 %808 to i8
  %810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %809, i8* %810, align 1
  %811 = and i32 %807, 255
  %812 = call i32 @llvm.ctpop.i32(i32 %811)
  %813 = trunc i32 %812 to i8
  %814 = and i8 %813, 1
  %815 = xor i8 %814, 1
  %816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %815, i8* %816, align 1
  %817 = xor i32 %806, %799
  %818 = xor i32 %817, %807
  %819 = lshr i32 %818, 4
  %820 = trunc i32 %819 to i8
  %821 = and i8 %820, 1
  %822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %821, i8* %822, align 1
  %823 = icmp eq i32 %807, 0
  %824 = zext i1 %823 to i8
  %825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %824, i8* %825, align 1
  %826 = lshr i32 %807, 31
  %827 = trunc i32 %826 to i8
  %828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %827, i8* %828, align 1
  %829 = lshr i32 %799, 31
  %830 = lshr i32 %806, 31
  %831 = xor i32 %830, %829
  %832 = xor i32 %826, %829
  %833 = add i32 %832, %831
  %834 = icmp eq i32 %833, 2
  %835 = zext i1 %834 to i8
  %836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %835, i8* %836, align 1
  store %struct.Memory* %loadMem_4758b9, %struct.Memory** %MEMORY
  %loadMem_4758bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %838 = getelementptr inbounds %struct.GPR, %struct.GPR* %837, i32 0, i32 33
  %839 = getelementptr inbounds %struct.Reg, %struct.Reg* %838, i32 0, i32 0
  %PC.i2899 = bitcast %union.anon* %839 to i64*
  %840 = load i64, i64* %PC.i2899
  %841 = add i64 %840, 46
  %842 = load i64, i64* %PC.i2899
  %843 = add i64 %842, 6
  %844 = load i64, i64* %PC.i2899
  %845 = add i64 %844, 6
  store i64 %845, i64* %PC.i2899
  %846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %847 = load i8, i8* %846, align 1
  %848 = icmp eq i8 %847, 0
  %849 = zext i1 %848 to i8
  store i8 %849, i8* %BRANCH_TAKEN, align 1
  %850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %851 = select i1 %848, i64 %841, i64 %843
  store i64 %851, i64* %850, align 8
  store %struct.Memory* %loadMem_4758bc, %struct.Memory** %MEMORY
  %loadBr_4758bc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4758bc = icmp eq i8 %loadBr_4758bc, 1
  br i1 %cmpBr_4758bc, label %block_.L_4758ea, label %block_4758c2

block_4758c2:                                     ; preds = %block_47589e
  %loadMem_4758c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 33
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %PC.i2896 = bitcast %union.anon* %854 to i64*
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 11
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %RDI.i2897 = bitcast %union.anon* %857 to i64*
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %859 = getelementptr inbounds %struct.GPR, %struct.GPR* %858, i32 0, i32 15
  %860 = getelementptr inbounds %struct.Reg, %struct.Reg* %859, i32 0, i32 0
  %RBP.i2898 = bitcast %union.anon* %860 to i64*
  %861 = load i64, i64* %RBP.i2898
  %862 = sub i64 %861, 48
  %863 = load i64, i64* %PC.i2896
  %864 = add i64 %863, 3
  store i64 %864, i64* %PC.i2896
  %865 = inttoptr i64 %862 to i32*
  %866 = load i32, i32* %865
  %867 = zext i32 %866 to i64
  store i64 %867, i64* %RDI.i2897, align 8
  store %struct.Memory* %loadMem_4758c2, %struct.Memory** %MEMORY
  %loadMem_4758c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %869 = getelementptr inbounds %struct.GPR, %struct.GPR* %868, i32 0, i32 33
  %870 = getelementptr inbounds %struct.Reg, %struct.Reg* %869, i32 0, i32 0
  %PC.i2893 = bitcast %union.anon* %870 to i64*
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %872 = getelementptr inbounds %struct.GPR, %struct.GPR* %871, i32 0, i32 9
  %873 = getelementptr inbounds %struct.Reg, %struct.Reg* %872, i32 0, i32 0
  %RSI.i2894 = bitcast %union.anon* %873 to i64*
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %875 = getelementptr inbounds %struct.GPR, %struct.GPR* %874, i32 0, i32 15
  %876 = getelementptr inbounds %struct.Reg, %struct.Reg* %875, i32 0, i32 0
  %RBP.i2895 = bitcast %union.anon* %876 to i64*
  %877 = load i64, i64* %RBP.i2895
  %878 = sub i64 %877, 8
  %879 = load i64, i64* %PC.i2893
  %880 = add i64 %879, 3
  store i64 %880, i64* %PC.i2893
  %881 = inttoptr i64 %878 to i32*
  %882 = load i32, i32* %881
  %883 = zext i32 %882 to i64
  store i64 %883, i64* %RSI.i2894, align 8
  store %struct.Memory* %loadMem_4758c5, %struct.Memory** %MEMORY
  %loadMem1_4758c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 33
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %PC.i2892 = bitcast %union.anon* %886 to i64*
  %887 = load i64, i64* %PC.i2892
  %888 = add i64 %887, -351384
  %889 = load i64, i64* %PC.i2892
  %890 = add i64 %889, 5
  %891 = load i64, i64* %PC.i2892
  %892 = add i64 %891, 5
  store i64 %892, i64* %PC.i2892
  %893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %894 = load i64, i64* %893, align 8
  %895 = add i64 %894, -8
  %896 = inttoptr i64 %895 to i64*
  store i64 %890, i64* %896
  store i64 %895, i64* %893, align 8
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %888, i64* %897, align 8
  store %struct.Memory* %loadMem1_4758c8, %struct.Memory** %MEMORY
  %loadMem2_4758c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4758c8 = load i64, i64* %3
  %call2_4758c8 = call %struct.Memory* @sub_41fc30.is_same_dragon(%struct.State* %0, i64 %loadPC_4758c8, %struct.Memory* %loadMem2_4758c8)
  store %struct.Memory* %call2_4758c8, %struct.Memory** %MEMORY
  %loadMem_4758cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %899 = getelementptr inbounds %struct.GPR, %struct.GPR* %898, i32 0, i32 33
  %900 = getelementptr inbounds %struct.Reg, %struct.Reg* %899, i32 0, i32 0
  %PC.i2890 = bitcast %union.anon* %900 to i64*
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %902 = getelementptr inbounds %struct.GPR, %struct.GPR* %901, i32 0, i32 1
  %903 = getelementptr inbounds %struct.Reg, %struct.Reg* %902, i32 0, i32 0
  %EAX.i2891 = bitcast %union.anon* %903 to i32*
  %904 = load i32, i32* %EAX.i2891
  %905 = zext i32 %904 to i64
  %906 = load i64, i64* %PC.i2890
  %907 = add i64 %906, 3
  store i64 %907, i64* %PC.i2890
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %908, align 1
  %909 = and i32 %904, 255
  %910 = call i32 @llvm.ctpop.i32(i32 %909)
  %911 = trunc i32 %910 to i8
  %912 = and i8 %911, 1
  %913 = xor i8 %912, 1
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %913, i8* %914, align 1
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %915, align 1
  %916 = icmp eq i32 %904, 0
  %917 = zext i1 %916 to i8
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %917, i8* %918, align 1
  %919 = lshr i32 %904, 31
  %920 = trunc i32 %919 to i8
  %921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %920, i8* %921, align 1
  %922 = lshr i32 %904, 31
  %923 = xor i32 %919, %922
  %924 = add i32 %923, %922
  %925 = icmp eq i32 %924, 2
  %926 = zext i1 %925 to i8
  %927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %926, i8* %927, align 1
  store %struct.Memory* %loadMem_4758cd, %struct.Memory** %MEMORY
  %loadMem_4758d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %929 = getelementptr inbounds %struct.GPR, %struct.GPR* %928, i32 0, i32 33
  %930 = getelementptr inbounds %struct.Reg, %struct.Reg* %929, i32 0, i32 0
  %PC.i2889 = bitcast %union.anon* %930 to i64*
  %931 = load i64, i64* %PC.i2889
  %932 = add i64 %931, 26
  %933 = load i64, i64* %PC.i2889
  %934 = add i64 %933, 6
  %935 = load i64, i64* %PC.i2889
  %936 = add i64 %935, 6
  store i64 %936, i64* %PC.i2889
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %938 = load i8, i8* %937, align 1
  store i8 %938, i8* %BRANCH_TAKEN, align 1
  %939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %940 = icmp ne i8 %938, 0
  %941 = select i1 %940, i64 %932, i64 %934
  store i64 %941, i64* %939, align 8
  store %struct.Memory* %loadMem_4758d0, %struct.Memory** %MEMORY
  %loadBr_4758d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4758d0 = icmp eq i8 %loadBr_4758d0, 1
  br i1 %cmpBr_4758d0, label %block_.L_4758ea, label %block_4758d6

block_4758d6:                                     ; preds = %block_4758c2
  %loadMem_4758d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %943 = getelementptr inbounds %struct.GPR, %struct.GPR* %942, i32 0, i32 33
  %944 = getelementptr inbounds %struct.Reg, %struct.Reg* %943, i32 0, i32 0
  %PC.i2887 = bitcast %union.anon* %944 to i64*
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %946 = getelementptr inbounds %struct.GPR, %struct.GPR* %945, i32 0, i32 7
  %947 = getelementptr inbounds %struct.Reg, %struct.Reg* %946, i32 0, i32 0
  %RDX.i2888 = bitcast %union.anon* %947 to i64*
  %948 = load i64, i64* %PC.i2887
  %949 = add i64 %948, 5
  store i64 %949, i64* %PC.i2887
  store i64 1, i64* %RDX.i2888, align 8
  store %struct.Memory* %loadMem_4758d6, %struct.Memory** %MEMORY
  %loadMem_4758db = load %struct.Memory*, %struct.Memory** %MEMORY
  %950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %951 = getelementptr inbounds %struct.GPR, %struct.GPR* %950, i32 0, i32 33
  %952 = getelementptr inbounds %struct.Reg, %struct.Reg* %951, i32 0, i32 0
  %PC.i2884 = bitcast %union.anon* %952 to i64*
  %953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %954 = getelementptr inbounds %struct.GPR, %struct.GPR* %953, i32 0, i32 9
  %955 = getelementptr inbounds %struct.Reg, %struct.Reg* %954, i32 0, i32 0
  %RSI.i2885 = bitcast %union.anon* %955 to i64*
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %957 = getelementptr inbounds %struct.GPR, %struct.GPR* %956, i32 0, i32 15
  %958 = getelementptr inbounds %struct.Reg, %struct.Reg* %957, i32 0, i32 0
  %RBP.i2886 = bitcast %union.anon* %958 to i64*
  %959 = load i64, i64* %RBP.i2886
  %960 = sub i64 %959, 640
  %961 = load i64, i64* %PC.i2884
  %962 = add i64 %961, 7
  store i64 %962, i64* %PC.i2884
  store i64 %960, i64* %RSI.i2885, align 8
  store %struct.Memory* %loadMem_4758db, %struct.Memory** %MEMORY
  %loadMem_4758e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %964 = getelementptr inbounds %struct.GPR, %struct.GPR* %963, i32 0, i32 33
  %965 = getelementptr inbounds %struct.Reg, %struct.Reg* %964, i32 0, i32 0
  %PC.i2881 = bitcast %union.anon* %965 to i64*
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %967 = getelementptr inbounds %struct.GPR, %struct.GPR* %966, i32 0, i32 11
  %968 = getelementptr inbounds %struct.Reg, %struct.Reg* %967, i32 0, i32 0
  %RDI.i2882 = bitcast %union.anon* %968 to i64*
  %969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %970 = getelementptr inbounds %struct.GPR, %struct.GPR* %969, i32 0, i32 15
  %971 = getelementptr inbounds %struct.Reg, %struct.Reg* %970, i32 0, i32 0
  %RBP.i2883 = bitcast %union.anon* %971 to i64*
  %972 = load i64, i64* %RBP.i2883
  %973 = sub i64 %972, 48
  %974 = load i64, i64* %PC.i2881
  %975 = add i64 %974, 3
  store i64 %975, i64* %PC.i2881
  %976 = inttoptr i64 %973 to i32*
  %977 = load i32, i32* %976
  %978 = zext i32 %977 to i64
  store i64 %978, i64* %RDI.i2882, align 8
  store %struct.Memory* %loadMem_4758e2, %struct.Memory** %MEMORY
  %loadMem1_4758e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %980 = getelementptr inbounds %struct.GPR, %struct.GPR* %979, i32 0, i32 33
  %981 = getelementptr inbounds %struct.Reg, %struct.Reg* %980, i32 0, i32 0
  %PC.i2880 = bitcast %union.anon* %981 to i64*
  %982 = load i64, i64* %PC.i2880
  %983 = add i64 %982, -392245
  %984 = load i64, i64* %PC.i2880
  %985 = add i64 %984, 5
  %986 = load i64, i64* %PC.i2880
  %987 = add i64 %986, 5
  store i64 %987, i64* %PC.i2880
  %988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %989 = load i64, i64* %988, align 8
  %990 = add i64 %989, -8
  %991 = inttoptr i64 %990 to i64*
  store i64 %985, i64* %991
  store i64 %990, i64* %988, align 8
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %983, i64* %992, align 8
  store %struct.Memory* %loadMem1_4758e5, %struct.Memory** %MEMORY
  %loadMem2_4758e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4758e5 = load i64, i64* %3
  %call2_4758e5 = call %struct.Memory* @sub_415cb0.mark_string(%struct.State* %0, i64 %loadPC_4758e5, %struct.Memory* %loadMem2_4758e5)
  store %struct.Memory* %call2_4758e5, %struct.Memory** %MEMORY
  br label %block_.L_4758ea

block_.L_4758ea:                                  ; preds = %block_4758d6, %block_4758c2, %block_47589e, %block_475889
  %loadMem_4758ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %994 = getelementptr inbounds %struct.GPR, %struct.GPR* %993, i32 0, i32 33
  %995 = getelementptr inbounds %struct.Reg, %struct.Reg* %994, i32 0, i32 0
  %PC.i2879 = bitcast %union.anon* %995 to i64*
  %996 = load i64, i64* %PC.i2879
  %997 = add i64 %996, 5
  %998 = load i64, i64* %PC.i2879
  %999 = add i64 %998, 5
  store i64 %999, i64* %PC.i2879
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %997, i64* %1000, align 8
  store %struct.Memory* %loadMem_4758ea, %struct.Memory** %MEMORY
  br label %block_.L_4758ef

block_.L_4758ef:                                  ; preds = %block_.L_4758ea
  %loadMem_4758ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %1001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1002 = getelementptr inbounds %struct.GPR, %struct.GPR* %1001, i32 0, i32 33
  %1003 = getelementptr inbounds %struct.Reg, %struct.Reg* %1002, i32 0, i32 0
  %PC.i2876 = bitcast %union.anon* %1003 to i64*
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1005 = getelementptr inbounds %struct.GPR, %struct.GPR* %1004, i32 0, i32 1
  %1006 = getelementptr inbounds %struct.Reg, %struct.Reg* %1005, i32 0, i32 0
  %RAX.i2877 = bitcast %union.anon* %1006 to i64*
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1008 = getelementptr inbounds %struct.GPR, %struct.GPR* %1007, i32 0, i32 15
  %1009 = getelementptr inbounds %struct.Reg, %struct.Reg* %1008, i32 0, i32 0
  %RBP.i2878 = bitcast %union.anon* %1009 to i64*
  %1010 = load i64, i64* %RBP.i2878
  %1011 = sub i64 %1010, 48
  %1012 = load i64, i64* %PC.i2876
  %1013 = add i64 %1012, 3
  store i64 %1013, i64* %PC.i2876
  %1014 = inttoptr i64 %1011 to i32*
  %1015 = load i32, i32* %1014
  %1016 = zext i32 %1015 to i64
  store i64 %1016, i64* %RAX.i2877, align 8
  store %struct.Memory* %loadMem_4758ef, %struct.Memory** %MEMORY
  %loadMem_4758f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1018 = getelementptr inbounds %struct.GPR, %struct.GPR* %1017, i32 0, i32 33
  %1019 = getelementptr inbounds %struct.Reg, %struct.Reg* %1018, i32 0, i32 0
  %PC.i2874 = bitcast %union.anon* %1019 to i64*
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1021 = getelementptr inbounds %struct.GPR, %struct.GPR* %1020, i32 0, i32 1
  %1022 = getelementptr inbounds %struct.Reg, %struct.Reg* %1021, i32 0, i32 0
  %RAX.i2875 = bitcast %union.anon* %1022 to i64*
  %1023 = load i64, i64* %RAX.i2875
  %1024 = load i64, i64* %PC.i2874
  %1025 = add i64 %1024, 3
  store i64 %1025, i64* %PC.i2874
  %1026 = trunc i64 %1023 to i32
  %1027 = add i32 1, %1026
  %1028 = zext i32 %1027 to i64
  store i64 %1028, i64* %RAX.i2875, align 8
  %1029 = icmp ult i32 %1027, %1026
  %1030 = icmp ult i32 %1027, 1
  %1031 = or i1 %1029, %1030
  %1032 = zext i1 %1031 to i8
  %1033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1032, i8* %1033, align 1
  %1034 = and i32 %1027, 255
  %1035 = call i32 @llvm.ctpop.i32(i32 %1034)
  %1036 = trunc i32 %1035 to i8
  %1037 = and i8 %1036, 1
  %1038 = xor i8 %1037, 1
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1038, i8* %1039, align 1
  %1040 = xor i64 1, %1023
  %1041 = trunc i64 %1040 to i32
  %1042 = xor i32 %1041, %1027
  %1043 = lshr i32 %1042, 4
  %1044 = trunc i32 %1043 to i8
  %1045 = and i8 %1044, 1
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1045, i8* %1046, align 1
  %1047 = icmp eq i32 %1027, 0
  %1048 = zext i1 %1047 to i8
  %1049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1048, i8* %1049, align 1
  %1050 = lshr i32 %1027, 31
  %1051 = trunc i32 %1050 to i8
  %1052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1051, i8* %1052, align 1
  %1053 = lshr i32 %1026, 31
  %1054 = xor i32 %1050, %1053
  %1055 = add i32 %1054, %1050
  %1056 = icmp eq i32 %1055, 2
  %1057 = zext i1 %1056 to i8
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1057, i8* %1058, align 1
  store %struct.Memory* %loadMem_4758f2, %struct.Memory** %MEMORY
  %loadMem_4758f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1060 = getelementptr inbounds %struct.GPR, %struct.GPR* %1059, i32 0, i32 33
  %1061 = getelementptr inbounds %struct.Reg, %struct.Reg* %1060, i32 0, i32 0
  %PC.i2871 = bitcast %union.anon* %1061 to i64*
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1063 = getelementptr inbounds %struct.GPR, %struct.GPR* %1062, i32 0, i32 1
  %1064 = getelementptr inbounds %struct.Reg, %struct.Reg* %1063, i32 0, i32 0
  %EAX.i2872 = bitcast %union.anon* %1064 to i32*
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1066 = getelementptr inbounds %struct.GPR, %struct.GPR* %1065, i32 0, i32 15
  %1067 = getelementptr inbounds %struct.Reg, %struct.Reg* %1066, i32 0, i32 0
  %RBP.i2873 = bitcast %union.anon* %1067 to i64*
  %1068 = load i64, i64* %RBP.i2873
  %1069 = sub i64 %1068, 48
  %1070 = load i32, i32* %EAX.i2872
  %1071 = zext i32 %1070 to i64
  %1072 = load i64, i64* %PC.i2871
  %1073 = add i64 %1072, 3
  store i64 %1073, i64* %PC.i2871
  %1074 = inttoptr i64 %1069 to i32*
  store i32 %1070, i32* %1074
  store %struct.Memory* %loadMem_4758f5, %struct.Memory** %MEMORY
  %loadMem_4758f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1076 = getelementptr inbounds %struct.GPR, %struct.GPR* %1075, i32 0, i32 33
  %1077 = getelementptr inbounds %struct.Reg, %struct.Reg* %1076, i32 0, i32 0
  %PC.i2870 = bitcast %union.anon* %1077 to i64*
  %1078 = load i64, i64* %PC.i2870
  %1079 = add i64 %1078, -124
  %1080 = load i64, i64* %PC.i2870
  %1081 = add i64 %1080, 5
  store i64 %1081, i64* %PC.i2870
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1079, i64* %1082, align 8
  store %struct.Memory* %loadMem_4758f8, %struct.Memory** %MEMORY
  br label %block_.L_47587c

block_.L_4758fd:                                  ; preds = %block_.L_47587c
  %loadMem_4758fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1084 = getelementptr inbounds %struct.GPR, %struct.GPR* %1083, i32 0, i32 33
  %1085 = getelementptr inbounds %struct.Reg, %struct.Reg* %1084, i32 0, i32 0
  %PC.i2868 = bitcast %union.anon* %1085 to i64*
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1087 = getelementptr inbounds %struct.GPR, %struct.GPR* %1086, i32 0, i32 1
  %1088 = getelementptr inbounds %struct.Reg, %struct.Reg* %1087, i32 0, i32 0
  %RAX.i2869 = bitcast %union.anon* %1088 to i64*
  %1089 = load i64, i64* %PC.i2868
  %1090 = add i64 %1089, 10
  store i64 %1090, i64* %PC.i2868
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX.i2869, align 8
  store %struct.Memory* %loadMem_4758fd, %struct.Memory** %MEMORY
  %loadMem_475907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1092 = getelementptr inbounds %struct.GPR, %struct.GPR* %1091, i32 0, i32 33
  %1093 = getelementptr inbounds %struct.Reg, %struct.Reg* %1092, i32 0, i32 0
  %PC.i2866 = bitcast %union.anon* %1093 to i64*
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1095 = getelementptr inbounds %struct.GPR, %struct.GPR* %1094, i32 0, i32 5
  %1096 = getelementptr inbounds %struct.Reg, %struct.Reg* %1095, i32 0, i32 0
  %RCX.i2867 = bitcast %union.anon* %1096 to i64*
  %1097 = load i64, i64* %PC.i2866
  %1098 = add i64 %1097, 8
  store i64 %1098, i64* %PC.i2866
  %1099 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %1099, i64* %RCX.i2867, align 8
  store %struct.Memory* %loadMem_475907, %struct.Memory** %MEMORY
  %loadMem_47590f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1101 = getelementptr inbounds %struct.GPR, %struct.GPR* %1100, i32 0, i32 33
  %1102 = getelementptr inbounds %struct.Reg, %struct.Reg* %1101, i32 0, i32 0
  %PC.i2863 = bitcast %union.anon* %1102 to i64*
  %1103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1104 = getelementptr inbounds %struct.GPR, %struct.GPR* %1103, i32 0, i32 7
  %1105 = getelementptr inbounds %struct.Reg, %struct.Reg* %1104, i32 0, i32 0
  %RDX.i2864 = bitcast %union.anon* %1105 to i64*
  %1106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1107 = getelementptr inbounds %struct.GPR, %struct.GPR* %1106, i32 0, i32 15
  %1108 = getelementptr inbounds %struct.Reg, %struct.Reg* %1107, i32 0, i32 0
  %RBP.i2865 = bitcast %union.anon* %1108 to i64*
  %1109 = load i64, i64* %RBP.i2865
  %1110 = sub i64 %1109, 8
  %1111 = load i64, i64* %PC.i2863
  %1112 = add i64 %1111, 4
  store i64 %1112, i64* %PC.i2863
  %1113 = inttoptr i64 %1110 to i32*
  %1114 = load i32, i32* %1113
  %1115 = sext i32 %1114 to i64
  store i64 %1115, i64* %RDX.i2864, align 8
  store %struct.Memory* %loadMem_47590f, %struct.Memory** %MEMORY
  %loadMem_475913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1117 = getelementptr inbounds %struct.GPR, %struct.GPR* %1116, i32 0, i32 33
  %1118 = getelementptr inbounds %struct.Reg, %struct.Reg* %1117, i32 0, i32 0
  %PC.i2861 = bitcast %union.anon* %1118 to i64*
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1120 = getelementptr inbounds %struct.GPR, %struct.GPR* %1119, i32 0, i32 7
  %1121 = getelementptr inbounds %struct.Reg, %struct.Reg* %1120, i32 0, i32 0
  %RDX.i2862 = bitcast %union.anon* %1121 to i64*
  %1122 = load i64, i64* %RDX.i2862
  %1123 = load i64, i64* %PC.i2861
  %1124 = add i64 %1123, 4
  store i64 %1124, i64* %PC.i2861
  %1125 = sext i64 %1122 to i128
  %1126 = and i128 %1125, -18446744073709551616
  %1127 = zext i64 %1122 to i128
  %1128 = or i128 %1126, %1127
  %1129 = mul i128 76, %1128
  %1130 = trunc i128 %1129 to i64
  store i64 %1130, i64* %RDX.i2862, align 8
  %1131 = sext i64 %1130 to i128
  %1132 = icmp ne i128 %1131, %1129
  %1133 = zext i1 %1132 to i8
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1133, i8* %1134, align 1
  %1135 = trunc i128 %1129 to i32
  %1136 = and i32 %1135, 255
  %1137 = call i32 @llvm.ctpop.i32(i32 %1136)
  %1138 = trunc i32 %1137 to i8
  %1139 = and i8 %1138, 1
  %1140 = xor i8 %1139, 1
  %1141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1140, i8* %1141, align 1
  %1142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1142, align 1
  %1143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1143, align 1
  %1144 = lshr i64 %1130, 63
  %1145 = trunc i64 %1144 to i8
  %1146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1145, i8* %1146, align 1
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1133, i8* %1147, align 1
  store %struct.Memory* %loadMem_475913, %struct.Memory** %MEMORY
  %loadMem_475917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1149 = getelementptr inbounds %struct.GPR, %struct.GPR* %1148, i32 0, i32 33
  %1150 = getelementptr inbounds %struct.Reg, %struct.Reg* %1149, i32 0, i32 0
  %PC.i2858 = bitcast %union.anon* %1150 to i64*
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1152 = getelementptr inbounds %struct.GPR, %struct.GPR* %1151, i32 0, i32 1
  %1153 = getelementptr inbounds %struct.Reg, %struct.Reg* %1152, i32 0, i32 0
  %RAX.i2859 = bitcast %union.anon* %1153 to i64*
  %1154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1155 = getelementptr inbounds %struct.GPR, %struct.GPR* %1154, i32 0, i32 7
  %1156 = getelementptr inbounds %struct.Reg, %struct.Reg* %1155, i32 0, i32 0
  %RDX.i2860 = bitcast %union.anon* %1156 to i64*
  %1157 = load i64, i64* %RAX.i2859
  %1158 = load i64, i64* %RDX.i2860
  %1159 = load i64, i64* %PC.i2858
  %1160 = add i64 %1159, 3
  store i64 %1160, i64* %PC.i2858
  %1161 = add i64 %1158, %1157
  store i64 %1161, i64* %RAX.i2859, align 8
  %1162 = icmp ult i64 %1161, %1157
  %1163 = icmp ult i64 %1161, %1158
  %1164 = or i1 %1162, %1163
  %1165 = zext i1 %1164 to i8
  %1166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1165, i8* %1166, align 1
  %1167 = trunc i64 %1161 to i32
  %1168 = and i32 %1167, 255
  %1169 = call i32 @llvm.ctpop.i32(i32 %1168)
  %1170 = trunc i32 %1169 to i8
  %1171 = and i8 %1170, 1
  %1172 = xor i8 %1171, 1
  %1173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1172, i8* %1173, align 1
  %1174 = xor i64 %1158, %1157
  %1175 = xor i64 %1174, %1161
  %1176 = lshr i64 %1175, 4
  %1177 = trunc i64 %1176 to i8
  %1178 = and i8 %1177, 1
  %1179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1178, i8* %1179, align 1
  %1180 = icmp eq i64 %1161, 0
  %1181 = zext i1 %1180 to i8
  %1182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1181, i8* %1182, align 1
  %1183 = lshr i64 %1161, 63
  %1184 = trunc i64 %1183 to i8
  %1185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1184, i8* %1185, align 1
  %1186 = lshr i64 %1157, 63
  %1187 = lshr i64 %1158, 63
  %1188 = xor i64 %1183, %1186
  %1189 = xor i64 %1183, %1187
  %1190 = add i64 %1188, %1189
  %1191 = icmp eq i64 %1190, 2
  %1192 = zext i1 %1191 to i8
  %1193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1192, i8* %1193, align 1
  store %struct.Memory* %loadMem_475917, %struct.Memory** %MEMORY
  %loadMem_47591a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1195 = getelementptr inbounds %struct.GPR, %struct.GPR* %1194, i32 0, i32 33
  %1196 = getelementptr inbounds %struct.Reg, %struct.Reg* %1195, i32 0, i32 0
  %PC.i2856 = bitcast %union.anon* %1196 to i64*
  %1197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1198 = getelementptr inbounds %struct.GPR, %struct.GPR* %1197, i32 0, i32 1
  %1199 = getelementptr inbounds %struct.Reg, %struct.Reg* %1198, i32 0, i32 0
  %RAX.i2857 = bitcast %union.anon* %1199 to i64*
  %1200 = load i64, i64* %RAX.i2857
  %1201 = add i64 %1200, 4
  %1202 = load i64, i64* %PC.i2856
  %1203 = add i64 %1202, 4
  store i64 %1203, i64* %PC.i2856
  %1204 = inttoptr i64 %1201 to i32*
  %1205 = load i32, i32* %1204
  %1206 = sext i32 %1205 to i64
  store i64 %1206, i64* %RAX.i2857, align 8
  store %struct.Memory* %loadMem_47591a, %struct.Memory** %MEMORY
  %loadMem_47591e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1208 = getelementptr inbounds %struct.GPR, %struct.GPR* %1207, i32 0, i32 33
  %1209 = getelementptr inbounds %struct.Reg, %struct.Reg* %1208, i32 0, i32 0
  %PC.i2854 = bitcast %union.anon* %1209 to i64*
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1211 = getelementptr inbounds %struct.GPR, %struct.GPR* %1210, i32 0, i32 1
  %1212 = getelementptr inbounds %struct.Reg, %struct.Reg* %1211, i32 0, i32 0
  %RAX.i2855 = bitcast %union.anon* %1212 to i64*
  %1213 = load i64, i64* %RAX.i2855
  %1214 = load i64, i64* %PC.i2854
  %1215 = add i64 %1214, 4
  store i64 %1215, i64* %PC.i2854
  %1216 = sext i64 %1213 to i128
  %1217 = and i128 %1216, -18446744073709551616
  %1218 = zext i64 %1213 to i128
  %1219 = or i128 %1217, %1218
  %1220 = mul i128 104, %1219
  %1221 = trunc i128 %1220 to i64
  store i64 %1221, i64* %RAX.i2855, align 8
  %1222 = sext i64 %1221 to i128
  %1223 = icmp ne i128 %1222, %1220
  %1224 = zext i1 %1223 to i8
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1224, i8* %1225, align 1
  %1226 = trunc i128 %1220 to i32
  %1227 = and i32 %1226, 255
  %1228 = call i32 @llvm.ctpop.i32(i32 %1227)
  %1229 = trunc i32 %1228 to i8
  %1230 = and i8 %1229, 1
  %1231 = xor i8 %1230, 1
  %1232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1231, i8* %1232, align 1
  %1233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1233, align 1
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1234, align 1
  %1235 = lshr i64 %1221, 63
  %1236 = trunc i64 %1235 to i8
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1236, i8* %1237, align 1
  %1238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1224, i8* %1238, align 1
  store %struct.Memory* %loadMem_47591e, %struct.Memory** %MEMORY
  %loadMem_475922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1240 = getelementptr inbounds %struct.GPR, %struct.GPR* %1239, i32 0, i32 33
  %1241 = getelementptr inbounds %struct.Reg, %struct.Reg* %1240, i32 0, i32 0
  %PC.i2851 = bitcast %union.anon* %1241 to i64*
  %1242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1243 = getelementptr inbounds %struct.GPR, %struct.GPR* %1242, i32 0, i32 1
  %1244 = getelementptr inbounds %struct.Reg, %struct.Reg* %1243, i32 0, i32 0
  %RAX.i2852 = bitcast %union.anon* %1244 to i64*
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1246 = getelementptr inbounds %struct.GPR, %struct.GPR* %1245, i32 0, i32 5
  %1247 = getelementptr inbounds %struct.Reg, %struct.Reg* %1246, i32 0, i32 0
  %RCX.i2853 = bitcast %union.anon* %1247 to i64*
  %1248 = load i64, i64* %RCX.i2853
  %1249 = load i64, i64* %RAX.i2852
  %1250 = load i64, i64* %PC.i2851
  %1251 = add i64 %1250, 3
  store i64 %1251, i64* %PC.i2851
  %1252 = add i64 %1249, %1248
  store i64 %1252, i64* %RCX.i2853, align 8
  %1253 = icmp ult i64 %1252, %1248
  %1254 = icmp ult i64 %1252, %1249
  %1255 = or i1 %1253, %1254
  %1256 = zext i1 %1255 to i8
  %1257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1256, i8* %1257, align 1
  %1258 = trunc i64 %1252 to i32
  %1259 = and i32 %1258, 255
  %1260 = call i32 @llvm.ctpop.i32(i32 %1259)
  %1261 = trunc i32 %1260 to i8
  %1262 = and i8 %1261, 1
  %1263 = xor i8 %1262, 1
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1263, i8* %1264, align 1
  %1265 = xor i64 %1249, %1248
  %1266 = xor i64 %1265, %1252
  %1267 = lshr i64 %1266, 4
  %1268 = trunc i64 %1267 to i8
  %1269 = and i8 %1268, 1
  %1270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1269, i8* %1270, align 1
  %1271 = icmp eq i64 %1252, 0
  %1272 = zext i1 %1271 to i8
  %1273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1272, i8* %1273, align 1
  %1274 = lshr i64 %1252, 63
  %1275 = trunc i64 %1274 to i8
  %1276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1275, i8* %1276, align 1
  %1277 = lshr i64 %1248, 63
  %1278 = lshr i64 %1249, 63
  %1279 = xor i64 %1274, %1277
  %1280 = xor i64 %1274, %1278
  %1281 = add i64 %1279, %1280
  %1282 = icmp eq i64 %1281, 2
  %1283 = zext i1 %1282 to i8
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1283, i8* %1284, align 1
  store %struct.Memory* %loadMem_475922, %struct.Memory** %MEMORY
  %loadMem_475925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1286 = getelementptr inbounds %struct.GPR, %struct.GPR* %1285, i32 0, i32 33
  %1287 = getelementptr inbounds %struct.Reg, %struct.Reg* %1286, i32 0, i32 0
  %PC.i2849 = bitcast %union.anon* %1287 to i64*
  %1288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1289 = getelementptr inbounds %struct.GPR, %struct.GPR* %1288, i32 0, i32 5
  %1290 = getelementptr inbounds %struct.Reg, %struct.Reg* %1289, i32 0, i32 0
  %RCX.i2850 = bitcast %union.anon* %1290 to i64*
  %1291 = load i64, i64* %RCX.i2850
  %1292 = add i64 %1291, 48
  %1293 = load i64, i64* %PC.i2849
  %1294 = add i64 %1293, 4
  store i64 %1294, i64* %PC.i2849
  %1295 = inttoptr i64 %1292 to i32*
  %1296 = load i32, i32* %1295
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1297, align 1
  %1298 = and i32 %1296, 255
  %1299 = call i32 @llvm.ctpop.i32(i32 %1298)
  %1300 = trunc i32 %1299 to i8
  %1301 = and i8 %1300, 1
  %1302 = xor i8 %1301, 1
  %1303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1302, i8* %1303, align 1
  %1304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1304, align 1
  %1305 = icmp eq i32 %1296, 0
  %1306 = zext i1 %1305 to i8
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1306, i8* %1307, align 1
  %1308 = lshr i32 %1296, 31
  %1309 = trunc i32 %1308 to i8
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1309, i8* %1310, align 1
  %1311 = lshr i32 %1296, 31
  %1312 = xor i32 %1308, %1311
  %1313 = add i32 %1312, %1311
  %1314 = icmp eq i32 %1313, 2
  %1315 = zext i1 %1314 to i8
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1315, i8* %1316, align 1
  store %struct.Memory* %loadMem_475925, %struct.Memory** %MEMORY
  %loadMem_475929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1318 = getelementptr inbounds %struct.GPR, %struct.GPR* %1317, i32 0, i32 33
  %1319 = getelementptr inbounds %struct.Reg, %struct.Reg* %1318, i32 0, i32 0
  %PC.i2848 = bitcast %union.anon* %1319 to i64*
  %1320 = load i64, i64* %PC.i2848
  %1321 = add i64 %1320, 18
  %1322 = load i64, i64* %PC.i2848
  %1323 = add i64 %1322, 6
  %1324 = load i64, i64* %PC.i2848
  %1325 = add i64 %1324, 6
  store i64 %1325, i64* %PC.i2848
  %1326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1327 = load i8, i8* %1326, align 1
  %1328 = icmp eq i8 %1327, 0
  %1329 = zext i1 %1328 to i8
  store i8 %1329, i8* %BRANCH_TAKEN, align 1
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1331 = select i1 %1328, i64 %1321, i64 %1323
  store i64 %1331, i64* %1330, align 8
  store %struct.Memory* %loadMem_475929, %struct.Memory** %MEMORY
  %loadBr_475929 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475929 = icmp eq i8 %loadBr_475929, 1
  br i1 %cmpBr_475929, label %block_.L_47593b, label %block_47592f

block_47592f:                                     ; preds = %block_.L_4758fd
  %loadMem_47592f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 33
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %PC.i2846 = bitcast %union.anon* %1334 to i64*
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1336 = getelementptr inbounds %struct.GPR, %struct.GPR* %1335, i32 0, i32 15
  %1337 = getelementptr inbounds %struct.Reg, %struct.Reg* %1336, i32 0, i32 0
  %RBP.i2847 = bitcast %union.anon* %1337 to i64*
  %1338 = load i64, i64* %RBP.i2847
  %1339 = sub i64 %1338, 4
  %1340 = load i64, i64* %PC.i2846
  %1341 = add i64 %1340, 7
  store i64 %1341, i64* %PC.i2846
  %1342 = inttoptr i64 %1339 to i32*
  store i32 0, i32* %1342
  store %struct.Memory* %loadMem_47592f, %struct.Memory** %MEMORY
  %loadMem_475936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1344 = getelementptr inbounds %struct.GPR, %struct.GPR* %1343, i32 0, i32 33
  %1345 = getelementptr inbounds %struct.Reg, %struct.Reg* %1344, i32 0, i32 0
  %PC.i2845 = bitcast %union.anon* %1345 to i64*
  %1346 = load i64, i64* %PC.i2845
  %1347 = add i64 %1346, 5619
  %1348 = load i64, i64* %PC.i2845
  %1349 = add i64 %1348, 5
  store i64 %1349, i64* %PC.i2845
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1347, i64* %1350, align 8
  store %struct.Memory* %loadMem_475936, %struct.Memory** %MEMORY
  br label %block_.L_476f29

block_.L_47593b:                                  ; preds = %block_.L_4758fd
  %loadMem_47593b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1352 = getelementptr inbounds %struct.GPR, %struct.GPR* %1351, i32 0, i32 33
  %1353 = getelementptr inbounds %struct.Reg, %struct.Reg* %1352, i32 0, i32 0
  %PC.i2843 = bitcast %union.anon* %1353 to i64*
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1355 = getelementptr inbounds %struct.GPR, %struct.GPR* %1354, i32 0, i32 15
  %1356 = getelementptr inbounds %struct.Reg, %struct.Reg* %1355, i32 0, i32 0
  %RBP.i2844 = bitcast %union.anon* %1356 to i64*
  %1357 = load i64, i64* %RBP.i2844
  %1358 = sub i64 %1357, 44
  %1359 = load i64, i64* %PC.i2843
  %1360 = add i64 %1359, 7
  store i64 %1360, i64* %PC.i2843
  %1361 = inttoptr i64 %1358 to i32*
  store i32 0, i32* %1361
  store %struct.Memory* %loadMem_47593b, %struct.Memory** %MEMORY
  br label %block_.L_475942

block_.L_475942:                                  ; preds = %block_.L_475a80, %block_.L_47593b
  %loadMem_475942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 33
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %PC.i2841 = bitcast %union.anon* %1364 to i64*
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1366 = getelementptr inbounds %struct.GPR, %struct.GPR* %1365, i32 0, i32 1
  %1367 = getelementptr inbounds %struct.Reg, %struct.Reg* %1366, i32 0, i32 0
  %RAX.i2842 = bitcast %union.anon* %1367 to i64*
  %1368 = load i64, i64* %PC.i2841
  %1369 = add i64 %1368, 10
  store i64 %1369, i64* %PC.i2841
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX.i2842, align 8
  store %struct.Memory* %loadMem_475942, %struct.Memory** %MEMORY
  %loadMem_47594c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1371 = getelementptr inbounds %struct.GPR, %struct.GPR* %1370, i32 0, i32 33
  %1372 = getelementptr inbounds %struct.Reg, %struct.Reg* %1371, i32 0, i32 0
  %PC.i2838 = bitcast %union.anon* %1372 to i64*
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1374 = getelementptr inbounds %struct.GPR, %struct.GPR* %1373, i32 0, i32 5
  %1375 = getelementptr inbounds %struct.Reg, %struct.Reg* %1374, i32 0, i32 0
  %RCX.i2839 = bitcast %union.anon* %1375 to i64*
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1377 = getelementptr inbounds %struct.GPR, %struct.GPR* %1376, i32 0, i32 15
  %1378 = getelementptr inbounds %struct.Reg, %struct.Reg* %1377, i32 0, i32 0
  %RBP.i2840 = bitcast %union.anon* %1378 to i64*
  %1379 = load i64, i64* %RBP.i2840
  %1380 = sub i64 %1379, 44
  %1381 = load i64, i64* %PC.i2838
  %1382 = add i64 %1381, 3
  store i64 %1382, i64* %PC.i2838
  %1383 = inttoptr i64 %1380 to i32*
  %1384 = load i32, i32* %1383
  %1385 = zext i32 %1384 to i64
  store i64 %1385, i64* %RCX.i2839, align 8
  store %struct.Memory* %loadMem_47594c, %struct.Memory** %MEMORY
  %loadMem_47594f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1387 = getelementptr inbounds %struct.GPR, %struct.GPR* %1386, i32 0, i32 33
  %1388 = getelementptr inbounds %struct.Reg, %struct.Reg* %1387, i32 0, i32 0
  %PC.i2836 = bitcast %union.anon* %1388 to i64*
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1390 = getelementptr inbounds %struct.GPR, %struct.GPR* %1389, i32 0, i32 7
  %1391 = getelementptr inbounds %struct.Reg, %struct.Reg* %1390, i32 0, i32 0
  %RDX.i2837 = bitcast %union.anon* %1391 to i64*
  %1392 = load i64, i64* %PC.i2836
  %1393 = add i64 %1392, 8
  store i64 %1393, i64* %PC.i2836
  %1394 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %1394, i64* %RDX.i2837, align 8
  store %struct.Memory* %loadMem_47594f, %struct.Memory** %MEMORY
  %loadMem_475957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1396 = getelementptr inbounds %struct.GPR, %struct.GPR* %1395, i32 0, i32 33
  %1397 = getelementptr inbounds %struct.Reg, %struct.Reg* %1396, i32 0, i32 0
  %PC.i2833 = bitcast %union.anon* %1397 to i64*
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1399 = getelementptr inbounds %struct.GPR, %struct.GPR* %1398, i32 0, i32 9
  %1400 = getelementptr inbounds %struct.Reg, %struct.Reg* %1399, i32 0, i32 0
  %RSI.i2834 = bitcast %union.anon* %1400 to i64*
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1402 = getelementptr inbounds %struct.GPR, %struct.GPR* %1401, i32 0, i32 15
  %1403 = getelementptr inbounds %struct.Reg, %struct.Reg* %1402, i32 0, i32 0
  %RBP.i2835 = bitcast %union.anon* %1403 to i64*
  %1404 = load i64, i64* %RBP.i2835
  %1405 = sub i64 %1404, 8
  %1406 = load i64, i64* %PC.i2833
  %1407 = add i64 %1406, 4
  store i64 %1407, i64* %PC.i2833
  %1408 = inttoptr i64 %1405 to i32*
  %1409 = load i32, i32* %1408
  %1410 = sext i32 %1409 to i64
  store i64 %1410, i64* %RSI.i2834, align 8
  store %struct.Memory* %loadMem_475957, %struct.Memory** %MEMORY
  %loadMem_47595b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1412 = getelementptr inbounds %struct.GPR, %struct.GPR* %1411, i32 0, i32 33
  %1413 = getelementptr inbounds %struct.Reg, %struct.Reg* %1412, i32 0, i32 0
  %PC.i2831 = bitcast %union.anon* %1413 to i64*
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1415 = getelementptr inbounds %struct.GPR, %struct.GPR* %1414, i32 0, i32 9
  %1416 = getelementptr inbounds %struct.Reg, %struct.Reg* %1415, i32 0, i32 0
  %RSI.i2832 = bitcast %union.anon* %1416 to i64*
  %1417 = load i64, i64* %RSI.i2832
  %1418 = load i64, i64* %PC.i2831
  %1419 = add i64 %1418, 4
  store i64 %1419, i64* %PC.i2831
  %1420 = sext i64 %1417 to i128
  %1421 = and i128 %1420, -18446744073709551616
  %1422 = zext i64 %1417 to i128
  %1423 = or i128 %1421, %1422
  %1424 = mul i128 76, %1423
  %1425 = trunc i128 %1424 to i64
  store i64 %1425, i64* %RSI.i2832, align 8
  %1426 = sext i64 %1425 to i128
  %1427 = icmp ne i128 %1426, %1424
  %1428 = zext i1 %1427 to i8
  %1429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1428, i8* %1429, align 1
  %1430 = trunc i128 %1424 to i32
  %1431 = and i32 %1430, 255
  %1432 = call i32 @llvm.ctpop.i32(i32 %1431)
  %1433 = trunc i32 %1432 to i8
  %1434 = and i8 %1433, 1
  %1435 = xor i8 %1434, 1
  %1436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1435, i8* %1436, align 1
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1437, align 1
  %1438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1438, align 1
  %1439 = lshr i64 %1425, 63
  %1440 = trunc i64 %1439 to i8
  %1441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1440, i8* %1441, align 1
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1428, i8* %1442, align 1
  store %struct.Memory* %loadMem_47595b, %struct.Memory** %MEMORY
  %loadMem_47595f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1444 = getelementptr inbounds %struct.GPR, %struct.GPR* %1443, i32 0, i32 33
  %1445 = getelementptr inbounds %struct.Reg, %struct.Reg* %1444, i32 0, i32 0
  %PC.i2828 = bitcast %union.anon* %1445 to i64*
  %1446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1447 = getelementptr inbounds %struct.GPR, %struct.GPR* %1446, i32 0, i32 1
  %1448 = getelementptr inbounds %struct.Reg, %struct.Reg* %1447, i32 0, i32 0
  %RAX.i2829 = bitcast %union.anon* %1448 to i64*
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1450 = getelementptr inbounds %struct.GPR, %struct.GPR* %1449, i32 0, i32 9
  %1451 = getelementptr inbounds %struct.Reg, %struct.Reg* %1450, i32 0, i32 0
  %RSI.i2830 = bitcast %union.anon* %1451 to i64*
  %1452 = load i64, i64* %RAX.i2829
  %1453 = load i64, i64* %RSI.i2830
  %1454 = load i64, i64* %PC.i2828
  %1455 = add i64 %1454, 3
  store i64 %1455, i64* %PC.i2828
  %1456 = add i64 %1453, %1452
  store i64 %1456, i64* %RAX.i2829, align 8
  %1457 = icmp ult i64 %1456, %1452
  %1458 = icmp ult i64 %1456, %1453
  %1459 = or i1 %1457, %1458
  %1460 = zext i1 %1459 to i8
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1460, i8* %1461, align 1
  %1462 = trunc i64 %1456 to i32
  %1463 = and i32 %1462, 255
  %1464 = call i32 @llvm.ctpop.i32(i32 %1463)
  %1465 = trunc i32 %1464 to i8
  %1466 = and i8 %1465, 1
  %1467 = xor i8 %1466, 1
  %1468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1467, i8* %1468, align 1
  %1469 = xor i64 %1453, %1452
  %1470 = xor i64 %1469, %1456
  %1471 = lshr i64 %1470, 4
  %1472 = trunc i64 %1471 to i8
  %1473 = and i8 %1472, 1
  %1474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1473, i8* %1474, align 1
  %1475 = icmp eq i64 %1456, 0
  %1476 = zext i1 %1475 to i8
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1476, i8* %1477, align 1
  %1478 = lshr i64 %1456, 63
  %1479 = trunc i64 %1478 to i8
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1479, i8* %1480, align 1
  %1481 = lshr i64 %1452, 63
  %1482 = lshr i64 %1453, 63
  %1483 = xor i64 %1478, %1481
  %1484 = xor i64 %1478, %1482
  %1485 = add i64 %1483, %1484
  %1486 = icmp eq i64 %1485, 2
  %1487 = zext i1 %1486 to i8
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1487, i8* %1488, align 1
  store %struct.Memory* %loadMem_47595f, %struct.Memory** %MEMORY
  %loadMem_475962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1490 = getelementptr inbounds %struct.GPR, %struct.GPR* %1489, i32 0, i32 33
  %1491 = getelementptr inbounds %struct.Reg, %struct.Reg* %1490, i32 0, i32 0
  %PC.i2826 = bitcast %union.anon* %1491 to i64*
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1493 = getelementptr inbounds %struct.GPR, %struct.GPR* %1492, i32 0, i32 1
  %1494 = getelementptr inbounds %struct.Reg, %struct.Reg* %1493, i32 0, i32 0
  %RAX.i2827 = bitcast %union.anon* %1494 to i64*
  %1495 = load i64, i64* %RAX.i2827
  %1496 = add i64 %1495, 4
  %1497 = load i64, i64* %PC.i2826
  %1498 = add i64 %1497, 4
  store i64 %1498, i64* %PC.i2826
  %1499 = inttoptr i64 %1496 to i32*
  %1500 = load i32, i32* %1499
  %1501 = sext i32 %1500 to i64
  store i64 %1501, i64* %RAX.i2827, align 8
  store %struct.Memory* %loadMem_475962, %struct.Memory** %MEMORY
  %loadMem_475966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1503 = getelementptr inbounds %struct.GPR, %struct.GPR* %1502, i32 0, i32 33
  %1504 = getelementptr inbounds %struct.Reg, %struct.Reg* %1503, i32 0, i32 0
  %PC.i2824 = bitcast %union.anon* %1504 to i64*
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1506 = getelementptr inbounds %struct.GPR, %struct.GPR* %1505, i32 0, i32 1
  %1507 = getelementptr inbounds %struct.Reg, %struct.Reg* %1506, i32 0, i32 0
  %RAX.i2825 = bitcast %union.anon* %1507 to i64*
  %1508 = load i64, i64* %RAX.i2825
  %1509 = load i64, i64* %PC.i2824
  %1510 = add i64 %1509, 4
  store i64 %1510, i64* %PC.i2824
  %1511 = sext i64 %1508 to i128
  %1512 = and i128 %1511, -18446744073709551616
  %1513 = zext i64 %1508 to i128
  %1514 = or i128 %1512, %1513
  %1515 = mul i128 104, %1514
  %1516 = trunc i128 %1515 to i64
  store i64 %1516, i64* %RAX.i2825, align 8
  %1517 = sext i64 %1516 to i128
  %1518 = icmp ne i128 %1517, %1515
  %1519 = zext i1 %1518 to i8
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1519, i8* %1520, align 1
  %1521 = trunc i128 %1515 to i32
  %1522 = and i32 %1521, 255
  %1523 = call i32 @llvm.ctpop.i32(i32 %1522)
  %1524 = trunc i32 %1523 to i8
  %1525 = and i8 %1524, 1
  %1526 = xor i8 %1525, 1
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1526, i8* %1527, align 1
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1528, align 1
  %1529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1529, align 1
  %1530 = lshr i64 %1516, 63
  %1531 = trunc i64 %1530 to i8
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1531, i8* %1532, align 1
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1519, i8* %1533, align 1
  store %struct.Memory* %loadMem_475966, %struct.Memory** %MEMORY
  %loadMem_47596a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1535 = getelementptr inbounds %struct.GPR, %struct.GPR* %1534, i32 0, i32 33
  %1536 = getelementptr inbounds %struct.Reg, %struct.Reg* %1535, i32 0, i32 0
  %PC.i2821 = bitcast %union.anon* %1536 to i64*
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1538 = getelementptr inbounds %struct.GPR, %struct.GPR* %1537, i32 0, i32 1
  %1539 = getelementptr inbounds %struct.Reg, %struct.Reg* %1538, i32 0, i32 0
  %RAX.i2822 = bitcast %union.anon* %1539 to i64*
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1541 = getelementptr inbounds %struct.GPR, %struct.GPR* %1540, i32 0, i32 7
  %1542 = getelementptr inbounds %struct.Reg, %struct.Reg* %1541, i32 0, i32 0
  %RDX.i2823 = bitcast %union.anon* %1542 to i64*
  %1543 = load i64, i64* %RDX.i2823
  %1544 = load i64, i64* %RAX.i2822
  %1545 = load i64, i64* %PC.i2821
  %1546 = add i64 %1545, 3
  store i64 %1546, i64* %PC.i2821
  %1547 = add i64 %1544, %1543
  store i64 %1547, i64* %RDX.i2823, align 8
  %1548 = icmp ult i64 %1547, %1543
  %1549 = icmp ult i64 %1547, %1544
  %1550 = or i1 %1548, %1549
  %1551 = zext i1 %1550 to i8
  %1552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1551, i8* %1552, align 1
  %1553 = trunc i64 %1547 to i32
  %1554 = and i32 %1553, 255
  %1555 = call i32 @llvm.ctpop.i32(i32 %1554)
  %1556 = trunc i32 %1555 to i8
  %1557 = and i8 %1556, 1
  %1558 = xor i8 %1557, 1
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1558, i8* %1559, align 1
  %1560 = xor i64 %1544, %1543
  %1561 = xor i64 %1560, %1547
  %1562 = lshr i64 %1561, 4
  %1563 = trunc i64 %1562 to i8
  %1564 = and i8 %1563, 1
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1564, i8* %1565, align 1
  %1566 = icmp eq i64 %1547, 0
  %1567 = zext i1 %1566 to i8
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1567, i8* %1568, align 1
  %1569 = lshr i64 %1547, 63
  %1570 = trunc i64 %1569 to i8
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1570, i8* %1571, align 1
  %1572 = lshr i64 %1543, 63
  %1573 = lshr i64 %1544, 63
  %1574 = xor i64 %1569, %1572
  %1575 = xor i64 %1569, %1573
  %1576 = add i64 %1574, %1575
  %1577 = icmp eq i64 %1576, 2
  %1578 = zext i1 %1577 to i8
  %1579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1578, i8* %1579, align 1
  store %struct.Memory* %loadMem_47596a, %struct.Memory** %MEMORY
  %loadMem_47596d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1581 = getelementptr inbounds %struct.GPR, %struct.GPR* %1580, i32 0, i32 33
  %1582 = getelementptr inbounds %struct.Reg, %struct.Reg* %1581, i32 0, i32 0
  %PC.i2818 = bitcast %union.anon* %1582 to i64*
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1584 = getelementptr inbounds %struct.GPR, %struct.GPR* %1583, i32 0, i32 5
  %1585 = getelementptr inbounds %struct.Reg, %struct.Reg* %1584, i32 0, i32 0
  %ECX.i2819 = bitcast %union.anon* %1585 to i32*
  %1586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1587 = getelementptr inbounds %struct.GPR, %struct.GPR* %1586, i32 0, i32 7
  %1588 = getelementptr inbounds %struct.Reg, %struct.Reg* %1587, i32 0, i32 0
  %RDX.i2820 = bitcast %union.anon* %1588 to i64*
  %1589 = load i32, i32* %ECX.i2819
  %1590 = zext i32 %1589 to i64
  %1591 = load i64, i64* %RDX.i2820
  %1592 = add i64 %1591, 44
  %1593 = load i64, i64* %PC.i2818
  %1594 = add i64 %1593, 3
  store i64 %1594, i64* %PC.i2818
  %1595 = inttoptr i64 %1592 to i32*
  %1596 = load i32, i32* %1595
  %1597 = sub i32 %1589, %1596
  %1598 = icmp ult i32 %1589, %1596
  %1599 = zext i1 %1598 to i8
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1599, i8* %1600, align 1
  %1601 = and i32 %1597, 255
  %1602 = call i32 @llvm.ctpop.i32(i32 %1601)
  %1603 = trunc i32 %1602 to i8
  %1604 = and i8 %1603, 1
  %1605 = xor i8 %1604, 1
  %1606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1605, i8* %1606, align 1
  %1607 = xor i32 %1596, %1589
  %1608 = xor i32 %1607, %1597
  %1609 = lshr i32 %1608, 4
  %1610 = trunc i32 %1609 to i8
  %1611 = and i8 %1610, 1
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1611, i8* %1612, align 1
  %1613 = icmp eq i32 %1597, 0
  %1614 = zext i1 %1613 to i8
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1614, i8* %1615, align 1
  %1616 = lshr i32 %1597, 31
  %1617 = trunc i32 %1616 to i8
  %1618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1617, i8* %1618, align 1
  %1619 = lshr i32 %1589, 31
  %1620 = lshr i32 %1596, 31
  %1621 = xor i32 %1620, %1619
  %1622 = xor i32 %1616, %1619
  %1623 = add i32 %1622, %1621
  %1624 = icmp eq i32 %1623, 2
  %1625 = zext i1 %1624 to i8
  %1626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1625, i8* %1626, align 1
  store %struct.Memory* %loadMem_47596d, %struct.Memory** %MEMORY
  %loadMem_475970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1628 = getelementptr inbounds %struct.GPR, %struct.GPR* %1627, i32 0, i32 33
  %1629 = getelementptr inbounds %struct.Reg, %struct.Reg* %1628, i32 0, i32 0
  %PC.i2817 = bitcast %union.anon* %1629 to i64*
  %1630 = load i64, i64* %PC.i2817
  %1631 = add i64 %1630, 286
  %1632 = load i64, i64* %PC.i2817
  %1633 = add i64 %1632, 6
  %1634 = load i64, i64* %PC.i2817
  %1635 = add i64 %1634, 6
  store i64 %1635, i64* %PC.i2817
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1637 = load i8, i8* %1636, align 1
  %1638 = icmp ne i8 %1637, 0
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1640 = load i8, i8* %1639, align 1
  %1641 = icmp ne i8 %1640, 0
  %1642 = xor i1 %1638, %1641
  %1643 = xor i1 %1642, true
  %1644 = zext i1 %1643 to i8
  store i8 %1644, i8* %BRANCH_TAKEN, align 1
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1646 = select i1 %1642, i64 %1633, i64 %1631
  store i64 %1646, i64* %1645, align 8
  store %struct.Memory* %loadMem_475970, %struct.Memory** %MEMORY
  %loadBr_475970 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475970 = icmp eq i8 %loadBr_475970, 1
  br i1 %cmpBr_475970, label %block_.L_475a8e, label %block_475976

block_475976:                                     ; preds = %block_.L_475942
  %loadMem_475976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1648 = getelementptr inbounds %struct.GPR, %struct.GPR* %1647, i32 0, i32 33
  %1649 = getelementptr inbounds %struct.Reg, %struct.Reg* %1648, i32 0, i32 0
  %PC.i2815 = bitcast %union.anon* %1649 to i64*
  %1650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1651 = getelementptr inbounds %struct.GPR, %struct.GPR* %1650, i32 0, i32 1
  %1652 = getelementptr inbounds %struct.Reg, %struct.Reg* %1651, i32 0, i32 0
  %RAX.i2816 = bitcast %union.anon* %1652 to i64*
  %1653 = load i64, i64* %PC.i2815
  %1654 = add i64 %1653, 10
  store i64 %1654, i64* %PC.i2815
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX.i2816, align 8
  store %struct.Memory* %loadMem_475976, %struct.Memory** %MEMORY
  %loadMem_475980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1656 = getelementptr inbounds %struct.GPR, %struct.GPR* %1655, i32 0, i32 33
  %1657 = getelementptr inbounds %struct.Reg, %struct.Reg* %1656, i32 0, i32 0
  %PC.i2813 = bitcast %union.anon* %1657 to i64*
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1659 = getelementptr inbounds %struct.GPR, %struct.GPR* %1658, i32 0, i32 5
  %1660 = getelementptr inbounds %struct.Reg, %struct.Reg* %1659, i32 0, i32 0
  %RCX.i2814 = bitcast %union.anon* %1660 to i64*
  %1661 = load i64, i64* %PC.i2813
  %1662 = add i64 %1661, 8
  store i64 %1662, i64* %PC.i2813
  %1663 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %1663, i64* %RCX.i2814, align 8
  store %struct.Memory* %loadMem_475980, %struct.Memory** %MEMORY
  %loadMem_475988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1665 = getelementptr inbounds %struct.GPR, %struct.GPR* %1664, i32 0, i32 33
  %1666 = getelementptr inbounds %struct.Reg, %struct.Reg* %1665, i32 0, i32 0
  %PC.i2811 = bitcast %union.anon* %1666 to i64*
  %1667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1668 = getelementptr inbounds %struct.GPR, %struct.GPR* %1667, i32 0, i32 7
  %1669 = getelementptr inbounds %struct.Reg, %struct.Reg* %1668, i32 0, i32 0
  %RDX.i2812 = bitcast %union.anon* %1669 to i64*
  %1670 = load i64, i64* %PC.i2811
  %1671 = add i64 %1670, 8
  store i64 %1671, i64* %PC.i2811
  %1672 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %1672, i64* %RDX.i2812, align 8
  store %struct.Memory* %loadMem_475988, %struct.Memory** %MEMORY
  %loadMem_475990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1674 = getelementptr inbounds %struct.GPR, %struct.GPR* %1673, i32 0, i32 33
  %1675 = getelementptr inbounds %struct.Reg, %struct.Reg* %1674, i32 0, i32 0
  %PC.i2808 = bitcast %union.anon* %1675 to i64*
  %1676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1677 = getelementptr inbounds %struct.GPR, %struct.GPR* %1676, i32 0, i32 9
  %1678 = getelementptr inbounds %struct.Reg, %struct.Reg* %1677, i32 0, i32 0
  %RSI.i2809 = bitcast %union.anon* %1678 to i64*
  %1679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1680 = getelementptr inbounds %struct.GPR, %struct.GPR* %1679, i32 0, i32 15
  %1681 = getelementptr inbounds %struct.Reg, %struct.Reg* %1680, i32 0, i32 0
  %RBP.i2810 = bitcast %union.anon* %1681 to i64*
  %1682 = load i64, i64* %RBP.i2810
  %1683 = sub i64 %1682, 8
  %1684 = load i64, i64* %PC.i2808
  %1685 = add i64 %1684, 4
  store i64 %1685, i64* %PC.i2808
  %1686 = inttoptr i64 %1683 to i32*
  %1687 = load i32, i32* %1686
  %1688 = sext i32 %1687 to i64
  store i64 %1688, i64* %RSI.i2809, align 8
  store %struct.Memory* %loadMem_475990, %struct.Memory** %MEMORY
  %loadMem_475994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1690 = getelementptr inbounds %struct.GPR, %struct.GPR* %1689, i32 0, i32 33
  %1691 = getelementptr inbounds %struct.Reg, %struct.Reg* %1690, i32 0, i32 0
  %PC.i2806 = bitcast %union.anon* %1691 to i64*
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1693 = getelementptr inbounds %struct.GPR, %struct.GPR* %1692, i32 0, i32 9
  %1694 = getelementptr inbounds %struct.Reg, %struct.Reg* %1693, i32 0, i32 0
  %RSI.i2807 = bitcast %union.anon* %1694 to i64*
  %1695 = load i64, i64* %RSI.i2807
  %1696 = load i64, i64* %PC.i2806
  %1697 = add i64 %1696, 4
  store i64 %1697, i64* %PC.i2806
  %1698 = sext i64 %1695 to i128
  %1699 = and i128 %1698, -18446744073709551616
  %1700 = zext i64 %1695 to i128
  %1701 = or i128 %1699, %1700
  %1702 = mul i128 76, %1701
  %1703 = trunc i128 %1702 to i64
  store i64 %1703, i64* %RSI.i2807, align 8
  %1704 = sext i64 %1703 to i128
  %1705 = icmp ne i128 %1704, %1702
  %1706 = zext i1 %1705 to i8
  %1707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1706, i8* %1707, align 1
  %1708 = trunc i128 %1702 to i32
  %1709 = and i32 %1708, 255
  %1710 = call i32 @llvm.ctpop.i32(i32 %1709)
  %1711 = trunc i32 %1710 to i8
  %1712 = and i8 %1711, 1
  %1713 = xor i8 %1712, 1
  %1714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1713, i8* %1714, align 1
  %1715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1715, align 1
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1716, align 1
  %1717 = lshr i64 %1703, 63
  %1718 = trunc i64 %1717 to i8
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1718, i8* %1719, align 1
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1706, i8* %1720, align 1
  store %struct.Memory* %loadMem_475994, %struct.Memory** %MEMORY
  %loadMem_475998 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1722 = getelementptr inbounds %struct.GPR, %struct.GPR* %1721, i32 0, i32 33
  %1723 = getelementptr inbounds %struct.Reg, %struct.Reg* %1722, i32 0, i32 0
  %PC.i2803 = bitcast %union.anon* %1723 to i64*
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1725 = getelementptr inbounds %struct.GPR, %struct.GPR* %1724, i32 0, i32 1
  %1726 = getelementptr inbounds %struct.Reg, %struct.Reg* %1725, i32 0, i32 0
  %RAX.i2804 = bitcast %union.anon* %1726 to i64*
  %1727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1728 = getelementptr inbounds %struct.GPR, %struct.GPR* %1727, i32 0, i32 11
  %1729 = getelementptr inbounds %struct.Reg, %struct.Reg* %1728, i32 0, i32 0
  %RDI.i2805 = bitcast %union.anon* %1729 to i64*
  %1730 = load i64, i64* %RAX.i2804
  %1731 = load i64, i64* %PC.i2803
  %1732 = add i64 %1731, 3
  store i64 %1732, i64* %PC.i2803
  store i64 %1730, i64* %RDI.i2805, align 8
  store %struct.Memory* %loadMem_475998, %struct.Memory** %MEMORY
  %loadMem_47599b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1734 = getelementptr inbounds %struct.GPR, %struct.GPR* %1733, i32 0, i32 33
  %1735 = getelementptr inbounds %struct.Reg, %struct.Reg* %1734, i32 0, i32 0
  %PC.i2800 = bitcast %union.anon* %1735 to i64*
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1737 = getelementptr inbounds %struct.GPR, %struct.GPR* %1736, i32 0, i32 9
  %1738 = getelementptr inbounds %struct.Reg, %struct.Reg* %1737, i32 0, i32 0
  %RSI.i2801 = bitcast %union.anon* %1738 to i64*
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1740 = getelementptr inbounds %struct.GPR, %struct.GPR* %1739, i32 0, i32 11
  %1741 = getelementptr inbounds %struct.Reg, %struct.Reg* %1740, i32 0, i32 0
  %RDI.i2802 = bitcast %union.anon* %1741 to i64*
  %1742 = load i64, i64* %RDI.i2802
  %1743 = load i64, i64* %RSI.i2801
  %1744 = load i64, i64* %PC.i2800
  %1745 = add i64 %1744, 3
  store i64 %1745, i64* %PC.i2800
  %1746 = add i64 %1743, %1742
  store i64 %1746, i64* %RDI.i2802, align 8
  %1747 = icmp ult i64 %1746, %1742
  %1748 = icmp ult i64 %1746, %1743
  %1749 = or i1 %1747, %1748
  %1750 = zext i1 %1749 to i8
  %1751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1750, i8* %1751, align 1
  %1752 = trunc i64 %1746 to i32
  %1753 = and i32 %1752, 255
  %1754 = call i32 @llvm.ctpop.i32(i32 %1753)
  %1755 = trunc i32 %1754 to i8
  %1756 = and i8 %1755, 1
  %1757 = xor i8 %1756, 1
  %1758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1757, i8* %1758, align 1
  %1759 = xor i64 %1743, %1742
  %1760 = xor i64 %1759, %1746
  %1761 = lshr i64 %1760, 4
  %1762 = trunc i64 %1761 to i8
  %1763 = and i8 %1762, 1
  %1764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1763, i8* %1764, align 1
  %1765 = icmp eq i64 %1746, 0
  %1766 = zext i1 %1765 to i8
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1766, i8* %1767, align 1
  %1768 = lshr i64 %1746, 63
  %1769 = trunc i64 %1768 to i8
  %1770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1769, i8* %1770, align 1
  %1771 = lshr i64 %1742, 63
  %1772 = lshr i64 %1743, 63
  %1773 = xor i64 %1768, %1771
  %1774 = xor i64 %1768, %1772
  %1775 = add i64 %1773, %1774
  %1776 = icmp eq i64 %1775, 2
  %1777 = zext i1 %1776 to i8
  %1778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1777, i8* %1778, align 1
  store %struct.Memory* %loadMem_47599b, %struct.Memory** %MEMORY
  %loadMem_47599e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1780 = getelementptr inbounds %struct.GPR, %struct.GPR* %1779, i32 0, i32 33
  %1781 = getelementptr inbounds %struct.Reg, %struct.Reg* %1780, i32 0, i32 0
  %PC.i2797 = bitcast %union.anon* %1781 to i64*
  %1782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1783 = getelementptr inbounds %struct.GPR, %struct.GPR* %1782, i32 0, i32 9
  %1784 = getelementptr inbounds %struct.Reg, %struct.Reg* %1783, i32 0, i32 0
  %RSI.i2798 = bitcast %union.anon* %1784 to i64*
  %1785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1786 = getelementptr inbounds %struct.GPR, %struct.GPR* %1785, i32 0, i32 11
  %1787 = getelementptr inbounds %struct.Reg, %struct.Reg* %1786, i32 0, i32 0
  %RDI.i2799 = bitcast %union.anon* %1787 to i64*
  %1788 = load i64, i64* %RDI.i2799
  %1789 = add i64 %1788, 4
  %1790 = load i64, i64* %PC.i2797
  %1791 = add i64 %1790, 4
  store i64 %1791, i64* %PC.i2797
  %1792 = inttoptr i64 %1789 to i32*
  %1793 = load i32, i32* %1792
  %1794 = sext i32 %1793 to i64
  store i64 %1794, i64* %RSI.i2798, align 8
  store %struct.Memory* %loadMem_47599e, %struct.Memory** %MEMORY
  %loadMem_4759a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1796 = getelementptr inbounds %struct.GPR, %struct.GPR* %1795, i32 0, i32 33
  %1797 = getelementptr inbounds %struct.Reg, %struct.Reg* %1796, i32 0, i32 0
  %PC.i2795 = bitcast %union.anon* %1797 to i64*
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1799 = getelementptr inbounds %struct.GPR, %struct.GPR* %1798, i32 0, i32 9
  %1800 = getelementptr inbounds %struct.Reg, %struct.Reg* %1799, i32 0, i32 0
  %RSI.i2796 = bitcast %union.anon* %1800 to i64*
  %1801 = load i64, i64* %RSI.i2796
  %1802 = load i64, i64* %PC.i2795
  %1803 = add i64 %1802, 4
  store i64 %1803, i64* %PC.i2795
  %1804 = sext i64 %1801 to i128
  %1805 = and i128 %1804, -18446744073709551616
  %1806 = zext i64 %1801 to i128
  %1807 = or i128 %1805, %1806
  %1808 = mul i128 104, %1807
  %1809 = trunc i128 %1808 to i64
  store i64 %1809, i64* %RSI.i2796, align 8
  %1810 = sext i64 %1809 to i128
  %1811 = icmp ne i128 %1810, %1808
  %1812 = zext i1 %1811 to i8
  %1813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1812, i8* %1813, align 1
  %1814 = trunc i128 %1808 to i32
  %1815 = and i32 %1814, 255
  %1816 = call i32 @llvm.ctpop.i32(i32 %1815)
  %1817 = trunc i32 %1816 to i8
  %1818 = and i8 %1817, 1
  %1819 = xor i8 %1818, 1
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1819, i8* %1820, align 1
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1821, align 1
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1822, align 1
  %1823 = lshr i64 %1809, 63
  %1824 = trunc i64 %1823 to i8
  %1825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1824, i8* %1825, align 1
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1812, i8* %1826, align 1
  store %struct.Memory* %loadMem_4759a2, %struct.Memory** %MEMORY
  %loadMem_4759a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1828 = getelementptr inbounds %struct.GPR, %struct.GPR* %1827, i32 0, i32 33
  %1829 = getelementptr inbounds %struct.Reg, %struct.Reg* %1828, i32 0, i32 0
  %PC.i2792 = bitcast %union.anon* %1829 to i64*
  %1830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1831 = getelementptr inbounds %struct.GPR, %struct.GPR* %1830, i32 0, i32 7
  %1832 = getelementptr inbounds %struct.Reg, %struct.Reg* %1831, i32 0, i32 0
  %RDX.i2793 = bitcast %union.anon* %1832 to i64*
  %1833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1834 = getelementptr inbounds %struct.GPR, %struct.GPR* %1833, i32 0, i32 9
  %1835 = getelementptr inbounds %struct.Reg, %struct.Reg* %1834, i32 0, i32 0
  %RSI.i2794 = bitcast %union.anon* %1835 to i64*
  %1836 = load i64, i64* %RDX.i2793
  %1837 = load i64, i64* %RSI.i2794
  %1838 = load i64, i64* %PC.i2792
  %1839 = add i64 %1838, 3
  store i64 %1839, i64* %PC.i2792
  %1840 = add i64 %1837, %1836
  store i64 %1840, i64* %RDX.i2793, align 8
  %1841 = icmp ult i64 %1840, %1836
  %1842 = icmp ult i64 %1840, %1837
  %1843 = or i1 %1841, %1842
  %1844 = zext i1 %1843 to i8
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1844, i8* %1845, align 1
  %1846 = trunc i64 %1840 to i32
  %1847 = and i32 %1846, 255
  %1848 = call i32 @llvm.ctpop.i32(i32 %1847)
  %1849 = trunc i32 %1848 to i8
  %1850 = and i8 %1849, 1
  %1851 = xor i8 %1850, 1
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1851, i8* %1852, align 1
  %1853 = xor i64 %1837, %1836
  %1854 = xor i64 %1853, %1840
  %1855 = lshr i64 %1854, 4
  %1856 = trunc i64 %1855 to i8
  %1857 = and i8 %1856, 1
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1857, i8* %1858, align 1
  %1859 = icmp eq i64 %1840, 0
  %1860 = zext i1 %1859 to i8
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1860, i8* %1861, align 1
  %1862 = lshr i64 %1840, 63
  %1863 = trunc i64 %1862 to i8
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1863, i8* %1864, align 1
  %1865 = lshr i64 %1836, 63
  %1866 = lshr i64 %1837, 63
  %1867 = xor i64 %1862, %1865
  %1868 = xor i64 %1862, %1866
  %1869 = add i64 %1867, %1868
  %1870 = icmp eq i64 %1869, 2
  %1871 = zext i1 %1870 to i8
  %1872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1871, i8* %1872, align 1
  store %struct.Memory* %loadMem_4759a6, %struct.Memory** %MEMORY
  %loadMem_4759a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1874 = getelementptr inbounds %struct.GPR, %struct.GPR* %1873, i32 0, i32 33
  %1875 = getelementptr inbounds %struct.Reg, %struct.Reg* %1874, i32 0, i32 0
  %PC.i2789 = bitcast %union.anon* %1875 to i64*
  %1876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1877 = getelementptr inbounds %struct.GPR, %struct.GPR* %1876, i32 0, i32 9
  %1878 = getelementptr inbounds %struct.Reg, %struct.Reg* %1877, i32 0, i32 0
  %RSI.i2790 = bitcast %union.anon* %1878 to i64*
  %1879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1880 = getelementptr inbounds %struct.GPR, %struct.GPR* %1879, i32 0, i32 15
  %1881 = getelementptr inbounds %struct.Reg, %struct.Reg* %1880, i32 0, i32 0
  %RBP.i2791 = bitcast %union.anon* %1881 to i64*
  %1882 = load i64, i64* %RBP.i2791
  %1883 = sub i64 %1882, 44
  %1884 = load i64, i64* %PC.i2789
  %1885 = add i64 %1884, 4
  store i64 %1885, i64* %PC.i2789
  %1886 = inttoptr i64 %1883 to i32*
  %1887 = load i32, i32* %1886
  %1888 = sext i32 %1887 to i64
  store i64 %1888, i64* %RSI.i2790, align 8
  store %struct.Memory* %loadMem_4759a9, %struct.Memory** %MEMORY
  %loadMem_4759ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1890 = getelementptr inbounds %struct.GPR, %struct.GPR* %1889, i32 0, i32 33
  %1891 = getelementptr inbounds %struct.Reg, %struct.Reg* %1890, i32 0, i32 0
  %PC.i2786 = bitcast %union.anon* %1891 to i64*
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1893 = getelementptr inbounds %struct.GPR, %struct.GPR* %1892, i32 0, i32 7
  %1894 = getelementptr inbounds %struct.Reg, %struct.Reg* %1893, i32 0, i32 0
  %RDX.i2787 = bitcast %union.anon* %1894 to i64*
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1896 = getelementptr inbounds %struct.GPR, %struct.GPR* %1895, i32 0, i32 9
  %1897 = getelementptr inbounds %struct.Reg, %struct.Reg* %1896, i32 0, i32 0
  %RSI.i2788 = bitcast %union.anon* %1897 to i64*
  %1898 = load i64, i64* %RDX.i2787
  %1899 = load i64, i64* %RSI.i2788
  %1900 = mul i64 %1899, 4
  %1901 = add i64 %1898, 4
  %1902 = add i64 %1901, %1900
  %1903 = load i64, i64* %PC.i2786
  %1904 = add i64 %1903, 5
  store i64 %1904, i64* %PC.i2786
  %1905 = inttoptr i64 %1902 to i32*
  %1906 = load i32, i32* %1905
  %1907 = sext i32 %1906 to i64
  store i64 %1907, i64* %RDX.i2787, align 8
  store %struct.Memory* %loadMem_4759ad, %struct.Memory** %MEMORY
  %loadMem_4759b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1909 = getelementptr inbounds %struct.GPR, %struct.GPR* %1908, i32 0, i32 33
  %1910 = getelementptr inbounds %struct.Reg, %struct.Reg* %1909, i32 0, i32 0
  %PC.i2784 = bitcast %union.anon* %1910 to i64*
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1912 = getelementptr inbounds %struct.GPR, %struct.GPR* %1911, i32 0, i32 7
  %1913 = getelementptr inbounds %struct.Reg, %struct.Reg* %1912, i32 0, i32 0
  %RDX.i2785 = bitcast %union.anon* %1913 to i64*
  %1914 = load i64, i64* %RDX.i2785
  %1915 = load i64, i64* %PC.i2784
  %1916 = add i64 %1915, 4
  store i64 %1916, i64* %PC.i2784
  %1917 = sext i64 %1914 to i128
  %1918 = and i128 %1917, -18446744073709551616
  %1919 = zext i64 %1914 to i128
  %1920 = or i128 %1918, %1919
  %1921 = mul i128 104, %1920
  %1922 = trunc i128 %1921 to i64
  store i64 %1922, i64* %RDX.i2785, align 8
  %1923 = sext i64 %1922 to i128
  %1924 = icmp ne i128 %1923, %1921
  %1925 = zext i1 %1924 to i8
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1925, i8* %1926, align 1
  %1927 = trunc i128 %1921 to i32
  %1928 = and i32 %1927, 255
  %1929 = call i32 @llvm.ctpop.i32(i32 %1928)
  %1930 = trunc i32 %1929 to i8
  %1931 = and i8 %1930, 1
  %1932 = xor i8 %1931, 1
  %1933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1932, i8* %1933, align 1
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1934, align 1
  %1935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1935, align 1
  %1936 = lshr i64 %1922, 63
  %1937 = trunc i64 %1936 to i8
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1937, i8* %1938, align 1
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1925, i8* %1939, align 1
  store %struct.Memory* %loadMem_4759b2, %struct.Memory** %MEMORY
  %loadMem_4759b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1941 = getelementptr inbounds %struct.GPR, %struct.GPR* %1940, i32 0, i32 33
  %1942 = getelementptr inbounds %struct.Reg, %struct.Reg* %1941, i32 0, i32 0
  %PC.i2781 = bitcast %union.anon* %1942 to i64*
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1944 = getelementptr inbounds %struct.GPR, %struct.GPR* %1943, i32 0, i32 5
  %1945 = getelementptr inbounds %struct.Reg, %struct.Reg* %1944, i32 0, i32 0
  %RCX.i2782 = bitcast %union.anon* %1945 to i64*
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1947 = getelementptr inbounds %struct.GPR, %struct.GPR* %1946, i32 0, i32 7
  %1948 = getelementptr inbounds %struct.Reg, %struct.Reg* %1947, i32 0, i32 0
  %RDX.i2783 = bitcast %union.anon* %1948 to i64*
  %1949 = load i64, i64* %RCX.i2782
  %1950 = load i64, i64* %RDX.i2783
  %1951 = load i64, i64* %PC.i2781
  %1952 = add i64 %1951, 3
  store i64 %1952, i64* %PC.i2781
  %1953 = add i64 %1950, %1949
  store i64 %1953, i64* %RCX.i2782, align 8
  %1954 = icmp ult i64 %1953, %1949
  %1955 = icmp ult i64 %1953, %1950
  %1956 = or i1 %1954, %1955
  %1957 = zext i1 %1956 to i8
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1957, i8* %1958, align 1
  %1959 = trunc i64 %1953 to i32
  %1960 = and i32 %1959, 255
  %1961 = call i32 @llvm.ctpop.i32(i32 %1960)
  %1962 = trunc i32 %1961 to i8
  %1963 = and i8 %1962, 1
  %1964 = xor i8 %1963, 1
  %1965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1964, i8* %1965, align 1
  %1966 = xor i64 %1950, %1949
  %1967 = xor i64 %1966, %1953
  %1968 = lshr i64 %1967, 4
  %1969 = trunc i64 %1968 to i8
  %1970 = and i8 %1969, 1
  %1971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1970, i8* %1971, align 1
  %1972 = icmp eq i64 %1953, 0
  %1973 = zext i1 %1972 to i8
  %1974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1973, i8* %1974, align 1
  %1975 = lshr i64 %1953, 63
  %1976 = trunc i64 %1975 to i8
  %1977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1976, i8* %1977, align 1
  %1978 = lshr i64 %1949, 63
  %1979 = lshr i64 %1950, 63
  %1980 = xor i64 %1975, %1978
  %1981 = xor i64 %1975, %1979
  %1982 = add i64 %1980, %1981
  %1983 = icmp eq i64 %1982, 2
  %1984 = zext i1 %1983 to i8
  %1985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1984, i8* %1985, align 1
  store %struct.Memory* %loadMem_4759b6, %struct.Memory** %MEMORY
  %loadMem_4759b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1987 = getelementptr inbounds %struct.GPR, %struct.GPR* %1986, i32 0, i32 33
  %1988 = getelementptr inbounds %struct.Reg, %struct.Reg* %1987, i32 0, i32 0
  %PC.i2779 = bitcast %union.anon* %1988 to i64*
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1990 = getelementptr inbounds %struct.GPR, %struct.GPR* %1989, i32 0, i32 5
  %1991 = getelementptr inbounds %struct.Reg, %struct.Reg* %1990, i32 0, i32 0
  %RCX.i2780 = bitcast %union.anon* %1991 to i64*
  %1992 = load i64, i64* %RCX.i2780
  %1993 = load i64, i64* %PC.i2779
  %1994 = add i64 %1993, 3
  store i64 %1994, i64* %PC.i2779
  %1995 = inttoptr i64 %1992 to i32*
  %1996 = load i32, i32* %1995
  %1997 = sext i32 %1996 to i64
  store i64 %1997, i64* %RCX.i2780, align 8
  store %struct.Memory* %loadMem_4759b9, %struct.Memory** %MEMORY
  %loadMem_4759bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1999 = getelementptr inbounds %struct.GPR, %struct.GPR* %1998, i32 0, i32 33
  %2000 = getelementptr inbounds %struct.Reg, %struct.Reg* %1999, i32 0, i32 0
  %PC.i2777 = bitcast %union.anon* %2000 to i64*
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2002 = getelementptr inbounds %struct.GPR, %struct.GPR* %2001, i32 0, i32 5
  %2003 = getelementptr inbounds %struct.Reg, %struct.Reg* %2002, i32 0, i32 0
  %RCX.i2778 = bitcast %union.anon* %2003 to i64*
  %2004 = load i64, i64* %RCX.i2778
  %2005 = load i64, i64* %PC.i2777
  %2006 = add i64 %2005, 4
  store i64 %2006, i64* %PC.i2777
  %2007 = sext i64 %2004 to i128
  %2008 = and i128 %2007, -18446744073709551616
  %2009 = zext i64 %2004 to i128
  %2010 = or i128 %2008, %2009
  %2011 = mul i128 76, %2010
  %2012 = trunc i128 %2011 to i64
  store i64 %2012, i64* %RCX.i2778, align 8
  %2013 = sext i64 %2012 to i128
  %2014 = icmp ne i128 %2013, %2011
  %2015 = zext i1 %2014 to i8
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2015, i8* %2016, align 1
  %2017 = trunc i128 %2011 to i32
  %2018 = and i32 %2017, 255
  %2019 = call i32 @llvm.ctpop.i32(i32 %2018)
  %2020 = trunc i32 %2019 to i8
  %2021 = and i8 %2020, 1
  %2022 = xor i8 %2021, 1
  %2023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2022, i8* %2023, align 1
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2024, align 1
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2025, align 1
  %2026 = lshr i64 %2012, 63
  %2027 = trunc i64 %2026 to i8
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2027, i8* %2028, align 1
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2015, i8* %2029, align 1
  store %struct.Memory* %loadMem_4759bc, %struct.Memory** %MEMORY
  %loadMem_4759c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2031 = getelementptr inbounds %struct.GPR, %struct.GPR* %2030, i32 0, i32 33
  %2032 = getelementptr inbounds %struct.Reg, %struct.Reg* %2031, i32 0, i32 0
  %PC.i2774 = bitcast %union.anon* %2032 to i64*
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2034 = getelementptr inbounds %struct.GPR, %struct.GPR* %2033, i32 0, i32 1
  %2035 = getelementptr inbounds %struct.Reg, %struct.Reg* %2034, i32 0, i32 0
  %RAX.i2775 = bitcast %union.anon* %2035 to i64*
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2037 = getelementptr inbounds %struct.GPR, %struct.GPR* %2036, i32 0, i32 5
  %2038 = getelementptr inbounds %struct.Reg, %struct.Reg* %2037, i32 0, i32 0
  %RCX.i2776 = bitcast %union.anon* %2038 to i64*
  %2039 = load i64, i64* %RAX.i2775
  %2040 = load i64, i64* %RCX.i2776
  %2041 = load i64, i64* %PC.i2774
  %2042 = add i64 %2041, 3
  store i64 %2042, i64* %PC.i2774
  %2043 = add i64 %2040, %2039
  store i64 %2043, i64* %RAX.i2775, align 8
  %2044 = icmp ult i64 %2043, %2039
  %2045 = icmp ult i64 %2043, %2040
  %2046 = or i1 %2044, %2045
  %2047 = zext i1 %2046 to i8
  %2048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2047, i8* %2048, align 1
  %2049 = trunc i64 %2043 to i32
  %2050 = and i32 %2049, 255
  %2051 = call i32 @llvm.ctpop.i32(i32 %2050)
  %2052 = trunc i32 %2051 to i8
  %2053 = and i8 %2052, 1
  %2054 = xor i8 %2053, 1
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2054, i8* %2055, align 1
  %2056 = xor i64 %2040, %2039
  %2057 = xor i64 %2056, %2043
  %2058 = lshr i64 %2057, 4
  %2059 = trunc i64 %2058 to i8
  %2060 = and i8 %2059, 1
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2060, i8* %2061, align 1
  %2062 = icmp eq i64 %2043, 0
  %2063 = zext i1 %2062 to i8
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2063, i8* %2064, align 1
  %2065 = lshr i64 %2043, 63
  %2066 = trunc i64 %2065 to i8
  %2067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2066, i8* %2067, align 1
  %2068 = lshr i64 %2039, 63
  %2069 = lshr i64 %2040, 63
  %2070 = xor i64 %2065, %2068
  %2071 = xor i64 %2065, %2069
  %2072 = add i64 %2070, %2071
  %2073 = icmp eq i64 %2072, 2
  %2074 = zext i1 %2073 to i8
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2074, i8* %2075, align 1
  store %struct.Memory* %loadMem_4759c0, %struct.Memory** %MEMORY
  %loadMem_4759c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2077 = getelementptr inbounds %struct.GPR, %struct.GPR* %2076, i32 0, i32 33
  %2078 = getelementptr inbounds %struct.Reg, %struct.Reg* %2077, i32 0, i32 0
  %PC.i2771 = bitcast %union.anon* %2078 to i64*
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2080 = getelementptr inbounds %struct.GPR, %struct.GPR* %2079, i32 0, i32 17
  %2081 = getelementptr inbounds %struct.Reg, %struct.Reg* %2080, i32 0, i32 0
  %R8D.i2772 = bitcast %union.anon* %2081 to i32*
  %2082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2083 = getelementptr inbounds %struct.GPR, %struct.GPR* %2082, i32 0, i32 1
  %2084 = getelementptr inbounds %struct.Reg, %struct.Reg* %2083, i32 0, i32 0
  %RAX.i2773 = bitcast %union.anon* %2084 to i64*
  %2085 = bitcast i32* %R8D.i2772 to i64*
  %2086 = load i64, i64* %RAX.i2773
  %2087 = add i64 %2086, 8
  %2088 = load i64, i64* %PC.i2771
  %2089 = add i64 %2088, 4
  store i64 %2089, i64* %PC.i2771
  %2090 = inttoptr i64 %2087 to i32*
  %2091 = load i32, i32* %2090
  %2092 = zext i32 %2091 to i64
  store i64 %2092, i64* %2085, align 8
  store %struct.Memory* %loadMem_4759c3, %struct.Memory** %MEMORY
  %loadMem_4759c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2094 = getelementptr inbounds %struct.GPR, %struct.GPR* %2093, i32 0, i32 33
  %2095 = getelementptr inbounds %struct.Reg, %struct.Reg* %2094, i32 0, i32 0
  %PC.i2768 = bitcast %union.anon* %2095 to i64*
  %2096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2097 = getelementptr inbounds %struct.GPR, %struct.GPR* %2096, i32 0, i32 17
  %2098 = getelementptr inbounds %struct.Reg, %struct.Reg* %2097, i32 0, i32 0
  %R8D.i2769 = bitcast %union.anon* %2098 to i32*
  %2099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2100 = getelementptr inbounds %struct.GPR, %struct.GPR* %2099, i32 0, i32 15
  %2101 = getelementptr inbounds %struct.Reg, %struct.Reg* %2100, i32 0, i32 0
  %RBP.i2770 = bitcast %union.anon* %2101 to i64*
  %2102 = load i64, i64* %RBP.i2770
  %2103 = sub i64 %2102, 1044
  %2104 = load i32, i32* %R8D.i2769
  %2105 = zext i32 %2104 to i64
  %2106 = load i64, i64* %PC.i2768
  %2107 = add i64 %2106, 7
  store i64 %2107, i64* %PC.i2768
  %2108 = inttoptr i64 %2103 to i32*
  store i32 %2104, i32* %2108
  store %struct.Memory* %loadMem_4759c7, %struct.Memory** %MEMORY
  %loadMem_4759ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %2109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2110 = getelementptr inbounds %struct.GPR, %struct.GPR* %2109, i32 0, i32 33
  %2111 = getelementptr inbounds %struct.Reg, %struct.Reg* %2110, i32 0, i32 0
  %PC.i2765 = bitcast %union.anon* %2111 to i64*
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2113 = getelementptr inbounds %struct.GPR, %struct.GPR* %2112, i32 0, i32 1
  %2114 = getelementptr inbounds %struct.Reg, %struct.Reg* %2113, i32 0, i32 0
  %RAX.i2766 = bitcast %union.anon* %2114 to i64*
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2116 = getelementptr inbounds %struct.GPR, %struct.GPR* %2115, i32 0, i32 15
  %2117 = getelementptr inbounds %struct.Reg, %struct.Reg* %2116, i32 0, i32 0
  %RBP.i2767 = bitcast %union.anon* %2117 to i64*
  %2118 = load i64, i64* %RBP.i2767
  %2119 = sub i64 %2118, 1044
  %2120 = load i64, i64* %PC.i2765
  %2121 = add i64 %2120, 7
  store i64 %2121, i64* %PC.i2765
  %2122 = inttoptr i64 %2119 to i32*
  %2123 = load i32, i32* %2122
  %2124 = sext i32 %2123 to i64
  store i64 %2124, i64* %RAX.i2766, align 8
  store %struct.Memory* %loadMem_4759ce, %struct.Memory** %MEMORY
  %loadMem_4759d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2126 = getelementptr inbounds %struct.GPR, %struct.GPR* %2125, i32 0, i32 33
  %2127 = getelementptr inbounds %struct.Reg, %struct.Reg* %2126, i32 0, i32 0
  %PC.i2762 = bitcast %union.anon* %2127 to i64*
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2129 = getelementptr inbounds %struct.GPR, %struct.GPR* %2128, i32 0, i32 17
  %2130 = getelementptr inbounds %struct.Reg, %struct.Reg* %2129, i32 0, i32 0
  %R8D.i2763 = bitcast %union.anon* %2130 to i32*
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2132 = getelementptr inbounds %struct.GPR, %struct.GPR* %2131, i32 0, i32 1
  %2133 = getelementptr inbounds %struct.Reg, %struct.Reg* %2132, i32 0, i32 0
  %RAX.i2764 = bitcast %union.anon* %2133 to i64*
  %2134 = bitcast i32* %R8D.i2763 to i64*
  %2135 = load i64, i64* %RAX.i2764
  %2136 = add i64 %2135, 12099168
  %2137 = load i64, i64* %PC.i2762
  %2138 = add i64 %2137, 9
  store i64 %2138, i64* %PC.i2762
  %2139 = inttoptr i64 %2136 to i8*
  %2140 = load i8, i8* %2139
  %2141 = zext i8 %2140 to i64
  store i64 %2141, i64* %2134, align 8
  store %struct.Memory* %loadMem_4759d5, %struct.Memory** %MEMORY
  %loadMem_4759de = load %struct.Memory*, %struct.Memory** %MEMORY
  %2142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2143 = getelementptr inbounds %struct.GPR, %struct.GPR* %2142, i32 0, i32 33
  %2144 = getelementptr inbounds %struct.Reg, %struct.Reg* %2143, i32 0, i32 0
  %PC.i2759 = bitcast %union.anon* %2144 to i64*
  %2145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2146 = getelementptr inbounds %struct.GPR, %struct.GPR* %2145, i32 0, i32 17
  %2147 = getelementptr inbounds %struct.Reg, %struct.Reg* %2146, i32 0, i32 0
  %R8D.i2760 = bitcast %union.anon* %2147 to i32*
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2149 = getelementptr inbounds %struct.GPR, %struct.GPR* %2148, i32 0, i32 15
  %2150 = getelementptr inbounds %struct.Reg, %struct.Reg* %2149, i32 0, i32 0
  %RBP.i2761 = bitcast %union.anon* %2150 to i64*
  %2151 = load i32, i32* %R8D.i2760
  %2152 = zext i32 %2151 to i64
  %2153 = load i64, i64* %RBP.i2761
  %2154 = sub i64 %2153, 228
  %2155 = load i64, i64* %PC.i2759
  %2156 = add i64 %2155, 7
  store i64 %2156, i64* %PC.i2759
  %2157 = inttoptr i64 %2154 to i32*
  %2158 = load i32, i32* %2157
  %2159 = sub i32 %2151, %2158
  %2160 = icmp ult i32 %2151, %2158
  %2161 = zext i1 %2160 to i8
  %2162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2161, i8* %2162, align 1
  %2163 = and i32 %2159, 255
  %2164 = call i32 @llvm.ctpop.i32(i32 %2163)
  %2165 = trunc i32 %2164 to i8
  %2166 = and i8 %2165, 1
  %2167 = xor i8 %2166, 1
  %2168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2167, i8* %2168, align 1
  %2169 = xor i32 %2158, %2151
  %2170 = xor i32 %2169, %2159
  %2171 = lshr i32 %2170, 4
  %2172 = trunc i32 %2171 to i8
  %2173 = and i8 %2172, 1
  %2174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2173, i8* %2174, align 1
  %2175 = icmp eq i32 %2159, 0
  %2176 = zext i1 %2175 to i8
  %2177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2176, i8* %2177, align 1
  %2178 = lshr i32 %2159, 31
  %2179 = trunc i32 %2178 to i8
  %2180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2179, i8* %2180, align 1
  %2181 = lshr i32 %2151, 31
  %2182 = lshr i32 %2158, 31
  %2183 = xor i32 %2182, %2181
  %2184 = xor i32 %2178, %2181
  %2185 = add i32 %2184, %2183
  %2186 = icmp eq i32 %2185, 2
  %2187 = zext i1 %2186 to i8
  %2188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2187, i8* %2188, align 1
  store %struct.Memory* %loadMem_4759de, %struct.Memory** %MEMORY
  %loadMem_4759e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2190 = getelementptr inbounds %struct.GPR, %struct.GPR* %2189, i32 0, i32 33
  %2191 = getelementptr inbounds %struct.Reg, %struct.Reg* %2190, i32 0, i32 0
  %PC.i2758 = bitcast %union.anon* %2191 to i64*
  %2192 = load i64, i64* %PC.i2758
  %2193 = add i64 %2192, 150
  %2194 = load i64, i64* %PC.i2758
  %2195 = add i64 %2194, 6
  %2196 = load i64, i64* %PC.i2758
  %2197 = add i64 %2196, 6
  store i64 %2197, i64* %PC.i2758
  %2198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2199 = load i8, i8* %2198, align 1
  store i8 %2199, i8* %BRANCH_TAKEN, align 1
  %2200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2201 = icmp ne i8 %2199, 0
  %2202 = select i1 %2201, i64 %2193, i64 %2195
  store i64 %2202, i64* %2200, align 8
  store %struct.Memory* %loadMem_4759e5, %struct.Memory** %MEMORY
  %loadBr_4759e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4759e5 = icmp eq i8 %loadBr_4759e5, 1
  br i1 %cmpBr_4759e5, label %block_.L_475a7b, label %block_4759eb

block_4759eb:                                     ; preds = %block_475976
  %loadMem_4759eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2204 = getelementptr inbounds %struct.GPR, %struct.GPR* %2203, i32 0, i32 33
  %2205 = getelementptr inbounds %struct.Reg, %struct.Reg* %2204, i32 0, i32 0
  %PC.i2756 = bitcast %union.anon* %2205 to i64*
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2207 = getelementptr inbounds %struct.GPR, %struct.GPR* %2206, i32 0, i32 15
  %2208 = getelementptr inbounds %struct.Reg, %struct.Reg* %2207, i32 0, i32 0
  %RBP.i2757 = bitcast %union.anon* %2208 to i64*
  %2209 = load i64, i64* %RBP.i2757
  %2210 = sub i64 %2209, 48
  %2211 = load i64, i64* %PC.i2756
  %2212 = add i64 %2211, 7
  store i64 %2212, i64* %PC.i2756
  %2213 = inttoptr i64 %2210 to i32*
  store i32 21, i32* %2213
  store %struct.Memory* %loadMem_4759eb, %struct.Memory** %MEMORY
  br label %block_.L_4759f2

block_.L_4759f2:                                  ; preds = %block_.L_475a68, %block_4759eb
  %loadMem_4759f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2215 = getelementptr inbounds %struct.GPR, %struct.GPR* %2214, i32 0, i32 33
  %2216 = getelementptr inbounds %struct.Reg, %struct.Reg* %2215, i32 0, i32 0
  %PC.i2754 = bitcast %union.anon* %2216 to i64*
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2218 = getelementptr inbounds %struct.GPR, %struct.GPR* %2217, i32 0, i32 15
  %2219 = getelementptr inbounds %struct.Reg, %struct.Reg* %2218, i32 0, i32 0
  %RBP.i2755 = bitcast %union.anon* %2219 to i64*
  %2220 = load i64, i64* %RBP.i2755
  %2221 = sub i64 %2220, 48
  %2222 = load i64, i64* %PC.i2754
  %2223 = add i64 %2222, 7
  store i64 %2223, i64* %PC.i2754
  %2224 = inttoptr i64 %2221 to i32*
  %2225 = load i32, i32* %2224
  %2226 = sub i32 %2225, 400
  %2227 = icmp ult i32 %2225, 400
  %2228 = zext i1 %2227 to i8
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2228, i8* %2229, align 1
  %2230 = and i32 %2226, 255
  %2231 = call i32 @llvm.ctpop.i32(i32 %2230)
  %2232 = trunc i32 %2231 to i8
  %2233 = and i8 %2232, 1
  %2234 = xor i8 %2233, 1
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2234, i8* %2235, align 1
  %2236 = xor i32 %2225, 400
  %2237 = xor i32 %2236, %2226
  %2238 = lshr i32 %2237, 4
  %2239 = trunc i32 %2238 to i8
  %2240 = and i8 %2239, 1
  %2241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2240, i8* %2241, align 1
  %2242 = icmp eq i32 %2226, 0
  %2243 = zext i1 %2242 to i8
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2243, i8* %2244, align 1
  %2245 = lshr i32 %2226, 31
  %2246 = trunc i32 %2245 to i8
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2246, i8* %2247, align 1
  %2248 = lshr i32 %2225, 31
  %2249 = xor i32 %2245, %2248
  %2250 = add i32 %2249, %2248
  %2251 = icmp eq i32 %2250, 2
  %2252 = zext i1 %2251 to i8
  %2253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2252, i8* %2253, align 1
  store %struct.Memory* %loadMem_4759f2, %struct.Memory** %MEMORY
  %loadMem_4759f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2255 = getelementptr inbounds %struct.GPR, %struct.GPR* %2254, i32 0, i32 33
  %2256 = getelementptr inbounds %struct.Reg, %struct.Reg* %2255, i32 0, i32 0
  %PC.i2753 = bitcast %union.anon* %2256 to i64*
  %2257 = load i64, i64* %PC.i2753
  %2258 = add i64 %2257, 125
  %2259 = load i64, i64* %PC.i2753
  %2260 = add i64 %2259, 6
  %2261 = load i64, i64* %PC.i2753
  %2262 = add i64 %2261, 6
  store i64 %2262, i64* %PC.i2753
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2264 = load i8, i8* %2263, align 1
  %2265 = icmp ne i8 %2264, 0
  %2266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2267 = load i8, i8* %2266, align 1
  %2268 = icmp ne i8 %2267, 0
  %2269 = xor i1 %2265, %2268
  %2270 = xor i1 %2269, true
  %2271 = zext i1 %2270 to i8
  store i8 %2271, i8* %BRANCH_TAKEN, align 1
  %2272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2273 = select i1 %2269, i64 %2260, i64 %2258
  store i64 %2273, i64* %2272, align 8
  store %struct.Memory* %loadMem_4759f9, %struct.Memory** %MEMORY
  %loadBr_4759f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4759f9 = icmp eq i8 %loadBr_4759f9, 1
  br i1 %cmpBr_4759f9, label %block_.L_475a76, label %block_4759ff

block_4759ff:                                     ; preds = %block_.L_4759f2
  %loadMem_4759ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %2274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2275 = getelementptr inbounds %struct.GPR, %struct.GPR* %2274, i32 0, i32 33
  %2276 = getelementptr inbounds %struct.Reg, %struct.Reg* %2275, i32 0, i32 0
  %PC.i2750 = bitcast %union.anon* %2276 to i64*
  %2277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2278 = getelementptr inbounds %struct.GPR, %struct.GPR* %2277, i32 0, i32 1
  %2279 = getelementptr inbounds %struct.Reg, %struct.Reg* %2278, i32 0, i32 0
  %RAX.i2751 = bitcast %union.anon* %2279 to i64*
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2281 = getelementptr inbounds %struct.GPR, %struct.GPR* %2280, i32 0, i32 15
  %2282 = getelementptr inbounds %struct.Reg, %struct.Reg* %2281, i32 0, i32 0
  %RBP.i2752 = bitcast %union.anon* %2282 to i64*
  %2283 = load i64, i64* %RBP.i2752
  %2284 = sub i64 %2283, 48
  %2285 = load i64, i64* %PC.i2750
  %2286 = add i64 %2285, 4
  store i64 %2286, i64* %PC.i2750
  %2287 = inttoptr i64 %2284 to i32*
  %2288 = load i32, i32* %2287
  %2289 = sext i32 %2288 to i64
  store i64 %2289, i64* %RAX.i2751, align 8
  store %struct.Memory* %loadMem_4759ff, %struct.Memory** %MEMORY
  %loadMem_475a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2291 = getelementptr inbounds %struct.GPR, %struct.GPR* %2290, i32 0, i32 33
  %2292 = getelementptr inbounds %struct.Reg, %struct.Reg* %2291, i32 0, i32 0
  %PC.i2747 = bitcast %union.anon* %2292 to i64*
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2294 = getelementptr inbounds %struct.GPR, %struct.GPR* %2293, i32 0, i32 1
  %2295 = getelementptr inbounds %struct.Reg, %struct.Reg* %2294, i32 0, i32 0
  %RAX.i2748 = bitcast %union.anon* %2295 to i64*
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 5
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %RCX.i2749 = bitcast %union.anon* %2298 to i64*
  %2299 = load i64, i64* %RAX.i2748
  %2300 = add i64 %2299, 12099168
  %2301 = load i64, i64* %PC.i2747
  %2302 = add i64 %2301, 8
  store i64 %2302, i64* %PC.i2747
  %2303 = inttoptr i64 %2300 to i8*
  %2304 = load i8, i8* %2303
  %2305 = zext i8 %2304 to i64
  store i64 %2305, i64* %RCX.i2749, align 8
  store %struct.Memory* %loadMem_475a03, %struct.Memory** %MEMORY
  %loadMem_475a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2307 = getelementptr inbounds %struct.GPR, %struct.GPR* %2306, i32 0, i32 33
  %2308 = getelementptr inbounds %struct.Reg, %struct.Reg* %2307, i32 0, i32 0
  %PC.i2745 = bitcast %union.anon* %2308 to i64*
  %2309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2310 = getelementptr inbounds %struct.GPR, %struct.GPR* %2309, i32 0, i32 5
  %2311 = getelementptr inbounds %struct.Reg, %struct.Reg* %2310, i32 0, i32 0
  %ECX.i2746 = bitcast %union.anon* %2311 to i32*
  %2312 = load i32, i32* %ECX.i2746
  %2313 = zext i32 %2312 to i64
  %2314 = load i64, i64* %PC.i2745
  %2315 = add i64 %2314, 3
  store i64 %2315, i64* %PC.i2745
  %2316 = sub i32 %2312, 3
  %2317 = icmp ult i32 %2312, 3
  %2318 = zext i1 %2317 to i8
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2318, i8* %2319, align 1
  %2320 = and i32 %2316, 255
  %2321 = call i32 @llvm.ctpop.i32(i32 %2320)
  %2322 = trunc i32 %2321 to i8
  %2323 = and i8 %2322, 1
  %2324 = xor i8 %2323, 1
  %2325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2324, i8* %2325, align 1
  %2326 = xor i64 3, %2313
  %2327 = trunc i64 %2326 to i32
  %2328 = xor i32 %2327, %2316
  %2329 = lshr i32 %2328, 4
  %2330 = trunc i32 %2329 to i8
  %2331 = and i8 %2330, 1
  %2332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2331, i8* %2332, align 1
  %2333 = icmp eq i32 %2316, 0
  %2334 = zext i1 %2333 to i8
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2334, i8* %2335, align 1
  %2336 = lshr i32 %2316, 31
  %2337 = trunc i32 %2336 to i8
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2337, i8* %2338, align 1
  %2339 = lshr i32 %2312, 31
  %2340 = xor i32 %2336, %2339
  %2341 = add i32 %2340, %2339
  %2342 = icmp eq i32 %2341, 2
  %2343 = zext i1 %2342 to i8
  %2344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2343, i8* %2344, align 1
  store %struct.Memory* %loadMem_475a0b, %struct.Memory** %MEMORY
  %loadMem_475a0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2346 = getelementptr inbounds %struct.GPR, %struct.GPR* %2345, i32 0, i32 33
  %2347 = getelementptr inbounds %struct.Reg, %struct.Reg* %2346, i32 0, i32 0
  %PC.i2744 = bitcast %union.anon* %2347 to i64*
  %2348 = load i64, i64* %PC.i2744
  %2349 = add i64 %2348, 85
  %2350 = load i64, i64* %PC.i2744
  %2351 = add i64 %2350, 6
  %2352 = load i64, i64* %PC.i2744
  %2353 = add i64 %2352, 6
  store i64 %2353, i64* %PC.i2744
  %2354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2355 = load i8, i8* %2354, align 1
  store i8 %2355, i8* %BRANCH_TAKEN, align 1
  %2356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2357 = icmp ne i8 %2355, 0
  %2358 = select i1 %2357, i64 %2349, i64 %2351
  store i64 %2358, i64* %2356, align 8
  store %struct.Memory* %loadMem_475a0e, %struct.Memory** %MEMORY
  %loadBr_475a0e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475a0e = icmp eq i8 %loadBr_475a0e, 1
  br i1 %cmpBr_475a0e, label %block_.L_475a63, label %block_475a14

block_475a14:                                     ; preds = %block_4759ff
  %loadMem_475a14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2360 = getelementptr inbounds %struct.GPR, %struct.GPR* %2359, i32 0, i32 33
  %2361 = getelementptr inbounds %struct.Reg, %struct.Reg* %2360, i32 0, i32 0
  %PC.i2742 = bitcast %union.anon* %2361 to i64*
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2363 = getelementptr inbounds %struct.GPR, %struct.GPR* %2362, i32 0, i32 1
  %2364 = getelementptr inbounds %struct.Reg, %struct.Reg* %2363, i32 0, i32 0
  %RAX.i2743 = bitcast %union.anon* %2364 to i64*
  %2365 = load i64, i64* %PC.i2742
  %2366 = add i64 %2365, 10
  store i64 %2366, i64* %PC.i2742
  store i64 ptrtoint (%G__0xb0eff0_type* @G__0xb0eff0 to i64), i64* %RAX.i2743, align 8
  store %struct.Memory* %loadMem_475a14, %struct.Memory** %MEMORY
  %loadMem_475a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2368 = getelementptr inbounds %struct.GPR, %struct.GPR* %2367, i32 0, i32 33
  %2369 = getelementptr inbounds %struct.Reg, %struct.Reg* %2368, i32 0, i32 0
  %PC.i2739 = bitcast %union.anon* %2369 to i64*
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2371 = getelementptr inbounds %struct.GPR, %struct.GPR* %2370, i32 0, i32 5
  %2372 = getelementptr inbounds %struct.Reg, %struct.Reg* %2371, i32 0, i32 0
  %RCX.i2740 = bitcast %union.anon* %2372 to i64*
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2374 = getelementptr inbounds %struct.GPR, %struct.GPR* %2373, i32 0, i32 15
  %2375 = getelementptr inbounds %struct.Reg, %struct.Reg* %2374, i32 0, i32 0
  %RBP.i2741 = bitcast %union.anon* %2375 to i64*
  %2376 = load i64, i64* %RBP.i2741
  %2377 = sub i64 %2376, 48
  %2378 = load i64, i64* %PC.i2739
  %2379 = add i64 %2378, 4
  store i64 %2379, i64* %PC.i2739
  %2380 = inttoptr i64 %2377 to i32*
  %2381 = load i32, i32* %2380
  %2382 = sext i32 %2381 to i64
  store i64 %2382, i64* %RCX.i2740, align 8
  store %struct.Memory* %loadMem_475a1e, %struct.Memory** %MEMORY
  %loadMem_475a22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2384 = getelementptr inbounds %struct.GPR, %struct.GPR* %2383, i32 0, i32 33
  %2385 = getelementptr inbounds %struct.Reg, %struct.Reg* %2384, i32 0, i32 0
  %PC.i2737 = bitcast %union.anon* %2385 to i64*
  %2386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2387 = getelementptr inbounds %struct.GPR, %struct.GPR* %2386, i32 0, i32 5
  %2388 = getelementptr inbounds %struct.Reg, %struct.Reg* %2387, i32 0, i32 0
  %RCX.i2738 = bitcast %union.anon* %2388 to i64*
  %2389 = load i64, i64* %RCX.i2738
  %2390 = load i64, i64* %PC.i2737
  %2391 = add i64 %2390, 7
  store i64 %2391, i64* %PC.i2737
  %2392 = sext i64 %2389 to i128
  %2393 = and i128 %2392, -18446744073709551616
  %2394 = zext i64 %2389 to i128
  %2395 = or i128 %2393, %2394
  %2396 = mul i128 380, %2395
  %2397 = trunc i128 %2396 to i64
  store i64 %2397, i64* %RCX.i2738, align 8
  %2398 = sext i64 %2397 to i128
  %2399 = icmp ne i128 %2398, %2396
  %2400 = zext i1 %2399 to i8
  %2401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2400, i8* %2401, align 1
  %2402 = trunc i128 %2396 to i32
  %2403 = and i32 %2402, 255
  %2404 = call i32 @llvm.ctpop.i32(i32 %2403)
  %2405 = trunc i32 %2404 to i8
  %2406 = and i8 %2405, 1
  %2407 = xor i8 %2406, 1
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2407, i8* %2408, align 1
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2409, align 1
  %2410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2410, align 1
  %2411 = lshr i64 %2397, 63
  %2412 = trunc i64 %2411 to i8
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2412, i8* %2413, align 1
  %2414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2400, i8* %2414, align 1
  store %struct.Memory* %loadMem_475a22, %struct.Memory** %MEMORY
  %loadMem_475a29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2416 = getelementptr inbounds %struct.GPR, %struct.GPR* %2415, i32 0, i32 33
  %2417 = getelementptr inbounds %struct.Reg, %struct.Reg* %2416, i32 0, i32 0
  %PC.i2734 = bitcast %union.anon* %2417 to i64*
  %2418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2419 = getelementptr inbounds %struct.GPR, %struct.GPR* %2418, i32 0, i32 1
  %2420 = getelementptr inbounds %struct.Reg, %struct.Reg* %2419, i32 0, i32 0
  %RAX.i2735 = bitcast %union.anon* %2420 to i64*
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2422 = getelementptr inbounds %struct.GPR, %struct.GPR* %2421, i32 0, i32 5
  %2423 = getelementptr inbounds %struct.Reg, %struct.Reg* %2422, i32 0, i32 0
  %RCX.i2736 = bitcast %union.anon* %2423 to i64*
  %2424 = load i64, i64* %RAX.i2735
  %2425 = load i64, i64* %RCX.i2736
  %2426 = load i64, i64* %PC.i2734
  %2427 = add i64 %2426, 3
  store i64 %2427, i64* %PC.i2734
  %2428 = add i64 %2425, %2424
  store i64 %2428, i64* %RAX.i2735, align 8
  %2429 = icmp ult i64 %2428, %2424
  %2430 = icmp ult i64 %2428, %2425
  %2431 = or i1 %2429, %2430
  %2432 = zext i1 %2431 to i8
  %2433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2432, i8* %2433, align 1
  %2434 = trunc i64 %2428 to i32
  %2435 = and i32 %2434, 255
  %2436 = call i32 @llvm.ctpop.i32(i32 %2435)
  %2437 = trunc i32 %2436 to i8
  %2438 = and i8 %2437, 1
  %2439 = xor i8 %2438, 1
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2439, i8* %2440, align 1
  %2441 = xor i64 %2425, %2424
  %2442 = xor i64 %2441, %2428
  %2443 = lshr i64 %2442, 4
  %2444 = trunc i64 %2443 to i8
  %2445 = and i8 %2444, 1
  %2446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2445, i8* %2446, align 1
  %2447 = icmp eq i64 %2428, 0
  %2448 = zext i1 %2447 to i8
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2448, i8* %2449, align 1
  %2450 = lshr i64 %2428, 63
  %2451 = trunc i64 %2450 to i8
  %2452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2451, i8* %2452, align 1
  %2453 = lshr i64 %2424, 63
  %2454 = lshr i64 %2425, 63
  %2455 = xor i64 %2450, %2453
  %2456 = xor i64 %2450, %2454
  %2457 = add i64 %2455, %2456
  %2458 = icmp eq i64 %2457, 2
  %2459 = zext i1 %2458 to i8
  %2460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2459, i8* %2460, align 1
  store %struct.Memory* %loadMem_475a29, %struct.Memory** %MEMORY
  %loadMem_475a2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2462 = getelementptr inbounds %struct.GPR, %struct.GPR* %2461, i32 0, i32 33
  %2463 = getelementptr inbounds %struct.Reg, %struct.Reg* %2462, i32 0, i32 0
  %PC.i2731 = bitcast %union.anon* %2463 to i64*
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2465 = getelementptr inbounds %struct.GPR, %struct.GPR* %2464, i32 0, i32 1
  %2466 = getelementptr inbounds %struct.Reg, %struct.Reg* %2465, i32 0, i32 0
  %RAX.i2732 = bitcast %union.anon* %2466 to i64*
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2468 = getelementptr inbounds %struct.GPR, %struct.GPR* %2467, i32 0, i32 7
  %2469 = getelementptr inbounds %struct.Reg, %struct.Reg* %2468, i32 0, i32 0
  %RDX.i2733 = bitcast %union.anon* %2469 to i64*
  %2470 = load i64, i64* %RAX.i2732
  %2471 = add i64 %2470, 12
  %2472 = load i64, i64* %PC.i2731
  %2473 = add i64 %2472, 3
  store i64 %2473, i64* %PC.i2731
  %2474 = inttoptr i64 %2471 to i32*
  %2475 = load i32, i32* %2474
  %2476 = zext i32 %2475 to i64
  store i64 %2476, i64* %RDX.i2733, align 8
  store %struct.Memory* %loadMem_475a2c, %struct.Memory** %MEMORY
  %loadMem_475a2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 33
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %PC.i2728 = bitcast %union.anon* %2479 to i64*
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2481 = getelementptr inbounds %struct.GPR, %struct.GPR* %2480, i32 0, i32 7
  %2482 = getelementptr inbounds %struct.Reg, %struct.Reg* %2481, i32 0, i32 0
  %EDX.i2729 = bitcast %union.anon* %2482 to i32*
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2484 = getelementptr inbounds %struct.GPR, %struct.GPR* %2483, i32 0, i32 15
  %2485 = getelementptr inbounds %struct.Reg, %struct.Reg* %2484, i32 0, i32 0
  %RBP.i2730 = bitcast %union.anon* %2485 to i64*
  %2486 = load i32, i32* %EDX.i2729
  %2487 = zext i32 %2486 to i64
  %2488 = load i64, i64* %RBP.i2730
  %2489 = sub i64 %2488, 48
  %2490 = load i64, i64* %PC.i2728
  %2491 = add i64 %2490, 3
  store i64 %2491, i64* %PC.i2728
  %2492 = inttoptr i64 %2489 to i32*
  %2493 = load i32, i32* %2492
  %2494 = sub i32 %2486, %2493
  %2495 = icmp ult i32 %2486, %2493
  %2496 = zext i1 %2495 to i8
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2496, i8* %2497, align 1
  %2498 = and i32 %2494, 255
  %2499 = call i32 @llvm.ctpop.i32(i32 %2498)
  %2500 = trunc i32 %2499 to i8
  %2501 = and i8 %2500, 1
  %2502 = xor i8 %2501, 1
  %2503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2502, i8* %2503, align 1
  %2504 = xor i32 %2493, %2486
  %2505 = xor i32 %2504, %2494
  %2506 = lshr i32 %2505, 4
  %2507 = trunc i32 %2506 to i8
  %2508 = and i8 %2507, 1
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2508, i8* %2509, align 1
  %2510 = icmp eq i32 %2494, 0
  %2511 = zext i1 %2510 to i8
  %2512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2511, i8* %2512, align 1
  %2513 = lshr i32 %2494, 31
  %2514 = trunc i32 %2513 to i8
  %2515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2514, i8* %2515, align 1
  %2516 = lshr i32 %2486, 31
  %2517 = lshr i32 %2493, 31
  %2518 = xor i32 %2517, %2516
  %2519 = xor i32 %2513, %2516
  %2520 = add i32 %2519, %2518
  %2521 = icmp eq i32 %2520, 2
  %2522 = zext i1 %2521 to i8
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2522, i8* %2523, align 1
  store %struct.Memory* %loadMem_475a2f, %struct.Memory** %MEMORY
  %loadMem_475a32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2525 = getelementptr inbounds %struct.GPR, %struct.GPR* %2524, i32 0, i32 33
  %2526 = getelementptr inbounds %struct.Reg, %struct.Reg* %2525, i32 0, i32 0
  %PC.i2727 = bitcast %union.anon* %2526 to i64*
  %2527 = load i64, i64* %PC.i2727
  %2528 = add i64 %2527, 49
  %2529 = load i64, i64* %PC.i2727
  %2530 = add i64 %2529, 6
  %2531 = load i64, i64* %PC.i2727
  %2532 = add i64 %2531, 6
  store i64 %2532, i64* %PC.i2727
  %2533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2534 = load i8, i8* %2533, align 1
  %2535 = icmp eq i8 %2534, 0
  %2536 = zext i1 %2535 to i8
  store i8 %2536, i8* %BRANCH_TAKEN, align 1
  %2537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2538 = select i1 %2535, i64 %2528, i64 %2530
  store i64 %2538, i64* %2537, align 8
  store %struct.Memory* %loadMem_475a32, %struct.Memory** %MEMORY
  %loadBr_475a32 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475a32 = icmp eq i8 %loadBr_475a32, 1
  br i1 %cmpBr_475a32, label %block_.L_475a63, label %block_475a38

block_475a38:                                     ; preds = %block_475a14
  %loadMem_475a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2540 = getelementptr inbounds %struct.GPR, %struct.GPR* %2539, i32 0, i32 33
  %2541 = getelementptr inbounds %struct.Reg, %struct.Reg* %2540, i32 0, i32 0
  %PC.i2724 = bitcast %union.anon* %2541 to i64*
  %2542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2543 = getelementptr inbounds %struct.GPR, %struct.GPR* %2542, i32 0, i32 11
  %2544 = getelementptr inbounds %struct.Reg, %struct.Reg* %2543, i32 0, i32 0
  %RDI.i2725 = bitcast %union.anon* %2544 to i64*
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2546 = getelementptr inbounds %struct.GPR, %struct.GPR* %2545, i32 0, i32 15
  %2547 = getelementptr inbounds %struct.Reg, %struct.Reg* %2546, i32 0, i32 0
  %RBP.i2726 = bitcast %union.anon* %2547 to i64*
  %2548 = load i64, i64* %RBP.i2726
  %2549 = sub i64 %2548, 48
  %2550 = load i64, i64* %PC.i2724
  %2551 = add i64 %2550, 3
  store i64 %2551, i64* %PC.i2724
  %2552 = inttoptr i64 %2549 to i32*
  %2553 = load i32, i32* %2552
  %2554 = zext i32 %2553 to i64
  store i64 %2554, i64* %RDI.i2725, align 8
  store %struct.Memory* %loadMem_475a38, %struct.Memory** %MEMORY
  %loadMem_475a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2556 = getelementptr inbounds %struct.GPR, %struct.GPR* %2555, i32 0, i32 33
  %2557 = getelementptr inbounds %struct.Reg, %struct.Reg* %2556, i32 0, i32 0
  %PC.i2721 = bitcast %union.anon* %2557 to i64*
  %2558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2559 = getelementptr inbounds %struct.GPR, %struct.GPR* %2558, i32 0, i32 9
  %2560 = getelementptr inbounds %struct.Reg, %struct.Reg* %2559, i32 0, i32 0
  %RSI.i2722 = bitcast %union.anon* %2560 to i64*
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2562 = getelementptr inbounds %struct.GPR, %struct.GPR* %2561, i32 0, i32 15
  %2563 = getelementptr inbounds %struct.Reg, %struct.Reg* %2562, i32 0, i32 0
  %RBP.i2723 = bitcast %union.anon* %2563 to i64*
  %2564 = load i64, i64* %RBP.i2723
  %2565 = sub i64 %2564, 1044
  %2566 = load i64, i64* %PC.i2721
  %2567 = add i64 %2566, 6
  store i64 %2567, i64* %PC.i2721
  %2568 = inttoptr i64 %2565 to i32*
  %2569 = load i32, i32* %2568
  %2570 = zext i32 %2569 to i64
  store i64 %2570, i64* %RSI.i2722, align 8
  store %struct.Memory* %loadMem_475a3b, %struct.Memory** %MEMORY
  %loadMem1_475a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2572 = getelementptr inbounds %struct.GPR, %struct.GPR* %2571, i32 0, i32 33
  %2573 = getelementptr inbounds %struct.Reg, %struct.Reg* %2572, i32 0, i32 0
  %PC.i2720 = bitcast %union.anon* %2573 to i64*
  %2574 = load i64, i64* %PC.i2720
  %2575 = add i64 %2574, -351761
  %2576 = load i64, i64* %PC.i2720
  %2577 = add i64 %2576, 5
  %2578 = load i64, i64* %PC.i2720
  %2579 = add i64 %2578, 5
  store i64 %2579, i64* %PC.i2720
  %2580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2581 = load i64, i64* %2580, align 8
  %2582 = add i64 %2581, -8
  %2583 = inttoptr i64 %2582 to i64*
  store i64 %2577, i64* %2583
  store i64 %2582, i64* %2580, align 8
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2575, i64* %2584, align 8
  store %struct.Memory* %loadMem1_475a41, %struct.Memory** %MEMORY
  %loadMem2_475a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_475a41 = load i64, i64* %3
  %call2_475a41 = call %struct.Memory* @sub_41fc30.is_same_dragon(%struct.State* %0, i64 %loadPC_475a41, %struct.Memory* %loadMem2_475a41)
  store %struct.Memory* %call2_475a41, %struct.Memory** %MEMORY
  %loadMem_475a46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2586 = getelementptr inbounds %struct.GPR, %struct.GPR* %2585, i32 0, i32 33
  %2587 = getelementptr inbounds %struct.Reg, %struct.Reg* %2586, i32 0, i32 0
  %PC.i2718 = bitcast %union.anon* %2587 to i64*
  %2588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2589 = getelementptr inbounds %struct.GPR, %struct.GPR* %2588, i32 0, i32 1
  %2590 = getelementptr inbounds %struct.Reg, %struct.Reg* %2589, i32 0, i32 0
  %EAX.i2719 = bitcast %union.anon* %2590 to i32*
  %2591 = load i32, i32* %EAX.i2719
  %2592 = zext i32 %2591 to i64
  %2593 = load i64, i64* %PC.i2718
  %2594 = add i64 %2593, 3
  store i64 %2594, i64* %PC.i2718
  %2595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2595, align 1
  %2596 = and i32 %2591, 255
  %2597 = call i32 @llvm.ctpop.i32(i32 %2596)
  %2598 = trunc i32 %2597 to i8
  %2599 = and i8 %2598, 1
  %2600 = xor i8 %2599, 1
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2600, i8* %2601, align 1
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2602, align 1
  %2603 = icmp eq i32 %2591, 0
  %2604 = zext i1 %2603 to i8
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2604, i8* %2605, align 1
  %2606 = lshr i32 %2591, 31
  %2607 = trunc i32 %2606 to i8
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2607, i8* %2608, align 1
  %2609 = lshr i32 %2591, 31
  %2610 = xor i32 %2606, %2609
  %2611 = add i32 %2610, %2609
  %2612 = icmp eq i32 %2611, 2
  %2613 = zext i1 %2612 to i8
  %2614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2613, i8* %2614, align 1
  store %struct.Memory* %loadMem_475a46, %struct.Memory** %MEMORY
  %loadMem_475a49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2616 = getelementptr inbounds %struct.GPR, %struct.GPR* %2615, i32 0, i32 33
  %2617 = getelementptr inbounds %struct.Reg, %struct.Reg* %2616, i32 0, i32 0
  %PC.i2717 = bitcast %union.anon* %2617 to i64*
  %2618 = load i64, i64* %PC.i2717
  %2619 = add i64 %2618, 26
  %2620 = load i64, i64* %PC.i2717
  %2621 = add i64 %2620, 6
  %2622 = load i64, i64* %PC.i2717
  %2623 = add i64 %2622, 6
  store i64 %2623, i64* %PC.i2717
  %2624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2625 = load i8, i8* %2624, align 1
  store i8 %2625, i8* %BRANCH_TAKEN, align 1
  %2626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2627 = icmp ne i8 %2625, 0
  %2628 = select i1 %2627, i64 %2619, i64 %2621
  store i64 %2628, i64* %2626, align 8
  store %struct.Memory* %loadMem_475a49, %struct.Memory** %MEMORY
  %loadBr_475a49 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475a49 = icmp eq i8 %loadBr_475a49, 1
  br i1 %cmpBr_475a49, label %block_.L_475a63, label %block_475a4f

block_475a4f:                                     ; preds = %block_475a38
  %loadMem_475a4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2630 = getelementptr inbounds %struct.GPR, %struct.GPR* %2629, i32 0, i32 33
  %2631 = getelementptr inbounds %struct.Reg, %struct.Reg* %2630, i32 0, i32 0
  %PC.i2715 = bitcast %union.anon* %2631 to i64*
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2633 = getelementptr inbounds %struct.GPR, %struct.GPR* %2632, i32 0, i32 7
  %2634 = getelementptr inbounds %struct.Reg, %struct.Reg* %2633, i32 0, i32 0
  %RDX.i2716 = bitcast %union.anon* %2634 to i64*
  %2635 = load i64, i64* %PC.i2715
  %2636 = add i64 %2635, 5
  store i64 %2636, i64* %PC.i2715
  store i64 1, i64* %RDX.i2716, align 8
  store %struct.Memory* %loadMem_475a4f, %struct.Memory** %MEMORY
  %loadMem_475a54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2638 = getelementptr inbounds %struct.GPR, %struct.GPR* %2637, i32 0, i32 33
  %2639 = getelementptr inbounds %struct.Reg, %struct.Reg* %2638, i32 0, i32 0
  %PC.i2712 = bitcast %union.anon* %2639 to i64*
  %2640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2641 = getelementptr inbounds %struct.GPR, %struct.GPR* %2640, i32 0, i32 9
  %2642 = getelementptr inbounds %struct.Reg, %struct.Reg* %2641, i32 0, i32 0
  %RSI.i2713 = bitcast %union.anon* %2642 to i64*
  %2643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2644 = getelementptr inbounds %struct.GPR, %struct.GPR* %2643, i32 0, i32 15
  %2645 = getelementptr inbounds %struct.Reg, %struct.Reg* %2644, i32 0, i32 0
  %RBP.i2714 = bitcast %union.anon* %2645 to i64*
  %2646 = load i64, i64* %RBP.i2714
  %2647 = sub i64 %2646, 1040
  %2648 = load i64, i64* %PC.i2712
  %2649 = add i64 %2648, 7
  store i64 %2649, i64* %PC.i2712
  store i64 %2647, i64* %RSI.i2713, align 8
  store %struct.Memory* %loadMem_475a54, %struct.Memory** %MEMORY
  %loadMem_475a5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2651 = getelementptr inbounds %struct.GPR, %struct.GPR* %2650, i32 0, i32 33
  %2652 = getelementptr inbounds %struct.Reg, %struct.Reg* %2651, i32 0, i32 0
  %PC.i2709 = bitcast %union.anon* %2652 to i64*
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2654 = getelementptr inbounds %struct.GPR, %struct.GPR* %2653, i32 0, i32 11
  %2655 = getelementptr inbounds %struct.Reg, %struct.Reg* %2654, i32 0, i32 0
  %RDI.i2710 = bitcast %union.anon* %2655 to i64*
  %2656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2657 = getelementptr inbounds %struct.GPR, %struct.GPR* %2656, i32 0, i32 15
  %2658 = getelementptr inbounds %struct.Reg, %struct.Reg* %2657, i32 0, i32 0
  %RBP.i2711 = bitcast %union.anon* %2658 to i64*
  %2659 = load i64, i64* %RBP.i2711
  %2660 = sub i64 %2659, 48
  %2661 = load i64, i64* %PC.i2709
  %2662 = add i64 %2661, 3
  store i64 %2662, i64* %PC.i2709
  %2663 = inttoptr i64 %2660 to i32*
  %2664 = load i32, i32* %2663
  %2665 = zext i32 %2664 to i64
  store i64 %2665, i64* %RDI.i2710, align 8
  store %struct.Memory* %loadMem_475a5b, %struct.Memory** %MEMORY
  %loadMem1_475a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2667 = getelementptr inbounds %struct.GPR, %struct.GPR* %2666, i32 0, i32 33
  %2668 = getelementptr inbounds %struct.Reg, %struct.Reg* %2667, i32 0, i32 0
  %PC.i2708 = bitcast %union.anon* %2668 to i64*
  %2669 = load i64, i64* %PC.i2708
  %2670 = add i64 %2669, -392622
  %2671 = load i64, i64* %PC.i2708
  %2672 = add i64 %2671, 5
  %2673 = load i64, i64* %PC.i2708
  %2674 = add i64 %2673, 5
  store i64 %2674, i64* %PC.i2708
  %2675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2676 = load i64, i64* %2675, align 8
  %2677 = add i64 %2676, -8
  %2678 = inttoptr i64 %2677 to i64*
  store i64 %2672, i64* %2678
  store i64 %2677, i64* %2675, align 8
  %2679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2670, i64* %2679, align 8
  store %struct.Memory* %loadMem1_475a5e, %struct.Memory** %MEMORY
  %loadMem2_475a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_475a5e = load i64, i64* %3
  %call2_475a5e = call %struct.Memory* @sub_415cb0.mark_string(%struct.State* %0, i64 %loadPC_475a5e, %struct.Memory* %loadMem2_475a5e)
  store %struct.Memory* %call2_475a5e, %struct.Memory** %MEMORY
  br label %block_.L_475a63

block_.L_475a63:                                  ; preds = %block_475a4f, %block_475a38, %block_475a14, %block_4759ff
  %loadMem_475a63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2681 = getelementptr inbounds %struct.GPR, %struct.GPR* %2680, i32 0, i32 33
  %2682 = getelementptr inbounds %struct.Reg, %struct.Reg* %2681, i32 0, i32 0
  %PC.i2707 = bitcast %union.anon* %2682 to i64*
  %2683 = load i64, i64* %PC.i2707
  %2684 = add i64 %2683, 5
  %2685 = load i64, i64* %PC.i2707
  %2686 = add i64 %2685, 5
  store i64 %2686, i64* %PC.i2707
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2684, i64* %2687, align 8
  store %struct.Memory* %loadMem_475a63, %struct.Memory** %MEMORY
  br label %block_.L_475a68

block_.L_475a68:                                  ; preds = %block_.L_475a63
  %loadMem_475a68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2689 = getelementptr inbounds %struct.GPR, %struct.GPR* %2688, i32 0, i32 33
  %2690 = getelementptr inbounds %struct.Reg, %struct.Reg* %2689, i32 0, i32 0
  %PC.i2704 = bitcast %union.anon* %2690 to i64*
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2692 = getelementptr inbounds %struct.GPR, %struct.GPR* %2691, i32 0, i32 1
  %2693 = getelementptr inbounds %struct.Reg, %struct.Reg* %2692, i32 0, i32 0
  %RAX.i2705 = bitcast %union.anon* %2693 to i64*
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2695 = getelementptr inbounds %struct.GPR, %struct.GPR* %2694, i32 0, i32 15
  %2696 = getelementptr inbounds %struct.Reg, %struct.Reg* %2695, i32 0, i32 0
  %RBP.i2706 = bitcast %union.anon* %2696 to i64*
  %2697 = load i64, i64* %RBP.i2706
  %2698 = sub i64 %2697, 48
  %2699 = load i64, i64* %PC.i2704
  %2700 = add i64 %2699, 3
  store i64 %2700, i64* %PC.i2704
  %2701 = inttoptr i64 %2698 to i32*
  %2702 = load i32, i32* %2701
  %2703 = zext i32 %2702 to i64
  store i64 %2703, i64* %RAX.i2705, align 8
  store %struct.Memory* %loadMem_475a68, %struct.Memory** %MEMORY
  %loadMem_475a6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2705 = getelementptr inbounds %struct.GPR, %struct.GPR* %2704, i32 0, i32 33
  %2706 = getelementptr inbounds %struct.Reg, %struct.Reg* %2705, i32 0, i32 0
  %PC.i2702 = bitcast %union.anon* %2706 to i64*
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2708 = getelementptr inbounds %struct.GPR, %struct.GPR* %2707, i32 0, i32 1
  %2709 = getelementptr inbounds %struct.Reg, %struct.Reg* %2708, i32 0, i32 0
  %RAX.i2703 = bitcast %union.anon* %2709 to i64*
  %2710 = load i64, i64* %RAX.i2703
  %2711 = load i64, i64* %PC.i2702
  %2712 = add i64 %2711, 3
  store i64 %2712, i64* %PC.i2702
  %2713 = trunc i64 %2710 to i32
  %2714 = add i32 1, %2713
  %2715 = zext i32 %2714 to i64
  store i64 %2715, i64* %RAX.i2703, align 8
  %2716 = icmp ult i32 %2714, %2713
  %2717 = icmp ult i32 %2714, 1
  %2718 = or i1 %2716, %2717
  %2719 = zext i1 %2718 to i8
  %2720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2719, i8* %2720, align 1
  %2721 = and i32 %2714, 255
  %2722 = call i32 @llvm.ctpop.i32(i32 %2721)
  %2723 = trunc i32 %2722 to i8
  %2724 = and i8 %2723, 1
  %2725 = xor i8 %2724, 1
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2725, i8* %2726, align 1
  %2727 = xor i64 1, %2710
  %2728 = trunc i64 %2727 to i32
  %2729 = xor i32 %2728, %2714
  %2730 = lshr i32 %2729, 4
  %2731 = trunc i32 %2730 to i8
  %2732 = and i8 %2731, 1
  %2733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2732, i8* %2733, align 1
  %2734 = icmp eq i32 %2714, 0
  %2735 = zext i1 %2734 to i8
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2735, i8* %2736, align 1
  %2737 = lshr i32 %2714, 31
  %2738 = trunc i32 %2737 to i8
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2738, i8* %2739, align 1
  %2740 = lshr i32 %2713, 31
  %2741 = xor i32 %2737, %2740
  %2742 = add i32 %2741, %2737
  %2743 = icmp eq i32 %2742, 2
  %2744 = zext i1 %2743 to i8
  %2745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2744, i8* %2745, align 1
  store %struct.Memory* %loadMem_475a6b, %struct.Memory** %MEMORY
  %loadMem_475a6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2747 = getelementptr inbounds %struct.GPR, %struct.GPR* %2746, i32 0, i32 33
  %2748 = getelementptr inbounds %struct.Reg, %struct.Reg* %2747, i32 0, i32 0
  %PC.i2699 = bitcast %union.anon* %2748 to i64*
  %2749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2750 = getelementptr inbounds %struct.GPR, %struct.GPR* %2749, i32 0, i32 1
  %2751 = getelementptr inbounds %struct.Reg, %struct.Reg* %2750, i32 0, i32 0
  %EAX.i2700 = bitcast %union.anon* %2751 to i32*
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2753 = getelementptr inbounds %struct.GPR, %struct.GPR* %2752, i32 0, i32 15
  %2754 = getelementptr inbounds %struct.Reg, %struct.Reg* %2753, i32 0, i32 0
  %RBP.i2701 = bitcast %union.anon* %2754 to i64*
  %2755 = load i64, i64* %RBP.i2701
  %2756 = sub i64 %2755, 48
  %2757 = load i32, i32* %EAX.i2700
  %2758 = zext i32 %2757 to i64
  %2759 = load i64, i64* %PC.i2699
  %2760 = add i64 %2759, 3
  store i64 %2760, i64* %PC.i2699
  %2761 = inttoptr i64 %2756 to i32*
  store i32 %2757, i32* %2761
  store %struct.Memory* %loadMem_475a6e, %struct.Memory** %MEMORY
  %loadMem_475a71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2763 = getelementptr inbounds %struct.GPR, %struct.GPR* %2762, i32 0, i32 33
  %2764 = getelementptr inbounds %struct.Reg, %struct.Reg* %2763, i32 0, i32 0
  %PC.i2698 = bitcast %union.anon* %2764 to i64*
  %2765 = load i64, i64* %PC.i2698
  %2766 = add i64 %2765, -127
  %2767 = load i64, i64* %PC.i2698
  %2768 = add i64 %2767, 5
  store i64 %2768, i64* %PC.i2698
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2766, i64* %2769, align 8
  store %struct.Memory* %loadMem_475a71, %struct.Memory** %MEMORY
  br label %block_.L_4759f2

block_.L_475a76:                                  ; preds = %block_.L_4759f2
  %loadMem_475a76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2771 = getelementptr inbounds %struct.GPR, %struct.GPR* %2770, i32 0, i32 33
  %2772 = getelementptr inbounds %struct.Reg, %struct.Reg* %2771, i32 0, i32 0
  %PC.i2697 = bitcast %union.anon* %2772 to i64*
  %2773 = load i64, i64* %PC.i2697
  %2774 = add i64 %2773, 5
  %2775 = load i64, i64* %PC.i2697
  %2776 = add i64 %2775, 5
  store i64 %2776, i64* %PC.i2697
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2774, i64* %2777, align 8
  store %struct.Memory* %loadMem_475a76, %struct.Memory** %MEMORY
  br label %block_.L_475a7b

block_.L_475a7b:                                  ; preds = %block_.L_475a76, %block_475976
  %loadMem_475a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2779 = getelementptr inbounds %struct.GPR, %struct.GPR* %2778, i32 0, i32 33
  %2780 = getelementptr inbounds %struct.Reg, %struct.Reg* %2779, i32 0, i32 0
  %PC.i2696 = bitcast %union.anon* %2780 to i64*
  %2781 = load i64, i64* %PC.i2696
  %2782 = add i64 %2781, 5
  %2783 = load i64, i64* %PC.i2696
  %2784 = add i64 %2783, 5
  store i64 %2784, i64* %PC.i2696
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2782, i64* %2785, align 8
  store %struct.Memory* %loadMem_475a7b, %struct.Memory** %MEMORY
  br label %block_.L_475a80

block_.L_475a80:                                  ; preds = %block_.L_475a7b
  %loadMem_475a80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2787 = getelementptr inbounds %struct.GPR, %struct.GPR* %2786, i32 0, i32 33
  %2788 = getelementptr inbounds %struct.Reg, %struct.Reg* %2787, i32 0, i32 0
  %PC.i2693 = bitcast %union.anon* %2788 to i64*
  %2789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2790 = getelementptr inbounds %struct.GPR, %struct.GPR* %2789, i32 0, i32 1
  %2791 = getelementptr inbounds %struct.Reg, %struct.Reg* %2790, i32 0, i32 0
  %RAX.i2694 = bitcast %union.anon* %2791 to i64*
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2793 = getelementptr inbounds %struct.GPR, %struct.GPR* %2792, i32 0, i32 15
  %2794 = getelementptr inbounds %struct.Reg, %struct.Reg* %2793, i32 0, i32 0
  %RBP.i2695 = bitcast %union.anon* %2794 to i64*
  %2795 = load i64, i64* %RBP.i2695
  %2796 = sub i64 %2795, 44
  %2797 = load i64, i64* %PC.i2693
  %2798 = add i64 %2797, 3
  store i64 %2798, i64* %PC.i2693
  %2799 = inttoptr i64 %2796 to i32*
  %2800 = load i32, i32* %2799
  %2801 = zext i32 %2800 to i64
  store i64 %2801, i64* %RAX.i2694, align 8
  store %struct.Memory* %loadMem_475a80, %struct.Memory** %MEMORY
  %loadMem_475a83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2803 = getelementptr inbounds %struct.GPR, %struct.GPR* %2802, i32 0, i32 33
  %2804 = getelementptr inbounds %struct.Reg, %struct.Reg* %2803, i32 0, i32 0
  %PC.i2691 = bitcast %union.anon* %2804 to i64*
  %2805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2806 = getelementptr inbounds %struct.GPR, %struct.GPR* %2805, i32 0, i32 1
  %2807 = getelementptr inbounds %struct.Reg, %struct.Reg* %2806, i32 0, i32 0
  %RAX.i2692 = bitcast %union.anon* %2807 to i64*
  %2808 = load i64, i64* %RAX.i2692
  %2809 = load i64, i64* %PC.i2691
  %2810 = add i64 %2809, 3
  store i64 %2810, i64* %PC.i2691
  %2811 = trunc i64 %2808 to i32
  %2812 = add i32 1, %2811
  %2813 = zext i32 %2812 to i64
  store i64 %2813, i64* %RAX.i2692, align 8
  %2814 = icmp ult i32 %2812, %2811
  %2815 = icmp ult i32 %2812, 1
  %2816 = or i1 %2814, %2815
  %2817 = zext i1 %2816 to i8
  %2818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2817, i8* %2818, align 1
  %2819 = and i32 %2812, 255
  %2820 = call i32 @llvm.ctpop.i32(i32 %2819)
  %2821 = trunc i32 %2820 to i8
  %2822 = and i8 %2821, 1
  %2823 = xor i8 %2822, 1
  %2824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2823, i8* %2824, align 1
  %2825 = xor i64 1, %2808
  %2826 = trunc i64 %2825 to i32
  %2827 = xor i32 %2826, %2812
  %2828 = lshr i32 %2827, 4
  %2829 = trunc i32 %2828 to i8
  %2830 = and i8 %2829, 1
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2830, i8* %2831, align 1
  %2832 = icmp eq i32 %2812, 0
  %2833 = zext i1 %2832 to i8
  %2834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2833, i8* %2834, align 1
  %2835 = lshr i32 %2812, 31
  %2836 = trunc i32 %2835 to i8
  %2837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2836, i8* %2837, align 1
  %2838 = lshr i32 %2811, 31
  %2839 = xor i32 %2835, %2838
  %2840 = add i32 %2839, %2835
  %2841 = icmp eq i32 %2840, 2
  %2842 = zext i1 %2841 to i8
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2842, i8* %2843, align 1
  store %struct.Memory* %loadMem_475a83, %struct.Memory** %MEMORY
  %loadMem_475a86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2845 = getelementptr inbounds %struct.GPR, %struct.GPR* %2844, i32 0, i32 33
  %2846 = getelementptr inbounds %struct.Reg, %struct.Reg* %2845, i32 0, i32 0
  %PC.i2688 = bitcast %union.anon* %2846 to i64*
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2848 = getelementptr inbounds %struct.GPR, %struct.GPR* %2847, i32 0, i32 1
  %2849 = getelementptr inbounds %struct.Reg, %struct.Reg* %2848, i32 0, i32 0
  %EAX.i2689 = bitcast %union.anon* %2849 to i32*
  %2850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2851 = getelementptr inbounds %struct.GPR, %struct.GPR* %2850, i32 0, i32 15
  %2852 = getelementptr inbounds %struct.Reg, %struct.Reg* %2851, i32 0, i32 0
  %RBP.i2690 = bitcast %union.anon* %2852 to i64*
  %2853 = load i64, i64* %RBP.i2690
  %2854 = sub i64 %2853, 44
  %2855 = load i32, i32* %EAX.i2689
  %2856 = zext i32 %2855 to i64
  %2857 = load i64, i64* %PC.i2688
  %2858 = add i64 %2857, 3
  store i64 %2858, i64* %PC.i2688
  %2859 = inttoptr i64 %2854 to i32*
  store i32 %2855, i32* %2859
  store %struct.Memory* %loadMem_475a86, %struct.Memory** %MEMORY
  %loadMem_475a89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2861 = getelementptr inbounds %struct.GPR, %struct.GPR* %2860, i32 0, i32 33
  %2862 = getelementptr inbounds %struct.Reg, %struct.Reg* %2861, i32 0, i32 0
  %PC.i2687 = bitcast %union.anon* %2862 to i64*
  %2863 = load i64, i64* %PC.i2687
  %2864 = add i64 %2863, -327
  %2865 = load i64, i64* %PC.i2687
  %2866 = add i64 %2865, 5
  store i64 %2866, i64* %PC.i2687
  %2867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2864, i64* %2867, align 8
  store %struct.Memory* %loadMem_475a89, %struct.Memory** %MEMORY
  br label %block_.L_475942

block_.L_475a8e:                                  ; preds = %block_.L_475942
  %loadMem_475a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2869 = getelementptr inbounds %struct.GPR, %struct.GPR* %2868, i32 0, i32 33
  %2870 = getelementptr inbounds %struct.Reg, %struct.Reg* %2869, i32 0, i32 0
  %PC.i2685 = bitcast %union.anon* %2870 to i64*
  %2871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2872 = getelementptr inbounds %struct.GPR, %struct.GPR* %2871, i32 0, i32 15
  %2873 = getelementptr inbounds %struct.Reg, %struct.Reg* %2872, i32 0, i32 0
  %RBP.i2686 = bitcast %union.anon* %2873 to i64*
  %2874 = load i64, i64* %RBP.i2686
  %2875 = sub i64 %2874, 12
  %2876 = load i64, i64* %PC.i2685
  %2877 = add i64 %2876, 4
  store i64 %2877, i64* %PC.i2685
  %2878 = inttoptr i64 %2875 to i32*
  %2879 = load i32, i32* %2878
  %2880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2880, align 1
  %2881 = and i32 %2879, 255
  %2882 = call i32 @llvm.ctpop.i32(i32 %2881)
  %2883 = trunc i32 %2882 to i8
  %2884 = and i8 %2883, 1
  %2885 = xor i8 %2884, 1
  %2886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2885, i8* %2886, align 1
  %2887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2887, align 1
  %2888 = icmp eq i32 %2879, 0
  %2889 = zext i1 %2888 to i8
  %2890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2889, i8* %2890, align 1
  %2891 = lshr i32 %2879, 31
  %2892 = trunc i32 %2891 to i8
  %2893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2892, i8* %2893, align 1
  %2894 = lshr i32 %2879, 31
  %2895 = xor i32 %2891, %2894
  %2896 = add i32 %2895, %2894
  %2897 = icmp eq i32 %2896, 2
  %2898 = zext i1 %2897 to i8
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2898, i8* %2899, align 1
  store %struct.Memory* %loadMem_475a8e, %struct.Memory** %MEMORY
  %loadMem_475a92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2901 = getelementptr inbounds %struct.GPR, %struct.GPR* %2900, i32 0, i32 33
  %2902 = getelementptr inbounds %struct.Reg, %struct.Reg* %2901, i32 0, i32 0
  %PC.i2684 = bitcast %union.anon* %2902 to i64*
  %2903 = load i64, i64* %PC.i2684
  %2904 = add i64 %2903, 84
  %2905 = load i64, i64* %PC.i2684
  %2906 = add i64 %2905, 6
  %2907 = load i64, i64* %PC.i2684
  %2908 = add i64 %2907, 6
  store i64 %2908, i64* %PC.i2684
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2910 = load i8, i8* %2909, align 1
  store i8 %2910, i8* %BRANCH_TAKEN, align 1
  %2911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2912 = icmp ne i8 %2910, 0
  %2913 = select i1 %2912, i64 %2904, i64 %2906
  store i64 %2913, i64* %2911, align 8
  store %struct.Memory* %loadMem_475a92, %struct.Memory** %MEMORY
  %loadBr_475a92 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475a92 = icmp eq i8 %loadBr_475a92, 1
  br i1 %cmpBr_475a92, label %block_.L_475ae6, label %block_475a98

block_475a98:                                     ; preds = %block_.L_475a8e
  %loadMem_475a98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2915 = getelementptr inbounds %struct.GPR, %struct.GPR* %2914, i32 0, i32 33
  %2916 = getelementptr inbounds %struct.Reg, %struct.Reg* %2915, i32 0, i32 0
  %PC.i2681 = bitcast %union.anon* %2916 to i64*
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2918 = getelementptr inbounds %struct.GPR, %struct.GPR* %2917, i32 0, i32 1
  %2919 = getelementptr inbounds %struct.Reg, %struct.Reg* %2918, i32 0, i32 0
  %RAX.i2682 = bitcast %union.anon* %2919 to i64*
  %2920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2921 = getelementptr inbounds %struct.GPR, %struct.GPR* %2920, i32 0, i32 15
  %2922 = getelementptr inbounds %struct.Reg, %struct.Reg* %2921, i32 0, i32 0
  %RBP.i2683 = bitcast %union.anon* %2922 to i64*
  %2923 = load i64, i64* %RBP.i2683
  %2924 = sub i64 %2923, 12
  %2925 = load i64, i64* %PC.i2681
  %2926 = add i64 %2925, 4
  store i64 %2926, i64* %PC.i2681
  %2927 = inttoptr i64 %2924 to i32*
  %2928 = load i32, i32* %2927
  %2929 = sext i32 %2928 to i64
  store i64 %2929, i64* %RAX.i2682, align 8
  store %struct.Memory* %loadMem_475a98, %struct.Memory** %MEMORY
  %loadMem_475a9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2931 = getelementptr inbounds %struct.GPR, %struct.GPR* %2930, i32 0, i32 33
  %2932 = getelementptr inbounds %struct.Reg, %struct.Reg* %2931, i32 0, i32 0
  %PC.i2678 = bitcast %union.anon* %2932 to i64*
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2934 = getelementptr inbounds %struct.GPR, %struct.GPR* %2933, i32 0, i32 1
  %2935 = getelementptr inbounds %struct.Reg, %struct.Reg* %2934, i32 0, i32 0
  %RAX.i2679 = bitcast %union.anon* %2935 to i64*
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2937 = getelementptr inbounds %struct.GPR, %struct.GPR* %2936, i32 0, i32 5
  %2938 = getelementptr inbounds %struct.Reg, %struct.Reg* %2937, i32 0, i32 0
  %RCX.i2680 = bitcast %union.anon* %2938 to i64*
  %2939 = load i64, i64* %RAX.i2679
  %2940 = add i64 %2939, 12099168
  %2941 = load i64, i64* %PC.i2678
  %2942 = add i64 %2941, 8
  store i64 %2942, i64* %PC.i2678
  %2943 = inttoptr i64 %2940 to i8*
  %2944 = load i8, i8* %2943
  %2945 = zext i8 %2944 to i64
  store i64 %2945, i64* %RCX.i2680, align 8
  store %struct.Memory* %loadMem_475a9c, %struct.Memory** %MEMORY
  %loadMem_475aa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2947 = getelementptr inbounds %struct.GPR, %struct.GPR* %2946, i32 0, i32 33
  %2948 = getelementptr inbounds %struct.Reg, %struct.Reg* %2947, i32 0, i32 0
  %PC.i2676 = bitcast %union.anon* %2948 to i64*
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2950 = getelementptr inbounds %struct.GPR, %struct.GPR* %2949, i32 0, i32 5
  %2951 = getelementptr inbounds %struct.Reg, %struct.Reg* %2950, i32 0, i32 0
  %ECX.i2677 = bitcast %union.anon* %2951 to i32*
  %2952 = load i32, i32* %ECX.i2677
  %2953 = zext i32 %2952 to i64
  %2954 = load i64, i64* %PC.i2676
  %2955 = add i64 %2954, 3
  store i64 %2955, i64* %PC.i2676
  %2956 = sub i32 %2952, 3
  %2957 = icmp ult i32 %2952, 3
  %2958 = zext i1 %2957 to i8
  %2959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2958, i8* %2959, align 1
  %2960 = and i32 %2956, 255
  %2961 = call i32 @llvm.ctpop.i32(i32 %2960)
  %2962 = trunc i32 %2961 to i8
  %2963 = and i8 %2962, 1
  %2964 = xor i8 %2963, 1
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2964, i8* %2965, align 1
  %2966 = xor i64 3, %2953
  %2967 = trunc i64 %2966 to i32
  %2968 = xor i32 %2967, %2956
  %2969 = lshr i32 %2968, 4
  %2970 = trunc i32 %2969 to i8
  %2971 = and i8 %2970, 1
  %2972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2971, i8* %2972, align 1
  %2973 = icmp eq i32 %2956, 0
  %2974 = zext i1 %2973 to i8
  %2975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2974, i8* %2975, align 1
  %2976 = lshr i32 %2956, 31
  %2977 = trunc i32 %2976 to i8
  %2978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2977, i8* %2978, align 1
  %2979 = lshr i32 %2952, 31
  %2980 = xor i32 %2976, %2979
  %2981 = add i32 %2980, %2979
  %2982 = icmp eq i32 %2981, 2
  %2983 = zext i1 %2982 to i8
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2983, i8* %2984, align 1
  store %struct.Memory* %loadMem_475aa4, %struct.Memory** %MEMORY
  %loadMem_475aa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2986 = getelementptr inbounds %struct.GPR, %struct.GPR* %2985, i32 0, i32 33
  %2987 = getelementptr inbounds %struct.Reg, %struct.Reg* %2986, i32 0, i32 0
  %PC.i2675 = bitcast %union.anon* %2987 to i64*
  %2988 = load i64, i64* %PC.i2675
  %2989 = add i64 %2988, 11
  %2990 = load i64, i64* %PC.i2675
  %2991 = add i64 %2990, 6
  %2992 = load i64, i64* %PC.i2675
  %2993 = add i64 %2992, 6
  store i64 %2993, i64* %PC.i2675
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2995 = load i8, i8* %2994, align 1
  store i8 %2995, i8* %BRANCH_TAKEN, align 1
  %2996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2997 = icmp ne i8 %2995, 0
  %2998 = select i1 %2997, i64 %2989, i64 %2991
  store i64 %2998, i64* %2996, align 8
  store %struct.Memory* %loadMem_475aa7, %struct.Memory** %MEMORY
  %loadBr_475aa7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475aa7 = icmp eq i8 %loadBr_475aa7, 1
  br i1 %cmpBr_475aa7, label %block_.L_475ab2, label %block_475aad

block_475aad:                                     ; preds = %block_475a98
  %loadMem_475aad = load %struct.Memory*, %struct.Memory** %MEMORY
  %2999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3000 = getelementptr inbounds %struct.GPR, %struct.GPR* %2999, i32 0, i32 33
  %3001 = getelementptr inbounds %struct.Reg, %struct.Reg* %3000, i32 0, i32 0
  %PC.i2674 = bitcast %union.anon* %3001 to i64*
  %3002 = load i64, i64* %PC.i2674
  %3003 = add i64 %3002, 45
  %3004 = load i64, i64* %PC.i2674
  %3005 = add i64 %3004, 5
  store i64 %3005, i64* %PC.i2674
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3003, i64* %3006, align 8
  store %struct.Memory* %loadMem_475aad, %struct.Memory** %MEMORY
  br label %block_.L_475ada

block_.L_475ab2:                                  ; preds = %block_475a98
  %loadMem_475ab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3008 = getelementptr inbounds %struct.GPR, %struct.GPR* %3007, i32 0, i32 33
  %3009 = getelementptr inbounds %struct.Reg, %struct.Reg* %3008, i32 0, i32 0
  %PC.i2672 = bitcast %union.anon* %3009 to i64*
  %3010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3011 = getelementptr inbounds %struct.GPR, %struct.GPR* %3010, i32 0, i32 11
  %3012 = getelementptr inbounds %struct.Reg, %struct.Reg* %3011, i32 0, i32 0
  %RDI.i2673 = bitcast %union.anon* %3012 to i64*
  %3013 = load i64, i64* %PC.i2672
  %3014 = add i64 %3013, 10
  store i64 %3014, i64* %PC.i2672
  store i64 ptrtoint (%G__0x58192c_type* @G__0x58192c to i64), i64* %RDI.i2673, align 8
  store %struct.Memory* %loadMem_475ab2, %struct.Memory** %MEMORY
  %loadMem_475abc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3016 = getelementptr inbounds %struct.GPR, %struct.GPR* %3015, i32 0, i32 33
  %3017 = getelementptr inbounds %struct.Reg, %struct.Reg* %3016, i32 0, i32 0
  %PC.i2670 = bitcast %union.anon* %3017 to i64*
  %3018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3019 = getelementptr inbounds %struct.GPR, %struct.GPR* %3018, i32 0, i32 9
  %3020 = getelementptr inbounds %struct.Reg, %struct.Reg* %3019, i32 0, i32 0
  %RSI.i2671 = bitcast %union.anon* %3020 to i64*
  %3021 = load i64, i64* %PC.i2670
  %3022 = add i64 %3021, 5
  store i64 %3022, i64* %PC.i2670
  store i64 124, i64* %RSI.i2671, align 8
  store %struct.Memory* %loadMem_475abc, %struct.Memory** %MEMORY
  %loadMem_475ac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3024 = getelementptr inbounds %struct.GPR, %struct.GPR* %3023, i32 0, i32 33
  %3025 = getelementptr inbounds %struct.Reg, %struct.Reg* %3024, i32 0, i32 0
  %PC.i2668 = bitcast %union.anon* %3025 to i64*
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3027 = getelementptr inbounds %struct.GPR, %struct.GPR* %3026, i32 0, i32 7
  %3028 = getelementptr inbounds %struct.Reg, %struct.Reg* %3027, i32 0, i32 0
  %RDX.i2669 = bitcast %union.anon* %3028 to i64*
  %3029 = load i64, i64* %PC.i2668
  %3030 = add i64 %3029, 10
  store i64 %3030, i64* %PC.i2668
  store i64 ptrtoint (%G__0x5819e3_type* @G__0x5819e3 to i64), i64* %RDX.i2669, align 8
  store %struct.Memory* %loadMem_475ac1, %struct.Memory** %MEMORY
  %loadMem_475acb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3032 = getelementptr inbounds %struct.GPR, %struct.GPR* %3031, i32 0, i32 33
  %3033 = getelementptr inbounds %struct.Reg, %struct.Reg* %3032, i32 0, i32 0
  %PC.i2666 = bitcast %union.anon* %3033 to i64*
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3035 = getelementptr inbounds %struct.GPR, %struct.GPR* %3034, i32 0, i32 1
  %3036 = getelementptr inbounds %struct.Reg, %struct.Reg* %3035, i32 0, i32 0
  %RAX.i2667 = bitcast %union.anon* %3036 to i64*
  %3037 = load i64, i64* %PC.i2666
  %3038 = add i64 %3037, 5
  store i64 %3038, i64* %PC.i2666
  store i64 4294967295, i64* %RAX.i2667, align 8
  store %struct.Memory* %loadMem_475acb, %struct.Memory** %MEMORY
  %loadMem_475ad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3040 = getelementptr inbounds %struct.GPR, %struct.GPR* %3039, i32 0, i32 33
  %3041 = getelementptr inbounds %struct.Reg, %struct.Reg* %3040, i32 0, i32 0
  %PC.i2663 = bitcast %union.anon* %3041 to i64*
  %3042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3043 = getelementptr inbounds %struct.GPR, %struct.GPR* %3042, i32 0, i32 1
  %3044 = getelementptr inbounds %struct.Reg, %struct.Reg* %3043, i32 0, i32 0
  %EAX.i2664 = bitcast %union.anon* %3044 to i32*
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3046 = getelementptr inbounds %struct.GPR, %struct.GPR* %3045, i32 0, i32 5
  %3047 = getelementptr inbounds %struct.Reg, %struct.Reg* %3046, i32 0, i32 0
  %RCX.i2665 = bitcast %union.anon* %3047 to i64*
  %3048 = load i32, i32* %EAX.i2664
  %3049 = zext i32 %3048 to i64
  %3050 = load i64, i64* %PC.i2663
  %3051 = add i64 %3050, 2
  store i64 %3051, i64* %PC.i2663
  %3052 = and i64 %3049, 4294967295
  store i64 %3052, i64* %RCX.i2665, align 8
  store %struct.Memory* %loadMem_475ad0, %struct.Memory** %MEMORY
  %loadMem_475ad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3054 = getelementptr inbounds %struct.GPR, %struct.GPR* %3053, i32 0, i32 33
  %3055 = getelementptr inbounds %struct.Reg, %struct.Reg* %3054, i32 0, i32 0
  %PC.i2660 = bitcast %union.anon* %3055 to i64*
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3057 = getelementptr inbounds %struct.GPR, %struct.GPR* %3056, i32 0, i32 1
  %3058 = getelementptr inbounds %struct.Reg, %struct.Reg* %3057, i32 0, i32 0
  %EAX.i2661 = bitcast %union.anon* %3058 to i32*
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3060 = getelementptr inbounds %struct.GPR, %struct.GPR* %3059, i32 0, i32 17
  %3061 = getelementptr inbounds %struct.Reg, %struct.Reg* %3060, i32 0, i32 0
  %R8D.i2662 = bitcast %union.anon* %3061 to i32*
  %3062 = bitcast i32* %R8D.i2662 to i64*
  %3063 = load i32, i32* %EAX.i2661
  %3064 = zext i32 %3063 to i64
  %3065 = load i64, i64* %PC.i2660
  %3066 = add i64 %3065, 3
  store i64 %3066, i64* %PC.i2660
  %3067 = and i64 %3064, 4294967295
  store i64 %3067, i64* %3062, align 8
  store %struct.Memory* %loadMem_475ad2, %struct.Memory** %MEMORY
  %loadMem1_475ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3069 = getelementptr inbounds %struct.GPR, %struct.GPR* %3068, i32 0, i32 33
  %3070 = getelementptr inbounds %struct.Reg, %struct.Reg* %3069, i32 0, i32 0
  %PC.i2659 = bitcast %union.anon* %3070 to i64*
  %3071 = load i64, i64* %PC.i2659
  %3072 = add i64 %3071, -145989
  %3073 = load i64, i64* %PC.i2659
  %3074 = add i64 %3073, 5
  %3075 = load i64, i64* %PC.i2659
  %3076 = add i64 %3075, 5
  store i64 %3076, i64* %PC.i2659
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3078 = load i64, i64* %3077, align 8
  %3079 = add i64 %3078, -8
  %3080 = inttoptr i64 %3079 to i64*
  store i64 %3074, i64* %3080
  store i64 %3079, i64* %3077, align 8
  %3081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3072, i64* %3081, align 8
  store %struct.Memory* %loadMem1_475ad5, %struct.Memory** %MEMORY
  %loadMem2_475ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_475ad5 = load i64, i64* %3
  %call2_475ad5 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_475ad5, %struct.Memory* %loadMem2_475ad5)
  store %struct.Memory* %call2_475ad5, %struct.Memory** %MEMORY
  br label %block_.L_475ada

block_.L_475ada:                                  ; preds = %block_.L_475ab2, %block_475aad
  %loadMem_475ada = load %struct.Memory*, %struct.Memory** %MEMORY
  %3082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3083 = getelementptr inbounds %struct.GPR, %struct.GPR* %3082, i32 0, i32 33
  %3084 = getelementptr inbounds %struct.Reg, %struct.Reg* %3083, i32 0, i32 0
  %PC.i2656 = bitcast %union.anon* %3084 to i64*
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3086 = getelementptr inbounds %struct.GPR, %struct.GPR* %3085, i32 0, i32 1
  %3087 = getelementptr inbounds %struct.Reg, %struct.Reg* %3086, i32 0, i32 0
  %RAX.i2657 = bitcast %union.anon* %3087 to i64*
  %3088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3089 = getelementptr inbounds %struct.GPR, %struct.GPR* %3088, i32 0, i32 15
  %3090 = getelementptr inbounds %struct.Reg, %struct.Reg* %3089, i32 0, i32 0
  %RBP.i2658 = bitcast %union.anon* %3090 to i64*
  %3091 = load i64, i64* %RBP.i2658
  %3092 = sub i64 %3091, 12
  %3093 = load i64, i64* %PC.i2656
  %3094 = add i64 %3093, 4
  store i64 %3094, i64* %PC.i2656
  %3095 = inttoptr i64 %3092 to i32*
  %3096 = load i32, i32* %3095
  %3097 = sext i32 %3096 to i64
  store i64 %3097, i64* %RAX.i2657, align 8
  store %struct.Memory* %loadMem_475ada, %struct.Memory** %MEMORY
  %loadMem_475ade = load %struct.Memory*, %struct.Memory** %MEMORY
  %3098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3099 = getelementptr inbounds %struct.GPR, %struct.GPR* %3098, i32 0, i32 33
  %3100 = getelementptr inbounds %struct.Reg, %struct.Reg* %3099, i32 0, i32 0
  %PC.i2653 = bitcast %union.anon* %3100 to i64*
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3102 = getelementptr inbounds %struct.GPR, %struct.GPR* %3101, i32 0, i32 1
  %3103 = getelementptr inbounds %struct.Reg, %struct.Reg* %3102, i32 0, i32 0
  %RAX.i2654 = bitcast %union.anon* %3103 to i64*
  %3104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3105 = getelementptr inbounds %struct.GPR, %struct.GPR* %3104, i32 0, i32 15
  %3106 = getelementptr inbounds %struct.Reg, %struct.Reg* %3105, i32 0, i32 0
  %RBP.i2655 = bitcast %union.anon* %3106 to i64*
  %3107 = load i64, i64* %RBP.i2655
  %3108 = load i64, i64* %RAX.i2654
  %3109 = add i64 %3107, -1040
  %3110 = add i64 %3109, %3108
  %3111 = load i64, i64* %PC.i2653
  %3112 = add i64 %3111, 8
  store i64 %3112, i64* %PC.i2653
  %3113 = inttoptr i64 %3110 to i8*
  store i8 1, i8* %3113
  store %struct.Memory* %loadMem_475ade, %struct.Memory** %MEMORY
  br label %block_.L_475ae6

block_.L_475ae6:                                  ; preds = %block_.L_475ada, %block_.L_475a8e
  %loadMem_475ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3115 = getelementptr inbounds %struct.GPR, %struct.GPR* %3114, i32 0, i32 33
  %3116 = getelementptr inbounds %struct.Reg, %struct.Reg* %3115, i32 0, i32 0
  %PC.i2651 = bitcast %union.anon* %3116 to i64*
  %3117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3118 = getelementptr inbounds %struct.GPR, %struct.GPR* %3117, i32 0, i32 15
  %3119 = getelementptr inbounds %struct.Reg, %struct.Reg* %3118, i32 0, i32 0
  %RBP.i2652 = bitcast %union.anon* %3119 to i64*
  %3120 = load i64, i64* %RBP.i2652
  %3121 = sub i64 %3120, 220
  %3122 = load i64, i64* %PC.i2651
  %3123 = add i64 %3122, 10
  store i64 %3123, i64* %PC.i2651
  %3124 = inttoptr i64 %3121 to i32*
  store i32 -1, i32* %3124
  store %struct.Memory* %loadMem_475ae6, %struct.Memory** %MEMORY
  %loadMem_475af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3126 = getelementptr inbounds %struct.GPR, %struct.GPR* %3125, i32 0, i32 33
  %3127 = getelementptr inbounds %struct.Reg, %struct.Reg* %3126, i32 0, i32 0
  %PC.i2649 = bitcast %union.anon* %3127 to i64*
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3129 = getelementptr inbounds %struct.GPR, %struct.GPR* %3128, i32 0, i32 15
  %3130 = getelementptr inbounds %struct.Reg, %struct.Reg* %3129, i32 0, i32 0
  %RBP.i2650 = bitcast %union.anon* %3130 to i64*
  %3131 = load i64, i64* %RBP.i2650
  %3132 = sub i64 %3131, 36
  %3133 = load i64, i64* %PC.i2649
  %3134 = add i64 %3133, 7
  store i64 %3134, i64* %PC.i2649
  %3135 = inttoptr i64 %3132 to i32*
  store i32 0, i32* %3135
  store %struct.Memory* %loadMem_475af0, %struct.Memory** %MEMORY
  br label %block_.L_475af7

block_.L_475af7:                                  ; preds = %block_.L_475b7e, %block_.L_475ae6
  %loadMem_475af7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3137 = getelementptr inbounds %struct.GPR, %struct.GPR* %3136, i32 0, i32 33
  %3138 = getelementptr inbounds %struct.Reg, %struct.Reg* %3137, i32 0, i32 0
  %PC.i2646 = bitcast %union.anon* %3138 to i64*
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3140 = getelementptr inbounds %struct.GPR, %struct.GPR* %3139, i32 0, i32 1
  %3141 = getelementptr inbounds %struct.Reg, %struct.Reg* %3140, i32 0, i32 0
  %RAX.i2647 = bitcast %union.anon* %3141 to i64*
  %3142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3143 = getelementptr inbounds %struct.GPR, %struct.GPR* %3142, i32 0, i32 15
  %3144 = getelementptr inbounds %struct.Reg, %struct.Reg* %3143, i32 0, i32 0
  %RBP.i2648 = bitcast %union.anon* %3144 to i64*
  %3145 = load i64, i64* %RBP.i2648
  %3146 = sub i64 %3145, 36
  %3147 = load i64, i64* %PC.i2646
  %3148 = add i64 %3147, 3
  store i64 %3148, i64* %PC.i2646
  %3149 = inttoptr i64 %3146 to i32*
  %3150 = load i32, i32* %3149
  %3151 = zext i32 %3150 to i64
  store i64 %3151, i64* %RAX.i2647, align 8
  store %struct.Memory* %loadMem_475af7, %struct.Memory** %MEMORY
  %loadMem_475afa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3153 = getelementptr inbounds %struct.GPR, %struct.GPR* %3152, i32 0, i32 33
  %3154 = getelementptr inbounds %struct.Reg, %struct.Reg* %3153, i32 0, i32 0
  %PC.i2644 = bitcast %union.anon* %3154 to i64*
  %3155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3156 = getelementptr inbounds %struct.GPR, %struct.GPR* %3155, i32 0, i32 1
  %3157 = getelementptr inbounds %struct.Reg, %struct.Reg* %3156, i32 0, i32 0
  %EAX.i2645 = bitcast %union.anon* %3157 to i32*
  %3158 = load i32, i32* %EAX.i2645
  %3159 = zext i32 %3158 to i64
  %3160 = load i64, i64* %PC.i2644
  %3161 = add i64 %3160, 7
  store i64 %3161, i64* %PC.i2644
  %3162 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %3163 = sub i32 %3158, %3162
  %3164 = icmp ult i32 %3158, %3162
  %3165 = zext i1 %3164 to i8
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3165, i8* %3166, align 1
  %3167 = and i32 %3163, 255
  %3168 = call i32 @llvm.ctpop.i32(i32 %3167)
  %3169 = trunc i32 %3168 to i8
  %3170 = and i8 %3169, 1
  %3171 = xor i8 %3170, 1
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3171, i8* %3172, align 1
  %3173 = xor i32 %3162, %3158
  %3174 = xor i32 %3173, %3163
  %3175 = lshr i32 %3174, 4
  %3176 = trunc i32 %3175 to i8
  %3177 = and i8 %3176, 1
  %3178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3177, i8* %3178, align 1
  %3179 = icmp eq i32 %3163, 0
  %3180 = zext i1 %3179 to i8
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3180, i8* %3181, align 1
  %3182 = lshr i32 %3163, 31
  %3183 = trunc i32 %3182 to i8
  %3184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3183, i8* %3184, align 1
  %3185 = lshr i32 %3158, 31
  %3186 = lshr i32 %3162, 31
  %3187 = xor i32 %3186, %3185
  %3188 = xor i32 %3182, %3185
  %3189 = add i32 %3188, %3187
  %3190 = icmp eq i32 %3189, 2
  %3191 = zext i1 %3190 to i8
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3191, i8* %3192, align 1
  store %struct.Memory* %loadMem_475afa, %struct.Memory** %MEMORY
  %loadMem_475b01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3194 = getelementptr inbounds %struct.GPR, %struct.GPR* %3193, i32 0, i32 33
  %3195 = getelementptr inbounds %struct.Reg, %struct.Reg* %3194, i32 0, i32 0
  %PC.i2643 = bitcast %union.anon* %3195 to i64*
  %3196 = load i64, i64* %PC.i2643
  %3197 = add i64 %3196, 139
  %3198 = load i64, i64* %PC.i2643
  %3199 = add i64 %3198, 6
  %3200 = load i64, i64* %PC.i2643
  %3201 = add i64 %3200, 6
  store i64 %3201, i64* %PC.i2643
  %3202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3203 = load i8, i8* %3202, align 1
  %3204 = icmp ne i8 %3203, 0
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3206 = load i8, i8* %3205, align 1
  %3207 = icmp ne i8 %3206, 0
  %3208 = xor i1 %3204, %3207
  %3209 = xor i1 %3208, true
  %3210 = zext i1 %3209 to i8
  store i8 %3210, i8* %BRANCH_TAKEN, align 1
  %3211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3212 = select i1 %3208, i64 %3199, i64 %3197
  store i64 %3212, i64* %3211, align 8
  store %struct.Memory* %loadMem_475b01, %struct.Memory** %MEMORY
  %loadBr_475b01 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475b01 = icmp eq i8 %loadBr_475b01, 1
  br i1 %cmpBr_475b01, label %block_.L_475b8c, label %block_475b07

block_475b07:                                     ; preds = %block_.L_475af7
  %loadMem_475b07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3214 = getelementptr inbounds %struct.GPR, %struct.GPR* %3213, i32 0, i32 33
  %3215 = getelementptr inbounds %struct.Reg, %struct.Reg* %3214, i32 0, i32 0
  %PC.i2641 = bitcast %union.anon* %3215 to i64*
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3217 = getelementptr inbounds %struct.GPR, %struct.GPR* %3216, i32 0, i32 15
  %3218 = getelementptr inbounds %struct.Reg, %struct.Reg* %3217, i32 0, i32 0
  %RBP.i2642 = bitcast %union.anon* %3218 to i64*
  %3219 = load i64, i64* %RBP.i2642
  %3220 = sub i64 %3219, 220
  %3221 = load i64, i64* %PC.i2641
  %3222 = add i64 %3221, 7
  store i64 %3222, i64* %PC.i2641
  %3223 = inttoptr i64 %3220 to i32*
  %3224 = load i32, i32* %3223
  %3225 = sub i32 %3224, -1
  %3226 = icmp ult i32 %3224, -1
  %3227 = zext i1 %3226 to i8
  %3228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3227, i8* %3228, align 1
  %3229 = and i32 %3225, 255
  %3230 = call i32 @llvm.ctpop.i32(i32 %3229)
  %3231 = trunc i32 %3230 to i8
  %3232 = and i8 %3231, 1
  %3233 = xor i8 %3232, 1
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3233, i8* %3234, align 1
  %3235 = xor i32 %3224, -1
  %3236 = xor i32 %3235, %3225
  %3237 = lshr i32 %3236, 4
  %3238 = trunc i32 %3237 to i8
  %3239 = and i8 %3238, 1
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3239, i8* %3240, align 1
  %3241 = icmp eq i32 %3225, 0
  %3242 = zext i1 %3241 to i8
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3242, i8* %3243, align 1
  %3244 = lshr i32 %3225, 31
  %3245 = trunc i32 %3244 to i8
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3245, i8* %3246, align 1
  %3247 = lshr i32 %3224, 31
  %3248 = xor i32 %3247, 1
  %3249 = xor i32 %3244, %3247
  %3250 = add i32 %3249, %3248
  %3251 = icmp eq i32 %3250, 2
  %3252 = zext i1 %3251 to i8
  %3253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3252, i8* %3253, align 1
  store %struct.Memory* %loadMem_475b07, %struct.Memory** %MEMORY
  %loadMem_475b0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3255 = getelementptr inbounds %struct.GPR, %struct.GPR* %3254, i32 0, i32 33
  %3256 = getelementptr inbounds %struct.Reg, %struct.Reg* %3255, i32 0, i32 0
  %PC.i2640 = bitcast %union.anon* %3256 to i64*
  %3257 = load i64, i64* %PC.i2640
  %3258 = add i64 %3257, 11
  %3259 = load i64, i64* %PC.i2640
  %3260 = add i64 %3259, 6
  %3261 = load i64, i64* %PC.i2640
  %3262 = add i64 %3261, 6
  store i64 %3262, i64* %PC.i2640
  %3263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3264 = load i8, i8* %3263, align 1
  store i8 %3264, i8* %BRANCH_TAKEN, align 1
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3266 = icmp ne i8 %3264, 0
  %3267 = select i1 %3266, i64 %3258, i64 %3260
  store i64 %3267, i64* %3265, align 8
  store %struct.Memory* %loadMem_475b0e, %struct.Memory** %MEMORY
  %loadBr_475b0e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475b0e = icmp eq i8 %loadBr_475b0e, 1
  br i1 %cmpBr_475b0e, label %block_.L_475b19, label %block_475b14

block_475b14:                                     ; preds = %block_475b07
  %loadMem_475b14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3269 = getelementptr inbounds %struct.GPR, %struct.GPR* %3268, i32 0, i32 33
  %3270 = getelementptr inbounds %struct.Reg, %struct.Reg* %3269, i32 0, i32 0
  %PC.i2639 = bitcast %union.anon* %3270 to i64*
  %3271 = load i64, i64* %PC.i2639
  %3272 = add i64 %3271, 120
  %3273 = load i64, i64* %PC.i2639
  %3274 = add i64 %3273, 5
  store i64 %3274, i64* %PC.i2639
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3272, i64* %3275, align 8
  store %struct.Memory* %loadMem_475b14, %struct.Memory** %MEMORY
  br label %block_.L_475b8c

block_.L_475b19:                                  ; preds = %block_475b07
  %loadMem_475b19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3277 = getelementptr inbounds %struct.GPR, %struct.GPR* %3276, i32 0, i32 33
  %3278 = getelementptr inbounds %struct.Reg, %struct.Reg* %3277, i32 0, i32 0
  %PC.i2637 = bitcast %union.anon* %3278 to i64*
  %3279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3280 = getelementptr inbounds %struct.GPR, %struct.GPR* %3279, i32 0, i32 15
  %3281 = getelementptr inbounds %struct.Reg, %struct.Reg* %3280, i32 0, i32 0
  %RBP.i2638 = bitcast %union.anon* %3281 to i64*
  %3282 = load i64, i64* %RBP.i2638
  %3283 = sub i64 %3282, 40
  %3284 = load i64, i64* %PC.i2637
  %3285 = add i64 %3284, 7
  store i64 %3285, i64* %PC.i2637
  %3286 = inttoptr i64 %3283 to i32*
  store i32 0, i32* %3286
  store %struct.Memory* %loadMem_475b19, %struct.Memory** %MEMORY
  br label %block_.L_475b20

block_.L_475b20:                                  ; preds = %block_.L_475b6b, %block_.L_475b19
  %loadMem_475b20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3288 = getelementptr inbounds %struct.GPR, %struct.GPR* %3287, i32 0, i32 33
  %3289 = getelementptr inbounds %struct.Reg, %struct.Reg* %3288, i32 0, i32 0
  %PC.i2634 = bitcast %union.anon* %3289 to i64*
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3291 = getelementptr inbounds %struct.GPR, %struct.GPR* %3290, i32 0, i32 1
  %3292 = getelementptr inbounds %struct.Reg, %struct.Reg* %3291, i32 0, i32 0
  %RAX.i2635 = bitcast %union.anon* %3292 to i64*
  %3293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3294 = getelementptr inbounds %struct.GPR, %struct.GPR* %3293, i32 0, i32 15
  %3295 = getelementptr inbounds %struct.Reg, %struct.Reg* %3294, i32 0, i32 0
  %RBP.i2636 = bitcast %union.anon* %3295 to i64*
  %3296 = load i64, i64* %RBP.i2636
  %3297 = sub i64 %3296, 40
  %3298 = load i64, i64* %PC.i2634
  %3299 = add i64 %3298, 3
  store i64 %3299, i64* %PC.i2634
  %3300 = inttoptr i64 %3297 to i32*
  %3301 = load i32, i32* %3300
  %3302 = zext i32 %3301 to i64
  store i64 %3302, i64* %RAX.i2635, align 8
  store %struct.Memory* %loadMem_475b20, %struct.Memory** %MEMORY
  %loadMem_475b23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3304 = getelementptr inbounds %struct.GPR, %struct.GPR* %3303, i32 0, i32 33
  %3305 = getelementptr inbounds %struct.Reg, %struct.Reg* %3304, i32 0, i32 0
  %PC.i2632 = bitcast %union.anon* %3305 to i64*
  %3306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3307 = getelementptr inbounds %struct.GPR, %struct.GPR* %3306, i32 0, i32 1
  %3308 = getelementptr inbounds %struct.Reg, %struct.Reg* %3307, i32 0, i32 0
  %EAX.i2633 = bitcast %union.anon* %3308 to i32*
  %3309 = load i32, i32* %EAX.i2633
  %3310 = zext i32 %3309 to i64
  %3311 = load i64, i64* %PC.i2632
  %3312 = add i64 %3311, 7
  store i64 %3312, i64* %PC.i2632
  %3313 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %3314 = sub i32 %3309, %3313
  %3315 = icmp ult i32 %3309, %3313
  %3316 = zext i1 %3315 to i8
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3316, i8* %3317, align 1
  %3318 = and i32 %3314, 255
  %3319 = call i32 @llvm.ctpop.i32(i32 %3318)
  %3320 = trunc i32 %3319 to i8
  %3321 = and i8 %3320, 1
  %3322 = xor i8 %3321, 1
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3322, i8* %3323, align 1
  %3324 = xor i32 %3313, %3309
  %3325 = xor i32 %3324, %3314
  %3326 = lshr i32 %3325, 4
  %3327 = trunc i32 %3326 to i8
  %3328 = and i8 %3327, 1
  %3329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3328, i8* %3329, align 1
  %3330 = icmp eq i32 %3314, 0
  %3331 = zext i1 %3330 to i8
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3331, i8* %3332, align 1
  %3333 = lshr i32 %3314, 31
  %3334 = trunc i32 %3333 to i8
  %3335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3334, i8* %3335, align 1
  %3336 = lshr i32 %3309, 31
  %3337 = lshr i32 %3313, 31
  %3338 = xor i32 %3337, %3336
  %3339 = xor i32 %3333, %3336
  %3340 = add i32 %3339, %3338
  %3341 = icmp eq i32 %3340, 2
  %3342 = zext i1 %3341 to i8
  %3343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3342, i8* %3343, align 1
  store %struct.Memory* %loadMem_475b23, %struct.Memory** %MEMORY
  %loadMem_475b2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3345 = getelementptr inbounds %struct.GPR, %struct.GPR* %3344, i32 0, i32 33
  %3346 = getelementptr inbounds %struct.Reg, %struct.Reg* %3345, i32 0, i32 0
  %PC.i2631 = bitcast %union.anon* %3346 to i64*
  %3347 = load i64, i64* %PC.i2631
  %3348 = add i64 %3347, 79
  %3349 = load i64, i64* %PC.i2631
  %3350 = add i64 %3349, 6
  %3351 = load i64, i64* %PC.i2631
  %3352 = add i64 %3351, 6
  store i64 %3352, i64* %PC.i2631
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3354 = load i8, i8* %3353, align 1
  %3355 = icmp ne i8 %3354, 0
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3357 = load i8, i8* %3356, align 1
  %3358 = icmp ne i8 %3357, 0
  %3359 = xor i1 %3355, %3358
  %3360 = xor i1 %3359, true
  %3361 = zext i1 %3360 to i8
  store i8 %3361, i8* %BRANCH_TAKEN, align 1
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3363 = select i1 %3359, i64 %3350, i64 %3348
  store i64 %3363, i64* %3362, align 8
  store %struct.Memory* %loadMem_475b2a, %struct.Memory** %MEMORY
  %loadBr_475b2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475b2a = icmp eq i8 %loadBr_475b2a, 1
  br i1 %cmpBr_475b2a, label %block_.L_475b79, label %block_475b30

block_475b30:                                     ; preds = %block_.L_475b20
  %loadMem_475b30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3365 = getelementptr inbounds %struct.GPR, %struct.GPR* %3364, i32 0, i32 33
  %3366 = getelementptr inbounds %struct.Reg, %struct.Reg* %3365, i32 0, i32 0
  %PC.i2628 = bitcast %union.anon* %3366 to i64*
  %3367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3368 = getelementptr inbounds %struct.GPR, %struct.GPR* %3367, i32 0, i32 1
  %3369 = getelementptr inbounds %struct.Reg, %struct.Reg* %3368, i32 0, i32 0
  %RAX.i2629 = bitcast %union.anon* %3369 to i64*
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3371 = getelementptr inbounds %struct.GPR, %struct.GPR* %3370, i32 0, i32 15
  %3372 = getelementptr inbounds %struct.Reg, %struct.Reg* %3371, i32 0, i32 0
  %RBP.i2630 = bitcast %union.anon* %3372 to i64*
  %3373 = load i64, i64* %RBP.i2630
  %3374 = sub i64 %3373, 36
  %3375 = load i64, i64* %PC.i2628
  %3376 = add i64 %3375, 4
  store i64 %3376, i64* %PC.i2628
  %3377 = inttoptr i64 %3374 to i32*
  %3378 = load i32, i32* %3377
  %3379 = sext i32 %3378 to i64
  %3380 = mul i64 %3379, 20
  %3381 = trunc i64 %3380 to i32
  %3382 = and i64 %3380, 4294967295
  store i64 %3382, i64* %RAX.i2629, align 8
  %3383 = shl i64 %3380, 32
  %3384 = ashr exact i64 %3383, 32
  %3385 = icmp ne i64 %3384, %3380
  %3386 = zext i1 %3385 to i8
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3386, i8* %3387, align 1
  %3388 = and i32 %3381, 255
  %3389 = call i32 @llvm.ctpop.i32(i32 %3388)
  %3390 = trunc i32 %3389 to i8
  %3391 = and i8 %3390, 1
  %3392 = xor i8 %3391, 1
  %3393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3392, i8* %3393, align 1
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3394, align 1
  %3395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3395, align 1
  %3396 = lshr i32 %3381, 31
  %3397 = trunc i32 %3396 to i8
  %3398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3397, i8* %3398, align 1
  %3399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3386, i8* %3399, align 1
  store %struct.Memory* %loadMem_475b30, %struct.Memory** %MEMORY
  %loadMem_475b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3401 = getelementptr inbounds %struct.GPR, %struct.GPR* %3400, i32 0, i32 33
  %3402 = getelementptr inbounds %struct.Reg, %struct.Reg* %3401, i32 0, i32 0
  %PC.i2626 = bitcast %union.anon* %3402 to i64*
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3404 = getelementptr inbounds %struct.GPR, %struct.GPR* %3403, i32 0, i32 1
  %3405 = getelementptr inbounds %struct.Reg, %struct.Reg* %3404, i32 0, i32 0
  %RAX.i2627 = bitcast %union.anon* %3405 to i64*
  %3406 = load i64, i64* %RAX.i2627
  %3407 = load i64, i64* %PC.i2626
  %3408 = add i64 %3407, 3
  store i64 %3408, i64* %PC.i2626
  %3409 = trunc i64 %3406 to i32
  %3410 = add i32 21, %3409
  %3411 = zext i32 %3410 to i64
  store i64 %3411, i64* %RAX.i2627, align 8
  %3412 = icmp ult i32 %3410, %3409
  %3413 = icmp ult i32 %3410, 21
  %3414 = or i1 %3412, %3413
  %3415 = zext i1 %3414 to i8
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3415, i8* %3416, align 1
  %3417 = and i32 %3410, 255
  %3418 = call i32 @llvm.ctpop.i32(i32 %3417)
  %3419 = trunc i32 %3418 to i8
  %3420 = and i8 %3419, 1
  %3421 = xor i8 %3420, 1
  %3422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3421, i8* %3422, align 1
  %3423 = xor i64 21, %3406
  %3424 = trunc i64 %3423 to i32
  %3425 = xor i32 %3424, %3410
  %3426 = lshr i32 %3425, 4
  %3427 = trunc i32 %3426 to i8
  %3428 = and i8 %3427, 1
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3428, i8* %3429, align 1
  %3430 = icmp eq i32 %3410, 0
  %3431 = zext i1 %3430 to i8
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3431, i8* %3432, align 1
  %3433 = lshr i32 %3410, 31
  %3434 = trunc i32 %3433 to i8
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3434, i8* %3435, align 1
  %3436 = lshr i32 %3409, 31
  %3437 = xor i32 %3433, %3436
  %3438 = add i32 %3437, %3433
  %3439 = icmp eq i32 %3438, 2
  %3440 = zext i1 %3439 to i8
  %3441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3440, i8* %3441, align 1
  store %struct.Memory* %loadMem_475b34, %struct.Memory** %MEMORY
  %loadMem_475b37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3443 = getelementptr inbounds %struct.GPR, %struct.GPR* %3442, i32 0, i32 33
  %3444 = getelementptr inbounds %struct.Reg, %struct.Reg* %3443, i32 0, i32 0
  %PC.i2623 = bitcast %union.anon* %3444 to i64*
  %3445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3446 = getelementptr inbounds %struct.GPR, %struct.GPR* %3445, i32 0, i32 1
  %3447 = getelementptr inbounds %struct.Reg, %struct.Reg* %3446, i32 0, i32 0
  %RAX.i2624 = bitcast %union.anon* %3447 to i64*
  %3448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3449 = getelementptr inbounds %struct.GPR, %struct.GPR* %3448, i32 0, i32 15
  %3450 = getelementptr inbounds %struct.Reg, %struct.Reg* %3449, i32 0, i32 0
  %RBP.i2625 = bitcast %union.anon* %3450 to i64*
  %3451 = load i64, i64* %RAX.i2624
  %3452 = load i64, i64* %RBP.i2625
  %3453 = sub i64 %3452, 40
  %3454 = load i64, i64* %PC.i2623
  %3455 = add i64 %3454, 3
  store i64 %3455, i64* %PC.i2623
  %3456 = trunc i64 %3451 to i32
  %3457 = inttoptr i64 %3453 to i32*
  %3458 = load i32, i32* %3457
  %3459 = add i32 %3458, %3456
  %3460 = zext i32 %3459 to i64
  store i64 %3460, i64* %RAX.i2624, align 8
  %3461 = icmp ult i32 %3459, %3456
  %3462 = icmp ult i32 %3459, %3458
  %3463 = or i1 %3461, %3462
  %3464 = zext i1 %3463 to i8
  %3465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3464, i8* %3465, align 1
  %3466 = and i32 %3459, 255
  %3467 = call i32 @llvm.ctpop.i32(i32 %3466)
  %3468 = trunc i32 %3467 to i8
  %3469 = and i8 %3468, 1
  %3470 = xor i8 %3469, 1
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3470, i8* %3471, align 1
  %3472 = xor i32 %3458, %3456
  %3473 = xor i32 %3472, %3459
  %3474 = lshr i32 %3473, 4
  %3475 = trunc i32 %3474 to i8
  %3476 = and i8 %3475, 1
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3476, i8* %3477, align 1
  %3478 = icmp eq i32 %3459, 0
  %3479 = zext i1 %3478 to i8
  %3480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3479, i8* %3480, align 1
  %3481 = lshr i32 %3459, 31
  %3482 = trunc i32 %3481 to i8
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3482, i8* %3483, align 1
  %3484 = lshr i32 %3456, 31
  %3485 = lshr i32 %3458, 31
  %3486 = xor i32 %3481, %3484
  %3487 = xor i32 %3481, %3485
  %3488 = add i32 %3486, %3487
  %3489 = icmp eq i32 %3488, 2
  %3490 = zext i1 %3489 to i8
  %3491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3490, i8* %3491, align 1
  store %struct.Memory* %loadMem_475b37, %struct.Memory** %MEMORY
  %loadMem_475b3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3493 = getelementptr inbounds %struct.GPR, %struct.GPR* %3492, i32 0, i32 33
  %3494 = getelementptr inbounds %struct.Reg, %struct.Reg* %3493, i32 0, i32 0
  %PC.i2620 = bitcast %union.anon* %3494 to i64*
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3496 = getelementptr inbounds %struct.GPR, %struct.GPR* %3495, i32 0, i32 1
  %3497 = getelementptr inbounds %struct.Reg, %struct.Reg* %3496, i32 0, i32 0
  %EAX.i2621 = bitcast %union.anon* %3497 to i32*
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 5
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %RCX.i2622 = bitcast %union.anon* %3500 to i64*
  %3501 = load i32, i32* %EAX.i2621
  %3502 = zext i32 %3501 to i64
  %3503 = load i64, i64* %PC.i2620
  %3504 = add i64 %3503, 3
  store i64 %3504, i64* %PC.i2620
  %3505 = shl i64 %3502, 32
  %3506 = ashr exact i64 %3505, 32
  store i64 %3506, i64* %RCX.i2622, align 8
  store %struct.Memory* %loadMem_475b3a, %struct.Memory** %MEMORY
  %loadMem_475b3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3508 = getelementptr inbounds %struct.GPR, %struct.GPR* %3507, i32 0, i32 33
  %3509 = getelementptr inbounds %struct.Reg, %struct.Reg* %3508, i32 0, i32 0
  %PC.i2617 = bitcast %union.anon* %3509 to i64*
  %3510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3511 = getelementptr inbounds %struct.GPR, %struct.GPR* %3510, i32 0, i32 5
  %3512 = getelementptr inbounds %struct.Reg, %struct.Reg* %3511, i32 0, i32 0
  %RCX.i2618 = bitcast %union.anon* %3512 to i64*
  %3513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3514 = getelementptr inbounds %struct.GPR, %struct.GPR* %3513, i32 0, i32 15
  %3515 = getelementptr inbounds %struct.Reg, %struct.Reg* %3514, i32 0, i32 0
  %RBP.i2619 = bitcast %union.anon* %3515 to i64*
  %3516 = load i64, i64* %RBP.i2619
  %3517 = load i64, i64* %RCX.i2618
  %3518 = add i64 %3516, -1040
  %3519 = add i64 %3518, %3517
  %3520 = load i64, i64* %PC.i2617
  %3521 = add i64 %3520, 8
  store i64 %3521, i64* %PC.i2617
  %3522 = inttoptr i64 %3519 to i8*
  %3523 = load i8, i8* %3522
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3524, align 1
  %3525 = zext i8 %3523 to i32
  %3526 = call i32 @llvm.ctpop.i32(i32 %3525)
  %3527 = trunc i32 %3526 to i8
  %3528 = and i8 %3527, 1
  %3529 = xor i8 %3528, 1
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3529, i8* %3530, align 1
  %3531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3531, align 1
  %3532 = icmp eq i8 %3523, 0
  %3533 = zext i1 %3532 to i8
  %3534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3533, i8* %3534, align 1
  %3535 = lshr i8 %3523, 7
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3535, i8* %3536, align 1
  %3537 = lshr i8 %3523, 7
  %3538 = xor i8 %3535, %3537
  %3539 = add i8 %3538, %3537
  %3540 = icmp eq i8 %3539, 2
  %3541 = zext i1 %3540 to i8
  %3542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3541, i8* %3542, align 1
  store %struct.Memory* %loadMem_475b3d, %struct.Memory** %MEMORY
  %loadMem_475b45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3544 = getelementptr inbounds %struct.GPR, %struct.GPR* %3543, i32 0, i32 33
  %3545 = getelementptr inbounds %struct.Reg, %struct.Reg* %3544, i32 0, i32 0
  %PC.i2616 = bitcast %union.anon* %3545 to i64*
  %3546 = load i64, i64* %PC.i2616
  %3547 = add i64 %3546, 33
  %3548 = load i64, i64* %PC.i2616
  %3549 = add i64 %3548, 6
  %3550 = load i64, i64* %PC.i2616
  %3551 = add i64 %3550, 6
  store i64 %3551, i64* %PC.i2616
  %3552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3553 = load i8, i8* %3552, align 1
  store i8 %3553, i8* %BRANCH_TAKEN, align 1
  %3554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3555 = icmp ne i8 %3553, 0
  %3556 = select i1 %3555, i64 %3547, i64 %3549
  store i64 %3556, i64* %3554, align 8
  store %struct.Memory* %loadMem_475b45, %struct.Memory** %MEMORY
  %loadBr_475b45 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475b45 = icmp eq i8 %loadBr_475b45, 1
  br i1 %cmpBr_475b45, label %block_.L_475b66, label %block_475b4b

block_475b4b:                                     ; preds = %block_475b30
  %loadMem_475b4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3558 = getelementptr inbounds %struct.GPR, %struct.GPR* %3557, i32 0, i32 33
  %3559 = getelementptr inbounds %struct.Reg, %struct.Reg* %3558, i32 0, i32 0
  %PC.i2613 = bitcast %union.anon* %3559 to i64*
  %3560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3561 = getelementptr inbounds %struct.GPR, %struct.GPR* %3560, i32 0, i32 1
  %3562 = getelementptr inbounds %struct.Reg, %struct.Reg* %3561, i32 0, i32 0
  %RAX.i2614 = bitcast %union.anon* %3562 to i64*
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3564 = getelementptr inbounds %struct.GPR, %struct.GPR* %3563, i32 0, i32 15
  %3565 = getelementptr inbounds %struct.Reg, %struct.Reg* %3564, i32 0, i32 0
  %RBP.i2615 = bitcast %union.anon* %3565 to i64*
  %3566 = load i64, i64* %RBP.i2615
  %3567 = sub i64 %3566, 36
  %3568 = load i64, i64* %PC.i2613
  %3569 = add i64 %3568, 4
  store i64 %3569, i64* %PC.i2613
  %3570 = inttoptr i64 %3567 to i32*
  %3571 = load i32, i32* %3570
  %3572 = sext i32 %3571 to i64
  %3573 = mul i64 %3572, 20
  %3574 = trunc i64 %3573 to i32
  %3575 = and i64 %3573, 4294967295
  store i64 %3575, i64* %RAX.i2614, align 8
  %3576 = shl i64 %3573, 32
  %3577 = ashr exact i64 %3576, 32
  %3578 = icmp ne i64 %3577, %3573
  %3579 = zext i1 %3578 to i8
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3579, i8* %3580, align 1
  %3581 = and i32 %3574, 255
  %3582 = call i32 @llvm.ctpop.i32(i32 %3581)
  %3583 = trunc i32 %3582 to i8
  %3584 = and i8 %3583, 1
  %3585 = xor i8 %3584, 1
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3585, i8* %3586, align 1
  %3587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3587, align 1
  %3588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3588, align 1
  %3589 = lshr i32 %3574, 31
  %3590 = trunc i32 %3589 to i8
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3590, i8* %3591, align 1
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3579, i8* %3592, align 1
  store %struct.Memory* %loadMem_475b4b, %struct.Memory** %MEMORY
  %loadMem_475b4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3594 = getelementptr inbounds %struct.GPR, %struct.GPR* %3593, i32 0, i32 33
  %3595 = getelementptr inbounds %struct.Reg, %struct.Reg* %3594, i32 0, i32 0
  %PC.i2611 = bitcast %union.anon* %3595 to i64*
  %3596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3597 = getelementptr inbounds %struct.GPR, %struct.GPR* %3596, i32 0, i32 1
  %3598 = getelementptr inbounds %struct.Reg, %struct.Reg* %3597, i32 0, i32 0
  %RAX.i2612 = bitcast %union.anon* %3598 to i64*
  %3599 = load i64, i64* %RAX.i2612
  %3600 = load i64, i64* %PC.i2611
  %3601 = add i64 %3600, 3
  store i64 %3601, i64* %PC.i2611
  %3602 = trunc i64 %3599 to i32
  %3603 = add i32 21, %3602
  %3604 = zext i32 %3603 to i64
  store i64 %3604, i64* %RAX.i2612, align 8
  %3605 = icmp ult i32 %3603, %3602
  %3606 = icmp ult i32 %3603, 21
  %3607 = or i1 %3605, %3606
  %3608 = zext i1 %3607 to i8
  %3609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3608, i8* %3609, align 1
  %3610 = and i32 %3603, 255
  %3611 = call i32 @llvm.ctpop.i32(i32 %3610)
  %3612 = trunc i32 %3611 to i8
  %3613 = and i8 %3612, 1
  %3614 = xor i8 %3613, 1
  %3615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3614, i8* %3615, align 1
  %3616 = xor i64 21, %3599
  %3617 = trunc i64 %3616 to i32
  %3618 = xor i32 %3617, %3603
  %3619 = lshr i32 %3618, 4
  %3620 = trunc i32 %3619 to i8
  %3621 = and i8 %3620, 1
  %3622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3621, i8* %3622, align 1
  %3623 = icmp eq i32 %3603, 0
  %3624 = zext i1 %3623 to i8
  %3625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3624, i8* %3625, align 1
  %3626 = lshr i32 %3603, 31
  %3627 = trunc i32 %3626 to i8
  %3628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3627, i8* %3628, align 1
  %3629 = lshr i32 %3602, 31
  %3630 = xor i32 %3626, %3629
  %3631 = add i32 %3630, %3626
  %3632 = icmp eq i32 %3631, 2
  %3633 = zext i1 %3632 to i8
  %3634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3633, i8* %3634, align 1
  store %struct.Memory* %loadMem_475b4f, %struct.Memory** %MEMORY
  %loadMem_475b52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3636 = getelementptr inbounds %struct.GPR, %struct.GPR* %3635, i32 0, i32 33
  %3637 = getelementptr inbounds %struct.Reg, %struct.Reg* %3636, i32 0, i32 0
  %PC.i2608 = bitcast %union.anon* %3637 to i64*
  %3638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3639 = getelementptr inbounds %struct.GPR, %struct.GPR* %3638, i32 0, i32 1
  %3640 = getelementptr inbounds %struct.Reg, %struct.Reg* %3639, i32 0, i32 0
  %RAX.i2609 = bitcast %union.anon* %3640 to i64*
  %3641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3642 = getelementptr inbounds %struct.GPR, %struct.GPR* %3641, i32 0, i32 15
  %3643 = getelementptr inbounds %struct.Reg, %struct.Reg* %3642, i32 0, i32 0
  %RBP.i2610 = bitcast %union.anon* %3643 to i64*
  %3644 = load i64, i64* %RAX.i2609
  %3645 = load i64, i64* %RBP.i2610
  %3646 = sub i64 %3645, 40
  %3647 = load i64, i64* %PC.i2608
  %3648 = add i64 %3647, 3
  store i64 %3648, i64* %PC.i2608
  %3649 = trunc i64 %3644 to i32
  %3650 = inttoptr i64 %3646 to i32*
  %3651 = load i32, i32* %3650
  %3652 = add i32 %3651, %3649
  %3653 = zext i32 %3652 to i64
  store i64 %3653, i64* %RAX.i2609, align 8
  %3654 = icmp ult i32 %3652, %3649
  %3655 = icmp ult i32 %3652, %3651
  %3656 = or i1 %3654, %3655
  %3657 = zext i1 %3656 to i8
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3657, i8* %3658, align 1
  %3659 = and i32 %3652, 255
  %3660 = call i32 @llvm.ctpop.i32(i32 %3659)
  %3661 = trunc i32 %3660 to i8
  %3662 = and i8 %3661, 1
  %3663 = xor i8 %3662, 1
  %3664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3663, i8* %3664, align 1
  %3665 = xor i32 %3651, %3649
  %3666 = xor i32 %3665, %3652
  %3667 = lshr i32 %3666, 4
  %3668 = trunc i32 %3667 to i8
  %3669 = and i8 %3668, 1
  %3670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3669, i8* %3670, align 1
  %3671 = icmp eq i32 %3652, 0
  %3672 = zext i1 %3671 to i8
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3672, i8* %3673, align 1
  %3674 = lshr i32 %3652, 31
  %3675 = trunc i32 %3674 to i8
  %3676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3675, i8* %3676, align 1
  %3677 = lshr i32 %3649, 31
  %3678 = lshr i32 %3651, 31
  %3679 = xor i32 %3674, %3677
  %3680 = xor i32 %3674, %3678
  %3681 = add i32 %3679, %3680
  %3682 = icmp eq i32 %3681, 2
  %3683 = zext i1 %3682 to i8
  %3684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3683, i8* %3684, align 1
  store %struct.Memory* %loadMem_475b52, %struct.Memory** %MEMORY
  %loadMem_475b55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3686 = getelementptr inbounds %struct.GPR, %struct.GPR* %3685, i32 0, i32 33
  %3687 = getelementptr inbounds %struct.Reg, %struct.Reg* %3686, i32 0, i32 0
  %PC.i2605 = bitcast %union.anon* %3687 to i64*
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3689 = getelementptr inbounds %struct.GPR, %struct.GPR* %3688, i32 0, i32 1
  %3690 = getelementptr inbounds %struct.Reg, %struct.Reg* %3689, i32 0, i32 0
  %EAX.i2606 = bitcast %union.anon* %3690 to i32*
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3692 = getelementptr inbounds %struct.GPR, %struct.GPR* %3691, i32 0, i32 15
  %3693 = getelementptr inbounds %struct.Reg, %struct.Reg* %3692, i32 0, i32 0
  %RBP.i2607 = bitcast %union.anon* %3693 to i64*
  %3694 = load i64, i64* %RBP.i2607
  %3695 = sub i64 %3694, 128
  %3696 = load i32, i32* %EAX.i2606
  %3697 = zext i32 %3696 to i64
  %3698 = load i64, i64* %PC.i2605
  %3699 = add i64 %3698, 3
  store i64 %3699, i64* %PC.i2605
  %3700 = inttoptr i64 %3695 to i32*
  store i32 %3696, i32* %3700
  store %struct.Memory* %loadMem_475b55, %struct.Memory** %MEMORY
  %loadMem_475b58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3702 = getelementptr inbounds %struct.GPR, %struct.GPR* %3701, i32 0, i32 33
  %3703 = getelementptr inbounds %struct.Reg, %struct.Reg* %3702, i32 0, i32 0
  %PC.i2602 = bitcast %union.anon* %3703 to i64*
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3705 = getelementptr inbounds %struct.GPR, %struct.GPR* %3704, i32 0, i32 1
  %3706 = getelementptr inbounds %struct.Reg, %struct.Reg* %3705, i32 0, i32 0
  %RAX.i2603 = bitcast %union.anon* %3706 to i64*
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3708 = getelementptr inbounds %struct.GPR, %struct.GPR* %3707, i32 0, i32 15
  %3709 = getelementptr inbounds %struct.Reg, %struct.Reg* %3708, i32 0, i32 0
  %RBP.i2604 = bitcast %union.anon* %3709 to i64*
  %3710 = load i64, i64* %RBP.i2604
  %3711 = sub i64 %3710, 36
  %3712 = load i64, i64* %PC.i2602
  %3713 = add i64 %3712, 3
  store i64 %3713, i64* %PC.i2602
  %3714 = inttoptr i64 %3711 to i32*
  %3715 = load i32, i32* %3714
  %3716 = zext i32 %3715 to i64
  store i64 %3716, i64* %RAX.i2603, align 8
  store %struct.Memory* %loadMem_475b58, %struct.Memory** %MEMORY
  %loadMem_475b5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3718 = getelementptr inbounds %struct.GPR, %struct.GPR* %3717, i32 0, i32 33
  %3719 = getelementptr inbounds %struct.Reg, %struct.Reg* %3718, i32 0, i32 0
  %PC.i2599 = bitcast %union.anon* %3719 to i64*
  %3720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3721 = getelementptr inbounds %struct.GPR, %struct.GPR* %3720, i32 0, i32 1
  %3722 = getelementptr inbounds %struct.Reg, %struct.Reg* %3721, i32 0, i32 0
  %EAX.i2600 = bitcast %union.anon* %3722 to i32*
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3724 = getelementptr inbounds %struct.GPR, %struct.GPR* %3723, i32 0, i32 15
  %3725 = getelementptr inbounds %struct.Reg, %struct.Reg* %3724, i32 0, i32 0
  %RBP.i2601 = bitcast %union.anon* %3725 to i64*
  %3726 = load i64, i64* %RBP.i2601
  %3727 = sub i64 %3726, 220
  %3728 = load i32, i32* %EAX.i2600
  %3729 = zext i32 %3728 to i64
  %3730 = load i64, i64* %PC.i2599
  %3731 = add i64 %3730, 6
  store i64 %3731, i64* %PC.i2599
  %3732 = inttoptr i64 %3727 to i32*
  store i32 %3728, i32* %3732
  store %struct.Memory* %loadMem_475b5b, %struct.Memory** %MEMORY
  %loadMem_475b61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3734 = getelementptr inbounds %struct.GPR, %struct.GPR* %3733, i32 0, i32 33
  %3735 = getelementptr inbounds %struct.Reg, %struct.Reg* %3734, i32 0, i32 0
  %PC.i2598 = bitcast %union.anon* %3735 to i64*
  %3736 = load i64, i64* %PC.i2598
  %3737 = add i64 %3736, 24
  %3738 = load i64, i64* %PC.i2598
  %3739 = add i64 %3738, 5
  store i64 %3739, i64* %PC.i2598
  %3740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3737, i64* %3740, align 8
  store %struct.Memory* %loadMem_475b61, %struct.Memory** %MEMORY
  br label %block_.L_475b79

block_.L_475b66:                                  ; preds = %block_475b30
  %loadMem_475b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3742 = getelementptr inbounds %struct.GPR, %struct.GPR* %3741, i32 0, i32 33
  %3743 = getelementptr inbounds %struct.Reg, %struct.Reg* %3742, i32 0, i32 0
  %PC.i2597 = bitcast %union.anon* %3743 to i64*
  %3744 = load i64, i64* %PC.i2597
  %3745 = add i64 %3744, 5
  %3746 = load i64, i64* %PC.i2597
  %3747 = add i64 %3746, 5
  store i64 %3747, i64* %PC.i2597
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3745, i64* %3748, align 8
  store %struct.Memory* %loadMem_475b66, %struct.Memory** %MEMORY
  br label %block_.L_475b6b

block_.L_475b6b:                                  ; preds = %block_.L_475b66
  %loadMem_475b6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3750 = getelementptr inbounds %struct.GPR, %struct.GPR* %3749, i32 0, i32 33
  %3751 = getelementptr inbounds %struct.Reg, %struct.Reg* %3750, i32 0, i32 0
  %PC.i2594 = bitcast %union.anon* %3751 to i64*
  %3752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3753 = getelementptr inbounds %struct.GPR, %struct.GPR* %3752, i32 0, i32 1
  %3754 = getelementptr inbounds %struct.Reg, %struct.Reg* %3753, i32 0, i32 0
  %RAX.i2595 = bitcast %union.anon* %3754 to i64*
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3756 = getelementptr inbounds %struct.GPR, %struct.GPR* %3755, i32 0, i32 15
  %3757 = getelementptr inbounds %struct.Reg, %struct.Reg* %3756, i32 0, i32 0
  %RBP.i2596 = bitcast %union.anon* %3757 to i64*
  %3758 = load i64, i64* %RBP.i2596
  %3759 = sub i64 %3758, 40
  %3760 = load i64, i64* %PC.i2594
  %3761 = add i64 %3760, 3
  store i64 %3761, i64* %PC.i2594
  %3762 = inttoptr i64 %3759 to i32*
  %3763 = load i32, i32* %3762
  %3764 = zext i32 %3763 to i64
  store i64 %3764, i64* %RAX.i2595, align 8
  store %struct.Memory* %loadMem_475b6b, %struct.Memory** %MEMORY
  %loadMem_475b6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3766 = getelementptr inbounds %struct.GPR, %struct.GPR* %3765, i32 0, i32 33
  %3767 = getelementptr inbounds %struct.Reg, %struct.Reg* %3766, i32 0, i32 0
  %PC.i2592 = bitcast %union.anon* %3767 to i64*
  %3768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3769 = getelementptr inbounds %struct.GPR, %struct.GPR* %3768, i32 0, i32 1
  %3770 = getelementptr inbounds %struct.Reg, %struct.Reg* %3769, i32 0, i32 0
  %RAX.i2593 = bitcast %union.anon* %3770 to i64*
  %3771 = load i64, i64* %RAX.i2593
  %3772 = load i64, i64* %PC.i2592
  %3773 = add i64 %3772, 3
  store i64 %3773, i64* %PC.i2592
  %3774 = trunc i64 %3771 to i32
  %3775 = add i32 1, %3774
  %3776 = zext i32 %3775 to i64
  store i64 %3776, i64* %RAX.i2593, align 8
  %3777 = icmp ult i32 %3775, %3774
  %3778 = icmp ult i32 %3775, 1
  %3779 = or i1 %3777, %3778
  %3780 = zext i1 %3779 to i8
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3780, i8* %3781, align 1
  %3782 = and i32 %3775, 255
  %3783 = call i32 @llvm.ctpop.i32(i32 %3782)
  %3784 = trunc i32 %3783 to i8
  %3785 = and i8 %3784, 1
  %3786 = xor i8 %3785, 1
  %3787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3786, i8* %3787, align 1
  %3788 = xor i64 1, %3771
  %3789 = trunc i64 %3788 to i32
  %3790 = xor i32 %3789, %3775
  %3791 = lshr i32 %3790, 4
  %3792 = trunc i32 %3791 to i8
  %3793 = and i8 %3792, 1
  %3794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3793, i8* %3794, align 1
  %3795 = icmp eq i32 %3775, 0
  %3796 = zext i1 %3795 to i8
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3796, i8* %3797, align 1
  %3798 = lshr i32 %3775, 31
  %3799 = trunc i32 %3798 to i8
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3799, i8* %3800, align 1
  %3801 = lshr i32 %3774, 31
  %3802 = xor i32 %3798, %3801
  %3803 = add i32 %3802, %3798
  %3804 = icmp eq i32 %3803, 2
  %3805 = zext i1 %3804 to i8
  %3806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3805, i8* %3806, align 1
  store %struct.Memory* %loadMem_475b6e, %struct.Memory** %MEMORY
  %loadMem_475b71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3808 = getelementptr inbounds %struct.GPR, %struct.GPR* %3807, i32 0, i32 33
  %3809 = getelementptr inbounds %struct.Reg, %struct.Reg* %3808, i32 0, i32 0
  %PC.i2589 = bitcast %union.anon* %3809 to i64*
  %3810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3811 = getelementptr inbounds %struct.GPR, %struct.GPR* %3810, i32 0, i32 1
  %3812 = getelementptr inbounds %struct.Reg, %struct.Reg* %3811, i32 0, i32 0
  %EAX.i2590 = bitcast %union.anon* %3812 to i32*
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3814 = getelementptr inbounds %struct.GPR, %struct.GPR* %3813, i32 0, i32 15
  %3815 = getelementptr inbounds %struct.Reg, %struct.Reg* %3814, i32 0, i32 0
  %RBP.i2591 = bitcast %union.anon* %3815 to i64*
  %3816 = load i64, i64* %RBP.i2591
  %3817 = sub i64 %3816, 40
  %3818 = load i32, i32* %EAX.i2590
  %3819 = zext i32 %3818 to i64
  %3820 = load i64, i64* %PC.i2589
  %3821 = add i64 %3820, 3
  store i64 %3821, i64* %PC.i2589
  %3822 = inttoptr i64 %3817 to i32*
  store i32 %3818, i32* %3822
  store %struct.Memory* %loadMem_475b71, %struct.Memory** %MEMORY
  %loadMem_475b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3824 = getelementptr inbounds %struct.GPR, %struct.GPR* %3823, i32 0, i32 33
  %3825 = getelementptr inbounds %struct.Reg, %struct.Reg* %3824, i32 0, i32 0
  %PC.i2588 = bitcast %union.anon* %3825 to i64*
  %3826 = load i64, i64* %PC.i2588
  %3827 = add i64 %3826, -84
  %3828 = load i64, i64* %PC.i2588
  %3829 = add i64 %3828, 5
  store i64 %3829, i64* %PC.i2588
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3827, i64* %3830, align 8
  store %struct.Memory* %loadMem_475b74, %struct.Memory** %MEMORY
  br label %block_.L_475b20

block_.L_475b79:                                  ; preds = %block_475b4b, %block_.L_475b20
  %loadMem_475b79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3832 = getelementptr inbounds %struct.GPR, %struct.GPR* %3831, i32 0, i32 33
  %3833 = getelementptr inbounds %struct.Reg, %struct.Reg* %3832, i32 0, i32 0
  %PC.i2587 = bitcast %union.anon* %3833 to i64*
  %3834 = load i64, i64* %PC.i2587
  %3835 = add i64 %3834, 5
  %3836 = load i64, i64* %PC.i2587
  %3837 = add i64 %3836, 5
  store i64 %3837, i64* %PC.i2587
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3835, i64* %3838, align 8
  store %struct.Memory* %loadMem_475b79, %struct.Memory** %MEMORY
  br label %block_.L_475b7e

block_.L_475b7e:                                  ; preds = %block_.L_475b79
  %loadMem_475b7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3840 = getelementptr inbounds %struct.GPR, %struct.GPR* %3839, i32 0, i32 33
  %3841 = getelementptr inbounds %struct.Reg, %struct.Reg* %3840, i32 0, i32 0
  %PC.i2584 = bitcast %union.anon* %3841 to i64*
  %3842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3843 = getelementptr inbounds %struct.GPR, %struct.GPR* %3842, i32 0, i32 1
  %3844 = getelementptr inbounds %struct.Reg, %struct.Reg* %3843, i32 0, i32 0
  %RAX.i2585 = bitcast %union.anon* %3844 to i64*
  %3845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3846 = getelementptr inbounds %struct.GPR, %struct.GPR* %3845, i32 0, i32 15
  %3847 = getelementptr inbounds %struct.Reg, %struct.Reg* %3846, i32 0, i32 0
  %RBP.i2586 = bitcast %union.anon* %3847 to i64*
  %3848 = load i64, i64* %RBP.i2586
  %3849 = sub i64 %3848, 36
  %3850 = load i64, i64* %PC.i2584
  %3851 = add i64 %3850, 3
  store i64 %3851, i64* %PC.i2584
  %3852 = inttoptr i64 %3849 to i32*
  %3853 = load i32, i32* %3852
  %3854 = zext i32 %3853 to i64
  store i64 %3854, i64* %RAX.i2585, align 8
  store %struct.Memory* %loadMem_475b7e, %struct.Memory** %MEMORY
  %loadMem_475b81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3856 = getelementptr inbounds %struct.GPR, %struct.GPR* %3855, i32 0, i32 33
  %3857 = getelementptr inbounds %struct.Reg, %struct.Reg* %3856, i32 0, i32 0
  %PC.i2582 = bitcast %union.anon* %3857 to i64*
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3859 = getelementptr inbounds %struct.GPR, %struct.GPR* %3858, i32 0, i32 1
  %3860 = getelementptr inbounds %struct.Reg, %struct.Reg* %3859, i32 0, i32 0
  %RAX.i2583 = bitcast %union.anon* %3860 to i64*
  %3861 = load i64, i64* %RAX.i2583
  %3862 = load i64, i64* %PC.i2582
  %3863 = add i64 %3862, 3
  store i64 %3863, i64* %PC.i2582
  %3864 = trunc i64 %3861 to i32
  %3865 = add i32 1, %3864
  %3866 = zext i32 %3865 to i64
  store i64 %3866, i64* %RAX.i2583, align 8
  %3867 = icmp ult i32 %3865, %3864
  %3868 = icmp ult i32 %3865, 1
  %3869 = or i1 %3867, %3868
  %3870 = zext i1 %3869 to i8
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3870, i8* %3871, align 1
  %3872 = and i32 %3865, 255
  %3873 = call i32 @llvm.ctpop.i32(i32 %3872)
  %3874 = trunc i32 %3873 to i8
  %3875 = and i8 %3874, 1
  %3876 = xor i8 %3875, 1
  %3877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3876, i8* %3877, align 1
  %3878 = xor i64 1, %3861
  %3879 = trunc i64 %3878 to i32
  %3880 = xor i32 %3879, %3865
  %3881 = lshr i32 %3880, 4
  %3882 = trunc i32 %3881 to i8
  %3883 = and i8 %3882, 1
  %3884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3883, i8* %3884, align 1
  %3885 = icmp eq i32 %3865, 0
  %3886 = zext i1 %3885 to i8
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3886, i8* %3887, align 1
  %3888 = lshr i32 %3865, 31
  %3889 = trunc i32 %3888 to i8
  %3890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3889, i8* %3890, align 1
  %3891 = lshr i32 %3864, 31
  %3892 = xor i32 %3888, %3891
  %3893 = add i32 %3892, %3888
  %3894 = icmp eq i32 %3893, 2
  %3895 = zext i1 %3894 to i8
  %3896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3895, i8* %3896, align 1
  store %struct.Memory* %loadMem_475b81, %struct.Memory** %MEMORY
  %loadMem_475b84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3898 = getelementptr inbounds %struct.GPR, %struct.GPR* %3897, i32 0, i32 33
  %3899 = getelementptr inbounds %struct.Reg, %struct.Reg* %3898, i32 0, i32 0
  %PC.i2579 = bitcast %union.anon* %3899 to i64*
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3901 = getelementptr inbounds %struct.GPR, %struct.GPR* %3900, i32 0, i32 1
  %3902 = getelementptr inbounds %struct.Reg, %struct.Reg* %3901, i32 0, i32 0
  %EAX.i2580 = bitcast %union.anon* %3902 to i32*
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3904 = getelementptr inbounds %struct.GPR, %struct.GPR* %3903, i32 0, i32 15
  %3905 = getelementptr inbounds %struct.Reg, %struct.Reg* %3904, i32 0, i32 0
  %RBP.i2581 = bitcast %union.anon* %3905 to i64*
  %3906 = load i64, i64* %RBP.i2581
  %3907 = sub i64 %3906, 36
  %3908 = load i32, i32* %EAX.i2580
  %3909 = zext i32 %3908 to i64
  %3910 = load i64, i64* %PC.i2579
  %3911 = add i64 %3910, 3
  store i64 %3911, i64* %PC.i2579
  %3912 = inttoptr i64 %3907 to i32*
  store i32 %3908, i32* %3912
  store %struct.Memory* %loadMem_475b84, %struct.Memory** %MEMORY
  %loadMem_475b87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3914 = getelementptr inbounds %struct.GPR, %struct.GPR* %3913, i32 0, i32 33
  %3915 = getelementptr inbounds %struct.Reg, %struct.Reg* %3914, i32 0, i32 0
  %PC.i2578 = bitcast %union.anon* %3915 to i64*
  %3916 = load i64, i64* %PC.i2578
  %3917 = add i64 %3916, -144
  %3918 = load i64, i64* %PC.i2578
  %3919 = add i64 %3918, 5
  store i64 %3919, i64* %PC.i2578
  %3920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3917, i64* %3920, align 8
  store %struct.Memory* %loadMem_475b87, %struct.Memory** %MEMORY
  br label %block_.L_475af7

block_.L_475b8c:                                  ; preds = %block_475b14, %block_.L_475af7
  %loadMem_475b8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3922 = getelementptr inbounds %struct.GPR, %struct.GPR* %3921, i32 0, i32 33
  %3923 = getelementptr inbounds %struct.Reg, %struct.Reg* %3922, i32 0, i32 0
  %PC.i2576 = bitcast %union.anon* %3923 to i64*
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3925 = getelementptr inbounds %struct.GPR, %struct.GPR* %3924, i32 0, i32 15
  %3926 = getelementptr inbounds %struct.Reg, %struct.Reg* %3925, i32 0, i32 0
  %RBP.i2577 = bitcast %union.anon* %3926 to i64*
  %3927 = load i64, i64* %RBP.i2577
  %3928 = sub i64 %3927, 224
  %3929 = load i64, i64* %PC.i2576
  %3930 = add i64 %3929, 10
  store i64 %3930, i64* %PC.i2576
  %3931 = inttoptr i64 %3928 to i32*
  store i32 -1, i32* %3931
  store %struct.Memory* %loadMem_475b8c, %struct.Memory** %MEMORY
  %loadMem_475b96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3933 = getelementptr inbounds %struct.GPR, %struct.GPR* %3932, i32 0, i32 33
  %3934 = getelementptr inbounds %struct.Reg, %struct.Reg* %3933, i32 0, i32 0
  %PC.i2574 = bitcast %union.anon* %3934 to i64*
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3936 = getelementptr inbounds %struct.GPR, %struct.GPR* %3935, i32 0, i32 1
  %3937 = getelementptr inbounds %struct.Reg, %struct.Reg* %3936, i32 0, i32 0
  %RAX.i2575 = bitcast %union.anon* %3937 to i64*
  %3938 = load i64, i64* %PC.i2574
  %3939 = add i64 %3938, 7
  store i64 %3939, i64* %PC.i2574
  %3940 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %3941 = zext i32 %3940 to i64
  store i64 %3941, i64* %RAX.i2575, align 8
  store %struct.Memory* %loadMem_475b96, %struct.Memory** %MEMORY
  %loadMem_475b9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3943 = getelementptr inbounds %struct.GPR, %struct.GPR* %3942, i32 0, i32 33
  %3944 = getelementptr inbounds %struct.Reg, %struct.Reg* %3943, i32 0, i32 0
  %PC.i2572 = bitcast %union.anon* %3944 to i64*
  %3945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3946 = getelementptr inbounds %struct.GPR, %struct.GPR* %3945, i32 0, i32 1
  %3947 = getelementptr inbounds %struct.Reg, %struct.Reg* %3946, i32 0, i32 0
  %RAX.i2573 = bitcast %union.anon* %3947 to i64*
  %3948 = load i64, i64* %RAX.i2573
  %3949 = load i64, i64* %PC.i2572
  %3950 = add i64 %3949, 3
  store i64 %3950, i64* %PC.i2572
  %3951 = trunc i64 %3948 to i32
  %3952 = sub i32 %3951, 1
  %3953 = zext i32 %3952 to i64
  store i64 %3953, i64* %RAX.i2573, align 8
  %3954 = icmp ult i32 %3951, 1
  %3955 = zext i1 %3954 to i8
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3955, i8* %3956, align 1
  %3957 = and i32 %3952, 255
  %3958 = call i32 @llvm.ctpop.i32(i32 %3957)
  %3959 = trunc i32 %3958 to i8
  %3960 = and i8 %3959, 1
  %3961 = xor i8 %3960, 1
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3961, i8* %3962, align 1
  %3963 = xor i64 1, %3948
  %3964 = trunc i64 %3963 to i32
  %3965 = xor i32 %3964, %3952
  %3966 = lshr i32 %3965, 4
  %3967 = trunc i32 %3966 to i8
  %3968 = and i8 %3967, 1
  %3969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3968, i8* %3969, align 1
  %3970 = icmp eq i32 %3952, 0
  %3971 = zext i1 %3970 to i8
  %3972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3971, i8* %3972, align 1
  %3973 = lshr i32 %3952, 31
  %3974 = trunc i32 %3973 to i8
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3974, i8* %3975, align 1
  %3976 = lshr i32 %3951, 31
  %3977 = xor i32 %3973, %3976
  %3978 = add i32 %3977, %3976
  %3979 = icmp eq i32 %3978, 2
  %3980 = zext i1 %3979 to i8
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3980, i8* %3981, align 1
  store %struct.Memory* %loadMem_475b9d, %struct.Memory** %MEMORY
  %loadMem_475ba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3983 = getelementptr inbounds %struct.GPR, %struct.GPR* %3982, i32 0, i32 33
  %3984 = getelementptr inbounds %struct.Reg, %struct.Reg* %3983, i32 0, i32 0
  %PC.i2569 = bitcast %union.anon* %3984 to i64*
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3986 = getelementptr inbounds %struct.GPR, %struct.GPR* %3985, i32 0, i32 1
  %3987 = getelementptr inbounds %struct.Reg, %struct.Reg* %3986, i32 0, i32 0
  %EAX.i2570 = bitcast %union.anon* %3987 to i32*
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3989 = getelementptr inbounds %struct.GPR, %struct.GPR* %3988, i32 0, i32 15
  %3990 = getelementptr inbounds %struct.Reg, %struct.Reg* %3989, i32 0, i32 0
  %RBP.i2571 = bitcast %union.anon* %3990 to i64*
  %3991 = load i64, i64* %RBP.i2571
  %3992 = sub i64 %3991, 36
  %3993 = load i32, i32* %EAX.i2570
  %3994 = zext i32 %3993 to i64
  %3995 = load i64, i64* %PC.i2569
  %3996 = add i64 %3995, 3
  store i64 %3996, i64* %PC.i2569
  %3997 = inttoptr i64 %3992 to i32*
  store i32 %3993, i32* %3997
  store %struct.Memory* %loadMem_475ba0, %struct.Memory** %MEMORY
  br label %block_.L_475ba3

block_.L_475ba3:                                  ; preds = %block_.L_475c17, %block_.L_475b8c
  %loadMem_475ba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3999 = getelementptr inbounds %struct.GPR, %struct.GPR* %3998, i32 0, i32 33
  %4000 = getelementptr inbounds %struct.Reg, %struct.Reg* %3999, i32 0, i32 0
  %PC.i2567 = bitcast %union.anon* %4000 to i64*
  %4001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4002 = getelementptr inbounds %struct.GPR, %struct.GPR* %4001, i32 0, i32 15
  %4003 = getelementptr inbounds %struct.Reg, %struct.Reg* %4002, i32 0, i32 0
  %RBP.i2568 = bitcast %union.anon* %4003 to i64*
  %4004 = load i64, i64* %RBP.i2568
  %4005 = sub i64 %4004, 36
  %4006 = load i64, i64* %PC.i2567
  %4007 = add i64 %4006, 4
  store i64 %4007, i64* %PC.i2567
  %4008 = inttoptr i64 %4005 to i32*
  %4009 = load i32, i32* %4008
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4010, align 1
  %4011 = and i32 %4009, 255
  %4012 = call i32 @llvm.ctpop.i32(i32 %4011)
  %4013 = trunc i32 %4012 to i8
  %4014 = and i8 %4013, 1
  %4015 = xor i8 %4014, 1
  %4016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4015, i8* %4016, align 1
  %4017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4017, align 1
  %4018 = icmp eq i32 %4009, 0
  %4019 = zext i1 %4018 to i8
  %4020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4019, i8* %4020, align 1
  %4021 = lshr i32 %4009, 31
  %4022 = trunc i32 %4021 to i8
  %4023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4022, i8* %4023, align 1
  %4024 = lshr i32 %4009, 31
  %4025 = xor i32 %4021, %4024
  %4026 = add i32 %4025, %4024
  %4027 = icmp eq i32 %4026, 2
  %4028 = zext i1 %4027 to i8
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4028, i8* %4029, align 1
  store %struct.Memory* %loadMem_475ba3, %struct.Memory** %MEMORY
  %loadMem_475ba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4031 = getelementptr inbounds %struct.GPR, %struct.GPR* %4030, i32 0, i32 33
  %4032 = getelementptr inbounds %struct.Reg, %struct.Reg* %4031, i32 0, i32 0
  %PC.i2566 = bitcast %union.anon* %4032 to i64*
  %4033 = load i64, i64* %PC.i2566
  %4034 = add i64 %4033, 126
  %4035 = load i64, i64* %PC.i2566
  %4036 = add i64 %4035, 6
  %4037 = load i64, i64* %PC.i2566
  %4038 = add i64 %4037, 6
  store i64 %4038, i64* %PC.i2566
  %4039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4040 = load i8, i8* %4039, align 1
  %4041 = icmp ne i8 %4040, 0
  %4042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4043 = load i8, i8* %4042, align 1
  %4044 = icmp ne i8 %4043, 0
  %4045 = xor i1 %4041, %4044
  %4046 = zext i1 %4045 to i8
  store i8 %4046, i8* %BRANCH_TAKEN, align 1
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4048 = select i1 %4045, i64 %4034, i64 %4036
  store i64 %4048, i64* %4047, align 8
  store %struct.Memory* %loadMem_475ba7, %struct.Memory** %MEMORY
  %loadBr_475ba7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475ba7 = icmp eq i8 %loadBr_475ba7, 1
  br i1 %cmpBr_475ba7, label %block_.L_475c25, label %block_475bad

block_475bad:                                     ; preds = %block_.L_475ba3
  %loadMem_475bad = load %struct.Memory*, %struct.Memory** %MEMORY
  %4049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4050 = getelementptr inbounds %struct.GPR, %struct.GPR* %4049, i32 0, i32 33
  %4051 = getelementptr inbounds %struct.Reg, %struct.Reg* %4050, i32 0, i32 0
  %PC.i2564 = bitcast %union.anon* %4051 to i64*
  %4052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4053 = getelementptr inbounds %struct.GPR, %struct.GPR* %4052, i32 0, i32 15
  %4054 = getelementptr inbounds %struct.Reg, %struct.Reg* %4053, i32 0, i32 0
  %RBP.i2565 = bitcast %union.anon* %4054 to i64*
  %4055 = load i64, i64* %RBP.i2565
  %4056 = sub i64 %4055, 224
  %4057 = load i64, i64* %PC.i2564
  %4058 = add i64 %4057, 7
  store i64 %4058, i64* %PC.i2564
  %4059 = inttoptr i64 %4056 to i32*
  %4060 = load i32, i32* %4059
  %4061 = sub i32 %4060, -1
  %4062 = icmp ult i32 %4060, -1
  %4063 = zext i1 %4062 to i8
  %4064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4063, i8* %4064, align 1
  %4065 = and i32 %4061, 255
  %4066 = call i32 @llvm.ctpop.i32(i32 %4065)
  %4067 = trunc i32 %4066 to i8
  %4068 = and i8 %4067, 1
  %4069 = xor i8 %4068, 1
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4069, i8* %4070, align 1
  %4071 = xor i32 %4060, -1
  %4072 = xor i32 %4071, %4061
  %4073 = lshr i32 %4072, 4
  %4074 = trunc i32 %4073 to i8
  %4075 = and i8 %4074, 1
  %4076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4075, i8* %4076, align 1
  %4077 = icmp eq i32 %4061, 0
  %4078 = zext i1 %4077 to i8
  %4079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4078, i8* %4079, align 1
  %4080 = lshr i32 %4061, 31
  %4081 = trunc i32 %4080 to i8
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4081, i8* %4082, align 1
  %4083 = lshr i32 %4060, 31
  %4084 = xor i32 %4083, 1
  %4085 = xor i32 %4080, %4083
  %4086 = add i32 %4085, %4084
  %4087 = icmp eq i32 %4086, 2
  %4088 = zext i1 %4087 to i8
  %4089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4088, i8* %4089, align 1
  store %struct.Memory* %loadMem_475bad, %struct.Memory** %MEMORY
  %loadMem_475bb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4091 = getelementptr inbounds %struct.GPR, %struct.GPR* %4090, i32 0, i32 33
  %4092 = getelementptr inbounds %struct.Reg, %struct.Reg* %4091, i32 0, i32 0
  %PC.i2563 = bitcast %union.anon* %4092 to i64*
  %4093 = load i64, i64* %PC.i2563
  %4094 = add i64 %4093, 11
  %4095 = load i64, i64* %PC.i2563
  %4096 = add i64 %4095, 6
  %4097 = load i64, i64* %PC.i2563
  %4098 = add i64 %4097, 6
  store i64 %4098, i64* %PC.i2563
  %4099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4100 = load i8, i8* %4099, align 1
  store i8 %4100, i8* %BRANCH_TAKEN, align 1
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4102 = icmp ne i8 %4100, 0
  %4103 = select i1 %4102, i64 %4094, i64 %4096
  store i64 %4103, i64* %4101, align 8
  store %struct.Memory* %loadMem_475bb4, %struct.Memory** %MEMORY
  %loadBr_475bb4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475bb4 = icmp eq i8 %loadBr_475bb4, 1
  br i1 %cmpBr_475bb4, label %block_.L_475bbf, label %block_475bba

block_475bba:                                     ; preds = %block_475bad
  %loadMem_475bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %4104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4105 = getelementptr inbounds %struct.GPR, %struct.GPR* %4104, i32 0, i32 33
  %4106 = getelementptr inbounds %struct.Reg, %struct.Reg* %4105, i32 0, i32 0
  %PC.i2562 = bitcast %union.anon* %4106 to i64*
  %4107 = load i64, i64* %PC.i2562
  %4108 = add i64 %4107, 107
  %4109 = load i64, i64* %PC.i2562
  %4110 = add i64 %4109, 5
  store i64 %4110, i64* %PC.i2562
  %4111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4108, i64* %4111, align 8
  store %struct.Memory* %loadMem_475bba, %struct.Memory** %MEMORY
  br label %block_.L_475c25

block_.L_475bbf:                                  ; preds = %block_475bad
  %loadMem_475bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4113 = getelementptr inbounds %struct.GPR, %struct.GPR* %4112, i32 0, i32 33
  %4114 = getelementptr inbounds %struct.Reg, %struct.Reg* %4113, i32 0, i32 0
  %PC.i2560 = bitcast %union.anon* %4114 to i64*
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4116 = getelementptr inbounds %struct.GPR, %struct.GPR* %4115, i32 0, i32 15
  %4117 = getelementptr inbounds %struct.Reg, %struct.Reg* %4116, i32 0, i32 0
  %RBP.i2561 = bitcast %union.anon* %4117 to i64*
  %4118 = load i64, i64* %RBP.i2561
  %4119 = sub i64 %4118, 40
  %4120 = load i64, i64* %PC.i2560
  %4121 = add i64 %4120, 7
  store i64 %4121, i64* %PC.i2560
  %4122 = inttoptr i64 %4119 to i32*
  store i32 0, i32* %4122
  store %struct.Memory* %loadMem_475bbf, %struct.Memory** %MEMORY
  br label %block_.L_475bc6

block_.L_475bc6:                                  ; preds = %block_.L_475c04, %block_.L_475bbf
  %loadMem_475bc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4124 = getelementptr inbounds %struct.GPR, %struct.GPR* %4123, i32 0, i32 33
  %4125 = getelementptr inbounds %struct.Reg, %struct.Reg* %4124, i32 0, i32 0
  %PC.i2557 = bitcast %union.anon* %4125 to i64*
  %4126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4127 = getelementptr inbounds %struct.GPR, %struct.GPR* %4126, i32 0, i32 1
  %4128 = getelementptr inbounds %struct.Reg, %struct.Reg* %4127, i32 0, i32 0
  %RAX.i2558 = bitcast %union.anon* %4128 to i64*
  %4129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4130 = getelementptr inbounds %struct.GPR, %struct.GPR* %4129, i32 0, i32 15
  %4131 = getelementptr inbounds %struct.Reg, %struct.Reg* %4130, i32 0, i32 0
  %RBP.i2559 = bitcast %union.anon* %4131 to i64*
  %4132 = load i64, i64* %RBP.i2559
  %4133 = sub i64 %4132, 40
  %4134 = load i64, i64* %PC.i2557
  %4135 = add i64 %4134, 3
  store i64 %4135, i64* %PC.i2557
  %4136 = inttoptr i64 %4133 to i32*
  %4137 = load i32, i32* %4136
  %4138 = zext i32 %4137 to i64
  store i64 %4138, i64* %RAX.i2558, align 8
  store %struct.Memory* %loadMem_475bc6, %struct.Memory** %MEMORY
  %loadMem_475bc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4140 = getelementptr inbounds %struct.GPR, %struct.GPR* %4139, i32 0, i32 33
  %4141 = getelementptr inbounds %struct.Reg, %struct.Reg* %4140, i32 0, i32 0
  %PC.i2555 = bitcast %union.anon* %4141 to i64*
  %4142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4143 = getelementptr inbounds %struct.GPR, %struct.GPR* %4142, i32 0, i32 1
  %4144 = getelementptr inbounds %struct.Reg, %struct.Reg* %4143, i32 0, i32 0
  %EAX.i2556 = bitcast %union.anon* %4144 to i32*
  %4145 = load i32, i32* %EAX.i2556
  %4146 = zext i32 %4145 to i64
  %4147 = load i64, i64* %PC.i2555
  %4148 = add i64 %4147, 7
  store i64 %4148, i64* %PC.i2555
  %4149 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %4150 = sub i32 %4145, %4149
  %4151 = icmp ult i32 %4145, %4149
  %4152 = zext i1 %4151 to i8
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4152, i8* %4153, align 1
  %4154 = and i32 %4150, 255
  %4155 = call i32 @llvm.ctpop.i32(i32 %4154)
  %4156 = trunc i32 %4155 to i8
  %4157 = and i8 %4156, 1
  %4158 = xor i8 %4157, 1
  %4159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4158, i8* %4159, align 1
  %4160 = xor i32 %4149, %4145
  %4161 = xor i32 %4160, %4150
  %4162 = lshr i32 %4161, 4
  %4163 = trunc i32 %4162 to i8
  %4164 = and i8 %4163, 1
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4164, i8* %4165, align 1
  %4166 = icmp eq i32 %4150, 0
  %4167 = zext i1 %4166 to i8
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4167, i8* %4168, align 1
  %4169 = lshr i32 %4150, 31
  %4170 = trunc i32 %4169 to i8
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4170, i8* %4171, align 1
  %4172 = lshr i32 %4145, 31
  %4173 = lshr i32 %4149, 31
  %4174 = xor i32 %4173, %4172
  %4175 = xor i32 %4169, %4172
  %4176 = add i32 %4175, %4174
  %4177 = icmp eq i32 %4176, 2
  %4178 = zext i1 %4177 to i8
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4178, i8* %4179, align 1
  store %struct.Memory* %loadMem_475bc9, %struct.Memory** %MEMORY
  %loadMem_475bd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4181 = getelementptr inbounds %struct.GPR, %struct.GPR* %4180, i32 0, i32 33
  %4182 = getelementptr inbounds %struct.Reg, %struct.Reg* %4181, i32 0, i32 0
  %PC.i2554 = bitcast %union.anon* %4182 to i64*
  %4183 = load i64, i64* %PC.i2554
  %4184 = add i64 %4183, 66
  %4185 = load i64, i64* %PC.i2554
  %4186 = add i64 %4185, 6
  %4187 = load i64, i64* %PC.i2554
  %4188 = add i64 %4187, 6
  store i64 %4188, i64* %PC.i2554
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4190 = load i8, i8* %4189, align 1
  %4191 = icmp ne i8 %4190, 0
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4193 = load i8, i8* %4192, align 1
  %4194 = icmp ne i8 %4193, 0
  %4195 = xor i1 %4191, %4194
  %4196 = xor i1 %4195, true
  %4197 = zext i1 %4196 to i8
  store i8 %4197, i8* %BRANCH_TAKEN, align 1
  %4198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4199 = select i1 %4195, i64 %4186, i64 %4184
  store i64 %4199, i64* %4198, align 8
  store %struct.Memory* %loadMem_475bd0, %struct.Memory** %MEMORY
  %loadBr_475bd0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475bd0 = icmp eq i8 %loadBr_475bd0, 1
  br i1 %cmpBr_475bd0, label %block_.L_475c12, label %block_475bd6

block_475bd6:                                     ; preds = %block_.L_475bc6
  %loadMem_475bd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4201 = getelementptr inbounds %struct.GPR, %struct.GPR* %4200, i32 0, i32 33
  %4202 = getelementptr inbounds %struct.Reg, %struct.Reg* %4201, i32 0, i32 0
  %PC.i2551 = bitcast %union.anon* %4202 to i64*
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4204 = getelementptr inbounds %struct.GPR, %struct.GPR* %4203, i32 0, i32 1
  %4205 = getelementptr inbounds %struct.Reg, %struct.Reg* %4204, i32 0, i32 0
  %RAX.i2552 = bitcast %union.anon* %4205 to i64*
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4207 = getelementptr inbounds %struct.GPR, %struct.GPR* %4206, i32 0, i32 15
  %4208 = getelementptr inbounds %struct.Reg, %struct.Reg* %4207, i32 0, i32 0
  %RBP.i2553 = bitcast %union.anon* %4208 to i64*
  %4209 = load i64, i64* %RBP.i2553
  %4210 = sub i64 %4209, 36
  %4211 = load i64, i64* %PC.i2551
  %4212 = add i64 %4211, 4
  store i64 %4212, i64* %PC.i2551
  %4213 = inttoptr i64 %4210 to i32*
  %4214 = load i32, i32* %4213
  %4215 = sext i32 %4214 to i64
  %4216 = mul i64 %4215, 20
  %4217 = trunc i64 %4216 to i32
  %4218 = and i64 %4216, 4294967295
  store i64 %4218, i64* %RAX.i2552, align 8
  %4219 = shl i64 %4216, 32
  %4220 = ashr exact i64 %4219, 32
  %4221 = icmp ne i64 %4220, %4216
  %4222 = zext i1 %4221 to i8
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4222, i8* %4223, align 1
  %4224 = and i32 %4217, 255
  %4225 = call i32 @llvm.ctpop.i32(i32 %4224)
  %4226 = trunc i32 %4225 to i8
  %4227 = and i8 %4226, 1
  %4228 = xor i8 %4227, 1
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4228, i8* %4229, align 1
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4230, align 1
  %4231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4231, align 1
  %4232 = lshr i32 %4217, 31
  %4233 = trunc i32 %4232 to i8
  %4234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4233, i8* %4234, align 1
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4222, i8* %4235, align 1
  store %struct.Memory* %loadMem_475bd6, %struct.Memory** %MEMORY
  %loadMem_475bda = load %struct.Memory*, %struct.Memory** %MEMORY
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4237 = getelementptr inbounds %struct.GPR, %struct.GPR* %4236, i32 0, i32 33
  %4238 = getelementptr inbounds %struct.Reg, %struct.Reg* %4237, i32 0, i32 0
  %PC.i2549 = bitcast %union.anon* %4238 to i64*
  %4239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4240 = getelementptr inbounds %struct.GPR, %struct.GPR* %4239, i32 0, i32 1
  %4241 = getelementptr inbounds %struct.Reg, %struct.Reg* %4240, i32 0, i32 0
  %RAX.i2550 = bitcast %union.anon* %4241 to i64*
  %4242 = load i64, i64* %RAX.i2550
  %4243 = load i64, i64* %PC.i2549
  %4244 = add i64 %4243, 3
  store i64 %4244, i64* %PC.i2549
  %4245 = trunc i64 %4242 to i32
  %4246 = add i32 21, %4245
  %4247 = zext i32 %4246 to i64
  store i64 %4247, i64* %RAX.i2550, align 8
  %4248 = icmp ult i32 %4246, %4245
  %4249 = icmp ult i32 %4246, 21
  %4250 = or i1 %4248, %4249
  %4251 = zext i1 %4250 to i8
  %4252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4251, i8* %4252, align 1
  %4253 = and i32 %4246, 255
  %4254 = call i32 @llvm.ctpop.i32(i32 %4253)
  %4255 = trunc i32 %4254 to i8
  %4256 = and i8 %4255, 1
  %4257 = xor i8 %4256, 1
  %4258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4257, i8* %4258, align 1
  %4259 = xor i64 21, %4242
  %4260 = trunc i64 %4259 to i32
  %4261 = xor i32 %4260, %4246
  %4262 = lshr i32 %4261, 4
  %4263 = trunc i32 %4262 to i8
  %4264 = and i8 %4263, 1
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4264, i8* %4265, align 1
  %4266 = icmp eq i32 %4246, 0
  %4267 = zext i1 %4266 to i8
  %4268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4267, i8* %4268, align 1
  %4269 = lshr i32 %4246, 31
  %4270 = trunc i32 %4269 to i8
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4270, i8* %4271, align 1
  %4272 = lshr i32 %4245, 31
  %4273 = xor i32 %4269, %4272
  %4274 = add i32 %4273, %4269
  %4275 = icmp eq i32 %4274, 2
  %4276 = zext i1 %4275 to i8
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4276, i8* %4277, align 1
  store %struct.Memory* %loadMem_475bda, %struct.Memory** %MEMORY
  %loadMem_475bdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4279 = getelementptr inbounds %struct.GPR, %struct.GPR* %4278, i32 0, i32 33
  %4280 = getelementptr inbounds %struct.Reg, %struct.Reg* %4279, i32 0, i32 0
  %PC.i2546 = bitcast %union.anon* %4280 to i64*
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4282 = getelementptr inbounds %struct.GPR, %struct.GPR* %4281, i32 0, i32 1
  %4283 = getelementptr inbounds %struct.Reg, %struct.Reg* %4282, i32 0, i32 0
  %RAX.i2547 = bitcast %union.anon* %4283 to i64*
  %4284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4285 = getelementptr inbounds %struct.GPR, %struct.GPR* %4284, i32 0, i32 15
  %4286 = getelementptr inbounds %struct.Reg, %struct.Reg* %4285, i32 0, i32 0
  %RBP.i2548 = bitcast %union.anon* %4286 to i64*
  %4287 = load i64, i64* %RAX.i2547
  %4288 = load i64, i64* %RBP.i2548
  %4289 = sub i64 %4288, 40
  %4290 = load i64, i64* %PC.i2546
  %4291 = add i64 %4290, 3
  store i64 %4291, i64* %PC.i2546
  %4292 = trunc i64 %4287 to i32
  %4293 = inttoptr i64 %4289 to i32*
  %4294 = load i32, i32* %4293
  %4295 = add i32 %4294, %4292
  %4296 = zext i32 %4295 to i64
  store i64 %4296, i64* %RAX.i2547, align 8
  %4297 = icmp ult i32 %4295, %4292
  %4298 = icmp ult i32 %4295, %4294
  %4299 = or i1 %4297, %4298
  %4300 = zext i1 %4299 to i8
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4300, i8* %4301, align 1
  %4302 = and i32 %4295, 255
  %4303 = call i32 @llvm.ctpop.i32(i32 %4302)
  %4304 = trunc i32 %4303 to i8
  %4305 = and i8 %4304, 1
  %4306 = xor i8 %4305, 1
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4306, i8* %4307, align 1
  %4308 = xor i32 %4294, %4292
  %4309 = xor i32 %4308, %4295
  %4310 = lshr i32 %4309, 4
  %4311 = trunc i32 %4310 to i8
  %4312 = and i8 %4311, 1
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4312, i8* %4313, align 1
  %4314 = icmp eq i32 %4295, 0
  %4315 = zext i1 %4314 to i8
  %4316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4315, i8* %4316, align 1
  %4317 = lshr i32 %4295, 31
  %4318 = trunc i32 %4317 to i8
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4318, i8* %4319, align 1
  %4320 = lshr i32 %4292, 31
  %4321 = lshr i32 %4294, 31
  %4322 = xor i32 %4317, %4320
  %4323 = xor i32 %4317, %4321
  %4324 = add i32 %4322, %4323
  %4325 = icmp eq i32 %4324, 2
  %4326 = zext i1 %4325 to i8
  %4327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4326, i8* %4327, align 1
  store %struct.Memory* %loadMem_475bdd, %struct.Memory** %MEMORY
  %loadMem_475be0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4329 = getelementptr inbounds %struct.GPR, %struct.GPR* %4328, i32 0, i32 33
  %4330 = getelementptr inbounds %struct.Reg, %struct.Reg* %4329, i32 0, i32 0
  %PC.i2543 = bitcast %union.anon* %4330 to i64*
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4332 = getelementptr inbounds %struct.GPR, %struct.GPR* %4331, i32 0, i32 1
  %4333 = getelementptr inbounds %struct.Reg, %struct.Reg* %4332, i32 0, i32 0
  %EAX.i2544 = bitcast %union.anon* %4333 to i32*
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4335 = getelementptr inbounds %struct.GPR, %struct.GPR* %4334, i32 0, i32 5
  %4336 = getelementptr inbounds %struct.Reg, %struct.Reg* %4335, i32 0, i32 0
  %RCX.i2545 = bitcast %union.anon* %4336 to i64*
  %4337 = load i32, i32* %EAX.i2544
  %4338 = zext i32 %4337 to i64
  %4339 = load i64, i64* %PC.i2543
  %4340 = add i64 %4339, 3
  store i64 %4340, i64* %PC.i2543
  %4341 = shl i64 %4338, 32
  %4342 = ashr exact i64 %4341, 32
  store i64 %4342, i64* %RCX.i2545, align 8
  store %struct.Memory* %loadMem_475be0, %struct.Memory** %MEMORY
  %loadMem_475be3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4344 = getelementptr inbounds %struct.GPR, %struct.GPR* %4343, i32 0, i32 33
  %4345 = getelementptr inbounds %struct.Reg, %struct.Reg* %4344, i32 0, i32 0
  %PC.i2540 = bitcast %union.anon* %4345 to i64*
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4347 = getelementptr inbounds %struct.GPR, %struct.GPR* %4346, i32 0, i32 5
  %4348 = getelementptr inbounds %struct.Reg, %struct.Reg* %4347, i32 0, i32 0
  %RCX.i2541 = bitcast %union.anon* %4348 to i64*
  %4349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4350 = getelementptr inbounds %struct.GPR, %struct.GPR* %4349, i32 0, i32 15
  %4351 = getelementptr inbounds %struct.Reg, %struct.Reg* %4350, i32 0, i32 0
  %RBP.i2542 = bitcast %union.anon* %4351 to i64*
  %4352 = load i64, i64* %RBP.i2542
  %4353 = load i64, i64* %RCX.i2541
  %4354 = add i64 %4352, -1040
  %4355 = add i64 %4354, %4353
  %4356 = load i64, i64* %PC.i2540
  %4357 = add i64 %4356, 8
  store i64 %4357, i64* %PC.i2540
  %4358 = inttoptr i64 %4355 to i8*
  %4359 = load i8, i8* %4358
  %4360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4360, align 1
  %4361 = zext i8 %4359 to i32
  %4362 = call i32 @llvm.ctpop.i32(i32 %4361)
  %4363 = trunc i32 %4362 to i8
  %4364 = and i8 %4363, 1
  %4365 = xor i8 %4364, 1
  %4366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4365, i8* %4366, align 1
  %4367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4367, align 1
  %4368 = icmp eq i8 %4359, 0
  %4369 = zext i1 %4368 to i8
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4369, i8* %4370, align 1
  %4371 = lshr i8 %4359, 7
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4371, i8* %4372, align 1
  %4373 = lshr i8 %4359, 7
  %4374 = xor i8 %4371, %4373
  %4375 = add i8 %4374, %4373
  %4376 = icmp eq i8 %4375, 2
  %4377 = zext i1 %4376 to i8
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4377, i8* %4378, align 1
  store %struct.Memory* %loadMem_475be3, %struct.Memory** %MEMORY
  %loadMem_475beb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4380 = getelementptr inbounds %struct.GPR, %struct.GPR* %4379, i32 0, i32 33
  %4381 = getelementptr inbounds %struct.Reg, %struct.Reg* %4380, i32 0, i32 0
  %PC.i2539 = bitcast %union.anon* %4381 to i64*
  %4382 = load i64, i64* %PC.i2539
  %4383 = add i64 %4382, 20
  %4384 = load i64, i64* %PC.i2539
  %4385 = add i64 %4384, 6
  %4386 = load i64, i64* %PC.i2539
  %4387 = add i64 %4386, 6
  store i64 %4387, i64* %PC.i2539
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4389 = load i8, i8* %4388, align 1
  store i8 %4389, i8* %BRANCH_TAKEN, align 1
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4391 = icmp ne i8 %4389, 0
  %4392 = select i1 %4391, i64 %4383, i64 %4385
  store i64 %4392, i64* %4390, align 8
  store %struct.Memory* %loadMem_475beb, %struct.Memory** %MEMORY
  %loadBr_475beb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475beb = icmp eq i8 %loadBr_475beb, 1
  br i1 %cmpBr_475beb, label %block_.L_475bff, label %block_475bf1

block_475bf1:                                     ; preds = %block_475bd6
  %loadMem_475bf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4394 = getelementptr inbounds %struct.GPR, %struct.GPR* %4393, i32 0, i32 33
  %4395 = getelementptr inbounds %struct.Reg, %struct.Reg* %4394, i32 0, i32 0
  %PC.i2536 = bitcast %union.anon* %4395 to i64*
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4397 = getelementptr inbounds %struct.GPR, %struct.GPR* %4396, i32 0, i32 1
  %4398 = getelementptr inbounds %struct.Reg, %struct.Reg* %4397, i32 0, i32 0
  %RAX.i2537 = bitcast %union.anon* %4398 to i64*
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4400 = getelementptr inbounds %struct.GPR, %struct.GPR* %4399, i32 0, i32 15
  %4401 = getelementptr inbounds %struct.Reg, %struct.Reg* %4400, i32 0, i32 0
  %RBP.i2538 = bitcast %union.anon* %4401 to i64*
  %4402 = load i64, i64* %RBP.i2538
  %4403 = sub i64 %4402, 36
  %4404 = load i64, i64* %PC.i2536
  %4405 = add i64 %4404, 3
  store i64 %4405, i64* %PC.i2536
  %4406 = inttoptr i64 %4403 to i32*
  %4407 = load i32, i32* %4406
  %4408 = zext i32 %4407 to i64
  store i64 %4408, i64* %RAX.i2537, align 8
  store %struct.Memory* %loadMem_475bf1, %struct.Memory** %MEMORY
  %loadMem_475bf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4410 = getelementptr inbounds %struct.GPR, %struct.GPR* %4409, i32 0, i32 33
  %4411 = getelementptr inbounds %struct.Reg, %struct.Reg* %4410, i32 0, i32 0
  %PC.i2533 = bitcast %union.anon* %4411 to i64*
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4413 = getelementptr inbounds %struct.GPR, %struct.GPR* %4412, i32 0, i32 1
  %4414 = getelementptr inbounds %struct.Reg, %struct.Reg* %4413, i32 0, i32 0
  %EAX.i2534 = bitcast %union.anon* %4414 to i32*
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4416 = getelementptr inbounds %struct.GPR, %struct.GPR* %4415, i32 0, i32 15
  %4417 = getelementptr inbounds %struct.Reg, %struct.Reg* %4416, i32 0, i32 0
  %RBP.i2535 = bitcast %union.anon* %4417 to i64*
  %4418 = load i64, i64* %RBP.i2535
  %4419 = sub i64 %4418, 224
  %4420 = load i32, i32* %EAX.i2534
  %4421 = zext i32 %4420 to i64
  %4422 = load i64, i64* %PC.i2533
  %4423 = add i64 %4422, 6
  store i64 %4423, i64* %PC.i2533
  %4424 = inttoptr i64 %4419 to i32*
  store i32 %4420, i32* %4424
  store %struct.Memory* %loadMem_475bf4, %struct.Memory** %MEMORY
  %loadMem_475bfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4426 = getelementptr inbounds %struct.GPR, %struct.GPR* %4425, i32 0, i32 33
  %4427 = getelementptr inbounds %struct.Reg, %struct.Reg* %4426, i32 0, i32 0
  %PC.i2532 = bitcast %union.anon* %4427 to i64*
  %4428 = load i64, i64* %PC.i2532
  %4429 = add i64 %4428, 24
  %4430 = load i64, i64* %PC.i2532
  %4431 = add i64 %4430, 5
  store i64 %4431, i64* %PC.i2532
  %4432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4429, i64* %4432, align 8
  store %struct.Memory* %loadMem_475bfa, %struct.Memory** %MEMORY
  br label %block_.L_475c12

block_.L_475bff:                                  ; preds = %block_475bd6
  %loadMem_475bff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4434 = getelementptr inbounds %struct.GPR, %struct.GPR* %4433, i32 0, i32 33
  %4435 = getelementptr inbounds %struct.Reg, %struct.Reg* %4434, i32 0, i32 0
  %PC.i2531 = bitcast %union.anon* %4435 to i64*
  %4436 = load i64, i64* %PC.i2531
  %4437 = add i64 %4436, 5
  %4438 = load i64, i64* %PC.i2531
  %4439 = add i64 %4438, 5
  store i64 %4439, i64* %PC.i2531
  %4440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4437, i64* %4440, align 8
  store %struct.Memory* %loadMem_475bff, %struct.Memory** %MEMORY
  br label %block_.L_475c04

block_.L_475c04:                                  ; preds = %block_.L_475bff
  %loadMem_475c04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4442 = getelementptr inbounds %struct.GPR, %struct.GPR* %4441, i32 0, i32 33
  %4443 = getelementptr inbounds %struct.Reg, %struct.Reg* %4442, i32 0, i32 0
  %PC.i2528 = bitcast %union.anon* %4443 to i64*
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4445 = getelementptr inbounds %struct.GPR, %struct.GPR* %4444, i32 0, i32 1
  %4446 = getelementptr inbounds %struct.Reg, %struct.Reg* %4445, i32 0, i32 0
  %RAX.i2529 = bitcast %union.anon* %4446 to i64*
  %4447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4448 = getelementptr inbounds %struct.GPR, %struct.GPR* %4447, i32 0, i32 15
  %4449 = getelementptr inbounds %struct.Reg, %struct.Reg* %4448, i32 0, i32 0
  %RBP.i2530 = bitcast %union.anon* %4449 to i64*
  %4450 = load i64, i64* %RBP.i2530
  %4451 = sub i64 %4450, 40
  %4452 = load i64, i64* %PC.i2528
  %4453 = add i64 %4452, 3
  store i64 %4453, i64* %PC.i2528
  %4454 = inttoptr i64 %4451 to i32*
  %4455 = load i32, i32* %4454
  %4456 = zext i32 %4455 to i64
  store i64 %4456, i64* %RAX.i2529, align 8
  store %struct.Memory* %loadMem_475c04, %struct.Memory** %MEMORY
  %loadMem_475c07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4458 = getelementptr inbounds %struct.GPR, %struct.GPR* %4457, i32 0, i32 33
  %4459 = getelementptr inbounds %struct.Reg, %struct.Reg* %4458, i32 0, i32 0
  %PC.i2526 = bitcast %union.anon* %4459 to i64*
  %4460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4461 = getelementptr inbounds %struct.GPR, %struct.GPR* %4460, i32 0, i32 1
  %4462 = getelementptr inbounds %struct.Reg, %struct.Reg* %4461, i32 0, i32 0
  %RAX.i2527 = bitcast %union.anon* %4462 to i64*
  %4463 = load i64, i64* %RAX.i2527
  %4464 = load i64, i64* %PC.i2526
  %4465 = add i64 %4464, 3
  store i64 %4465, i64* %PC.i2526
  %4466 = trunc i64 %4463 to i32
  %4467 = add i32 1, %4466
  %4468 = zext i32 %4467 to i64
  store i64 %4468, i64* %RAX.i2527, align 8
  %4469 = icmp ult i32 %4467, %4466
  %4470 = icmp ult i32 %4467, 1
  %4471 = or i1 %4469, %4470
  %4472 = zext i1 %4471 to i8
  %4473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4472, i8* %4473, align 1
  %4474 = and i32 %4467, 255
  %4475 = call i32 @llvm.ctpop.i32(i32 %4474)
  %4476 = trunc i32 %4475 to i8
  %4477 = and i8 %4476, 1
  %4478 = xor i8 %4477, 1
  %4479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4478, i8* %4479, align 1
  %4480 = xor i64 1, %4463
  %4481 = trunc i64 %4480 to i32
  %4482 = xor i32 %4481, %4467
  %4483 = lshr i32 %4482, 4
  %4484 = trunc i32 %4483 to i8
  %4485 = and i8 %4484, 1
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4485, i8* %4486, align 1
  %4487 = icmp eq i32 %4467, 0
  %4488 = zext i1 %4487 to i8
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4488, i8* %4489, align 1
  %4490 = lshr i32 %4467, 31
  %4491 = trunc i32 %4490 to i8
  %4492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4491, i8* %4492, align 1
  %4493 = lshr i32 %4466, 31
  %4494 = xor i32 %4490, %4493
  %4495 = add i32 %4494, %4490
  %4496 = icmp eq i32 %4495, 2
  %4497 = zext i1 %4496 to i8
  %4498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4497, i8* %4498, align 1
  store %struct.Memory* %loadMem_475c07, %struct.Memory** %MEMORY
  %loadMem_475c0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4500 = getelementptr inbounds %struct.GPR, %struct.GPR* %4499, i32 0, i32 33
  %4501 = getelementptr inbounds %struct.Reg, %struct.Reg* %4500, i32 0, i32 0
  %PC.i2523 = bitcast %union.anon* %4501 to i64*
  %4502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4503 = getelementptr inbounds %struct.GPR, %struct.GPR* %4502, i32 0, i32 1
  %4504 = getelementptr inbounds %struct.Reg, %struct.Reg* %4503, i32 0, i32 0
  %EAX.i2524 = bitcast %union.anon* %4504 to i32*
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4506 = getelementptr inbounds %struct.GPR, %struct.GPR* %4505, i32 0, i32 15
  %4507 = getelementptr inbounds %struct.Reg, %struct.Reg* %4506, i32 0, i32 0
  %RBP.i2525 = bitcast %union.anon* %4507 to i64*
  %4508 = load i64, i64* %RBP.i2525
  %4509 = sub i64 %4508, 40
  %4510 = load i32, i32* %EAX.i2524
  %4511 = zext i32 %4510 to i64
  %4512 = load i64, i64* %PC.i2523
  %4513 = add i64 %4512, 3
  store i64 %4513, i64* %PC.i2523
  %4514 = inttoptr i64 %4509 to i32*
  store i32 %4510, i32* %4514
  store %struct.Memory* %loadMem_475c0a, %struct.Memory** %MEMORY
  %loadMem_475c0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4516 = getelementptr inbounds %struct.GPR, %struct.GPR* %4515, i32 0, i32 33
  %4517 = getelementptr inbounds %struct.Reg, %struct.Reg* %4516, i32 0, i32 0
  %PC.i2522 = bitcast %union.anon* %4517 to i64*
  %4518 = load i64, i64* %PC.i2522
  %4519 = add i64 %4518, -71
  %4520 = load i64, i64* %PC.i2522
  %4521 = add i64 %4520, 5
  store i64 %4521, i64* %PC.i2522
  %4522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4519, i64* %4522, align 8
  store %struct.Memory* %loadMem_475c0d, %struct.Memory** %MEMORY
  br label %block_.L_475bc6

block_.L_475c12:                                  ; preds = %block_475bf1, %block_.L_475bc6
  %loadMem_475c12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4524 = getelementptr inbounds %struct.GPR, %struct.GPR* %4523, i32 0, i32 33
  %4525 = getelementptr inbounds %struct.Reg, %struct.Reg* %4524, i32 0, i32 0
  %PC.i2521 = bitcast %union.anon* %4525 to i64*
  %4526 = load i64, i64* %PC.i2521
  %4527 = add i64 %4526, 5
  %4528 = load i64, i64* %PC.i2521
  %4529 = add i64 %4528, 5
  store i64 %4529, i64* %PC.i2521
  %4530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4527, i64* %4530, align 8
  store %struct.Memory* %loadMem_475c12, %struct.Memory** %MEMORY
  br label %block_.L_475c17

block_.L_475c17:                                  ; preds = %block_.L_475c12
  %loadMem_475c17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4532 = getelementptr inbounds %struct.GPR, %struct.GPR* %4531, i32 0, i32 33
  %4533 = getelementptr inbounds %struct.Reg, %struct.Reg* %4532, i32 0, i32 0
  %PC.i2518 = bitcast %union.anon* %4533 to i64*
  %4534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4535 = getelementptr inbounds %struct.GPR, %struct.GPR* %4534, i32 0, i32 1
  %4536 = getelementptr inbounds %struct.Reg, %struct.Reg* %4535, i32 0, i32 0
  %RAX.i2519 = bitcast %union.anon* %4536 to i64*
  %4537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4538 = getelementptr inbounds %struct.GPR, %struct.GPR* %4537, i32 0, i32 15
  %4539 = getelementptr inbounds %struct.Reg, %struct.Reg* %4538, i32 0, i32 0
  %RBP.i2520 = bitcast %union.anon* %4539 to i64*
  %4540 = load i64, i64* %RBP.i2520
  %4541 = sub i64 %4540, 36
  %4542 = load i64, i64* %PC.i2518
  %4543 = add i64 %4542, 3
  store i64 %4543, i64* %PC.i2518
  %4544 = inttoptr i64 %4541 to i32*
  %4545 = load i32, i32* %4544
  %4546 = zext i32 %4545 to i64
  store i64 %4546, i64* %RAX.i2519, align 8
  store %struct.Memory* %loadMem_475c17, %struct.Memory** %MEMORY
  %loadMem_475c1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4548 = getelementptr inbounds %struct.GPR, %struct.GPR* %4547, i32 0, i32 33
  %4549 = getelementptr inbounds %struct.Reg, %struct.Reg* %4548, i32 0, i32 0
  %PC.i2516 = bitcast %union.anon* %4549 to i64*
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4551 = getelementptr inbounds %struct.GPR, %struct.GPR* %4550, i32 0, i32 1
  %4552 = getelementptr inbounds %struct.Reg, %struct.Reg* %4551, i32 0, i32 0
  %RAX.i2517 = bitcast %union.anon* %4552 to i64*
  %4553 = load i64, i64* %RAX.i2517
  %4554 = load i64, i64* %PC.i2516
  %4555 = add i64 %4554, 3
  store i64 %4555, i64* %PC.i2516
  %4556 = trunc i64 %4553 to i32
  %4557 = add i32 -1, %4556
  %4558 = zext i32 %4557 to i64
  store i64 %4558, i64* %RAX.i2517, align 8
  %4559 = icmp ult i32 %4557, %4556
  %4560 = icmp ult i32 %4557, -1
  %4561 = or i1 %4559, %4560
  %4562 = zext i1 %4561 to i8
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4562, i8* %4563, align 1
  %4564 = and i32 %4557, 255
  %4565 = call i32 @llvm.ctpop.i32(i32 %4564)
  %4566 = trunc i32 %4565 to i8
  %4567 = and i8 %4566, 1
  %4568 = xor i8 %4567, 1
  %4569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4568, i8* %4569, align 1
  %4570 = xor i64 -1, %4553
  %4571 = trunc i64 %4570 to i32
  %4572 = xor i32 %4571, %4557
  %4573 = lshr i32 %4572, 4
  %4574 = trunc i32 %4573 to i8
  %4575 = and i8 %4574, 1
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4575, i8* %4576, align 1
  %4577 = icmp eq i32 %4557, 0
  %4578 = zext i1 %4577 to i8
  %4579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4578, i8* %4579, align 1
  %4580 = lshr i32 %4557, 31
  %4581 = trunc i32 %4580 to i8
  %4582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4581, i8* %4582, align 1
  %4583 = lshr i32 %4556, 31
  %4584 = xor i32 %4580, %4583
  %4585 = xor i32 %4580, 1
  %4586 = add i32 %4584, %4585
  %4587 = icmp eq i32 %4586, 2
  %4588 = zext i1 %4587 to i8
  %4589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4588, i8* %4589, align 1
  store %struct.Memory* %loadMem_475c1a, %struct.Memory** %MEMORY
  %loadMem_475c1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4591 = getelementptr inbounds %struct.GPR, %struct.GPR* %4590, i32 0, i32 33
  %4592 = getelementptr inbounds %struct.Reg, %struct.Reg* %4591, i32 0, i32 0
  %PC.i2513 = bitcast %union.anon* %4592 to i64*
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4594 = getelementptr inbounds %struct.GPR, %struct.GPR* %4593, i32 0, i32 1
  %4595 = getelementptr inbounds %struct.Reg, %struct.Reg* %4594, i32 0, i32 0
  %EAX.i2514 = bitcast %union.anon* %4595 to i32*
  %4596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4597 = getelementptr inbounds %struct.GPR, %struct.GPR* %4596, i32 0, i32 15
  %4598 = getelementptr inbounds %struct.Reg, %struct.Reg* %4597, i32 0, i32 0
  %RBP.i2515 = bitcast %union.anon* %4598 to i64*
  %4599 = load i64, i64* %RBP.i2515
  %4600 = sub i64 %4599, 36
  %4601 = load i32, i32* %EAX.i2514
  %4602 = zext i32 %4601 to i64
  %4603 = load i64, i64* %PC.i2513
  %4604 = add i64 %4603, 3
  store i64 %4604, i64* %PC.i2513
  %4605 = inttoptr i64 %4600 to i32*
  store i32 %4601, i32* %4605
  store %struct.Memory* %loadMem_475c1d, %struct.Memory** %MEMORY
  %loadMem_475c20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4607 = getelementptr inbounds %struct.GPR, %struct.GPR* %4606, i32 0, i32 33
  %4608 = getelementptr inbounds %struct.Reg, %struct.Reg* %4607, i32 0, i32 0
  %PC.i2512 = bitcast %union.anon* %4608 to i64*
  %4609 = load i64, i64* %PC.i2512
  %4610 = add i64 %4609, -125
  %4611 = load i64, i64* %PC.i2512
  %4612 = add i64 %4611, 5
  store i64 %4612, i64* %PC.i2512
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4610, i64* %4613, align 8
  store %struct.Memory* %loadMem_475c20, %struct.Memory** %MEMORY
  br label %block_.L_475ba3

block_.L_475c25:                                  ; preds = %block_475bba, %block_.L_475ba3
  %loadMem_475c25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4615 = getelementptr inbounds %struct.GPR, %struct.GPR* %4614, i32 0, i32 33
  %4616 = getelementptr inbounds %struct.Reg, %struct.Reg* %4615, i32 0, i32 0
  %PC.i2510 = bitcast %union.anon* %4616 to i64*
  %4617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4618 = getelementptr inbounds %struct.GPR, %struct.GPR* %4617, i32 0, i32 15
  %4619 = getelementptr inbounds %struct.Reg, %struct.Reg* %4618, i32 0, i32 0
  %RBP.i2511 = bitcast %union.anon* %4619 to i64*
  %4620 = load i64, i64* %RBP.i2511
  %4621 = sub i64 %4620, 212
  %4622 = load i64, i64* %PC.i2510
  %4623 = add i64 %4622, 10
  store i64 %4623, i64* %PC.i2510
  %4624 = inttoptr i64 %4621 to i32*
  store i32 1, i32* %4624
  store %struct.Memory* %loadMem_475c25, %struct.Memory** %MEMORY
  br label %block_.L_475c2f

block_.L_475c2f:                                  ; preds = %block_.L_475ded, %block_.L_475c25
  %loadMem_475c2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4626 = getelementptr inbounds %struct.GPR, %struct.GPR* %4625, i32 0, i32 33
  %4627 = getelementptr inbounds %struct.Reg, %struct.Reg* %4626, i32 0, i32 0
  %PC.i2508 = bitcast %union.anon* %4627 to i64*
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4629 = getelementptr inbounds %struct.GPR, %struct.GPR* %4628, i32 0, i32 1
  %4630 = getelementptr inbounds %struct.Reg, %struct.Reg* %4629, i32 0, i32 0
  %RAX.i2509 = bitcast %union.anon* %4630 to i64*
  %4631 = load i64, i64* %PC.i2508
  %4632 = add i64 %4631, 5
  store i64 %4632, i64* %PC.i2508
  store i64 20, i64* %RAX.i2509, align 8
  store %struct.Memory* %loadMem_475c2f, %struct.Memory** %MEMORY
  %loadMem_475c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4634 = getelementptr inbounds %struct.GPR, %struct.GPR* %4633, i32 0, i32 33
  %4635 = getelementptr inbounds %struct.Reg, %struct.Reg* %4634, i32 0, i32 0
  %PC.i2505 = bitcast %union.anon* %4635 to i64*
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4637 = getelementptr inbounds %struct.GPR, %struct.GPR* %4636, i32 0, i32 5
  %4638 = getelementptr inbounds %struct.Reg, %struct.Reg* %4637, i32 0, i32 0
  %RCX.i2506 = bitcast %union.anon* %4638 to i64*
  %4639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4640 = getelementptr inbounds %struct.GPR, %struct.GPR* %4639, i32 0, i32 15
  %4641 = getelementptr inbounds %struct.Reg, %struct.Reg* %4640, i32 0, i32 0
  %RBP.i2507 = bitcast %union.anon* %4641 to i64*
  %4642 = load i64, i64* %RBP.i2507
  %4643 = sub i64 %4642, 212
  %4644 = load i64, i64* %PC.i2505
  %4645 = add i64 %4644, 6
  store i64 %4645, i64* %PC.i2505
  %4646 = inttoptr i64 %4643 to i32*
  %4647 = load i32, i32* %4646
  %4648 = zext i32 %4647 to i64
  store i64 %4648, i64* %RCX.i2506, align 8
  store %struct.Memory* %loadMem_475c34, %struct.Memory** %MEMORY
  %loadMem_475c3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4650 = getelementptr inbounds %struct.GPR, %struct.GPR* %4649, i32 0, i32 33
  %4651 = getelementptr inbounds %struct.Reg, %struct.Reg* %4650, i32 0, i32 0
  %PC.i2503 = bitcast %union.anon* %4651 to i64*
  %4652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4653 = getelementptr inbounds %struct.GPR, %struct.GPR* %4652, i32 0, i32 5
  %4654 = getelementptr inbounds %struct.Reg, %struct.Reg* %4653, i32 0, i32 0
  %RCX.i2504 = bitcast %union.anon* %4654 to i64*
  %4655 = load i64, i64* %RCX.i2504
  %4656 = load i64, i64* %PC.i2503
  %4657 = add i64 %4656, 3
  store i64 %4657, i64* %PC.i2503
  %4658 = trunc i64 %4655 to i32
  %4659 = sub i32 %4658, 1
  %4660 = zext i32 %4659 to i64
  store i64 %4660, i64* %RCX.i2504, align 8
  %4661 = icmp ult i32 %4658, 1
  %4662 = zext i1 %4661 to i8
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4662, i8* %4663, align 1
  %4664 = and i32 %4659, 255
  %4665 = call i32 @llvm.ctpop.i32(i32 %4664)
  %4666 = trunc i32 %4665 to i8
  %4667 = and i8 %4666, 1
  %4668 = xor i8 %4667, 1
  %4669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4668, i8* %4669, align 1
  %4670 = xor i64 1, %4655
  %4671 = trunc i64 %4670 to i32
  %4672 = xor i32 %4671, %4659
  %4673 = lshr i32 %4672, 4
  %4674 = trunc i32 %4673 to i8
  %4675 = and i8 %4674, 1
  %4676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4675, i8* %4676, align 1
  %4677 = icmp eq i32 %4659, 0
  %4678 = zext i1 %4677 to i8
  %4679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4678, i8* %4679, align 1
  %4680 = lshr i32 %4659, 31
  %4681 = trunc i32 %4680 to i8
  %4682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4681, i8* %4682, align 1
  %4683 = lshr i32 %4658, 31
  %4684 = xor i32 %4680, %4683
  %4685 = add i32 %4684, %4683
  %4686 = icmp eq i32 %4685, 2
  %4687 = zext i1 %4686 to i8
  %4688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4687, i8* %4688, align 1
  store %struct.Memory* %loadMem_475c3a, %struct.Memory** %MEMORY
  %loadMem_475c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4690 = getelementptr inbounds %struct.GPR, %struct.GPR* %4689, i32 0, i32 33
  %4691 = getelementptr inbounds %struct.Reg, %struct.Reg* %4690, i32 0, i32 0
  %PC.i2500 = bitcast %union.anon* %4691 to i64*
  %4692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4693 = getelementptr inbounds %struct.GPR, %struct.GPR* %4692, i32 0, i32 5
  %4694 = getelementptr inbounds %struct.Reg, %struct.Reg* %4693, i32 0, i32 0
  %ECX.i2501 = bitcast %union.anon* %4694 to i32*
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4696 = getelementptr inbounds %struct.GPR, %struct.GPR* %4695, i32 0, i32 7
  %4697 = getelementptr inbounds %struct.Reg, %struct.Reg* %4696, i32 0, i32 0
  %RDX.i2502 = bitcast %union.anon* %4697 to i64*
  %4698 = load i32, i32* %ECX.i2501
  %4699 = zext i32 %4698 to i64
  %4700 = load i64, i64* %PC.i2500
  %4701 = add i64 %4700, 3
  store i64 %4701, i64* %PC.i2500
  %4702 = shl i64 %4699, 32
  %4703 = ashr exact i64 %4702, 32
  store i64 %4703, i64* %RDX.i2502, align 8
  store %struct.Memory* %loadMem_475c3d, %struct.Memory** %MEMORY
  %loadMem_475c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4705 = getelementptr inbounds %struct.GPR, %struct.GPR* %4704, i32 0, i32 33
  %4706 = getelementptr inbounds %struct.Reg, %struct.Reg* %4705, i32 0, i32 0
  %PC.i2496 = bitcast %union.anon* %4706 to i64*
  %4707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4708 = getelementptr inbounds %struct.GPR, %struct.GPR* %4707, i32 0, i32 5
  %4709 = getelementptr inbounds %struct.Reg, %struct.Reg* %4708, i32 0, i32 0
  %RCX.i2497 = bitcast %union.anon* %4709 to i64*
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4711 = getelementptr inbounds %struct.GPR, %struct.GPR* %4710, i32 0, i32 7
  %4712 = getelementptr inbounds %struct.Reg, %struct.Reg* %4711, i32 0, i32 0
  %RDX.i2498 = bitcast %union.anon* %4712 to i64*
  %4713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4714 = getelementptr inbounds %struct.GPR, %struct.GPR* %4713, i32 0, i32 15
  %4715 = getelementptr inbounds %struct.Reg, %struct.Reg* %4714, i32 0, i32 0
  %RBP.i2499 = bitcast %union.anon* %4715 to i64*
  %4716 = load i64, i64* %RBP.i2499
  %4717 = load i64, i64* %RDX.i2498
  %4718 = mul i64 %4717, 4
  %4719 = add i64 %4716, -128
  %4720 = add i64 %4719, %4718
  %4721 = load i64, i64* %PC.i2496
  %4722 = add i64 %4721, 4
  store i64 %4722, i64* %PC.i2496
  %4723 = inttoptr i64 %4720 to i32*
  %4724 = load i32, i32* %4723
  %4725 = zext i32 %4724 to i64
  store i64 %4725, i64* %RCX.i2497, align 8
  store %struct.Memory* %loadMem_475c40, %struct.Memory** %MEMORY
  %loadMem_475c44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4727 = getelementptr inbounds %struct.GPR, %struct.GPR* %4726, i32 0, i32 33
  %4728 = getelementptr inbounds %struct.Reg, %struct.Reg* %4727, i32 0, i32 0
  %PC.i2493 = bitcast %union.anon* %4728 to i64*
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4730 = getelementptr inbounds %struct.GPR, %struct.GPR* %4729, i32 0, i32 1
  %4731 = getelementptr inbounds %struct.Reg, %struct.Reg* %4730, i32 0, i32 0
  %EAX.i2494 = bitcast %union.anon* %4731 to i32*
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4733 = getelementptr inbounds %struct.GPR, %struct.GPR* %4732, i32 0, i32 15
  %4734 = getelementptr inbounds %struct.Reg, %struct.Reg* %4733, i32 0, i32 0
  %RBP.i2495 = bitcast %union.anon* %4734 to i64*
  %4735 = load i64, i64* %RBP.i2495
  %4736 = sub i64 %4735, 1168
  %4737 = load i32, i32* %EAX.i2494
  %4738 = zext i32 %4737 to i64
  %4739 = load i64, i64* %PC.i2493
  %4740 = add i64 %4739, 6
  store i64 %4740, i64* %PC.i2493
  %4741 = inttoptr i64 %4736 to i32*
  store i32 %4737, i32* %4741
  store %struct.Memory* %loadMem_475c44, %struct.Memory** %MEMORY
  %loadMem_475c4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4743 = getelementptr inbounds %struct.GPR, %struct.GPR* %4742, i32 0, i32 33
  %4744 = getelementptr inbounds %struct.Reg, %struct.Reg* %4743, i32 0, i32 0
  %PC.i2490 = bitcast %union.anon* %4744 to i64*
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4746 = getelementptr inbounds %struct.GPR, %struct.GPR* %4745, i32 0, i32 5
  %4747 = getelementptr inbounds %struct.Reg, %struct.Reg* %4746, i32 0, i32 0
  %ECX.i2491 = bitcast %union.anon* %4747 to i32*
  %4748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4749 = getelementptr inbounds %struct.GPR, %struct.GPR* %4748, i32 0, i32 1
  %4750 = getelementptr inbounds %struct.Reg, %struct.Reg* %4749, i32 0, i32 0
  %RAX.i2492 = bitcast %union.anon* %4750 to i64*
  %4751 = load i32, i32* %ECX.i2491
  %4752 = zext i32 %4751 to i64
  %4753 = load i64, i64* %PC.i2490
  %4754 = add i64 %4753, 2
  store i64 %4754, i64* %PC.i2490
  %4755 = and i64 %4752, 4294967295
  store i64 %4755, i64* %RAX.i2492, align 8
  store %struct.Memory* %loadMem_475c4a, %struct.Memory** %MEMORY
  %loadMem_475c4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4757 = getelementptr inbounds %struct.GPR, %struct.GPR* %4756, i32 0, i32 33
  %4758 = getelementptr inbounds %struct.Reg, %struct.Reg* %4757, i32 0, i32 0
  %PC.i2489 = bitcast %union.anon* %4758 to i64*
  %4759 = load i64, i64* %PC.i2489
  %4760 = add i64 %4759, 1
  store i64 %4760, i64* %PC.i2489
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %4763 = bitcast %union.anon* %4762 to i32*
  %4764 = load i32, i32* %4763, align 8
  %4765 = sext i32 %4764 to i64
  %4766 = lshr i64 %4765, 32
  store i64 %4766, i64* %4761, align 8
  store %struct.Memory* %loadMem_475c4c, %struct.Memory** %MEMORY
  %loadMem_475c4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4768 = getelementptr inbounds %struct.GPR, %struct.GPR* %4767, i32 0, i32 33
  %4769 = getelementptr inbounds %struct.Reg, %struct.Reg* %4768, i32 0, i32 0
  %PC.i2486 = bitcast %union.anon* %4769 to i64*
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4771 = getelementptr inbounds %struct.GPR, %struct.GPR* %4770, i32 0, i32 5
  %4772 = getelementptr inbounds %struct.Reg, %struct.Reg* %4771, i32 0, i32 0
  %RCX.i2487 = bitcast %union.anon* %4772 to i64*
  %4773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4774 = getelementptr inbounds %struct.GPR, %struct.GPR* %4773, i32 0, i32 15
  %4775 = getelementptr inbounds %struct.Reg, %struct.Reg* %4774, i32 0, i32 0
  %RBP.i2488 = bitcast %union.anon* %4775 to i64*
  %4776 = load i64, i64* %RBP.i2488
  %4777 = sub i64 %4776, 1168
  %4778 = load i64, i64* %PC.i2486
  %4779 = add i64 %4778, 6
  store i64 %4779, i64* %PC.i2486
  %4780 = inttoptr i64 %4777 to i32*
  %4781 = load i32, i32* %4780
  %4782 = zext i32 %4781 to i64
  store i64 %4782, i64* %RCX.i2487, align 8
  store %struct.Memory* %loadMem_475c4d, %struct.Memory** %MEMORY
  %loadMem_475c53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4784 = getelementptr inbounds %struct.GPR, %struct.GPR* %4783, i32 0, i32 33
  %4785 = getelementptr inbounds %struct.Reg, %struct.Reg* %4784, i32 0, i32 0
  %PC.i2480 = bitcast %union.anon* %4785 to i64*
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4787 = getelementptr inbounds %struct.GPR, %struct.GPR* %4786, i32 0, i32 5
  %4788 = getelementptr inbounds %struct.Reg, %struct.Reg* %4787, i32 0, i32 0
  %ECX.i2481 = bitcast %union.anon* %4788 to i32*
  %4789 = load i32, i32* %ECX.i2481
  %4790 = zext i32 %4789 to i64
  %4791 = load i64, i64* %PC.i2480
  %4792 = add i64 %4791, 2
  store i64 %4792, i64* %PC.i2480
  %4793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %4794 = bitcast %union.anon* %4793 to i32*
  %4795 = load i32, i32* %4794, align 8
  %4796 = zext i32 %4795 to i64
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %4798 = bitcast %union.anon* %4797 to i32*
  %4799 = load i32, i32* %4798, align 8
  %4800 = zext i32 %4799 to i64
  %4801 = shl i64 %4790, 32
  %4802 = ashr exact i64 %4801, 32
  %4803 = shl i64 %4800, 32
  %4804 = or i64 %4803, %4796
  %4805 = sdiv i64 %4804, %4802
  %4806 = shl i64 %4805, 32
  %4807 = ashr exact i64 %4806, 32
  %4808 = icmp eq i64 %4805, %4807
  br i1 %4808, label %4813, label %4809

; <label>:4809:                                   ; preds = %block_.L_475c2f
  %4810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4811 = load i64, i64* %4810, align 8
  %4812 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4811, %struct.Memory* %loadMem_475c53)
  br label %routine_idivl__ecx.exit2482

; <label>:4813:                                   ; preds = %block_.L_475c2f
  %4814 = srem i64 %4804, %4802
  %4815 = getelementptr inbounds %union.anon, %union.anon* %4793, i64 0, i32 0
  %4816 = and i64 %4805, 4294967295
  store i64 %4816, i64* %4815, align 8
  %4817 = getelementptr inbounds %union.anon, %union.anon* %4797, i64 0, i32 0
  %4818 = and i64 %4814, 4294967295
  store i64 %4818, i64* %4817, align 8
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4819, align 1
  %4820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %4820, align 1
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4821, align 1
  %4822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4822, align 1
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4823, align 1
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4824, align 1
  br label %routine_idivl__ecx.exit2482

routine_idivl__ecx.exit2482:                      ; preds = %4809, %4813
  %4825 = phi %struct.Memory* [ %4812, %4809 ], [ %loadMem_475c53, %4813 ]
  store %struct.Memory* %4825, %struct.Memory** %MEMORY
  %loadMem_475c55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4827 = getelementptr inbounds %struct.GPR, %struct.GPR* %4826, i32 0, i32 33
  %4828 = getelementptr inbounds %struct.Reg, %struct.Reg* %4827, i32 0, i32 0
  %PC.i2478 = bitcast %union.anon* %4828 to i64*
  %4829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4830 = getelementptr inbounds %struct.GPR, %struct.GPR* %4829, i32 0, i32 1
  %4831 = getelementptr inbounds %struct.Reg, %struct.Reg* %4830, i32 0, i32 0
  %RAX.i2479 = bitcast %union.anon* %4831 to i64*
  %4832 = load i64, i64* %RAX.i2479
  %4833 = load i64, i64* %PC.i2478
  %4834 = add i64 %4833, 3
  store i64 %4834, i64* %PC.i2478
  %4835 = trunc i64 %4832 to i32
  %4836 = sub i32 %4835, 1
  %4837 = zext i32 %4836 to i64
  store i64 %4837, i64* %RAX.i2479, align 8
  %4838 = icmp ult i32 %4835, 1
  %4839 = zext i1 %4838 to i8
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4839, i8* %4840, align 1
  %4841 = and i32 %4836, 255
  %4842 = call i32 @llvm.ctpop.i32(i32 %4841)
  %4843 = trunc i32 %4842 to i8
  %4844 = and i8 %4843, 1
  %4845 = xor i8 %4844, 1
  %4846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4845, i8* %4846, align 1
  %4847 = xor i64 1, %4832
  %4848 = trunc i64 %4847 to i32
  %4849 = xor i32 %4848, %4836
  %4850 = lshr i32 %4849, 4
  %4851 = trunc i32 %4850 to i8
  %4852 = and i8 %4851, 1
  %4853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4852, i8* %4853, align 1
  %4854 = icmp eq i32 %4836, 0
  %4855 = zext i1 %4854 to i8
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4855, i8* %4856, align 1
  %4857 = lshr i32 %4836, 31
  %4858 = trunc i32 %4857 to i8
  %4859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4858, i8* %4859, align 1
  %4860 = lshr i32 %4835, 31
  %4861 = xor i32 %4857, %4860
  %4862 = add i32 %4861, %4860
  %4863 = icmp eq i32 %4862, 2
  %4864 = zext i1 %4863 to i8
  %4865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4864, i8* %4865, align 1
  store %struct.Memory* %loadMem_475c55, %struct.Memory** %MEMORY
  %loadMem_475c58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4867 = getelementptr inbounds %struct.GPR, %struct.GPR* %4866, i32 0, i32 33
  %4868 = getelementptr inbounds %struct.Reg, %struct.Reg* %4867, i32 0, i32 0
  %PC.i2475 = bitcast %union.anon* %4868 to i64*
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4870 = getelementptr inbounds %struct.GPR, %struct.GPR* %4869, i32 0, i32 1
  %4871 = getelementptr inbounds %struct.Reg, %struct.Reg* %4870, i32 0, i32 0
  %EAX.i2476 = bitcast %union.anon* %4871 to i32*
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4873 = getelementptr inbounds %struct.GPR, %struct.GPR* %4872, i32 0, i32 15
  %4874 = getelementptr inbounds %struct.Reg, %struct.Reg* %4873, i32 0, i32 0
  %RBP.i2477 = bitcast %union.anon* %4874 to i64*
  %4875 = load i32, i32* %EAX.i2476
  %4876 = zext i32 %4875 to i64
  %4877 = load i64, i64* %RBP.i2477
  %4878 = sub i64 %4877, 224
  %4879 = load i64, i64* %PC.i2475
  %4880 = add i64 %4879, 6
  store i64 %4880, i64* %PC.i2475
  %4881 = inttoptr i64 %4878 to i32*
  %4882 = load i32, i32* %4881
  %4883 = sub i32 %4875, %4882
  %4884 = icmp ult i32 %4875, %4882
  %4885 = zext i1 %4884 to i8
  %4886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4885, i8* %4886, align 1
  %4887 = and i32 %4883, 255
  %4888 = call i32 @llvm.ctpop.i32(i32 %4887)
  %4889 = trunc i32 %4888 to i8
  %4890 = and i8 %4889, 1
  %4891 = xor i8 %4890, 1
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4891, i8* %4892, align 1
  %4893 = xor i32 %4882, %4875
  %4894 = xor i32 %4893, %4883
  %4895 = lshr i32 %4894, 4
  %4896 = trunc i32 %4895 to i8
  %4897 = and i8 %4896, 1
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4897, i8* %4898, align 1
  %4899 = icmp eq i32 %4883, 0
  %4900 = zext i1 %4899 to i8
  %4901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4900, i8* %4901, align 1
  %4902 = lshr i32 %4883, 31
  %4903 = trunc i32 %4902 to i8
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4903, i8* %4904, align 1
  %4905 = lshr i32 %4875, 31
  %4906 = lshr i32 %4882, 31
  %4907 = xor i32 %4906, %4905
  %4908 = xor i32 %4902, %4905
  %4909 = add i32 %4908, %4907
  %4910 = icmp eq i32 %4909, 2
  %4911 = zext i1 %4910 to i8
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4911, i8* %4912, align 1
  store %struct.Memory* %loadMem_475c58, %struct.Memory** %MEMORY
  %loadMem_475c5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4914 = getelementptr inbounds %struct.GPR, %struct.GPR* %4913, i32 0, i32 33
  %4915 = getelementptr inbounds %struct.Reg, %struct.Reg* %4914, i32 0, i32 0
  %PC.i2474 = bitcast %union.anon* %4915 to i64*
  %4916 = load i64, i64* %PC.i2474
  %4917 = add i64 %4916, 436
  %4918 = load i64, i64* %PC.i2474
  %4919 = add i64 %4918, 6
  %4920 = load i64, i64* %PC.i2474
  %4921 = add i64 %4920, 6
  store i64 %4921, i64* %PC.i2474
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4923 = load i8, i8* %4922, align 1
  %4924 = icmp ne i8 %4923, 0
  %4925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4926 = load i8, i8* %4925, align 1
  %4927 = icmp ne i8 %4926, 0
  %4928 = xor i1 %4924, %4927
  %4929 = xor i1 %4928, true
  %4930 = zext i1 %4929 to i8
  store i8 %4930, i8* %BRANCH_TAKEN, align 1
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4932 = select i1 %4928, i64 %4919, i64 %4917
  store i64 %4932, i64* %4931, align 8
  store %struct.Memory* %loadMem_475c5e, %struct.Memory** %MEMORY
  %loadBr_475c5e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475c5e = icmp eq i8 %loadBr_475c5e, 1
  br i1 %cmpBr_475c5e, label %block_.L_475e12, label %block_475c64

block_475c64:                                     ; preds = %routine_idivl__ecx.exit2482
  %loadMem_475c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4934 = getelementptr inbounds %struct.GPR, %struct.GPR* %4933, i32 0, i32 33
  %4935 = getelementptr inbounds %struct.Reg, %struct.Reg* %4934, i32 0, i32 0
  %PC.i2472 = bitcast %union.anon* %4935 to i64*
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4937 = getelementptr inbounds %struct.GPR, %struct.GPR* %4936, i32 0, i32 1
  %4938 = getelementptr inbounds %struct.Reg, %struct.Reg* %4937, i32 0, i32 0
  %RAX.i2473 = bitcast %union.anon* %4938 to i64*
  %4939 = load i64, i64* %PC.i2472
  %4940 = add i64 %4939, 5
  store i64 %4940, i64* %PC.i2472
  store i64 20, i64* %RAX.i2473, align 8
  store %struct.Memory* %loadMem_475c64, %struct.Memory** %MEMORY
  %loadMem_475c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4942 = getelementptr inbounds %struct.GPR, %struct.GPR* %4941, i32 0, i32 33
  %4943 = getelementptr inbounds %struct.Reg, %struct.Reg* %4942, i32 0, i32 0
  %PC.i2469 = bitcast %union.anon* %4943 to i64*
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4945 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4944, i64 0, i64 0
  %YMM0.i2470 = bitcast %union.VectorReg* %4945 to %"class.std::bitset"*
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4947 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4946, i64 0, i64 0
  %XMM0.i2471 = bitcast %union.VectorReg* %4947 to %union.vec128_t*
  %4948 = bitcast %"class.std::bitset"* %YMM0.i2470 to i8*
  %4949 = bitcast %"class.std::bitset"* %YMM0.i2470 to i8*
  %4950 = bitcast %union.vec128_t* %XMM0.i2471 to i8*
  %4951 = load i64, i64* %PC.i2469
  %4952 = add i64 %4951, 3
  store i64 %4952, i64* %PC.i2469
  %4953 = bitcast i8* %4949 to i64*
  %4954 = load i64, i64* %4953, align 1
  %4955 = getelementptr inbounds i8, i8* %4949, i64 8
  %4956 = bitcast i8* %4955 to i64*
  %4957 = load i64, i64* %4956, align 1
  %4958 = bitcast i8* %4950 to i64*
  %4959 = load i64, i64* %4958, align 1
  %4960 = getelementptr inbounds i8, i8* %4950, i64 8
  %4961 = bitcast i8* %4960 to i64*
  %4962 = load i64, i64* %4961, align 1
  %4963 = xor i64 %4959, %4954
  %4964 = xor i64 %4962, %4957
  %4965 = trunc i64 %4963 to i32
  %4966 = lshr i64 %4963, 32
  %4967 = trunc i64 %4966 to i32
  %4968 = bitcast i8* %4948 to i32*
  store i32 %4965, i32* %4968, align 1
  %4969 = getelementptr inbounds i8, i8* %4948, i64 4
  %4970 = bitcast i8* %4969 to i32*
  store i32 %4967, i32* %4970, align 1
  %4971 = trunc i64 %4964 to i32
  %4972 = getelementptr inbounds i8, i8* %4948, i64 8
  %4973 = bitcast i8* %4972 to i32*
  store i32 %4971, i32* %4973, align 1
  %4974 = lshr i64 %4964, 32
  %4975 = trunc i64 %4974 to i32
  %4976 = getelementptr inbounds i8, i8* %4948, i64 12
  %4977 = bitcast i8* %4976 to i32*
  store i32 %4975, i32* %4977, align 1
  store %struct.Memory* %loadMem_475c69, %struct.Memory** %MEMORY
  %loadMem_475c6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4979 = getelementptr inbounds %struct.GPR, %struct.GPR* %4978, i32 0, i32 33
  %4980 = getelementptr inbounds %struct.Reg, %struct.Reg* %4979, i32 0, i32 0
  %PC.i2467 = bitcast %union.anon* %4980 to i64*
  %4981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4982 = getelementptr inbounds %struct.GPR, %struct.GPR* %4981, i32 0, i32 15
  %4983 = getelementptr inbounds %struct.Reg, %struct.Reg* %4982, i32 0, i32 0
  %RBP.i2468 = bitcast %union.anon* %4983 to i64*
  %4984 = load i64, i64* %RBP.i2468
  %4985 = sub i64 %4984, 1048
  %4986 = load i64, i64* %PC.i2467
  %4987 = add i64 %4986, 10
  store i64 %4987, i64* %PC.i2467
  %4988 = inttoptr i64 %4985 to i32*
  store i32 0, i32* %4988
  store %struct.Memory* %loadMem_475c6c, %struct.Memory** %MEMORY
  %loadMem_475c76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4990 = getelementptr inbounds %struct.GPR, %struct.GPR* %4989, i32 0, i32 33
  %4991 = getelementptr inbounds %struct.Reg, %struct.Reg* %4990, i32 0, i32 0
  %PC.i2464 = bitcast %union.anon* %4991 to i64*
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4993 = getelementptr inbounds %struct.GPR, %struct.GPR* %4992, i32 0, i32 15
  %4994 = getelementptr inbounds %struct.Reg, %struct.Reg* %4993, i32 0, i32 0
  %RBP.i2465 = bitcast %union.anon* %4994 to i64*
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4996 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4995, i64 0, i64 0
  %XMM0.i2466 = bitcast %union.VectorReg* %4996 to %union.vec128_t*
  %4997 = load i64, i64* %RBP.i2465
  %4998 = sub i64 %4997, 1052
  %4999 = bitcast %union.vec128_t* %XMM0.i2466 to i8*
  %5000 = load i64, i64* %PC.i2464
  %5001 = add i64 %5000, 8
  store i64 %5001, i64* %PC.i2464
  %5002 = bitcast i8* %4999 to <2 x float>*
  %5003 = load <2 x float>, <2 x float>* %5002, align 1
  %5004 = extractelement <2 x float> %5003, i32 0
  %5005 = inttoptr i64 %4998 to float*
  store float %5004, float* %5005
  store %struct.Memory* %loadMem_475c76, %struct.Memory** %MEMORY
  %loadMem_475c7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5007 = getelementptr inbounds %struct.GPR, %struct.GPR* %5006, i32 0, i32 33
  %5008 = getelementptr inbounds %struct.Reg, %struct.Reg* %5007, i32 0, i32 0
  %PC.i2461 = bitcast %union.anon* %5008 to i64*
  %5009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5010 = getelementptr inbounds %struct.GPR, %struct.GPR* %5009, i32 0, i32 5
  %5011 = getelementptr inbounds %struct.Reg, %struct.Reg* %5010, i32 0, i32 0
  %RCX.i2462 = bitcast %union.anon* %5011 to i64*
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5013 = getelementptr inbounds %struct.GPR, %struct.GPR* %5012, i32 0, i32 15
  %5014 = getelementptr inbounds %struct.Reg, %struct.Reg* %5013, i32 0, i32 0
  %RBP.i2463 = bitcast %union.anon* %5014 to i64*
  %5015 = load i64, i64* %RBP.i2463
  %5016 = sub i64 %5015, 212
  %5017 = load i64, i64* %PC.i2461
  %5018 = add i64 %5017, 6
  store i64 %5018, i64* %PC.i2461
  %5019 = inttoptr i64 %5016 to i32*
  %5020 = load i32, i32* %5019
  %5021 = zext i32 %5020 to i64
  store i64 %5021, i64* %RCX.i2462, align 8
  store %struct.Memory* %loadMem_475c7e, %struct.Memory** %MEMORY
  %loadMem_475c84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 33
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %PC.i2459 = bitcast %union.anon* %5024 to i64*
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5026 = getelementptr inbounds %struct.GPR, %struct.GPR* %5025, i32 0, i32 5
  %5027 = getelementptr inbounds %struct.Reg, %struct.Reg* %5026, i32 0, i32 0
  %RCX.i2460 = bitcast %union.anon* %5027 to i64*
  %5028 = load i64, i64* %RCX.i2460
  %5029 = load i64, i64* %PC.i2459
  %5030 = add i64 %5029, 3
  store i64 %5030, i64* %PC.i2459
  %5031 = trunc i64 %5028 to i32
  %5032 = sub i32 %5031, 1
  %5033 = zext i32 %5032 to i64
  store i64 %5033, i64* %RCX.i2460, align 8
  %5034 = icmp ult i32 %5031, 1
  %5035 = zext i1 %5034 to i8
  %5036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5035, i8* %5036, align 1
  %5037 = and i32 %5032, 255
  %5038 = call i32 @llvm.ctpop.i32(i32 %5037)
  %5039 = trunc i32 %5038 to i8
  %5040 = and i8 %5039, 1
  %5041 = xor i8 %5040, 1
  %5042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5041, i8* %5042, align 1
  %5043 = xor i64 1, %5028
  %5044 = trunc i64 %5043 to i32
  %5045 = xor i32 %5044, %5032
  %5046 = lshr i32 %5045, 4
  %5047 = trunc i32 %5046 to i8
  %5048 = and i8 %5047, 1
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5048, i8* %5049, align 1
  %5050 = icmp eq i32 %5032, 0
  %5051 = zext i1 %5050 to i8
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5051, i8* %5052, align 1
  %5053 = lshr i32 %5032, 31
  %5054 = trunc i32 %5053 to i8
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5054, i8* %5055, align 1
  %5056 = lshr i32 %5031, 31
  %5057 = xor i32 %5053, %5056
  %5058 = add i32 %5057, %5056
  %5059 = icmp eq i32 %5058, 2
  %5060 = zext i1 %5059 to i8
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5060, i8* %5061, align 1
  store %struct.Memory* %loadMem_475c84, %struct.Memory** %MEMORY
  %loadMem_475c87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5063 = getelementptr inbounds %struct.GPR, %struct.GPR* %5062, i32 0, i32 33
  %5064 = getelementptr inbounds %struct.Reg, %struct.Reg* %5063, i32 0, i32 0
  %PC.i2456 = bitcast %union.anon* %5064 to i64*
  %5065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5066 = getelementptr inbounds %struct.GPR, %struct.GPR* %5065, i32 0, i32 5
  %5067 = getelementptr inbounds %struct.Reg, %struct.Reg* %5066, i32 0, i32 0
  %ECX.i2457 = bitcast %union.anon* %5067 to i32*
  %5068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5069 = getelementptr inbounds %struct.GPR, %struct.GPR* %5068, i32 0, i32 7
  %5070 = getelementptr inbounds %struct.Reg, %struct.Reg* %5069, i32 0, i32 0
  %RDX.i2458 = bitcast %union.anon* %5070 to i64*
  %5071 = load i32, i32* %ECX.i2457
  %5072 = zext i32 %5071 to i64
  %5073 = load i64, i64* %PC.i2456
  %5074 = add i64 %5073, 3
  store i64 %5074, i64* %PC.i2456
  %5075 = shl i64 %5072, 32
  %5076 = ashr exact i64 %5075, 32
  store i64 %5076, i64* %RDX.i2458, align 8
  store %struct.Memory* %loadMem_475c87, %struct.Memory** %MEMORY
  %loadMem_475c8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5078 = getelementptr inbounds %struct.GPR, %struct.GPR* %5077, i32 0, i32 33
  %5079 = getelementptr inbounds %struct.Reg, %struct.Reg* %5078, i32 0, i32 0
  %PC.i2452 = bitcast %union.anon* %5079 to i64*
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5081 = getelementptr inbounds %struct.GPR, %struct.GPR* %5080, i32 0, i32 5
  %5082 = getelementptr inbounds %struct.Reg, %struct.Reg* %5081, i32 0, i32 0
  %RCX.i2453 = bitcast %union.anon* %5082 to i64*
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5084 = getelementptr inbounds %struct.GPR, %struct.GPR* %5083, i32 0, i32 7
  %5085 = getelementptr inbounds %struct.Reg, %struct.Reg* %5084, i32 0, i32 0
  %RDX.i2454 = bitcast %union.anon* %5085 to i64*
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5087 = getelementptr inbounds %struct.GPR, %struct.GPR* %5086, i32 0, i32 15
  %5088 = getelementptr inbounds %struct.Reg, %struct.Reg* %5087, i32 0, i32 0
  %RBP.i2455 = bitcast %union.anon* %5088 to i64*
  %5089 = load i64, i64* %RBP.i2455
  %5090 = load i64, i64* %RDX.i2454
  %5091 = mul i64 %5090, 4
  %5092 = add i64 %5089, -128
  %5093 = add i64 %5092, %5091
  %5094 = load i64, i64* %PC.i2452
  %5095 = add i64 %5094, 4
  store i64 %5095, i64* %PC.i2452
  %5096 = inttoptr i64 %5093 to i32*
  %5097 = load i32, i32* %5096
  %5098 = zext i32 %5097 to i64
  store i64 %5098, i64* %RCX.i2453, align 8
  store %struct.Memory* %loadMem_475c8a, %struct.Memory** %MEMORY
  %loadMem_475c8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5100 = getelementptr inbounds %struct.GPR, %struct.GPR* %5099, i32 0, i32 33
  %5101 = getelementptr inbounds %struct.Reg, %struct.Reg* %5100, i32 0, i32 0
  %PC.i2449 = bitcast %union.anon* %5101 to i64*
  %5102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5103 = getelementptr inbounds %struct.GPR, %struct.GPR* %5102, i32 0, i32 1
  %5104 = getelementptr inbounds %struct.Reg, %struct.Reg* %5103, i32 0, i32 0
  %EAX.i2450 = bitcast %union.anon* %5104 to i32*
  %5105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5106 = getelementptr inbounds %struct.GPR, %struct.GPR* %5105, i32 0, i32 15
  %5107 = getelementptr inbounds %struct.Reg, %struct.Reg* %5106, i32 0, i32 0
  %RBP.i2451 = bitcast %union.anon* %5107 to i64*
  %5108 = load i64, i64* %RBP.i2451
  %5109 = sub i64 %5108, 1172
  %5110 = load i32, i32* %EAX.i2450
  %5111 = zext i32 %5110 to i64
  %5112 = load i64, i64* %PC.i2449
  %5113 = add i64 %5112, 6
  store i64 %5113, i64* %PC.i2449
  %5114 = inttoptr i64 %5109 to i32*
  store i32 %5110, i32* %5114
  store %struct.Memory* %loadMem_475c8e, %struct.Memory** %MEMORY
  %loadMem_475c94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5116 = getelementptr inbounds %struct.GPR, %struct.GPR* %5115, i32 0, i32 33
  %5117 = getelementptr inbounds %struct.Reg, %struct.Reg* %5116, i32 0, i32 0
  %PC.i2446 = bitcast %union.anon* %5117 to i64*
  %5118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5119 = getelementptr inbounds %struct.GPR, %struct.GPR* %5118, i32 0, i32 5
  %5120 = getelementptr inbounds %struct.Reg, %struct.Reg* %5119, i32 0, i32 0
  %ECX.i2447 = bitcast %union.anon* %5120 to i32*
  %5121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5122 = getelementptr inbounds %struct.GPR, %struct.GPR* %5121, i32 0, i32 1
  %5123 = getelementptr inbounds %struct.Reg, %struct.Reg* %5122, i32 0, i32 0
  %RAX.i2448 = bitcast %union.anon* %5123 to i64*
  %5124 = load i32, i32* %ECX.i2447
  %5125 = zext i32 %5124 to i64
  %5126 = load i64, i64* %PC.i2446
  %5127 = add i64 %5126, 2
  store i64 %5127, i64* %PC.i2446
  %5128 = and i64 %5125, 4294967295
  store i64 %5128, i64* %RAX.i2448, align 8
  store %struct.Memory* %loadMem_475c94, %struct.Memory** %MEMORY
  %loadMem_475c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5130 = getelementptr inbounds %struct.GPR, %struct.GPR* %5129, i32 0, i32 33
  %5131 = getelementptr inbounds %struct.Reg, %struct.Reg* %5130, i32 0, i32 0
  %PC.i2445 = bitcast %union.anon* %5131 to i64*
  %5132 = load i64, i64* %PC.i2445
  %5133 = add i64 %5132, 1
  store i64 %5133, i64* %PC.i2445
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5136 = bitcast %union.anon* %5135 to i32*
  %5137 = load i32, i32* %5136, align 8
  %5138 = sext i32 %5137 to i64
  %5139 = lshr i64 %5138, 32
  store i64 %5139, i64* %5134, align 8
  store %struct.Memory* %loadMem_475c96, %struct.Memory** %MEMORY
  %loadMem_475c97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5141 = getelementptr inbounds %struct.GPR, %struct.GPR* %5140, i32 0, i32 33
  %5142 = getelementptr inbounds %struct.Reg, %struct.Reg* %5141, i32 0, i32 0
  %PC.i2442 = bitcast %union.anon* %5142 to i64*
  %5143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5144 = getelementptr inbounds %struct.GPR, %struct.GPR* %5143, i32 0, i32 5
  %5145 = getelementptr inbounds %struct.Reg, %struct.Reg* %5144, i32 0, i32 0
  %RCX.i2443 = bitcast %union.anon* %5145 to i64*
  %5146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5147 = getelementptr inbounds %struct.GPR, %struct.GPR* %5146, i32 0, i32 15
  %5148 = getelementptr inbounds %struct.Reg, %struct.Reg* %5147, i32 0, i32 0
  %RBP.i2444 = bitcast %union.anon* %5148 to i64*
  %5149 = load i64, i64* %RBP.i2444
  %5150 = sub i64 %5149, 1172
  %5151 = load i64, i64* %PC.i2442
  %5152 = add i64 %5151, 6
  store i64 %5152, i64* %PC.i2442
  %5153 = inttoptr i64 %5150 to i32*
  %5154 = load i32, i32* %5153
  %5155 = zext i32 %5154 to i64
  store i64 %5155, i64* %RCX.i2443, align 8
  store %struct.Memory* %loadMem_475c97, %struct.Memory** %MEMORY
  %loadMem_475c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5157 = getelementptr inbounds %struct.GPR, %struct.GPR* %5156, i32 0, i32 33
  %5158 = getelementptr inbounds %struct.Reg, %struct.Reg* %5157, i32 0, i32 0
  %PC.i2436 = bitcast %union.anon* %5158 to i64*
  %5159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5160 = getelementptr inbounds %struct.GPR, %struct.GPR* %5159, i32 0, i32 5
  %5161 = getelementptr inbounds %struct.Reg, %struct.Reg* %5160, i32 0, i32 0
  %ECX.i2437 = bitcast %union.anon* %5161 to i32*
  %5162 = load i32, i32* %ECX.i2437
  %5163 = zext i32 %5162 to i64
  %5164 = load i64, i64* %PC.i2436
  %5165 = add i64 %5164, 2
  store i64 %5165, i64* %PC.i2436
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5167 = bitcast %union.anon* %5166 to i32*
  %5168 = load i32, i32* %5167, align 8
  %5169 = zext i32 %5168 to i64
  %5170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %5171 = bitcast %union.anon* %5170 to i32*
  %5172 = load i32, i32* %5171, align 8
  %5173 = zext i32 %5172 to i64
  %5174 = shl i64 %5163, 32
  %5175 = ashr exact i64 %5174, 32
  %5176 = shl i64 %5173, 32
  %5177 = or i64 %5176, %5169
  %5178 = sdiv i64 %5177, %5175
  %5179 = shl i64 %5178, 32
  %5180 = ashr exact i64 %5179, 32
  %5181 = icmp eq i64 %5178, %5180
  br i1 %5181, label %5186, label %5182

; <label>:5182:                                   ; preds = %block_475c64
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5184 = load i64, i64* %5183, align 8
  %5185 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5184, %struct.Memory* %loadMem_475c9d)
  br label %routine_idivl__ecx.exit2438

; <label>:5186:                                   ; preds = %block_475c64
  %5187 = srem i64 %5177, %5175
  %5188 = getelementptr inbounds %union.anon, %union.anon* %5166, i64 0, i32 0
  %5189 = and i64 %5178, 4294967295
  store i64 %5189, i64* %5188, align 8
  %5190 = getelementptr inbounds %union.anon, %union.anon* %5170, i64 0, i32 0
  %5191 = and i64 %5187, 4294967295
  store i64 %5191, i64* %5190, align 8
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5192, align 1
  %5193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %5193, align 1
  %5194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5194, align 1
  %5195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5195, align 1
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5196, align 1
  %5197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5197, align 1
  br label %routine_idivl__ecx.exit2438

routine_idivl__ecx.exit2438:                      ; preds = %5182, %5186
  %5198 = phi %struct.Memory* [ %5185, %5182 ], [ %loadMem_475c9d, %5186 ]
  store %struct.Memory* %5198, %struct.Memory** %MEMORY
  %loadMem_475c9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5200 = getelementptr inbounds %struct.GPR, %struct.GPR* %5199, i32 0, i32 33
  %5201 = getelementptr inbounds %struct.Reg, %struct.Reg* %5200, i32 0, i32 0
  %PC.i2434 = bitcast %union.anon* %5201 to i64*
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5203 = getelementptr inbounds %struct.GPR, %struct.GPR* %5202, i32 0, i32 1
  %5204 = getelementptr inbounds %struct.Reg, %struct.Reg* %5203, i32 0, i32 0
  %RAX.i2435 = bitcast %union.anon* %5204 to i64*
  %5205 = load i64, i64* %RAX.i2435
  %5206 = load i64, i64* %PC.i2434
  %5207 = add i64 %5206, 3
  store i64 %5207, i64* %PC.i2434
  %5208 = trunc i64 %5205 to i32
  %5209 = sub i32 %5208, 1
  %5210 = zext i32 %5209 to i64
  store i64 %5210, i64* %RAX.i2435, align 8
  %5211 = icmp ult i32 %5208, 1
  %5212 = zext i1 %5211 to i8
  %5213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5212, i8* %5213, align 1
  %5214 = and i32 %5209, 255
  %5215 = call i32 @llvm.ctpop.i32(i32 %5214)
  %5216 = trunc i32 %5215 to i8
  %5217 = and i8 %5216, 1
  %5218 = xor i8 %5217, 1
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5218, i8* %5219, align 1
  %5220 = xor i64 1, %5205
  %5221 = trunc i64 %5220 to i32
  %5222 = xor i32 %5221, %5209
  %5223 = lshr i32 %5222, 4
  %5224 = trunc i32 %5223 to i8
  %5225 = and i8 %5224, 1
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5225, i8* %5226, align 1
  %5227 = icmp eq i32 %5209, 0
  %5228 = zext i1 %5227 to i8
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5228, i8* %5229, align 1
  %5230 = lshr i32 %5209, 31
  %5231 = trunc i32 %5230 to i8
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5231, i8* %5232, align 1
  %5233 = lshr i32 %5208, 31
  %5234 = xor i32 %5230, %5233
  %5235 = add i32 %5234, %5233
  %5236 = icmp eq i32 %5235, 2
  %5237 = zext i1 %5236 to i8
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5237, i8* %5238, align 1
  store %struct.Memory* %loadMem_475c9f, %struct.Memory** %MEMORY
  %loadMem_475ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5240 = getelementptr inbounds %struct.GPR, %struct.GPR* %5239, i32 0, i32 33
  %5241 = getelementptr inbounds %struct.Reg, %struct.Reg* %5240, i32 0, i32 0
  %PC.i2431 = bitcast %union.anon* %5241 to i64*
  %5242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5243 = getelementptr inbounds %struct.GPR, %struct.GPR* %5242, i32 0, i32 1
  %5244 = getelementptr inbounds %struct.Reg, %struct.Reg* %5243, i32 0, i32 0
  %EAX.i2432 = bitcast %union.anon* %5244 to i32*
  %5245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5246 = getelementptr inbounds %struct.GPR, %struct.GPR* %5245, i32 0, i32 15
  %5247 = getelementptr inbounds %struct.Reg, %struct.Reg* %5246, i32 0, i32 0
  %RBP.i2433 = bitcast %union.anon* %5247 to i64*
  %5248 = load i64, i64* %RBP.i2433
  %5249 = sub i64 %5248, 1056
  %5250 = load i32, i32* %EAX.i2432
  %5251 = zext i32 %5250 to i64
  %5252 = load i64, i64* %PC.i2431
  %5253 = add i64 %5252, 6
  store i64 %5253, i64* %PC.i2431
  %5254 = inttoptr i64 %5249 to i32*
  store i32 %5250, i32* %5254
  store %struct.Memory* %loadMem_475ca2, %struct.Memory** %MEMORY
  %loadMem_475ca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5256 = getelementptr inbounds %struct.GPR, %struct.GPR* %5255, i32 0, i32 33
  %5257 = getelementptr inbounds %struct.Reg, %struct.Reg* %5256, i32 0, i32 0
  %PC.i2428 = bitcast %union.anon* %5257 to i64*
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5259 = getelementptr inbounds %struct.GPR, %struct.GPR* %5258, i32 0, i32 1
  %5260 = getelementptr inbounds %struct.Reg, %struct.Reg* %5259, i32 0, i32 0
  %RAX.i2429 = bitcast %union.anon* %5260 to i64*
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5262 = getelementptr inbounds %struct.GPR, %struct.GPR* %5261, i32 0, i32 15
  %5263 = getelementptr inbounds %struct.Reg, %struct.Reg* %5262, i32 0, i32 0
  %RBP.i2430 = bitcast %union.anon* %5263 to i64*
  %5264 = load i64, i64* %RBP.i2430
  %5265 = sub i64 %5264, 212
  %5266 = load i64, i64* %PC.i2428
  %5267 = add i64 %5266, 6
  store i64 %5267, i64* %PC.i2428
  %5268 = inttoptr i64 %5265 to i32*
  %5269 = load i32, i32* %5268
  %5270 = zext i32 %5269 to i64
  store i64 %5270, i64* %RAX.i2429, align 8
  store %struct.Memory* %loadMem_475ca8, %struct.Memory** %MEMORY
  %loadMem_475cae = load %struct.Memory*, %struct.Memory** %MEMORY
  %5271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5272 = getelementptr inbounds %struct.GPR, %struct.GPR* %5271, i32 0, i32 33
  %5273 = getelementptr inbounds %struct.Reg, %struct.Reg* %5272, i32 0, i32 0
  %PC.i2426 = bitcast %union.anon* %5273 to i64*
  %5274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5275 = getelementptr inbounds %struct.GPR, %struct.GPR* %5274, i32 0, i32 1
  %5276 = getelementptr inbounds %struct.Reg, %struct.Reg* %5275, i32 0, i32 0
  %RAX.i2427 = bitcast %union.anon* %5276 to i64*
  %5277 = load i64, i64* %RAX.i2427
  %5278 = load i64, i64* %PC.i2426
  %5279 = add i64 %5278, 3
  store i64 %5279, i64* %PC.i2426
  %5280 = trunc i64 %5277 to i32
  %5281 = sub i32 %5280, 1
  %5282 = zext i32 %5281 to i64
  store i64 %5282, i64* %RAX.i2427, align 8
  %5283 = icmp ult i32 %5280, 1
  %5284 = zext i1 %5283 to i8
  %5285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5284, i8* %5285, align 1
  %5286 = and i32 %5281, 255
  %5287 = call i32 @llvm.ctpop.i32(i32 %5286)
  %5288 = trunc i32 %5287 to i8
  %5289 = and i8 %5288, 1
  %5290 = xor i8 %5289, 1
  %5291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5290, i8* %5291, align 1
  %5292 = xor i64 1, %5277
  %5293 = trunc i64 %5292 to i32
  %5294 = xor i32 %5293, %5281
  %5295 = lshr i32 %5294, 4
  %5296 = trunc i32 %5295 to i8
  %5297 = and i8 %5296, 1
  %5298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5297, i8* %5298, align 1
  %5299 = icmp eq i32 %5281, 0
  %5300 = zext i1 %5299 to i8
  %5301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5300, i8* %5301, align 1
  %5302 = lshr i32 %5281, 31
  %5303 = trunc i32 %5302 to i8
  %5304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5303, i8* %5304, align 1
  %5305 = lshr i32 %5280, 31
  %5306 = xor i32 %5302, %5305
  %5307 = add i32 %5306, %5305
  %5308 = icmp eq i32 %5307, 2
  %5309 = zext i1 %5308 to i8
  %5310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5309, i8* %5310, align 1
  store %struct.Memory* %loadMem_475cae, %struct.Memory** %MEMORY
  %loadMem_475cb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5312 = getelementptr inbounds %struct.GPR, %struct.GPR* %5311, i32 0, i32 33
  %5313 = getelementptr inbounds %struct.Reg, %struct.Reg* %5312, i32 0, i32 0
  %PC.i2423 = bitcast %union.anon* %5313 to i64*
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5315 = getelementptr inbounds %struct.GPR, %struct.GPR* %5314, i32 0, i32 1
  %5316 = getelementptr inbounds %struct.Reg, %struct.Reg* %5315, i32 0, i32 0
  %EAX.i2424 = bitcast %union.anon* %5316 to i32*
  %5317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5318 = getelementptr inbounds %struct.GPR, %struct.GPR* %5317, i32 0, i32 9
  %5319 = getelementptr inbounds %struct.Reg, %struct.Reg* %5318, i32 0, i32 0
  %RSI.i2425 = bitcast %union.anon* %5319 to i64*
  %5320 = load i32, i32* %EAX.i2424
  %5321 = zext i32 %5320 to i64
  %5322 = load i64, i64* %PC.i2423
  %5323 = add i64 %5322, 3
  store i64 %5323, i64* %PC.i2423
  %5324 = shl i64 %5321, 32
  %5325 = ashr exact i64 %5324, 32
  store i64 %5325, i64* %RSI.i2425, align 8
  store %struct.Memory* %loadMem_475cb1, %struct.Memory** %MEMORY
  %loadMem_475cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5327 = getelementptr inbounds %struct.GPR, %struct.GPR* %5326, i32 0, i32 33
  %5328 = getelementptr inbounds %struct.Reg, %struct.Reg* %5327, i32 0, i32 0
  %PC.i2419 = bitcast %union.anon* %5328 to i64*
  %5329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5330 = getelementptr inbounds %struct.GPR, %struct.GPR* %5329, i32 0, i32 1
  %5331 = getelementptr inbounds %struct.Reg, %struct.Reg* %5330, i32 0, i32 0
  %RAX.i2420 = bitcast %union.anon* %5331 to i64*
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5333 = getelementptr inbounds %struct.GPR, %struct.GPR* %5332, i32 0, i32 9
  %5334 = getelementptr inbounds %struct.Reg, %struct.Reg* %5333, i32 0, i32 0
  %RSI.i2421 = bitcast %union.anon* %5334 to i64*
  %5335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5336 = getelementptr inbounds %struct.GPR, %struct.GPR* %5335, i32 0, i32 15
  %5337 = getelementptr inbounds %struct.Reg, %struct.Reg* %5336, i32 0, i32 0
  %RBP.i2422 = bitcast %union.anon* %5337 to i64*
  %5338 = load i64, i64* %RBP.i2422
  %5339 = load i64, i64* %RSI.i2421
  %5340 = mul i64 %5339, 4
  %5341 = add i64 %5338, -128
  %5342 = add i64 %5341, %5340
  %5343 = load i64, i64* %PC.i2419
  %5344 = add i64 %5343, 4
  store i64 %5344, i64* %PC.i2419
  %5345 = inttoptr i64 %5342 to i32*
  %5346 = load i32, i32* %5345
  %5347 = zext i32 %5346 to i64
  store i64 %5347, i64* %RAX.i2420, align 8
  store %struct.Memory* %loadMem_475cb4, %struct.Memory** %MEMORY
  %loadMem_475cb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5349 = getelementptr inbounds %struct.GPR, %struct.GPR* %5348, i32 0, i32 33
  %5350 = getelementptr inbounds %struct.Reg, %struct.Reg* %5349, i32 0, i32 0
  %PC.i2418 = bitcast %union.anon* %5350 to i64*
  %5351 = load i64, i64* %PC.i2418
  %5352 = add i64 %5351, 1
  store i64 %5352, i64* %PC.i2418
  %5353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %5354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5355 = bitcast %union.anon* %5354 to i32*
  %5356 = load i32, i32* %5355, align 8
  %5357 = sext i32 %5356 to i64
  %5358 = lshr i64 %5357, 32
  store i64 %5358, i64* %5353, align 8
  store %struct.Memory* %loadMem_475cb8, %struct.Memory** %MEMORY
  %loadMem_475cb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5360 = getelementptr inbounds %struct.GPR, %struct.GPR* %5359, i32 0, i32 33
  %5361 = getelementptr inbounds %struct.Reg, %struct.Reg* %5360, i32 0, i32 0
  %PC.i2413 = bitcast %union.anon* %5361 to i64*
  %5362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5363 = getelementptr inbounds %struct.GPR, %struct.GPR* %5362, i32 0, i32 5
  %5364 = getelementptr inbounds %struct.Reg, %struct.Reg* %5363, i32 0, i32 0
  %ECX.i2414 = bitcast %union.anon* %5364 to i32*
  %5365 = load i32, i32* %ECX.i2414
  %5366 = zext i32 %5365 to i64
  %5367 = load i64, i64* %PC.i2413
  %5368 = add i64 %5367, 2
  store i64 %5368, i64* %PC.i2413
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5370 = bitcast %union.anon* %5369 to i32*
  %5371 = load i32, i32* %5370, align 8
  %5372 = zext i32 %5371 to i64
  %5373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %5374 = bitcast %union.anon* %5373 to i32*
  %5375 = load i32, i32* %5374, align 8
  %5376 = zext i32 %5375 to i64
  %5377 = shl i64 %5366, 32
  %5378 = ashr exact i64 %5377, 32
  %5379 = shl i64 %5376, 32
  %5380 = or i64 %5379, %5372
  %5381 = sdiv i64 %5380, %5378
  %5382 = shl i64 %5381, 32
  %5383 = ashr exact i64 %5382, 32
  %5384 = icmp eq i64 %5381, %5383
  br i1 %5384, label %5389, label %5385

; <label>:5385:                                   ; preds = %routine_idivl__ecx.exit2438
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5387 = load i64, i64* %5386, align 8
  %5388 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5387, %struct.Memory* %loadMem_475cb9)
  br label %routine_idivl__ecx.exit2415

; <label>:5389:                                   ; preds = %routine_idivl__ecx.exit2438
  %5390 = srem i64 %5380, %5378
  %5391 = getelementptr inbounds %union.anon, %union.anon* %5369, i64 0, i32 0
  %5392 = and i64 %5381, 4294967295
  store i64 %5392, i64* %5391, align 8
  %5393 = getelementptr inbounds %union.anon, %union.anon* %5373, i64 0, i32 0
  %5394 = and i64 %5390, 4294967295
  store i64 %5394, i64* %5393, align 8
  %5395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5395, align 1
  %5396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %5396, align 1
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5397, align 1
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5398, align 1
  %5399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5399, align 1
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5400, align 1
  br label %routine_idivl__ecx.exit2415

routine_idivl__ecx.exit2415:                      ; preds = %5385, %5389
  %5401 = phi %struct.Memory* [ %5388, %5385 ], [ %loadMem_475cb9, %5389 ]
  store %struct.Memory* %5401, %struct.Memory** %MEMORY
  %loadMem_475cbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5403 = getelementptr inbounds %struct.GPR, %struct.GPR* %5402, i32 0, i32 33
  %5404 = getelementptr inbounds %struct.Reg, %struct.Reg* %5403, i32 0, i32 0
  %PC.i2411 = bitcast %union.anon* %5404 to i64*
  %5405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5406 = getelementptr inbounds %struct.GPR, %struct.GPR* %5405, i32 0, i32 7
  %5407 = getelementptr inbounds %struct.Reg, %struct.Reg* %5406, i32 0, i32 0
  %RDX.i2412 = bitcast %union.anon* %5407 to i64*
  %5408 = load i64, i64* %RDX.i2412
  %5409 = load i64, i64* %PC.i2411
  %5410 = add i64 %5409, 3
  store i64 %5410, i64* %PC.i2411
  %5411 = trunc i64 %5408 to i32
  %5412 = sub i32 %5411, 1
  %5413 = zext i32 %5412 to i64
  store i64 %5413, i64* %RDX.i2412, align 8
  %5414 = icmp ult i32 %5411, 1
  %5415 = zext i1 %5414 to i8
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5415, i8* %5416, align 1
  %5417 = and i32 %5412, 255
  %5418 = call i32 @llvm.ctpop.i32(i32 %5417)
  %5419 = trunc i32 %5418 to i8
  %5420 = and i8 %5419, 1
  %5421 = xor i8 %5420, 1
  %5422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5421, i8* %5422, align 1
  %5423 = xor i64 1, %5408
  %5424 = trunc i64 %5423 to i32
  %5425 = xor i32 %5424, %5412
  %5426 = lshr i32 %5425, 4
  %5427 = trunc i32 %5426 to i8
  %5428 = and i8 %5427, 1
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5428, i8* %5429, align 1
  %5430 = icmp eq i32 %5412, 0
  %5431 = zext i1 %5430 to i8
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5431, i8* %5432, align 1
  %5433 = lshr i32 %5412, 31
  %5434 = trunc i32 %5433 to i8
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5434, i8* %5435, align 1
  %5436 = lshr i32 %5411, 31
  %5437 = xor i32 %5433, %5436
  %5438 = add i32 %5437, %5436
  %5439 = icmp eq i32 %5438, 2
  %5440 = zext i1 %5439 to i8
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5440, i8* %5441, align 1
  store %struct.Memory* %loadMem_475cbb, %struct.Memory** %MEMORY
  %loadMem_475cbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5443 = getelementptr inbounds %struct.GPR, %struct.GPR* %5442, i32 0, i32 33
  %5444 = getelementptr inbounds %struct.Reg, %struct.Reg* %5443, i32 0, i32 0
  %PC.i2408 = bitcast %union.anon* %5444 to i64*
  %5445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5446 = getelementptr inbounds %struct.GPR, %struct.GPR* %5445, i32 0, i32 7
  %5447 = getelementptr inbounds %struct.Reg, %struct.Reg* %5446, i32 0, i32 0
  %EDX.i2409 = bitcast %union.anon* %5447 to i32*
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5449 = getelementptr inbounds %struct.GPR, %struct.GPR* %5448, i32 0, i32 15
  %5450 = getelementptr inbounds %struct.Reg, %struct.Reg* %5449, i32 0, i32 0
  %RBP.i2410 = bitcast %union.anon* %5450 to i64*
  %5451 = load i64, i64* %RBP.i2410
  %5452 = sub i64 %5451, 1060
  %5453 = load i32, i32* %EDX.i2409
  %5454 = zext i32 %5453 to i64
  %5455 = load i64, i64* %PC.i2408
  %5456 = add i64 %5455, 6
  store i64 %5456, i64* %PC.i2408
  %5457 = inttoptr i64 %5452 to i32*
  store i32 %5453, i32* %5457
  store %struct.Memory* %loadMem_475cbe, %struct.Memory** %MEMORY
  %loadMem_475cc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5459 = getelementptr inbounds %struct.GPR, %struct.GPR* %5458, i32 0, i32 33
  %5460 = getelementptr inbounds %struct.Reg, %struct.Reg* %5459, i32 0, i32 0
  %PC.i2405 = bitcast %union.anon* %5460 to i64*
  %5461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5462 = getelementptr inbounds %struct.GPR, %struct.GPR* %5461, i32 0, i32 7
  %5463 = getelementptr inbounds %struct.Reg, %struct.Reg* %5462, i32 0, i32 0
  %RDX.i2406 = bitcast %union.anon* %5463 to i64*
  %5464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5465 = getelementptr inbounds %struct.GPR, %struct.GPR* %5464, i32 0, i32 15
  %5466 = getelementptr inbounds %struct.Reg, %struct.Reg* %5465, i32 0, i32 0
  %RBP.i2407 = bitcast %union.anon* %5466 to i64*
  %5467 = load i64, i64* %RBP.i2407
  %5468 = sub i64 %5467, 1056
  %5469 = load i64, i64* %PC.i2405
  %5470 = add i64 %5469, 6
  store i64 %5470, i64* %PC.i2405
  %5471 = inttoptr i64 %5468 to i32*
  %5472 = load i32, i32* %5471
  %5473 = zext i32 %5472 to i64
  store i64 %5473, i64* %RDX.i2406, align 8
  store %struct.Memory* %loadMem_475cc4, %struct.Memory** %MEMORY
  %loadMem_475cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5475 = getelementptr inbounds %struct.GPR, %struct.GPR* %5474, i32 0, i32 33
  %5476 = getelementptr inbounds %struct.Reg, %struct.Reg* %5475, i32 0, i32 0
  %PC.i2403 = bitcast %union.anon* %5476 to i64*
  %5477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5478 = getelementptr inbounds %struct.GPR, %struct.GPR* %5477, i32 0, i32 7
  %5479 = getelementptr inbounds %struct.Reg, %struct.Reg* %5478, i32 0, i32 0
  %RDX.i2404 = bitcast %union.anon* %5479 to i64*
  %5480 = load i64, i64* %RDX.i2404
  %5481 = load i64, i64* %PC.i2403
  %5482 = add i64 %5481, 3
  store i64 %5482, i64* %PC.i2403
  %5483 = trunc i64 %5480 to i32
  %5484 = add i32 1, %5483
  %5485 = zext i32 %5484 to i64
  store i64 %5485, i64* %RDX.i2404, align 8
  %5486 = icmp ult i32 %5484, %5483
  %5487 = icmp ult i32 %5484, 1
  %5488 = or i1 %5486, %5487
  %5489 = zext i1 %5488 to i8
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5489, i8* %5490, align 1
  %5491 = and i32 %5484, 255
  %5492 = call i32 @llvm.ctpop.i32(i32 %5491)
  %5493 = trunc i32 %5492 to i8
  %5494 = and i8 %5493, 1
  %5495 = xor i8 %5494, 1
  %5496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5495, i8* %5496, align 1
  %5497 = xor i64 1, %5480
  %5498 = trunc i64 %5497 to i32
  %5499 = xor i32 %5498, %5484
  %5500 = lshr i32 %5499, 4
  %5501 = trunc i32 %5500 to i8
  %5502 = and i8 %5501, 1
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5502, i8* %5503, align 1
  %5504 = icmp eq i32 %5484, 0
  %5505 = zext i1 %5504 to i8
  %5506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5505, i8* %5506, align 1
  %5507 = lshr i32 %5484, 31
  %5508 = trunc i32 %5507 to i8
  %5509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5508, i8* %5509, align 1
  %5510 = lshr i32 %5483, 31
  %5511 = xor i32 %5507, %5510
  %5512 = add i32 %5511, %5507
  %5513 = icmp eq i32 %5512, 2
  %5514 = zext i1 %5513 to i8
  %5515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5514, i8* %5515, align 1
  store %struct.Memory* %loadMem_475cca, %struct.Memory** %MEMORY
  %loadMem_475ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5517 = getelementptr inbounds %struct.GPR, %struct.GPR* %5516, i32 0, i32 33
  %5518 = getelementptr inbounds %struct.Reg, %struct.Reg* %5517, i32 0, i32 0
  %PC.i2400 = bitcast %union.anon* %5518 to i64*
  %5519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5520 = getelementptr inbounds %struct.GPR, %struct.GPR* %5519, i32 0, i32 7
  %5521 = getelementptr inbounds %struct.Reg, %struct.Reg* %5520, i32 0, i32 0
  %EDX.i2401 = bitcast %union.anon* %5521 to i32*
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5523 = getelementptr inbounds %struct.GPR, %struct.GPR* %5522, i32 0, i32 15
  %5524 = getelementptr inbounds %struct.Reg, %struct.Reg* %5523, i32 0, i32 0
  %RBP.i2402 = bitcast %union.anon* %5524 to i64*
  %5525 = load i64, i64* %RBP.i2402
  %5526 = sub i64 %5525, 28
  %5527 = load i32, i32* %EDX.i2401
  %5528 = zext i32 %5527 to i64
  %5529 = load i64, i64* %PC.i2400
  %5530 = add i64 %5529, 3
  store i64 %5530, i64* %PC.i2400
  %5531 = inttoptr i64 %5526 to i32*
  store i32 %5527, i32* %5531
  store %struct.Memory* %loadMem_475ccd, %struct.Memory** %MEMORY
  br label %block_.L_475cd0

block_.L_475cd0:                                  ; preds = %block_.L_475d9a, %routine_idivl__ecx.exit2415
  %loadMem_475cd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5533 = getelementptr inbounds %struct.GPR, %struct.GPR* %5532, i32 0, i32 33
  %5534 = getelementptr inbounds %struct.Reg, %struct.Reg* %5533, i32 0, i32 0
  %PC.i2397 = bitcast %union.anon* %5534 to i64*
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5536 = getelementptr inbounds %struct.GPR, %struct.GPR* %5535, i32 0, i32 1
  %5537 = getelementptr inbounds %struct.Reg, %struct.Reg* %5536, i32 0, i32 0
  %RAX.i2398 = bitcast %union.anon* %5537 to i64*
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5539 = getelementptr inbounds %struct.GPR, %struct.GPR* %5538, i32 0, i32 15
  %5540 = getelementptr inbounds %struct.Reg, %struct.Reg* %5539, i32 0, i32 0
  %RBP.i2399 = bitcast %union.anon* %5540 to i64*
  %5541 = load i64, i64* %RBP.i2399
  %5542 = sub i64 %5541, 28
  %5543 = load i64, i64* %PC.i2397
  %5544 = add i64 %5543, 3
  store i64 %5544, i64* %PC.i2397
  %5545 = inttoptr i64 %5542 to i32*
  %5546 = load i32, i32* %5545
  %5547 = zext i32 %5546 to i64
  store i64 %5547, i64* %RAX.i2398, align 8
  store %struct.Memory* %loadMem_475cd0, %struct.Memory** %MEMORY
  %loadMem_475cd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5549 = getelementptr inbounds %struct.GPR, %struct.GPR* %5548, i32 0, i32 33
  %5550 = getelementptr inbounds %struct.Reg, %struct.Reg* %5549, i32 0, i32 0
  %PC.i2394 = bitcast %union.anon* %5550 to i64*
  %5551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5552 = getelementptr inbounds %struct.GPR, %struct.GPR* %5551, i32 0, i32 1
  %5553 = getelementptr inbounds %struct.Reg, %struct.Reg* %5552, i32 0, i32 0
  %EAX.i2395 = bitcast %union.anon* %5553 to i32*
  %5554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5555 = getelementptr inbounds %struct.GPR, %struct.GPR* %5554, i32 0, i32 15
  %5556 = getelementptr inbounds %struct.Reg, %struct.Reg* %5555, i32 0, i32 0
  %RBP.i2396 = bitcast %union.anon* %5556 to i64*
  %5557 = load i32, i32* %EAX.i2395
  %5558 = zext i32 %5557 to i64
  %5559 = load i64, i64* %RBP.i2396
  %5560 = sub i64 %5559, 224
  %5561 = load i64, i64* %PC.i2394
  %5562 = add i64 %5561, 6
  store i64 %5562, i64* %PC.i2394
  %5563 = inttoptr i64 %5560 to i32*
  %5564 = load i32, i32* %5563
  %5565 = sub i32 %5557, %5564
  %5566 = icmp ult i32 %5557, %5564
  %5567 = zext i1 %5566 to i8
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5567, i8* %5568, align 1
  %5569 = and i32 %5565, 255
  %5570 = call i32 @llvm.ctpop.i32(i32 %5569)
  %5571 = trunc i32 %5570 to i8
  %5572 = and i8 %5571, 1
  %5573 = xor i8 %5572, 1
  %5574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5573, i8* %5574, align 1
  %5575 = xor i32 %5564, %5557
  %5576 = xor i32 %5575, %5565
  %5577 = lshr i32 %5576, 4
  %5578 = trunc i32 %5577 to i8
  %5579 = and i8 %5578, 1
  %5580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5579, i8* %5580, align 1
  %5581 = icmp eq i32 %5565, 0
  %5582 = zext i1 %5581 to i8
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5582, i8* %5583, align 1
  %5584 = lshr i32 %5565, 31
  %5585 = trunc i32 %5584 to i8
  %5586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5585, i8* %5586, align 1
  %5587 = lshr i32 %5557, 31
  %5588 = lshr i32 %5564, 31
  %5589 = xor i32 %5588, %5587
  %5590 = xor i32 %5584, %5587
  %5591 = add i32 %5590, %5589
  %5592 = icmp eq i32 %5591, 2
  %5593 = zext i1 %5592 to i8
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5593, i8* %5594, align 1
  store %struct.Memory* %loadMem_475cd3, %struct.Memory** %MEMORY
  %loadMem_475cd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5596 = getelementptr inbounds %struct.GPR, %struct.GPR* %5595, i32 0, i32 33
  %5597 = getelementptr inbounds %struct.Reg, %struct.Reg* %5596, i32 0, i32 0
  %PC.i2393 = bitcast %union.anon* %5597 to i64*
  %5598 = load i64, i64* %PC.i2393
  %5599 = add i64 %5598, 207
  %5600 = load i64, i64* %PC.i2393
  %5601 = add i64 %5600, 6
  %5602 = load i64, i64* %PC.i2393
  %5603 = add i64 %5602, 6
  store i64 %5603, i64* %PC.i2393
  %5604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5605 = load i8, i8* %5604, align 1
  %5606 = icmp eq i8 %5605, 0
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5608 = load i8, i8* %5607, align 1
  %5609 = icmp ne i8 %5608, 0
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5611 = load i8, i8* %5610, align 1
  %5612 = icmp ne i8 %5611, 0
  %5613 = xor i1 %5609, %5612
  %5614 = xor i1 %5613, true
  %5615 = and i1 %5606, %5614
  %5616 = zext i1 %5615 to i8
  store i8 %5616, i8* %BRANCH_TAKEN, align 1
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5618 = select i1 %5615, i64 %5599, i64 %5601
  store i64 %5618, i64* %5617, align 8
  store %struct.Memory* %loadMem_475cd9, %struct.Memory** %MEMORY
  %loadBr_475cd9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475cd9 = icmp eq i8 %loadBr_475cd9, 1
  br i1 %cmpBr_475cd9, label %block_.L_475da8, label %block_475cdf

block_475cdf:                                     ; preds = %block_.L_475cd0
  %loadMem_475cdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5620 = getelementptr inbounds %struct.GPR, %struct.GPR* %5619, i32 0, i32 33
  %5621 = getelementptr inbounds %struct.Reg, %struct.Reg* %5620, i32 0, i32 0
  %PC.i2391 = bitcast %union.anon* %5621 to i64*
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5623 = getelementptr inbounds %struct.GPR, %struct.GPR* %5622, i32 0, i32 15
  %5624 = getelementptr inbounds %struct.Reg, %struct.Reg* %5623, i32 0, i32 0
  %RBP.i2392 = bitcast %union.anon* %5624 to i64*
  %5625 = load i64, i64* %RBP.i2392
  %5626 = sub i64 %5625, 32
  %5627 = load i64, i64* %PC.i2391
  %5628 = add i64 %5627, 7
  store i64 %5628, i64* %PC.i2391
  %5629 = inttoptr i64 %5626 to i32*
  store i32 0, i32* %5629
  store %struct.Memory* %loadMem_475cdf, %struct.Memory** %MEMORY
  br label %block_.L_475ce6

block_.L_475ce6:                                  ; preds = %block_.L_475d87, %block_475cdf
  %loadMem_475ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5631 = getelementptr inbounds %struct.GPR, %struct.GPR* %5630, i32 0, i32 33
  %5632 = getelementptr inbounds %struct.Reg, %struct.Reg* %5631, i32 0, i32 0
  %PC.i2388 = bitcast %union.anon* %5632 to i64*
  %5633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5634 = getelementptr inbounds %struct.GPR, %struct.GPR* %5633, i32 0, i32 1
  %5635 = getelementptr inbounds %struct.Reg, %struct.Reg* %5634, i32 0, i32 0
  %RAX.i2389 = bitcast %union.anon* %5635 to i64*
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5637 = getelementptr inbounds %struct.GPR, %struct.GPR* %5636, i32 0, i32 15
  %5638 = getelementptr inbounds %struct.Reg, %struct.Reg* %5637, i32 0, i32 0
  %RBP.i2390 = bitcast %union.anon* %5638 to i64*
  %5639 = load i64, i64* %RBP.i2390
  %5640 = sub i64 %5639, 32
  %5641 = load i64, i64* %PC.i2388
  %5642 = add i64 %5641, 3
  store i64 %5642, i64* %PC.i2388
  %5643 = inttoptr i64 %5640 to i32*
  %5644 = load i32, i32* %5643
  %5645 = zext i32 %5644 to i64
  store i64 %5645, i64* %RAX.i2389, align 8
  store %struct.Memory* %loadMem_475ce6, %struct.Memory** %MEMORY
  %loadMem_475ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5647 = getelementptr inbounds %struct.GPR, %struct.GPR* %5646, i32 0, i32 33
  %5648 = getelementptr inbounds %struct.Reg, %struct.Reg* %5647, i32 0, i32 0
  %PC.i2386 = bitcast %union.anon* %5648 to i64*
  %5649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5650 = getelementptr inbounds %struct.GPR, %struct.GPR* %5649, i32 0, i32 1
  %5651 = getelementptr inbounds %struct.Reg, %struct.Reg* %5650, i32 0, i32 0
  %EAX.i2387 = bitcast %union.anon* %5651 to i32*
  %5652 = load i32, i32* %EAX.i2387
  %5653 = zext i32 %5652 to i64
  %5654 = load i64, i64* %PC.i2386
  %5655 = add i64 %5654, 7
  store i64 %5655, i64* %PC.i2386
  %5656 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %5657 = sub i32 %5652, %5656
  %5658 = icmp ult i32 %5652, %5656
  %5659 = zext i1 %5658 to i8
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5659, i8* %5660, align 1
  %5661 = and i32 %5657, 255
  %5662 = call i32 @llvm.ctpop.i32(i32 %5661)
  %5663 = trunc i32 %5662 to i8
  %5664 = and i8 %5663, 1
  %5665 = xor i8 %5664, 1
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5665, i8* %5666, align 1
  %5667 = xor i32 %5656, %5652
  %5668 = xor i32 %5667, %5657
  %5669 = lshr i32 %5668, 4
  %5670 = trunc i32 %5669 to i8
  %5671 = and i8 %5670, 1
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5671, i8* %5672, align 1
  %5673 = icmp eq i32 %5657, 0
  %5674 = zext i1 %5673 to i8
  %5675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5674, i8* %5675, align 1
  %5676 = lshr i32 %5657, 31
  %5677 = trunc i32 %5676 to i8
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5677, i8* %5678, align 1
  %5679 = lshr i32 %5652, 31
  %5680 = lshr i32 %5656, 31
  %5681 = xor i32 %5680, %5679
  %5682 = xor i32 %5676, %5679
  %5683 = add i32 %5682, %5681
  %5684 = icmp eq i32 %5683, 2
  %5685 = zext i1 %5684 to i8
  %5686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5685, i8* %5686, align 1
  store %struct.Memory* %loadMem_475ce9, %struct.Memory** %MEMORY
  %loadMem_475cf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5688 = getelementptr inbounds %struct.GPR, %struct.GPR* %5687, i32 0, i32 33
  %5689 = getelementptr inbounds %struct.Reg, %struct.Reg* %5688, i32 0, i32 0
  %PC.i2385 = bitcast %union.anon* %5689 to i64*
  %5690 = load i64, i64* %PC.i2385
  %5691 = add i64 %5690, 165
  %5692 = load i64, i64* %PC.i2385
  %5693 = add i64 %5692, 6
  %5694 = load i64, i64* %PC.i2385
  %5695 = add i64 %5694, 6
  store i64 %5695, i64* %PC.i2385
  %5696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5697 = load i8, i8* %5696, align 1
  %5698 = icmp ne i8 %5697, 0
  %5699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5700 = load i8, i8* %5699, align 1
  %5701 = icmp ne i8 %5700, 0
  %5702 = xor i1 %5698, %5701
  %5703 = xor i1 %5702, true
  %5704 = zext i1 %5703 to i8
  store i8 %5704, i8* %BRANCH_TAKEN, align 1
  %5705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5706 = select i1 %5702, i64 %5693, i64 %5691
  store i64 %5706, i64* %5705, align 8
  store %struct.Memory* %loadMem_475cf0, %struct.Memory** %MEMORY
  %loadBr_475cf0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475cf0 = icmp eq i8 %loadBr_475cf0, 1
  br i1 %cmpBr_475cf0, label %block_.L_475d95, label %block_475cf6

block_475cf6:                                     ; preds = %block_.L_475ce6
  %loadMem_475cf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5708 = getelementptr inbounds %struct.GPR, %struct.GPR* %5707, i32 0, i32 33
  %5709 = getelementptr inbounds %struct.Reg, %struct.Reg* %5708, i32 0, i32 0
  %PC.i2382 = bitcast %union.anon* %5709 to i64*
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5711 = getelementptr inbounds %struct.GPR, %struct.GPR* %5710, i32 0, i32 1
  %5712 = getelementptr inbounds %struct.Reg, %struct.Reg* %5711, i32 0, i32 0
  %RAX.i2383 = bitcast %union.anon* %5712 to i64*
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5714 = getelementptr inbounds %struct.GPR, %struct.GPR* %5713, i32 0, i32 15
  %5715 = getelementptr inbounds %struct.Reg, %struct.Reg* %5714, i32 0, i32 0
  %RBP.i2384 = bitcast %union.anon* %5715 to i64*
  %5716 = load i64, i64* %RBP.i2384
  %5717 = sub i64 %5716, 28
  %5718 = load i64, i64* %PC.i2382
  %5719 = add i64 %5718, 4
  store i64 %5719, i64* %PC.i2382
  %5720 = inttoptr i64 %5717 to i32*
  %5721 = load i32, i32* %5720
  %5722 = sext i32 %5721 to i64
  %5723 = mul i64 %5722, 20
  %5724 = trunc i64 %5723 to i32
  %5725 = and i64 %5723, 4294967295
  store i64 %5725, i64* %RAX.i2383, align 8
  %5726 = shl i64 %5723, 32
  %5727 = ashr exact i64 %5726, 32
  %5728 = icmp ne i64 %5727, %5723
  %5729 = zext i1 %5728 to i8
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5729, i8* %5730, align 1
  %5731 = and i32 %5724, 255
  %5732 = call i32 @llvm.ctpop.i32(i32 %5731)
  %5733 = trunc i32 %5732 to i8
  %5734 = and i8 %5733, 1
  %5735 = xor i8 %5734, 1
  %5736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5735, i8* %5736, align 1
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5737, align 1
  %5738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5738, align 1
  %5739 = lshr i32 %5724, 31
  %5740 = trunc i32 %5739 to i8
  %5741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5740, i8* %5741, align 1
  %5742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5729, i8* %5742, align 1
  store %struct.Memory* %loadMem_475cf6, %struct.Memory** %MEMORY
  %loadMem_475cfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5744 = getelementptr inbounds %struct.GPR, %struct.GPR* %5743, i32 0, i32 33
  %5745 = getelementptr inbounds %struct.Reg, %struct.Reg* %5744, i32 0, i32 0
  %PC.i2380 = bitcast %union.anon* %5745 to i64*
  %5746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5747 = getelementptr inbounds %struct.GPR, %struct.GPR* %5746, i32 0, i32 1
  %5748 = getelementptr inbounds %struct.Reg, %struct.Reg* %5747, i32 0, i32 0
  %RAX.i2381 = bitcast %union.anon* %5748 to i64*
  %5749 = load i64, i64* %RAX.i2381
  %5750 = load i64, i64* %PC.i2380
  %5751 = add i64 %5750, 3
  store i64 %5751, i64* %PC.i2380
  %5752 = trunc i64 %5749 to i32
  %5753 = add i32 21, %5752
  %5754 = zext i32 %5753 to i64
  store i64 %5754, i64* %RAX.i2381, align 8
  %5755 = icmp ult i32 %5753, %5752
  %5756 = icmp ult i32 %5753, 21
  %5757 = or i1 %5755, %5756
  %5758 = zext i1 %5757 to i8
  %5759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5758, i8* %5759, align 1
  %5760 = and i32 %5753, 255
  %5761 = call i32 @llvm.ctpop.i32(i32 %5760)
  %5762 = trunc i32 %5761 to i8
  %5763 = and i8 %5762, 1
  %5764 = xor i8 %5763, 1
  %5765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5764, i8* %5765, align 1
  %5766 = xor i64 21, %5749
  %5767 = trunc i64 %5766 to i32
  %5768 = xor i32 %5767, %5753
  %5769 = lshr i32 %5768, 4
  %5770 = trunc i32 %5769 to i8
  %5771 = and i8 %5770, 1
  %5772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5771, i8* %5772, align 1
  %5773 = icmp eq i32 %5753, 0
  %5774 = zext i1 %5773 to i8
  %5775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5774, i8* %5775, align 1
  %5776 = lshr i32 %5753, 31
  %5777 = trunc i32 %5776 to i8
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5777, i8* %5778, align 1
  %5779 = lshr i32 %5752, 31
  %5780 = xor i32 %5776, %5779
  %5781 = add i32 %5780, %5776
  %5782 = icmp eq i32 %5781, 2
  %5783 = zext i1 %5782 to i8
  %5784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5783, i8* %5784, align 1
  store %struct.Memory* %loadMem_475cfa, %struct.Memory** %MEMORY
  %loadMem_475cfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5786 = getelementptr inbounds %struct.GPR, %struct.GPR* %5785, i32 0, i32 33
  %5787 = getelementptr inbounds %struct.Reg, %struct.Reg* %5786, i32 0, i32 0
  %PC.i2377 = bitcast %union.anon* %5787 to i64*
  %5788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5789 = getelementptr inbounds %struct.GPR, %struct.GPR* %5788, i32 0, i32 1
  %5790 = getelementptr inbounds %struct.Reg, %struct.Reg* %5789, i32 0, i32 0
  %RAX.i2378 = bitcast %union.anon* %5790 to i64*
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5792 = getelementptr inbounds %struct.GPR, %struct.GPR* %5791, i32 0, i32 15
  %5793 = getelementptr inbounds %struct.Reg, %struct.Reg* %5792, i32 0, i32 0
  %RBP.i2379 = bitcast %union.anon* %5793 to i64*
  %5794 = load i64, i64* %RAX.i2378
  %5795 = load i64, i64* %RBP.i2379
  %5796 = sub i64 %5795, 32
  %5797 = load i64, i64* %PC.i2377
  %5798 = add i64 %5797, 3
  store i64 %5798, i64* %PC.i2377
  %5799 = trunc i64 %5794 to i32
  %5800 = inttoptr i64 %5796 to i32*
  %5801 = load i32, i32* %5800
  %5802 = add i32 %5801, %5799
  %5803 = zext i32 %5802 to i64
  store i64 %5803, i64* %RAX.i2378, align 8
  %5804 = icmp ult i32 %5802, %5799
  %5805 = icmp ult i32 %5802, %5801
  %5806 = or i1 %5804, %5805
  %5807 = zext i1 %5806 to i8
  %5808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5807, i8* %5808, align 1
  %5809 = and i32 %5802, 255
  %5810 = call i32 @llvm.ctpop.i32(i32 %5809)
  %5811 = trunc i32 %5810 to i8
  %5812 = and i8 %5811, 1
  %5813 = xor i8 %5812, 1
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5813, i8* %5814, align 1
  %5815 = xor i32 %5801, %5799
  %5816 = xor i32 %5815, %5802
  %5817 = lshr i32 %5816, 4
  %5818 = trunc i32 %5817 to i8
  %5819 = and i8 %5818, 1
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5819, i8* %5820, align 1
  %5821 = icmp eq i32 %5802, 0
  %5822 = zext i1 %5821 to i8
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5822, i8* %5823, align 1
  %5824 = lshr i32 %5802, 31
  %5825 = trunc i32 %5824 to i8
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5825, i8* %5826, align 1
  %5827 = lshr i32 %5799, 31
  %5828 = lshr i32 %5801, 31
  %5829 = xor i32 %5824, %5827
  %5830 = xor i32 %5824, %5828
  %5831 = add i32 %5829, %5830
  %5832 = icmp eq i32 %5831, 2
  %5833 = zext i1 %5832 to i8
  %5834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5833, i8* %5834, align 1
  store %struct.Memory* %loadMem_475cfd, %struct.Memory** %MEMORY
  %loadMem_475d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5836 = getelementptr inbounds %struct.GPR, %struct.GPR* %5835, i32 0, i32 33
  %5837 = getelementptr inbounds %struct.Reg, %struct.Reg* %5836, i32 0, i32 0
  %PC.i2374 = bitcast %union.anon* %5837 to i64*
  %5838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5839 = getelementptr inbounds %struct.GPR, %struct.GPR* %5838, i32 0, i32 1
  %5840 = getelementptr inbounds %struct.Reg, %struct.Reg* %5839, i32 0, i32 0
  %EAX.i2375 = bitcast %union.anon* %5840 to i32*
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5842 = getelementptr inbounds %struct.GPR, %struct.GPR* %5841, i32 0, i32 5
  %5843 = getelementptr inbounds %struct.Reg, %struct.Reg* %5842, i32 0, i32 0
  %RCX.i2376 = bitcast %union.anon* %5843 to i64*
  %5844 = load i32, i32* %EAX.i2375
  %5845 = zext i32 %5844 to i64
  %5846 = load i64, i64* %PC.i2374
  %5847 = add i64 %5846, 3
  store i64 %5847, i64* %PC.i2374
  %5848 = shl i64 %5845, 32
  %5849 = ashr exact i64 %5848, 32
  store i64 %5849, i64* %RCX.i2376, align 8
  store %struct.Memory* %loadMem_475d00, %struct.Memory** %MEMORY
  %loadMem_475d03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5851 = getelementptr inbounds %struct.GPR, %struct.GPR* %5850, i32 0, i32 33
  %5852 = getelementptr inbounds %struct.Reg, %struct.Reg* %5851, i32 0, i32 0
  %PC.i2371 = bitcast %union.anon* %5852 to i64*
  %5853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5854 = getelementptr inbounds %struct.GPR, %struct.GPR* %5853, i32 0, i32 5
  %5855 = getelementptr inbounds %struct.Reg, %struct.Reg* %5854, i32 0, i32 0
  %RCX.i2372 = bitcast %union.anon* %5855 to i64*
  %5856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5857 = getelementptr inbounds %struct.GPR, %struct.GPR* %5856, i32 0, i32 15
  %5858 = getelementptr inbounds %struct.Reg, %struct.Reg* %5857, i32 0, i32 0
  %RBP.i2373 = bitcast %union.anon* %5858 to i64*
  %5859 = load i64, i64* %RBP.i2373
  %5860 = load i64, i64* %RCX.i2372
  %5861 = add i64 %5859, -1040
  %5862 = add i64 %5861, %5860
  %5863 = load i64, i64* %PC.i2371
  %5864 = add i64 %5863, 8
  store i64 %5864, i64* %PC.i2371
  %5865 = inttoptr i64 %5862 to i8*
  %5866 = load i8, i8* %5865
  %5867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5867, align 1
  %5868 = zext i8 %5866 to i32
  %5869 = call i32 @llvm.ctpop.i32(i32 %5868)
  %5870 = trunc i32 %5869 to i8
  %5871 = and i8 %5870, 1
  %5872 = xor i8 %5871, 1
  %5873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5872, i8* %5873, align 1
  %5874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5874, align 1
  %5875 = icmp eq i8 %5866, 0
  %5876 = zext i1 %5875 to i8
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5876, i8* %5877, align 1
  %5878 = lshr i8 %5866, 7
  %5879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5878, i8* %5879, align 1
  %5880 = lshr i8 %5866, 7
  %5881 = xor i8 %5878, %5880
  %5882 = add i8 %5881, %5880
  %5883 = icmp eq i8 %5882, 2
  %5884 = zext i1 %5883 to i8
  %5885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5884, i8* %5885, align 1
  store %struct.Memory* %loadMem_475d03, %struct.Memory** %MEMORY
  %loadMem_475d0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5887 = getelementptr inbounds %struct.GPR, %struct.GPR* %5886, i32 0, i32 33
  %5888 = getelementptr inbounds %struct.Reg, %struct.Reg* %5887, i32 0, i32 0
  %PC.i2370 = bitcast %union.anon* %5888 to i64*
  %5889 = load i64, i64* %PC.i2370
  %5890 = add i64 %5889, 119
  %5891 = load i64, i64* %PC.i2370
  %5892 = add i64 %5891, 6
  %5893 = load i64, i64* %PC.i2370
  %5894 = add i64 %5893, 6
  store i64 %5894, i64* %PC.i2370
  %5895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5896 = load i8, i8* %5895, align 1
  store i8 %5896, i8* %BRANCH_TAKEN, align 1
  %5897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5898 = icmp ne i8 %5896, 0
  %5899 = select i1 %5898, i64 %5890, i64 %5892
  store i64 %5899, i64* %5897, align 8
  store %struct.Memory* %loadMem_475d0b, %struct.Memory** %MEMORY
  %loadBr_475d0b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475d0b = icmp eq i8 %loadBr_475d0b, 1
  br i1 %cmpBr_475d0b, label %block_.L_475d82, label %block_475d11

block_475d11:                                     ; preds = %block_475cf6
  %loadMem_475d11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5901 = getelementptr inbounds %struct.GPR, %struct.GPR* %5900, i32 0, i32 33
  %5902 = getelementptr inbounds %struct.Reg, %struct.Reg* %5901, i32 0, i32 0
  %PC.i2367 = bitcast %union.anon* %5902 to i64*
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5904 = getelementptr inbounds %struct.GPR, %struct.GPR* %5903, i32 0, i32 1
  %5905 = getelementptr inbounds %struct.Reg, %struct.Reg* %5904, i32 0, i32 0
  %RAX.i2368 = bitcast %union.anon* %5905 to i64*
  %5906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5907 = getelementptr inbounds %struct.GPR, %struct.GPR* %5906, i32 0, i32 15
  %5908 = getelementptr inbounds %struct.Reg, %struct.Reg* %5907, i32 0, i32 0
  %RBP.i2369 = bitcast %union.anon* %5908 to i64*
  %5909 = load i64, i64* %RBP.i2369
  %5910 = sub i64 %5909, 32
  %5911 = load i64, i64* %PC.i2367
  %5912 = add i64 %5911, 3
  store i64 %5912, i64* %PC.i2367
  %5913 = inttoptr i64 %5910 to i32*
  %5914 = load i32, i32* %5913
  %5915 = zext i32 %5914 to i64
  store i64 %5915, i64* %RAX.i2368, align 8
  store %struct.Memory* %loadMem_475d11, %struct.Memory** %MEMORY
  %loadMem_475d14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5917 = getelementptr inbounds %struct.GPR, %struct.GPR* %5916, i32 0, i32 33
  %5918 = getelementptr inbounds %struct.Reg, %struct.Reg* %5917, i32 0, i32 0
  %PC.i2364 = bitcast %union.anon* %5918 to i64*
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5920 = getelementptr inbounds %struct.GPR, %struct.GPR* %5919, i32 0, i32 1
  %5921 = getelementptr inbounds %struct.Reg, %struct.Reg* %5920, i32 0, i32 0
  %RAX.i2365 = bitcast %union.anon* %5921 to i64*
  %5922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5923 = getelementptr inbounds %struct.GPR, %struct.GPR* %5922, i32 0, i32 15
  %5924 = getelementptr inbounds %struct.Reg, %struct.Reg* %5923, i32 0, i32 0
  %RBP.i2366 = bitcast %union.anon* %5924 to i64*
  %5925 = load i64, i64* %RAX.i2365
  %5926 = load i64, i64* %RBP.i2366
  %5927 = sub i64 %5926, 1060
  %5928 = load i64, i64* %PC.i2364
  %5929 = add i64 %5928, 6
  store i64 %5929, i64* %PC.i2364
  %5930 = trunc i64 %5925 to i32
  %5931 = inttoptr i64 %5927 to i32*
  %5932 = load i32, i32* %5931
  %5933 = sub i32 %5930, %5932
  %5934 = zext i32 %5933 to i64
  store i64 %5934, i64* %RAX.i2365, align 8
  %5935 = icmp ult i32 %5930, %5932
  %5936 = zext i1 %5935 to i8
  %5937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5936, i8* %5937, align 1
  %5938 = and i32 %5933, 255
  %5939 = call i32 @llvm.ctpop.i32(i32 %5938)
  %5940 = trunc i32 %5939 to i8
  %5941 = and i8 %5940, 1
  %5942 = xor i8 %5941, 1
  %5943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5942, i8* %5943, align 1
  %5944 = xor i32 %5932, %5930
  %5945 = xor i32 %5944, %5933
  %5946 = lshr i32 %5945, 4
  %5947 = trunc i32 %5946 to i8
  %5948 = and i8 %5947, 1
  %5949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5948, i8* %5949, align 1
  %5950 = icmp eq i32 %5933, 0
  %5951 = zext i1 %5950 to i8
  %5952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5951, i8* %5952, align 1
  %5953 = lshr i32 %5933, 31
  %5954 = trunc i32 %5953 to i8
  %5955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5954, i8* %5955, align 1
  %5956 = lshr i32 %5930, 31
  %5957 = lshr i32 %5932, 31
  %5958 = xor i32 %5957, %5956
  %5959 = xor i32 %5953, %5956
  %5960 = add i32 %5959, %5958
  %5961 = icmp eq i32 %5960, 2
  %5962 = zext i1 %5961 to i8
  %5963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5962, i8* %5963, align 1
  store %struct.Memory* %loadMem_475d14, %struct.Memory** %MEMORY
  %loadMem_475d1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5965 = getelementptr inbounds %struct.GPR, %struct.GPR* %5964, i32 0, i32 33
  %5966 = getelementptr inbounds %struct.Reg, %struct.Reg* %5965, i32 0, i32 0
  %PC.i2361 = bitcast %union.anon* %5966 to i64*
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5968 = getelementptr inbounds %struct.GPR, %struct.GPR* %5967, i32 0, i32 1
  %5969 = getelementptr inbounds %struct.Reg, %struct.Reg* %5968, i32 0, i32 0
  %EAX.i2362 = bitcast %union.anon* %5969 to i32*
  %5970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5971 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5970, i64 0, i64 0
  %YMM0.i2363 = bitcast %union.VectorReg* %5971 to %"class.std::bitset"*
  %5972 = bitcast %"class.std::bitset"* %YMM0.i2363 to i8*
  %5973 = load i32, i32* %EAX.i2362
  %5974 = zext i32 %5973 to i64
  %5975 = load i64, i64* %PC.i2361
  %5976 = add i64 %5975, 4
  store i64 %5976, i64* %PC.i2361
  %5977 = bitcast i8* %5972 to <2 x i32>*
  %5978 = load <2 x i32>, <2 x i32>* %5977, align 1
  %5979 = getelementptr inbounds i8, i8* %5972, i64 8
  %5980 = bitcast i8* %5979 to <2 x i32>*
  %5981 = load <2 x i32>, <2 x i32>* %5980, align 1
  %5982 = sitofp i32 %5973 to float
  %5983 = bitcast i8* %5972 to float*
  store float %5982, float* %5983, align 1
  %5984 = extractelement <2 x i32> %5978, i32 1
  %5985 = getelementptr inbounds i8, i8* %5972, i64 4
  %5986 = bitcast i8* %5985 to i32*
  store i32 %5984, i32* %5986, align 1
  %5987 = extractelement <2 x i32> %5981, i32 0
  %5988 = bitcast i8* %5979 to i32*
  store i32 %5987, i32* %5988, align 1
  %5989 = extractelement <2 x i32> %5981, i32 1
  %5990 = getelementptr inbounds i8, i8* %5972, i64 12
  %5991 = bitcast i8* %5990 to i32*
  store i32 %5989, i32* %5991, align 1
  store %struct.Memory* %loadMem_475d1a, %struct.Memory** %MEMORY
  %loadMem_475d1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5993 = getelementptr inbounds %struct.GPR, %struct.GPR* %5992, i32 0, i32 33
  %5994 = getelementptr inbounds %struct.Reg, %struct.Reg* %5993, i32 0, i32 0
  %PC.i2358 = bitcast %union.anon* %5994 to i64*
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5996 = getelementptr inbounds %struct.GPR, %struct.GPR* %5995, i32 0, i32 1
  %5997 = getelementptr inbounds %struct.Reg, %struct.Reg* %5996, i32 0, i32 0
  %RAX.i2359 = bitcast %union.anon* %5997 to i64*
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5999 = getelementptr inbounds %struct.GPR, %struct.GPR* %5998, i32 0, i32 15
  %6000 = getelementptr inbounds %struct.Reg, %struct.Reg* %5999, i32 0, i32 0
  %RBP.i2360 = bitcast %union.anon* %6000 to i64*
  %6001 = load i64, i64* %RBP.i2360
  %6002 = sub i64 %6001, 28
  %6003 = load i64, i64* %PC.i2358
  %6004 = add i64 %6003, 3
  store i64 %6004, i64* %PC.i2358
  %6005 = inttoptr i64 %6002 to i32*
  %6006 = load i32, i32* %6005
  %6007 = zext i32 %6006 to i64
  store i64 %6007, i64* %RAX.i2359, align 8
  store %struct.Memory* %loadMem_475d1e, %struct.Memory** %MEMORY
  %loadMem_475d21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6009 = getelementptr inbounds %struct.GPR, %struct.GPR* %6008, i32 0, i32 33
  %6010 = getelementptr inbounds %struct.Reg, %struct.Reg* %6009, i32 0, i32 0
  %PC.i2355 = bitcast %union.anon* %6010 to i64*
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6012 = getelementptr inbounds %struct.GPR, %struct.GPR* %6011, i32 0, i32 1
  %6013 = getelementptr inbounds %struct.Reg, %struct.Reg* %6012, i32 0, i32 0
  %RAX.i2356 = bitcast %union.anon* %6013 to i64*
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6015 = getelementptr inbounds %struct.GPR, %struct.GPR* %6014, i32 0, i32 15
  %6016 = getelementptr inbounds %struct.Reg, %struct.Reg* %6015, i32 0, i32 0
  %RBP.i2357 = bitcast %union.anon* %6016 to i64*
  %6017 = load i64, i64* %RAX.i2356
  %6018 = load i64, i64* %RBP.i2357
  %6019 = sub i64 %6018, 1056
  %6020 = load i64, i64* %PC.i2355
  %6021 = add i64 %6020, 6
  store i64 %6021, i64* %PC.i2355
  %6022 = trunc i64 %6017 to i32
  %6023 = inttoptr i64 %6019 to i32*
  %6024 = load i32, i32* %6023
  %6025 = sub i32 %6022, %6024
  %6026 = zext i32 %6025 to i64
  store i64 %6026, i64* %RAX.i2356, align 8
  %6027 = icmp ult i32 %6022, %6024
  %6028 = zext i1 %6027 to i8
  %6029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6028, i8* %6029, align 1
  %6030 = and i32 %6025, 255
  %6031 = call i32 @llvm.ctpop.i32(i32 %6030)
  %6032 = trunc i32 %6031 to i8
  %6033 = and i8 %6032, 1
  %6034 = xor i8 %6033, 1
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6034, i8* %6035, align 1
  %6036 = xor i32 %6024, %6022
  %6037 = xor i32 %6036, %6025
  %6038 = lshr i32 %6037, 4
  %6039 = trunc i32 %6038 to i8
  %6040 = and i8 %6039, 1
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6040, i8* %6041, align 1
  %6042 = icmp eq i32 %6025, 0
  %6043 = zext i1 %6042 to i8
  %6044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6043, i8* %6044, align 1
  %6045 = lshr i32 %6025, 31
  %6046 = trunc i32 %6045 to i8
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6046, i8* %6047, align 1
  %6048 = lshr i32 %6022, 31
  %6049 = lshr i32 %6024, 31
  %6050 = xor i32 %6049, %6048
  %6051 = xor i32 %6045, %6048
  %6052 = add i32 %6051, %6050
  %6053 = icmp eq i32 %6052, 2
  %6054 = zext i1 %6053 to i8
  %6055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6054, i8* %6055, align 1
  store %struct.Memory* %loadMem_475d21, %struct.Memory** %MEMORY
  %loadMem_475d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6057 = getelementptr inbounds %struct.GPR, %struct.GPR* %6056, i32 0, i32 33
  %6058 = getelementptr inbounds %struct.Reg, %struct.Reg* %6057, i32 0, i32 0
  %PC.i2352 = bitcast %union.anon* %6058 to i64*
  %6059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6060 = getelementptr inbounds %struct.GPR, %struct.GPR* %6059, i32 0, i32 1
  %6061 = getelementptr inbounds %struct.Reg, %struct.Reg* %6060, i32 0, i32 0
  %EAX.i2353 = bitcast %union.anon* %6061 to i32*
  %6062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6063 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6062, i64 0, i64 1
  %YMM1.i2354 = bitcast %union.VectorReg* %6063 to %"class.std::bitset"*
  %6064 = bitcast %"class.std::bitset"* %YMM1.i2354 to i8*
  %6065 = load i32, i32* %EAX.i2353
  %6066 = zext i32 %6065 to i64
  %6067 = load i64, i64* %PC.i2352
  %6068 = add i64 %6067, 4
  store i64 %6068, i64* %PC.i2352
  %6069 = bitcast i8* %6064 to <2 x i32>*
  %6070 = load <2 x i32>, <2 x i32>* %6069, align 1
  %6071 = getelementptr inbounds i8, i8* %6064, i64 8
  %6072 = bitcast i8* %6071 to <2 x i32>*
  %6073 = load <2 x i32>, <2 x i32>* %6072, align 1
  %6074 = sitofp i32 %6065 to float
  %6075 = bitcast i8* %6064 to float*
  store float %6074, float* %6075, align 1
  %6076 = extractelement <2 x i32> %6070, i32 1
  %6077 = getelementptr inbounds i8, i8* %6064, i64 4
  %6078 = bitcast i8* %6077 to i32*
  store i32 %6076, i32* %6078, align 1
  %6079 = extractelement <2 x i32> %6073, i32 0
  %6080 = bitcast i8* %6071 to i32*
  store i32 %6079, i32* %6080, align 1
  %6081 = extractelement <2 x i32> %6073, i32 1
  %6082 = getelementptr inbounds i8, i8* %6064, i64 12
  %6083 = bitcast i8* %6082 to i32*
  store i32 %6081, i32* %6083, align 1
  store %struct.Memory* %loadMem_475d27, %struct.Memory** %MEMORY
  %loadMem_475d2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6085 = getelementptr inbounds %struct.GPR, %struct.GPR* %6084, i32 0, i32 33
  %6086 = getelementptr inbounds %struct.Reg, %struct.Reg* %6085, i32 0, i32 0
  %PC.i2349 = bitcast %union.anon* %6086 to i64*
  %6087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6088 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6087, i64 0, i64 0
  %YMM0.i2350 = bitcast %union.VectorReg* %6088 to %"class.std::bitset"*
  %6089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6090 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6089, i64 0, i64 1
  %XMM1.i2351 = bitcast %union.VectorReg* %6090 to %union.vec128_t*
  %6091 = bitcast %"class.std::bitset"* %YMM0.i2350 to i8*
  %6092 = bitcast %"class.std::bitset"* %YMM0.i2350 to i8*
  %6093 = bitcast %union.vec128_t* %XMM1.i2351 to i8*
  %6094 = load i64, i64* %PC.i2349
  %6095 = add i64 %6094, 4
  store i64 %6095, i64* %PC.i2349
  %6096 = bitcast i8* %6092 to <2 x float>*
  %6097 = load <2 x float>, <2 x float>* %6096, align 1
  %6098 = getelementptr inbounds i8, i8* %6092, i64 8
  %6099 = bitcast i8* %6098 to <2 x i32>*
  %6100 = load <2 x i32>, <2 x i32>* %6099, align 1
  %6101 = bitcast i8* %6093 to <2 x float>*
  %6102 = load <2 x float>, <2 x float>* %6101, align 1
  %6103 = extractelement <2 x float> %6097, i32 0
  %6104 = extractelement <2 x float> %6102, i32 0
  %6105 = fdiv float %6103, %6104
  %6106 = bitcast i8* %6091 to float*
  store float %6105, float* %6106, align 1
  %6107 = bitcast <2 x float> %6097 to <2 x i32>
  %6108 = extractelement <2 x i32> %6107, i32 1
  %6109 = getelementptr inbounds i8, i8* %6091, i64 4
  %6110 = bitcast i8* %6109 to i32*
  store i32 %6108, i32* %6110, align 1
  %6111 = extractelement <2 x i32> %6100, i32 0
  %6112 = getelementptr inbounds i8, i8* %6091, i64 8
  %6113 = bitcast i8* %6112 to i32*
  store i32 %6111, i32* %6113, align 1
  %6114 = extractelement <2 x i32> %6100, i32 1
  %6115 = getelementptr inbounds i8, i8* %6091, i64 12
  %6116 = bitcast i8* %6115 to i32*
  store i32 %6114, i32* %6116, align 1
  store %struct.Memory* %loadMem_475d2b, %struct.Memory** %MEMORY
  %loadMem_475d2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6118 = getelementptr inbounds %struct.GPR, %struct.GPR* %6117, i32 0, i32 33
  %6119 = getelementptr inbounds %struct.Reg, %struct.Reg* %6118, i32 0, i32 0
  %PC.i2346 = bitcast %union.anon* %6119 to i64*
  %6120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6121 = getelementptr inbounds %struct.GPR, %struct.GPR* %6120, i32 0, i32 15
  %6122 = getelementptr inbounds %struct.Reg, %struct.Reg* %6121, i32 0, i32 0
  %RBP.i2347 = bitcast %union.anon* %6122 to i64*
  %6123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6124 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6123, i64 0, i64 0
  %XMM0.i2348 = bitcast %union.VectorReg* %6124 to %union.vec128_t*
  %6125 = load i64, i64* %RBP.i2347
  %6126 = sub i64 %6125, 1064
  %6127 = bitcast %union.vec128_t* %XMM0.i2348 to i8*
  %6128 = load i64, i64* %PC.i2346
  %6129 = add i64 %6128, 8
  store i64 %6129, i64* %PC.i2346
  %6130 = bitcast i8* %6127 to <2 x float>*
  %6131 = load <2 x float>, <2 x float>* %6130, align 1
  %6132 = extractelement <2 x float> %6131, i32 0
  %6133 = inttoptr i64 %6126 to float*
  store float %6132, float* %6133
  store %struct.Memory* %loadMem_475d2f, %struct.Memory** %MEMORY
  %loadMem_475d37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6135 = getelementptr inbounds %struct.GPR, %struct.GPR* %6134, i32 0, i32 33
  %6136 = getelementptr inbounds %struct.Reg, %struct.Reg* %6135, i32 0, i32 0
  %PC.i2344 = bitcast %union.anon* %6136 to i64*
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6138 = getelementptr inbounds %struct.GPR, %struct.GPR* %6137, i32 0, i32 15
  %6139 = getelementptr inbounds %struct.Reg, %struct.Reg* %6138, i32 0, i32 0
  %RBP.i2345 = bitcast %union.anon* %6139 to i64*
  %6140 = load i64, i64* %RBP.i2345
  %6141 = sub i64 %6140, 1048
  %6142 = load i64, i64* %PC.i2344
  %6143 = add i64 %6142, 7
  store i64 %6143, i64* %PC.i2344
  %6144 = inttoptr i64 %6141 to i32*
  %6145 = load i32, i32* %6144
  %6146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6146, align 1
  %6147 = and i32 %6145, 255
  %6148 = call i32 @llvm.ctpop.i32(i32 %6147)
  %6149 = trunc i32 %6148 to i8
  %6150 = and i8 %6149, 1
  %6151 = xor i8 %6150, 1
  %6152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6151, i8* %6152, align 1
  %6153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6153, align 1
  %6154 = icmp eq i32 %6145, 0
  %6155 = zext i1 %6154 to i8
  %6156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6155, i8* %6156, align 1
  %6157 = lshr i32 %6145, 31
  %6158 = trunc i32 %6157 to i8
  %6159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6158, i8* %6159, align 1
  %6160 = lshr i32 %6145, 31
  %6161 = xor i32 %6157, %6160
  %6162 = add i32 %6161, %6160
  %6163 = icmp eq i32 %6162, 2
  %6164 = zext i1 %6163 to i8
  %6165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6164, i8* %6165, align 1
  store %struct.Memory* %loadMem_475d37, %struct.Memory** %MEMORY
  %loadMem_475d3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6167 = getelementptr inbounds %struct.GPR, %struct.GPR* %6166, i32 0, i32 33
  %6168 = getelementptr inbounds %struct.Reg, %struct.Reg* %6167, i32 0, i32 0
  %PC.i2343 = bitcast %union.anon* %6168 to i64*
  %6169 = load i64, i64* %PC.i2343
  %6170 = add i64 %6169, 31
  %6171 = load i64, i64* %PC.i2343
  %6172 = add i64 %6171, 6
  %6173 = load i64, i64* %PC.i2343
  %6174 = add i64 %6173, 6
  store i64 %6174, i64* %PC.i2343
  %6175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6176 = load i8, i8* %6175, align 1
  store i8 %6176, i8* %BRANCH_TAKEN, align 1
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6178 = icmp ne i8 %6176, 0
  %6179 = select i1 %6178, i64 %6170, i64 %6172
  store i64 %6179, i64* %6177, align 8
  store %struct.Memory* %loadMem_475d3e, %struct.Memory** %MEMORY
  %loadBr_475d3e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475d3e = icmp eq i8 %loadBr_475d3e, 1
  br i1 %cmpBr_475d3e, label %block_.L_475d5d, label %block_475d44

block_475d44:                                     ; preds = %block_475d11
  %loadMem_475d44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6181 = getelementptr inbounds %struct.GPR, %struct.GPR* %6180, i32 0, i32 33
  %6182 = getelementptr inbounds %struct.Reg, %struct.Reg* %6181, i32 0, i32 0
  %PC.i2340 = bitcast %union.anon* %6182 to i64*
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6184 = getelementptr inbounds %struct.GPR, %struct.GPR* %6183, i32 0, i32 15
  %6185 = getelementptr inbounds %struct.Reg, %struct.Reg* %6184, i32 0, i32 0
  %RBP.i2341 = bitcast %union.anon* %6185 to i64*
  %6186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6187 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6186, i64 0, i64 0
  %YMM0.i2342 = bitcast %union.VectorReg* %6187 to %"class.std::bitset"*
  %6188 = bitcast %"class.std::bitset"* %YMM0.i2342 to i8*
  %6189 = load i64, i64* %RBP.i2341
  %6190 = sub i64 %6189, 1064
  %6191 = load i64, i64* %PC.i2340
  %6192 = add i64 %6191, 8
  store i64 %6192, i64* %PC.i2340
  %6193 = inttoptr i64 %6190 to float*
  %6194 = load float, float* %6193
  %6195 = bitcast i8* %6188 to float*
  store float %6194, float* %6195, align 1
  %6196 = getelementptr inbounds i8, i8* %6188, i64 4
  %6197 = bitcast i8* %6196 to float*
  store float 0.000000e+00, float* %6197, align 1
  %6198 = getelementptr inbounds i8, i8* %6188, i64 8
  %6199 = bitcast i8* %6198 to float*
  store float 0.000000e+00, float* %6199, align 1
  %6200 = getelementptr inbounds i8, i8* %6188, i64 12
  %6201 = bitcast i8* %6200 to float*
  store float 0.000000e+00, float* %6201, align 1
  store %struct.Memory* %loadMem_475d44, %struct.Memory** %MEMORY
  %loadMem_475d4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6203 = getelementptr inbounds %struct.GPR, %struct.GPR* %6202, i32 0, i32 33
  %6204 = getelementptr inbounds %struct.Reg, %struct.Reg* %6203, i32 0, i32 0
  %PC.i2337 = bitcast %union.anon* %6204 to i64*
  %6205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6206 = getelementptr inbounds %struct.GPR, %struct.GPR* %6205, i32 0, i32 15
  %6207 = getelementptr inbounds %struct.Reg, %struct.Reg* %6206, i32 0, i32 0
  %RBP.i2338 = bitcast %union.anon* %6207 to i64*
  %6208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6209 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6208, i64 0, i64 1
  %YMM1.i2339 = bitcast %union.VectorReg* %6209 to %"class.std::bitset"*
  %6210 = bitcast %"class.std::bitset"* %YMM1.i2339 to i8*
  %6211 = load i64, i64* %RBP.i2338
  %6212 = sub i64 %6211, 1052
  %6213 = load i64, i64* %PC.i2337
  %6214 = add i64 %6213, 8
  store i64 %6214, i64* %PC.i2337
  %6215 = inttoptr i64 %6212 to float*
  %6216 = load float, float* %6215
  %6217 = bitcast i8* %6210 to float*
  store float %6216, float* %6217, align 1
  %6218 = getelementptr inbounds i8, i8* %6210, i64 4
  %6219 = bitcast i8* %6218 to float*
  store float 0.000000e+00, float* %6219, align 1
  %6220 = getelementptr inbounds i8, i8* %6210, i64 8
  %6221 = bitcast i8* %6220 to float*
  store float 0.000000e+00, float* %6221, align 1
  %6222 = getelementptr inbounds i8, i8* %6210, i64 12
  %6223 = bitcast i8* %6222 to float*
  store float 0.000000e+00, float* %6223, align 1
  store %struct.Memory* %loadMem_475d4c, %struct.Memory** %MEMORY
  %loadMem_475d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6225 = getelementptr inbounds %struct.GPR, %struct.GPR* %6224, i32 0, i32 33
  %6226 = getelementptr inbounds %struct.Reg, %struct.Reg* %6225, i32 0, i32 0
  %PC.i2331 = bitcast %union.anon* %6226 to i64*
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6228 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6227, i64 0, i64 0
  %XMM0.i2332 = bitcast %union.VectorReg* %6228 to %union.vec128_t*
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6230 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6229, i64 0, i64 1
  %XMM1.i2333 = bitcast %union.VectorReg* %6230 to %union.vec128_t*
  %6231 = bitcast %union.vec128_t* %XMM1.i2333 to i8*
  %6232 = bitcast %union.vec128_t* %XMM0.i2332 to i8*
  %6233 = load i64, i64* %PC.i2331
  %6234 = add i64 %6233, 3
  store i64 %6234, i64* %PC.i2331
  %6235 = bitcast i8* %6231 to <2 x float>*
  %6236 = load <2 x float>, <2 x float>* %6235, align 1
  %6237 = extractelement <2 x float> %6236, i32 0
  %6238 = bitcast i8* %6232 to <2 x float>*
  %6239 = load <2 x float>, <2 x float>* %6238, align 1
  %6240 = extractelement <2 x float> %6239, i32 0
  %6241 = fcmp uno float %6237, %6240
  br i1 %6241, label %6242, label %6254

; <label>:6242:                                   ; preds = %block_475d44
  %6243 = fadd float %6237, %6240
  %6244 = bitcast float %6243 to i32
  %6245 = and i32 %6244, 2143289344
  %6246 = icmp eq i32 %6245, 2139095040
  %6247 = and i32 %6244, 4194303
  %6248 = icmp ne i32 %6247, 0
  %6249 = and i1 %6246, %6248
  br i1 %6249, label %6250, label %6260

; <label>:6250:                                   ; preds = %6242
  %6251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6252 = load i64, i64* %6251, align 8
  %6253 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6252, %struct.Memory* %loadMem_475d54)
  br label %routine_ucomiss__xmm0___xmm1.exit

; <label>:6254:                                   ; preds = %block_475d44
  %6255 = fcmp ogt float %6237, %6240
  br i1 %6255, label %6260, label %6256

; <label>:6256:                                   ; preds = %6254
  %6257 = fcmp olt float %6237, %6240
  br i1 %6257, label %6260, label %6258

; <label>:6258:                                   ; preds = %6256
  %6259 = fcmp oeq float %6237, %6240
  br i1 %6259, label %6260, label %6267

; <label>:6260:                                   ; preds = %6258, %6256, %6254, %6242
  %6261 = phi i8 [ 0, %6254 ], [ 0, %6256 ], [ 1, %6258 ], [ 1, %6242 ]
  %6262 = phi i8 [ 0, %6254 ], [ 0, %6256 ], [ 0, %6258 ], [ 1, %6242 ]
  %6263 = phi i8 [ 0, %6254 ], [ 1, %6256 ], [ 0, %6258 ], [ 1, %6242 ]
  %6264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6261, i8* %6264, align 1
  %6265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6262, i8* %6265, align 1
  %6266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6263, i8* %6266, align 1
  br label %6267

; <label>:6267:                                   ; preds = %6260, %6258
  %6268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6268, align 1
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %6269, align 1
  %6270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6270, align 1
  br label %routine_ucomiss__xmm0___xmm1.exit

routine_ucomiss__xmm0___xmm1.exit:                ; preds = %6250, %6267
  %6271 = phi %struct.Memory* [ %6253, %6250 ], [ %loadMem_475d54, %6267 ]
  store %struct.Memory* %6271, %struct.Memory** %MEMORY
  %loadMem_475d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6273 = getelementptr inbounds %struct.GPR, %struct.GPR* %6272, i32 0, i32 33
  %6274 = getelementptr inbounds %struct.Reg, %struct.Reg* %6273, i32 0, i32 0
  %PC.i2330 = bitcast %union.anon* %6274 to i64*
  %6275 = load i64, i64* %PC.i2330
  %6276 = add i64 %6275, 38
  %6277 = load i64, i64* %PC.i2330
  %6278 = add i64 %6277, 6
  %6279 = load i64, i64* %PC.i2330
  %6280 = add i64 %6279, 6
  store i64 %6280, i64* %PC.i2330
  %6281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6282 = load i8, i8* %6281, align 1
  %6283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6284 = load i8, i8* %6283, align 1
  %6285 = or i8 %6284, %6282
  %6286 = icmp ne i8 %6285, 0
  %6287 = zext i1 %6286 to i8
  store i8 %6287, i8* %BRANCH_TAKEN, align 1
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6289 = select i1 %6286, i64 %6276, i64 %6278
  store i64 %6289, i64* %6288, align 8
  store %struct.Memory* %loadMem_475d57, %struct.Memory** %MEMORY
  %loadBr_475d57 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475d57 = icmp eq i8 %loadBr_475d57, 1
  br i1 %cmpBr_475d57, label %block_.L_475d7d, label %block_.L_475d5d

block_.L_475d5d:                                  ; preds = %routine_ucomiss__xmm0___xmm1.exit, %block_475d11
  %loadMem_475d5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6291 = getelementptr inbounds %struct.GPR, %struct.GPR* %6290, i32 0, i32 33
  %6292 = getelementptr inbounds %struct.Reg, %struct.Reg* %6291, i32 0, i32 0
  %PC.i2327 = bitcast %union.anon* %6292 to i64*
  %6293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6294 = getelementptr inbounds %struct.GPR, %struct.GPR* %6293, i32 0, i32 1
  %6295 = getelementptr inbounds %struct.Reg, %struct.Reg* %6294, i32 0, i32 0
  %RAX.i2328 = bitcast %union.anon* %6295 to i64*
  %6296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6297 = getelementptr inbounds %struct.GPR, %struct.GPR* %6296, i32 0, i32 15
  %6298 = getelementptr inbounds %struct.Reg, %struct.Reg* %6297, i32 0, i32 0
  %RBP.i2329 = bitcast %union.anon* %6298 to i64*
  %6299 = load i64, i64* %RBP.i2329
  %6300 = sub i64 %6299, 28
  %6301 = load i64, i64* %PC.i2327
  %6302 = add i64 %6301, 4
  store i64 %6302, i64* %PC.i2327
  %6303 = inttoptr i64 %6300 to i32*
  %6304 = load i32, i32* %6303
  %6305 = sext i32 %6304 to i64
  %6306 = mul i64 %6305, 20
  %6307 = trunc i64 %6306 to i32
  %6308 = and i64 %6306, 4294967295
  store i64 %6308, i64* %RAX.i2328, align 8
  %6309 = shl i64 %6306, 32
  %6310 = ashr exact i64 %6309, 32
  %6311 = icmp ne i64 %6310, %6306
  %6312 = zext i1 %6311 to i8
  %6313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6312, i8* %6313, align 1
  %6314 = and i32 %6307, 255
  %6315 = call i32 @llvm.ctpop.i32(i32 %6314)
  %6316 = trunc i32 %6315 to i8
  %6317 = and i8 %6316, 1
  %6318 = xor i8 %6317, 1
  %6319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6318, i8* %6319, align 1
  %6320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6320, align 1
  %6321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6321, align 1
  %6322 = lshr i32 %6307, 31
  %6323 = trunc i32 %6322 to i8
  %6324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6323, i8* %6324, align 1
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6312, i8* %6325, align 1
  store %struct.Memory* %loadMem_475d5d, %struct.Memory** %MEMORY
  %loadMem_475d61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6327 = getelementptr inbounds %struct.GPR, %struct.GPR* %6326, i32 0, i32 33
  %6328 = getelementptr inbounds %struct.Reg, %struct.Reg* %6327, i32 0, i32 0
  %PC.i2325 = bitcast %union.anon* %6328 to i64*
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6330 = getelementptr inbounds %struct.GPR, %struct.GPR* %6329, i32 0, i32 1
  %6331 = getelementptr inbounds %struct.Reg, %struct.Reg* %6330, i32 0, i32 0
  %RAX.i2326 = bitcast %union.anon* %6331 to i64*
  %6332 = load i64, i64* %RAX.i2326
  %6333 = load i64, i64* %PC.i2325
  %6334 = add i64 %6333, 3
  store i64 %6334, i64* %PC.i2325
  %6335 = trunc i64 %6332 to i32
  %6336 = add i32 21, %6335
  %6337 = zext i32 %6336 to i64
  store i64 %6337, i64* %RAX.i2326, align 8
  %6338 = icmp ult i32 %6336, %6335
  %6339 = icmp ult i32 %6336, 21
  %6340 = or i1 %6338, %6339
  %6341 = zext i1 %6340 to i8
  %6342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6341, i8* %6342, align 1
  %6343 = and i32 %6336, 255
  %6344 = call i32 @llvm.ctpop.i32(i32 %6343)
  %6345 = trunc i32 %6344 to i8
  %6346 = and i8 %6345, 1
  %6347 = xor i8 %6346, 1
  %6348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6347, i8* %6348, align 1
  %6349 = xor i64 21, %6332
  %6350 = trunc i64 %6349 to i32
  %6351 = xor i32 %6350, %6336
  %6352 = lshr i32 %6351, 4
  %6353 = trunc i32 %6352 to i8
  %6354 = and i8 %6353, 1
  %6355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6354, i8* %6355, align 1
  %6356 = icmp eq i32 %6336, 0
  %6357 = zext i1 %6356 to i8
  %6358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6357, i8* %6358, align 1
  %6359 = lshr i32 %6336, 31
  %6360 = trunc i32 %6359 to i8
  %6361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6360, i8* %6361, align 1
  %6362 = lshr i32 %6335, 31
  %6363 = xor i32 %6359, %6362
  %6364 = add i32 %6363, %6359
  %6365 = icmp eq i32 %6364, 2
  %6366 = zext i1 %6365 to i8
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6366, i8* %6367, align 1
  store %struct.Memory* %loadMem_475d61, %struct.Memory** %MEMORY
  %loadMem_475d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6369 = getelementptr inbounds %struct.GPR, %struct.GPR* %6368, i32 0, i32 33
  %6370 = getelementptr inbounds %struct.Reg, %struct.Reg* %6369, i32 0, i32 0
  %PC.i2322 = bitcast %union.anon* %6370 to i64*
  %6371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6372 = getelementptr inbounds %struct.GPR, %struct.GPR* %6371, i32 0, i32 1
  %6373 = getelementptr inbounds %struct.Reg, %struct.Reg* %6372, i32 0, i32 0
  %RAX.i2323 = bitcast %union.anon* %6373 to i64*
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6375 = getelementptr inbounds %struct.GPR, %struct.GPR* %6374, i32 0, i32 15
  %6376 = getelementptr inbounds %struct.Reg, %struct.Reg* %6375, i32 0, i32 0
  %RBP.i2324 = bitcast %union.anon* %6376 to i64*
  %6377 = load i64, i64* %RAX.i2323
  %6378 = load i64, i64* %RBP.i2324
  %6379 = sub i64 %6378, 32
  %6380 = load i64, i64* %PC.i2322
  %6381 = add i64 %6380, 3
  store i64 %6381, i64* %PC.i2322
  %6382 = trunc i64 %6377 to i32
  %6383 = inttoptr i64 %6379 to i32*
  %6384 = load i32, i32* %6383
  %6385 = add i32 %6384, %6382
  %6386 = zext i32 %6385 to i64
  store i64 %6386, i64* %RAX.i2323, align 8
  %6387 = icmp ult i32 %6385, %6382
  %6388 = icmp ult i32 %6385, %6384
  %6389 = or i1 %6387, %6388
  %6390 = zext i1 %6389 to i8
  %6391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6390, i8* %6391, align 1
  %6392 = and i32 %6385, 255
  %6393 = call i32 @llvm.ctpop.i32(i32 %6392)
  %6394 = trunc i32 %6393 to i8
  %6395 = and i8 %6394, 1
  %6396 = xor i8 %6395, 1
  %6397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6396, i8* %6397, align 1
  %6398 = xor i32 %6384, %6382
  %6399 = xor i32 %6398, %6385
  %6400 = lshr i32 %6399, 4
  %6401 = trunc i32 %6400 to i8
  %6402 = and i8 %6401, 1
  %6403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6402, i8* %6403, align 1
  %6404 = icmp eq i32 %6385, 0
  %6405 = zext i1 %6404 to i8
  %6406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6405, i8* %6406, align 1
  %6407 = lshr i32 %6385, 31
  %6408 = trunc i32 %6407 to i8
  %6409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6408, i8* %6409, align 1
  %6410 = lshr i32 %6382, 31
  %6411 = lshr i32 %6384, 31
  %6412 = xor i32 %6407, %6410
  %6413 = xor i32 %6407, %6411
  %6414 = add i32 %6412, %6413
  %6415 = icmp eq i32 %6414, 2
  %6416 = zext i1 %6415 to i8
  %6417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6416, i8* %6417, align 1
  store %struct.Memory* %loadMem_475d64, %struct.Memory** %MEMORY
  %loadMem_475d67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6419 = getelementptr inbounds %struct.GPR, %struct.GPR* %6418, i32 0, i32 33
  %6420 = getelementptr inbounds %struct.Reg, %struct.Reg* %6419, i32 0, i32 0
  %PC.i2319 = bitcast %union.anon* %6420 to i64*
  %6421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6422 = getelementptr inbounds %struct.GPR, %struct.GPR* %6421, i32 0, i32 1
  %6423 = getelementptr inbounds %struct.Reg, %struct.Reg* %6422, i32 0, i32 0
  %EAX.i2320 = bitcast %union.anon* %6423 to i32*
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6425 = getelementptr inbounds %struct.GPR, %struct.GPR* %6424, i32 0, i32 15
  %6426 = getelementptr inbounds %struct.Reg, %struct.Reg* %6425, i32 0, i32 0
  %RBP.i2321 = bitcast %union.anon* %6426 to i64*
  %6427 = load i64, i64* %RBP.i2321
  %6428 = sub i64 %6427, 1048
  %6429 = load i32, i32* %EAX.i2320
  %6430 = zext i32 %6429 to i64
  %6431 = load i64, i64* %PC.i2319
  %6432 = add i64 %6431, 6
  store i64 %6432, i64* %PC.i2319
  %6433 = inttoptr i64 %6428 to i32*
  store i32 %6429, i32* %6433
  store %struct.Memory* %loadMem_475d67, %struct.Memory** %MEMORY
  %loadMem_475d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6435 = getelementptr inbounds %struct.GPR, %struct.GPR* %6434, i32 0, i32 33
  %6436 = getelementptr inbounds %struct.Reg, %struct.Reg* %6435, i32 0, i32 0
  %PC.i2316 = bitcast %union.anon* %6436 to i64*
  %6437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6438 = getelementptr inbounds %struct.GPR, %struct.GPR* %6437, i32 0, i32 15
  %6439 = getelementptr inbounds %struct.Reg, %struct.Reg* %6438, i32 0, i32 0
  %RBP.i2317 = bitcast %union.anon* %6439 to i64*
  %6440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6441 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6440, i64 0, i64 0
  %YMM0.i2318 = bitcast %union.VectorReg* %6441 to %"class.std::bitset"*
  %6442 = bitcast %"class.std::bitset"* %YMM0.i2318 to i8*
  %6443 = load i64, i64* %RBP.i2317
  %6444 = sub i64 %6443, 1064
  %6445 = load i64, i64* %PC.i2316
  %6446 = add i64 %6445, 8
  store i64 %6446, i64* %PC.i2316
  %6447 = inttoptr i64 %6444 to float*
  %6448 = load float, float* %6447
  %6449 = bitcast i8* %6442 to float*
  store float %6448, float* %6449, align 1
  %6450 = getelementptr inbounds i8, i8* %6442, i64 4
  %6451 = bitcast i8* %6450 to float*
  store float 0.000000e+00, float* %6451, align 1
  %6452 = getelementptr inbounds i8, i8* %6442, i64 8
  %6453 = bitcast i8* %6452 to float*
  store float 0.000000e+00, float* %6453, align 1
  %6454 = getelementptr inbounds i8, i8* %6442, i64 12
  %6455 = bitcast i8* %6454 to float*
  store float 0.000000e+00, float* %6455, align 1
  store %struct.Memory* %loadMem_475d6d, %struct.Memory** %MEMORY
  %loadMem_475d75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6457 = getelementptr inbounds %struct.GPR, %struct.GPR* %6456, i32 0, i32 33
  %6458 = getelementptr inbounds %struct.Reg, %struct.Reg* %6457, i32 0, i32 0
  %PC.i2313 = bitcast %union.anon* %6458 to i64*
  %6459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6460 = getelementptr inbounds %struct.GPR, %struct.GPR* %6459, i32 0, i32 15
  %6461 = getelementptr inbounds %struct.Reg, %struct.Reg* %6460, i32 0, i32 0
  %RBP.i2314 = bitcast %union.anon* %6461 to i64*
  %6462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6463 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6462, i64 0, i64 0
  %XMM0.i2315 = bitcast %union.VectorReg* %6463 to %union.vec128_t*
  %6464 = load i64, i64* %RBP.i2314
  %6465 = sub i64 %6464, 1052
  %6466 = bitcast %union.vec128_t* %XMM0.i2315 to i8*
  %6467 = load i64, i64* %PC.i2313
  %6468 = add i64 %6467, 8
  store i64 %6468, i64* %PC.i2313
  %6469 = bitcast i8* %6466 to <2 x float>*
  %6470 = load <2 x float>, <2 x float>* %6469, align 1
  %6471 = extractelement <2 x float> %6470, i32 0
  %6472 = inttoptr i64 %6465 to float*
  store float %6471, float* %6472
  store %struct.Memory* %loadMem_475d75, %struct.Memory** %MEMORY
  br label %block_.L_475d7d

block_.L_475d7d:                                  ; preds = %block_.L_475d5d, %routine_ucomiss__xmm0___xmm1.exit
  %loadMem_475d7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6474 = getelementptr inbounds %struct.GPR, %struct.GPR* %6473, i32 0, i32 33
  %6475 = getelementptr inbounds %struct.Reg, %struct.Reg* %6474, i32 0, i32 0
  %PC.i2312 = bitcast %union.anon* %6475 to i64*
  %6476 = load i64, i64* %PC.i2312
  %6477 = add i64 %6476, 5
  %6478 = load i64, i64* %PC.i2312
  %6479 = add i64 %6478, 5
  store i64 %6479, i64* %PC.i2312
  %6480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6477, i64* %6480, align 8
  store %struct.Memory* %loadMem_475d7d, %struct.Memory** %MEMORY
  br label %block_.L_475d82

block_.L_475d82:                                  ; preds = %block_.L_475d7d, %block_475cf6
  %loadMem_475d82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6482 = getelementptr inbounds %struct.GPR, %struct.GPR* %6481, i32 0, i32 33
  %6483 = getelementptr inbounds %struct.Reg, %struct.Reg* %6482, i32 0, i32 0
  %PC.i2311 = bitcast %union.anon* %6483 to i64*
  %6484 = load i64, i64* %PC.i2311
  %6485 = add i64 %6484, 5
  %6486 = load i64, i64* %PC.i2311
  %6487 = add i64 %6486, 5
  store i64 %6487, i64* %PC.i2311
  %6488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6485, i64* %6488, align 8
  store %struct.Memory* %loadMem_475d82, %struct.Memory** %MEMORY
  br label %block_.L_475d87

block_.L_475d87:                                  ; preds = %block_.L_475d82
  %loadMem_475d87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6490 = getelementptr inbounds %struct.GPR, %struct.GPR* %6489, i32 0, i32 33
  %6491 = getelementptr inbounds %struct.Reg, %struct.Reg* %6490, i32 0, i32 0
  %PC.i2308 = bitcast %union.anon* %6491 to i64*
  %6492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6493 = getelementptr inbounds %struct.GPR, %struct.GPR* %6492, i32 0, i32 1
  %6494 = getelementptr inbounds %struct.Reg, %struct.Reg* %6493, i32 0, i32 0
  %RAX.i2309 = bitcast %union.anon* %6494 to i64*
  %6495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6496 = getelementptr inbounds %struct.GPR, %struct.GPR* %6495, i32 0, i32 15
  %6497 = getelementptr inbounds %struct.Reg, %struct.Reg* %6496, i32 0, i32 0
  %RBP.i2310 = bitcast %union.anon* %6497 to i64*
  %6498 = load i64, i64* %RBP.i2310
  %6499 = sub i64 %6498, 32
  %6500 = load i64, i64* %PC.i2308
  %6501 = add i64 %6500, 3
  store i64 %6501, i64* %PC.i2308
  %6502 = inttoptr i64 %6499 to i32*
  %6503 = load i32, i32* %6502
  %6504 = zext i32 %6503 to i64
  store i64 %6504, i64* %RAX.i2309, align 8
  store %struct.Memory* %loadMem_475d87, %struct.Memory** %MEMORY
  %loadMem_475d8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6506 = getelementptr inbounds %struct.GPR, %struct.GPR* %6505, i32 0, i32 33
  %6507 = getelementptr inbounds %struct.Reg, %struct.Reg* %6506, i32 0, i32 0
  %PC.i2306 = bitcast %union.anon* %6507 to i64*
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6509 = getelementptr inbounds %struct.GPR, %struct.GPR* %6508, i32 0, i32 1
  %6510 = getelementptr inbounds %struct.Reg, %struct.Reg* %6509, i32 0, i32 0
  %RAX.i2307 = bitcast %union.anon* %6510 to i64*
  %6511 = load i64, i64* %RAX.i2307
  %6512 = load i64, i64* %PC.i2306
  %6513 = add i64 %6512, 3
  store i64 %6513, i64* %PC.i2306
  %6514 = trunc i64 %6511 to i32
  %6515 = add i32 1, %6514
  %6516 = zext i32 %6515 to i64
  store i64 %6516, i64* %RAX.i2307, align 8
  %6517 = icmp ult i32 %6515, %6514
  %6518 = icmp ult i32 %6515, 1
  %6519 = or i1 %6517, %6518
  %6520 = zext i1 %6519 to i8
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6520, i8* %6521, align 1
  %6522 = and i32 %6515, 255
  %6523 = call i32 @llvm.ctpop.i32(i32 %6522)
  %6524 = trunc i32 %6523 to i8
  %6525 = and i8 %6524, 1
  %6526 = xor i8 %6525, 1
  %6527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6526, i8* %6527, align 1
  %6528 = xor i64 1, %6511
  %6529 = trunc i64 %6528 to i32
  %6530 = xor i32 %6529, %6515
  %6531 = lshr i32 %6530, 4
  %6532 = trunc i32 %6531 to i8
  %6533 = and i8 %6532, 1
  %6534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6533, i8* %6534, align 1
  %6535 = icmp eq i32 %6515, 0
  %6536 = zext i1 %6535 to i8
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6536, i8* %6537, align 1
  %6538 = lshr i32 %6515, 31
  %6539 = trunc i32 %6538 to i8
  %6540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6539, i8* %6540, align 1
  %6541 = lshr i32 %6514, 31
  %6542 = xor i32 %6538, %6541
  %6543 = add i32 %6542, %6538
  %6544 = icmp eq i32 %6543, 2
  %6545 = zext i1 %6544 to i8
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6545, i8* %6546, align 1
  store %struct.Memory* %loadMem_475d8a, %struct.Memory** %MEMORY
  %loadMem_475d8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6548 = getelementptr inbounds %struct.GPR, %struct.GPR* %6547, i32 0, i32 33
  %6549 = getelementptr inbounds %struct.Reg, %struct.Reg* %6548, i32 0, i32 0
  %PC.i2303 = bitcast %union.anon* %6549 to i64*
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6551 = getelementptr inbounds %struct.GPR, %struct.GPR* %6550, i32 0, i32 1
  %6552 = getelementptr inbounds %struct.Reg, %struct.Reg* %6551, i32 0, i32 0
  %EAX.i2304 = bitcast %union.anon* %6552 to i32*
  %6553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6554 = getelementptr inbounds %struct.GPR, %struct.GPR* %6553, i32 0, i32 15
  %6555 = getelementptr inbounds %struct.Reg, %struct.Reg* %6554, i32 0, i32 0
  %RBP.i2305 = bitcast %union.anon* %6555 to i64*
  %6556 = load i64, i64* %RBP.i2305
  %6557 = sub i64 %6556, 32
  %6558 = load i32, i32* %EAX.i2304
  %6559 = zext i32 %6558 to i64
  %6560 = load i64, i64* %PC.i2303
  %6561 = add i64 %6560, 3
  store i64 %6561, i64* %PC.i2303
  %6562 = inttoptr i64 %6557 to i32*
  store i32 %6558, i32* %6562
  store %struct.Memory* %loadMem_475d8d, %struct.Memory** %MEMORY
  %loadMem_475d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6564 = getelementptr inbounds %struct.GPR, %struct.GPR* %6563, i32 0, i32 33
  %6565 = getelementptr inbounds %struct.Reg, %struct.Reg* %6564, i32 0, i32 0
  %PC.i2302 = bitcast %union.anon* %6565 to i64*
  %6566 = load i64, i64* %PC.i2302
  %6567 = add i64 %6566, -170
  %6568 = load i64, i64* %PC.i2302
  %6569 = add i64 %6568, 5
  store i64 %6569, i64* %PC.i2302
  %6570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6567, i64* %6570, align 8
  store %struct.Memory* %loadMem_475d90, %struct.Memory** %MEMORY
  br label %block_.L_475ce6

block_.L_475d95:                                  ; preds = %block_.L_475ce6
  %loadMem_475d95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6572 = getelementptr inbounds %struct.GPR, %struct.GPR* %6571, i32 0, i32 33
  %6573 = getelementptr inbounds %struct.Reg, %struct.Reg* %6572, i32 0, i32 0
  %PC.i2301 = bitcast %union.anon* %6573 to i64*
  %6574 = load i64, i64* %PC.i2301
  %6575 = add i64 %6574, 5
  %6576 = load i64, i64* %PC.i2301
  %6577 = add i64 %6576, 5
  store i64 %6577, i64* %PC.i2301
  %6578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6575, i64* %6578, align 8
  store %struct.Memory* %loadMem_475d95, %struct.Memory** %MEMORY
  br label %block_.L_475d9a

block_.L_475d9a:                                  ; preds = %block_.L_475d95
  %loadMem_475d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6580 = getelementptr inbounds %struct.GPR, %struct.GPR* %6579, i32 0, i32 33
  %6581 = getelementptr inbounds %struct.Reg, %struct.Reg* %6580, i32 0, i32 0
  %PC.i2298 = bitcast %union.anon* %6581 to i64*
  %6582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6583 = getelementptr inbounds %struct.GPR, %struct.GPR* %6582, i32 0, i32 1
  %6584 = getelementptr inbounds %struct.Reg, %struct.Reg* %6583, i32 0, i32 0
  %RAX.i2299 = bitcast %union.anon* %6584 to i64*
  %6585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6586 = getelementptr inbounds %struct.GPR, %struct.GPR* %6585, i32 0, i32 15
  %6587 = getelementptr inbounds %struct.Reg, %struct.Reg* %6586, i32 0, i32 0
  %RBP.i2300 = bitcast %union.anon* %6587 to i64*
  %6588 = load i64, i64* %RBP.i2300
  %6589 = sub i64 %6588, 28
  %6590 = load i64, i64* %PC.i2298
  %6591 = add i64 %6590, 3
  store i64 %6591, i64* %PC.i2298
  %6592 = inttoptr i64 %6589 to i32*
  %6593 = load i32, i32* %6592
  %6594 = zext i32 %6593 to i64
  store i64 %6594, i64* %RAX.i2299, align 8
  store %struct.Memory* %loadMem_475d9a, %struct.Memory** %MEMORY
  %loadMem_475d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6596 = getelementptr inbounds %struct.GPR, %struct.GPR* %6595, i32 0, i32 33
  %6597 = getelementptr inbounds %struct.Reg, %struct.Reg* %6596, i32 0, i32 0
  %PC.i2296 = bitcast %union.anon* %6597 to i64*
  %6598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6599 = getelementptr inbounds %struct.GPR, %struct.GPR* %6598, i32 0, i32 1
  %6600 = getelementptr inbounds %struct.Reg, %struct.Reg* %6599, i32 0, i32 0
  %RAX.i2297 = bitcast %union.anon* %6600 to i64*
  %6601 = load i64, i64* %RAX.i2297
  %6602 = load i64, i64* %PC.i2296
  %6603 = add i64 %6602, 3
  store i64 %6603, i64* %PC.i2296
  %6604 = trunc i64 %6601 to i32
  %6605 = add i32 1, %6604
  %6606 = zext i32 %6605 to i64
  store i64 %6606, i64* %RAX.i2297, align 8
  %6607 = icmp ult i32 %6605, %6604
  %6608 = icmp ult i32 %6605, 1
  %6609 = or i1 %6607, %6608
  %6610 = zext i1 %6609 to i8
  %6611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6610, i8* %6611, align 1
  %6612 = and i32 %6605, 255
  %6613 = call i32 @llvm.ctpop.i32(i32 %6612)
  %6614 = trunc i32 %6613 to i8
  %6615 = and i8 %6614, 1
  %6616 = xor i8 %6615, 1
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6616, i8* %6617, align 1
  %6618 = xor i64 1, %6601
  %6619 = trunc i64 %6618 to i32
  %6620 = xor i32 %6619, %6605
  %6621 = lshr i32 %6620, 4
  %6622 = trunc i32 %6621 to i8
  %6623 = and i8 %6622, 1
  %6624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6623, i8* %6624, align 1
  %6625 = icmp eq i32 %6605, 0
  %6626 = zext i1 %6625 to i8
  %6627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6626, i8* %6627, align 1
  %6628 = lshr i32 %6605, 31
  %6629 = trunc i32 %6628 to i8
  %6630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6629, i8* %6630, align 1
  %6631 = lshr i32 %6604, 31
  %6632 = xor i32 %6628, %6631
  %6633 = add i32 %6632, %6628
  %6634 = icmp eq i32 %6633, 2
  %6635 = zext i1 %6634 to i8
  %6636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6635, i8* %6636, align 1
  store %struct.Memory* %loadMem_475d9d, %struct.Memory** %MEMORY
  %loadMem_475da0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6638 = getelementptr inbounds %struct.GPR, %struct.GPR* %6637, i32 0, i32 33
  %6639 = getelementptr inbounds %struct.Reg, %struct.Reg* %6638, i32 0, i32 0
  %PC.i2293 = bitcast %union.anon* %6639 to i64*
  %6640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6641 = getelementptr inbounds %struct.GPR, %struct.GPR* %6640, i32 0, i32 1
  %6642 = getelementptr inbounds %struct.Reg, %struct.Reg* %6641, i32 0, i32 0
  %EAX.i2294 = bitcast %union.anon* %6642 to i32*
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6644 = getelementptr inbounds %struct.GPR, %struct.GPR* %6643, i32 0, i32 15
  %6645 = getelementptr inbounds %struct.Reg, %struct.Reg* %6644, i32 0, i32 0
  %RBP.i2295 = bitcast %union.anon* %6645 to i64*
  %6646 = load i64, i64* %RBP.i2295
  %6647 = sub i64 %6646, 28
  %6648 = load i32, i32* %EAX.i2294
  %6649 = zext i32 %6648 to i64
  %6650 = load i64, i64* %PC.i2293
  %6651 = add i64 %6650, 3
  store i64 %6651, i64* %PC.i2293
  %6652 = inttoptr i64 %6647 to i32*
  store i32 %6648, i32* %6652
  store %struct.Memory* %loadMem_475da0, %struct.Memory** %MEMORY
  %loadMem_475da3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6654 = getelementptr inbounds %struct.GPR, %struct.GPR* %6653, i32 0, i32 33
  %6655 = getelementptr inbounds %struct.Reg, %struct.Reg* %6654, i32 0, i32 0
  %PC.i2292 = bitcast %union.anon* %6655 to i64*
  %6656 = load i64, i64* %PC.i2292
  %6657 = add i64 %6656, -211
  %6658 = load i64, i64* %PC.i2292
  %6659 = add i64 %6658, 5
  store i64 %6659, i64* %PC.i2292
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6657, i64* %6660, align 8
  store %struct.Memory* %loadMem_475da3, %struct.Memory** %MEMORY
  br label %block_.L_475cd0

block_.L_475da8:                                  ; preds = %block_.L_475cd0
  %loadMem_475da8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6662 = getelementptr inbounds %struct.GPR, %struct.GPR* %6661, i32 0, i32 33
  %6663 = getelementptr inbounds %struct.Reg, %struct.Reg* %6662, i32 0, i32 0
  %PC.i2289 = bitcast %union.anon* %6663 to i64*
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6665 = getelementptr inbounds %struct.GPR, %struct.GPR* %6664, i32 0, i32 1
  %6666 = getelementptr inbounds %struct.Reg, %struct.Reg* %6665, i32 0, i32 0
  %RAX.i2290 = bitcast %union.anon* %6666 to i64*
  %6667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6668 = getelementptr inbounds %struct.GPR, %struct.GPR* %6667, i32 0, i32 15
  %6669 = getelementptr inbounds %struct.Reg, %struct.Reg* %6668, i32 0, i32 0
  %RBP.i2291 = bitcast %union.anon* %6669 to i64*
  %6670 = load i64, i64* %RBP.i2291
  %6671 = sub i64 %6670, 1048
  %6672 = load i64, i64* %PC.i2289
  %6673 = add i64 %6672, 7
  store i64 %6673, i64* %PC.i2289
  %6674 = inttoptr i64 %6671 to i32*
  %6675 = load i32, i32* %6674
  %6676 = sext i32 %6675 to i64
  store i64 %6676, i64* %RAX.i2290, align 8
  store %struct.Memory* %loadMem_475da8, %struct.Memory** %MEMORY
  %loadMem_475daf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6678 = getelementptr inbounds %struct.GPR, %struct.GPR* %6677, i32 0, i32 33
  %6679 = getelementptr inbounds %struct.Reg, %struct.Reg* %6678, i32 0, i32 0
  %PC.i2286 = bitcast %union.anon* %6679 to i64*
  %6680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6681 = getelementptr inbounds %struct.GPR, %struct.GPR* %6680, i32 0, i32 1
  %6682 = getelementptr inbounds %struct.Reg, %struct.Reg* %6681, i32 0, i32 0
  %RAX.i2287 = bitcast %union.anon* %6682 to i64*
  %6683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6684 = getelementptr inbounds %struct.GPR, %struct.GPR* %6683, i32 0, i32 5
  %6685 = getelementptr inbounds %struct.Reg, %struct.Reg* %6684, i32 0, i32 0
  %RCX.i2288 = bitcast %union.anon* %6685 to i64*
  %6686 = load i64, i64* %RAX.i2287
  %6687 = add i64 %6686, 12099168
  %6688 = load i64, i64* %PC.i2286
  %6689 = add i64 %6688, 8
  store i64 %6689, i64* %PC.i2286
  %6690 = inttoptr i64 %6687 to i8*
  %6691 = load i8, i8* %6690
  %6692 = zext i8 %6691 to i64
  store i64 %6692, i64* %RCX.i2288, align 8
  store %struct.Memory* %loadMem_475daf, %struct.Memory** %MEMORY
  %loadMem_475db7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6694 = getelementptr inbounds %struct.GPR, %struct.GPR* %6693, i32 0, i32 33
  %6695 = getelementptr inbounds %struct.Reg, %struct.Reg* %6694, i32 0, i32 0
  %PC.i2284 = bitcast %union.anon* %6695 to i64*
  %6696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6697 = getelementptr inbounds %struct.GPR, %struct.GPR* %6696, i32 0, i32 5
  %6698 = getelementptr inbounds %struct.Reg, %struct.Reg* %6697, i32 0, i32 0
  %ECX.i2285 = bitcast %union.anon* %6698 to i32*
  %6699 = load i32, i32* %ECX.i2285
  %6700 = zext i32 %6699 to i64
  %6701 = load i64, i64* %PC.i2284
  %6702 = add i64 %6701, 3
  store i64 %6702, i64* %PC.i2284
  %6703 = sub i32 %6699, 3
  %6704 = icmp ult i32 %6699, 3
  %6705 = zext i1 %6704 to i8
  %6706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6705, i8* %6706, align 1
  %6707 = and i32 %6703, 255
  %6708 = call i32 @llvm.ctpop.i32(i32 %6707)
  %6709 = trunc i32 %6708 to i8
  %6710 = and i8 %6709, 1
  %6711 = xor i8 %6710, 1
  %6712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6711, i8* %6712, align 1
  %6713 = xor i64 3, %6700
  %6714 = trunc i64 %6713 to i32
  %6715 = xor i32 %6714, %6703
  %6716 = lshr i32 %6715, 4
  %6717 = trunc i32 %6716 to i8
  %6718 = and i8 %6717, 1
  %6719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6718, i8* %6719, align 1
  %6720 = icmp eq i32 %6703, 0
  %6721 = zext i1 %6720 to i8
  %6722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6721, i8* %6722, align 1
  %6723 = lshr i32 %6703, 31
  %6724 = trunc i32 %6723 to i8
  %6725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6724, i8* %6725, align 1
  %6726 = lshr i32 %6699, 31
  %6727 = xor i32 %6723, %6726
  %6728 = add i32 %6727, %6726
  %6729 = icmp eq i32 %6728, 2
  %6730 = zext i1 %6729 to i8
  %6731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6730, i8* %6731, align 1
  store %struct.Memory* %loadMem_475db7, %struct.Memory** %MEMORY
  %loadMem_475dba = load %struct.Memory*, %struct.Memory** %MEMORY
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6733 = getelementptr inbounds %struct.GPR, %struct.GPR* %6732, i32 0, i32 33
  %6734 = getelementptr inbounds %struct.Reg, %struct.Reg* %6733, i32 0, i32 0
  %PC.i2283 = bitcast %union.anon* %6734 to i64*
  %6735 = load i64, i64* %PC.i2283
  %6736 = add i64 %6735, 11
  %6737 = load i64, i64* %PC.i2283
  %6738 = add i64 %6737, 6
  %6739 = load i64, i64* %PC.i2283
  %6740 = add i64 %6739, 6
  store i64 %6740, i64* %PC.i2283
  %6741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6742 = load i8, i8* %6741, align 1
  store i8 %6742, i8* %BRANCH_TAKEN, align 1
  %6743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6744 = icmp ne i8 %6742, 0
  %6745 = select i1 %6744, i64 %6736, i64 %6738
  store i64 %6745, i64* %6743, align 8
  store %struct.Memory* %loadMem_475dba, %struct.Memory** %MEMORY
  %loadBr_475dba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475dba = icmp eq i8 %loadBr_475dba, 1
  br i1 %cmpBr_475dba, label %block_.L_475dc5, label %block_475dc0

block_475dc0:                                     ; preds = %block_.L_475da8
  %loadMem_475dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6747 = getelementptr inbounds %struct.GPR, %struct.GPR* %6746, i32 0, i32 33
  %6748 = getelementptr inbounds %struct.Reg, %struct.Reg* %6747, i32 0, i32 0
  %PC.i2282 = bitcast %union.anon* %6748 to i64*
  %6749 = load i64, i64* %PC.i2282
  %6750 = add i64 %6749, 45
  %6751 = load i64, i64* %PC.i2282
  %6752 = add i64 %6751, 5
  store i64 %6752, i64* %PC.i2282
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6750, i64* %6753, align 8
  store %struct.Memory* %loadMem_475dc0, %struct.Memory** %MEMORY
  br label %block_.L_475ded

block_.L_475dc5:                                  ; preds = %block_.L_475da8
  %loadMem_475dc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6755 = getelementptr inbounds %struct.GPR, %struct.GPR* %6754, i32 0, i32 33
  %6756 = getelementptr inbounds %struct.Reg, %struct.Reg* %6755, i32 0, i32 0
  %PC.i2280 = bitcast %union.anon* %6756 to i64*
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6758 = getelementptr inbounds %struct.GPR, %struct.GPR* %6757, i32 0, i32 11
  %6759 = getelementptr inbounds %struct.Reg, %struct.Reg* %6758, i32 0, i32 0
  %RDI.i2281 = bitcast %union.anon* %6759 to i64*
  %6760 = load i64, i64* %PC.i2280
  %6761 = add i64 %6760, 10
  store i64 %6761, i64* %PC.i2280
  store i64 ptrtoint (%G__0x58192c_type* @G__0x58192c to i64), i64* %RDI.i2281, align 8
  store %struct.Memory* %loadMem_475dc5, %struct.Memory** %MEMORY
  %loadMem_475dcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6763 = getelementptr inbounds %struct.GPR, %struct.GPR* %6762, i32 0, i32 33
  %6764 = getelementptr inbounds %struct.Reg, %struct.Reg* %6763, i32 0, i32 0
  %PC.i2278 = bitcast %union.anon* %6764 to i64*
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6766 = getelementptr inbounds %struct.GPR, %struct.GPR* %6765, i32 0, i32 9
  %6767 = getelementptr inbounds %struct.Reg, %struct.Reg* %6766, i32 0, i32 0
  %RSI.i2279 = bitcast %union.anon* %6767 to i64*
  %6768 = load i64, i64* %PC.i2278
  %6769 = add i64 %6768, 5
  store i64 %6769, i64* %PC.i2278
  store i64 175, i64* %RSI.i2279, align 8
  store %struct.Memory* %loadMem_475dcf, %struct.Memory** %MEMORY
  %loadMem_475dd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6771 = getelementptr inbounds %struct.GPR, %struct.GPR* %6770, i32 0, i32 33
  %6772 = getelementptr inbounds %struct.Reg, %struct.Reg* %6771, i32 0, i32 0
  %PC.i2276 = bitcast %union.anon* %6772 to i64*
  %6773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6774 = getelementptr inbounds %struct.GPR, %struct.GPR* %6773, i32 0, i32 7
  %6775 = getelementptr inbounds %struct.Reg, %struct.Reg* %6774, i32 0, i32 0
  %RDX.i2277 = bitcast %union.anon* %6775 to i64*
  %6776 = load i64, i64* %PC.i2276
  %6777 = add i64 %6776, 10
  store i64 %6777, i64* %PC.i2276
  store i64 ptrtoint (%G__0x5819f6_type* @G__0x5819f6 to i64), i64* %RDX.i2277, align 8
  store %struct.Memory* %loadMem_475dd4, %struct.Memory** %MEMORY
  %loadMem_475dde = load %struct.Memory*, %struct.Memory** %MEMORY
  %6778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6779 = getelementptr inbounds %struct.GPR, %struct.GPR* %6778, i32 0, i32 33
  %6780 = getelementptr inbounds %struct.Reg, %struct.Reg* %6779, i32 0, i32 0
  %PC.i2274 = bitcast %union.anon* %6780 to i64*
  %6781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6782 = getelementptr inbounds %struct.GPR, %struct.GPR* %6781, i32 0, i32 1
  %6783 = getelementptr inbounds %struct.Reg, %struct.Reg* %6782, i32 0, i32 0
  %RAX.i2275 = bitcast %union.anon* %6783 to i64*
  %6784 = load i64, i64* %PC.i2274
  %6785 = add i64 %6784, 5
  store i64 %6785, i64* %PC.i2274
  store i64 4294967295, i64* %RAX.i2275, align 8
  store %struct.Memory* %loadMem_475dde, %struct.Memory** %MEMORY
  %loadMem_475de3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6787 = getelementptr inbounds %struct.GPR, %struct.GPR* %6786, i32 0, i32 33
  %6788 = getelementptr inbounds %struct.Reg, %struct.Reg* %6787, i32 0, i32 0
  %PC.i2271 = bitcast %union.anon* %6788 to i64*
  %6789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6790 = getelementptr inbounds %struct.GPR, %struct.GPR* %6789, i32 0, i32 1
  %6791 = getelementptr inbounds %struct.Reg, %struct.Reg* %6790, i32 0, i32 0
  %EAX.i2272 = bitcast %union.anon* %6791 to i32*
  %6792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6793 = getelementptr inbounds %struct.GPR, %struct.GPR* %6792, i32 0, i32 5
  %6794 = getelementptr inbounds %struct.Reg, %struct.Reg* %6793, i32 0, i32 0
  %RCX.i2273 = bitcast %union.anon* %6794 to i64*
  %6795 = load i32, i32* %EAX.i2272
  %6796 = zext i32 %6795 to i64
  %6797 = load i64, i64* %PC.i2271
  %6798 = add i64 %6797, 2
  store i64 %6798, i64* %PC.i2271
  %6799 = and i64 %6796, 4294967295
  store i64 %6799, i64* %RCX.i2273, align 8
  store %struct.Memory* %loadMem_475de3, %struct.Memory** %MEMORY
  %loadMem_475de5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6801 = getelementptr inbounds %struct.GPR, %struct.GPR* %6800, i32 0, i32 33
  %6802 = getelementptr inbounds %struct.Reg, %struct.Reg* %6801, i32 0, i32 0
  %PC.i2268 = bitcast %union.anon* %6802 to i64*
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6804 = getelementptr inbounds %struct.GPR, %struct.GPR* %6803, i32 0, i32 1
  %6805 = getelementptr inbounds %struct.Reg, %struct.Reg* %6804, i32 0, i32 0
  %EAX.i2269 = bitcast %union.anon* %6805 to i32*
  %6806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6807 = getelementptr inbounds %struct.GPR, %struct.GPR* %6806, i32 0, i32 17
  %6808 = getelementptr inbounds %struct.Reg, %struct.Reg* %6807, i32 0, i32 0
  %R8D.i2270 = bitcast %union.anon* %6808 to i32*
  %6809 = bitcast i32* %R8D.i2270 to i64*
  %6810 = load i32, i32* %EAX.i2269
  %6811 = zext i32 %6810 to i64
  %6812 = load i64, i64* %PC.i2268
  %6813 = add i64 %6812, 3
  store i64 %6813, i64* %PC.i2268
  %6814 = and i64 %6811, 4294967295
  store i64 %6814, i64* %6809, align 8
  store %struct.Memory* %loadMem_475de5, %struct.Memory** %MEMORY
  %loadMem1_475de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6816 = getelementptr inbounds %struct.GPR, %struct.GPR* %6815, i32 0, i32 33
  %6817 = getelementptr inbounds %struct.Reg, %struct.Reg* %6816, i32 0, i32 0
  %PC.i2267 = bitcast %union.anon* %6817 to i64*
  %6818 = load i64, i64* %PC.i2267
  %6819 = add i64 %6818, -146776
  %6820 = load i64, i64* %PC.i2267
  %6821 = add i64 %6820, 5
  %6822 = load i64, i64* %PC.i2267
  %6823 = add i64 %6822, 5
  store i64 %6823, i64* %PC.i2267
  %6824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6825 = load i64, i64* %6824, align 8
  %6826 = add i64 %6825, -8
  %6827 = inttoptr i64 %6826 to i64*
  store i64 %6821, i64* %6827
  store i64 %6826, i64* %6824, align 8
  %6828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6819, i64* %6828, align 8
  store %struct.Memory* %loadMem1_475de8, %struct.Memory** %MEMORY
  %loadMem2_475de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_475de8 = load i64, i64* %3
  %call2_475de8 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_475de8, %struct.Memory* %loadMem2_475de8)
  store %struct.Memory* %call2_475de8, %struct.Memory** %MEMORY
  br label %block_.L_475ded

block_.L_475ded:                                  ; preds = %block_.L_475dc5, %block_475dc0
  %loadMem_475ded = load %struct.Memory*, %struct.Memory** %MEMORY
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6830 = getelementptr inbounds %struct.GPR, %struct.GPR* %6829, i32 0, i32 33
  %6831 = getelementptr inbounds %struct.Reg, %struct.Reg* %6830, i32 0, i32 0
  %PC.i2264 = bitcast %union.anon* %6831 to i64*
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6833 = getelementptr inbounds %struct.GPR, %struct.GPR* %6832, i32 0, i32 1
  %6834 = getelementptr inbounds %struct.Reg, %struct.Reg* %6833, i32 0, i32 0
  %RAX.i2265 = bitcast %union.anon* %6834 to i64*
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6836 = getelementptr inbounds %struct.GPR, %struct.GPR* %6835, i32 0, i32 15
  %6837 = getelementptr inbounds %struct.Reg, %struct.Reg* %6836, i32 0, i32 0
  %RBP.i2266 = bitcast %union.anon* %6837 to i64*
  %6838 = load i64, i64* %RBP.i2266
  %6839 = sub i64 %6838, 1048
  %6840 = load i64, i64* %PC.i2264
  %6841 = add i64 %6840, 6
  store i64 %6841, i64* %PC.i2264
  %6842 = inttoptr i64 %6839 to i32*
  %6843 = load i32, i32* %6842
  %6844 = zext i32 %6843 to i64
  store i64 %6844, i64* %RAX.i2265, align 8
  store %struct.Memory* %loadMem_475ded, %struct.Memory** %MEMORY
  %loadMem_475df3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 33
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %PC.i2261 = bitcast %union.anon* %6847 to i64*
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 5
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %RCX.i2262 = bitcast %union.anon* %6850 to i64*
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6852 = getelementptr inbounds %struct.GPR, %struct.GPR* %6851, i32 0, i32 15
  %6853 = getelementptr inbounds %struct.Reg, %struct.Reg* %6852, i32 0, i32 0
  %RBP.i2263 = bitcast %union.anon* %6853 to i64*
  %6854 = load i64, i64* %RBP.i2263
  %6855 = sub i64 %6854, 212
  %6856 = load i64, i64* %PC.i2261
  %6857 = add i64 %6856, 7
  store i64 %6857, i64* %PC.i2261
  %6858 = inttoptr i64 %6855 to i32*
  %6859 = load i32, i32* %6858
  %6860 = sext i32 %6859 to i64
  store i64 %6860, i64* %RCX.i2262, align 8
  store %struct.Memory* %loadMem_475df3, %struct.Memory** %MEMORY
  %loadMem_475dfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6862 = getelementptr inbounds %struct.GPR, %struct.GPR* %6861, i32 0, i32 33
  %6863 = getelementptr inbounds %struct.Reg, %struct.Reg* %6862, i32 0, i32 0
  %PC.i2257 = bitcast %union.anon* %6863 to i64*
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6865 = getelementptr inbounds %struct.GPR, %struct.GPR* %6864, i32 0, i32 1
  %6866 = getelementptr inbounds %struct.Reg, %struct.Reg* %6865, i32 0, i32 0
  %EAX.i2258 = bitcast %union.anon* %6866 to i32*
  %6867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6868 = getelementptr inbounds %struct.GPR, %struct.GPR* %6867, i32 0, i32 5
  %6869 = getelementptr inbounds %struct.Reg, %struct.Reg* %6868, i32 0, i32 0
  %RCX.i2259 = bitcast %union.anon* %6869 to i64*
  %6870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6871 = getelementptr inbounds %struct.GPR, %struct.GPR* %6870, i32 0, i32 15
  %6872 = getelementptr inbounds %struct.Reg, %struct.Reg* %6871, i32 0, i32 0
  %RBP.i2260 = bitcast %union.anon* %6872 to i64*
  %6873 = load i64, i64* %RBP.i2260
  %6874 = load i64, i64* %RCX.i2259
  %6875 = mul i64 %6874, 4
  %6876 = add i64 %6873, -128
  %6877 = add i64 %6876, %6875
  %6878 = load i32, i32* %EAX.i2258
  %6879 = zext i32 %6878 to i64
  %6880 = load i64, i64* %PC.i2257
  %6881 = add i64 %6880, 4
  store i64 %6881, i64* %PC.i2257
  %6882 = inttoptr i64 %6877 to i32*
  store i32 %6878, i32* %6882
  store %struct.Memory* %loadMem_475dfa, %struct.Memory** %MEMORY
  %loadMem_475dfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6884 = getelementptr inbounds %struct.GPR, %struct.GPR* %6883, i32 0, i32 33
  %6885 = getelementptr inbounds %struct.Reg, %struct.Reg* %6884, i32 0, i32 0
  %PC.i2254 = bitcast %union.anon* %6885 to i64*
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6887 = getelementptr inbounds %struct.GPR, %struct.GPR* %6886, i32 0, i32 1
  %6888 = getelementptr inbounds %struct.Reg, %struct.Reg* %6887, i32 0, i32 0
  %RAX.i2255 = bitcast %union.anon* %6888 to i64*
  %6889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6890 = getelementptr inbounds %struct.GPR, %struct.GPR* %6889, i32 0, i32 15
  %6891 = getelementptr inbounds %struct.Reg, %struct.Reg* %6890, i32 0, i32 0
  %RBP.i2256 = bitcast %union.anon* %6891 to i64*
  %6892 = load i64, i64* %RBP.i2256
  %6893 = sub i64 %6892, 212
  %6894 = load i64, i64* %PC.i2254
  %6895 = add i64 %6894, 6
  store i64 %6895, i64* %PC.i2254
  %6896 = inttoptr i64 %6893 to i32*
  %6897 = load i32, i32* %6896
  %6898 = zext i32 %6897 to i64
  store i64 %6898, i64* %RAX.i2255, align 8
  store %struct.Memory* %loadMem_475dfe, %struct.Memory** %MEMORY
  %loadMem_475e04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6900 = getelementptr inbounds %struct.GPR, %struct.GPR* %6899, i32 0, i32 33
  %6901 = getelementptr inbounds %struct.Reg, %struct.Reg* %6900, i32 0, i32 0
  %PC.i2252 = bitcast %union.anon* %6901 to i64*
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6903 = getelementptr inbounds %struct.GPR, %struct.GPR* %6902, i32 0, i32 1
  %6904 = getelementptr inbounds %struct.Reg, %struct.Reg* %6903, i32 0, i32 0
  %RAX.i2253 = bitcast %union.anon* %6904 to i64*
  %6905 = load i64, i64* %RAX.i2253
  %6906 = load i64, i64* %PC.i2252
  %6907 = add i64 %6906, 3
  store i64 %6907, i64* %PC.i2252
  %6908 = trunc i64 %6905 to i32
  %6909 = add i32 1, %6908
  %6910 = zext i32 %6909 to i64
  store i64 %6910, i64* %RAX.i2253, align 8
  %6911 = icmp ult i32 %6909, %6908
  %6912 = icmp ult i32 %6909, 1
  %6913 = or i1 %6911, %6912
  %6914 = zext i1 %6913 to i8
  %6915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6914, i8* %6915, align 1
  %6916 = and i32 %6909, 255
  %6917 = call i32 @llvm.ctpop.i32(i32 %6916)
  %6918 = trunc i32 %6917 to i8
  %6919 = and i8 %6918, 1
  %6920 = xor i8 %6919, 1
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6920, i8* %6921, align 1
  %6922 = xor i64 1, %6905
  %6923 = trunc i64 %6922 to i32
  %6924 = xor i32 %6923, %6909
  %6925 = lshr i32 %6924, 4
  %6926 = trunc i32 %6925 to i8
  %6927 = and i8 %6926, 1
  %6928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6927, i8* %6928, align 1
  %6929 = icmp eq i32 %6909, 0
  %6930 = zext i1 %6929 to i8
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6930, i8* %6931, align 1
  %6932 = lshr i32 %6909, 31
  %6933 = trunc i32 %6932 to i8
  %6934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6933, i8* %6934, align 1
  %6935 = lshr i32 %6908, 31
  %6936 = xor i32 %6932, %6935
  %6937 = add i32 %6936, %6932
  %6938 = icmp eq i32 %6937, 2
  %6939 = zext i1 %6938 to i8
  %6940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6939, i8* %6940, align 1
  store %struct.Memory* %loadMem_475e04, %struct.Memory** %MEMORY
  %loadMem_475e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6942 = getelementptr inbounds %struct.GPR, %struct.GPR* %6941, i32 0, i32 33
  %6943 = getelementptr inbounds %struct.Reg, %struct.Reg* %6942, i32 0, i32 0
  %PC.i2249 = bitcast %union.anon* %6943 to i64*
  %6944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6945 = getelementptr inbounds %struct.GPR, %struct.GPR* %6944, i32 0, i32 1
  %6946 = getelementptr inbounds %struct.Reg, %struct.Reg* %6945, i32 0, i32 0
  %EAX.i2250 = bitcast %union.anon* %6946 to i32*
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6948 = getelementptr inbounds %struct.GPR, %struct.GPR* %6947, i32 0, i32 15
  %6949 = getelementptr inbounds %struct.Reg, %struct.Reg* %6948, i32 0, i32 0
  %RBP.i2251 = bitcast %union.anon* %6949 to i64*
  %6950 = load i64, i64* %RBP.i2251
  %6951 = sub i64 %6950, 212
  %6952 = load i32, i32* %EAX.i2250
  %6953 = zext i32 %6952 to i64
  %6954 = load i64, i64* %PC.i2249
  %6955 = add i64 %6954, 6
  store i64 %6955, i64* %PC.i2249
  %6956 = inttoptr i64 %6951 to i32*
  store i32 %6952, i32* %6956
  store %struct.Memory* %loadMem_475e07, %struct.Memory** %MEMORY
  %loadMem_475e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6958 = getelementptr inbounds %struct.GPR, %struct.GPR* %6957, i32 0, i32 33
  %6959 = getelementptr inbounds %struct.Reg, %struct.Reg* %6958, i32 0, i32 0
  %PC.i2248 = bitcast %union.anon* %6959 to i64*
  %6960 = load i64, i64* %PC.i2248
  %6961 = add i64 %6960, -478
  %6962 = load i64, i64* %PC.i2248
  %6963 = add i64 %6962, 5
  store i64 %6963, i64* %PC.i2248
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6961, i64* %6964, align 8
  store %struct.Memory* %loadMem_475e0d, %struct.Memory** %MEMORY
  br label %block_.L_475c2f

block_.L_475e12:                                  ; preds = %routine_idivl__ecx.exit2482
  %loadMem_475e12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6966 = getelementptr inbounds %struct.GPR, %struct.GPR* %6965, i32 0, i32 33
  %6967 = getelementptr inbounds %struct.Reg, %struct.Reg* %6966, i32 0, i32 0
  %PC.i2246 = bitcast %union.anon* %6967 to i64*
  %6968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6969 = getelementptr inbounds %struct.GPR, %struct.GPR* %6968, i32 0, i32 1
  %6970 = getelementptr inbounds %struct.Reg, %struct.Reg* %6969, i32 0, i32 0
  %RAX.i2247 = bitcast %union.anon* %6970 to i64*
  %6971 = load i64, i64* %PC.i2246
  %6972 = add i64 %6971, 7
  store i64 %6972, i64* %PC.i2246
  %6973 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %6974 = zext i32 %6973 to i64
  store i64 %6974, i64* %RAX.i2247, align 8
  store %struct.Memory* %loadMem_475e12, %struct.Memory** %MEMORY
  %loadMem_475e19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6976 = getelementptr inbounds %struct.GPR, %struct.GPR* %6975, i32 0, i32 33
  %6977 = getelementptr inbounds %struct.Reg, %struct.Reg* %6976, i32 0, i32 0
  %PC.i2244 = bitcast %union.anon* %6977 to i64*
  %6978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6979 = getelementptr inbounds %struct.GPR, %struct.GPR* %6978, i32 0, i32 1
  %6980 = getelementptr inbounds %struct.Reg, %struct.Reg* %6979, i32 0, i32 0
  %RAX.i2245 = bitcast %union.anon* %6980 to i64*
  %6981 = load i64, i64* %RAX.i2245
  %6982 = load i64, i64* %PC.i2244
  %6983 = add i64 %6982, 3
  store i64 %6983, i64* %PC.i2244
  %6984 = trunc i64 %6981 to i32
  %6985 = sub i32 %6984, 1
  %6986 = zext i32 %6985 to i64
  store i64 %6986, i64* %RAX.i2245, align 8
  %6987 = icmp ult i32 %6984, 1
  %6988 = zext i1 %6987 to i8
  %6989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6988, i8* %6989, align 1
  %6990 = and i32 %6985, 255
  %6991 = call i32 @llvm.ctpop.i32(i32 %6990)
  %6992 = trunc i32 %6991 to i8
  %6993 = and i8 %6992, 1
  %6994 = xor i8 %6993, 1
  %6995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6994, i8* %6995, align 1
  %6996 = xor i64 1, %6981
  %6997 = trunc i64 %6996 to i32
  %6998 = xor i32 %6997, %6985
  %6999 = lshr i32 %6998, 4
  %7000 = trunc i32 %6999 to i8
  %7001 = and i8 %7000, 1
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7001, i8* %7002, align 1
  %7003 = icmp eq i32 %6985, 0
  %7004 = zext i1 %7003 to i8
  %7005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7004, i8* %7005, align 1
  %7006 = lshr i32 %6985, 31
  %7007 = trunc i32 %7006 to i8
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7007, i8* %7008, align 1
  %7009 = lshr i32 %6984, 31
  %7010 = xor i32 %7006, %7009
  %7011 = add i32 %7010, %7009
  %7012 = icmp eq i32 %7011, 2
  %7013 = zext i1 %7012 to i8
  %7014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7013, i8* %7014, align 1
  store %struct.Memory* %loadMem_475e19, %struct.Memory** %MEMORY
  %loadMem_475e1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7016 = getelementptr inbounds %struct.GPR, %struct.GPR* %7015, i32 0, i32 33
  %7017 = getelementptr inbounds %struct.Reg, %struct.Reg* %7016, i32 0, i32 0
  %PC.i2241 = bitcast %union.anon* %7017 to i64*
  %7018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7019 = getelementptr inbounds %struct.GPR, %struct.GPR* %7018, i32 0, i32 1
  %7020 = getelementptr inbounds %struct.Reg, %struct.Reg* %7019, i32 0, i32 0
  %EAX.i2242 = bitcast %union.anon* %7020 to i32*
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7022 = getelementptr inbounds %struct.GPR, %struct.GPR* %7021, i32 0, i32 15
  %7023 = getelementptr inbounds %struct.Reg, %struct.Reg* %7022, i32 0, i32 0
  %RBP.i2243 = bitcast %union.anon* %7023 to i64*
  %7024 = load i64, i64* %RBP.i2243
  %7025 = sub i64 %7024, 40
  %7026 = load i32, i32* %EAX.i2242
  %7027 = zext i32 %7026 to i64
  %7028 = load i64, i64* %PC.i2241
  %7029 = add i64 %7028, 3
  store i64 %7029, i64* %PC.i2241
  %7030 = inttoptr i64 %7025 to i32*
  store i32 %7026, i32* %7030
  store %struct.Memory* %loadMem_475e1c, %struct.Memory** %MEMORY
  br label %block_.L_475e1f

block_.L_475e1f:                                  ; preds = %block_.L_475e64, %block_.L_475e12
  %loadMem_475e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7032 = getelementptr inbounds %struct.GPR, %struct.GPR* %7031, i32 0, i32 33
  %7033 = getelementptr inbounds %struct.Reg, %struct.Reg* %7032, i32 0, i32 0
  %PC.i2239 = bitcast %union.anon* %7033 to i64*
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7035 = getelementptr inbounds %struct.GPR, %struct.GPR* %7034, i32 0, i32 15
  %7036 = getelementptr inbounds %struct.Reg, %struct.Reg* %7035, i32 0, i32 0
  %RBP.i2240 = bitcast %union.anon* %7036 to i64*
  %7037 = load i64, i64* %RBP.i2240
  %7038 = sub i64 %7037, 40
  %7039 = load i64, i64* %PC.i2239
  %7040 = add i64 %7039, 4
  store i64 %7040, i64* %PC.i2239
  %7041 = inttoptr i64 %7038 to i32*
  %7042 = load i32, i32* %7041
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7043, align 1
  %7044 = and i32 %7042, 255
  %7045 = call i32 @llvm.ctpop.i32(i32 %7044)
  %7046 = trunc i32 %7045 to i8
  %7047 = and i8 %7046, 1
  %7048 = xor i8 %7047, 1
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7048, i8* %7049, align 1
  %7050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7050, align 1
  %7051 = icmp eq i32 %7042, 0
  %7052 = zext i1 %7051 to i8
  %7053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7052, i8* %7053, align 1
  %7054 = lshr i32 %7042, 31
  %7055 = trunc i32 %7054 to i8
  %7056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7055, i8* %7056, align 1
  %7057 = lshr i32 %7042, 31
  %7058 = xor i32 %7054, %7057
  %7059 = add i32 %7058, %7057
  %7060 = icmp eq i32 %7059, 2
  %7061 = zext i1 %7060 to i8
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7061, i8* %7062, align 1
  store %struct.Memory* %loadMem_475e1f, %struct.Memory** %MEMORY
  %loadMem_475e23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7064 = getelementptr inbounds %struct.GPR, %struct.GPR* %7063, i32 0, i32 33
  %7065 = getelementptr inbounds %struct.Reg, %struct.Reg* %7064, i32 0, i32 0
  %PC.i2238 = bitcast %union.anon* %7065 to i64*
  %7066 = load i64, i64* %PC.i2238
  %7067 = add i64 %7066, 79
  %7068 = load i64, i64* %PC.i2238
  %7069 = add i64 %7068, 6
  %7070 = load i64, i64* %PC.i2238
  %7071 = add i64 %7070, 6
  store i64 %7071, i64* %PC.i2238
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7073 = load i8, i8* %7072, align 1
  %7074 = icmp ne i8 %7073, 0
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7076 = load i8, i8* %7075, align 1
  %7077 = icmp ne i8 %7076, 0
  %7078 = xor i1 %7074, %7077
  %7079 = zext i1 %7078 to i8
  store i8 %7079, i8* %BRANCH_TAKEN, align 1
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7081 = select i1 %7078, i64 %7067, i64 %7069
  store i64 %7081, i64* %7080, align 8
  store %struct.Memory* %loadMem_475e23, %struct.Memory** %MEMORY
  %loadBr_475e23 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475e23 = icmp eq i8 %loadBr_475e23, 1
  br i1 %cmpBr_475e23, label %block_.L_475e72, label %block_475e29

block_475e29:                                     ; preds = %block_.L_475e1f
  %loadMem_475e29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7083 = getelementptr inbounds %struct.GPR, %struct.GPR* %7082, i32 0, i32 33
  %7084 = getelementptr inbounds %struct.Reg, %struct.Reg* %7083, i32 0, i32 0
  %PC.i2235 = bitcast %union.anon* %7084 to i64*
  %7085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7086 = getelementptr inbounds %struct.GPR, %struct.GPR* %7085, i32 0, i32 1
  %7087 = getelementptr inbounds %struct.Reg, %struct.Reg* %7086, i32 0, i32 0
  %RAX.i2236 = bitcast %union.anon* %7087 to i64*
  %7088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7089 = getelementptr inbounds %struct.GPR, %struct.GPR* %7088, i32 0, i32 15
  %7090 = getelementptr inbounds %struct.Reg, %struct.Reg* %7089, i32 0, i32 0
  %RBP.i2237 = bitcast %union.anon* %7090 to i64*
  %7091 = load i64, i64* %RBP.i2237
  %7092 = sub i64 %7091, 220
  %7093 = load i64, i64* %PC.i2235
  %7094 = add i64 %7093, 7
  store i64 %7094, i64* %PC.i2235
  %7095 = inttoptr i64 %7092 to i32*
  %7096 = load i32, i32* %7095
  %7097 = sext i32 %7096 to i64
  %7098 = mul i64 %7097, 20
  %7099 = trunc i64 %7098 to i32
  %7100 = and i64 %7098, 4294967295
  store i64 %7100, i64* %RAX.i2236, align 8
  %7101 = shl i64 %7098, 32
  %7102 = ashr exact i64 %7101, 32
  %7103 = icmp ne i64 %7102, %7098
  %7104 = zext i1 %7103 to i8
  %7105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7104, i8* %7105, align 1
  %7106 = and i32 %7099, 255
  %7107 = call i32 @llvm.ctpop.i32(i32 %7106)
  %7108 = trunc i32 %7107 to i8
  %7109 = and i8 %7108, 1
  %7110 = xor i8 %7109, 1
  %7111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7110, i8* %7111, align 1
  %7112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7112, align 1
  %7113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7113, align 1
  %7114 = lshr i32 %7099, 31
  %7115 = trunc i32 %7114 to i8
  %7116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7115, i8* %7116, align 1
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7104, i8* %7117, align 1
  store %struct.Memory* %loadMem_475e29, %struct.Memory** %MEMORY
  %loadMem_475e30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7119 = getelementptr inbounds %struct.GPR, %struct.GPR* %7118, i32 0, i32 33
  %7120 = getelementptr inbounds %struct.Reg, %struct.Reg* %7119, i32 0, i32 0
  %PC.i2233 = bitcast %union.anon* %7120 to i64*
  %7121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7122 = getelementptr inbounds %struct.GPR, %struct.GPR* %7121, i32 0, i32 1
  %7123 = getelementptr inbounds %struct.Reg, %struct.Reg* %7122, i32 0, i32 0
  %RAX.i2234 = bitcast %union.anon* %7123 to i64*
  %7124 = load i64, i64* %RAX.i2234
  %7125 = load i64, i64* %PC.i2233
  %7126 = add i64 %7125, 3
  store i64 %7126, i64* %PC.i2233
  %7127 = trunc i64 %7124 to i32
  %7128 = add i32 21, %7127
  %7129 = zext i32 %7128 to i64
  store i64 %7129, i64* %RAX.i2234, align 8
  %7130 = icmp ult i32 %7128, %7127
  %7131 = icmp ult i32 %7128, 21
  %7132 = or i1 %7130, %7131
  %7133 = zext i1 %7132 to i8
  %7134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7133, i8* %7134, align 1
  %7135 = and i32 %7128, 255
  %7136 = call i32 @llvm.ctpop.i32(i32 %7135)
  %7137 = trunc i32 %7136 to i8
  %7138 = and i8 %7137, 1
  %7139 = xor i8 %7138, 1
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7139, i8* %7140, align 1
  %7141 = xor i64 21, %7124
  %7142 = trunc i64 %7141 to i32
  %7143 = xor i32 %7142, %7128
  %7144 = lshr i32 %7143, 4
  %7145 = trunc i32 %7144 to i8
  %7146 = and i8 %7145, 1
  %7147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7146, i8* %7147, align 1
  %7148 = icmp eq i32 %7128, 0
  %7149 = zext i1 %7148 to i8
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7149, i8* %7150, align 1
  %7151 = lshr i32 %7128, 31
  %7152 = trunc i32 %7151 to i8
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7152, i8* %7153, align 1
  %7154 = lshr i32 %7127, 31
  %7155 = xor i32 %7151, %7154
  %7156 = add i32 %7155, %7151
  %7157 = icmp eq i32 %7156, 2
  %7158 = zext i1 %7157 to i8
  %7159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7158, i8* %7159, align 1
  store %struct.Memory* %loadMem_475e30, %struct.Memory** %MEMORY
  %loadMem_475e33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7161 = getelementptr inbounds %struct.GPR, %struct.GPR* %7160, i32 0, i32 33
  %7162 = getelementptr inbounds %struct.Reg, %struct.Reg* %7161, i32 0, i32 0
  %PC.i2230 = bitcast %union.anon* %7162 to i64*
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7164 = getelementptr inbounds %struct.GPR, %struct.GPR* %7163, i32 0, i32 1
  %7165 = getelementptr inbounds %struct.Reg, %struct.Reg* %7164, i32 0, i32 0
  %RAX.i2231 = bitcast %union.anon* %7165 to i64*
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7167 = getelementptr inbounds %struct.GPR, %struct.GPR* %7166, i32 0, i32 15
  %7168 = getelementptr inbounds %struct.Reg, %struct.Reg* %7167, i32 0, i32 0
  %RBP.i2232 = bitcast %union.anon* %7168 to i64*
  %7169 = load i64, i64* %RAX.i2231
  %7170 = load i64, i64* %RBP.i2232
  %7171 = sub i64 %7170, 40
  %7172 = load i64, i64* %PC.i2230
  %7173 = add i64 %7172, 3
  store i64 %7173, i64* %PC.i2230
  %7174 = trunc i64 %7169 to i32
  %7175 = inttoptr i64 %7171 to i32*
  %7176 = load i32, i32* %7175
  %7177 = add i32 %7176, %7174
  %7178 = zext i32 %7177 to i64
  store i64 %7178, i64* %RAX.i2231, align 8
  %7179 = icmp ult i32 %7177, %7174
  %7180 = icmp ult i32 %7177, %7176
  %7181 = or i1 %7179, %7180
  %7182 = zext i1 %7181 to i8
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7182, i8* %7183, align 1
  %7184 = and i32 %7177, 255
  %7185 = call i32 @llvm.ctpop.i32(i32 %7184)
  %7186 = trunc i32 %7185 to i8
  %7187 = and i8 %7186, 1
  %7188 = xor i8 %7187, 1
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7188, i8* %7189, align 1
  %7190 = xor i32 %7176, %7174
  %7191 = xor i32 %7190, %7177
  %7192 = lshr i32 %7191, 4
  %7193 = trunc i32 %7192 to i8
  %7194 = and i8 %7193, 1
  %7195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7194, i8* %7195, align 1
  %7196 = icmp eq i32 %7177, 0
  %7197 = zext i1 %7196 to i8
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7197, i8* %7198, align 1
  %7199 = lshr i32 %7177, 31
  %7200 = trunc i32 %7199 to i8
  %7201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7200, i8* %7201, align 1
  %7202 = lshr i32 %7174, 31
  %7203 = lshr i32 %7176, 31
  %7204 = xor i32 %7199, %7202
  %7205 = xor i32 %7199, %7203
  %7206 = add i32 %7204, %7205
  %7207 = icmp eq i32 %7206, 2
  %7208 = zext i1 %7207 to i8
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7208, i8* %7209, align 1
  store %struct.Memory* %loadMem_475e33, %struct.Memory** %MEMORY
  %loadMem_475e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7211 = getelementptr inbounds %struct.GPR, %struct.GPR* %7210, i32 0, i32 33
  %7212 = getelementptr inbounds %struct.Reg, %struct.Reg* %7211, i32 0, i32 0
  %PC.i2227 = bitcast %union.anon* %7212 to i64*
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7214 = getelementptr inbounds %struct.GPR, %struct.GPR* %7213, i32 0, i32 1
  %7215 = getelementptr inbounds %struct.Reg, %struct.Reg* %7214, i32 0, i32 0
  %EAX.i2228 = bitcast %union.anon* %7215 to i32*
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7217 = getelementptr inbounds %struct.GPR, %struct.GPR* %7216, i32 0, i32 5
  %7218 = getelementptr inbounds %struct.Reg, %struct.Reg* %7217, i32 0, i32 0
  %RCX.i2229 = bitcast %union.anon* %7218 to i64*
  %7219 = load i32, i32* %EAX.i2228
  %7220 = zext i32 %7219 to i64
  %7221 = load i64, i64* %PC.i2227
  %7222 = add i64 %7221, 3
  store i64 %7222, i64* %PC.i2227
  %7223 = shl i64 %7220, 32
  %7224 = ashr exact i64 %7223, 32
  store i64 %7224, i64* %RCX.i2229, align 8
  store %struct.Memory* %loadMem_475e36, %struct.Memory** %MEMORY
  %loadMem_475e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7226 = getelementptr inbounds %struct.GPR, %struct.GPR* %7225, i32 0, i32 33
  %7227 = getelementptr inbounds %struct.Reg, %struct.Reg* %7226, i32 0, i32 0
  %PC.i2224 = bitcast %union.anon* %7227 to i64*
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7229 = getelementptr inbounds %struct.GPR, %struct.GPR* %7228, i32 0, i32 5
  %7230 = getelementptr inbounds %struct.Reg, %struct.Reg* %7229, i32 0, i32 0
  %RCX.i2225 = bitcast %union.anon* %7230 to i64*
  %7231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7232 = getelementptr inbounds %struct.GPR, %struct.GPR* %7231, i32 0, i32 15
  %7233 = getelementptr inbounds %struct.Reg, %struct.Reg* %7232, i32 0, i32 0
  %RBP.i2226 = bitcast %union.anon* %7233 to i64*
  %7234 = load i64, i64* %RBP.i2226
  %7235 = load i64, i64* %RCX.i2225
  %7236 = add i64 %7234, -1040
  %7237 = add i64 %7236, %7235
  %7238 = load i64, i64* %PC.i2224
  %7239 = add i64 %7238, 8
  store i64 %7239, i64* %PC.i2224
  %7240 = inttoptr i64 %7237 to i8*
  %7241 = load i8, i8* %7240
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7242, align 1
  %7243 = zext i8 %7241 to i32
  %7244 = call i32 @llvm.ctpop.i32(i32 %7243)
  %7245 = trunc i32 %7244 to i8
  %7246 = and i8 %7245, 1
  %7247 = xor i8 %7246, 1
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7247, i8* %7248, align 1
  %7249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7249, align 1
  %7250 = icmp eq i8 %7241, 0
  %7251 = zext i1 %7250 to i8
  %7252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7251, i8* %7252, align 1
  %7253 = lshr i8 %7241, 7
  %7254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7253, i8* %7254, align 1
  %7255 = lshr i8 %7241, 7
  %7256 = xor i8 %7253, %7255
  %7257 = add i8 %7256, %7255
  %7258 = icmp eq i8 %7257, 2
  %7259 = zext i1 %7258 to i8
  %7260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7259, i8* %7260, align 1
  store %struct.Memory* %loadMem_475e39, %struct.Memory** %MEMORY
  %loadMem_475e41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7262 = getelementptr inbounds %struct.GPR, %struct.GPR* %7261, i32 0, i32 33
  %7263 = getelementptr inbounds %struct.Reg, %struct.Reg* %7262, i32 0, i32 0
  %PC.i2223 = bitcast %union.anon* %7263 to i64*
  %7264 = load i64, i64* %PC.i2223
  %7265 = add i64 %7264, 30
  %7266 = load i64, i64* %PC.i2223
  %7267 = add i64 %7266, 6
  %7268 = load i64, i64* %PC.i2223
  %7269 = add i64 %7268, 6
  store i64 %7269, i64* %PC.i2223
  %7270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7271 = load i8, i8* %7270, align 1
  store i8 %7271, i8* %BRANCH_TAKEN, align 1
  %7272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7273 = icmp ne i8 %7271, 0
  %7274 = select i1 %7273, i64 %7265, i64 %7267
  store i64 %7274, i64* %7272, align 8
  store %struct.Memory* %loadMem_475e41, %struct.Memory** %MEMORY
  %loadBr_475e41 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475e41 = icmp eq i8 %loadBr_475e41, 1
  br i1 %cmpBr_475e41, label %block_.L_475e5f, label %block_475e47

block_475e47:                                     ; preds = %block_475e29
  %loadMem_475e47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7276 = getelementptr inbounds %struct.GPR, %struct.GPR* %7275, i32 0, i32 33
  %7277 = getelementptr inbounds %struct.Reg, %struct.Reg* %7276, i32 0, i32 0
  %PC.i2220 = bitcast %union.anon* %7277 to i64*
  %7278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7279 = getelementptr inbounds %struct.GPR, %struct.GPR* %7278, i32 0, i32 1
  %7280 = getelementptr inbounds %struct.Reg, %struct.Reg* %7279, i32 0, i32 0
  %RAX.i2221 = bitcast %union.anon* %7280 to i64*
  %7281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7282 = getelementptr inbounds %struct.GPR, %struct.GPR* %7281, i32 0, i32 15
  %7283 = getelementptr inbounds %struct.Reg, %struct.Reg* %7282, i32 0, i32 0
  %RBP.i2222 = bitcast %union.anon* %7283 to i64*
  %7284 = load i64, i64* %RBP.i2222
  %7285 = sub i64 %7284, 220
  %7286 = load i64, i64* %PC.i2220
  %7287 = add i64 %7286, 7
  store i64 %7287, i64* %PC.i2220
  %7288 = inttoptr i64 %7285 to i32*
  %7289 = load i32, i32* %7288
  %7290 = sext i32 %7289 to i64
  %7291 = mul i64 %7290, 20
  %7292 = trunc i64 %7291 to i32
  %7293 = and i64 %7291, 4294967295
  store i64 %7293, i64* %RAX.i2221, align 8
  %7294 = shl i64 %7291, 32
  %7295 = ashr exact i64 %7294, 32
  %7296 = icmp ne i64 %7295, %7291
  %7297 = zext i1 %7296 to i8
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7297, i8* %7298, align 1
  %7299 = and i32 %7292, 255
  %7300 = call i32 @llvm.ctpop.i32(i32 %7299)
  %7301 = trunc i32 %7300 to i8
  %7302 = and i8 %7301, 1
  %7303 = xor i8 %7302, 1
  %7304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7303, i8* %7304, align 1
  %7305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7305, align 1
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7306, align 1
  %7307 = lshr i32 %7292, 31
  %7308 = trunc i32 %7307 to i8
  %7309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7308, i8* %7309, align 1
  %7310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7297, i8* %7310, align 1
  store %struct.Memory* %loadMem_475e47, %struct.Memory** %MEMORY
  %loadMem_475e4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7312 = getelementptr inbounds %struct.GPR, %struct.GPR* %7311, i32 0, i32 33
  %7313 = getelementptr inbounds %struct.Reg, %struct.Reg* %7312, i32 0, i32 0
  %PC.i2218 = bitcast %union.anon* %7313 to i64*
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7315 = getelementptr inbounds %struct.GPR, %struct.GPR* %7314, i32 0, i32 1
  %7316 = getelementptr inbounds %struct.Reg, %struct.Reg* %7315, i32 0, i32 0
  %RAX.i2219 = bitcast %union.anon* %7316 to i64*
  %7317 = load i64, i64* %RAX.i2219
  %7318 = load i64, i64* %PC.i2218
  %7319 = add i64 %7318, 3
  store i64 %7319, i64* %PC.i2218
  %7320 = trunc i64 %7317 to i32
  %7321 = add i32 21, %7320
  %7322 = zext i32 %7321 to i64
  store i64 %7322, i64* %RAX.i2219, align 8
  %7323 = icmp ult i32 %7321, %7320
  %7324 = icmp ult i32 %7321, 21
  %7325 = or i1 %7323, %7324
  %7326 = zext i1 %7325 to i8
  %7327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7326, i8* %7327, align 1
  %7328 = and i32 %7321, 255
  %7329 = call i32 @llvm.ctpop.i32(i32 %7328)
  %7330 = trunc i32 %7329 to i8
  %7331 = and i8 %7330, 1
  %7332 = xor i8 %7331, 1
  %7333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7332, i8* %7333, align 1
  %7334 = xor i64 21, %7317
  %7335 = trunc i64 %7334 to i32
  %7336 = xor i32 %7335, %7321
  %7337 = lshr i32 %7336, 4
  %7338 = trunc i32 %7337 to i8
  %7339 = and i8 %7338, 1
  %7340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7339, i8* %7340, align 1
  %7341 = icmp eq i32 %7321, 0
  %7342 = zext i1 %7341 to i8
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7342, i8* %7343, align 1
  %7344 = lshr i32 %7321, 31
  %7345 = trunc i32 %7344 to i8
  %7346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7345, i8* %7346, align 1
  %7347 = lshr i32 %7320, 31
  %7348 = xor i32 %7344, %7347
  %7349 = add i32 %7348, %7344
  %7350 = icmp eq i32 %7349, 2
  %7351 = zext i1 %7350 to i8
  %7352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7351, i8* %7352, align 1
  store %struct.Memory* %loadMem_475e4e, %struct.Memory** %MEMORY
  %loadMem_475e51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7354 = getelementptr inbounds %struct.GPR, %struct.GPR* %7353, i32 0, i32 33
  %7355 = getelementptr inbounds %struct.Reg, %struct.Reg* %7354, i32 0, i32 0
  %PC.i2215 = bitcast %union.anon* %7355 to i64*
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7357 = getelementptr inbounds %struct.GPR, %struct.GPR* %7356, i32 0, i32 1
  %7358 = getelementptr inbounds %struct.Reg, %struct.Reg* %7357, i32 0, i32 0
  %RAX.i2216 = bitcast %union.anon* %7358 to i64*
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7360 = getelementptr inbounds %struct.GPR, %struct.GPR* %7359, i32 0, i32 15
  %7361 = getelementptr inbounds %struct.Reg, %struct.Reg* %7360, i32 0, i32 0
  %RBP.i2217 = bitcast %union.anon* %7361 to i64*
  %7362 = load i64, i64* %RAX.i2216
  %7363 = load i64, i64* %RBP.i2217
  %7364 = sub i64 %7363, 40
  %7365 = load i64, i64* %PC.i2215
  %7366 = add i64 %7365, 3
  store i64 %7366, i64* %PC.i2215
  %7367 = trunc i64 %7362 to i32
  %7368 = inttoptr i64 %7364 to i32*
  %7369 = load i32, i32* %7368
  %7370 = add i32 %7369, %7367
  %7371 = zext i32 %7370 to i64
  store i64 %7371, i64* %RAX.i2216, align 8
  %7372 = icmp ult i32 %7370, %7367
  %7373 = icmp ult i32 %7370, %7369
  %7374 = or i1 %7372, %7373
  %7375 = zext i1 %7374 to i8
  %7376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7375, i8* %7376, align 1
  %7377 = and i32 %7370, 255
  %7378 = call i32 @llvm.ctpop.i32(i32 %7377)
  %7379 = trunc i32 %7378 to i8
  %7380 = and i8 %7379, 1
  %7381 = xor i8 %7380, 1
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7381, i8* %7382, align 1
  %7383 = xor i32 %7369, %7367
  %7384 = xor i32 %7383, %7370
  %7385 = lshr i32 %7384, 4
  %7386 = trunc i32 %7385 to i8
  %7387 = and i8 %7386, 1
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7387, i8* %7388, align 1
  %7389 = icmp eq i32 %7370, 0
  %7390 = zext i1 %7389 to i8
  %7391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7390, i8* %7391, align 1
  %7392 = lshr i32 %7370, 31
  %7393 = trunc i32 %7392 to i8
  %7394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7393, i8* %7394, align 1
  %7395 = lshr i32 %7367, 31
  %7396 = lshr i32 %7369, 31
  %7397 = xor i32 %7392, %7395
  %7398 = xor i32 %7392, %7396
  %7399 = add i32 %7397, %7398
  %7400 = icmp eq i32 %7399, 2
  %7401 = zext i1 %7400 to i8
  %7402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7401, i8* %7402, align 1
  store %struct.Memory* %loadMem_475e51, %struct.Memory** %MEMORY
  %loadMem_475e54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7404 = getelementptr inbounds %struct.GPR, %struct.GPR* %7403, i32 0, i32 33
  %7405 = getelementptr inbounds %struct.Reg, %struct.Reg* %7404, i32 0, i32 0
  %PC.i2212 = bitcast %union.anon* %7405 to i64*
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7407 = getelementptr inbounds %struct.GPR, %struct.GPR* %7406, i32 0, i32 1
  %7408 = getelementptr inbounds %struct.Reg, %struct.Reg* %7407, i32 0, i32 0
  %EAX.i2213 = bitcast %union.anon* %7408 to i32*
  %7409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7410 = getelementptr inbounds %struct.GPR, %struct.GPR* %7409, i32 0, i32 15
  %7411 = getelementptr inbounds %struct.Reg, %struct.Reg* %7410, i32 0, i32 0
  %RBP.i2214 = bitcast %union.anon* %7411 to i64*
  %7412 = load i64, i64* %RBP.i2214
  %7413 = sub i64 %7412, 208
  %7414 = load i32, i32* %EAX.i2213
  %7415 = zext i32 %7414 to i64
  %7416 = load i64, i64* %PC.i2212
  %7417 = add i64 %7416, 6
  store i64 %7417, i64* %PC.i2212
  %7418 = inttoptr i64 %7413 to i32*
  store i32 %7414, i32* %7418
  store %struct.Memory* %loadMem_475e54, %struct.Memory** %MEMORY
  %loadMem_475e5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7420 = getelementptr inbounds %struct.GPR, %struct.GPR* %7419, i32 0, i32 33
  %7421 = getelementptr inbounds %struct.Reg, %struct.Reg* %7420, i32 0, i32 0
  %PC.i2211 = bitcast %union.anon* %7421 to i64*
  %7422 = load i64, i64* %PC.i2211
  %7423 = add i64 %7422, 24
  %7424 = load i64, i64* %PC.i2211
  %7425 = add i64 %7424, 5
  store i64 %7425, i64* %PC.i2211
  %7426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7423, i64* %7426, align 8
  store %struct.Memory* %loadMem_475e5a, %struct.Memory** %MEMORY
  br label %block_.L_475e72

block_.L_475e5f:                                  ; preds = %block_475e29
  %loadMem_475e5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7428 = getelementptr inbounds %struct.GPR, %struct.GPR* %7427, i32 0, i32 33
  %7429 = getelementptr inbounds %struct.Reg, %struct.Reg* %7428, i32 0, i32 0
  %PC.i2210 = bitcast %union.anon* %7429 to i64*
  %7430 = load i64, i64* %PC.i2210
  %7431 = add i64 %7430, 5
  %7432 = load i64, i64* %PC.i2210
  %7433 = add i64 %7432, 5
  store i64 %7433, i64* %PC.i2210
  %7434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7431, i64* %7434, align 8
  store %struct.Memory* %loadMem_475e5f, %struct.Memory** %MEMORY
  br label %block_.L_475e64

block_.L_475e64:                                  ; preds = %block_.L_475e5f
  %loadMem_475e64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7436 = getelementptr inbounds %struct.GPR, %struct.GPR* %7435, i32 0, i32 33
  %7437 = getelementptr inbounds %struct.Reg, %struct.Reg* %7436, i32 0, i32 0
  %PC.i2207 = bitcast %union.anon* %7437 to i64*
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7439 = getelementptr inbounds %struct.GPR, %struct.GPR* %7438, i32 0, i32 1
  %7440 = getelementptr inbounds %struct.Reg, %struct.Reg* %7439, i32 0, i32 0
  %RAX.i2208 = bitcast %union.anon* %7440 to i64*
  %7441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7442 = getelementptr inbounds %struct.GPR, %struct.GPR* %7441, i32 0, i32 15
  %7443 = getelementptr inbounds %struct.Reg, %struct.Reg* %7442, i32 0, i32 0
  %RBP.i2209 = bitcast %union.anon* %7443 to i64*
  %7444 = load i64, i64* %RBP.i2209
  %7445 = sub i64 %7444, 40
  %7446 = load i64, i64* %PC.i2207
  %7447 = add i64 %7446, 3
  store i64 %7447, i64* %PC.i2207
  %7448 = inttoptr i64 %7445 to i32*
  %7449 = load i32, i32* %7448
  %7450 = zext i32 %7449 to i64
  store i64 %7450, i64* %RAX.i2208, align 8
  store %struct.Memory* %loadMem_475e64, %struct.Memory** %MEMORY
  %loadMem_475e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7452 = getelementptr inbounds %struct.GPR, %struct.GPR* %7451, i32 0, i32 33
  %7453 = getelementptr inbounds %struct.Reg, %struct.Reg* %7452, i32 0, i32 0
  %PC.i2205 = bitcast %union.anon* %7453 to i64*
  %7454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7455 = getelementptr inbounds %struct.GPR, %struct.GPR* %7454, i32 0, i32 1
  %7456 = getelementptr inbounds %struct.Reg, %struct.Reg* %7455, i32 0, i32 0
  %RAX.i2206 = bitcast %union.anon* %7456 to i64*
  %7457 = load i64, i64* %RAX.i2206
  %7458 = load i64, i64* %PC.i2205
  %7459 = add i64 %7458, 3
  store i64 %7459, i64* %PC.i2205
  %7460 = trunc i64 %7457 to i32
  %7461 = add i32 -1, %7460
  %7462 = zext i32 %7461 to i64
  store i64 %7462, i64* %RAX.i2206, align 8
  %7463 = icmp ult i32 %7461, %7460
  %7464 = icmp ult i32 %7461, -1
  %7465 = or i1 %7463, %7464
  %7466 = zext i1 %7465 to i8
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7466, i8* %7467, align 1
  %7468 = and i32 %7461, 255
  %7469 = call i32 @llvm.ctpop.i32(i32 %7468)
  %7470 = trunc i32 %7469 to i8
  %7471 = and i8 %7470, 1
  %7472 = xor i8 %7471, 1
  %7473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7472, i8* %7473, align 1
  %7474 = xor i64 -1, %7457
  %7475 = trunc i64 %7474 to i32
  %7476 = xor i32 %7475, %7461
  %7477 = lshr i32 %7476, 4
  %7478 = trunc i32 %7477 to i8
  %7479 = and i8 %7478, 1
  %7480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7479, i8* %7480, align 1
  %7481 = icmp eq i32 %7461, 0
  %7482 = zext i1 %7481 to i8
  %7483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7482, i8* %7483, align 1
  %7484 = lshr i32 %7461, 31
  %7485 = trunc i32 %7484 to i8
  %7486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7485, i8* %7486, align 1
  %7487 = lshr i32 %7460, 31
  %7488 = xor i32 %7484, %7487
  %7489 = xor i32 %7484, 1
  %7490 = add i32 %7488, %7489
  %7491 = icmp eq i32 %7490, 2
  %7492 = zext i1 %7491 to i8
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7492, i8* %7493, align 1
  store %struct.Memory* %loadMem_475e67, %struct.Memory** %MEMORY
  %loadMem_475e6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7495 = getelementptr inbounds %struct.GPR, %struct.GPR* %7494, i32 0, i32 33
  %7496 = getelementptr inbounds %struct.Reg, %struct.Reg* %7495, i32 0, i32 0
  %PC.i2202 = bitcast %union.anon* %7496 to i64*
  %7497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7498 = getelementptr inbounds %struct.GPR, %struct.GPR* %7497, i32 0, i32 1
  %7499 = getelementptr inbounds %struct.Reg, %struct.Reg* %7498, i32 0, i32 0
  %EAX.i2203 = bitcast %union.anon* %7499 to i32*
  %7500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7501 = getelementptr inbounds %struct.GPR, %struct.GPR* %7500, i32 0, i32 15
  %7502 = getelementptr inbounds %struct.Reg, %struct.Reg* %7501, i32 0, i32 0
  %RBP.i2204 = bitcast %union.anon* %7502 to i64*
  %7503 = load i64, i64* %RBP.i2204
  %7504 = sub i64 %7503, 40
  %7505 = load i32, i32* %EAX.i2203
  %7506 = zext i32 %7505 to i64
  %7507 = load i64, i64* %PC.i2202
  %7508 = add i64 %7507, 3
  store i64 %7508, i64* %PC.i2202
  %7509 = inttoptr i64 %7504 to i32*
  store i32 %7505, i32* %7509
  store %struct.Memory* %loadMem_475e6a, %struct.Memory** %MEMORY
  %loadMem_475e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7511 = getelementptr inbounds %struct.GPR, %struct.GPR* %7510, i32 0, i32 33
  %7512 = getelementptr inbounds %struct.Reg, %struct.Reg* %7511, i32 0, i32 0
  %PC.i2201 = bitcast %union.anon* %7512 to i64*
  %7513 = load i64, i64* %PC.i2201
  %7514 = add i64 %7513, -78
  %7515 = load i64, i64* %PC.i2201
  %7516 = add i64 %7515, 5
  store i64 %7516, i64* %PC.i2201
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7514, i64* %7517, align 8
  store %struct.Memory* %loadMem_475e6d, %struct.Memory** %MEMORY
  br label %block_.L_475e1f

block_.L_475e72:                                  ; preds = %block_475e47, %block_.L_475e1f
  %loadMem_475e72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7519 = getelementptr inbounds %struct.GPR, %struct.GPR* %7518, i32 0, i32 33
  %7520 = getelementptr inbounds %struct.Reg, %struct.Reg* %7519, i32 0, i32 0
  %PC.i2199 = bitcast %union.anon* %7520 to i64*
  %7521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7522 = getelementptr inbounds %struct.GPR, %struct.GPR* %7521, i32 0, i32 15
  %7523 = getelementptr inbounds %struct.Reg, %struct.Reg* %7522, i32 0, i32 0
  %RBP.i2200 = bitcast %union.anon* %7523 to i64*
  %7524 = load i64, i64* %RBP.i2200
  %7525 = sub i64 %7524, 216
  %7526 = load i64, i64* %PC.i2199
  %7527 = add i64 %7526, 10
  store i64 %7527, i64* %PC.i2199
  %7528 = inttoptr i64 %7525 to i32*
  store i32 1, i32* %7528
  store %struct.Memory* %loadMem_475e72, %struct.Memory** %MEMORY
  br label %block_.L_475e7c

block_.L_475e7c:                                  ; preds = %block_.L_47603f, %block_.L_475e72
  %loadMem_475e7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7530 = getelementptr inbounds %struct.GPR, %struct.GPR* %7529, i32 0, i32 33
  %7531 = getelementptr inbounds %struct.Reg, %struct.Reg* %7530, i32 0, i32 0
  %PC.i2197 = bitcast %union.anon* %7531 to i64*
  %7532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7533 = getelementptr inbounds %struct.GPR, %struct.GPR* %7532, i32 0, i32 1
  %7534 = getelementptr inbounds %struct.Reg, %struct.Reg* %7533, i32 0, i32 0
  %RAX.i2198 = bitcast %union.anon* %7534 to i64*
  %7535 = load i64, i64* %PC.i2197
  %7536 = add i64 %7535, 5
  store i64 %7536, i64* %PC.i2197
  store i64 20, i64* %RAX.i2198, align 8
  store %struct.Memory* %loadMem_475e7c, %struct.Memory** %MEMORY
  %loadMem_475e81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7538 = getelementptr inbounds %struct.GPR, %struct.GPR* %7537, i32 0, i32 33
  %7539 = getelementptr inbounds %struct.Reg, %struct.Reg* %7538, i32 0, i32 0
  %PC.i2194 = bitcast %union.anon* %7539 to i64*
  %7540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7541 = getelementptr inbounds %struct.GPR, %struct.GPR* %7540, i32 0, i32 5
  %7542 = getelementptr inbounds %struct.Reg, %struct.Reg* %7541, i32 0, i32 0
  %RCX.i2195 = bitcast %union.anon* %7542 to i64*
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7544 = getelementptr inbounds %struct.GPR, %struct.GPR* %7543, i32 0, i32 15
  %7545 = getelementptr inbounds %struct.Reg, %struct.Reg* %7544, i32 0, i32 0
  %RBP.i2196 = bitcast %union.anon* %7545 to i64*
  %7546 = load i64, i64* %RBP.i2196
  %7547 = sub i64 %7546, 216
  %7548 = load i64, i64* %PC.i2194
  %7549 = add i64 %7548, 6
  store i64 %7549, i64* %PC.i2194
  %7550 = inttoptr i64 %7547 to i32*
  %7551 = load i32, i32* %7550
  %7552 = zext i32 %7551 to i64
  store i64 %7552, i64* %RCX.i2195, align 8
  store %struct.Memory* %loadMem_475e81, %struct.Memory** %MEMORY
  %loadMem_475e87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7554 = getelementptr inbounds %struct.GPR, %struct.GPR* %7553, i32 0, i32 33
  %7555 = getelementptr inbounds %struct.Reg, %struct.Reg* %7554, i32 0, i32 0
  %PC.i2192 = bitcast %union.anon* %7555 to i64*
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7557 = getelementptr inbounds %struct.GPR, %struct.GPR* %7556, i32 0, i32 5
  %7558 = getelementptr inbounds %struct.Reg, %struct.Reg* %7557, i32 0, i32 0
  %RCX.i2193 = bitcast %union.anon* %7558 to i64*
  %7559 = load i64, i64* %RCX.i2193
  %7560 = load i64, i64* %PC.i2192
  %7561 = add i64 %7560, 3
  store i64 %7561, i64* %PC.i2192
  %7562 = trunc i64 %7559 to i32
  %7563 = sub i32 %7562, 1
  %7564 = zext i32 %7563 to i64
  store i64 %7564, i64* %RCX.i2193, align 8
  %7565 = icmp ult i32 %7562, 1
  %7566 = zext i1 %7565 to i8
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7566, i8* %7567, align 1
  %7568 = and i32 %7563, 255
  %7569 = call i32 @llvm.ctpop.i32(i32 %7568)
  %7570 = trunc i32 %7569 to i8
  %7571 = and i8 %7570, 1
  %7572 = xor i8 %7571, 1
  %7573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7572, i8* %7573, align 1
  %7574 = xor i64 1, %7559
  %7575 = trunc i64 %7574 to i32
  %7576 = xor i32 %7575, %7563
  %7577 = lshr i32 %7576, 4
  %7578 = trunc i32 %7577 to i8
  %7579 = and i8 %7578, 1
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7579, i8* %7580, align 1
  %7581 = icmp eq i32 %7563, 0
  %7582 = zext i1 %7581 to i8
  %7583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7582, i8* %7583, align 1
  %7584 = lshr i32 %7563, 31
  %7585 = trunc i32 %7584 to i8
  %7586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7585, i8* %7586, align 1
  %7587 = lshr i32 %7562, 31
  %7588 = xor i32 %7584, %7587
  %7589 = add i32 %7588, %7587
  %7590 = icmp eq i32 %7589, 2
  %7591 = zext i1 %7590 to i8
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7591, i8* %7592, align 1
  store %struct.Memory* %loadMem_475e87, %struct.Memory** %MEMORY
  %loadMem_475e8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7594 = getelementptr inbounds %struct.GPR, %struct.GPR* %7593, i32 0, i32 33
  %7595 = getelementptr inbounds %struct.Reg, %struct.Reg* %7594, i32 0, i32 0
  %PC.i2189 = bitcast %union.anon* %7595 to i64*
  %7596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7597 = getelementptr inbounds %struct.GPR, %struct.GPR* %7596, i32 0, i32 5
  %7598 = getelementptr inbounds %struct.Reg, %struct.Reg* %7597, i32 0, i32 0
  %ECX.i2190 = bitcast %union.anon* %7598 to i32*
  %7599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7600 = getelementptr inbounds %struct.GPR, %struct.GPR* %7599, i32 0, i32 7
  %7601 = getelementptr inbounds %struct.Reg, %struct.Reg* %7600, i32 0, i32 0
  %RDX.i2191 = bitcast %union.anon* %7601 to i64*
  %7602 = load i32, i32* %ECX.i2190
  %7603 = zext i32 %7602 to i64
  %7604 = load i64, i64* %PC.i2189
  %7605 = add i64 %7604, 3
  store i64 %7605, i64* %PC.i2189
  %7606 = shl i64 %7603, 32
  %7607 = ashr exact i64 %7606, 32
  store i64 %7607, i64* %RDX.i2191, align 8
  store %struct.Memory* %loadMem_475e8a, %struct.Memory** %MEMORY
  %loadMem_475e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7609 = getelementptr inbounds %struct.GPR, %struct.GPR* %7608, i32 0, i32 33
  %7610 = getelementptr inbounds %struct.Reg, %struct.Reg* %7609, i32 0, i32 0
  %PC.i2185 = bitcast %union.anon* %7610 to i64*
  %7611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7612 = getelementptr inbounds %struct.GPR, %struct.GPR* %7611, i32 0, i32 5
  %7613 = getelementptr inbounds %struct.Reg, %struct.Reg* %7612, i32 0, i32 0
  %RCX.i2186 = bitcast %union.anon* %7613 to i64*
  %7614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7615 = getelementptr inbounds %struct.GPR, %struct.GPR* %7614, i32 0, i32 7
  %7616 = getelementptr inbounds %struct.Reg, %struct.Reg* %7615, i32 0, i32 0
  %RDX.i2187 = bitcast %union.anon* %7616 to i64*
  %7617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7618 = getelementptr inbounds %struct.GPR, %struct.GPR* %7617, i32 0, i32 15
  %7619 = getelementptr inbounds %struct.Reg, %struct.Reg* %7618, i32 0, i32 0
  %RBP.i2188 = bitcast %union.anon* %7619 to i64*
  %7620 = load i64, i64* %RBP.i2188
  %7621 = load i64, i64* %RDX.i2187
  %7622 = mul i64 %7621, 4
  %7623 = add i64 %7620, -208
  %7624 = add i64 %7623, %7622
  %7625 = load i64, i64* %PC.i2185
  %7626 = add i64 %7625, 7
  store i64 %7626, i64* %PC.i2185
  %7627 = inttoptr i64 %7624 to i32*
  %7628 = load i32, i32* %7627
  %7629 = zext i32 %7628 to i64
  store i64 %7629, i64* %RCX.i2186, align 8
  store %struct.Memory* %loadMem_475e8d, %struct.Memory** %MEMORY
  %loadMem_475e94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7631 = getelementptr inbounds %struct.GPR, %struct.GPR* %7630, i32 0, i32 33
  %7632 = getelementptr inbounds %struct.Reg, %struct.Reg* %7631, i32 0, i32 0
  %PC.i2182 = bitcast %union.anon* %7632 to i64*
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7634 = getelementptr inbounds %struct.GPR, %struct.GPR* %7633, i32 0, i32 1
  %7635 = getelementptr inbounds %struct.Reg, %struct.Reg* %7634, i32 0, i32 0
  %EAX.i2183 = bitcast %union.anon* %7635 to i32*
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7637 = getelementptr inbounds %struct.GPR, %struct.GPR* %7636, i32 0, i32 15
  %7638 = getelementptr inbounds %struct.Reg, %struct.Reg* %7637, i32 0, i32 0
  %RBP.i2184 = bitcast %union.anon* %7638 to i64*
  %7639 = load i64, i64* %RBP.i2184
  %7640 = sub i64 %7639, 1176
  %7641 = load i32, i32* %EAX.i2183
  %7642 = zext i32 %7641 to i64
  %7643 = load i64, i64* %PC.i2182
  %7644 = add i64 %7643, 6
  store i64 %7644, i64* %PC.i2182
  %7645 = inttoptr i64 %7640 to i32*
  store i32 %7641, i32* %7645
  store %struct.Memory* %loadMem_475e94, %struct.Memory** %MEMORY
  %loadMem_475e9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7647 = getelementptr inbounds %struct.GPR, %struct.GPR* %7646, i32 0, i32 33
  %7648 = getelementptr inbounds %struct.Reg, %struct.Reg* %7647, i32 0, i32 0
  %PC.i2179 = bitcast %union.anon* %7648 to i64*
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7650 = getelementptr inbounds %struct.GPR, %struct.GPR* %7649, i32 0, i32 5
  %7651 = getelementptr inbounds %struct.Reg, %struct.Reg* %7650, i32 0, i32 0
  %ECX.i2180 = bitcast %union.anon* %7651 to i32*
  %7652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7653 = getelementptr inbounds %struct.GPR, %struct.GPR* %7652, i32 0, i32 1
  %7654 = getelementptr inbounds %struct.Reg, %struct.Reg* %7653, i32 0, i32 0
  %RAX.i2181 = bitcast %union.anon* %7654 to i64*
  %7655 = load i32, i32* %ECX.i2180
  %7656 = zext i32 %7655 to i64
  %7657 = load i64, i64* %PC.i2179
  %7658 = add i64 %7657, 2
  store i64 %7658, i64* %PC.i2179
  %7659 = and i64 %7656, 4294967295
  store i64 %7659, i64* %RAX.i2181, align 8
  store %struct.Memory* %loadMem_475e9a, %struct.Memory** %MEMORY
  %loadMem_475e9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7661 = getelementptr inbounds %struct.GPR, %struct.GPR* %7660, i32 0, i32 33
  %7662 = getelementptr inbounds %struct.Reg, %struct.Reg* %7661, i32 0, i32 0
  %PC.i2178 = bitcast %union.anon* %7662 to i64*
  %7663 = load i64, i64* %PC.i2178
  %7664 = add i64 %7663, 1
  store i64 %7664, i64* %PC.i2178
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7667 = bitcast %union.anon* %7666 to i32*
  %7668 = load i32, i32* %7667, align 8
  %7669 = sext i32 %7668 to i64
  %7670 = lshr i64 %7669, 32
  store i64 %7670, i64* %7665, align 8
  store %struct.Memory* %loadMem_475e9c, %struct.Memory** %MEMORY
  %loadMem_475e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7672 = getelementptr inbounds %struct.GPR, %struct.GPR* %7671, i32 0, i32 33
  %7673 = getelementptr inbounds %struct.Reg, %struct.Reg* %7672, i32 0, i32 0
  %PC.i2175 = bitcast %union.anon* %7673 to i64*
  %7674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7675 = getelementptr inbounds %struct.GPR, %struct.GPR* %7674, i32 0, i32 5
  %7676 = getelementptr inbounds %struct.Reg, %struct.Reg* %7675, i32 0, i32 0
  %RCX.i2176 = bitcast %union.anon* %7676 to i64*
  %7677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7678 = getelementptr inbounds %struct.GPR, %struct.GPR* %7677, i32 0, i32 15
  %7679 = getelementptr inbounds %struct.Reg, %struct.Reg* %7678, i32 0, i32 0
  %RBP.i2177 = bitcast %union.anon* %7679 to i64*
  %7680 = load i64, i64* %RBP.i2177
  %7681 = sub i64 %7680, 1176
  %7682 = load i64, i64* %PC.i2175
  %7683 = add i64 %7682, 6
  store i64 %7683, i64* %PC.i2175
  %7684 = inttoptr i64 %7681 to i32*
  %7685 = load i32, i32* %7684
  %7686 = zext i32 %7685 to i64
  store i64 %7686, i64* %RCX.i2176, align 8
  store %struct.Memory* %loadMem_475e9d, %struct.Memory** %MEMORY
  %loadMem_475ea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7688 = getelementptr inbounds %struct.GPR, %struct.GPR* %7687, i32 0, i32 33
  %7689 = getelementptr inbounds %struct.Reg, %struct.Reg* %7688, i32 0, i32 0
  %PC.i2169 = bitcast %union.anon* %7689 to i64*
  %7690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7691 = getelementptr inbounds %struct.GPR, %struct.GPR* %7690, i32 0, i32 5
  %7692 = getelementptr inbounds %struct.Reg, %struct.Reg* %7691, i32 0, i32 0
  %ECX.i2170 = bitcast %union.anon* %7692 to i32*
  %7693 = load i32, i32* %ECX.i2170
  %7694 = zext i32 %7693 to i64
  %7695 = load i64, i64* %PC.i2169
  %7696 = add i64 %7695, 2
  store i64 %7696, i64* %PC.i2169
  %7697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7698 = bitcast %union.anon* %7697 to i32*
  %7699 = load i32, i32* %7698, align 8
  %7700 = zext i32 %7699 to i64
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7702 = bitcast %union.anon* %7701 to i32*
  %7703 = load i32, i32* %7702, align 8
  %7704 = zext i32 %7703 to i64
  %7705 = shl i64 %7694, 32
  %7706 = ashr exact i64 %7705, 32
  %7707 = shl i64 %7704, 32
  %7708 = or i64 %7707, %7700
  %7709 = sdiv i64 %7708, %7706
  %7710 = shl i64 %7709, 32
  %7711 = ashr exact i64 %7710, 32
  %7712 = icmp eq i64 %7709, %7711
  br i1 %7712, label %7717, label %7713

; <label>:7713:                                   ; preds = %block_.L_475e7c
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7715 = load i64, i64* %7714, align 8
  %7716 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7715, %struct.Memory* %loadMem_475ea3)
  br label %routine_idivl__ecx.exit2171

; <label>:7717:                                   ; preds = %block_.L_475e7c
  %7718 = srem i64 %7708, %7706
  %7719 = getelementptr inbounds %union.anon, %union.anon* %7697, i64 0, i32 0
  %7720 = and i64 %7709, 4294967295
  store i64 %7720, i64* %7719, align 8
  %7721 = getelementptr inbounds %union.anon, %union.anon* %7701, i64 0, i32 0
  %7722 = and i64 %7718, 4294967295
  store i64 %7722, i64* %7721, align 8
  %7723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7723, align 1
  %7724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7724, align 1
  %7725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7725, align 1
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7726, align 1
  %7727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7727, align 1
  %7728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7728, align 1
  br label %routine_idivl__ecx.exit2171

routine_idivl__ecx.exit2171:                      ; preds = %7713, %7717
  %7729 = phi %struct.Memory* [ %7716, %7713 ], [ %loadMem_475ea3, %7717 ]
  store %struct.Memory* %7729, %struct.Memory** %MEMORY
  %loadMem_475ea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7731 = getelementptr inbounds %struct.GPR, %struct.GPR* %7730, i32 0, i32 33
  %7732 = getelementptr inbounds %struct.Reg, %struct.Reg* %7731, i32 0, i32 0
  %PC.i2167 = bitcast %union.anon* %7732 to i64*
  %7733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7734 = getelementptr inbounds %struct.GPR, %struct.GPR* %7733, i32 0, i32 1
  %7735 = getelementptr inbounds %struct.Reg, %struct.Reg* %7734, i32 0, i32 0
  %RAX.i2168 = bitcast %union.anon* %7735 to i64*
  %7736 = load i64, i64* %RAX.i2168
  %7737 = load i64, i64* %PC.i2167
  %7738 = add i64 %7737, 3
  store i64 %7738, i64* %PC.i2167
  %7739 = trunc i64 %7736 to i32
  %7740 = sub i32 %7739, 1
  %7741 = zext i32 %7740 to i64
  store i64 %7741, i64* %RAX.i2168, align 8
  %7742 = icmp ult i32 %7739, 1
  %7743 = zext i1 %7742 to i8
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7743, i8* %7744, align 1
  %7745 = and i32 %7740, 255
  %7746 = call i32 @llvm.ctpop.i32(i32 %7745)
  %7747 = trunc i32 %7746 to i8
  %7748 = and i8 %7747, 1
  %7749 = xor i8 %7748, 1
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7749, i8* %7750, align 1
  %7751 = xor i64 1, %7736
  %7752 = trunc i64 %7751 to i32
  %7753 = xor i32 %7752, %7740
  %7754 = lshr i32 %7753, 4
  %7755 = trunc i32 %7754 to i8
  %7756 = and i8 %7755, 1
  %7757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7756, i8* %7757, align 1
  %7758 = icmp eq i32 %7740, 0
  %7759 = zext i1 %7758 to i8
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7759, i8* %7760, align 1
  %7761 = lshr i32 %7740, 31
  %7762 = trunc i32 %7761 to i8
  %7763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7762, i8* %7763, align 1
  %7764 = lshr i32 %7739, 31
  %7765 = xor i32 %7761, %7764
  %7766 = add i32 %7765, %7764
  %7767 = icmp eq i32 %7766, 2
  %7768 = zext i1 %7767 to i8
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7768, i8* %7769, align 1
  store %struct.Memory* %loadMem_475ea5, %struct.Memory** %MEMORY
  %loadMem_475ea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7771 = getelementptr inbounds %struct.GPR, %struct.GPR* %7770, i32 0, i32 33
  %7772 = getelementptr inbounds %struct.Reg, %struct.Reg* %7771, i32 0, i32 0
  %PC.i2164 = bitcast %union.anon* %7772 to i64*
  %7773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7774 = getelementptr inbounds %struct.GPR, %struct.GPR* %7773, i32 0, i32 1
  %7775 = getelementptr inbounds %struct.Reg, %struct.Reg* %7774, i32 0, i32 0
  %EAX.i2165 = bitcast %union.anon* %7775 to i32*
  %7776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7777 = getelementptr inbounds %struct.GPR, %struct.GPR* %7776, i32 0, i32 15
  %7778 = getelementptr inbounds %struct.Reg, %struct.Reg* %7777, i32 0, i32 0
  %RBP.i2166 = bitcast %union.anon* %7778 to i64*
  %7779 = load i32, i32* %EAX.i2165
  %7780 = zext i32 %7779 to i64
  %7781 = load i64, i64* %RBP.i2166
  %7782 = sub i64 %7781, 224
  %7783 = load i64, i64* %PC.i2164
  %7784 = add i64 %7783, 6
  store i64 %7784, i64* %PC.i2164
  %7785 = inttoptr i64 %7782 to i32*
  %7786 = load i32, i32* %7785
  %7787 = sub i32 %7779, %7786
  %7788 = icmp ult i32 %7779, %7786
  %7789 = zext i1 %7788 to i8
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7789, i8* %7790, align 1
  %7791 = and i32 %7787, 255
  %7792 = call i32 @llvm.ctpop.i32(i32 %7791)
  %7793 = trunc i32 %7792 to i8
  %7794 = and i8 %7793, 1
  %7795 = xor i8 %7794, 1
  %7796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7795, i8* %7796, align 1
  %7797 = xor i32 %7786, %7779
  %7798 = xor i32 %7797, %7787
  %7799 = lshr i32 %7798, 4
  %7800 = trunc i32 %7799 to i8
  %7801 = and i8 %7800, 1
  %7802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7801, i8* %7802, align 1
  %7803 = icmp eq i32 %7787, 0
  %7804 = zext i1 %7803 to i8
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7804, i8* %7805, align 1
  %7806 = lshr i32 %7787, 31
  %7807 = trunc i32 %7806 to i8
  %7808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7807, i8* %7808, align 1
  %7809 = lshr i32 %7779, 31
  %7810 = lshr i32 %7786, 31
  %7811 = xor i32 %7810, %7809
  %7812 = xor i32 %7806, %7809
  %7813 = add i32 %7812, %7811
  %7814 = icmp eq i32 %7813, 2
  %7815 = zext i1 %7814 to i8
  %7816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7815, i8* %7816, align 1
  store %struct.Memory* %loadMem_475ea8, %struct.Memory** %MEMORY
  %loadMem_475eae = load %struct.Memory*, %struct.Memory** %MEMORY
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7818 = getelementptr inbounds %struct.GPR, %struct.GPR* %7817, i32 0, i32 33
  %7819 = getelementptr inbounds %struct.Reg, %struct.Reg* %7818, i32 0, i32 0
  %PC.i2163 = bitcast %union.anon* %7819 to i64*
  %7820 = load i64, i64* %PC.i2163
  %7821 = add i64 %7820, 441
  %7822 = load i64, i64* %PC.i2163
  %7823 = add i64 %7822, 6
  %7824 = load i64, i64* %PC.i2163
  %7825 = add i64 %7824, 6
  store i64 %7825, i64* %PC.i2163
  %7826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7827 = load i8, i8* %7826, align 1
  %7828 = icmp ne i8 %7827, 0
  %7829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7830 = load i8, i8* %7829, align 1
  %7831 = icmp ne i8 %7830, 0
  %7832 = xor i1 %7828, %7831
  %7833 = xor i1 %7832, true
  %7834 = zext i1 %7833 to i8
  store i8 %7834, i8* %BRANCH_TAKEN, align 1
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7836 = select i1 %7832, i64 %7823, i64 %7821
  store i64 %7836, i64* %7835, align 8
  store %struct.Memory* %loadMem_475eae, %struct.Memory** %MEMORY
  %loadBr_475eae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475eae = icmp eq i8 %loadBr_475eae, 1
  br i1 %cmpBr_475eae, label %block_.L_476067, label %block_475eb4

block_475eb4:                                     ; preds = %routine_idivl__ecx.exit2171
  %loadMem_475eb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7838 = getelementptr inbounds %struct.GPR, %struct.GPR* %7837, i32 0, i32 33
  %7839 = getelementptr inbounds %struct.Reg, %struct.Reg* %7838, i32 0, i32 0
  %PC.i2161 = bitcast %union.anon* %7839 to i64*
  %7840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7841 = getelementptr inbounds %struct.GPR, %struct.GPR* %7840, i32 0, i32 1
  %7842 = getelementptr inbounds %struct.Reg, %struct.Reg* %7841, i32 0, i32 0
  %RAX.i2162 = bitcast %union.anon* %7842 to i64*
  %7843 = load i64, i64* %PC.i2161
  %7844 = add i64 %7843, 5
  store i64 %7844, i64* %PC.i2161
  store i64 20, i64* %RAX.i2162, align 8
  store %struct.Memory* %loadMem_475eb4, %struct.Memory** %MEMORY
  %loadMem_475eb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7846 = getelementptr inbounds %struct.GPR, %struct.GPR* %7845, i32 0, i32 33
  %7847 = getelementptr inbounds %struct.Reg, %struct.Reg* %7846, i32 0, i32 0
  %PC.i2158 = bitcast %union.anon* %7847 to i64*
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7849 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7848, i64 0, i64 0
  %YMM0.i2159 = bitcast %union.VectorReg* %7849 to %"class.std::bitset"*
  %7850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7851 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7850, i64 0, i64 0
  %XMM0.i2160 = bitcast %union.VectorReg* %7851 to %union.vec128_t*
  %7852 = bitcast %"class.std::bitset"* %YMM0.i2159 to i8*
  %7853 = bitcast %"class.std::bitset"* %YMM0.i2159 to i8*
  %7854 = bitcast %union.vec128_t* %XMM0.i2160 to i8*
  %7855 = load i64, i64* %PC.i2158
  %7856 = add i64 %7855, 3
  store i64 %7856, i64* %PC.i2158
  %7857 = bitcast i8* %7853 to i64*
  %7858 = load i64, i64* %7857, align 1
  %7859 = getelementptr inbounds i8, i8* %7853, i64 8
  %7860 = bitcast i8* %7859 to i64*
  %7861 = load i64, i64* %7860, align 1
  %7862 = bitcast i8* %7854 to i64*
  %7863 = load i64, i64* %7862, align 1
  %7864 = getelementptr inbounds i8, i8* %7854, i64 8
  %7865 = bitcast i8* %7864 to i64*
  %7866 = load i64, i64* %7865, align 1
  %7867 = xor i64 %7863, %7858
  %7868 = xor i64 %7866, %7861
  %7869 = trunc i64 %7867 to i32
  %7870 = lshr i64 %7867, 32
  %7871 = trunc i64 %7870 to i32
  %7872 = bitcast i8* %7852 to i32*
  store i32 %7869, i32* %7872, align 1
  %7873 = getelementptr inbounds i8, i8* %7852, i64 4
  %7874 = bitcast i8* %7873 to i32*
  store i32 %7871, i32* %7874, align 1
  %7875 = trunc i64 %7868 to i32
  %7876 = getelementptr inbounds i8, i8* %7852, i64 8
  %7877 = bitcast i8* %7876 to i32*
  store i32 %7875, i32* %7877, align 1
  %7878 = lshr i64 %7868, 32
  %7879 = trunc i64 %7878 to i32
  %7880 = getelementptr inbounds i8, i8* %7852, i64 12
  %7881 = bitcast i8* %7880 to i32*
  store i32 %7879, i32* %7881, align 1
  store %struct.Memory* %loadMem_475eb9, %struct.Memory** %MEMORY
  %loadMem_475ebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7883 = getelementptr inbounds %struct.GPR, %struct.GPR* %7882, i32 0, i32 33
  %7884 = getelementptr inbounds %struct.Reg, %struct.Reg* %7883, i32 0, i32 0
  %PC.i2156 = bitcast %union.anon* %7884 to i64*
  %7885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7886 = getelementptr inbounds %struct.GPR, %struct.GPR* %7885, i32 0, i32 15
  %7887 = getelementptr inbounds %struct.Reg, %struct.Reg* %7886, i32 0, i32 0
  %RBP.i2157 = bitcast %union.anon* %7887 to i64*
  %7888 = load i64, i64* %RBP.i2157
  %7889 = sub i64 %7888, 1068
  %7890 = load i64, i64* %PC.i2156
  %7891 = add i64 %7890, 10
  store i64 %7891, i64* %PC.i2156
  %7892 = inttoptr i64 %7889 to i32*
  store i32 0, i32* %7892
  store %struct.Memory* %loadMem_475ebc, %struct.Memory** %MEMORY
  %loadMem_475ec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7894 = getelementptr inbounds %struct.GPR, %struct.GPR* %7893, i32 0, i32 33
  %7895 = getelementptr inbounds %struct.Reg, %struct.Reg* %7894, i32 0, i32 0
  %PC.i2153 = bitcast %union.anon* %7895 to i64*
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7897 = getelementptr inbounds %struct.GPR, %struct.GPR* %7896, i32 0, i32 15
  %7898 = getelementptr inbounds %struct.Reg, %struct.Reg* %7897, i32 0, i32 0
  %RBP.i2154 = bitcast %union.anon* %7898 to i64*
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7900 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7899, i64 0, i64 0
  %XMM0.i2155 = bitcast %union.VectorReg* %7900 to %union.vec128_t*
  %7901 = load i64, i64* %RBP.i2154
  %7902 = sub i64 %7901, 1072
  %7903 = bitcast %union.vec128_t* %XMM0.i2155 to i8*
  %7904 = load i64, i64* %PC.i2153
  %7905 = add i64 %7904, 8
  store i64 %7905, i64* %PC.i2153
  %7906 = bitcast i8* %7903 to <2 x float>*
  %7907 = load <2 x float>, <2 x float>* %7906, align 1
  %7908 = extractelement <2 x float> %7907, i32 0
  %7909 = inttoptr i64 %7902 to float*
  store float %7908, float* %7909
  store %struct.Memory* %loadMem_475ec6, %struct.Memory** %MEMORY
  %loadMem_475ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %7910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7911 = getelementptr inbounds %struct.GPR, %struct.GPR* %7910, i32 0, i32 33
  %7912 = getelementptr inbounds %struct.Reg, %struct.Reg* %7911, i32 0, i32 0
  %PC.i2150 = bitcast %union.anon* %7912 to i64*
  %7913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7914 = getelementptr inbounds %struct.GPR, %struct.GPR* %7913, i32 0, i32 5
  %7915 = getelementptr inbounds %struct.Reg, %struct.Reg* %7914, i32 0, i32 0
  %RCX.i2151 = bitcast %union.anon* %7915 to i64*
  %7916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7917 = getelementptr inbounds %struct.GPR, %struct.GPR* %7916, i32 0, i32 15
  %7918 = getelementptr inbounds %struct.Reg, %struct.Reg* %7917, i32 0, i32 0
  %RBP.i2152 = bitcast %union.anon* %7918 to i64*
  %7919 = load i64, i64* %RBP.i2152
  %7920 = sub i64 %7919, 216
  %7921 = load i64, i64* %PC.i2150
  %7922 = add i64 %7921, 6
  store i64 %7922, i64* %PC.i2150
  %7923 = inttoptr i64 %7920 to i32*
  %7924 = load i32, i32* %7923
  %7925 = zext i32 %7924 to i64
  store i64 %7925, i64* %RCX.i2151, align 8
  store %struct.Memory* %loadMem_475ece, %struct.Memory** %MEMORY
  %loadMem_475ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 33
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %PC.i2148 = bitcast %union.anon* %7928 to i64*
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7930 = getelementptr inbounds %struct.GPR, %struct.GPR* %7929, i32 0, i32 5
  %7931 = getelementptr inbounds %struct.Reg, %struct.Reg* %7930, i32 0, i32 0
  %RCX.i2149 = bitcast %union.anon* %7931 to i64*
  %7932 = load i64, i64* %RCX.i2149
  %7933 = load i64, i64* %PC.i2148
  %7934 = add i64 %7933, 3
  store i64 %7934, i64* %PC.i2148
  %7935 = trunc i64 %7932 to i32
  %7936 = sub i32 %7935, 1
  %7937 = zext i32 %7936 to i64
  store i64 %7937, i64* %RCX.i2149, align 8
  %7938 = icmp ult i32 %7935, 1
  %7939 = zext i1 %7938 to i8
  %7940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7939, i8* %7940, align 1
  %7941 = and i32 %7936, 255
  %7942 = call i32 @llvm.ctpop.i32(i32 %7941)
  %7943 = trunc i32 %7942 to i8
  %7944 = and i8 %7943, 1
  %7945 = xor i8 %7944, 1
  %7946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7945, i8* %7946, align 1
  %7947 = xor i64 1, %7932
  %7948 = trunc i64 %7947 to i32
  %7949 = xor i32 %7948, %7936
  %7950 = lshr i32 %7949, 4
  %7951 = trunc i32 %7950 to i8
  %7952 = and i8 %7951, 1
  %7953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7952, i8* %7953, align 1
  %7954 = icmp eq i32 %7936, 0
  %7955 = zext i1 %7954 to i8
  %7956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7955, i8* %7956, align 1
  %7957 = lshr i32 %7936, 31
  %7958 = trunc i32 %7957 to i8
  %7959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7958, i8* %7959, align 1
  %7960 = lshr i32 %7935, 31
  %7961 = xor i32 %7957, %7960
  %7962 = add i32 %7961, %7960
  %7963 = icmp eq i32 %7962, 2
  %7964 = zext i1 %7963 to i8
  %7965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7964, i8* %7965, align 1
  store %struct.Memory* %loadMem_475ed4, %struct.Memory** %MEMORY
  %loadMem_475ed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7967 = getelementptr inbounds %struct.GPR, %struct.GPR* %7966, i32 0, i32 33
  %7968 = getelementptr inbounds %struct.Reg, %struct.Reg* %7967, i32 0, i32 0
  %PC.i2145 = bitcast %union.anon* %7968 to i64*
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7970 = getelementptr inbounds %struct.GPR, %struct.GPR* %7969, i32 0, i32 5
  %7971 = getelementptr inbounds %struct.Reg, %struct.Reg* %7970, i32 0, i32 0
  %ECX.i2146 = bitcast %union.anon* %7971 to i32*
  %7972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7973 = getelementptr inbounds %struct.GPR, %struct.GPR* %7972, i32 0, i32 7
  %7974 = getelementptr inbounds %struct.Reg, %struct.Reg* %7973, i32 0, i32 0
  %RDX.i2147 = bitcast %union.anon* %7974 to i64*
  %7975 = load i32, i32* %ECX.i2146
  %7976 = zext i32 %7975 to i64
  %7977 = load i64, i64* %PC.i2145
  %7978 = add i64 %7977, 3
  store i64 %7978, i64* %PC.i2145
  %7979 = shl i64 %7976, 32
  %7980 = ashr exact i64 %7979, 32
  store i64 %7980, i64* %RDX.i2147, align 8
  store %struct.Memory* %loadMem_475ed7, %struct.Memory** %MEMORY
  %loadMem_475eda = load %struct.Memory*, %struct.Memory** %MEMORY
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7982 = getelementptr inbounds %struct.GPR, %struct.GPR* %7981, i32 0, i32 33
  %7983 = getelementptr inbounds %struct.Reg, %struct.Reg* %7982, i32 0, i32 0
  %PC.i2141 = bitcast %union.anon* %7983 to i64*
  %7984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7985 = getelementptr inbounds %struct.GPR, %struct.GPR* %7984, i32 0, i32 5
  %7986 = getelementptr inbounds %struct.Reg, %struct.Reg* %7985, i32 0, i32 0
  %RCX.i2142 = bitcast %union.anon* %7986 to i64*
  %7987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7988 = getelementptr inbounds %struct.GPR, %struct.GPR* %7987, i32 0, i32 7
  %7989 = getelementptr inbounds %struct.Reg, %struct.Reg* %7988, i32 0, i32 0
  %RDX.i2143 = bitcast %union.anon* %7989 to i64*
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7991 = getelementptr inbounds %struct.GPR, %struct.GPR* %7990, i32 0, i32 15
  %7992 = getelementptr inbounds %struct.Reg, %struct.Reg* %7991, i32 0, i32 0
  %RBP.i2144 = bitcast %union.anon* %7992 to i64*
  %7993 = load i64, i64* %RBP.i2144
  %7994 = load i64, i64* %RDX.i2143
  %7995 = mul i64 %7994, 4
  %7996 = add i64 %7993, -208
  %7997 = add i64 %7996, %7995
  %7998 = load i64, i64* %PC.i2141
  %7999 = add i64 %7998, 7
  store i64 %7999, i64* %PC.i2141
  %8000 = inttoptr i64 %7997 to i32*
  %8001 = load i32, i32* %8000
  %8002 = zext i32 %8001 to i64
  store i64 %8002, i64* %RCX.i2142, align 8
  store %struct.Memory* %loadMem_475eda, %struct.Memory** %MEMORY
  %loadMem_475ee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8004 = getelementptr inbounds %struct.GPR, %struct.GPR* %8003, i32 0, i32 33
  %8005 = getelementptr inbounds %struct.Reg, %struct.Reg* %8004, i32 0, i32 0
  %PC.i2138 = bitcast %union.anon* %8005 to i64*
  %8006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8007 = getelementptr inbounds %struct.GPR, %struct.GPR* %8006, i32 0, i32 1
  %8008 = getelementptr inbounds %struct.Reg, %struct.Reg* %8007, i32 0, i32 0
  %EAX.i2139 = bitcast %union.anon* %8008 to i32*
  %8009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8010 = getelementptr inbounds %struct.GPR, %struct.GPR* %8009, i32 0, i32 15
  %8011 = getelementptr inbounds %struct.Reg, %struct.Reg* %8010, i32 0, i32 0
  %RBP.i2140 = bitcast %union.anon* %8011 to i64*
  %8012 = load i64, i64* %RBP.i2140
  %8013 = sub i64 %8012, 1180
  %8014 = load i32, i32* %EAX.i2139
  %8015 = zext i32 %8014 to i64
  %8016 = load i64, i64* %PC.i2138
  %8017 = add i64 %8016, 6
  store i64 %8017, i64* %PC.i2138
  %8018 = inttoptr i64 %8013 to i32*
  store i32 %8014, i32* %8018
  store %struct.Memory* %loadMem_475ee1, %struct.Memory** %MEMORY
  %loadMem_475ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8020 = getelementptr inbounds %struct.GPR, %struct.GPR* %8019, i32 0, i32 33
  %8021 = getelementptr inbounds %struct.Reg, %struct.Reg* %8020, i32 0, i32 0
  %PC.i2135 = bitcast %union.anon* %8021 to i64*
  %8022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8023 = getelementptr inbounds %struct.GPR, %struct.GPR* %8022, i32 0, i32 5
  %8024 = getelementptr inbounds %struct.Reg, %struct.Reg* %8023, i32 0, i32 0
  %ECX.i2136 = bitcast %union.anon* %8024 to i32*
  %8025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8026 = getelementptr inbounds %struct.GPR, %struct.GPR* %8025, i32 0, i32 1
  %8027 = getelementptr inbounds %struct.Reg, %struct.Reg* %8026, i32 0, i32 0
  %RAX.i2137 = bitcast %union.anon* %8027 to i64*
  %8028 = load i32, i32* %ECX.i2136
  %8029 = zext i32 %8028 to i64
  %8030 = load i64, i64* %PC.i2135
  %8031 = add i64 %8030, 2
  store i64 %8031, i64* %PC.i2135
  %8032 = and i64 %8029, 4294967295
  store i64 %8032, i64* %RAX.i2137, align 8
  store %struct.Memory* %loadMem_475ee7, %struct.Memory** %MEMORY
  %loadMem_475ee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8034 = getelementptr inbounds %struct.GPR, %struct.GPR* %8033, i32 0, i32 33
  %8035 = getelementptr inbounds %struct.Reg, %struct.Reg* %8034, i32 0, i32 0
  %PC.i2134 = bitcast %union.anon* %8035 to i64*
  %8036 = load i64, i64* %PC.i2134
  %8037 = add i64 %8036, 1
  store i64 %8037, i64* %PC.i2134
  %8038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8040 = bitcast %union.anon* %8039 to i32*
  %8041 = load i32, i32* %8040, align 8
  %8042 = sext i32 %8041 to i64
  %8043 = lshr i64 %8042, 32
  store i64 %8043, i64* %8038, align 8
  store %struct.Memory* %loadMem_475ee9, %struct.Memory** %MEMORY
  %loadMem_475eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %8044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8045 = getelementptr inbounds %struct.GPR, %struct.GPR* %8044, i32 0, i32 33
  %8046 = getelementptr inbounds %struct.Reg, %struct.Reg* %8045, i32 0, i32 0
  %PC.i2131 = bitcast %union.anon* %8046 to i64*
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8048 = getelementptr inbounds %struct.GPR, %struct.GPR* %8047, i32 0, i32 5
  %8049 = getelementptr inbounds %struct.Reg, %struct.Reg* %8048, i32 0, i32 0
  %RCX.i2132 = bitcast %union.anon* %8049 to i64*
  %8050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8051 = getelementptr inbounds %struct.GPR, %struct.GPR* %8050, i32 0, i32 15
  %8052 = getelementptr inbounds %struct.Reg, %struct.Reg* %8051, i32 0, i32 0
  %RBP.i2133 = bitcast %union.anon* %8052 to i64*
  %8053 = load i64, i64* %RBP.i2133
  %8054 = sub i64 %8053, 1180
  %8055 = load i64, i64* %PC.i2131
  %8056 = add i64 %8055, 6
  store i64 %8056, i64* %PC.i2131
  %8057 = inttoptr i64 %8054 to i32*
  %8058 = load i32, i32* %8057
  %8059 = zext i32 %8058 to i64
  store i64 %8059, i64* %RCX.i2132, align 8
  store %struct.Memory* %loadMem_475eea, %struct.Memory** %MEMORY
  %loadMem_475ef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8061 = getelementptr inbounds %struct.GPR, %struct.GPR* %8060, i32 0, i32 33
  %8062 = getelementptr inbounds %struct.Reg, %struct.Reg* %8061, i32 0, i32 0
  %PC.i2125 = bitcast %union.anon* %8062 to i64*
  %8063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8064 = getelementptr inbounds %struct.GPR, %struct.GPR* %8063, i32 0, i32 5
  %8065 = getelementptr inbounds %struct.Reg, %struct.Reg* %8064, i32 0, i32 0
  %ECX.i2126 = bitcast %union.anon* %8065 to i32*
  %8066 = load i32, i32* %ECX.i2126
  %8067 = zext i32 %8066 to i64
  %8068 = load i64, i64* %PC.i2125
  %8069 = add i64 %8068, 2
  store i64 %8069, i64* %PC.i2125
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8071 = bitcast %union.anon* %8070 to i32*
  %8072 = load i32, i32* %8071, align 8
  %8073 = zext i32 %8072 to i64
  %8074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8075 = bitcast %union.anon* %8074 to i32*
  %8076 = load i32, i32* %8075, align 8
  %8077 = zext i32 %8076 to i64
  %8078 = shl i64 %8067, 32
  %8079 = ashr exact i64 %8078, 32
  %8080 = shl i64 %8077, 32
  %8081 = or i64 %8080, %8073
  %8082 = sdiv i64 %8081, %8079
  %8083 = shl i64 %8082, 32
  %8084 = ashr exact i64 %8083, 32
  %8085 = icmp eq i64 %8082, %8084
  br i1 %8085, label %8090, label %8086

; <label>:8086:                                   ; preds = %block_475eb4
  %8087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8088 = load i64, i64* %8087, align 8
  %8089 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8088, %struct.Memory* %loadMem_475ef0)
  br label %routine_idivl__ecx.exit2127

; <label>:8090:                                   ; preds = %block_475eb4
  %8091 = srem i64 %8081, %8079
  %8092 = getelementptr inbounds %union.anon, %union.anon* %8070, i64 0, i32 0
  %8093 = and i64 %8082, 4294967295
  store i64 %8093, i64* %8092, align 8
  %8094 = getelementptr inbounds %union.anon, %union.anon* %8074, i64 0, i32 0
  %8095 = and i64 %8091, 4294967295
  store i64 %8095, i64* %8094, align 8
  %8096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8096, align 1
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8097, align 1
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8098, align 1
  %8099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8099, align 1
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8100, align 1
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8101, align 1
  br label %routine_idivl__ecx.exit2127

routine_idivl__ecx.exit2127:                      ; preds = %8086, %8090
  %8102 = phi %struct.Memory* [ %8089, %8086 ], [ %loadMem_475ef0, %8090 ]
  store %struct.Memory* %8102, %struct.Memory** %MEMORY
  %loadMem_475ef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8104 = getelementptr inbounds %struct.GPR, %struct.GPR* %8103, i32 0, i32 33
  %8105 = getelementptr inbounds %struct.Reg, %struct.Reg* %8104, i32 0, i32 0
  %PC.i2123 = bitcast %union.anon* %8105 to i64*
  %8106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8107 = getelementptr inbounds %struct.GPR, %struct.GPR* %8106, i32 0, i32 1
  %8108 = getelementptr inbounds %struct.Reg, %struct.Reg* %8107, i32 0, i32 0
  %RAX.i2124 = bitcast %union.anon* %8108 to i64*
  %8109 = load i64, i64* %RAX.i2124
  %8110 = load i64, i64* %PC.i2123
  %8111 = add i64 %8110, 3
  store i64 %8111, i64* %PC.i2123
  %8112 = trunc i64 %8109 to i32
  %8113 = sub i32 %8112, 1
  %8114 = zext i32 %8113 to i64
  store i64 %8114, i64* %RAX.i2124, align 8
  %8115 = icmp ult i32 %8112, 1
  %8116 = zext i1 %8115 to i8
  %8117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8116, i8* %8117, align 1
  %8118 = and i32 %8113, 255
  %8119 = call i32 @llvm.ctpop.i32(i32 %8118)
  %8120 = trunc i32 %8119 to i8
  %8121 = and i8 %8120, 1
  %8122 = xor i8 %8121, 1
  %8123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8122, i8* %8123, align 1
  %8124 = xor i64 1, %8109
  %8125 = trunc i64 %8124 to i32
  %8126 = xor i32 %8125, %8113
  %8127 = lshr i32 %8126, 4
  %8128 = trunc i32 %8127 to i8
  %8129 = and i8 %8128, 1
  %8130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8129, i8* %8130, align 1
  %8131 = icmp eq i32 %8113, 0
  %8132 = zext i1 %8131 to i8
  %8133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8132, i8* %8133, align 1
  %8134 = lshr i32 %8113, 31
  %8135 = trunc i32 %8134 to i8
  %8136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8135, i8* %8136, align 1
  %8137 = lshr i32 %8112, 31
  %8138 = xor i32 %8134, %8137
  %8139 = add i32 %8138, %8137
  %8140 = icmp eq i32 %8139, 2
  %8141 = zext i1 %8140 to i8
  %8142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8141, i8* %8142, align 1
  store %struct.Memory* %loadMem_475ef2, %struct.Memory** %MEMORY
  %loadMem_475ef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8144 = getelementptr inbounds %struct.GPR, %struct.GPR* %8143, i32 0, i32 33
  %8145 = getelementptr inbounds %struct.Reg, %struct.Reg* %8144, i32 0, i32 0
  %PC.i2120 = bitcast %union.anon* %8145 to i64*
  %8146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8147 = getelementptr inbounds %struct.GPR, %struct.GPR* %8146, i32 0, i32 1
  %8148 = getelementptr inbounds %struct.Reg, %struct.Reg* %8147, i32 0, i32 0
  %EAX.i2121 = bitcast %union.anon* %8148 to i32*
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8150 = getelementptr inbounds %struct.GPR, %struct.GPR* %8149, i32 0, i32 15
  %8151 = getelementptr inbounds %struct.Reg, %struct.Reg* %8150, i32 0, i32 0
  %RBP.i2122 = bitcast %union.anon* %8151 to i64*
  %8152 = load i64, i64* %RBP.i2122
  %8153 = sub i64 %8152, 1076
  %8154 = load i32, i32* %EAX.i2121
  %8155 = zext i32 %8154 to i64
  %8156 = load i64, i64* %PC.i2120
  %8157 = add i64 %8156, 6
  store i64 %8157, i64* %PC.i2120
  %8158 = inttoptr i64 %8153 to i32*
  store i32 %8154, i32* %8158
  store %struct.Memory* %loadMem_475ef5, %struct.Memory** %MEMORY
  %loadMem_475efb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8160 = getelementptr inbounds %struct.GPR, %struct.GPR* %8159, i32 0, i32 33
  %8161 = getelementptr inbounds %struct.Reg, %struct.Reg* %8160, i32 0, i32 0
  %PC.i2117 = bitcast %union.anon* %8161 to i64*
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8163 = getelementptr inbounds %struct.GPR, %struct.GPR* %8162, i32 0, i32 1
  %8164 = getelementptr inbounds %struct.Reg, %struct.Reg* %8163, i32 0, i32 0
  %RAX.i2118 = bitcast %union.anon* %8164 to i64*
  %8165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8166 = getelementptr inbounds %struct.GPR, %struct.GPR* %8165, i32 0, i32 15
  %8167 = getelementptr inbounds %struct.Reg, %struct.Reg* %8166, i32 0, i32 0
  %RBP.i2119 = bitcast %union.anon* %8167 to i64*
  %8168 = load i64, i64* %RBP.i2119
  %8169 = sub i64 %8168, 216
  %8170 = load i64, i64* %PC.i2117
  %8171 = add i64 %8170, 6
  store i64 %8171, i64* %PC.i2117
  %8172 = inttoptr i64 %8169 to i32*
  %8173 = load i32, i32* %8172
  %8174 = zext i32 %8173 to i64
  store i64 %8174, i64* %RAX.i2118, align 8
  store %struct.Memory* %loadMem_475efb, %struct.Memory** %MEMORY
  %loadMem_475f01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8176 = getelementptr inbounds %struct.GPR, %struct.GPR* %8175, i32 0, i32 33
  %8177 = getelementptr inbounds %struct.Reg, %struct.Reg* %8176, i32 0, i32 0
  %PC.i2115 = bitcast %union.anon* %8177 to i64*
  %8178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8179 = getelementptr inbounds %struct.GPR, %struct.GPR* %8178, i32 0, i32 1
  %8180 = getelementptr inbounds %struct.Reg, %struct.Reg* %8179, i32 0, i32 0
  %RAX.i2116 = bitcast %union.anon* %8180 to i64*
  %8181 = load i64, i64* %RAX.i2116
  %8182 = load i64, i64* %PC.i2115
  %8183 = add i64 %8182, 3
  store i64 %8183, i64* %PC.i2115
  %8184 = trunc i64 %8181 to i32
  %8185 = sub i32 %8184, 1
  %8186 = zext i32 %8185 to i64
  store i64 %8186, i64* %RAX.i2116, align 8
  %8187 = icmp ult i32 %8184, 1
  %8188 = zext i1 %8187 to i8
  %8189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8188, i8* %8189, align 1
  %8190 = and i32 %8185, 255
  %8191 = call i32 @llvm.ctpop.i32(i32 %8190)
  %8192 = trunc i32 %8191 to i8
  %8193 = and i8 %8192, 1
  %8194 = xor i8 %8193, 1
  %8195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8194, i8* %8195, align 1
  %8196 = xor i64 1, %8181
  %8197 = trunc i64 %8196 to i32
  %8198 = xor i32 %8197, %8185
  %8199 = lshr i32 %8198, 4
  %8200 = trunc i32 %8199 to i8
  %8201 = and i8 %8200, 1
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8201, i8* %8202, align 1
  %8203 = icmp eq i32 %8185, 0
  %8204 = zext i1 %8203 to i8
  %8205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8204, i8* %8205, align 1
  %8206 = lshr i32 %8185, 31
  %8207 = trunc i32 %8206 to i8
  %8208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8207, i8* %8208, align 1
  %8209 = lshr i32 %8184, 31
  %8210 = xor i32 %8206, %8209
  %8211 = add i32 %8210, %8209
  %8212 = icmp eq i32 %8211, 2
  %8213 = zext i1 %8212 to i8
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8213, i8* %8214, align 1
  store %struct.Memory* %loadMem_475f01, %struct.Memory** %MEMORY
  %loadMem_475f04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8216 = getelementptr inbounds %struct.GPR, %struct.GPR* %8215, i32 0, i32 33
  %8217 = getelementptr inbounds %struct.Reg, %struct.Reg* %8216, i32 0, i32 0
  %PC.i2112 = bitcast %union.anon* %8217 to i64*
  %8218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8219 = getelementptr inbounds %struct.GPR, %struct.GPR* %8218, i32 0, i32 1
  %8220 = getelementptr inbounds %struct.Reg, %struct.Reg* %8219, i32 0, i32 0
  %EAX.i2113 = bitcast %union.anon* %8220 to i32*
  %8221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8222 = getelementptr inbounds %struct.GPR, %struct.GPR* %8221, i32 0, i32 9
  %8223 = getelementptr inbounds %struct.Reg, %struct.Reg* %8222, i32 0, i32 0
  %RSI.i2114 = bitcast %union.anon* %8223 to i64*
  %8224 = load i32, i32* %EAX.i2113
  %8225 = zext i32 %8224 to i64
  %8226 = load i64, i64* %PC.i2112
  %8227 = add i64 %8226, 3
  store i64 %8227, i64* %PC.i2112
  %8228 = shl i64 %8225, 32
  %8229 = ashr exact i64 %8228, 32
  store i64 %8229, i64* %RSI.i2114, align 8
  store %struct.Memory* %loadMem_475f04, %struct.Memory** %MEMORY
  %loadMem_475f07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8231 = getelementptr inbounds %struct.GPR, %struct.GPR* %8230, i32 0, i32 33
  %8232 = getelementptr inbounds %struct.Reg, %struct.Reg* %8231, i32 0, i32 0
  %PC.i2108 = bitcast %union.anon* %8232 to i64*
  %8233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8234 = getelementptr inbounds %struct.GPR, %struct.GPR* %8233, i32 0, i32 1
  %8235 = getelementptr inbounds %struct.Reg, %struct.Reg* %8234, i32 0, i32 0
  %RAX.i2109 = bitcast %union.anon* %8235 to i64*
  %8236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8237 = getelementptr inbounds %struct.GPR, %struct.GPR* %8236, i32 0, i32 9
  %8238 = getelementptr inbounds %struct.Reg, %struct.Reg* %8237, i32 0, i32 0
  %RSI.i2110 = bitcast %union.anon* %8238 to i64*
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8240 = getelementptr inbounds %struct.GPR, %struct.GPR* %8239, i32 0, i32 15
  %8241 = getelementptr inbounds %struct.Reg, %struct.Reg* %8240, i32 0, i32 0
  %RBP.i2111 = bitcast %union.anon* %8241 to i64*
  %8242 = load i64, i64* %RBP.i2111
  %8243 = load i64, i64* %RSI.i2110
  %8244 = mul i64 %8243, 4
  %8245 = add i64 %8242, -208
  %8246 = add i64 %8245, %8244
  %8247 = load i64, i64* %PC.i2108
  %8248 = add i64 %8247, 7
  store i64 %8248, i64* %PC.i2108
  %8249 = inttoptr i64 %8246 to i32*
  %8250 = load i32, i32* %8249
  %8251 = zext i32 %8250 to i64
  store i64 %8251, i64* %RAX.i2109, align 8
  store %struct.Memory* %loadMem_475f07, %struct.Memory** %MEMORY
  %loadMem_475f0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8253 = getelementptr inbounds %struct.GPR, %struct.GPR* %8252, i32 0, i32 33
  %8254 = getelementptr inbounds %struct.Reg, %struct.Reg* %8253, i32 0, i32 0
  %PC.i2107 = bitcast %union.anon* %8254 to i64*
  %8255 = load i64, i64* %PC.i2107
  %8256 = add i64 %8255, 1
  store i64 %8256, i64* %PC.i2107
  %8257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8259 = bitcast %union.anon* %8258 to i32*
  %8260 = load i32, i32* %8259, align 8
  %8261 = sext i32 %8260 to i64
  %8262 = lshr i64 %8261, 32
  store i64 %8262, i64* %8257, align 8
  store %struct.Memory* %loadMem_475f0e, %struct.Memory** %MEMORY
  %loadMem_475f0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8264 = getelementptr inbounds %struct.GPR, %struct.GPR* %8263, i32 0, i32 33
  %8265 = getelementptr inbounds %struct.Reg, %struct.Reg* %8264, i32 0, i32 0
  %PC.i2101 = bitcast %union.anon* %8265 to i64*
  %8266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8267 = getelementptr inbounds %struct.GPR, %struct.GPR* %8266, i32 0, i32 5
  %8268 = getelementptr inbounds %struct.Reg, %struct.Reg* %8267, i32 0, i32 0
  %ECX.i2102 = bitcast %union.anon* %8268 to i32*
  %8269 = load i32, i32* %ECX.i2102
  %8270 = zext i32 %8269 to i64
  %8271 = load i64, i64* %PC.i2101
  %8272 = add i64 %8271, 2
  store i64 %8272, i64* %PC.i2101
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8274 = bitcast %union.anon* %8273 to i32*
  %8275 = load i32, i32* %8274, align 8
  %8276 = zext i32 %8275 to i64
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8278 = bitcast %union.anon* %8277 to i32*
  %8279 = load i32, i32* %8278, align 8
  %8280 = zext i32 %8279 to i64
  %8281 = shl i64 %8270, 32
  %8282 = ashr exact i64 %8281, 32
  %8283 = shl i64 %8280, 32
  %8284 = or i64 %8283, %8276
  %8285 = sdiv i64 %8284, %8282
  %8286 = shl i64 %8285, 32
  %8287 = ashr exact i64 %8286, 32
  %8288 = icmp eq i64 %8285, %8287
  br i1 %8288, label %8293, label %8289

; <label>:8289:                                   ; preds = %routine_idivl__ecx.exit2127
  %8290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8291 = load i64, i64* %8290, align 8
  %8292 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8291, %struct.Memory* %loadMem_475f0f)
  br label %routine_idivl__ecx.exit2103

; <label>:8293:                                   ; preds = %routine_idivl__ecx.exit2127
  %8294 = srem i64 %8284, %8282
  %8295 = getelementptr inbounds %union.anon, %union.anon* %8273, i64 0, i32 0
  %8296 = and i64 %8285, 4294967295
  store i64 %8296, i64* %8295, align 8
  %8297 = getelementptr inbounds %union.anon, %union.anon* %8277, i64 0, i32 0
  %8298 = and i64 %8294, 4294967295
  store i64 %8298, i64* %8297, align 8
  %8299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8299, align 1
  %8300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8300, align 1
  %8301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8301, align 1
  %8302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8302, align 1
  %8303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8303, align 1
  %8304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8304, align 1
  br label %routine_idivl__ecx.exit2103

routine_idivl__ecx.exit2103:                      ; preds = %8289, %8293
  %8305 = phi %struct.Memory* [ %8292, %8289 ], [ %loadMem_475f0f, %8293 ]
  store %struct.Memory* %8305, %struct.Memory** %MEMORY
  %loadMem_475f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8307 = getelementptr inbounds %struct.GPR, %struct.GPR* %8306, i32 0, i32 33
  %8308 = getelementptr inbounds %struct.Reg, %struct.Reg* %8307, i32 0, i32 0
  %PC.i2099 = bitcast %union.anon* %8308 to i64*
  %8309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8310 = getelementptr inbounds %struct.GPR, %struct.GPR* %8309, i32 0, i32 7
  %8311 = getelementptr inbounds %struct.Reg, %struct.Reg* %8310, i32 0, i32 0
  %RDX.i2100 = bitcast %union.anon* %8311 to i64*
  %8312 = load i64, i64* %RDX.i2100
  %8313 = load i64, i64* %PC.i2099
  %8314 = add i64 %8313, 3
  store i64 %8314, i64* %PC.i2099
  %8315 = trunc i64 %8312 to i32
  %8316 = sub i32 %8315, 1
  %8317 = zext i32 %8316 to i64
  store i64 %8317, i64* %RDX.i2100, align 8
  %8318 = icmp ult i32 %8315, 1
  %8319 = zext i1 %8318 to i8
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8319, i8* %8320, align 1
  %8321 = and i32 %8316, 255
  %8322 = call i32 @llvm.ctpop.i32(i32 %8321)
  %8323 = trunc i32 %8322 to i8
  %8324 = and i8 %8323, 1
  %8325 = xor i8 %8324, 1
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8325, i8* %8326, align 1
  %8327 = xor i64 1, %8312
  %8328 = trunc i64 %8327 to i32
  %8329 = xor i32 %8328, %8316
  %8330 = lshr i32 %8329, 4
  %8331 = trunc i32 %8330 to i8
  %8332 = and i8 %8331, 1
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8332, i8* %8333, align 1
  %8334 = icmp eq i32 %8316, 0
  %8335 = zext i1 %8334 to i8
  %8336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8335, i8* %8336, align 1
  %8337 = lshr i32 %8316, 31
  %8338 = trunc i32 %8337 to i8
  %8339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8338, i8* %8339, align 1
  %8340 = lshr i32 %8315, 31
  %8341 = xor i32 %8337, %8340
  %8342 = add i32 %8341, %8340
  %8343 = icmp eq i32 %8342, 2
  %8344 = zext i1 %8343 to i8
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8344, i8* %8345, align 1
  store %struct.Memory* %loadMem_475f11, %struct.Memory** %MEMORY
  %loadMem_475f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8347 = getelementptr inbounds %struct.GPR, %struct.GPR* %8346, i32 0, i32 33
  %8348 = getelementptr inbounds %struct.Reg, %struct.Reg* %8347, i32 0, i32 0
  %PC.i2096 = bitcast %union.anon* %8348 to i64*
  %8349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8350 = getelementptr inbounds %struct.GPR, %struct.GPR* %8349, i32 0, i32 7
  %8351 = getelementptr inbounds %struct.Reg, %struct.Reg* %8350, i32 0, i32 0
  %EDX.i2097 = bitcast %union.anon* %8351 to i32*
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8353 = getelementptr inbounds %struct.GPR, %struct.GPR* %8352, i32 0, i32 15
  %8354 = getelementptr inbounds %struct.Reg, %struct.Reg* %8353, i32 0, i32 0
  %RBP.i2098 = bitcast %union.anon* %8354 to i64*
  %8355 = load i64, i64* %RBP.i2098
  %8356 = sub i64 %8355, 1080
  %8357 = load i32, i32* %EDX.i2097
  %8358 = zext i32 %8357 to i64
  %8359 = load i64, i64* %PC.i2096
  %8360 = add i64 %8359, 6
  store i64 %8360, i64* %PC.i2096
  %8361 = inttoptr i64 %8356 to i32*
  store i32 %8357, i32* %8361
  store %struct.Memory* %loadMem_475f14, %struct.Memory** %MEMORY
  %loadMem_475f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8363 = getelementptr inbounds %struct.GPR, %struct.GPR* %8362, i32 0, i32 33
  %8364 = getelementptr inbounds %struct.Reg, %struct.Reg* %8363, i32 0, i32 0
  %PC.i2093 = bitcast %union.anon* %8364 to i64*
  %8365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8366 = getelementptr inbounds %struct.GPR, %struct.GPR* %8365, i32 0, i32 7
  %8367 = getelementptr inbounds %struct.Reg, %struct.Reg* %8366, i32 0, i32 0
  %RDX.i2094 = bitcast %union.anon* %8367 to i64*
  %8368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8369 = getelementptr inbounds %struct.GPR, %struct.GPR* %8368, i32 0, i32 15
  %8370 = getelementptr inbounds %struct.Reg, %struct.Reg* %8369, i32 0, i32 0
  %RBP.i2095 = bitcast %union.anon* %8370 to i64*
  %8371 = load i64, i64* %RBP.i2095
  %8372 = sub i64 %8371, 1076
  %8373 = load i64, i64* %PC.i2093
  %8374 = add i64 %8373, 6
  store i64 %8374, i64* %PC.i2093
  %8375 = inttoptr i64 %8372 to i32*
  %8376 = load i32, i32* %8375
  %8377 = zext i32 %8376 to i64
  store i64 %8377, i64* %RDX.i2094, align 8
  store %struct.Memory* %loadMem_475f1a, %struct.Memory** %MEMORY
  %loadMem_475f20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8379 = getelementptr inbounds %struct.GPR, %struct.GPR* %8378, i32 0, i32 33
  %8380 = getelementptr inbounds %struct.Reg, %struct.Reg* %8379, i32 0, i32 0
  %PC.i2091 = bitcast %union.anon* %8380 to i64*
  %8381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8382 = getelementptr inbounds %struct.GPR, %struct.GPR* %8381, i32 0, i32 7
  %8383 = getelementptr inbounds %struct.Reg, %struct.Reg* %8382, i32 0, i32 0
  %RDX.i2092 = bitcast %union.anon* %8383 to i64*
  %8384 = load i64, i64* %RDX.i2092
  %8385 = load i64, i64* %PC.i2091
  %8386 = add i64 %8385, 3
  store i64 %8386, i64* %PC.i2091
  %8387 = trunc i64 %8384 to i32
  %8388 = add i32 1, %8387
  %8389 = zext i32 %8388 to i64
  store i64 %8389, i64* %RDX.i2092, align 8
  %8390 = icmp ult i32 %8388, %8387
  %8391 = icmp ult i32 %8388, 1
  %8392 = or i1 %8390, %8391
  %8393 = zext i1 %8392 to i8
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8393, i8* %8394, align 1
  %8395 = and i32 %8388, 255
  %8396 = call i32 @llvm.ctpop.i32(i32 %8395)
  %8397 = trunc i32 %8396 to i8
  %8398 = and i8 %8397, 1
  %8399 = xor i8 %8398, 1
  %8400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8399, i8* %8400, align 1
  %8401 = xor i64 1, %8384
  %8402 = trunc i64 %8401 to i32
  %8403 = xor i32 %8402, %8388
  %8404 = lshr i32 %8403, 4
  %8405 = trunc i32 %8404 to i8
  %8406 = and i8 %8405, 1
  %8407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8406, i8* %8407, align 1
  %8408 = icmp eq i32 %8388, 0
  %8409 = zext i1 %8408 to i8
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8409, i8* %8410, align 1
  %8411 = lshr i32 %8388, 31
  %8412 = trunc i32 %8411 to i8
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8412, i8* %8413, align 1
  %8414 = lshr i32 %8387, 31
  %8415 = xor i32 %8411, %8414
  %8416 = add i32 %8415, %8411
  %8417 = icmp eq i32 %8416, 2
  %8418 = zext i1 %8417 to i8
  %8419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8418, i8* %8419, align 1
  store %struct.Memory* %loadMem_475f20, %struct.Memory** %MEMORY
  %loadMem_475f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8421 = getelementptr inbounds %struct.GPR, %struct.GPR* %8420, i32 0, i32 33
  %8422 = getelementptr inbounds %struct.Reg, %struct.Reg* %8421, i32 0, i32 0
  %PC.i2088 = bitcast %union.anon* %8422 to i64*
  %8423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8424 = getelementptr inbounds %struct.GPR, %struct.GPR* %8423, i32 0, i32 7
  %8425 = getelementptr inbounds %struct.Reg, %struct.Reg* %8424, i32 0, i32 0
  %EDX.i2089 = bitcast %union.anon* %8425 to i32*
  %8426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8427 = getelementptr inbounds %struct.GPR, %struct.GPR* %8426, i32 0, i32 15
  %8428 = getelementptr inbounds %struct.Reg, %struct.Reg* %8427, i32 0, i32 0
  %RBP.i2090 = bitcast %union.anon* %8428 to i64*
  %8429 = load i64, i64* %RBP.i2090
  %8430 = sub i64 %8429, 28
  %8431 = load i32, i32* %EDX.i2089
  %8432 = zext i32 %8431 to i64
  %8433 = load i64, i64* %PC.i2088
  %8434 = add i64 %8433, 3
  store i64 %8434, i64* %PC.i2088
  %8435 = inttoptr i64 %8430 to i32*
  store i32 %8431, i32* %8435
  store %struct.Memory* %loadMem_475f23, %struct.Memory** %MEMORY
  br label %block_.L_475f26

block_.L_475f26:                                  ; preds = %block_.L_475fec, %routine_idivl__ecx.exit2103
  %loadMem_475f26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8437 = getelementptr inbounds %struct.GPR, %struct.GPR* %8436, i32 0, i32 33
  %8438 = getelementptr inbounds %struct.Reg, %struct.Reg* %8437, i32 0, i32 0
  %PC.i2085 = bitcast %union.anon* %8438 to i64*
  %8439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8440 = getelementptr inbounds %struct.GPR, %struct.GPR* %8439, i32 0, i32 1
  %8441 = getelementptr inbounds %struct.Reg, %struct.Reg* %8440, i32 0, i32 0
  %RAX.i2086 = bitcast %union.anon* %8441 to i64*
  %8442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8443 = getelementptr inbounds %struct.GPR, %struct.GPR* %8442, i32 0, i32 15
  %8444 = getelementptr inbounds %struct.Reg, %struct.Reg* %8443, i32 0, i32 0
  %RBP.i2087 = bitcast %union.anon* %8444 to i64*
  %8445 = load i64, i64* %RBP.i2087
  %8446 = sub i64 %8445, 28
  %8447 = load i64, i64* %PC.i2085
  %8448 = add i64 %8447, 3
  store i64 %8448, i64* %PC.i2085
  %8449 = inttoptr i64 %8446 to i32*
  %8450 = load i32, i32* %8449
  %8451 = zext i32 %8450 to i64
  store i64 %8451, i64* %RAX.i2086, align 8
  store %struct.Memory* %loadMem_475f26, %struct.Memory** %MEMORY
  %loadMem_475f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8453 = getelementptr inbounds %struct.GPR, %struct.GPR* %8452, i32 0, i32 33
  %8454 = getelementptr inbounds %struct.Reg, %struct.Reg* %8453, i32 0, i32 0
  %PC.i2082 = bitcast %union.anon* %8454 to i64*
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8456 = getelementptr inbounds %struct.GPR, %struct.GPR* %8455, i32 0, i32 1
  %8457 = getelementptr inbounds %struct.Reg, %struct.Reg* %8456, i32 0, i32 0
  %EAX.i2083 = bitcast %union.anon* %8457 to i32*
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8459 = getelementptr inbounds %struct.GPR, %struct.GPR* %8458, i32 0, i32 15
  %8460 = getelementptr inbounds %struct.Reg, %struct.Reg* %8459, i32 0, i32 0
  %RBP.i2084 = bitcast %union.anon* %8460 to i64*
  %8461 = load i32, i32* %EAX.i2083
  %8462 = zext i32 %8461 to i64
  %8463 = load i64, i64* %RBP.i2084
  %8464 = sub i64 %8463, 224
  %8465 = load i64, i64* %PC.i2082
  %8466 = add i64 %8465, 6
  store i64 %8466, i64* %PC.i2082
  %8467 = inttoptr i64 %8464 to i32*
  %8468 = load i32, i32* %8467
  %8469 = sub i32 %8461, %8468
  %8470 = icmp ult i32 %8461, %8468
  %8471 = zext i1 %8470 to i8
  %8472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8471, i8* %8472, align 1
  %8473 = and i32 %8469, 255
  %8474 = call i32 @llvm.ctpop.i32(i32 %8473)
  %8475 = trunc i32 %8474 to i8
  %8476 = and i8 %8475, 1
  %8477 = xor i8 %8476, 1
  %8478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8477, i8* %8478, align 1
  %8479 = xor i32 %8468, %8461
  %8480 = xor i32 %8479, %8469
  %8481 = lshr i32 %8480, 4
  %8482 = trunc i32 %8481 to i8
  %8483 = and i8 %8482, 1
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8483, i8* %8484, align 1
  %8485 = icmp eq i32 %8469, 0
  %8486 = zext i1 %8485 to i8
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8486, i8* %8487, align 1
  %8488 = lshr i32 %8469, 31
  %8489 = trunc i32 %8488 to i8
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8489, i8* %8490, align 1
  %8491 = lshr i32 %8461, 31
  %8492 = lshr i32 %8468, 31
  %8493 = xor i32 %8492, %8491
  %8494 = xor i32 %8488, %8491
  %8495 = add i32 %8494, %8493
  %8496 = icmp eq i32 %8495, 2
  %8497 = zext i1 %8496 to i8
  %8498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8497, i8* %8498, align 1
  store %struct.Memory* %loadMem_475f29, %struct.Memory** %MEMORY
  %loadMem_475f2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8500 = getelementptr inbounds %struct.GPR, %struct.GPR* %8499, i32 0, i32 33
  %8501 = getelementptr inbounds %struct.Reg, %struct.Reg* %8500, i32 0, i32 0
  %PC.i2081 = bitcast %union.anon* %8501 to i64*
  %8502 = load i64, i64* %PC.i2081
  %8503 = add i64 %8502, 203
  %8504 = load i64, i64* %PC.i2081
  %8505 = add i64 %8504, 6
  %8506 = load i64, i64* %PC.i2081
  %8507 = add i64 %8506, 6
  store i64 %8507, i64* %PC.i2081
  %8508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8509 = load i8, i8* %8508, align 1
  %8510 = icmp eq i8 %8509, 0
  %8511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8512 = load i8, i8* %8511, align 1
  %8513 = icmp ne i8 %8512, 0
  %8514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8515 = load i8, i8* %8514, align 1
  %8516 = icmp ne i8 %8515, 0
  %8517 = xor i1 %8513, %8516
  %8518 = xor i1 %8517, true
  %8519 = and i1 %8510, %8518
  %8520 = zext i1 %8519 to i8
  store i8 %8520, i8* %BRANCH_TAKEN, align 1
  %8521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8522 = select i1 %8519, i64 %8503, i64 %8505
  store i64 %8522, i64* %8521, align 8
  store %struct.Memory* %loadMem_475f2f, %struct.Memory** %MEMORY
  %loadBr_475f2f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475f2f = icmp eq i8 %loadBr_475f2f, 1
  br i1 %cmpBr_475f2f, label %block_.L_475ffa, label %block_475f35

block_475f35:                                     ; preds = %block_.L_475f26
  %loadMem_475f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8524 = getelementptr inbounds %struct.GPR, %struct.GPR* %8523, i32 0, i32 33
  %8525 = getelementptr inbounds %struct.Reg, %struct.Reg* %8524, i32 0, i32 0
  %PC.i2079 = bitcast %union.anon* %8525 to i64*
  %8526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8527 = getelementptr inbounds %struct.GPR, %struct.GPR* %8526, i32 0, i32 1
  %8528 = getelementptr inbounds %struct.Reg, %struct.Reg* %8527, i32 0, i32 0
  %RAX.i2080 = bitcast %union.anon* %8528 to i64*
  %8529 = load i64, i64* %PC.i2079
  %8530 = add i64 %8529, 7
  store i64 %8530, i64* %PC.i2079
  %8531 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %8532 = zext i32 %8531 to i64
  store i64 %8532, i64* %RAX.i2080, align 8
  store %struct.Memory* %loadMem_475f35, %struct.Memory** %MEMORY
  %loadMem_475f3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8534 = getelementptr inbounds %struct.GPR, %struct.GPR* %8533, i32 0, i32 33
  %8535 = getelementptr inbounds %struct.Reg, %struct.Reg* %8534, i32 0, i32 0
  %PC.i2077 = bitcast %union.anon* %8535 to i64*
  %8536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8537 = getelementptr inbounds %struct.GPR, %struct.GPR* %8536, i32 0, i32 1
  %8538 = getelementptr inbounds %struct.Reg, %struct.Reg* %8537, i32 0, i32 0
  %RAX.i2078 = bitcast %union.anon* %8538 to i64*
  %8539 = load i64, i64* %RAX.i2078
  %8540 = load i64, i64* %PC.i2077
  %8541 = add i64 %8540, 3
  store i64 %8541, i64* %PC.i2077
  %8542 = trunc i64 %8539 to i32
  %8543 = sub i32 %8542, 1
  %8544 = zext i32 %8543 to i64
  store i64 %8544, i64* %RAX.i2078, align 8
  %8545 = icmp ult i32 %8542, 1
  %8546 = zext i1 %8545 to i8
  %8547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8546, i8* %8547, align 1
  %8548 = and i32 %8543, 255
  %8549 = call i32 @llvm.ctpop.i32(i32 %8548)
  %8550 = trunc i32 %8549 to i8
  %8551 = and i8 %8550, 1
  %8552 = xor i8 %8551, 1
  %8553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8552, i8* %8553, align 1
  %8554 = xor i64 1, %8539
  %8555 = trunc i64 %8554 to i32
  %8556 = xor i32 %8555, %8543
  %8557 = lshr i32 %8556, 4
  %8558 = trunc i32 %8557 to i8
  %8559 = and i8 %8558, 1
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8559, i8* %8560, align 1
  %8561 = icmp eq i32 %8543, 0
  %8562 = zext i1 %8561 to i8
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8562, i8* %8563, align 1
  %8564 = lshr i32 %8543, 31
  %8565 = trunc i32 %8564 to i8
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8565, i8* %8566, align 1
  %8567 = lshr i32 %8542, 31
  %8568 = xor i32 %8564, %8567
  %8569 = add i32 %8568, %8567
  %8570 = icmp eq i32 %8569, 2
  %8571 = zext i1 %8570 to i8
  %8572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8571, i8* %8572, align 1
  store %struct.Memory* %loadMem_475f3c, %struct.Memory** %MEMORY
  %loadMem_475f3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8574 = getelementptr inbounds %struct.GPR, %struct.GPR* %8573, i32 0, i32 33
  %8575 = getelementptr inbounds %struct.Reg, %struct.Reg* %8574, i32 0, i32 0
  %PC.i2074 = bitcast %union.anon* %8575 to i64*
  %8576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8577 = getelementptr inbounds %struct.GPR, %struct.GPR* %8576, i32 0, i32 1
  %8578 = getelementptr inbounds %struct.Reg, %struct.Reg* %8577, i32 0, i32 0
  %EAX.i2075 = bitcast %union.anon* %8578 to i32*
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8580 = getelementptr inbounds %struct.GPR, %struct.GPR* %8579, i32 0, i32 15
  %8581 = getelementptr inbounds %struct.Reg, %struct.Reg* %8580, i32 0, i32 0
  %RBP.i2076 = bitcast %union.anon* %8581 to i64*
  %8582 = load i64, i64* %RBP.i2076
  %8583 = sub i64 %8582, 32
  %8584 = load i32, i32* %EAX.i2075
  %8585 = zext i32 %8584 to i64
  %8586 = load i64, i64* %PC.i2074
  %8587 = add i64 %8586, 3
  store i64 %8587, i64* %PC.i2074
  %8588 = inttoptr i64 %8583 to i32*
  store i32 %8584, i32* %8588
  store %struct.Memory* %loadMem_475f3f, %struct.Memory** %MEMORY
  br label %block_.L_475f42

block_.L_475f42:                                  ; preds = %block_.L_475fd9, %block_475f35
  %loadMem_475f42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8590 = getelementptr inbounds %struct.GPR, %struct.GPR* %8589, i32 0, i32 33
  %8591 = getelementptr inbounds %struct.Reg, %struct.Reg* %8590, i32 0, i32 0
  %PC.i2072 = bitcast %union.anon* %8591 to i64*
  %8592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8593 = getelementptr inbounds %struct.GPR, %struct.GPR* %8592, i32 0, i32 15
  %8594 = getelementptr inbounds %struct.Reg, %struct.Reg* %8593, i32 0, i32 0
  %RBP.i2073 = bitcast %union.anon* %8594 to i64*
  %8595 = load i64, i64* %RBP.i2073
  %8596 = sub i64 %8595, 32
  %8597 = load i64, i64* %PC.i2072
  %8598 = add i64 %8597, 4
  store i64 %8598, i64* %PC.i2072
  %8599 = inttoptr i64 %8596 to i32*
  %8600 = load i32, i32* %8599
  %8601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8601, align 1
  %8602 = and i32 %8600, 255
  %8603 = call i32 @llvm.ctpop.i32(i32 %8602)
  %8604 = trunc i32 %8603 to i8
  %8605 = and i8 %8604, 1
  %8606 = xor i8 %8605, 1
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8606, i8* %8607, align 1
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8608, align 1
  %8609 = icmp eq i32 %8600, 0
  %8610 = zext i1 %8609 to i8
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8610, i8* %8611, align 1
  %8612 = lshr i32 %8600, 31
  %8613 = trunc i32 %8612 to i8
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8613, i8* %8614, align 1
  %8615 = lshr i32 %8600, 31
  %8616 = xor i32 %8612, %8615
  %8617 = add i32 %8616, %8615
  %8618 = icmp eq i32 %8617, 2
  %8619 = zext i1 %8618 to i8
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8619, i8* %8620, align 1
  store %struct.Memory* %loadMem_475f42, %struct.Memory** %MEMORY
  %loadMem_475f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8622 = getelementptr inbounds %struct.GPR, %struct.GPR* %8621, i32 0, i32 33
  %8623 = getelementptr inbounds %struct.Reg, %struct.Reg* %8622, i32 0, i32 0
  %PC.i2071 = bitcast %union.anon* %8623 to i64*
  %8624 = load i64, i64* %PC.i2071
  %8625 = add i64 %8624, 161
  %8626 = load i64, i64* %PC.i2071
  %8627 = add i64 %8626, 6
  %8628 = load i64, i64* %PC.i2071
  %8629 = add i64 %8628, 6
  store i64 %8629, i64* %PC.i2071
  %8630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8631 = load i8, i8* %8630, align 1
  %8632 = icmp ne i8 %8631, 0
  %8633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8634 = load i8, i8* %8633, align 1
  %8635 = icmp ne i8 %8634, 0
  %8636 = xor i1 %8632, %8635
  %8637 = zext i1 %8636 to i8
  store i8 %8637, i8* %BRANCH_TAKEN, align 1
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8639 = select i1 %8636, i64 %8625, i64 %8627
  store i64 %8639, i64* %8638, align 8
  store %struct.Memory* %loadMem_475f46, %struct.Memory** %MEMORY
  %loadBr_475f46 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475f46 = icmp eq i8 %loadBr_475f46, 1
  br i1 %cmpBr_475f46, label %block_.L_475fe7, label %block_475f4c

block_475f4c:                                     ; preds = %block_.L_475f42
  %loadMem_475f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8641 = getelementptr inbounds %struct.GPR, %struct.GPR* %8640, i32 0, i32 33
  %8642 = getelementptr inbounds %struct.Reg, %struct.Reg* %8641, i32 0, i32 0
  %PC.i2068 = bitcast %union.anon* %8642 to i64*
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8644 = getelementptr inbounds %struct.GPR, %struct.GPR* %8643, i32 0, i32 1
  %8645 = getelementptr inbounds %struct.Reg, %struct.Reg* %8644, i32 0, i32 0
  %RAX.i2069 = bitcast %union.anon* %8645 to i64*
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8647 = getelementptr inbounds %struct.GPR, %struct.GPR* %8646, i32 0, i32 15
  %8648 = getelementptr inbounds %struct.Reg, %struct.Reg* %8647, i32 0, i32 0
  %RBP.i2070 = bitcast %union.anon* %8648 to i64*
  %8649 = load i64, i64* %RBP.i2070
  %8650 = sub i64 %8649, 28
  %8651 = load i64, i64* %PC.i2068
  %8652 = add i64 %8651, 4
  store i64 %8652, i64* %PC.i2068
  %8653 = inttoptr i64 %8650 to i32*
  %8654 = load i32, i32* %8653
  %8655 = sext i32 %8654 to i64
  %8656 = mul i64 %8655, 20
  %8657 = trunc i64 %8656 to i32
  %8658 = and i64 %8656, 4294967295
  store i64 %8658, i64* %RAX.i2069, align 8
  %8659 = shl i64 %8656, 32
  %8660 = ashr exact i64 %8659, 32
  %8661 = icmp ne i64 %8660, %8656
  %8662 = zext i1 %8661 to i8
  %8663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8662, i8* %8663, align 1
  %8664 = and i32 %8657, 255
  %8665 = call i32 @llvm.ctpop.i32(i32 %8664)
  %8666 = trunc i32 %8665 to i8
  %8667 = and i8 %8666, 1
  %8668 = xor i8 %8667, 1
  %8669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8668, i8* %8669, align 1
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8670, align 1
  %8671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8671, align 1
  %8672 = lshr i32 %8657, 31
  %8673 = trunc i32 %8672 to i8
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8673, i8* %8674, align 1
  %8675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8662, i8* %8675, align 1
  store %struct.Memory* %loadMem_475f4c, %struct.Memory** %MEMORY
  %loadMem_475f50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8677 = getelementptr inbounds %struct.GPR, %struct.GPR* %8676, i32 0, i32 33
  %8678 = getelementptr inbounds %struct.Reg, %struct.Reg* %8677, i32 0, i32 0
  %PC.i2066 = bitcast %union.anon* %8678 to i64*
  %8679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8680 = getelementptr inbounds %struct.GPR, %struct.GPR* %8679, i32 0, i32 1
  %8681 = getelementptr inbounds %struct.Reg, %struct.Reg* %8680, i32 0, i32 0
  %RAX.i2067 = bitcast %union.anon* %8681 to i64*
  %8682 = load i64, i64* %RAX.i2067
  %8683 = load i64, i64* %PC.i2066
  %8684 = add i64 %8683, 3
  store i64 %8684, i64* %PC.i2066
  %8685 = trunc i64 %8682 to i32
  %8686 = add i32 21, %8685
  %8687 = zext i32 %8686 to i64
  store i64 %8687, i64* %RAX.i2067, align 8
  %8688 = icmp ult i32 %8686, %8685
  %8689 = icmp ult i32 %8686, 21
  %8690 = or i1 %8688, %8689
  %8691 = zext i1 %8690 to i8
  %8692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8691, i8* %8692, align 1
  %8693 = and i32 %8686, 255
  %8694 = call i32 @llvm.ctpop.i32(i32 %8693)
  %8695 = trunc i32 %8694 to i8
  %8696 = and i8 %8695, 1
  %8697 = xor i8 %8696, 1
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8697, i8* %8698, align 1
  %8699 = xor i64 21, %8682
  %8700 = trunc i64 %8699 to i32
  %8701 = xor i32 %8700, %8686
  %8702 = lshr i32 %8701, 4
  %8703 = trunc i32 %8702 to i8
  %8704 = and i8 %8703, 1
  %8705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8704, i8* %8705, align 1
  %8706 = icmp eq i32 %8686, 0
  %8707 = zext i1 %8706 to i8
  %8708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8707, i8* %8708, align 1
  %8709 = lshr i32 %8686, 31
  %8710 = trunc i32 %8709 to i8
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8710, i8* %8711, align 1
  %8712 = lshr i32 %8685, 31
  %8713 = xor i32 %8709, %8712
  %8714 = add i32 %8713, %8709
  %8715 = icmp eq i32 %8714, 2
  %8716 = zext i1 %8715 to i8
  %8717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8716, i8* %8717, align 1
  store %struct.Memory* %loadMem_475f50, %struct.Memory** %MEMORY
  %loadMem_475f53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8719 = getelementptr inbounds %struct.GPR, %struct.GPR* %8718, i32 0, i32 33
  %8720 = getelementptr inbounds %struct.Reg, %struct.Reg* %8719, i32 0, i32 0
  %PC.i2063 = bitcast %union.anon* %8720 to i64*
  %8721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8722 = getelementptr inbounds %struct.GPR, %struct.GPR* %8721, i32 0, i32 1
  %8723 = getelementptr inbounds %struct.Reg, %struct.Reg* %8722, i32 0, i32 0
  %RAX.i2064 = bitcast %union.anon* %8723 to i64*
  %8724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8725 = getelementptr inbounds %struct.GPR, %struct.GPR* %8724, i32 0, i32 15
  %8726 = getelementptr inbounds %struct.Reg, %struct.Reg* %8725, i32 0, i32 0
  %RBP.i2065 = bitcast %union.anon* %8726 to i64*
  %8727 = load i64, i64* %RAX.i2064
  %8728 = load i64, i64* %RBP.i2065
  %8729 = sub i64 %8728, 32
  %8730 = load i64, i64* %PC.i2063
  %8731 = add i64 %8730, 3
  store i64 %8731, i64* %PC.i2063
  %8732 = trunc i64 %8727 to i32
  %8733 = inttoptr i64 %8729 to i32*
  %8734 = load i32, i32* %8733
  %8735 = add i32 %8734, %8732
  %8736 = zext i32 %8735 to i64
  store i64 %8736, i64* %RAX.i2064, align 8
  %8737 = icmp ult i32 %8735, %8732
  %8738 = icmp ult i32 %8735, %8734
  %8739 = or i1 %8737, %8738
  %8740 = zext i1 %8739 to i8
  %8741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8740, i8* %8741, align 1
  %8742 = and i32 %8735, 255
  %8743 = call i32 @llvm.ctpop.i32(i32 %8742)
  %8744 = trunc i32 %8743 to i8
  %8745 = and i8 %8744, 1
  %8746 = xor i8 %8745, 1
  %8747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8746, i8* %8747, align 1
  %8748 = xor i32 %8734, %8732
  %8749 = xor i32 %8748, %8735
  %8750 = lshr i32 %8749, 4
  %8751 = trunc i32 %8750 to i8
  %8752 = and i8 %8751, 1
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8752, i8* %8753, align 1
  %8754 = icmp eq i32 %8735, 0
  %8755 = zext i1 %8754 to i8
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8755, i8* %8756, align 1
  %8757 = lshr i32 %8735, 31
  %8758 = trunc i32 %8757 to i8
  %8759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8758, i8* %8759, align 1
  %8760 = lshr i32 %8732, 31
  %8761 = lshr i32 %8734, 31
  %8762 = xor i32 %8757, %8760
  %8763 = xor i32 %8757, %8761
  %8764 = add i32 %8762, %8763
  %8765 = icmp eq i32 %8764, 2
  %8766 = zext i1 %8765 to i8
  %8767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8766, i8* %8767, align 1
  store %struct.Memory* %loadMem_475f53, %struct.Memory** %MEMORY
  %loadMem_475f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8769 = getelementptr inbounds %struct.GPR, %struct.GPR* %8768, i32 0, i32 33
  %8770 = getelementptr inbounds %struct.Reg, %struct.Reg* %8769, i32 0, i32 0
  %PC.i2060 = bitcast %union.anon* %8770 to i64*
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8772 = getelementptr inbounds %struct.GPR, %struct.GPR* %8771, i32 0, i32 1
  %8773 = getelementptr inbounds %struct.Reg, %struct.Reg* %8772, i32 0, i32 0
  %EAX.i2061 = bitcast %union.anon* %8773 to i32*
  %8774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8775 = getelementptr inbounds %struct.GPR, %struct.GPR* %8774, i32 0, i32 5
  %8776 = getelementptr inbounds %struct.Reg, %struct.Reg* %8775, i32 0, i32 0
  %RCX.i2062 = bitcast %union.anon* %8776 to i64*
  %8777 = load i32, i32* %EAX.i2061
  %8778 = zext i32 %8777 to i64
  %8779 = load i64, i64* %PC.i2060
  %8780 = add i64 %8779, 3
  store i64 %8780, i64* %PC.i2060
  %8781 = shl i64 %8778, 32
  %8782 = ashr exact i64 %8781, 32
  store i64 %8782, i64* %RCX.i2062, align 8
  store %struct.Memory* %loadMem_475f56, %struct.Memory** %MEMORY
  %loadMem_475f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8784 = getelementptr inbounds %struct.GPR, %struct.GPR* %8783, i32 0, i32 33
  %8785 = getelementptr inbounds %struct.Reg, %struct.Reg* %8784, i32 0, i32 0
  %PC.i2057 = bitcast %union.anon* %8785 to i64*
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8787 = getelementptr inbounds %struct.GPR, %struct.GPR* %8786, i32 0, i32 5
  %8788 = getelementptr inbounds %struct.Reg, %struct.Reg* %8787, i32 0, i32 0
  %RCX.i2058 = bitcast %union.anon* %8788 to i64*
  %8789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8790 = getelementptr inbounds %struct.GPR, %struct.GPR* %8789, i32 0, i32 15
  %8791 = getelementptr inbounds %struct.Reg, %struct.Reg* %8790, i32 0, i32 0
  %RBP.i2059 = bitcast %union.anon* %8791 to i64*
  %8792 = load i64, i64* %RBP.i2059
  %8793 = load i64, i64* %RCX.i2058
  %8794 = add i64 %8792, -1040
  %8795 = add i64 %8794, %8793
  %8796 = load i64, i64* %PC.i2057
  %8797 = add i64 %8796, 8
  store i64 %8797, i64* %PC.i2057
  %8798 = inttoptr i64 %8795 to i8*
  %8799 = load i8, i8* %8798
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8800, align 1
  %8801 = zext i8 %8799 to i32
  %8802 = call i32 @llvm.ctpop.i32(i32 %8801)
  %8803 = trunc i32 %8802 to i8
  %8804 = and i8 %8803, 1
  %8805 = xor i8 %8804, 1
  %8806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8805, i8* %8806, align 1
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8807, align 1
  %8808 = icmp eq i8 %8799, 0
  %8809 = zext i1 %8808 to i8
  %8810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8809, i8* %8810, align 1
  %8811 = lshr i8 %8799, 7
  %8812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8811, i8* %8812, align 1
  %8813 = lshr i8 %8799, 7
  %8814 = xor i8 %8811, %8813
  %8815 = add i8 %8814, %8813
  %8816 = icmp eq i8 %8815, 2
  %8817 = zext i1 %8816 to i8
  %8818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8817, i8* %8818, align 1
  store %struct.Memory* %loadMem_475f59, %struct.Memory** %MEMORY
  %loadMem_475f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8820 = getelementptr inbounds %struct.GPR, %struct.GPR* %8819, i32 0, i32 33
  %8821 = getelementptr inbounds %struct.Reg, %struct.Reg* %8820, i32 0, i32 0
  %PC.i2056 = bitcast %union.anon* %8821 to i64*
  %8822 = load i64, i64* %PC.i2056
  %8823 = add i64 %8822, 115
  %8824 = load i64, i64* %PC.i2056
  %8825 = add i64 %8824, 6
  %8826 = load i64, i64* %PC.i2056
  %8827 = add i64 %8826, 6
  store i64 %8827, i64* %PC.i2056
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8829 = load i8, i8* %8828, align 1
  store i8 %8829, i8* %BRANCH_TAKEN, align 1
  %8830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8831 = icmp ne i8 %8829, 0
  %8832 = select i1 %8831, i64 %8823, i64 %8825
  store i64 %8832, i64* %8830, align 8
  store %struct.Memory* %loadMem_475f61, %struct.Memory** %MEMORY
  %loadBr_475f61 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475f61 = icmp eq i8 %loadBr_475f61, 1
  br i1 %cmpBr_475f61, label %block_.L_475fd4, label %block_475f67

block_475f67:                                     ; preds = %block_475f4c
  %loadMem_475f67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8834 = getelementptr inbounds %struct.GPR, %struct.GPR* %8833, i32 0, i32 33
  %8835 = getelementptr inbounds %struct.Reg, %struct.Reg* %8834, i32 0, i32 0
  %PC.i2053 = bitcast %union.anon* %8835 to i64*
  %8836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8837 = getelementptr inbounds %struct.GPR, %struct.GPR* %8836, i32 0, i32 1
  %8838 = getelementptr inbounds %struct.Reg, %struct.Reg* %8837, i32 0, i32 0
  %RAX.i2054 = bitcast %union.anon* %8838 to i64*
  %8839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8840 = getelementptr inbounds %struct.GPR, %struct.GPR* %8839, i32 0, i32 15
  %8841 = getelementptr inbounds %struct.Reg, %struct.Reg* %8840, i32 0, i32 0
  %RBP.i2055 = bitcast %union.anon* %8841 to i64*
  %8842 = load i64, i64* %RBP.i2055
  %8843 = sub i64 %8842, 32
  %8844 = load i64, i64* %PC.i2053
  %8845 = add i64 %8844, 3
  store i64 %8845, i64* %PC.i2053
  %8846 = inttoptr i64 %8843 to i32*
  %8847 = load i32, i32* %8846
  %8848 = zext i32 %8847 to i64
  store i64 %8848, i64* %RAX.i2054, align 8
  store %struct.Memory* %loadMem_475f67, %struct.Memory** %MEMORY
  %loadMem_475f6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8850 = getelementptr inbounds %struct.GPR, %struct.GPR* %8849, i32 0, i32 33
  %8851 = getelementptr inbounds %struct.Reg, %struct.Reg* %8850, i32 0, i32 0
  %PC.i2050 = bitcast %union.anon* %8851 to i64*
  %8852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8853 = getelementptr inbounds %struct.GPR, %struct.GPR* %8852, i32 0, i32 1
  %8854 = getelementptr inbounds %struct.Reg, %struct.Reg* %8853, i32 0, i32 0
  %RAX.i2051 = bitcast %union.anon* %8854 to i64*
  %8855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8856 = getelementptr inbounds %struct.GPR, %struct.GPR* %8855, i32 0, i32 15
  %8857 = getelementptr inbounds %struct.Reg, %struct.Reg* %8856, i32 0, i32 0
  %RBP.i2052 = bitcast %union.anon* %8857 to i64*
  %8858 = load i64, i64* %RAX.i2051
  %8859 = load i64, i64* %RBP.i2052
  %8860 = sub i64 %8859, 1080
  %8861 = load i64, i64* %PC.i2050
  %8862 = add i64 %8861, 6
  store i64 %8862, i64* %PC.i2050
  %8863 = trunc i64 %8858 to i32
  %8864 = inttoptr i64 %8860 to i32*
  %8865 = load i32, i32* %8864
  %8866 = sub i32 %8863, %8865
  %8867 = zext i32 %8866 to i64
  store i64 %8867, i64* %RAX.i2051, align 8
  %8868 = icmp ult i32 %8863, %8865
  %8869 = zext i1 %8868 to i8
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8869, i8* %8870, align 1
  %8871 = and i32 %8866, 255
  %8872 = call i32 @llvm.ctpop.i32(i32 %8871)
  %8873 = trunc i32 %8872 to i8
  %8874 = and i8 %8873, 1
  %8875 = xor i8 %8874, 1
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8875, i8* %8876, align 1
  %8877 = xor i32 %8865, %8863
  %8878 = xor i32 %8877, %8866
  %8879 = lshr i32 %8878, 4
  %8880 = trunc i32 %8879 to i8
  %8881 = and i8 %8880, 1
  %8882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8881, i8* %8882, align 1
  %8883 = icmp eq i32 %8866, 0
  %8884 = zext i1 %8883 to i8
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8884, i8* %8885, align 1
  %8886 = lshr i32 %8866, 31
  %8887 = trunc i32 %8886 to i8
  %8888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8887, i8* %8888, align 1
  %8889 = lshr i32 %8863, 31
  %8890 = lshr i32 %8865, 31
  %8891 = xor i32 %8890, %8889
  %8892 = xor i32 %8886, %8889
  %8893 = add i32 %8892, %8891
  %8894 = icmp eq i32 %8893, 2
  %8895 = zext i1 %8894 to i8
  %8896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8895, i8* %8896, align 1
  store %struct.Memory* %loadMem_475f6a, %struct.Memory** %MEMORY
  %loadMem_475f70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8898 = getelementptr inbounds %struct.GPR, %struct.GPR* %8897, i32 0, i32 33
  %8899 = getelementptr inbounds %struct.Reg, %struct.Reg* %8898, i32 0, i32 0
  %PC.i2047 = bitcast %union.anon* %8899 to i64*
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8901 = getelementptr inbounds %struct.GPR, %struct.GPR* %8900, i32 0, i32 1
  %8902 = getelementptr inbounds %struct.Reg, %struct.Reg* %8901, i32 0, i32 0
  %EAX.i2048 = bitcast %union.anon* %8902 to i32*
  %8903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8904 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8903, i64 0, i64 0
  %YMM0.i2049 = bitcast %union.VectorReg* %8904 to %"class.std::bitset"*
  %8905 = bitcast %"class.std::bitset"* %YMM0.i2049 to i8*
  %8906 = load i32, i32* %EAX.i2048
  %8907 = zext i32 %8906 to i64
  %8908 = load i64, i64* %PC.i2047
  %8909 = add i64 %8908, 4
  store i64 %8909, i64* %PC.i2047
  %8910 = bitcast i8* %8905 to <2 x i32>*
  %8911 = load <2 x i32>, <2 x i32>* %8910, align 1
  %8912 = getelementptr inbounds i8, i8* %8905, i64 8
  %8913 = bitcast i8* %8912 to <2 x i32>*
  %8914 = load <2 x i32>, <2 x i32>* %8913, align 1
  %8915 = sitofp i32 %8906 to float
  %8916 = bitcast i8* %8905 to float*
  store float %8915, float* %8916, align 1
  %8917 = extractelement <2 x i32> %8911, i32 1
  %8918 = getelementptr inbounds i8, i8* %8905, i64 4
  %8919 = bitcast i8* %8918 to i32*
  store i32 %8917, i32* %8919, align 1
  %8920 = extractelement <2 x i32> %8914, i32 0
  %8921 = bitcast i8* %8912 to i32*
  store i32 %8920, i32* %8921, align 1
  %8922 = extractelement <2 x i32> %8914, i32 1
  %8923 = getelementptr inbounds i8, i8* %8905, i64 12
  %8924 = bitcast i8* %8923 to i32*
  store i32 %8922, i32* %8924, align 1
  store %struct.Memory* %loadMem_475f70, %struct.Memory** %MEMORY
  %loadMem_475f74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8926 = getelementptr inbounds %struct.GPR, %struct.GPR* %8925, i32 0, i32 33
  %8927 = getelementptr inbounds %struct.Reg, %struct.Reg* %8926, i32 0, i32 0
  %PC.i2044 = bitcast %union.anon* %8927 to i64*
  %8928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8929 = getelementptr inbounds %struct.GPR, %struct.GPR* %8928, i32 0, i32 1
  %8930 = getelementptr inbounds %struct.Reg, %struct.Reg* %8929, i32 0, i32 0
  %RAX.i2045 = bitcast %union.anon* %8930 to i64*
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8932 = getelementptr inbounds %struct.GPR, %struct.GPR* %8931, i32 0, i32 15
  %8933 = getelementptr inbounds %struct.Reg, %struct.Reg* %8932, i32 0, i32 0
  %RBP.i2046 = bitcast %union.anon* %8933 to i64*
  %8934 = load i64, i64* %RBP.i2046
  %8935 = sub i64 %8934, 28
  %8936 = load i64, i64* %PC.i2044
  %8937 = add i64 %8936, 3
  store i64 %8937, i64* %PC.i2044
  %8938 = inttoptr i64 %8935 to i32*
  %8939 = load i32, i32* %8938
  %8940 = zext i32 %8939 to i64
  store i64 %8940, i64* %RAX.i2045, align 8
  store %struct.Memory* %loadMem_475f74, %struct.Memory** %MEMORY
  %loadMem_475f77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8942 = getelementptr inbounds %struct.GPR, %struct.GPR* %8941, i32 0, i32 33
  %8943 = getelementptr inbounds %struct.Reg, %struct.Reg* %8942, i32 0, i32 0
  %PC.i2041 = bitcast %union.anon* %8943 to i64*
  %8944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8945 = getelementptr inbounds %struct.GPR, %struct.GPR* %8944, i32 0, i32 1
  %8946 = getelementptr inbounds %struct.Reg, %struct.Reg* %8945, i32 0, i32 0
  %RAX.i2042 = bitcast %union.anon* %8946 to i64*
  %8947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8948 = getelementptr inbounds %struct.GPR, %struct.GPR* %8947, i32 0, i32 15
  %8949 = getelementptr inbounds %struct.Reg, %struct.Reg* %8948, i32 0, i32 0
  %RBP.i2043 = bitcast %union.anon* %8949 to i64*
  %8950 = load i64, i64* %RAX.i2042
  %8951 = load i64, i64* %RBP.i2043
  %8952 = sub i64 %8951, 1076
  %8953 = load i64, i64* %PC.i2041
  %8954 = add i64 %8953, 6
  store i64 %8954, i64* %PC.i2041
  %8955 = trunc i64 %8950 to i32
  %8956 = inttoptr i64 %8952 to i32*
  %8957 = load i32, i32* %8956
  %8958 = sub i32 %8955, %8957
  %8959 = zext i32 %8958 to i64
  store i64 %8959, i64* %RAX.i2042, align 8
  %8960 = icmp ult i32 %8955, %8957
  %8961 = zext i1 %8960 to i8
  %8962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8961, i8* %8962, align 1
  %8963 = and i32 %8958, 255
  %8964 = call i32 @llvm.ctpop.i32(i32 %8963)
  %8965 = trunc i32 %8964 to i8
  %8966 = and i8 %8965, 1
  %8967 = xor i8 %8966, 1
  %8968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8967, i8* %8968, align 1
  %8969 = xor i32 %8957, %8955
  %8970 = xor i32 %8969, %8958
  %8971 = lshr i32 %8970, 4
  %8972 = trunc i32 %8971 to i8
  %8973 = and i8 %8972, 1
  %8974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8973, i8* %8974, align 1
  %8975 = icmp eq i32 %8958, 0
  %8976 = zext i1 %8975 to i8
  %8977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8976, i8* %8977, align 1
  %8978 = lshr i32 %8958, 31
  %8979 = trunc i32 %8978 to i8
  %8980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8979, i8* %8980, align 1
  %8981 = lshr i32 %8955, 31
  %8982 = lshr i32 %8957, 31
  %8983 = xor i32 %8982, %8981
  %8984 = xor i32 %8978, %8981
  %8985 = add i32 %8984, %8983
  %8986 = icmp eq i32 %8985, 2
  %8987 = zext i1 %8986 to i8
  %8988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8987, i8* %8988, align 1
  store %struct.Memory* %loadMem_475f77, %struct.Memory** %MEMORY
  %loadMem_475f7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8990 = getelementptr inbounds %struct.GPR, %struct.GPR* %8989, i32 0, i32 33
  %8991 = getelementptr inbounds %struct.Reg, %struct.Reg* %8990, i32 0, i32 0
  %PC.i2038 = bitcast %union.anon* %8991 to i64*
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8993 = getelementptr inbounds %struct.GPR, %struct.GPR* %8992, i32 0, i32 1
  %8994 = getelementptr inbounds %struct.Reg, %struct.Reg* %8993, i32 0, i32 0
  %EAX.i2039 = bitcast %union.anon* %8994 to i32*
  %8995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8996 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8995, i64 0, i64 1
  %YMM1.i2040 = bitcast %union.VectorReg* %8996 to %"class.std::bitset"*
  %8997 = bitcast %"class.std::bitset"* %YMM1.i2040 to i8*
  %8998 = load i32, i32* %EAX.i2039
  %8999 = zext i32 %8998 to i64
  %9000 = load i64, i64* %PC.i2038
  %9001 = add i64 %9000, 4
  store i64 %9001, i64* %PC.i2038
  %9002 = bitcast i8* %8997 to <2 x i32>*
  %9003 = load <2 x i32>, <2 x i32>* %9002, align 1
  %9004 = getelementptr inbounds i8, i8* %8997, i64 8
  %9005 = bitcast i8* %9004 to <2 x i32>*
  %9006 = load <2 x i32>, <2 x i32>* %9005, align 1
  %9007 = sitofp i32 %8998 to float
  %9008 = bitcast i8* %8997 to float*
  store float %9007, float* %9008, align 1
  %9009 = extractelement <2 x i32> %9003, i32 1
  %9010 = getelementptr inbounds i8, i8* %8997, i64 4
  %9011 = bitcast i8* %9010 to i32*
  store i32 %9009, i32* %9011, align 1
  %9012 = extractelement <2 x i32> %9006, i32 0
  %9013 = bitcast i8* %9004 to i32*
  store i32 %9012, i32* %9013, align 1
  %9014 = extractelement <2 x i32> %9006, i32 1
  %9015 = getelementptr inbounds i8, i8* %8997, i64 12
  %9016 = bitcast i8* %9015 to i32*
  store i32 %9014, i32* %9016, align 1
  store %struct.Memory* %loadMem_475f7d, %struct.Memory** %MEMORY
  %loadMem_475f81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9018 = getelementptr inbounds %struct.GPR, %struct.GPR* %9017, i32 0, i32 33
  %9019 = getelementptr inbounds %struct.Reg, %struct.Reg* %9018, i32 0, i32 0
  %PC.i2035 = bitcast %union.anon* %9019 to i64*
  %9020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9021 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9020, i64 0, i64 0
  %YMM0.i2036 = bitcast %union.VectorReg* %9021 to %"class.std::bitset"*
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9023 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9022, i64 0, i64 1
  %XMM1.i2037 = bitcast %union.VectorReg* %9023 to %union.vec128_t*
  %9024 = bitcast %"class.std::bitset"* %YMM0.i2036 to i8*
  %9025 = bitcast %"class.std::bitset"* %YMM0.i2036 to i8*
  %9026 = bitcast %union.vec128_t* %XMM1.i2037 to i8*
  %9027 = load i64, i64* %PC.i2035
  %9028 = add i64 %9027, 4
  store i64 %9028, i64* %PC.i2035
  %9029 = bitcast i8* %9025 to <2 x float>*
  %9030 = load <2 x float>, <2 x float>* %9029, align 1
  %9031 = getelementptr inbounds i8, i8* %9025, i64 8
  %9032 = bitcast i8* %9031 to <2 x i32>*
  %9033 = load <2 x i32>, <2 x i32>* %9032, align 1
  %9034 = bitcast i8* %9026 to <2 x float>*
  %9035 = load <2 x float>, <2 x float>* %9034, align 1
  %9036 = extractelement <2 x float> %9030, i32 0
  %9037 = extractelement <2 x float> %9035, i32 0
  %9038 = fdiv float %9036, %9037
  %9039 = bitcast i8* %9024 to float*
  store float %9038, float* %9039, align 1
  %9040 = bitcast <2 x float> %9030 to <2 x i32>
  %9041 = extractelement <2 x i32> %9040, i32 1
  %9042 = getelementptr inbounds i8, i8* %9024, i64 4
  %9043 = bitcast i8* %9042 to i32*
  store i32 %9041, i32* %9043, align 1
  %9044 = extractelement <2 x i32> %9033, i32 0
  %9045 = getelementptr inbounds i8, i8* %9024, i64 8
  %9046 = bitcast i8* %9045 to i32*
  store i32 %9044, i32* %9046, align 1
  %9047 = extractelement <2 x i32> %9033, i32 1
  %9048 = getelementptr inbounds i8, i8* %9024, i64 12
  %9049 = bitcast i8* %9048 to i32*
  store i32 %9047, i32* %9049, align 1
  store %struct.Memory* %loadMem_475f81, %struct.Memory** %MEMORY
  %loadMem_475f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9051 = getelementptr inbounds %struct.GPR, %struct.GPR* %9050, i32 0, i32 33
  %9052 = getelementptr inbounds %struct.Reg, %struct.Reg* %9051, i32 0, i32 0
  %PC.i2032 = bitcast %union.anon* %9052 to i64*
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9054 = getelementptr inbounds %struct.GPR, %struct.GPR* %9053, i32 0, i32 15
  %9055 = getelementptr inbounds %struct.Reg, %struct.Reg* %9054, i32 0, i32 0
  %RBP.i2033 = bitcast %union.anon* %9055 to i64*
  %9056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9057 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9056, i64 0, i64 0
  %XMM0.i2034 = bitcast %union.VectorReg* %9057 to %union.vec128_t*
  %9058 = load i64, i64* %RBP.i2033
  %9059 = sub i64 %9058, 1084
  %9060 = bitcast %union.vec128_t* %XMM0.i2034 to i8*
  %9061 = load i64, i64* %PC.i2032
  %9062 = add i64 %9061, 8
  store i64 %9062, i64* %PC.i2032
  %9063 = bitcast i8* %9060 to <2 x float>*
  %9064 = load <2 x float>, <2 x float>* %9063, align 1
  %9065 = extractelement <2 x float> %9064, i32 0
  %9066 = inttoptr i64 %9059 to float*
  store float %9065, float* %9066
  store %struct.Memory* %loadMem_475f85, %struct.Memory** %MEMORY
  %loadMem_475f8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9068 = getelementptr inbounds %struct.GPR, %struct.GPR* %9067, i32 0, i32 33
  %9069 = getelementptr inbounds %struct.Reg, %struct.Reg* %9068, i32 0, i32 0
  %PC.i2030 = bitcast %union.anon* %9069 to i64*
  %9070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9071 = getelementptr inbounds %struct.GPR, %struct.GPR* %9070, i32 0, i32 15
  %9072 = getelementptr inbounds %struct.Reg, %struct.Reg* %9071, i32 0, i32 0
  %RBP.i2031 = bitcast %union.anon* %9072 to i64*
  %9073 = load i64, i64* %RBP.i2031
  %9074 = sub i64 %9073, 1068
  %9075 = load i64, i64* %PC.i2030
  %9076 = add i64 %9075, 7
  store i64 %9076, i64* %PC.i2030
  %9077 = inttoptr i64 %9074 to i32*
  %9078 = load i32, i32* %9077
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9079, align 1
  %9080 = and i32 %9078, 255
  %9081 = call i32 @llvm.ctpop.i32(i32 %9080)
  %9082 = trunc i32 %9081 to i8
  %9083 = and i8 %9082, 1
  %9084 = xor i8 %9083, 1
  %9085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9084, i8* %9085, align 1
  %9086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9086, align 1
  %9087 = icmp eq i32 %9078, 0
  %9088 = zext i1 %9087 to i8
  %9089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9088, i8* %9089, align 1
  %9090 = lshr i32 %9078, 31
  %9091 = trunc i32 %9090 to i8
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9091, i8* %9092, align 1
  %9093 = lshr i32 %9078, 31
  %9094 = xor i32 %9090, %9093
  %9095 = add i32 %9094, %9093
  %9096 = icmp eq i32 %9095, 2
  %9097 = zext i1 %9096 to i8
  %9098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9097, i8* %9098, align 1
  store %struct.Memory* %loadMem_475f8d, %struct.Memory** %MEMORY
  %loadMem_475f94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9100 = getelementptr inbounds %struct.GPR, %struct.GPR* %9099, i32 0, i32 33
  %9101 = getelementptr inbounds %struct.Reg, %struct.Reg* %9100, i32 0, i32 0
  %PC.i2029 = bitcast %union.anon* %9101 to i64*
  %9102 = load i64, i64* %PC.i2029
  %9103 = add i64 %9102, 27
  %9104 = load i64, i64* %PC.i2029
  %9105 = add i64 %9104, 6
  %9106 = load i64, i64* %PC.i2029
  %9107 = add i64 %9106, 6
  store i64 %9107, i64* %PC.i2029
  %9108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9109 = load i8, i8* %9108, align 1
  store i8 %9109, i8* %BRANCH_TAKEN, align 1
  %9110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9111 = icmp ne i8 %9109, 0
  %9112 = select i1 %9111, i64 %9103, i64 %9105
  store i64 %9112, i64* %9110, align 8
  store %struct.Memory* %loadMem_475f94, %struct.Memory** %MEMORY
  %loadBr_475f94 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475f94 = icmp eq i8 %loadBr_475f94, 1
  br i1 %cmpBr_475f94, label %block_.L_475faf, label %block_475f9a

block_475f9a:                                     ; preds = %block_475f67
  %loadMem_475f9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9114 = getelementptr inbounds %struct.GPR, %struct.GPR* %9113, i32 0, i32 33
  %9115 = getelementptr inbounds %struct.Reg, %struct.Reg* %9114, i32 0, i32 0
  %PC.i2026 = bitcast %union.anon* %9115 to i64*
  %9116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9117 = getelementptr inbounds %struct.GPR, %struct.GPR* %9116, i32 0, i32 15
  %9118 = getelementptr inbounds %struct.Reg, %struct.Reg* %9117, i32 0, i32 0
  %RBP.i2027 = bitcast %union.anon* %9118 to i64*
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9120 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9119, i64 0, i64 0
  %YMM0.i2028 = bitcast %union.VectorReg* %9120 to %"class.std::bitset"*
  %9121 = bitcast %"class.std::bitset"* %YMM0.i2028 to i8*
  %9122 = load i64, i64* %RBP.i2027
  %9123 = sub i64 %9122, 1084
  %9124 = load i64, i64* %PC.i2026
  %9125 = add i64 %9124, 8
  store i64 %9125, i64* %PC.i2026
  %9126 = inttoptr i64 %9123 to float*
  %9127 = load float, float* %9126
  %9128 = bitcast i8* %9121 to float*
  store float %9127, float* %9128, align 1
  %9129 = getelementptr inbounds i8, i8* %9121, i64 4
  %9130 = bitcast i8* %9129 to float*
  store float 0.000000e+00, float* %9130, align 1
  %9131 = getelementptr inbounds i8, i8* %9121, i64 8
  %9132 = bitcast i8* %9131 to float*
  store float 0.000000e+00, float* %9132, align 1
  %9133 = getelementptr inbounds i8, i8* %9121, i64 12
  %9134 = bitcast i8* %9133 to float*
  store float 0.000000e+00, float* %9134, align 1
  store %struct.Memory* %loadMem_475f9a, %struct.Memory** %MEMORY
  %loadMem_475fa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9136 = getelementptr inbounds %struct.GPR, %struct.GPR* %9135, i32 0, i32 33
  %9137 = getelementptr inbounds %struct.Reg, %struct.Reg* %9136, i32 0, i32 0
  %PC.i2020 = bitcast %union.anon* %9137 to i64*
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9139 = getelementptr inbounds %struct.GPR, %struct.GPR* %9138, i32 0, i32 15
  %9140 = getelementptr inbounds %struct.Reg, %struct.Reg* %9139, i32 0, i32 0
  %RBP.i2021 = bitcast %union.anon* %9140 to i64*
  %9141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9142 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9141, i64 0, i64 0
  %XMM0.i2022 = bitcast %union.VectorReg* %9142 to %union.vec128_t*
  %9143 = bitcast %union.vec128_t* %XMM0.i2022 to i8*
  %9144 = load i64, i64* %RBP.i2021
  %9145 = sub i64 %9144, 1072
  %9146 = load i64, i64* %PC.i2020
  %9147 = add i64 %9146, 7
  store i64 %9147, i64* %PC.i2020
  %9148 = bitcast i8* %9143 to <2 x float>*
  %9149 = load <2 x float>, <2 x float>* %9148, align 1
  %9150 = extractelement <2 x float> %9149, i32 0
  %9151 = inttoptr i64 %9145 to float*
  %9152 = load float, float* %9151
  %9153 = fcmp uno float %9150, %9152
  br i1 %9153, label %9154, label %9166

; <label>:9154:                                   ; preds = %block_475f9a
  %9155 = fadd float %9150, %9152
  %9156 = bitcast float %9155 to i32
  %9157 = and i32 %9156, 2143289344
  %9158 = icmp eq i32 %9157, 2139095040
  %9159 = and i32 %9156, 4194303
  %9160 = icmp ne i32 %9159, 0
  %9161 = and i1 %9158, %9160
  br i1 %9161, label %9162, label %9172

; <label>:9162:                                   ; preds = %9154
  %9163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9164 = load i64, i64* %9163, align 8
  %9165 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9164, %struct.Memory* %loadMem_475fa2)
  br label %routine_ucomiss_MINUS0x430__rbp____xmm0.exit

; <label>:9166:                                   ; preds = %block_475f9a
  %9167 = fcmp ogt float %9150, %9152
  br i1 %9167, label %9172, label %9168

; <label>:9168:                                   ; preds = %9166
  %9169 = fcmp olt float %9150, %9152
  br i1 %9169, label %9172, label %9170

; <label>:9170:                                   ; preds = %9168
  %9171 = fcmp oeq float %9150, %9152
  br i1 %9171, label %9172, label %9179

; <label>:9172:                                   ; preds = %9170, %9168, %9166, %9154
  %9173 = phi i8 [ 0, %9166 ], [ 0, %9168 ], [ 1, %9170 ], [ 1, %9154 ]
  %9174 = phi i8 [ 0, %9166 ], [ 0, %9168 ], [ 0, %9170 ], [ 1, %9154 ]
  %9175 = phi i8 [ 0, %9166 ], [ 1, %9168 ], [ 0, %9170 ], [ 1, %9154 ]
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9173, i8* %9176, align 1
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9174, i8* %9177, align 1
  %9178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9175, i8* %9178, align 1
  br label %9179

; <label>:9179:                                   ; preds = %9172, %9170
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9180, align 1
  %9181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9181, align 1
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9182, align 1
  br label %routine_ucomiss_MINUS0x430__rbp____xmm0.exit

routine_ucomiss_MINUS0x430__rbp____xmm0.exit:     ; preds = %9162, %9179
  %9183 = phi %struct.Memory* [ %9165, %9162 ], [ %loadMem_475fa2, %9179 ]
  store %struct.Memory* %9183, %struct.Memory** %MEMORY
  %loadMem_475fa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9185 = getelementptr inbounds %struct.GPR, %struct.GPR* %9184, i32 0, i32 33
  %9186 = getelementptr inbounds %struct.Reg, %struct.Reg* %9185, i32 0, i32 0
  %PC.i2019 = bitcast %union.anon* %9186 to i64*
  %9187 = load i64, i64* %PC.i2019
  %9188 = add i64 %9187, 38
  %9189 = load i64, i64* %PC.i2019
  %9190 = add i64 %9189, 6
  %9191 = load i64, i64* %PC.i2019
  %9192 = add i64 %9191, 6
  store i64 %9192, i64* %PC.i2019
  %9193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9194 = load i8, i8* %9193, align 1
  %9195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9196 = load i8, i8* %9195, align 1
  %9197 = or i8 %9196, %9194
  %9198 = icmp ne i8 %9197, 0
  %9199 = zext i1 %9198 to i8
  store i8 %9199, i8* %BRANCH_TAKEN, align 1
  %9200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9201 = select i1 %9198, i64 %9188, i64 %9190
  store i64 %9201, i64* %9200, align 8
  store %struct.Memory* %loadMem_475fa9, %struct.Memory** %MEMORY
  %loadBr_475fa9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_475fa9 = icmp eq i8 %loadBr_475fa9, 1
  br i1 %cmpBr_475fa9, label %block_.L_475fcf, label %block_.L_475faf

block_.L_475faf:                                  ; preds = %routine_ucomiss_MINUS0x430__rbp____xmm0.exit, %block_475f67
  %loadMem_475faf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9203 = getelementptr inbounds %struct.GPR, %struct.GPR* %9202, i32 0, i32 33
  %9204 = getelementptr inbounds %struct.Reg, %struct.Reg* %9203, i32 0, i32 0
  %PC.i2016 = bitcast %union.anon* %9204 to i64*
  %9205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9206 = getelementptr inbounds %struct.GPR, %struct.GPR* %9205, i32 0, i32 1
  %9207 = getelementptr inbounds %struct.Reg, %struct.Reg* %9206, i32 0, i32 0
  %RAX.i2017 = bitcast %union.anon* %9207 to i64*
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9209 = getelementptr inbounds %struct.GPR, %struct.GPR* %9208, i32 0, i32 15
  %9210 = getelementptr inbounds %struct.Reg, %struct.Reg* %9209, i32 0, i32 0
  %RBP.i2018 = bitcast %union.anon* %9210 to i64*
  %9211 = load i64, i64* %RBP.i2018
  %9212 = sub i64 %9211, 28
  %9213 = load i64, i64* %PC.i2016
  %9214 = add i64 %9213, 4
  store i64 %9214, i64* %PC.i2016
  %9215 = inttoptr i64 %9212 to i32*
  %9216 = load i32, i32* %9215
  %9217 = sext i32 %9216 to i64
  %9218 = mul i64 %9217, 20
  %9219 = trunc i64 %9218 to i32
  %9220 = and i64 %9218, 4294967295
  store i64 %9220, i64* %RAX.i2017, align 8
  %9221 = shl i64 %9218, 32
  %9222 = ashr exact i64 %9221, 32
  %9223 = icmp ne i64 %9222, %9218
  %9224 = zext i1 %9223 to i8
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9224, i8* %9225, align 1
  %9226 = and i32 %9219, 255
  %9227 = call i32 @llvm.ctpop.i32(i32 %9226)
  %9228 = trunc i32 %9227 to i8
  %9229 = and i8 %9228, 1
  %9230 = xor i8 %9229, 1
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9230, i8* %9231, align 1
  %9232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9232, align 1
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9233, align 1
  %9234 = lshr i32 %9219, 31
  %9235 = trunc i32 %9234 to i8
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9235, i8* %9236, align 1
  %9237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9224, i8* %9237, align 1
  store %struct.Memory* %loadMem_475faf, %struct.Memory** %MEMORY
  %loadMem_475fb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9239 = getelementptr inbounds %struct.GPR, %struct.GPR* %9238, i32 0, i32 33
  %9240 = getelementptr inbounds %struct.Reg, %struct.Reg* %9239, i32 0, i32 0
  %PC.i2014 = bitcast %union.anon* %9240 to i64*
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9242 = getelementptr inbounds %struct.GPR, %struct.GPR* %9241, i32 0, i32 1
  %9243 = getelementptr inbounds %struct.Reg, %struct.Reg* %9242, i32 0, i32 0
  %RAX.i2015 = bitcast %union.anon* %9243 to i64*
  %9244 = load i64, i64* %RAX.i2015
  %9245 = load i64, i64* %PC.i2014
  %9246 = add i64 %9245, 3
  store i64 %9246, i64* %PC.i2014
  %9247 = trunc i64 %9244 to i32
  %9248 = add i32 21, %9247
  %9249 = zext i32 %9248 to i64
  store i64 %9249, i64* %RAX.i2015, align 8
  %9250 = icmp ult i32 %9248, %9247
  %9251 = icmp ult i32 %9248, 21
  %9252 = or i1 %9250, %9251
  %9253 = zext i1 %9252 to i8
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9253, i8* %9254, align 1
  %9255 = and i32 %9248, 255
  %9256 = call i32 @llvm.ctpop.i32(i32 %9255)
  %9257 = trunc i32 %9256 to i8
  %9258 = and i8 %9257, 1
  %9259 = xor i8 %9258, 1
  %9260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9259, i8* %9260, align 1
  %9261 = xor i64 21, %9244
  %9262 = trunc i64 %9261 to i32
  %9263 = xor i32 %9262, %9248
  %9264 = lshr i32 %9263, 4
  %9265 = trunc i32 %9264 to i8
  %9266 = and i8 %9265, 1
  %9267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9266, i8* %9267, align 1
  %9268 = icmp eq i32 %9248, 0
  %9269 = zext i1 %9268 to i8
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9269, i8* %9270, align 1
  %9271 = lshr i32 %9248, 31
  %9272 = trunc i32 %9271 to i8
  %9273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9272, i8* %9273, align 1
  %9274 = lshr i32 %9247, 31
  %9275 = xor i32 %9271, %9274
  %9276 = add i32 %9275, %9271
  %9277 = icmp eq i32 %9276, 2
  %9278 = zext i1 %9277 to i8
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9278, i8* %9279, align 1
  store %struct.Memory* %loadMem_475fb3, %struct.Memory** %MEMORY
  %loadMem_475fb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9281 = getelementptr inbounds %struct.GPR, %struct.GPR* %9280, i32 0, i32 33
  %9282 = getelementptr inbounds %struct.Reg, %struct.Reg* %9281, i32 0, i32 0
  %PC.i2011 = bitcast %union.anon* %9282 to i64*
  %9283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9284 = getelementptr inbounds %struct.GPR, %struct.GPR* %9283, i32 0, i32 1
  %9285 = getelementptr inbounds %struct.Reg, %struct.Reg* %9284, i32 0, i32 0
  %RAX.i2012 = bitcast %union.anon* %9285 to i64*
  %9286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9287 = getelementptr inbounds %struct.GPR, %struct.GPR* %9286, i32 0, i32 15
  %9288 = getelementptr inbounds %struct.Reg, %struct.Reg* %9287, i32 0, i32 0
  %RBP.i2013 = bitcast %union.anon* %9288 to i64*
  %9289 = load i64, i64* %RAX.i2012
  %9290 = load i64, i64* %RBP.i2013
  %9291 = sub i64 %9290, 32
  %9292 = load i64, i64* %PC.i2011
  %9293 = add i64 %9292, 3
  store i64 %9293, i64* %PC.i2011
  %9294 = trunc i64 %9289 to i32
  %9295 = inttoptr i64 %9291 to i32*
  %9296 = load i32, i32* %9295
  %9297 = add i32 %9296, %9294
  %9298 = zext i32 %9297 to i64
  store i64 %9298, i64* %RAX.i2012, align 8
  %9299 = icmp ult i32 %9297, %9294
  %9300 = icmp ult i32 %9297, %9296
  %9301 = or i1 %9299, %9300
  %9302 = zext i1 %9301 to i8
  %9303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9302, i8* %9303, align 1
  %9304 = and i32 %9297, 255
  %9305 = call i32 @llvm.ctpop.i32(i32 %9304)
  %9306 = trunc i32 %9305 to i8
  %9307 = and i8 %9306, 1
  %9308 = xor i8 %9307, 1
  %9309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9308, i8* %9309, align 1
  %9310 = xor i32 %9296, %9294
  %9311 = xor i32 %9310, %9297
  %9312 = lshr i32 %9311, 4
  %9313 = trunc i32 %9312 to i8
  %9314 = and i8 %9313, 1
  %9315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9314, i8* %9315, align 1
  %9316 = icmp eq i32 %9297, 0
  %9317 = zext i1 %9316 to i8
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9317, i8* %9318, align 1
  %9319 = lshr i32 %9297, 31
  %9320 = trunc i32 %9319 to i8
  %9321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9320, i8* %9321, align 1
  %9322 = lshr i32 %9294, 31
  %9323 = lshr i32 %9296, 31
  %9324 = xor i32 %9319, %9322
  %9325 = xor i32 %9319, %9323
  %9326 = add i32 %9324, %9325
  %9327 = icmp eq i32 %9326, 2
  %9328 = zext i1 %9327 to i8
  %9329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9328, i8* %9329, align 1
  store %struct.Memory* %loadMem_475fb6, %struct.Memory** %MEMORY
  %loadMem_475fb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9331 = getelementptr inbounds %struct.GPR, %struct.GPR* %9330, i32 0, i32 33
  %9332 = getelementptr inbounds %struct.Reg, %struct.Reg* %9331, i32 0, i32 0
  %PC.i2008 = bitcast %union.anon* %9332 to i64*
  %9333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9334 = getelementptr inbounds %struct.GPR, %struct.GPR* %9333, i32 0, i32 1
  %9335 = getelementptr inbounds %struct.Reg, %struct.Reg* %9334, i32 0, i32 0
  %EAX.i2009 = bitcast %union.anon* %9335 to i32*
  %9336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9337 = getelementptr inbounds %struct.GPR, %struct.GPR* %9336, i32 0, i32 15
  %9338 = getelementptr inbounds %struct.Reg, %struct.Reg* %9337, i32 0, i32 0
  %RBP.i2010 = bitcast %union.anon* %9338 to i64*
  %9339 = load i64, i64* %RBP.i2010
  %9340 = sub i64 %9339, 1068
  %9341 = load i32, i32* %EAX.i2009
  %9342 = zext i32 %9341 to i64
  %9343 = load i64, i64* %PC.i2008
  %9344 = add i64 %9343, 6
  store i64 %9344, i64* %PC.i2008
  %9345 = inttoptr i64 %9340 to i32*
  store i32 %9341, i32* %9345
  store %struct.Memory* %loadMem_475fb9, %struct.Memory** %MEMORY
  %loadMem_475fbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9347 = getelementptr inbounds %struct.GPR, %struct.GPR* %9346, i32 0, i32 33
  %9348 = getelementptr inbounds %struct.Reg, %struct.Reg* %9347, i32 0, i32 0
  %PC.i2005 = bitcast %union.anon* %9348 to i64*
  %9349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9350 = getelementptr inbounds %struct.GPR, %struct.GPR* %9349, i32 0, i32 15
  %9351 = getelementptr inbounds %struct.Reg, %struct.Reg* %9350, i32 0, i32 0
  %RBP.i2006 = bitcast %union.anon* %9351 to i64*
  %9352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9353 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9352, i64 0, i64 0
  %YMM0.i2007 = bitcast %union.VectorReg* %9353 to %"class.std::bitset"*
  %9354 = bitcast %"class.std::bitset"* %YMM0.i2007 to i8*
  %9355 = load i64, i64* %RBP.i2006
  %9356 = sub i64 %9355, 1084
  %9357 = load i64, i64* %PC.i2005
  %9358 = add i64 %9357, 8
  store i64 %9358, i64* %PC.i2005
  %9359 = inttoptr i64 %9356 to float*
  %9360 = load float, float* %9359
  %9361 = bitcast i8* %9354 to float*
  store float %9360, float* %9361, align 1
  %9362 = getelementptr inbounds i8, i8* %9354, i64 4
  %9363 = bitcast i8* %9362 to float*
  store float 0.000000e+00, float* %9363, align 1
  %9364 = getelementptr inbounds i8, i8* %9354, i64 8
  %9365 = bitcast i8* %9364 to float*
  store float 0.000000e+00, float* %9365, align 1
  %9366 = getelementptr inbounds i8, i8* %9354, i64 12
  %9367 = bitcast i8* %9366 to float*
  store float 0.000000e+00, float* %9367, align 1
  store %struct.Memory* %loadMem_475fbf, %struct.Memory** %MEMORY
  %loadMem_475fc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9369 = getelementptr inbounds %struct.GPR, %struct.GPR* %9368, i32 0, i32 33
  %9370 = getelementptr inbounds %struct.Reg, %struct.Reg* %9369, i32 0, i32 0
  %PC.i2002 = bitcast %union.anon* %9370 to i64*
  %9371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9372 = getelementptr inbounds %struct.GPR, %struct.GPR* %9371, i32 0, i32 15
  %9373 = getelementptr inbounds %struct.Reg, %struct.Reg* %9372, i32 0, i32 0
  %RBP.i2003 = bitcast %union.anon* %9373 to i64*
  %9374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9375 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9374, i64 0, i64 0
  %XMM0.i2004 = bitcast %union.VectorReg* %9375 to %union.vec128_t*
  %9376 = load i64, i64* %RBP.i2003
  %9377 = sub i64 %9376, 1072
  %9378 = bitcast %union.vec128_t* %XMM0.i2004 to i8*
  %9379 = load i64, i64* %PC.i2002
  %9380 = add i64 %9379, 8
  store i64 %9380, i64* %PC.i2002
  %9381 = bitcast i8* %9378 to <2 x float>*
  %9382 = load <2 x float>, <2 x float>* %9381, align 1
  %9383 = extractelement <2 x float> %9382, i32 0
  %9384 = inttoptr i64 %9377 to float*
  store float %9383, float* %9384
  store %struct.Memory* %loadMem_475fc7, %struct.Memory** %MEMORY
  br label %block_.L_475fcf

block_.L_475fcf:                                  ; preds = %block_.L_475faf, %routine_ucomiss_MINUS0x430__rbp____xmm0.exit
  %loadMem_475fcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9386 = getelementptr inbounds %struct.GPR, %struct.GPR* %9385, i32 0, i32 33
  %9387 = getelementptr inbounds %struct.Reg, %struct.Reg* %9386, i32 0, i32 0
  %PC.i2001 = bitcast %union.anon* %9387 to i64*
  %9388 = load i64, i64* %PC.i2001
  %9389 = add i64 %9388, 5
  %9390 = load i64, i64* %PC.i2001
  %9391 = add i64 %9390, 5
  store i64 %9391, i64* %PC.i2001
  %9392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9389, i64* %9392, align 8
  store %struct.Memory* %loadMem_475fcf, %struct.Memory** %MEMORY
  br label %block_.L_475fd4

block_.L_475fd4:                                  ; preds = %block_.L_475fcf, %block_475f4c
  %loadMem_475fd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9394 = getelementptr inbounds %struct.GPR, %struct.GPR* %9393, i32 0, i32 33
  %9395 = getelementptr inbounds %struct.Reg, %struct.Reg* %9394, i32 0, i32 0
  %PC.i2000 = bitcast %union.anon* %9395 to i64*
  %9396 = load i64, i64* %PC.i2000
  %9397 = add i64 %9396, 5
  %9398 = load i64, i64* %PC.i2000
  %9399 = add i64 %9398, 5
  store i64 %9399, i64* %PC.i2000
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9397, i64* %9400, align 8
  store %struct.Memory* %loadMem_475fd4, %struct.Memory** %MEMORY
  br label %block_.L_475fd9

block_.L_475fd9:                                  ; preds = %block_.L_475fd4
  %loadMem_475fd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 33
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %PC.i1997 = bitcast %union.anon* %9403 to i64*
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 1
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %RAX.i1998 = bitcast %union.anon* %9406 to i64*
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9408 = getelementptr inbounds %struct.GPR, %struct.GPR* %9407, i32 0, i32 15
  %9409 = getelementptr inbounds %struct.Reg, %struct.Reg* %9408, i32 0, i32 0
  %RBP.i1999 = bitcast %union.anon* %9409 to i64*
  %9410 = load i64, i64* %RBP.i1999
  %9411 = sub i64 %9410, 32
  %9412 = load i64, i64* %PC.i1997
  %9413 = add i64 %9412, 3
  store i64 %9413, i64* %PC.i1997
  %9414 = inttoptr i64 %9411 to i32*
  %9415 = load i32, i32* %9414
  %9416 = zext i32 %9415 to i64
  store i64 %9416, i64* %RAX.i1998, align 8
  store %struct.Memory* %loadMem_475fd9, %struct.Memory** %MEMORY
  %loadMem_475fdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9418 = getelementptr inbounds %struct.GPR, %struct.GPR* %9417, i32 0, i32 33
  %9419 = getelementptr inbounds %struct.Reg, %struct.Reg* %9418, i32 0, i32 0
  %PC.i1995 = bitcast %union.anon* %9419 to i64*
  %9420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9421 = getelementptr inbounds %struct.GPR, %struct.GPR* %9420, i32 0, i32 1
  %9422 = getelementptr inbounds %struct.Reg, %struct.Reg* %9421, i32 0, i32 0
  %RAX.i1996 = bitcast %union.anon* %9422 to i64*
  %9423 = load i64, i64* %RAX.i1996
  %9424 = load i64, i64* %PC.i1995
  %9425 = add i64 %9424, 3
  store i64 %9425, i64* %PC.i1995
  %9426 = trunc i64 %9423 to i32
  %9427 = add i32 -1, %9426
  %9428 = zext i32 %9427 to i64
  store i64 %9428, i64* %RAX.i1996, align 8
  %9429 = icmp ult i32 %9427, %9426
  %9430 = icmp ult i32 %9427, -1
  %9431 = or i1 %9429, %9430
  %9432 = zext i1 %9431 to i8
  %9433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9432, i8* %9433, align 1
  %9434 = and i32 %9427, 255
  %9435 = call i32 @llvm.ctpop.i32(i32 %9434)
  %9436 = trunc i32 %9435 to i8
  %9437 = and i8 %9436, 1
  %9438 = xor i8 %9437, 1
  %9439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9438, i8* %9439, align 1
  %9440 = xor i64 -1, %9423
  %9441 = trunc i64 %9440 to i32
  %9442 = xor i32 %9441, %9427
  %9443 = lshr i32 %9442, 4
  %9444 = trunc i32 %9443 to i8
  %9445 = and i8 %9444, 1
  %9446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9445, i8* %9446, align 1
  %9447 = icmp eq i32 %9427, 0
  %9448 = zext i1 %9447 to i8
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9448, i8* %9449, align 1
  %9450 = lshr i32 %9427, 31
  %9451 = trunc i32 %9450 to i8
  %9452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9451, i8* %9452, align 1
  %9453 = lshr i32 %9426, 31
  %9454 = xor i32 %9450, %9453
  %9455 = xor i32 %9450, 1
  %9456 = add i32 %9454, %9455
  %9457 = icmp eq i32 %9456, 2
  %9458 = zext i1 %9457 to i8
  %9459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9458, i8* %9459, align 1
  store %struct.Memory* %loadMem_475fdc, %struct.Memory** %MEMORY
  %loadMem_475fdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9461 = getelementptr inbounds %struct.GPR, %struct.GPR* %9460, i32 0, i32 33
  %9462 = getelementptr inbounds %struct.Reg, %struct.Reg* %9461, i32 0, i32 0
  %PC.i1992 = bitcast %union.anon* %9462 to i64*
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9464 = getelementptr inbounds %struct.GPR, %struct.GPR* %9463, i32 0, i32 1
  %9465 = getelementptr inbounds %struct.Reg, %struct.Reg* %9464, i32 0, i32 0
  %EAX.i1993 = bitcast %union.anon* %9465 to i32*
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9467 = getelementptr inbounds %struct.GPR, %struct.GPR* %9466, i32 0, i32 15
  %9468 = getelementptr inbounds %struct.Reg, %struct.Reg* %9467, i32 0, i32 0
  %RBP.i1994 = bitcast %union.anon* %9468 to i64*
  %9469 = load i64, i64* %RBP.i1994
  %9470 = sub i64 %9469, 32
  %9471 = load i32, i32* %EAX.i1993
  %9472 = zext i32 %9471 to i64
  %9473 = load i64, i64* %PC.i1992
  %9474 = add i64 %9473, 3
  store i64 %9474, i64* %PC.i1992
  %9475 = inttoptr i64 %9470 to i32*
  store i32 %9471, i32* %9475
  store %struct.Memory* %loadMem_475fdf, %struct.Memory** %MEMORY
  %loadMem_475fe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9477 = getelementptr inbounds %struct.GPR, %struct.GPR* %9476, i32 0, i32 33
  %9478 = getelementptr inbounds %struct.Reg, %struct.Reg* %9477, i32 0, i32 0
  %PC.i1991 = bitcast %union.anon* %9478 to i64*
  %9479 = load i64, i64* %PC.i1991
  %9480 = add i64 %9479, -160
  %9481 = load i64, i64* %PC.i1991
  %9482 = add i64 %9481, 5
  store i64 %9482, i64* %PC.i1991
  %9483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9480, i64* %9483, align 8
  store %struct.Memory* %loadMem_475fe2, %struct.Memory** %MEMORY
  br label %block_.L_475f42

block_.L_475fe7:                                  ; preds = %block_.L_475f42
  %loadMem_475fe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9485 = getelementptr inbounds %struct.GPR, %struct.GPR* %9484, i32 0, i32 33
  %9486 = getelementptr inbounds %struct.Reg, %struct.Reg* %9485, i32 0, i32 0
  %PC.i1990 = bitcast %union.anon* %9486 to i64*
  %9487 = load i64, i64* %PC.i1990
  %9488 = add i64 %9487, 5
  %9489 = load i64, i64* %PC.i1990
  %9490 = add i64 %9489, 5
  store i64 %9490, i64* %PC.i1990
  %9491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9488, i64* %9491, align 8
  store %struct.Memory* %loadMem_475fe7, %struct.Memory** %MEMORY
  br label %block_.L_475fec

block_.L_475fec:                                  ; preds = %block_.L_475fe7
  %loadMem_475fec = load %struct.Memory*, %struct.Memory** %MEMORY
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9493 = getelementptr inbounds %struct.GPR, %struct.GPR* %9492, i32 0, i32 33
  %9494 = getelementptr inbounds %struct.Reg, %struct.Reg* %9493, i32 0, i32 0
  %PC.i1987 = bitcast %union.anon* %9494 to i64*
  %9495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9496 = getelementptr inbounds %struct.GPR, %struct.GPR* %9495, i32 0, i32 1
  %9497 = getelementptr inbounds %struct.Reg, %struct.Reg* %9496, i32 0, i32 0
  %RAX.i1988 = bitcast %union.anon* %9497 to i64*
  %9498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9499 = getelementptr inbounds %struct.GPR, %struct.GPR* %9498, i32 0, i32 15
  %9500 = getelementptr inbounds %struct.Reg, %struct.Reg* %9499, i32 0, i32 0
  %RBP.i1989 = bitcast %union.anon* %9500 to i64*
  %9501 = load i64, i64* %RBP.i1989
  %9502 = sub i64 %9501, 28
  %9503 = load i64, i64* %PC.i1987
  %9504 = add i64 %9503, 3
  store i64 %9504, i64* %PC.i1987
  %9505 = inttoptr i64 %9502 to i32*
  %9506 = load i32, i32* %9505
  %9507 = zext i32 %9506 to i64
  store i64 %9507, i64* %RAX.i1988, align 8
  store %struct.Memory* %loadMem_475fec, %struct.Memory** %MEMORY
  %loadMem_475fef = load %struct.Memory*, %struct.Memory** %MEMORY
  %9508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9509 = getelementptr inbounds %struct.GPR, %struct.GPR* %9508, i32 0, i32 33
  %9510 = getelementptr inbounds %struct.Reg, %struct.Reg* %9509, i32 0, i32 0
  %PC.i1985 = bitcast %union.anon* %9510 to i64*
  %9511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9512 = getelementptr inbounds %struct.GPR, %struct.GPR* %9511, i32 0, i32 1
  %9513 = getelementptr inbounds %struct.Reg, %struct.Reg* %9512, i32 0, i32 0
  %RAX.i1986 = bitcast %union.anon* %9513 to i64*
  %9514 = load i64, i64* %RAX.i1986
  %9515 = load i64, i64* %PC.i1985
  %9516 = add i64 %9515, 3
  store i64 %9516, i64* %PC.i1985
  %9517 = trunc i64 %9514 to i32
  %9518 = add i32 1, %9517
  %9519 = zext i32 %9518 to i64
  store i64 %9519, i64* %RAX.i1986, align 8
  %9520 = icmp ult i32 %9518, %9517
  %9521 = icmp ult i32 %9518, 1
  %9522 = or i1 %9520, %9521
  %9523 = zext i1 %9522 to i8
  %9524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9523, i8* %9524, align 1
  %9525 = and i32 %9518, 255
  %9526 = call i32 @llvm.ctpop.i32(i32 %9525)
  %9527 = trunc i32 %9526 to i8
  %9528 = and i8 %9527, 1
  %9529 = xor i8 %9528, 1
  %9530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9529, i8* %9530, align 1
  %9531 = xor i64 1, %9514
  %9532 = trunc i64 %9531 to i32
  %9533 = xor i32 %9532, %9518
  %9534 = lshr i32 %9533, 4
  %9535 = trunc i32 %9534 to i8
  %9536 = and i8 %9535, 1
  %9537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9536, i8* %9537, align 1
  %9538 = icmp eq i32 %9518, 0
  %9539 = zext i1 %9538 to i8
  %9540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9539, i8* %9540, align 1
  %9541 = lshr i32 %9518, 31
  %9542 = trunc i32 %9541 to i8
  %9543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9542, i8* %9543, align 1
  %9544 = lshr i32 %9517, 31
  %9545 = xor i32 %9541, %9544
  %9546 = add i32 %9545, %9541
  %9547 = icmp eq i32 %9546, 2
  %9548 = zext i1 %9547 to i8
  %9549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9548, i8* %9549, align 1
  store %struct.Memory* %loadMem_475fef, %struct.Memory** %MEMORY
  %loadMem_475ff2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9551 = getelementptr inbounds %struct.GPR, %struct.GPR* %9550, i32 0, i32 33
  %9552 = getelementptr inbounds %struct.Reg, %struct.Reg* %9551, i32 0, i32 0
  %PC.i1982 = bitcast %union.anon* %9552 to i64*
  %9553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9554 = getelementptr inbounds %struct.GPR, %struct.GPR* %9553, i32 0, i32 1
  %9555 = getelementptr inbounds %struct.Reg, %struct.Reg* %9554, i32 0, i32 0
  %EAX.i1983 = bitcast %union.anon* %9555 to i32*
  %9556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9557 = getelementptr inbounds %struct.GPR, %struct.GPR* %9556, i32 0, i32 15
  %9558 = getelementptr inbounds %struct.Reg, %struct.Reg* %9557, i32 0, i32 0
  %RBP.i1984 = bitcast %union.anon* %9558 to i64*
  %9559 = load i64, i64* %RBP.i1984
  %9560 = sub i64 %9559, 28
  %9561 = load i32, i32* %EAX.i1983
  %9562 = zext i32 %9561 to i64
  %9563 = load i64, i64* %PC.i1982
  %9564 = add i64 %9563, 3
  store i64 %9564, i64* %PC.i1982
  %9565 = inttoptr i64 %9560 to i32*
  store i32 %9561, i32* %9565
  store %struct.Memory* %loadMem_475ff2, %struct.Memory** %MEMORY
  %loadMem_475ff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9567 = getelementptr inbounds %struct.GPR, %struct.GPR* %9566, i32 0, i32 33
  %9568 = getelementptr inbounds %struct.Reg, %struct.Reg* %9567, i32 0, i32 0
  %PC.i1981 = bitcast %union.anon* %9568 to i64*
  %9569 = load i64, i64* %PC.i1981
  %9570 = add i64 %9569, -207
  %9571 = load i64, i64* %PC.i1981
  %9572 = add i64 %9571, 5
  store i64 %9572, i64* %PC.i1981
  %9573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9570, i64* %9573, align 8
  store %struct.Memory* %loadMem_475ff5, %struct.Memory** %MEMORY
  br label %block_.L_475f26

block_.L_475ffa:                                  ; preds = %block_.L_475f26
  %loadMem_475ffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9575 = getelementptr inbounds %struct.GPR, %struct.GPR* %9574, i32 0, i32 33
  %9576 = getelementptr inbounds %struct.Reg, %struct.Reg* %9575, i32 0, i32 0
  %PC.i1978 = bitcast %union.anon* %9576 to i64*
  %9577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9578 = getelementptr inbounds %struct.GPR, %struct.GPR* %9577, i32 0, i32 1
  %9579 = getelementptr inbounds %struct.Reg, %struct.Reg* %9578, i32 0, i32 0
  %RAX.i1979 = bitcast %union.anon* %9579 to i64*
  %9580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9581 = getelementptr inbounds %struct.GPR, %struct.GPR* %9580, i32 0, i32 15
  %9582 = getelementptr inbounds %struct.Reg, %struct.Reg* %9581, i32 0, i32 0
  %RBP.i1980 = bitcast %union.anon* %9582 to i64*
  %9583 = load i64, i64* %RBP.i1980
  %9584 = sub i64 %9583, 1068
  %9585 = load i64, i64* %PC.i1978
  %9586 = add i64 %9585, 7
  store i64 %9586, i64* %PC.i1978
  %9587 = inttoptr i64 %9584 to i32*
  %9588 = load i32, i32* %9587
  %9589 = sext i32 %9588 to i64
  store i64 %9589, i64* %RAX.i1979, align 8
  store %struct.Memory* %loadMem_475ffa, %struct.Memory** %MEMORY
  %loadMem_476001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9591 = getelementptr inbounds %struct.GPR, %struct.GPR* %9590, i32 0, i32 33
  %9592 = getelementptr inbounds %struct.Reg, %struct.Reg* %9591, i32 0, i32 0
  %PC.i1975 = bitcast %union.anon* %9592 to i64*
  %9593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9594 = getelementptr inbounds %struct.GPR, %struct.GPR* %9593, i32 0, i32 1
  %9595 = getelementptr inbounds %struct.Reg, %struct.Reg* %9594, i32 0, i32 0
  %RAX.i1976 = bitcast %union.anon* %9595 to i64*
  %9596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9597 = getelementptr inbounds %struct.GPR, %struct.GPR* %9596, i32 0, i32 5
  %9598 = getelementptr inbounds %struct.Reg, %struct.Reg* %9597, i32 0, i32 0
  %RCX.i1977 = bitcast %union.anon* %9598 to i64*
  %9599 = load i64, i64* %RAX.i1976
  %9600 = add i64 %9599, 12099168
  %9601 = load i64, i64* %PC.i1975
  %9602 = add i64 %9601, 8
  store i64 %9602, i64* %PC.i1975
  %9603 = inttoptr i64 %9600 to i8*
  %9604 = load i8, i8* %9603
  %9605 = zext i8 %9604 to i64
  store i64 %9605, i64* %RCX.i1977, align 8
  store %struct.Memory* %loadMem_476001, %struct.Memory** %MEMORY
  %loadMem_476009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9607 = getelementptr inbounds %struct.GPR, %struct.GPR* %9606, i32 0, i32 33
  %9608 = getelementptr inbounds %struct.Reg, %struct.Reg* %9607, i32 0, i32 0
  %PC.i1973 = bitcast %union.anon* %9608 to i64*
  %9609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9610 = getelementptr inbounds %struct.GPR, %struct.GPR* %9609, i32 0, i32 5
  %9611 = getelementptr inbounds %struct.Reg, %struct.Reg* %9610, i32 0, i32 0
  %ECX.i1974 = bitcast %union.anon* %9611 to i32*
  %9612 = load i32, i32* %ECX.i1974
  %9613 = zext i32 %9612 to i64
  %9614 = load i64, i64* %PC.i1973
  %9615 = add i64 %9614, 3
  store i64 %9615, i64* %PC.i1973
  %9616 = sub i32 %9612, 3
  %9617 = icmp ult i32 %9612, 3
  %9618 = zext i1 %9617 to i8
  %9619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9618, i8* %9619, align 1
  %9620 = and i32 %9616, 255
  %9621 = call i32 @llvm.ctpop.i32(i32 %9620)
  %9622 = trunc i32 %9621 to i8
  %9623 = and i8 %9622, 1
  %9624 = xor i8 %9623, 1
  %9625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9624, i8* %9625, align 1
  %9626 = xor i64 3, %9613
  %9627 = trunc i64 %9626 to i32
  %9628 = xor i32 %9627, %9616
  %9629 = lshr i32 %9628, 4
  %9630 = trunc i32 %9629 to i8
  %9631 = and i8 %9630, 1
  %9632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9631, i8* %9632, align 1
  %9633 = icmp eq i32 %9616, 0
  %9634 = zext i1 %9633 to i8
  %9635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9634, i8* %9635, align 1
  %9636 = lshr i32 %9616, 31
  %9637 = trunc i32 %9636 to i8
  %9638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9637, i8* %9638, align 1
  %9639 = lshr i32 %9612, 31
  %9640 = xor i32 %9636, %9639
  %9641 = add i32 %9640, %9639
  %9642 = icmp eq i32 %9641, 2
  %9643 = zext i1 %9642 to i8
  %9644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9643, i8* %9644, align 1
  store %struct.Memory* %loadMem_476009, %struct.Memory** %MEMORY
  %loadMem_47600c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9646 = getelementptr inbounds %struct.GPR, %struct.GPR* %9645, i32 0, i32 33
  %9647 = getelementptr inbounds %struct.Reg, %struct.Reg* %9646, i32 0, i32 0
  %PC.i1972 = bitcast %union.anon* %9647 to i64*
  %9648 = load i64, i64* %PC.i1972
  %9649 = add i64 %9648, 11
  %9650 = load i64, i64* %PC.i1972
  %9651 = add i64 %9650, 6
  %9652 = load i64, i64* %PC.i1972
  %9653 = add i64 %9652, 6
  store i64 %9653, i64* %PC.i1972
  %9654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9655 = load i8, i8* %9654, align 1
  store i8 %9655, i8* %BRANCH_TAKEN, align 1
  %9656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9657 = icmp ne i8 %9655, 0
  %9658 = select i1 %9657, i64 %9649, i64 %9651
  store i64 %9658, i64* %9656, align 8
  store %struct.Memory* %loadMem_47600c, %struct.Memory** %MEMORY
  %loadBr_47600c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47600c = icmp eq i8 %loadBr_47600c, 1
  br i1 %cmpBr_47600c, label %block_.L_476017, label %block_476012

block_476012:                                     ; preds = %block_.L_475ffa
  %loadMem_476012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9660 = getelementptr inbounds %struct.GPR, %struct.GPR* %9659, i32 0, i32 33
  %9661 = getelementptr inbounds %struct.Reg, %struct.Reg* %9660, i32 0, i32 0
  %PC.i1971 = bitcast %union.anon* %9661 to i64*
  %9662 = load i64, i64* %PC.i1971
  %9663 = add i64 %9662, 45
  %9664 = load i64, i64* %PC.i1971
  %9665 = add i64 %9664, 5
  store i64 %9665, i64* %PC.i1971
  %9666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9663, i64* %9666, align 8
  store %struct.Memory* %loadMem_476012, %struct.Memory** %MEMORY
  br label %block_.L_47603f

block_.L_476017:                                  ; preds = %block_.L_475ffa
  %loadMem_476017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9668 = getelementptr inbounds %struct.GPR, %struct.GPR* %9667, i32 0, i32 33
  %9669 = getelementptr inbounds %struct.Reg, %struct.Reg* %9668, i32 0, i32 0
  %PC.i1969 = bitcast %union.anon* %9669 to i64*
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9671 = getelementptr inbounds %struct.GPR, %struct.GPR* %9670, i32 0, i32 11
  %9672 = getelementptr inbounds %struct.Reg, %struct.Reg* %9671, i32 0, i32 0
  %RDI.i1970 = bitcast %union.anon* %9672 to i64*
  %9673 = load i64, i64* %PC.i1969
  %9674 = add i64 %9673, 10
  store i64 %9674, i64* %PC.i1969
  store i64 ptrtoint (%G__0x58192c_type* @G__0x58192c to i64), i64* %RDI.i1970, align 8
  store %struct.Memory* %loadMem_476017, %struct.Memory** %MEMORY
  %loadMem_476021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9676 = getelementptr inbounds %struct.GPR, %struct.GPR* %9675, i32 0, i32 33
  %9677 = getelementptr inbounds %struct.Reg, %struct.Reg* %9676, i32 0, i32 0
  %PC.i1967 = bitcast %union.anon* %9677 to i64*
  %9678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9679 = getelementptr inbounds %struct.GPR, %struct.GPR* %9678, i32 0, i32 9
  %9680 = getelementptr inbounds %struct.Reg, %struct.Reg* %9679, i32 0, i32 0
  %RSI.i1968 = bitcast %union.anon* %9680 to i64*
  %9681 = load i64, i64* %PC.i1967
  %9682 = add i64 %9681, 5
  store i64 %9682, i64* %PC.i1967
  store i64 207, i64* %RSI.i1968, align 8
  store %struct.Memory* %loadMem_476021, %struct.Memory** %MEMORY
  %loadMem_476026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9684 = getelementptr inbounds %struct.GPR, %struct.GPR* %9683, i32 0, i32 33
  %9685 = getelementptr inbounds %struct.Reg, %struct.Reg* %9684, i32 0, i32 0
  %PC.i1965 = bitcast %union.anon* %9685 to i64*
  %9686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9687 = getelementptr inbounds %struct.GPR, %struct.GPR* %9686, i32 0, i32 7
  %9688 = getelementptr inbounds %struct.Reg, %struct.Reg* %9687, i32 0, i32 0
  %RDX.i1966 = bitcast %union.anon* %9688 to i64*
  %9689 = load i64, i64* %PC.i1965
  %9690 = add i64 %9689, 10
  store i64 %9690, i64* %PC.i1965
  store i64 ptrtoint (%G__0x5819f6_type* @G__0x5819f6 to i64), i64* %RDX.i1966, align 8
  store %struct.Memory* %loadMem_476026, %struct.Memory** %MEMORY
  %loadMem_476030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9692 = getelementptr inbounds %struct.GPR, %struct.GPR* %9691, i32 0, i32 33
  %9693 = getelementptr inbounds %struct.Reg, %struct.Reg* %9692, i32 0, i32 0
  %PC.i1963 = bitcast %union.anon* %9693 to i64*
  %9694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9695 = getelementptr inbounds %struct.GPR, %struct.GPR* %9694, i32 0, i32 1
  %9696 = getelementptr inbounds %struct.Reg, %struct.Reg* %9695, i32 0, i32 0
  %RAX.i1964 = bitcast %union.anon* %9696 to i64*
  %9697 = load i64, i64* %PC.i1963
  %9698 = add i64 %9697, 5
  store i64 %9698, i64* %PC.i1963
  store i64 4294967295, i64* %RAX.i1964, align 8
  store %struct.Memory* %loadMem_476030, %struct.Memory** %MEMORY
  %loadMem_476035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9700 = getelementptr inbounds %struct.GPR, %struct.GPR* %9699, i32 0, i32 33
  %9701 = getelementptr inbounds %struct.Reg, %struct.Reg* %9700, i32 0, i32 0
  %PC.i1960 = bitcast %union.anon* %9701 to i64*
  %9702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9703 = getelementptr inbounds %struct.GPR, %struct.GPR* %9702, i32 0, i32 1
  %9704 = getelementptr inbounds %struct.Reg, %struct.Reg* %9703, i32 0, i32 0
  %EAX.i1961 = bitcast %union.anon* %9704 to i32*
  %9705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9706 = getelementptr inbounds %struct.GPR, %struct.GPR* %9705, i32 0, i32 5
  %9707 = getelementptr inbounds %struct.Reg, %struct.Reg* %9706, i32 0, i32 0
  %RCX.i1962 = bitcast %union.anon* %9707 to i64*
  %9708 = load i32, i32* %EAX.i1961
  %9709 = zext i32 %9708 to i64
  %9710 = load i64, i64* %PC.i1960
  %9711 = add i64 %9710, 2
  store i64 %9711, i64* %PC.i1960
  %9712 = and i64 %9709, 4294967295
  store i64 %9712, i64* %RCX.i1962, align 8
  store %struct.Memory* %loadMem_476035, %struct.Memory** %MEMORY
  %loadMem_476037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9714 = getelementptr inbounds %struct.GPR, %struct.GPR* %9713, i32 0, i32 33
  %9715 = getelementptr inbounds %struct.Reg, %struct.Reg* %9714, i32 0, i32 0
  %PC.i1957 = bitcast %union.anon* %9715 to i64*
  %9716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9717 = getelementptr inbounds %struct.GPR, %struct.GPR* %9716, i32 0, i32 1
  %9718 = getelementptr inbounds %struct.Reg, %struct.Reg* %9717, i32 0, i32 0
  %EAX.i1958 = bitcast %union.anon* %9718 to i32*
  %9719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9720 = getelementptr inbounds %struct.GPR, %struct.GPR* %9719, i32 0, i32 17
  %9721 = getelementptr inbounds %struct.Reg, %struct.Reg* %9720, i32 0, i32 0
  %R8D.i1959 = bitcast %union.anon* %9721 to i32*
  %9722 = bitcast i32* %R8D.i1959 to i64*
  %9723 = load i32, i32* %EAX.i1958
  %9724 = zext i32 %9723 to i64
  %9725 = load i64, i64* %PC.i1957
  %9726 = add i64 %9725, 3
  store i64 %9726, i64* %PC.i1957
  %9727 = and i64 %9724, 4294967295
  store i64 %9727, i64* %9722, align 8
  store %struct.Memory* %loadMem_476037, %struct.Memory** %MEMORY
  %loadMem1_47603a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9729 = getelementptr inbounds %struct.GPR, %struct.GPR* %9728, i32 0, i32 33
  %9730 = getelementptr inbounds %struct.Reg, %struct.Reg* %9729, i32 0, i32 0
  %PC.i1956 = bitcast %union.anon* %9730 to i64*
  %9731 = load i64, i64* %PC.i1956
  %9732 = add i64 %9731, -147370
  %9733 = load i64, i64* %PC.i1956
  %9734 = add i64 %9733, 5
  %9735 = load i64, i64* %PC.i1956
  %9736 = add i64 %9735, 5
  store i64 %9736, i64* %PC.i1956
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9738 = load i64, i64* %9737, align 8
  %9739 = add i64 %9738, -8
  %9740 = inttoptr i64 %9739 to i64*
  store i64 %9734, i64* %9740
  store i64 %9739, i64* %9737, align 8
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9732, i64* %9741, align 8
  store %struct.Memory* %loadMem1_47603a, %struct.Memory** %MEMORY
  %loadMem2_47603a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47603a = load i64, i64* %3
  %call2_47603a = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_47603a, %struct.Memory* %loadMem2_47603a)
  store %struct.Memory* %call2_47603a, %struct.Memory** %MEMORY
  br label %block_.L_47603f

block_.L_47603f:                                  ; preds = %block_.L_476017, %block_476012
  %loadMem_47603f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9743 = getelementptr inbounds %struct.GPR, %struct.GPR* %9742, i32 0, i32 33
  %9744 = getelementptr inbounds %struct.Reg, %struct.Reg* %9743, i32 0, i32 0
  %PC.i1953 = bitcast %union.anon* %9744 to i64*
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9746 = getelementptr inbounds %struct.GPR, %struct.GPR* %9745, i32 0, i32 1
  %9747 = getelementptr inbounds %struct.Reg, %struct.Reg* %9746, i32 0, i32 0
  %RAX.i1954 = bitcast %union.anon* %9747 to i64*
  %9748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9749 = getelementptr inbounds %struct.GPR, %struct.GPR* %9748, i32 0, i32 15
  %9750 = getelementptr inbounds %struct.Reg, %struct.Reg* %9749, i32 0, i32 0
  %RBP.i1955 = bitcast %union.anon* %9750 to i64*
  %9751 = load i64, i64* %RBP.i1955
  %9752 = sub i64 %9751, 1068
  %9753 = load i64, i64* %PC.i1953
  %9754 = add i64 %9753, 6
  store i64 %9754, i64* %PC.i1953
  %9755 = inttoptr i64 %9752 to i32*
  %9756 = load i32, i32* %9755
  %9757 = zext i32 %9756 to i64
  store i64 %9757, i64* %RAX.i1954, align 8
  store %struct.Memory* %loadMem_47603f, %struct.Memory** %MEMORY
  %loadMem_476045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9759 = getelementptr inbounds %struct.GPR, %struct.GPR* %9758, i32 0, i32 33
  %9760 = getelementptr inbounds %struct.Reg, %struct.Reg* %9759, i32 0, i32 0
  %PC.i1950 = bitcast %union.anon* %9760 to i64*
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9762 = getelementptr inbounds %struct.GPR, %struct.GPR* %9761, i32 0, i32 5
  %9763 = getelementptr inbounds %struct.Reg, %struct.Reg* %9762, i32 0, i32 0
  %RCX.i1951 = bitcast %union.anon* %9763 to i64*
  %9764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9765 = getelementptr inbounds %struct.GPR, %struct.GPR* %9764, i32 0, i32 15
  %9766 = getelementptr inbounds %struct.Reg, %struct.Reg* %9765, i32 0, i32 0
  %RBP.i1952 = bitcast %union.anon* %9766 to i64*
  %9767 = load i64, i64* %RBP.i1952
  %9768 = sub i64 %9767, 216
  %9769 = load i64, i64* %PC.i1950
  %9770 = add i64 %9769, 7
  store i64 %9770, i64* %PC.i1950
  %9771 = inttoptr i64 %9768 to i32*
  %9772 = load i32, i32* %9771
  %9773 = sext i32 %9772 to i64
  store i64 %9773, i64* %RCX.i1951, align 8
  store %struct.Memory* %loadMem_476045, %struct.Memory** %MEMORY
  %loadMem_47604c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9775 = getelementptr inbounds %struct.GPR, %struct.GPR* %9774, i32 0, i32 33
  %9776 = getelementptr inbounds %struct.Reg, %struct.Reg* %9775, i32 0, i32 0
  %PC.i1946 = bitcast %union.anon* %9776 to i64*
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9778 = getelementptr inbounds %struct.GPR, %struct.GPR* %9777, i32 0, i32 1
  %9779 = getelementptr inbounds %struct.Reg, %struct.Reg* %9778, i32 0, i32 0
  %EAX.i1947 = bitcast %union.anon* %9779 to i32*
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9781 = getelementptr inbounds %struct.GPR, %struct.GPR* %9780, i32 0, i32 5
  %9782 = getelementptr inbounds %struct.Reg, %struct.Reg* %9781, i32 0, i32 0
  %RCX.i1948 = bitcast %union.anon* %9782 to i64*
  %9783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9784 = getelementptr inbounds %struct.GPR, %struct.GPR* %9783, i32 0, i32 15
  %9785 = getelementptr inbounds %struct.Reg, %struct.Reg* %9784, i32 0, i32 0
  %RBP.i1949 = bitcast %union.anon* %9785 to i64*
  %9786 = load i64, i64* %RBP.i1949
  %9787 = load i64, i64* %RCX.i1948
  %9788 = mul i64 %9787, 4
  %9789 = add i64 %9786, -208
  %9790 = add i64 %9789, %9788
  %9791 = load i32, i32* %EAX.i1947
  %9792 = zext i32 %9791 to i64
  %9793 = load i64, i64* %PC.i1946
  %9794 = add i64 %9793, 7
  store i64 %9794, i64* %PC.i1946
  %9795 = inttoptr i64 %9790 to i32*
  store i32 %9791, i32* %9795
  store %struct.Memory* %loadMem_47604c, %struct.Memory** %MEMORY
  %loadMem_476053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9797 = getelementptr inbounds %struct.GPR, %struct.GPR* %9796, i32 0, i32 33
  %9798 = getelementptr inbounds %struct.Reg, %struct.Reg* %9797, i32 0, i32 0
  %PC.i1943 = bitcast %union.anon* %9798 to i64*
  %9799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9800 = getelementptr inbounds %struct.GPR, %struct.GPR* %9799, i32 0, i32 1
  %9801 = getelementptr inbounds %struct.Reg, %struct.Reg* %9800, i32 0, i32 0
  %RAX.i1944 = bitcast %union.anon* %9801 to i64*
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9803 = getelementptr inbounds %struct.GPR, %struct.GPR* %9802, i32 0, i32 15
  %9804 = getelementptr inbounds %struct.Reg, %struct.Reg* %9803, i32 0, i32 0
  %RBP.i1945 = bitcast %union.anon* %9804 to i64*
  %9805 = load i64, i64* %RBP.i1945
  %9806 = sub i64 %9805, 216
  %9807 = load i64, i64* %PC.i1943
  %9808 = add i64 %9807, 6
  store i64 %9808, i64* %PC.i1943
  %9809 = inttoptr i64 %9806 to i32*
  %9810 = load i32, i32* %9809
  %9811 = zext i32 %9810 to i64
  store i64 %9811, i64* %RAX.i1944, align 8
  store %struct.Memory* %loadMem_476053, %struct.Memory** %MEMORY
  %loadMem_476059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9813 = getelementptr inbounds %struct.GPR, %struct.GPR* %9812, i32 0, i32 33
  %9814 = getelementptr inbounds %struct.Reg, %struct.Reg* %9813, i32 0, i32 0
  %PC.i1941 = bitcast %union.anon* %9814 to i64*
  %9815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9816 = getelementptr inbounds %struct.GPR, %struct.GPR* %9815, i32 0, i32 1
  %9817 = getelementptr inbounds %struct.Reg, %struct.Reg* %9816, i32 0, i32 0
  %RAX.i1942 = bitcast %union.anon* %9817 to i64*
  %9818 = load i64, i64* %RAX.i1942
  %9819 = load i64, i64* %PC.i1941
  %9820 = add i64 %9819, 3
  store i64 %9820, i64* %PC.i1941
  %9821 = trunc i64 %9818 to i32
  %9822 = add i32 1, %9821
  %9823 = zext i32 %9822 to i64
  store i64 %9823, i64* %RAX.i1942, align 8
  %9824 = icmp ult i32 %9822, %9821
  %9825 = icmp ult i32 %9822, 1
  %9826 = or i1 %9824, %9825
  %9827 = zext i1 %9826 to i8
  %9828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9827, i8* %9828, align 1
  %9829 = and i32 %9822, 255
  %9830 = call i32 @llvm.ctpop.i32(i32 %9829)
  %9831 = trunc i32 %9830 to i8
  %9832 = and i8 %9831, 1
  %9833 = xor i8 %9832, 1
  %9834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9833, i8* %9834, align 1
  %9835 = xor i64 1, %9818
  %9836 = trunc i64 %9835 to i32
  %9837 = xor i32 %9836, %9822
  %9838 = lshr i32 %9837, 4
  %9839 = trunc i32 %9838 to i8
  %9840 = and i8 %9839, 1
  %9841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9840, i8* %9841, align 1
  %9842 = icmp eq i32 %9822, 0
  %9843 = zext i1 %9842 to i8
  %9844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9843, i8* %9844, align 1
  %9845 = lshr i32 %9822, 31
  %9846 = trunc i32 %9845 to i8
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9846, i8* %9847, align 1
  %9848 = lshr i32 %9821, 31
  %9849 = xor i32 %9845, %9848
  %9850 = add i32 %9849, %9845
  %9851 = icmp eq i32 %9850, 2
  %9852 = zext i1 %9851 to i8
  %9853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9852, i8* %9853, align 1
  store %struct.Memory* %loadMem_476059, %struct.Memory** %MEMORY
  %loadMem_47605c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9855 = getelementptr inbounds %struct.GPR, %struct.GPR* %9854, i32 0, i32 33
  %9856 = getelementptr inbounds %struct.Reg, %struct.Reg* %9855, i32 0, i32 0
  %PC.i1938 = bitcast %union.anon* %9856 to i64*
  %9857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9858 = getelementptr inbounds %struct.GPR, %struct.GPR* %9857, i32 0, i32 1
  %9859 = getelementptr inbounds %struct.Reg, %struct.Reg* %9858, i32 0, i32 0
  %EAX.i1939 = bitcast %union.anon* %9859 to i32*
  %9860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9861 = getelementptr inbounds %struct.GPR, %struct.GPR* %9860, i32 0, i32 15
  %9862 = getelementptr inbounds %struct.Reg, %struct.Reg* %9861, i32 0, i32 0
  %RBP.i1940 = bitcast %union.anon* %9862 to i64*
  %9863 = load i64, i64* %RBP.i1940
  %9864 = sub i64 %9863, 216
  %9865 = load i32, i32* %EAX.i1939
  %9866 = zext i32 %9865 to i64
  %9867 = load i64, i64* %PC.i1938
  %9868 = add i64 %9867, 6
  store i64 %9868, i64* %PC.i1938
  %9869 = inttoptr i64 %9864 to i32*
  store i32 %9865, i32* %9869
  store %struct.Memory* %loadMem_47605c, %struct.Memory** %MEMORY
  %loadMem_476062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9871 = getelementptr inbounds %struct.GPR, %struct.GPR* %9870, i32 0, i32 33
  %9872 = getelementptr inbounds %struct.Reg, %struct.Reg* %9871, i32 0, i32 0
  %PC.i1937 = bitcast %union.anon* %9872 to i64*
  %9873 = load i64, i64* %PC.i1937
  %9874 = add i64 %9873, -486
  %9875 = load i64, i64* %PC.i1937
  %9876 = add i64 %9875, 5
  store i64 %9876, i64* %PC.i1937
  %9877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9874, i64* %9877, align 8
  store %struct.Memory* %loadMem_476062, %struct.Memory** %MEMORY
  br label %block_.L_475e7c

block_.L_476067:                                  ; preds = %routine_idivl__ecx.exit2171
  %loadMem_476067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9879 = getelementptr inbounds %struct.GPR, %struct.GPR* %9878, i32 0, i32 33
  %9880 = getelementptr inbounds %struct.Reg, %struct.Reg* %9879, i32 0, i32 0
  %PC.i1935 = bitcast %union.anon* %9880 to i64*
  %9881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9882 = getelementptr inbounds %struct.GPR, %struct.GPR* %9881, i32 0, i32 1
  %9883 = getelementptr inbounds %struct.Reg, %struct.Reg* %9882, i32 0, i32 0
  %RAX.i1936 = bitcast %union.anon* %9883 to i64*
  %9884 = load i64, i64* %PC.i1935
  %9885 = add i64 %9884, 5
  store i64 %9885, i64* %PC.i1935
  store i64 20, i64* %RAX.i1936, align 8
  store %struct.Memory* %loadMem_476067, %struct.Memory** %MEMORY
  %loadMem_47606c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9887 = getelementptr inbounds %struct.GPR, %struct.GPR* %9886, i32 0, i32 33
  %9888 = getelementptr inbounds %struct.Reg, %struct.Reg* %9887, i32 0, i32 0
  %PC.i1932 = bitcast %union.anon* %9888 to i64*
  %9889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9890 = getelementptr inbounds %struct.GPR, %struct.GPR* %9889, i32 0, i32 5
  %9891 = getelementptr inbounds %struct.Reg, %struct.Reg* %9890, i32 0, i32 0
  %RCX.i1933 = bitcast %union.anon* %9891 to i64*
  %9892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9893 = getelementptr inbounds %struct.GPR, %struct.GPR* %9892, i32 0, i32 15
  %9894 = getelementptr inbounds %struct.Reg, %struct.Reg* %9893, i32 0, i32 0
  %RBP.i1934 = bitcast %union.anon* %9894 to i64*
  %9895 = load i64, i64* %RBP.i1934
  %9896 = sub i64 %9895, 128
  %9897 = load i64, i64* %PC.i1932
  %9898 = add i64 %9897, 3
  store i64 %9898, i64* %PC.i1932
  %9899 = inttoptr i64 %9896 to i32*
  %9900 = load i32, i32* %9899
  %9901 = zext i32 %9900 to i64
  store i64 %9901, i64* %RCX.i1933, align 8
  store %struct.Memory* %loadMem_47606c, %struct.Memory** %MEMORY
  %loadMem_47606f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9903 = getelementptr inbounds %struct.GPR, %struct.GPR* %9902, i32 0, i32 33
  %9904 = getelementptr inbounds %struct.Reg, %struct.Reg* %9903, i32 0, i32 0
  %PC.i1929 = bitcast %union.anon* %9904 to i64*
  %9905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9906 = getelementptr inbounds %struct.GPR, %struct.GPR* %9905, i32 0, i32 1
  %9907 = getelementptr inbounds %struct.Reg, %struct.Reg* %9906, i32 0, i32 0
  %EAX.i1930 = bitcast %union.anon* %9907 to i32*
  %9908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9909 = getelementptr inbounds %struct.GPR, %struct.GPR* %9908, i32 0, i32 15
  %9910 = getelementptr inbounds %struct.Reg, %struct.Reg* %9909, i32 0, i32 0
  %RBP.i1931 = bitcast %union.anon* %9910 to i64*
  %9911 = load i64, i64* %RBP.i1931
  %9912 = sub i64 %9911, 1184
  %9913 = load i32, i32* %EAX.i1930
  %9914 = zext i32 %9913 to i64
  %9915 = load i64, i64* %PC.i1929
  %9916 = add i64 %9915, 6
  store i64 %9916, i64* %PC.i1929
  %9917 = inttoptr i64 %9912 to i32*
  store i32 %9913, i32* %9917
  store %struct.Memory* %loadMem_47606f, %struct.Memory** %MEMORY
  %loadMem_476075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9919 = getelementptr inbounds %struct.GPR, %struct.GPR* %9918, i32 0, i32 33
  %9920 = getelementptr inbounds %struct.Reg, %struct.Reg* %9919, i32 0, i32 0
  %PC.i1926 = bitcast %union.anon* %9920 to i64*
  %9921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9922 = getelementptr inbounds %struct.GPR, %struct.GPR* %9921, i32 0, i32 5
  %9923 = getelementptr inbounds %struct.Reg, %struct.Reg* %9922, i32 0, i32 0
  %ECX.i1927 = bitcast %union.anon* %9923 to i32*
  %9924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9925 = getelementptr inbounds %struct.GPR, %struct.GPR* %9924, i32 0, i32 1
  %9926 = getelementptr inbounds %struct.Reg, %struct.Reg* %9925, i32 0, i32 0
  %RAX.i1928 = bitcast %union.anon* %9926 to i64*
  %9927 = load i32, i32* %ECX.i1927
  %9928 = zext i32 %9927 to i64
  %9929 = load i64, i64* %PC.i1926
  %9930 = add i64 %9929, 2
  store i64 %9930, i64* %PC.i1926
  %9931 = and i64 %9928, 4294967295
  store i64 %9931, i64* %RAX.i1928, align 8
  store %struct.Memory* %loadMem_476075, %struct.Memory** %MEMORY
  %loadMem_476077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9933 = getelementptr inbounds %struct.GPR, %struct.GPR* %9932, i32 0, i32 33
  %9934 = getelementptr inbounds %struct.Reg, %struct.Reg* %9933, i32 0, i32 0
  %PC.i1925 = bitcast %union.anon* %9934 to i64*
  %9935 = load i64, i64* %PC.i1925
  %9936 = add i64 %9935, 1
  store i64 %9936, i64* %PC.i1925
  %9937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9939 = bitcast %union.anon* %9938 to i32*
  %9940 = load i32, i32* %9939, align 8
  %9941 = sext i32 %9940 to i64
  %9942 = lshr i64 %9941, 32
  store i64 %9942, i64* %9937, align 8
  store %struct.Memory* %loadMem_476077, %struct.Memory** %MEMORY
  %loadMem_476078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9944 = getelementptr inbounds %struct.GPR, %struct.GPR* %9943, i32 0, i32 33
  %9945 = getelementptr inbounds %struct.Reg, %struct.Reg* %9944, i32 0, i32 0
  %PC.i1922 = bitcast %union.anon* %9945 to i64*
  %9946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9947 = getelementptr inbounds %struct.GPR, %struct.GPR* %9946, i32 0, i32 5
  %9948 = getelementptr inbounds %struct.Reg, %struct.Reg* %9947, i32 0, i32 0
  %RCX.i1923 = bitcast %union.anon* %9948 to i64*
  %9949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9950 = getelementptr inbounds %struct.GPR, %struct.GPR* %9949, i32 0, i32 15
  %9951 = getelementptr inbounds %struct.Reg, %struct.Reg* %9950, i32 0, i32 0
  %RBP.i1924 = bitcast %union.anon* %9951 to i64*
  %9952 = load i64, i64* %RBP.i1924
  %9953 = sub i64 %9952, 1184
  %9954 = load i64, i64* %PC.i1922
  %9955 = add i64 %9954, 6
  store i64 %9955, i64* %PC.i1922
  %9956 = inttoptr i64 %9953 to i32*
  %9957 = load i32, i32* %9956
  %9958 = zext i32 %9957 to i64
  store i64 %9958, i64* %RCX.i1923, align 8
  store %struct.Memory* %loadMem_476078, %struct.Memory** %MEMORY
  %loadMem_47607e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9960 = getelementptr inbounds %struct.GPR, %struct.GPR* %9959, i32 0, i32 33
  %9961 = getelementptr inbounds %struct.Reg, %struct.Reg* %9960, i32 0, i32 0
  %PC.i1916 = bitcast %union.anon* %9961 to i64*
  %9962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9963 = getelementptr inbounds %struct.GPR, %struct.GPR* %9962, i32 0, i32 5
  %9964 = getelementptr inbounds %struct.Reg, %struct.Reg* %9963, i32 0, i32 0
  %ECX.i1917 = bitcast %union.anon* %9964 to i32*
  %9965 = load i32, i32* %ECX.i1917
  %9966 = zext i32 %9965 to i64
  %9967 = load i64, i64* %PC.i1916
  %9968 = add i64 %9967, 2
  store i64 %9968, i64* %PC.i1916
  %9969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9970 = bitcast %union.anon* %9969 to i32*
  %9971 = load i32, i32* %9970, align 8
  %9972 = zext i32 %9971 to i64
  %9973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %9974 = bitcast %union.anon* %9973 to i32*
  %9975 = load i32, i32* %9974, align 8
  %9976 = zext i32 %9975 to i64
  %9977 = shl i64 %9966, 32
  %9978 = ashr exact i64 %9977, 32
  %9979 = shl i64 %9976, 32
  %9980 = or i64 %9979, %9972
  %9981 = sdiv i64 %9980, %9978
  %9982 = shl i64 %9981, 32
  %9983 = ashr exact i64 %9982, 32
  %9984 = icmp eq i64 %9981, %9983
  br i1 %9984, label %9989, label %9985

; <label>:9985:                                   ; preds = %block_.L_476067
  %9986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9987 = load i64, i64* %9986, align 8
  %9988 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %9987, %struct.Memory* %loadMem_47607e)
  br label %routine_idivl__ecx.exit1918

; <label>:9989:                                   ; preds = %block_.L_476067
  %9990 = srem i64 %9980, %9978
  %9991 = getelementptr inbounds %union.anon, %union.anon* %9969, i64 0, i32 0
  %9992 = and i64 %9981, 4294967295
  store i64 %9992, i64* %9991, align 8
  %9993 = getelementptr inbounds %union.anon, %union.anon* %9973, i64 0, i32 0
  %9994 = and i64 %9990, 4294967295
  store i64 %9994, i64* %9993, align 8
  %9995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9995, align 1
  %9996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %9996, align 1
  %9997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9997, align 1
  %9998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9998, align 1
  %9999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9999, align 1
  %10000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10000, align 1
  br label %routine_idivl__ecx.exit1918

routine_idivl__ecx.exit1918:                      ; preds = %9985, %9989
  %10001 = phi %struct.Memory* [ %9988, %9985 ], [ %loadMem_47607e, %9989 ]
  store %struct.Memory* %10001, %struct.Memory** %MEMORY
  %loadMem_476080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10003 = getelementptr inbounds %struct.GPR, %struct.GPR* %10002, i32 0, i32 33
  %10004 = getelementptr inbounds %struct.Reg, %struct.Reg* %10003, i32 0, i32 0
  %PC.i1914 = bitcast %union.anon* %10004 to i64*
  %10005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10006 = getelementptr inbounds %struct.GPR, %struct.GPR* %10005, i32 0, i32 7
  %10007 = getelementptr inbounds %struct.Reg, %struct.Reg* %10006, i32 0, i32 0
  %RDX.i1915 = bitcast %union.anon* %10007 to i64*
  %10008 = load i64, i64* %RDX.i1915
  %10009 = load i64, i64* %PC.i1914
  %10010 = add i64 %10009, 3
  store i64 %10010, i64* %PC.i1914
  %10011 = trunc i64 %10008 to i32
  %10012 = sub i32 %10011, 1
  %10013 = zext i32 %10012 to i64
  store i64 %10013, i64* %RDX.i1915, align 8
  %10014 = icmp ult i32 %10011, 1
  %10015 = zext i1 %10014 to i8
  %10016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10015, i8* %10016, align 1
  %10017 = and i32 %10012, 255
  %10018 = call i32 @llvm.ctpop.i32(i32 %10017)
  %10019 = trunc i32 %10018 to i8
  %10020 = and i8 %10019, 1
  %10021 = xor i8 %10020, 1
  %10022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10021, i8* %10022, align 1
  %10023 = xor i64 1, %10008
  %10024 = trunc i64 %10023 to i32
  %10025 = xor i32 %10024, %10012
  %10026 = lshr i32 %10025, 4
  %10027 = trunc i32 %10026 to i8
  %10028 = and i8 %10027, 1
  %10029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10028, i8* %10029, align 1
  %10030 = icmp eq i32 %10012, 0
  %10031 = zext i1 %10030 to i8
  %10032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10031, i8* %10032, align 1
  %10033 = lshr i32 %10012, 31
  %10034 = trunc i32 %10033 to i8
  %10035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10034, i8* %10035, align 1
  %10036 = lshr i32 %10011, 31
  %10037 = xor i32 %10033, %10036
  %10038 = add i32 %10037, %10036
  %10039 = icmp eq i32 %10038, 2
  %10040 = zext i1 %10039 to i8
  %10041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10040, i8* %10041, align 1
  store %struct.Memory* %loadMem_476080, %struct.Memory** %MEMORY
  %loadMem_476083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10043 = getelementptr inbounds %struct.GPR, %struct.GPR* %10042, i32 0, i32 33
  %10044 = getelementptr inbounds %struct.Reg, %struct.Reg* %10043, i32 0, i32 0
  %PC.i1911 = bitcast %union.anon* %10044 to i64*
  %10045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10046 = getelementptr inbounds %struct.GPR, %struct.GPR* %10045, i32 0, i32 7
  %10047 = getelementptr inbounds %struct.Reg, %struct.Reg* %10046, i32 0, i32 0
  %EDX.i1912 = bitcast %union.anon* %10047 to i32*
  %10048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10049 = getelementptr inbounds %struct.GPR, %struct.GPR* %10048, i32 0, i32 15
  %10050 = getelementptr inbounds %struct.Reg, %struct.Reg* %10049, i32 0, i32 0
  %RBP.i1913 = bitcast %union.anon* %10050 to i64*
  %10051 = load i64, i64* %RBP.i1913
  %10052 = sub i64 %10051, 40
  %10053 = load i32, i32* %EDX.i1912
  %10054 = zext i32 %10053 to i64
  %10055 = load i64, i64* %PC.i1911
  %10056 = add i64 %10055, 3
  store i64 %10056, i64* %PC.i1911
  %10057 = inttoptr i64 %10052 to i32*
  store i32 %10053, i32* %10057
  store %struct.Memory* %loadMem_476083, %struct.Memory** %MEMORY
  br label %block_.L_476086

block_.L_476086:                                  ; preds = %block_4760b0, %routine_idivl__ecx.exit1918
  %loadMem_476086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10059 = getelementptr inbounds %struct.GPR, %struct.GPR* %10058, i32 0, i32 33
  %10060 = getelementptr inbounds %struct.Reg, %struct.Reg* %10059, i32 0, i32 0
  %PC.i1909 = bitcast %union.anon* %10060 to i64*
  %10061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10062 = getelementptr inbounds %struct.GPR, %struct.GPR* %10061, i32 0, i32 1
  %10063 = getelementptr inbounds %struct.Reg, %struct.Reg* %10062, i32 0, i32 0
  %RAX.i1910 = bitcast %union.anon* %10063 to i64*
  %10064 = load i64, i64* %PC.i1909
  %10065 = add i64 %10064, 5
  store i64 %10065, i64* %PC.i1909
  store i64 20, i64* %RAX.i1910, align 8
  store %struct.Memory* %loadMem_476086, %struct.Memory** %MEMORY
  %loadMem_47608b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10067 = getelementptr inbounds %struct.GPR, %struct.GPR* %10066, i32 0, i32 33
  %10068 = getelementptr inbounds %struct.Reg, %struct.Reg* %10067, i32 0, i32 0
  %PC.i1906 = bitcast %union.anon* %10068 to i64*
  %10069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10070 = getelementptr inbounds %struct.GPR, %struct.GPR* %10069, i32 0, i32 5
  %10071 = getelementptr inbounds %struct.Reg, %struct.Reg* %10070, i32 0, i32 0
  %RCX.i1907 = bitcast %union.anon* %10071 to i64*
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10073 = getelementptr inbounds %struct.GPR, %struct.GPR* %10072, i32 0, i32 15
  %10074 = getelementptr inbounds %struct.Reg, %struct.Reg* %10073, i32 0, i32 0
  %RBP.i1908 = bitcast %union.anon* %10074 to i64*
  %10075 = load i64, i64* %RBP.i1908
  %10076 = sub i64 %10075, 40
  %10077 = load i64, i64* %PC.i1906
  %10078 = add i64 %10077, 3
  store i64 %10078, i64* %PC.i1906
  %10079 = inttoptr i64 %10076 to i32*
  %10080 = load i32, i32* %10079
  %10081 = zext i32 %10080 to i64
  store i64 %10081, i64* %RCX.i1907, align 8
  store %struct.Memory* %loadMem_47608b, %struct.Memory** %MEMORY
  %loadMem_47608e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10083 = getelementptr inbounds %struct.GPR, %struct.GPR* %10082, i32 0, i32 33
  %10084 = getelementptr inbounds %struct.Reg, %struct.Reg* %10083, i32 0, i32 0
  %PC.i1903 = bitcast %union.anon* %10084 to i64*
  %10085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10086 = getelementptr inbounds %struct.GPR, %struct.GPR* %10085, i32 0, i32 7
  %10087 = getelementptr inbounds %struct.Reg, %struct.Reg* %10086, i32 0, i32 0
  %RDX.i1904 = bitcast %union.anon* %10087 to i64*
  %10088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10089 = getelementptr inbounds %struct.GPR, %struct.GPR* %10088, i32 0, i32 15
  %10090 = getelementptr inbounds %struct.Reg, %struct.Reg* %10089, i32 0, i32 0
  %RBP.i1905 = bitcast %union.anon* %10090 to i64*
  %10091 = load i64, i64* %RBP.i1905
  %10092 = sub i64 %10091, 208
  %10093 = load i64, i64* %PC.i1903
  %10094 = add i64 %10093, 6
  store i64 %10094, i64* %PC.i1903
  %10095 = inttoptr i64 %10092 to i32*
  %10096 = load i32, i32* %10095
  %10097 = zext i32 %10096 to i64
  store i64 %10097, i64* %RDX.i1904, align 8
  store %struct.Memory* %loadMem_47608e, %struct.Memory** %MEMORY
  %loadMem_476094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10099 = getelementptr inbounds %struct.GPR, %struct.GPR* %10098, i32 0, i32 33
  %10100 = getelementptr inbounds %struct.Reg, %struct.Reg* %10099, i32 0, i32 0
  %PC.i1900 = bitcast %union.anon* %10100 to i64*
  %10101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10102 = getelementptr inbounds %struct.GPR, %struct.GPR* %10101, i32 0, i32 1
  %10103 = getelementptr inbounds %struct.Reg, %struct.Reg* %10102, i32 0, i32 0
  %EAX.i1901 = bitcast %union.anon* %10103 to i32*
  %10104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10105 = getelementptr inbounds %struct.GPR, %struct.GPR* %10104, i32 0, i32 15
  %10106 = getelementptr inbounds %struct.Reg, %struct.Reg* %10105, i32 0, i32 0
  %RBP.i1902 = bitcast %union.anon* %10106 to i64*
  %10107 = load i64, i64* %RBP.i1902
  %10108 = sub i64 %10107, 1188
  %10109 = load i32, i32* %EAX.i1901
  %10110 = zext i32 %10109 to i64
  %10111 = load i64, i64* %PC.i1900
  %10112 = add i64 %10111, 6
  store i64 %10112, i64* %PC.i1900
  %10113 = inttoptr i64 %10108 to i32*
  store i32 %10109, i32* %10113
  store %struct.Memory* %loadMem_476094, %struct.Memory** %MEMORY
  %loadMem_47609a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10115 = getelementptr inbounds %struct.GPR, %struct.GPR* %10114, i32 0, i32 33
  %10116 = getelementptr inbounds %struct.Reg, %struct.Reg* %10115, i32 0, i32 0
  %PC.i1897 = bitcast %union.anon* %10116 to i64*
  %10117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10118 = getelementptr inbounds %struct.GPR, %struct.GPR* %10117, i32 0, i32 7
  %10119 = getelementptr inbounds %struct.Reg, %struct.Reg* %10118, i32 0, i32 0
  %EDX.i1898 = bitcast %union.anon* %10119 to i32*
  %10120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10121 = getelementptr inbounds %struct.GPR, %struct.GPR* %10120, i32 0, i32 1
  %10122 = getelementptr inbounds %struct.Reg, %struct.Reg* %10121, i32 0, i32 0
  %RAX.i1899 = bitcast %union.anon* %10122 to i64*
  %10123 = load i32, i32* %EDX.i1898
  %10124 = zext i32 %10123 to i64
  %10125 = load i64, i64* %PC.i1897
  %10126 = add i64 %10125, 2
  store i64 %10126, i64* %PC.i1897
  %10127 = and i64 %10124, 4294967295
  store i64 %10127, i64* %RAX.i1899, align 8
  store %struct.Memory* %loadMem_47609a, %struct.Memory** %MEMORY
  %loadMem_47609c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10129 = getelementptr inbounds %struct.GPR, %struct.GPR* %10128, i32 0, i32 33
  %10130 = getelementptr inbounds %struct.Reg, %struct.Reg* %10129, i32 0, i32 0
  %PC.i1896 = bitcast %union.anon* %10130 to i64*
  %10131 = load i64, i64* %PC.i1896
  %10132 = add i64 %10131, 1
  store i64 %10132, i64* %PC.i1896
  %10133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10135 = bitcast %union.anon* %10134 to i32*
  %10136 = load i32, i32* %10135, align 8
  %10137 = sext i32 %10136 to i64
  %10138 = lshr i64 %10137, 32
  store i64 %10138, i64* %10133, align 8
  store %struct.Memory* %loadMem_47609c, %struct.Memory** %MEMORY
  %loadMem_47609d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10140 = getelementptr inbounds %struct.GPR, %struct.GPR* %10139, i32 0, i32 33
  %10141 = getelementptr inbounds %struct.Reg, %struct.Reg* %10140, i32 0, i32 0
  %PC.i1893 = bitcast %union.anon* %10141 to i64*
  %10142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10143 = getelementptr inbounds %struct.GPR, %struct.GPR* %10142, i32 0, i32 9
  %10144 = getelementptr inbounds %struct.Reg, %struct.Reg* %10143, i32 0, i32 0
  %RSI.i1894 = bitcast %union.anon* %10144 to i64*
  %10145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10146 = getelementptr inbounds %struct.GPR, %struct.GPR* %10145, i32 0, i32 15
  %10147 = getelementptr inbounds %struct.Reg, %struct.Reg* %10146, i32 0, i32 0
  %RBP.i1895 = bitcast %union.anon* %10147 to i64*
  %10148 = load i64, i64* %RBP.i1895
  %10149 = sub i64 %10148, 1188
  %10150 = load i64, i64* %PC.i1893
  %10151 = add i64 %10150, 6
  store i64 %10151, i64* %PC.i1893
  %10152 = inttoptr i64 %10149 to i32*
  %10153 = load i32, i32* %10152
  %10154 = zext i32 %10153 to i64
  store i64 %10154, i64* %RSI.i1894, align 8
  store %struct.Memory* %loadMem_47609d, %struct.Memory** %MEMORY
  %loadMem_4760a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10156 = getelementptr inbounds %struct.GPR, %struct.GPR* %10155, i32 0, i32 33
  %10157 = getelementptr inbounds %struct.Reg, %struct.Reg* %10156, i32 0, i32 0
  %PC.i1887 = bitcast %union.anon* %10157 to i64*
  %10158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10159 = getelementptr inbounds %struct.GPR, %struct.GPR* %10158, i32 0, i32 9
  %10160 = getelementptr inbounds %struct.Reg, %struct.Reg* %10159, i32 0, i32 0
  %ESI.i1888 = bitcast %union.anon* %10160 to i32*
  %10161 = load i32, i32* %ESI.i1888
  %10162 = zext i32 %10161 to i64
  %10163 = load i64, i64* %PC.i1887
  %10164 = add i64 %10163, 2
  store i64 %10164, i64* %PC.i1887
  %10165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10166 = bitcast %union.anon* %10165 to i32*
  %10167 = load i32, i32* %10166, align 8
  %10168 = zext i32 %10167 to i64
  %10169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %10170 = bitcast %union.anon* %10169 to i32*
  %10171 = load i32, i32* %10170, align 8
  %10172 = zext i32 %10171 to i64
  %10173 = shl i64 %10162, 32
  %10174 = ashr exact i64 %10173, 32
  %10175 = shl i64 %10172, 32
  %10176 = or i64 %10175, %10168
  %10177 = sdiv i64 %10176, %10174
  %10178 = shl i64 %10177, 32
  %10179 = ashr exact i64 %10178, 32
  %10180 = icmp eq i64 %10177, %10179
  br i1 %10180, label %10185, label %10181

; <label>:10181:                                  ; preds = %block_.L_476086
  %10182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10183 = load i64, i64* %10182, align 8
  %10184 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %10183, %struct.Memory* %loadMem_4760a3)
  br label %routine_idivl__esi.exit1889

; <label>:10185:                                  ; preds = %block_.L_476086
  %10186 = srem i64 %10176, %10174
  %10187 = getelementptr inbounds %union.anon, %union.anon* %10165, i64 0, i32 0
  %10188 = and i64 %10177, 4294967295
  store i64 %10188, i64* %10187, align 8
  %10189 = getelementptr inbounds %union.anon, %union.anon* %10169, i64 0, i32 0
  %10190 = and i64 %10186, 4294967295
  store i64 %10190, i64* %10189, align 8
  %10191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10191, align 1
  %10192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %10192, align 1
  %10193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10193, align 1
  %10194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10194, align 1
  %10195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10195, align 1
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10196, align 1
  br label %routine_idivl__esi.exit1889

routine_idivl__esi.exit1889:                      ; preds = %10181, %10185
  %10197 = phi %struct.Memory* [ %10184, %10181 ], [ %loadMem_4760a3, %10185 ]
  store %struct.Memory* %10197, %struct.Memory** %MEMORY
  %loadMem_4760a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10199 = getelementptr inbounds %struct.GPR, %struct.GPR* %10198, i32 0, i32 33
  %10200 = getelementptr inbounds %struct.Reg, %struct.Reg* %10199, i32 0, i32 0
  %PC.i1885 = bitcast %union.anon* %10200 to i64*
  %10201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10202 = getelementptr inbounds %struct.GPR, %struct.GPR* %10201, i32 0, i32 7
  %10203 = getelementptr inbounds %struct.Reg, %struct.Reg* %10202, i32 0, i32 0
  %RDX.i1886 = bitcast %union.anon* %10203 to i64*
  %10204 = load i64, i64* %RDX.i1886
  %10205 = load i64, i64* %PC.i1885
  %10206 = add i64 %10205, 3
  store i64 %10206, i64* %PC.i1885
  %10207 = trunc i64 %10204 to i32
  %10208 = sub i32 %10207, 1
  %10209 = zext i32 %10208 to i64
  store i64 %10209, i64* %RDX.i1886, align 8
  %10210 = icmp ult i32 %10207, 1
  %10211 = zext i1 %10210 to i8
  %10212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10211, i8* %10212, align 1
  %10213 = and i32 %10208, 255
  %10214 = call i32 @llvm.ctpop.i32(i32 %10213)
  %10215 = trunc i32 %10214 to i8
  %10216 = and i8 %10215, 1
  %10217 = xor i8 %10216, 1
  %10218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10217, i8* %10218, align 1
  %10219 = xor i64 1, %10204
  %10220 = trunc i64 %10219 to i32
  %10221 = xor i32 %10220, %10208
  %10222 = lshr i32 %10221, 4
  %10223 = trunc i32 %10222 to i8
  %10224 = and i8 %10223, 1
  %10225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10224, i8* %10225, align 1
  %10226 = icmp eq i32 %10208, 0
  %10227 = zext i1 %10226 to i8
  %10228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10227, i8* %10228, align 1
  %10229 = lshr i32 %10208, 31
  %10230 = trunc i32 %10229 to i8
  %10231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10230, i8* %10231, align 1
  %10232 = lshr i32 %10207, 31
  %10233 = xor i32 %10229, %10232
  %10234 = add i32 %10233, %10232
  %10235 = icmp eq i32 %10234, 2
  %10236 = zext i1 %10235 to i8
  %10237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10236, i8* %10237, align 1
  store %struct.Memory* %loadMem_4760a5, %struct.Memory** %MEMORY
  %loadMem_4760a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10239 = getelementptr inbounds %struct.GPR, %struct.GPR* %10238, i32 0, i32 33
  %10240 = getelementptr inbounds %struct.Reg, %struct.Reg* %10239, i32 0, i32 0
  %PC.i1882 = bitcast %union.anon* %10240 to i64*
  %10241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10242 = getelementptr inbounds %struct.GPR, %struct.GPR* %10241, i32 0, i32 5
  %10243 = getelementptr inbounds %struct.Reg, %struct.Reg* %10242, i32 0, i32 0
  %ECX.i1883 = bitcast %union.anon* %10243 to i32*
  %10244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10245 = getelementptr inbounds %struct.GPR, %struct.GPR* %10244, i32 0, i32 7
  %10246 = getelementptr inbounds %struct.Reg, %struct.Reg* %10245, i32 0, i32 0
  %EDX.i1884 = bitcast %union.anon* %10246 to i32*
  %10247 = load i32, i32* %ECX.i1883
  %10248 = zext i32 %10247 to i64
  %10249 = load i32, i32* %EDX.i1884
  %10250 = zext i32 %10249 to i64
  %10251 = load i64, i64* %PC.i1882
  %10252 = add i64 %10251, 2
  store i64 %10252, i64* %PC.i1882
  %10253 = sub i32 %10247, %10249
  %10254 = icmp ult i32 %10247, %10249
  %10255 = zext i1 %10254 to i8
  %10256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10255, i8* %10256, align 1
  %10257 = and i32 %10253, 255
  %10258 = call i32 @llvm.ctpop.i32(i32 %10257)
  %10259 = trunc i32 %10258 to i8
  %10260 = and i8 %10259, 1
  %10261 = xor i8 %10260, 1
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10261, i8* %10262, align 1
  %10263 = xor i64 %10250, %10248
  %10264 = trunc i64 %10263 to i32
  %10265 = xor i32 %10264, %10253
  %10266 = lshr i32 %10265, 4
  %10267 = trunc i32 %10266 to i8
  %10268 = and i8 %10267, 1
  %10269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10268, i8* %10269, align 1
  %10270 = icmp eq i32 %10253, 0
  %10271 = zext i1 %10270 to i8
  %10272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10271, i8* %10272, align 1
  %10273 = lshr i32 %10253, 31
  %10274 = trunc i32 %10273 to i8
  %10275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10274, i8* %10275, align 1
  %10276 = lshr i32 %10247, 31
  %10277 = lshr i32 %10249, 31
  %10278 = xor i32 %10277, %10276
  %10279 = xor i32 %10273, %10276
  %10280 = add i32 %10279, %10278
  %10281 = icmp eq i32 %10280, 2
  %10282 = zext i1 %10281 to i8
  %10283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10282, i8* %10283, align 1
  store %struct.Memory* %loadMem_4760a8, %struct.Memory** %MEMORY
  %loadMem_4760aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10285 = getelementptr inbounds %struct.GPR, %struct.GPR* %10284, i32 0, i32 33
  %10286 = getelementptr inbounds %struct.Reg, %struct.Reg* %10285, i32 0, i32 0
  %PC.i1881 = bitcast %union.anon* %10286 to i64*
  %10287 = load i64, i64* %PC.i1881
  %10288 = add i64 %10287, 44
  %10289 = load i64, i64* %PC.i1881
  %10290 = add i64 %10289, 6
  %10291 = load i64, i64* %PC.i1881
  %10292 = add i64 %10291, 6
  store i64 %10292, i64* %PC.i1881
  %10293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10294 = load i8, i8* %10293, align 1
  %10295 = icmp eq i8 %10294, 0
  %10296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10297 = load i8, i8* %10296, align 1
  %10298 = icmp ne i8 %10297, 0
  %10299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10300 = load i8, i8* %10299, align 1
  %10301 = icmp ne i8 %10300, 0
  %10302 = xor i1 %10298, %10301
  %10303 = xor i1 %10302, true
  %10304 = and i1 %10295, %10303
  %10305 = zext i1 %10304 to i8
  store i8 %10305, i8* %BRANCH_TAKEN, align 1
  %10306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10307 = select i1 %10304, i64 %10288, i64 %10290
  store i64 %10307, i64* %10306, align 8
  store %struct.Memory* %loadMem_4760aa, %struct.Memory** %MEMORY
  %loadBr_4760aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4760aa = icmp eq i8 %loadBr_4760aa, 1
  br i1 %cmpBr_4760aa, label %block_.L_4760d6, label %block_4760b0

block_4760b0:                                     ; preds = %routine_idivl__esi.exit1889
  %loadMem_4760b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10309 = getelementptr inbounds %struct.GPR, %struct.GPR* %10308, i32 0, i32 33
  %10310 = getelementptr inbounds %struct.Reg, %struct.Reg* %10309, i32 0, i32 0
  %PC.i1878 = bitcast %union.anon* %10310 to i64*
  %10311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10312 = getelementptr inbounds %struct.GPR, %struct.GPR* %10311, i32 0, i32 1
  %10313 = getelementptr inbounds %struct.Reg, %struct.Reg* %10312, i32 0, i32 0
  %RAX.i1879 = bitcast %union.anon* %10313 to i64*
  %10314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10315 = getelementptr inbounds %struct.GPR, %struct.GPR* %10314, i32 0, i32 15
  %10316 = getelementptr inbounds %struct.Reg, %struct.Reg* %10315, i32 0, i32 0
  %RBP.i1880 = bitcast %union.anon* %10316 to i64*
  %10317 = load i64, i64* %RBP.i1880
  %10318 = sub i64 %10317, 220
  %10319 = load i64, i64* %PC.i1878
  %10320 = add i64 %10319, 7
  store i64 %10320, i64* %PC.i1878
  %10321 = inttoptr i64 %10318 to i32*
  %10322 = load i32, i32* %10321
  %10323 = sext i32 %10322 to i64
  %10324 = mul i64 %10323, 20
  %10325 = trunc i64 %10324 to i32
  %10326 = and i64 %10324, 4294967295
  store i64 %10326, i64* %RAX.i1879, align 8
  %10327 = shl i64 %10324, 32
  %10328 = ashr exact i64 %10327, 32
  %10329 = icmp ne i64 %10328, %10324
  %10330 = zext i1 %10329 to i8
  %10331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10330, i8* %10331, align 1
  %10332 = and i32 %10325, 255
  %10333 = call i32 @llvm.ctpop.i32(i32 %10332)
  %10334 = trunc i32 %10333 to i8
  %10335 = and i8 %10334, 1
  %10336 = xor i8 %10335, 1
  %10337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10336, i8* %10337, align 1
  %10338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10338, align 1
  %10339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10339, align 1
  %10340 = lshr i32 %10325, 31
  %10341 = trunc i32 %10340 to i8
  %10342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10341, i8* %10342, align 1
  %10343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10330, i8* %10343, align 1
  store %struct.Memory* %loadMem_4760b0, %struct.Memory** %MEMORY
  %loadMem_4760b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10345 = getelementptr inbounds %struct.GPR, %struct.GPR* %10344, i32 0, i32 33
  %10346 = getelementptr inbounds %struct.Reg, %struct.Reg* %10345, i32 0, i32 0
  %PC.i1876 = bitcast %union.anon* %10346 to i64*
  %10347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10348 = getelementptr inbounds %struct.GPR, %struct.GPR* %10347, i32 0, i32 1
  %10349 = getelementptr inbounds %struct.Reg, %struct.Reg* %10348, i32 0, i32 0
  %RAX.i1877 = bitcast %union.anon* %10349 to i64*
  %10350 = load i64, i64* %RAX.i1877
  %10351 = load i64, i64* %PC.i1876
  %10352 = add i64 %10351, 3
  store i64 %10352, i64* %PC.i1876
  %10353 = trunc i64 %10350 to i32
  %10354 = add i32 21, %10353
  %10355 = zext i32 %10354 to i64
  store i64 %10355, i64* %RAX.i1877, align 8
  %10356 = icmp ult i32 %10354, %10353
  %10357 = icmp ult i32 %10354, 21
  %10358 = or i1 %10356, %10357
  %10359 = zext i1 %10358 to i8
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10359, i8* %10360, align 1
  %10361 = and i32 %10354, 255
  %10362 = call i32 @llvm.ctpop.i32(i32 %10361)
  %10363 = trunc i32 %10362 to i8
  %10364 = and i8 %10363, 1
  %10365 = xor i8 %10364, 1
  %10366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10365, i8* %10366, align 1
  %10367 = xor i64 21, %10350
  %10368 = trunc i64 %10367 to i32
  %10369 = xor i32 %10368, %10354
  %10370 = lshr i32 %10369, 4
  %10371 = trunc i32 %10370 to i8
  %10372 = and i8 %10371, 1
  %10373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10372, i8* %10373, align 1
  %10374 = icmp eq i32 %10354, 0
  %10375 = zext i1 %10374 to i8
  %10376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10375, i8* %10376, align 1
  %10377 = lshr i32 %10354, 31
  %10378 = trunc i32 %10377 to i8
  %10379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10378, i8* %10379, align 1
  %10380 = lshr i32 %10353, 31
  %10381 = xor i32 %10377, %10380
  %10382 = add i32 %10381, %10377
  %10383 = icmp eq i32 %10382, 2
  %10384 = zext i1 %10383 to i8
  %10385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10384, i8* %10385, align 1
  store %struct.Memory* %loadMem_4760b7, %struct.Memory** %MEMORY
  %loadMem_4760ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %10386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10387 = getelementptr inbounds %struct.GPR, %struct.GPR* %10386, i32 0, i32 33
  %10388 = getelementptr inbounds %struct.Reg, %struct.Reg* %10387, i32 0, i32 0
  %PC.i1873 = bitcast %union.anon* %10388 to i64*
  %10389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10390 = getelementptr inbounds %struct.GPR, %struct.GPR* %10389, i32 0, i32 1
  %10391 = getelementptr inbounds %struct.Reg, %struct.Reg* %10390, i32 0, i32 0
  %RAX.i1874 = bitcast %union.anon* %10391 to i64*
  %10392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10393 = getelementptr inbounds %struct.GPR, %struct.GPR* %10392, i32 0, i32 15
  %10394 = getelementptr inbounds %struct.Reg, %struct.Reg* %10393, i32 0, i32 0
  %RBP.i1875 = bitcast %union.anon* %10394 to i64*
  %10395 = load i64, i64* %RAX.i1874
  %10396 = load i64, i64* %RBP.i1875
  %10397 = sub i64 %10396, 40
  %10398 = load i64, i64* %PC.i1873
  %10399 = add i64 %10398, 3
  store i64 %10399, i64* %PC.i1873
  %10400 = trunc i64 %10395 to i32
  %10401 = inttoptr i64 %10397 to i32*
  %10402 = load i32, i32* %10401
  %10403 = add i32 %10402, %10400
  %10404 = zext i32 %10403 to i64
  store i64 %10404, i64* %RAX.i1874, align 8
  %10405 = icmp ult i32 %10403, %10400
  %10406 = icmp ult i32 %10403, %10402
  %10407 = or i1 %10405, %10406
  %10408 = zext i1 %10407 to i8
  %10409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10408, i8* %10409, align 1
  %10410 = and i32 %10403, 255
  %10411 = call i32 @llvm.ctpop.i32(i32 %10410)
  %10412 = trunc i32 %10411 to i8
  %10413 = and i8 %10412, 1
  %10414 = xor i8 %10413, 1
  %10415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10414, i8* %10415, align 1
  %10416 = xor i32 %10402, %10400
  %10417 = xor i32 %10416, %10403
  %10418 = lshr i32 %10417, 4
  %10419 = trunc i32 %10418 to i8
  %10420 = and i8 %10419, 1
  %10421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10420, i8* %10421, align 1
  %10422 = icmp eq i32 %10403, 0
  %10423 = zext i1 %10422 to i8
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10423, i8* %10424, align 1
  %10425 = lshr i32 %10403, 31
  %10426 = trunc i32 %10425 to i8
  %10427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10426, i8* %10427, align 1
  %10428 = lshr i32 %10400, 31
  %10429 = lshr i32 %10402, 31
  %10430 = xor i32 %10425, %10428
  %10431 = xor i32 %10425, %10429
  %10432 = add i32 %10430, %10431
  %10433 = icmp eq i32 %10432, 2
  %10434 = zext i1 %10433 to i8
  %10435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10434, i8* %10435, align 1
  store %struct.Memory* %loadMem_4760ba, %struct.Memory** %MEMORY
  %loadMem_4760bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10437 = getelementptr inbounds %struct.GPR, %struct.GPR* %10436, i32 0, i32 33
  %10438 = getelementptr inbounds %struct.Reg, %struct.Reg* %10437, i32 0, i32 0
  %PC.i1870 = bitcast %union.anon* %10438 to i64*
  %10439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10440 = getelementptr inbounds %struct.GPR, %struct.GPR* %10439, i32 0, i32 1
  %10441 = getelementptr inbounds %struct.Reg, %struct.Reg* %10440, i32 0, i32 0
  %EAX.i1871 = bitcast %union.anon* %10441 to i32*
  %10442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10443 = getelementptr inbounds %struct.GPR, %struct.GPR* %10442, i32 0, i32 5
  %10444 = getelementptr inbounds %struct.Reg, %struct.Reg* %10443, i32 0, i32 0
  %RCX.i1872 = bitcast %union.anon* %10444 to i64*
  %10445 = load i32, i32* %EAX.i1871
  %10446 = zext i32 %10445 to i64
  %10447 = load i64, i64* %PC.i1870
  %10448 = add i64 %10447, 3
  store i64 %10448, i64* %PC.i1870
  %10449 = shl i64 %10446, 32
  %10450 = ashr exact i64 %10449, 32
  store i64 %10450, i64* %RCX.i1872, align 8
  store %struct.Memory* %loadMem_4760bd, %struct.Memory** %MEMORY
  %loadMem_4760c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10452 = getelementptr inbounds %struct.GPR, %struct.GPR* %10451, i32 0, i32 33
  %10453 = getelementptr inbounds %struct.Reg, %struct.Reg* %10452, i32 0, i32 0
  %PC.i1867 = bitcast %union.anon* %10453 to i64*
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10455 = getelementptr inbounds %struct.GPR, %struct.GPR* %10454, i32 0, i32 5
  %10456 = getelementptr inbounds %struct.Reg, %struct.Reg* %10455, i32 0, i32 0
  %RCX.i1868 = bitcast %union.anon* %10456 to i64*
  %10457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10458 = getelementptr inbounds %struct.GPR, %struct.GPR* %10457, i32 0, i32 15
  %10459 = getelementptr inbounds %struct.Reg, %struct.Reg* %10458, i32 0, i32 0
  %RBP.i1869 = bitcast %union.anon* %10459 to i64*
  %10460 = load i64, i64* %RBP.i1869
  %10461 = load i64, i64* %RCX.i1868
  %10462 = add i64 %10460, -1040
  %10463 = add i64 %10462, %10461
  %10464 = load i64, i64* %PC.i1867
  %10465 = add i64 %10464, 8
  store i64 %10465, i64* %PC.i1867
  %10466 = inttoptr i64 %10463 to i8*
  store i8 1, i8* %10466
  store %struct.Memory* %loadMem_4760c0, %struct.Memory** %MEMORY
  %loadMem_4760c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10468 = getelementptr inbounds %struct.GPR, %struct.GPR* %10467, i32 0, i32 33
  %10469 = getelementptr inbounds %struct.Reg, %struct.Reg* %10468, i32 0, i32 0
  %PC.i1864 = bitcast %union.anon* %10469 to i64*
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10471 = getelementptr inbounds %struct.GPR, %struct.GPR* %10470, i32 0, i32 1
  %10472 = getelementptr inbounds %struct.Reg, %struct.Reg* %10471, i32 0, i32 0
  %RAX.i1865 = bitcast %union.anon* %10472 to i64*
  %10473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10474 = getelementptr inbounds %struct.GPR, %struct.GPR* %10473, i32 0, i32 15
  %10475 = getelementptr inbounds %struct.Reg, %struct.Reg* %10474, i32 0, i32 0
  %RBP.i1866 = bitcast %union.anon* %10475 to i64*
  %10476 = load i64, i64* %RBP.i1866
  %10477 = sub i64 %10476, 40
  %10478 = load i64, i64* %PC.i1864
  %10479 = add i64 %10478, 3
  store i64 %10479, i64* %PC.i1864
  %10480 = inttoptr i64 %10477 to i32*
  %10481 = load i32, i32* %10480
  %10482 = zext i32 %10481 to i64
  store i64 %10482, i64* %RAX.i1865, align 8
  store %struct.Memory* %loadMem_4760c8, %struct.Memory** %MEMORY
  %loadMem_4760cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10484 = getelementptr inbounds %struct.GPR, %struct.GPR* %10483, i32 0, i32 33
  %10485 = getelementptr inbounds %struct.Reg, %struct.Reg* %10484, i32 0, i32 0
  %PC.i1862 = bitcast %union.anon* %10485 to i64*
  %10486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10487 = getelementptr inbounds %struct.GPR, %struct.GPR* %10486, i32 0, i32 1
  %10488 = getelementptr inbounds %struct.Reg, %struct.Reg* %10487, i32 0, i32 0
  %RAX.i1863 = bitcast %union.anon* %10488 to i64*
  %10489 = load i64, i64* %RAX.i1863
  %10490 = load i64, i64* %PC.i1862
  %10491 = add i64 %10490, 3
  store i64 %10491, i64* %PC.i1862
  %10492 = trunc i64 %10489 to i32
  %10493 = add i32 1, %10492
  %10494 = zext i32 %10493 to i64
  store i64 %10494, i64* %RAX.i1863, align 8
  %10495 = icmp ult i32 %10493, %10492
  %10496 = icmp ult i32 %10493, 1
  %10497 = or i1 %10495, %10496
  %10498 = zext i1 %10497 to i8
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10498, i8* %10499, align 1
  %10500 = and i32 %10493, 255
  %10501 = call i32 @llvm.ctpop.i32(i32 %10500)
  %10502 = trunc i32 %10501 to i8
  %10503 = and i8 %10502, 1
  %10504 = xor i8 %10503, 1
  %10505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10504, i8* %10505, align 1
  %10506 = xor i64 1, %10489
  %10507 = trunc i64 %10506 to i32
  %10508 = xor i32 %10507, %10493
  %10509 = lshr i32 %10508, 4
  %10510 = trunc i32 %10509 to i8
  %10511 = and i8 %10510, 1
  %10512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10511, i8* %10512, align 1
  %10513 = icmp eq i32 %10493, 0
  %10514 = zext i1 %10513 to i8
  %10515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10514, i8* %10515, align 1
  %10516 = lshr i32 %10493, 31
  %10517 = trunc i32 %10516 to i8
  %10518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10517, i8* %10518, align 1
  %10519 = lshr i32 %10492, 31
  %10520 = xor i32 %10516, %10519
  %10521 = add i32 %10520, %10516
  %10522 = icmp eq i32 %10521, 2
  %10523 = zext i1 %10522 to i8
  %10524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10523, i8* %10524, align 1
  store %struct.Memory* %loadMem_4760cb, %struct.Memory** %MEMORY
  %loadMem_4760ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %10525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10526 = getelementptr inbounds %struct.GPR, %struct.GPR* %10525, i32 0, i32 33
  %10527 = getelementptr inbounds %struct.Reg, %struct.Reg* %10526, i32 0, i32 0
  %PC.i1859 = bitcast %union.anon* %10527 to i64*
  %10528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10529 = getelementptr inbounds %struct.GPR, %struct.GPR* %10528, i32 0, i32 1
  %10530 = getelementptr inbounds %struct.Reg, %struct.Reg* %10529, i32 0, i32 0
  %EAX.i1860 = bitcast %union.anon* %10530 to i32*
  %10531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10532 = getelementptr inbounds %struct.GPR, %struct.GPR* %10531, i32 0, i32 15
  %10533 = getelementptr inbounds %struct.Reg, %struct.Reg* %10532, i32 0, i32 0
  %RBP.i1861 = bitcast %union.anon* %10533 to i64*
  %10534 = load i64, i64* %RBP.i1861
  %10535 = sub i64 %10534, 40
  %10536 = load i32, i32* %EAX.i1860
  %10537 = zext i32 %10536 to i64
  %10538 = load i64, i64* %PC.i1859
  %10539 = add i64 %10538, 3
  store i64 %10539, i64* %PC.i1859
  %10540 = inttoptr i64 %10535 to i32*
  store i32 %10536, i32* %10540
  store %struct.Memory* %loadMem_4760ce, %struct.Memory** %MEMORY
  %loadMem_4760d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10542 = getelementptr inbounds %struct.GPR, %struct.GPR* %10541, i32 0, i32 33
  %10543 = getelementptr inbounds %struct.Reg, %struct.Reg* %10542, i32 0, i32 0
  %PC.i1858 = bitcast %union.anon* %10543 to i64*
  %10544 = load i64, i64* %PC.i1858
  %10545 = add i64 %10544, -75
  %10546 = load i64, i64* %PC.i1858
  %10547 = add i64 %10546, 5
  store i64 %10547, i64* %PC.i1858
  %10548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10545, i64* %10548, align 8
  store %struct.Memory* %loadMem_4760d1, %struct.Memory** %MEMORY
  br label %block_.L_476086

block_.L_4760d6:                                  ; preds = %routine_idivl__esi.exit1889
  %loadMem_4760d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10550 = getelementptr inbounds %struct.GPR, %struct.GPR* %10549, i32 0, i32 33
  %10551 = getelementptr inbounds %struct.Reg, %struct.Reg* %10550, i32 0, i32 0
  %PC.i1856 = bitcast %union.anon* %10551 to i64*
  %10552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10553 = getelementptr inbounds %struct.GPR, %struct.GPR* %10552, i32 0, i32 1
  %10554 = getelementptr inbounds %struct.Reg, %struct.Reg* %10553, i32 0, i32 0
  %RAX.i1857 = bitcast %union.anon* %10554 to i64*
  %10555 = load i64, i64* %PC.i1856
  %10556 = add i64 %10555, 5
  store i64 %10556, i64* %PC.i1856
  store i64 20, i64* %RAX.i1857, align 8
  store %struct.Memory* %loadMem_4760d6, %struct.Memory** %MEMORY
  %loadMem_4760db = load %struct.Memory*, %struct.Memory** %MEMORY
  %10557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10558 = getelementptr inbounds %struct.GPR, %struct.GPR* %10557, i32 0, i32 33
  %10559 = getelementptr inbounds %struct.Reg, %struct.Reg* %10558, i32 0, i32 0
  %PC.i1853 = bitcast %union.anon* %10559 to i64*
  %10560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10561 = getelementptr inbounds %struct.GPR, %struct.GPR* %10560, i32 0, i32 5
  %10562 = getelementptr inbounds %struct.Reg, %struct.Reg* %10561, i32 0, i32 0
  %RCX.i1854 = bitcast %union.anon* %10562 to i64*
  %10563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10564 = getelementptr inbounds %struct.GPR, %struct.GPR* %10563, i32 0, i32 15
  %10565 = getelementptr inbounds %struct.Reg, %struct.Reg* %10564, i32 0, i32 0
  %RBP.i1855 = bitcast %union.anon* %10565 to i64*
  %10566 = load i64, i64* %RBP.i1855
  %10567 = sub i64 %10566, 212
  %10568 = load i64, i64* %PC.i1853
  %10569 = add i64 %10568, 6
  store i64 %10569, i64* %PC.i1853
  %10570 = inttoptr i64 %10567 to i32*
  %10571 = load i32, i32* %10570
  %10572 = zext i32 %10571 to i64
  store i64 %10572, i64* %RCX.i1854, align 8
  store %struct.Memory* %loadMem_4760db, %struct.Memory** %MEMORY
  %loadMem_4760e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10574 = getelementptr inbounds %struct.GPR, %struct.GPR* %10573, i32 0, i32 33
  %10575 = getelementptr inbounds %struct.Reg, %struct.Reg* %10574, i32 0, i32 0
  %PC.i1851 = bitcast %union.anon* %10575 to i64*
  %10576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10577 = getelementptr inbounds %struct.GPR, %struct.GPR* %10576, i32 0, i32 5
  %10578 = getelementptr inbounds %struct.Reg, %struct.Reg* %10577, i32 0, i32 0
  %RCX.i1852 = bitcast %union.anon* %10578 to i64*
  %10579 = load i64, i64* %RCX.i1852
  %10580 = load i64, i64* %PC.i1851
  %10581 = add i64 %10580, 3
  store i64 %10581, i64* %PC.i1851
  %10582 = trunc i64 %10579 to i32
  %10583 = sub i32 %10582, 1
  %10584 = zext i32 %10583 to i64
  store i64 %10584, i64* %RCX.i1852, align 8
  %10585 = icmp ult i32 %10582, 1
  %10586 = zext i1 %10585 to i8
  %10587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10586, i8* %10587, align 1
  %10588 = and i32 %10583, 255
  %10589 = call i32 @llvm.ctpop.i32(i32 %10588)
  %10590 = trunc i32 %10589 to i8
  %10591 = and i8 %10590, 1
  %10592 = xor i8 %10591, 1
  %10593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10592, i8* %10593, align 1
  %10594 = xor i64 1, %10579
  %10595 = trunc i64 %10594 to i32
  %10596 = xor i32 %10595, %10583
  %10597 = lshr i32 %10596, 4
  %10598 = trunc i32 %10597 to i8
  %10599 = and i8 %10598, 1
  %10600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10599, i8* %10600, align 1
  %10601 = icmp eq i32 %10583, 0
  %10602 = zext i1 %10601 to i8
  %10603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10602, i8* %10603, align 1
  %10604 = lshr i32 %10583, 31
  %10605 = trunc i32 %10604 to i8
  %10606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10605, i8* %10606, align 1
  %10607 = lshr i32 %10582, 31
  %10608 = xor i32 %10604, %10607
  %10609 = add i32 %10608, %10607
  %10610 = icmp eq i32 %10609, 2
  %10611 = zext i1 %10610 to i8
  %10612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10611, i8* %10612, align 1
  store %struct.Memory* %loadMem_4760e1, %struct.Memory** %MEMORY
  %loadMem_4760e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10614 = getelementptr inbounds %struct.GPR, %struct.GPR* %10613, i32 0, i32 33
  %10615 = getelementptr inbounds %struct.Reg, %struct.Reg* %10614, i32 0, i32 0
  %PC.i1848 = bitcast %union.anon* %10615 to i64*
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10617 = getelementptr inbounds %struct.GPR, %struct.GPR* %10616, i32 0, i32 5
  %10618 = getelementptr inbounds %struct.Reg, %struct.Reg* %10617, i32 0, i32 0
  %ECX.i1849 = bitcast %union.anon* %10618 to i32*
  %10619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10620 = getelementptr inbounds %struct.GPR, %struct.GPR* %10619, i32 0, i32 7
  %10621 = getelementptr inbounds %struct.Reg, %struct.Reg* %10620, i32 0, i32 0
  %RDX.i1850 = bitcast %union.anon* %10621 to i64*
  %10622 = load i32, i32* %ECX.i1849
  %10623 = zext i32 %10622 to i64
  %10624 = load i64, i64* %PC.i1848
  %10625 = add i64 %10624, 3
  store i64 %10625, i64* %PC.i1848
  %10626 = shl i64 %10623, 32
  %10627 = ashr exact i64 %10626, 32
  store i64 %10627, i64* %RDX.i1850, align 8
  store %struct.Memory* %loadMem_4760e4, %struct.Memory** %MEMORY
  %loadMem_4760e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10629 = getelementptr inbounds %struct.GPR, %struct.GPR* %10628, i32 0, i32 33
  %10630 = getelementptr inbounds %struct.Reg, %struct.Reg* %10629, i32 0, i32 0
  %PC.i1844 = bitcast %union.anon* %10630 to i64*
  %10631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10632 = getelementptr inbounds %struct.GPR, %struct.GPR* %10631, i32 0, i32 5
  %10633 = getelementptr inbounds %struct.Reg, %struct.Reg* %10632, i32 0, i32 0
  %RCX.i1845 = bitcast %union.anon* %10633 to i64*
  %10634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10635 = getelementptr inbounds %struct.GPR, %struct.GPR* %10634, i32 0, i32 7
  %10636 = getelementptr inbounds %struct.Reg, %struct.Reg* %10635, i32 0, i32 0
  %RDX.i1846 = bitcast %union.anon* %10636 to i64*
  %10637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10638 = getelementptr inbounds %struct.GPR, %struct.GPR* %10637, i32 0, i32 15
  %10639 = getelementptr inbounds %struct.Reg, %struct.Reg* %10638, i32 0, i32 0
  %RBP.i1847 = bitcast %union.anon* %10639 to i64*
  %10640 = load i64, i64* %RBP.i1847
  %10641 = load i64, i64* %RDX.i1846
  %10642 = mul i64 %10641, 4
  %10643 = add i64 %10640, -128
  %10644 = add i64 %10643, %10642
  %10645 = load i64, i64* %PC.i1844
  %10646 = add i64 %10645, 4
  store i64 %10646, i64* %PC.i1844
  %10647 = inttoptr i64 %10644 to i32*
  %10648 = load i32, i32* %10647
  %10649 = zext i32 %10648 to i64
  store i64 %10649, i64* %RCX.i1845, align 8
  store %struct.Memory* %loadMem_4760e7, %struct.Memory** %MEMORY
  %loadMem_4760eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10651 = getelementptr inbounds %struct.GPR, %struct.GPR* %10650, i32 0, i32 33
  %10652 = getelementptr inbounds %struct.Reg, %struct.Reg* %10651, i32 0, i32 0
  %PC.i1841 = bitcast %union.anon* %10652 to i64*
  %10653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10654 = getelementptr inbounds %struct.GPR, %struct.GPR* %10653, i32 0, i32 1
  %10655 = getelementptr inbounds %struct.Reg, %struct.Reg* %10654, i32 0, i32 0
  %EAX.i1842 = bitcast %union.anon* %10655 to i32*
  %10656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10657 = getelementptr inbounds %struct.GPR, %struct.GPR* %10656, i32 0, i32 15
  %10658 = getelementptr inbounds %struct.Reg, %struct.Reg* %10657, i32 0, i32 0
  %RBP.i1843 = bitcast %union.anon* %10658 to i64*
  %10659 = load i64, i64* %RBP.i1843
  %10660 = sub i64 %10659, 1192
  %10661 = load i32, i32* %EAX.i1842
  %10662 = zext i32 %10661 to i64
  %10663 = load i64, i64* %PC.i1841
  %10664 = add i64 %10663, 6
  store i64 %10664, i64* %PC.i1841
  %10665 = inttoptr i64 %10660 to i32*
  store i32 %10661, i32* %10665
  store %struct.Memory* %loadMem_4760eb, %struct.Memory** %MEMORY
  %loadMem_4760f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10667 = getelementptr inbounds %struct.GPR, %struct.GPR* %10666, i32 0, i32 33
  %10668 = getelementptr inbounds %struct.Reg, %struct.Reg* %10667, i32 0, i32 0
  %PC.i1838 = bitcast %union.anon* %10668 to i64*
  %10669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10670 = getelementptr inbounds %struct.GPR, %struct.GPR* %10669, i32 0, i32 5
  %10671 = getelementptr inbounds %struct.Reg, %struct.Reg* %10670, i32 0, i32 0
  %ECX.i1839 = bitcast %union.anon* %10671 to i32*
  %10672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10673 = getelementptr inbounds %struct.GPR, %struct.GPR* %10672, i32 0, i32 1
  %10674 = getelementptr inbounds %struct.Reg, %struct.Reg* %10673, i32 0, i32 0
  %RAX.i1840 = bitcast %union.anon* %10674 to i64*
  %10675 = load i32, i32* %ECX.i1839
  %10676 = zext i32 %10675 to i64
  %10677 = load i64, i64* %PC.i1838
  %10678 = add i64 %10677, 2
  store i64 %10678, i64* %PC.i1838
  %10679 = and i64 %10676, 4294967295
  store i64 %10679, i64* %RAX.i1840, align 8
  store %struct.Memory* %loadMem_4760f1, %struct.Memory** %MEMORY
  %loadMem_4760f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10681 = getelementptr inbounds %struct.GPR, %struct.GPR* %10680, i32 0, i32 33
  %10682 = getelementptr inbounds %struct.Reg, %struct.Reg* %10681, i32 0, i32 0
  %PC.i1837 = bitcast %union.anon* %10682 to i64*
  %10683 = load i64, i64* %PC.i1837
  %10684 = add i64 %10683, 1
  store i64 %10684, i64* %PC.i1837
  %10685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %10686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10687 = bitcast %union.anon* %10686 to i32*
  %10688 = load i32, i32* %10687, align 8
  %10689 = sext i32 %10688 to i64
  %10690 = lshr i64 %10689, 32
  store i64 %10690, i64* %10685, align 8
  store %struct.Memory* %loadMem_4760f3, %struct.Memory** %MEMORY
  %loadMem_4760f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10692 = getelementptr inbounds %struct.GPR, %struct.GPR* %10691, i32 0, i32 33
  %10693 = getelementptr inbounds %struct.Reg, %struct.Reg* %10692, i32 0, i32 0
  %PC.i1834 = bitcast %union.anon* %10693 to i64*
  %10694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10695 = getelementptr inbounds %struct.GPR, %struct.GPR* %10694, i32 0, i32 5
  %10696 = getelementptr inbounds %struct.Reg, %struct.Reg* %10695, i32 0, i32 0
  %RCX.i1835 = bitcast %union.anon* %10696 to i64*
  %10697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10698 = getelementptr inbounds %struct.GPR, %struct.GPR* %10697, i32 0, i32 15
  %10699 = getelementptr inbounds %struct.Reg, %struct.Reg* %10698, i32 0, i32 0
  %RBP.i1836 = bitcast %union.anon* %10699 to i64*
  %10700 = load i64, i64* %RBP.i1836
  %10701 = sub i64 %10700, 1192
  %10702 = load i64, i64* %PC.i1834
  %10703 = add i64 %10702, 6
  store i64 %10703, i64* %PC.i1834
  %10704 = inttoptr i64 %10701 to i32*
  %10705 = load i32, i32* %10704
  %10706 = zext i32 %10705 to i64
  store i64 %10706, i64* %RCX.i1835, align 8
  store %struct.Memory* %loadMem_4760f4, %struct.Memory** %MEMORY
  %loadMem_4760fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10708 = getelementptr inbounds %struct.GPR, %struct.GPR* %10707, i32 0, i32 33
  %10709 = getelementptr inbounds %struct.Reg, %struct.Reg* %10708, i32 0, i32 0
  %PC.i1829 = bitcast %union.anon* %10709 to i64*
  %10710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10711 = getelementptr inbounds %struct.GPR, %struct.GPR* %10710, i32 0, i32 5
  %10712 = getelementptr inbounds %struct.Reg, %struct.Reg* %10711, i32 0, i32 0
  %ECX.i1830 = bitcast %union.anon* %10712 to i32*
  %10713 = load i32, i32* %ECX.i1830
  %10714 = zext i32 %10713 to i64
  %10715 = load i64, i64* %PC.i1829
  %10716 = add i64 %10715, 2
  store i64 %10716, i64* %PC.i1829
  %10717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10718 = bitcast %union.anon* %10717 to i32*
  %10719 = load i32, i32* %10718, align 8
  %10720 = zext i32 %10719 to i64
  %10721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %10722 = bitcast %union.anon* %10721 to i32*
  %10723 = load i32, i32* %10722, align 8
  %10724 = zext i32 %10723 to i64
  %10725 = shl i64 %10714, 32
  %10726 = ashr exact i64 %10725, 32
  %10727 = shl i64 %10724, 32
  %10728 = or i64 %10727, %10720
  %10729 = sdiv i64 %10728, %10726
  %10730 = shl i64 %10729, 32
  %10731 = ashr exact i64 %10730, 32
  %10732 = icmp eq i64 %10729, %10731
  br i1 %10732, label %10737, label %10733

; <label>:10733:                                  ; preds = %block_.L_4760d6
  %10734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10735 = load i64, i64* %10734, align 8
  %10736 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %10735, %struct.Memory* %loadMem_4760fa)
  br label %routine_idivl__ecx.exit1831

; <label>:10737:                                  ; preds = %block_.L_4760d6
  %10738 = srem i64 %10728, %10726
  %10739 = getelementptr inbounds %union.anon, %union.anon* %10717, i64 0, i32 0
  %10740 = and i64 %10729, 4294967295
  store i64 %10740, i64* %10739, align 8
  %10741 = getelementptr inbounds %union.anon, %union.anon* %10721, i64 0, i32 0
  %10742 = and i64 %10738, 4294967295
  store i64 %10742, i64* %10741, align 8
  %10743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10743, align 1
  %10744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %10744, align 1
  %10745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10745, align 1
  %10746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10746, align 1
  %10747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10747, align 1
  %10748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10748, align 1
  br label %routine_idivl__ecx.exit1831

routine_idivl__ecx.exit1831:                      ; preds = %10733, %10737
  %10749 = phi %struct.Memory* [ %10736, %10733 ], [ %loadMem_4760fa, %10737 ]
  store %struct.Memory* %10749, %struct.Memory** %MEMORY
  %loadMem_4760fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10751 = getelementptr inbounds %struct.GPR, %struct.GPR* %10750, i32 0, i32 33
  %10752 = getelementptr inbounds %struct.Reg, %struct.Reg* %10751, i32 0, i32 0
  %PC.i1827 = bitcast %union.anon* %10752 to i64*
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10754 = getelementptr inbounds %struct.GPR, %struct.GPR* %10753, i32 0, i32 7
  %10755 = getelementptr inbounds %struct.Reg, %struct.Reg* %10754, i32 0, i32 0
  %RDX.i1828 = bitcast %union.anon* %10755 to i64*
  %10756 = load i64, i64* %RDX.i1828
  %10757 = load i64, i64* %PC.i1827
  %10758 = add i64 %10757, 3
  store i64 %10758, i64* %PC.i1827
  %10759 = trunc i64 %10756 to i32
  %10760 = sub i32 %10759, 1
  %10761 = zext i32 %10760 to i64
  store i64 %10761, i64* %RDX.i1828, align 8
  %10762 = icmp ult i32 %10759, 1
  %10763 = zext i1 %10762 to i8
  %10764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10763, i8* %10764, align 1
  %10765 = and i32 %10760, 255
  %10766 = call i32 @llvm.ctpop.i32(i32 %10765)
  %10767 = trunc i32 %10766 to i8
  %10768 = and i8 %10767, 1
  %10769 = xor i8 %10768, 1
  %10770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10769, i8* %10770, align 1
  %10771 = xor i64 1, %10756
  %10772 = trunc i64 %10771 to i32
  %10773 = xor i32 %10772, %10760
  %10774 = lshr i32 %10773, 4
  %10775 = trunc i32 %10774 to i8
  %10776 = and i8 %10775, 1
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10776, i8* %10777, align 1
  %10778 = icmp eq i32 %10760, 0
  %10779 = zext i1 %10778 to i8
  %10780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10779, i8* %10780, align 1
  %10781 = lshr i32 %10760, 31
  %10782 = trunc i32 %10781 to i8
  %10783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10782, i8* %10783, align 1
  %10784 = lshr i32 %10759, 31
  %10785 = xor i32 %10781, %10784
  %10786 = add i32 %10785, %10784
  %10787 = icmp eq i32 %10786, 2
  %10788 = zext i1 %10787 to i8
  %10789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10788, i8* %10789, align 1
  store %struct.Memory* %loadMem_4760fc, %struct.Memory** %MEMORY
  %loadMem_4760ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10791 = getelementptr inbounds %struct.GPR, %struct.GPR* %10790, i32 0, i32 33
  %10792 = getelementptr inbounds %struct.Reg, %struct.Reg* %10791, i32 0, i32 0
  %PC.i1824 = bitcast %union.anon* %10792 to i64*
  %10793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10794 = getelementptr inbounds %struct.GPR, %struct.GPR* %10793, i32 0, i32 7
  %10795 = getelementptr inbounds %struct.Reg, %struct.Reg* %10794, i32 0, i32 0
  %EDX.i1825 = bitcast %union.anon* %10795 to i32*
  %10796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10797 = getelementptr inbounds %struct.GPR, %struct.GPR* %10796, i32 0, i32 15
  %10798 = getelementptr inbounds %struct.Reg, %struct.Reg* %10797, i32 0, i32 0
  %RBP.i1826 = bitcast %union.anon* %10798 to i64*
  %10799 = load i64, i64* %RBP.i1826
  %10800 = sub i64 %10799, 40
  %10801 = load i32, i32* %EDX.i1825
  %10802 = zext i32 %10801 to i64
  %10803 = load i64, i64* %PC.i1824
  %10804 = add i64 %10803, 3
  store i64 %10804, i64* %PC.i1824
  %10805 = inttoptr i64 %10800 to i32*
  store i32 %10801, i32* %10805
  store %struct.Memory* %loadMem_4760ff, %struct.Memory** %MEMORY
  br label %block_.L_476102

block_.L_476102:                                  ; preds = %block_476139, %routine_idivl__ecx.exit1831
  %loadMem_476102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10807 = getelementptr inbounds %struct.GPR, %struct.GPR* %10806, i32 0, i32 33
  %10808 = getelementptr inbounds %struct.Reg, %struct.Reg* %10807, i32 0, i32 0
  %PC.i1822 = bitcast %union.anon* %10808 to i64*
  %10809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10810 = getelementptr inbounds %struct.GPR, %struct.GPR* %10809, i32 0, i32 1
  %10811 = getelementptr inbounds %struct.Reg, %struct.Reg* %10810, i32 0, i32 0
  %RAX.i1823 = bitcast %union.anon* %10811 to i64*
  %10812 = load i64, i64* %PC.i1822
  %10813 = add i64 %10812, 5
  store i64 %10813, i64* %PC.i1822
  store i64 20, i64* %RAX.i1823, align 8
  store %struct.Memory* %loadMem_476102, %struct.Memory** %MEMORY
  %loadMem_476107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10815 = getelementptr inbounds %struct.GPR, %struct.GPR* %10814, i32 0, i32 33
  %10816 = getelementptr inbounds %struct.Reg, %struct.Reg* %10815, i32 0, i32 0
  %PC.i1819 = bitcast %union.anon* %10816 to i64*
  %10817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10818 = getelementptr inbounds %struct.GPR, %struct.GPR* %10817, i32 0, i32 5
  %10819 = getelementptr inbounds %struct.Reg, %struct.Reg* %10818, i32 0, i32 0
  %RCX.i1820 = bitcast %union.anon* %10819 to i64*
  %10820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10821 = getelementptr inbounds %struct.GPR, %struct.GPR* %10820, i32 0, i32 15
  %10822 = getelementptr inbounds %struct.Reg, %struct.Reg* %10821, i32 0, i32 0
  %RBP.i1821 = bitcast %union.anon* %10822 to i64*
  %10823 = load i64, i64* %RBP.i1821
  %10824 = sub i64 %10823, 40
  %10825 = load i64, i64* %PC.i1819
  %10826 = add i64 %10825, 3
  store i64 %10826, i64* %PC.i1819
  %10827 = inttoptr i64 %10824 to i32*
  %10828 = load i32, i32* %10827
  %10829 = zext i32 %10828 to i64
  store i64 %10829, i64* %RCX.i1820, align 8
  store %struct.Memory* %loadMem_476107, %struct.Memory** %MEMORY
  %loadMem_47610a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10831 = getelementptr inbounds %struct.GPR, %struct.GPR* %10830, i32 0, i32 33
  %10832 = getelementptr inbounds %struct.Reg, %struct.Reg* %10831, i32 0, i32 0
  %PC.i1816 = bitcast %union.anon* %10832 to i64*
  %10833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10834 = getelementptr inbounds %struct.GPR, %struct.GPR* %10833, i32 0, i32 7
  %10835 = getelementptr inbounds %struct.Reg, %struct.Reg* %10834, i32 0, i32 0
  %RDX.i1817 = bitcast %union.anon* %10835 to i64*
  %10836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10837 = getelementptr inbounds %struct.GPR, %struct.GPR* %10836, i32 0, i32 15
  %10838 = getelementptr inbounds %struct.Reg, %struct.Reg* %10837, i32 0, i32 0
  %RBP.i1818 = bitcast %union.anon* %10838 to i64*
  %10839 = load i64, i64* %RBP.i1818
  %10840 = sub i64 %10839, 216
  %10841 = load i64, i64* %PC.i1816
  %10842 = add i64 %10841, 6
  store i64 %10842, i64* %PC.i1816
  %10843 = inttoptr i64 %10840 to i32*
  %10844 = load i32, i32* %10843
  %10845 = zext i32 %10844 to i64
  store i64 %10845, i64* %RDX.i1817, align 8
  store %struct.Memory* %loadMem_47610a, %struct.Memory** %MEMORY
  %loadMem_476110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10847 = getelementptr inbounds %struct.GPR, %struct.GPR* %10846, i32 0, i32 33
  %10848 = getelementptr inbounds %struct.Reg, %struct.Reg* %10847, i32 0, i32 0
  %PC.i1814 = bitcast %union.anon* %10848 to i64*
  %10849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10850 = getelementptr inbounds %struct.GPR, %struct.GPR* %10849, i32 0, i32 7
  %10851 = getelementptr inbounds %struct.Reg, %struct.Reg* %10850, i32 0, i32 0
  %RDX.i1815 = bitcast %union.anon* %10851 to i64*
  %10852 = load i64, i64* %RDX.i1815
  %10853 = load i64, i64* %PC.i1814
  %10854 = add i64 %10853, 3
  store i64 %10854, i64* %PC.i1814
  %10855 = trunc i64 %10852 to i32
  %10856 = sub i32 %10855, 1
  %10857 = zext i32 %10856 to i64
  store i64 %10857, i64* %RDX.i1815, align 8
  %10858 = icmp ult i32 %10855, 1
  %10859 = zext i1 %10858 to i8
  %10860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10859, i8* %10860, align 1
  %10861 = and i32 %10856, 255
  %10862 = call i32 @llvm.ctpop.i32(i32 %10861)
  %10863 = trunc i32 %10862 to i8
  %10864 = and i8 %10863, 1
  %10865 = xor i8 %10864, 1
  %10866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10865, i8* %10866, align 1
  %10867 = xor i64 1, %10852
  %10868 = trunc i64 %10867 to i32
  %10869 = xor i32 %10868, %10856
  %10870 = lshr i32 %10869, 4
  %10871 = trunc i32 %10870 to i8
  %10872 = and i8 %10871, 1
  %10873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10872, i8* %10873, align 1
  %10874 = icmp eq i32 %10856, 0
  %10875 = zext i1 %10874 to i8
  %10876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10875, i8* %10876, align 1
  %10877 = lshr i32 %10856, 31
  %10878 = trunc i32 %10877 to i8
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10878, i8* %10879, align 1
  %10880 = lshr i32 %10855, 31
  %10881 = xor i32 %10877, %10880
  %10882 = add i32 %10881, %10880
  %10883 = icmp eq i32 %10882, 2
  %10884 = zext i1 %10883 to i8
  %10885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10884, i8* %10885, align 1
  store %struct.Memory* %loadMem_476110, %struct.Memory** %MEMORY
  %loadMem_476113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10887 = getelementptr inbounds %struct.GPR, %struct.GPR* %10886, i32 0, i32 33
  %10888 = getelementptr inbounds %struct.Reg, %struct.Reg* %10887, i32 0, i32 0
  %PC.i1811 = bitcast %union.anon* %10888 to i64*
  %10889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10890 = getelementptr inbounds %struct.GPR, %struct.GPR* %10889, i32 0, i32 7
  %10891 = getelementptr inbounds %struct.Reg, %struct.Reg* %10890, i32 0, i32 0
  %EDX.i1812 = bitcast %union.anon* %10891 to i32*
  %10892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10893 = getelementptr inbounds %struct.GPR, %struct.GPR* %10892, i32 0, i32 9
  %10894 = getelementptr inbounds %struct.Reg, %struct.Reg* %10893, i32 0, i32 0
  %RSI.i1813 = bitcast %union.anon* %10894 to i64*
  %10895 = load i32, i32* %EDX.i1812
  %10896 = zext i32 %10895 to i64
  %10897 = load i64, i64* %PC.i1811
  %10898 = add i64 %10897, 3
  store i64 %10898, i64* %PC.i1811
  %10899 = shl i64 %10896, 32
  %10900 = ashr exact i64 %10899, 32
  store i64 %10900, i64* %RSI.i1813, align 8
  store %struct.Memory* %loadMem_476113, %struct.Memory** %MEMORY
  %loadMem_476116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10902 = getelementptr inbounds %struct.GPR, %struct.GPR* %10901, i32 0, i32 33
  %10903 = getelementptr inbounds %struct.Reg, %struct.Reg* %10902, i32 0, i32 0
  %PC.i1807 = bitcast %union.anon* %10903 to i64*
  %10904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10905 = getelementptr inbounds %struct.GPR, %struct.GPR* %10904, i32 0, i32 7
  %10906 = getelementptr inbounds %struct.Reg, %struct.Reg* %10905, i32 0, i32 0
  %RDX.i1808 = bitcast %union.anon* %10906 to i64*
  %10907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10908 = getelementptr inbounds %struct.GPR, %struct.GPR* %10907, i32 0, i32 9
  %10909 = getelementptr inbounds %struct.Reg, %struct.Reg* %10908, i32 0, i32 0
  %RSI.i1809 = bitcast %union.anon* %10909 to i64*
  %10910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10911 = getelementptr inbounds %struct.GPR, %struct.GPR* %10910, i32 0, i32 15
  %10912 = getelementptr inbounds %struct.Reg, %struct.Reg* %10911, i32 0, i32 0
  %RBP.i1810 = bitcast %union.anon* %10912 to i64*
  %10913 = load i64, i64* %RBP.i1810
  %10914 = load i64, i64* %RSI.i1809
  %10915 = mul i64 %10914, 4
  %10916 = add i64 %10913, -208
  %10917 = add i64 %10916, %10915
  %10918 = load i64, i64* %PC.i1807
  %10919 = add i64 %10918, 7
  store i64 %10919, i64* %PC.i1807
  %10920 = inttoptr i64 %10917 to i32*
  %10921 = load i32, i32* %10920
  %10922 = zext i32 %10921 to i64
  store i64 %10922, i64* %RDX.i1808, align 8
  store %struct.Memory* %loadMem_476116, %struct.Memory** %MEMORY
  %loadMem_47611d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10924 = getelementptr inbounds %struct.GPR, %struct.GPR* %10923, i32 0, i32 33
  %10925 = getelementptr inbounds %struct.Reg, %struct.Reg* %10924, i32 0, i32 0
  %PC.i1804 = bitcast %union.anon* %10925 to i64*
  %10926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10927 = getelementptr inbounds %struct.GPR, %struct.GPR* %10926, i32 0, i32 1
  %10928 = getelementptr inbounds %struct.Reg, %struct.Reg* %10927, i32 0, i32 0
  %EAX.i1805 = bitcast %union.anon* %10928 to i32*
  %10929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10930 = getelementptr inbounds %struct.GPR, %struct.GPR* %10929, i32 0, i32 15
  %10931 = getelementptr inbounds %struct.Reg, %struct.Reg* %10930, i32 0, i32 0
  %RBP.i1806 = bitcast %union.anon* %10931 to i64*
  %10932 = load i64, i64* %RBP.i1806
  %10933 = sub i64 %10932, 1196
  %10934 = load i32, i32* %EAX.i1805
  %10935 = zext i32 %10934 to i64
  %10936 = load i64, i64* %PC.i1804
  %10937 = add i64 %10936, 6
  store i64 %10937, i64* %PC.i1804
  %10938 = inttoptr i64 %10933 to i32*
  store i32 %10934, i32* %10938
  store %struct.Memory* %loadMem_47611d, %struct.Memory** %MEMORY
  %loadMem_476123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10940 = getelementptr inbounds %struct.GPR, %struct.GPR* %10939, i32 0, i32 33
  %10941 = getelementptr inbounds %struct.Reg, %struct.Reg* %10940, i32 0, i32 0
  %PC.i1801 = bitcast %union.anon* %10941 to i64*
  %10942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10943 = getelementptr inbounds %struct.GPR, %struct.GPR* %10942, i32 0, i32 7
  %10944 = getelementptr inbounds %struct.Reg, %struct.Reg* %10943, i32 0, i32 0
  %EDX.i1802 = bitcast %union.anon* %10944 to i32*
  %10945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10946 = getelementptr inbounds %struct.GPR, %struct.GPR* %10945, i32 0, i32 1
  %10947 = getelementptr inbounds %struct.Reg, %struct.Reg* %10946, i32 0, i32 0
  %RAX.i1803 = bitcast %union.anon* %10947 to i64*
  %10948 = load i32, i32* %EDX.i1802
  %10949 = zext i32 %10948 to i64
  %10950 = load i64, i64* %PC.i1801
  %10951 = add i64 %10950, 2
  store i64 %10951, i64* %PC.i1801
  %10952 = and i64 %10949, 4294967295
  store i64 %10952, i64* %RAX.i1803, align 8
  store %struct.Memory* %loadMem_476123, %struct.Memory** %MEMORY
  %loadMem_476125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10954 = getelementptr inbounds %struct.GPR, %struct.GPR* %10953, i32 0, i32 33
  %10955 = getelementptr inbounds %struct.Reg, %struct.Reg* %10954, i32 0, i32 0
  %PC.i1800 = bitcast %union.anon* %10955 to i64*
  %10956 = load i64, i64* %PC.i1800
  %10957 = add i64 %10956, 1
  store i64 %10957, i64* %PC.i1800
  %10958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %10959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10960 = bitcast %union.anon* %10959 to i32*
  %10961 = load i32, i32* %10960, align 8
  %10962 = sext i32 %10961 to i64
  %10963 = lshr i64 %10962, 32
  store i64 %10963, i64* %10958, align 8
  store %struct.Memory* %loadMem_476125, %struct.Memory** %MEMORY
  %loadMem_476126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10965 = getelementptr inbounds %struct.GPR, %struct.GPR* %10964, i32 0, i32 33
  %10966 = getelementptr inbounds %struct.Reg, %struct.Reg* %10965, i32 0, i32 0
  %PC.i1797 = bitcast %union.anon* %10966 to i64*
  %10967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10968 = getelementptr inbounds %struct.GPR, %struct.GPR* %10967, i32 0, i32 11
  %10969 = getelementptr inbounds %struct.Reg, %struct.Reg* %10968, i32 0, i32 0
  %RDI.i1798 = bitcast %union.anon* %10969 to i64*
  %10970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10971 = getelementptr inbounds %struct.GPR, %struct.GPR* %10970, i32 0, i32 15
  %10972 = getelementptr inbounds %struct.Reg, %struct.Reg* %10971, i32 0, i32 0
  %RBP.i1799 = bitcast %union.anon* %10972 to i64*
  %10973 = load i64, i64* %RBP.i1799
  %10974 = sub i64 %10973, 1196
  %10975 = load i64, i64* %PC.i1797
  %10976 = add i64 %10975, 6
  store i64 %10976, i64* %PC.i1797
  %10977 = inttoptr i64 %10974 to i32*
  %10978 = load i32, i32* %10977
  %10979 = zext i32 %10978 to i64
  store i64 %10979, i64* %RDI.i1798, align 8
  store %struct.Memory* %loadMem_476126, %struct.Memory** %MEMORY
  %loadMem_47612c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10981 = getelementptr inbounds %struct.GPR, %struct.GPR* %10980, i32 0, i32 33
  %10982 = getelementptr inbounds %struct.Reg, %struct.Reg* %10981, i32 0, i32 0
  %PC.i1793 = bitcast %union.anon* %10982 to i64*
  %10983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10984 = getelementptr inbounds %struct.GPR, %struct.GPR* %10983, i32 0, i32 11
  %10985 = getelementptr inbounds %struct.Reg, %struct.Reg* %10984, i32 0, i32 0
  %EDI.i1794 = bitcast %union.anon* %10985 to i32*
  %10986 = load i32, i32* %EDI.i1794
  %10987 = zext i32 %10986 to i64
  %10988 = load i64, i64* %PC.i1793
  %10989 = add i64 %10988, 2
  store i64 %10989, i64* %PC.i1793
  %10990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10991 = bitcast %union.anon* %10990 to i32*
  %10992 = load i32, i32* %10991, align 8
  %10993 = zext i32 %10992 to i64
  %10994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %10995 = bitcast %union.anon* %10994 to i32*
  %10996 = load i32, i32* %10995, align 8
  %10997 = zext i32 %10996 to i64
  %10998 = shl i64 %10987, 32
  %10999 = ashr exact i64 %10998, 32
  %11000 = shl i64 %10997, 32
  %11001 = or i64 %11000, %10993
  %11002 = sdiv i64 %11001, %10999
  %11003 = shl i64 %11002, 32
  %11004 = ashr exact i64 %11003, 32
  %11005 = icmp eq i64 %11002, %11004
  br i1 %11005, label %11010, label %11006

; <label>:11006:                                  ; preds = %block_.L_476102
  %11007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11008 = load i64, i64* %11007, align 8
  %11009 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11008, %struct.Memory* %loadMem_47612c)
  br label %routine_idivl__edi.exit

; <label>:11010:                                  ; preds = %block_.L_476102
  %11011 = srem i64 %11001, %10999
  %11012 = getelementptr inbounds %union.anon, %union.anon* %10990, i64 0, i32 0
  %11013 = and i64 %11002, 4294967295
  store i64 %11013, i64* %11012, align 8
  %11014 = getelementptr inbounds %union.anon, %union.anon* %10994, i64 0, i32 0
  %11015 = and i64 %11011, 4294967295
  store i64 %11015, i64* %11014, align 8
  %11016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11016, align 1
  %11017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11017, align 1
  %11018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11018, align 1
  %11019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11019, align 1
  %11020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11020, align 1
  %11021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11021, align 1
  br label %routine_idivl__edi.exit

routine_idivl__edi.exit:                          ; preds = %11006, %11010
  %11022 = phi %struct.Memory* [ %11009, %11006 ], [ %loadMem_47612c, %11010 ]
  store %struct.Memory* %11022, %struct.Memory** %MEMORY
  %loadMem_47612e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11024 = getelementptr inbounds %struct.GPR, %struct.GPR* %11023, i32 0, i32 33
  %11025 = getelementptr inbounds %struct.Reg, %struct.Reg* %11024, i32 0, i32 0
  %PC.i1791 = bitcast %union.anon* %11025 to i64*
  %11026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11027 = getelementptr inbounds %struct.GPR, %struct.GPR* %11026, i32 0, i32 7
  %11028 = getelementptr inbounds %struct.Reg, %struct.Reg* %11027, i32 0, i32 0
  %RDX.i1792 = bitcast %union.anon* %11028 to i64*
  %11029 = load i64, i64* %RDX.i1792
  %11030 = load i64, i64* %PC.i1791
  %11031 = add i64 %11030, 3
  store i64 %11031, i64* %PC.i1791
  %11032 = trunc i64 %11029 to i32
  %11033 = sub i32 %11032, 1
  %11034 = zext i32 %11033 to i64
  store i64 %11034, i64* %RDX.i1792, align 8
  %11035 = icmp ult i32 %11032, 1
  %11036 = zext i1 %11035 to i8
  %11037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11036, i8* %11037, align 1
  %11038 = and i32 %11033, 255
  %11039 = call i32 @llvm.ctpop.i32(i32 %11038)
  %11040 = trunc i32 %11039 to i8
  %11041 = and i8 %11040, 1
  %11042 = xor i8 %11041, 1
  %11043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11042, i8* %11043, align 1
  %11044 = xor i64 1, %11029
  %11045 = trunc i64 %11044 to i32
  %11046 = xor i32 %11045, %11033
  %11047 = lshr i32 %11046, 4
  %11048 = trunc i32 %11047 to i8
  %11049 = and i8 %11048, 1
  %11050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11049, i8* %11050, align 1
  %11051 = icmp eq i32 %11033, 0
  %11052 = zext i1 %11051 to i8
  %11053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11052, i8* %11053, align 1
  %11054 = lshr i32 %11033, 31
  %11055 = trunc i32 %11054 to i8
  %11056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11055, i8* %11056, align 1
  %11057 = lshr i32 %11032, 31
  %11058 = xor i32 %11054, %11057
  %11059 = add i32 %11058, %11057
  %11060 = icmp eq i32 %11059, 2
  %11061 = zext i1 %11060 to i8
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11061, i8* %11062, align 1
  store %struct.Memory* %loadMem_47612e, %struct.Memory** %MEMORY
  %loadMem_476131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11064 = getelementptr inbounds %struct.GPR, %struct.GPR* %11063, i32 0, i32 33
  %11065 = getelementptr inbounds %struct.Reg, %struct.Reg* %11064, i32 0, i32 0
  %PC.i1788 = bitcast %union.anon* %11065 to i64*
  %11066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11067 = getelementptr inbounds %struct.GPR, %struct.GPR* %11066, i32 0, i32 5
  %11068 = getelementptr inbounds %struct.Reg, %struct.Reg* %11067, i32 0, i32 0
  %ECX.i1789 = bitcast %union.anon* %11068 to i32*
  %11069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11070 = getelementptr inbounds %struct.GPR, %struct.GPR* %11069, i32 0, i32 7
  %11071 = getelementptr inbounds %struct.Reg, %struct.Reg* %11070, i32 0, i32 0
  %EDX.i1790 = bitcast %union.anon* %11071 to i32*
  %11072 = load i32, i32* %ECX.i1789
  %11073 = zext i32 %11072 to i64
  %11074 = load i32, i32* %EDX.i1790
  %11075 = zext i32 %11074 to i64
  %11076 = load i64, i64* %PC.i1788
  %11077 = add i64 %11076, 2
  store i64 %11077, i64* %PC.i1788
  %11078 = sub i32 %11072, %11074
  %11079 = icmp ult i32 %11072, %11074
  %11080 = zext i1 %11079 to i8
  %11081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11080, i8* %11081, align 1
  %11082 = and i32 %11078, 255
  %11083 = call i32 @llvm.ctpop.i32(i32 %11082)
  %11084 = trunc i32 %11083 to i8
  %11085 = and i8 %11084, 1
  %11086 = xor i8 %11085, 1
  %11087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11086, i8* %11087, align 1
  %11088 = xor i64 %11075, %11073
  %11089 = trunc i64 %11088 to i32
  %11090 = xor i32 %11089, %11078
  %11091 = lshr i32 %11090, 4
  %11092 = trunc i32 %11091 to i8
  %11093 = and i8 %11092, 1
  %11094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11093, i8* %11094, align 1
  %11095 = icmp eq i32 %11078, 0
  %11096 = zext i1 %11095 to i8
  %11097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11096, i8* %11097, align 1
  %11098 = lshr i32 %11078, 31
  %11099 = trunc i32 %11098 to i8
  %11100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11099, i8* %11100, align 1
  %11101 = lshr i32 %11072, 31
  %11102 = lshr i32 %11074, 31
  %11103 = xor i32 %11102, %11101
  %11104 = xor i32 %11098, %11101
  %11105 = add i32 %11104, %11103
  %11106 = icmp eq i32 %11105, 2
  %11107 = zext i1 %11106 to i8
  %11108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11107, i8* %11108, align 1
  store %struct.Memory* %loadMem_476131, %struct.Memory** %MEMORY
  %loadMem_476133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11110 = getelementptr inbounds %struct.GPR, %struct.GPR* %11109, i32 0, i32 33
  %11111 = getelementptr inbounds %struct.Reg, %struct.Reg* %11110, i32 0, i32 0
  %PC.i1787 = bitcast %union.anon* %11111 to i64*
  %11112 = load i64, i64* %PC.i1787
  %11113 = add i64 %11112, 44
  %11114 = load i64, i64* %PC.i1787
  %11115 = add i64 %11114, 6
  %11116 = load i64, i64* %PC.i1787
  %11117 = add i64 %11116, 6
  store i64 %11117, i64* %PC.i1787
  %11118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11119 = load i8, i8* %11118, align 1
  %11120 = icmp eq i8 %11119, 0
  %11121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11122 = load i8, i8* %11121, align 1
  %11123 = icmp ne i8 %11122, 0
  %11124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11125 = load i8, i8* %11124, align 1
  %11126 = icmp ne i8 %11125, 0
  %11127 = xor i1 %11123, %11126
  %11128 = xor i1 %11127, true
  %11129 = and i1 %11120, %11128
  %11130 = zext i1 %11129 to i8
  store i8 %11130, i8* %BRANCH_TAKEN, align 1
  %11131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11132 = select i1 %11129, i64 %11113, i64 %11115
  store i64 %11132, i64* %11131, align 8
  store %struct.Memory* %loadMem_476133, %struct.Memory** %MEMORY
  %loadBr_476133 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476133 = icmp eq i8 %loadBr_476133, 1
  br i1 %cmpBr_476133, label %block_.L_47615f, label %block_476139

block_476139:                                     ; preds = %routine_idivl__edi.exit
  %loadMem_476139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11134 = getelementptr inbounds %struct.GPR, %struct.GPR* %11133, i32 0, i32 33
  %11135 = getelementptr inbounds %struct.Reg, %struct.Reg* %11134, i32 0, i32 0
  %PC.i1784 = bitcast %union.anon* %11135 to i64*
  %11136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11137 = getelementptr inbounds %struct.GPR, %struct.GPR* %11136, i32 0, i32 1
  %11138 = getelementptr inbounds %struct.Reg, %struct.Reg* %11137, i32 0, i32 0
  %RAX.i1785 = bitcast %union.anon* %11138 to i64*
  %11139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11140 = getelementptr inbounds %struct.GPR, %struct.GPR* %11139, i32 0, i32 15
  %11141 = getelementptr inbounds %struct.Reg, %struct.Reg* %11140, i32 0, i32 0
  %RBP.i1786 = bitcast %union.anon* %11141 to i64*
  %11142 = load i64, i64* %RBP.i1786
  %11143 = sub i64 %11142, 224
  %11144 = load i64, i64* %PC.i1784
  %11145 = add i64 %11144, 7
  store i64 %11145, i64* %PC.i1784
  %11146 = inttoptr i64 %11143 to i32*
  %11147 = load i32, i32* %11146
  %11148 = sext i32 %11147 to i64
  %11149 = mul i64 %11148, 20
  %11150 = trunc i64 %11149 to i32
  %11151 = and i64 %11149, 4294967295
  store i64 %11151, i64* %RAX.i1785, align 8
  %11152 = shl i64 %11149, 32
  %11153 = ashr exact i64 %11152, 32
  %11154 = icmp ne i64 %11153, %11149
  %11155 = zext i1 %11154 to i8
  %11156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11155, i8* %11156, align 1
  %11157 = and i32 %11150, 255
  %11158 = call i32 @llvm.ctpop.i32(i32 %11157)
  %11159 = trunc i32 %11158 to i8
  %11160 = and i8 %11159, 1
  %11161 = xor i8 %11160, 1
  %11162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11161, i8* %11162, align 1
  %11163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11163, align 1
  %11164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11164, align 1
  %11165 = lshr i32 %11150, 31
  %11166 = trunc i32 %11165 to i8
  %11167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11166, i8* %11167, align 1
  %11168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11155, i8* %11168, align 1
  store %struct.Memory* %loadMem_476139, %struct.Memory** %MEMORY
  %loadMem_476140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11170 = getelementptr inbounds %struct.GPR, %struct.GPR* %11169, i32 0, i32 33
  %11171 = getelementptr inbounds %struct.Reg, %struct.Reg* %11170, i32 0, i32 0
  %PC.i1782 = bitcast %union.anon* %11171 to i64*
  %11172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11173 = getelementptr inbounds %struct.GPR, %struct.GPR* %11172, i32 0, i32 1
  %11174 = getelementptr inbounds %struct.Reg, %struct.Reg* %11173, i32 0, i32 0
  %RAX.i1783 = bitcast %union.anon* %11174 to i64*
  %11175 = load i64, i64* %RAX.i1783
  %11176 = load i64, i64* %PC.i1782
  %11177 = add i64 %11176, 3
  store i64 %11177, i64* %PC.i1782
  %11178 = trunc i64 %11175 to i32
  %11179 = add i32 21, %11178
  %11180 = zext i32 %11179 to i64
  store i64 %11180, i64* %RAX.i1783, align 8
  %11181 = icmp ult i32 %11179, %11178
  %11182 = icmp ult i32 %11179, 21
  %11183 = or i1 %11181, %11182
  %11184 = zext i1 %11183 to i8
  %11185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11184, i8* %11185, align 1
  %11186 = and i32 %11179, 255
  %11187 = call i32 @llvm.ctpop.i32(i32 %11186)
  %11188 = trunc i32 %11187 to i8
  %11189 = and i8 %11188, 1
  %11190 = xor i8 %11189, 1
  %11191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11190, i8* %11191, align 1
  %11192 = xor i64 21, %11175
  %11193 = trunc i64 %11192 to i32
  %11194 = xor i32 %11193, %11179
  %11195 = lshr i32 %11194, 4
  %11196 = trunc i32 %11195 to i8
  %11197 = and i8 %11196, 1
  %11198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11197, i8* %11198, align 1
  %11199 = icmp eq i32 %11179, 0
  %11200 = zext i1 %11199 to i8
  %11201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11200, i8* %11201, align 1
  %11202 = lshr i32 %11179, 31
  %11203 = trunc i32 %11202 to i8
  %11204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11203, i8* %11204, align 1
  %11205 = lshr i32 %11178, 31
  %11206 = xor i32 %11202, %11205
  %11207 = add i32 %11206, %11202
  %11208 = icmp eq i32 %11207, 2
  %11209 = zext i1 %11208 to i8
  %11210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11209, i8* %11210, align 1
  store %struct.Memory* %loadMem_476140, %struct.Memory** %MEMORY
  %loadMem_476143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11212 = getelementptr inbounds %struct.GPR, %struct.GPR* %11211, i32 0, i32 33
  %11213 = getelementptr inbounds %struct.Reg, %struct.Reg* %11212, i32 0, i32 0
  %PC.i1779 = bitcast %union.anon* %11213 to i64*
  %11214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11215 = getelementptr inbounds %struct.GPR, %struct.GPR* %11214, i32 0, i32 1
  %11216 = getelementptr inbounds %struct.Reg, %struct.Reg* %11215, i32 0, i32 0
  %RAX.i1780 = bitcast %union.anon* %11216 to i64*
  %11217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11218 = getelementptr inbounds %struct.GPR, %struct.GPR* %11217, i32 0, i32 15
  %11219 = getelementptr inbounds %struct.Reg, %struct.Reg* %11218, i32 0, i32 0
  %RBP.i1781 = bitcast %union.anon* %11219 to i64*
  %11220 = load i64, i64* %RAX.i1780
  %11221 = load i64, i64* %RBP.i1781
  %11222 = sub i64 %11221, 40
  %11223 = load i64, i64* %PC.i1779
  %11224 = add i64 %11223, 3
  store i64 %11224, i64* %PC.i1779
  %11225 = trunc i64 %11220 to i32
  %11226 = inttoptr i64 %11222 to i32*
  %11227 = load i32, i32* %11226
  %11228 = add i32 %11227, %11225
  %11229 = zext i32 %11228 to i64
  store i64 %11229, i64* %RAX.i1780, align 8
  %11230 = icmp ult i32 %11228, %11225
  %11231 = icmp ult i32 %11228, %11227
  %11232 = or i1 %11230, %11231
  %11233 = zext i1 %11232 to i8
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11233, i8* %11234, align 1
  %11235 = and i32 %11228, 255
  %11236 = call i32 @llvm.ctpop.i32(i32 %11235)
  %11237 = trunc i32 %11236 to i8
  %11238 = and i8 %11237, 1
  %11239 = xor i8 %11238, 1
  %11240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11239, i8* %11240, align 1
  %11241 = xor i32 %11227, %11225
  %11242 = xor i32 %11241, %11228
  %11243 = lshr i32 %11242, 4
  %11244 = trunc i32 %11243 to i8
  %11245 = and i8 %11244, 1
  %11246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11245, i8* %11246, align 1
  %11247 = icmp eq i32 %11228, 0
  %11248 = zext i1 %11247 to i8
  %11249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11248, i8* %11249, align 1
  %11250 = lshr i32 %11228, 31
  %11251 = trunc i32 %11250 to i8
  %11252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11251, i8* %11252, align 1
  %11253 = lshr i32 %11225, 31
  %11254 = lshr i32 %11227, 31
  %11255 = xor i32 %11250, %11253
  %11256 = xor i32 %11250, %11254
  %11257 = add i32 %11255, %11256
  %11258 = icmp eq i32 %11257, 2
  %11259 = zext i1 %11258 to i8
  %11260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11259, i8* %11260, align 1
  store %struct.Memory* %loadMem_476143, %struct.Memory** %MEMORY
  %loadMem_476146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11262 = getelementptr inbounds %struct.GPR, %struct.GPR* %11261, i32 0, i32 33
  %11263 = getelementptr inbounds %struct.Reg, %struct.Reg* %11262, i32 0, i32 0
  %PC.i1776 = bitcast %union.anon* %11263 to i64*
  %11264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11265 = getelementptr inbounds %struct.GPR, %struct.GPR* %11264, i32 0, i32 1
  %11266 = getelementptr inbounds %struct.Reg, %struct.Reg* %11265, i32 0, i32 0
  %EAX.i1777 = bitcast %union.anon* %11266 to i32*
  %11267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11268 = getelementptr inbounds %struct.GPR, %struct.GPR* %11267, i32 0, i32 5
  %11269 = getelementptr inbounds %struct.Reg, %struct.Reg* %11268, i32 0, i32 0
  %RCX.i1778 = bitcast %union.anon* %11269 to i64*
  %11270 = load i32, i32* %EAX.i1777
  %11271 = zext i32 %11270 to i64
  %11272 = load i64, i64* %PC.i1776
  %11273 = add i64 %11272, 3
  store i64 %11273, i64* %PC.i1776
  %11274 = shl i64 %11271, 32
  %11275 = ashr exact i64 %11274, 32
  store i64 %11275, i64* %RCX.i1778, align 8
  store %struct.Memory* %loadMem_476146, %struct.Memory** %MEMORY
  %loadMem_476149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11277 = getelementptr inbounds %struct.GPR, %struct.GPR* %11276, i32 0, i32 33
  %11278 = getelementptr inbounds %struct.Reg, %struct.Reg* %11277, i32 0, i32 0
  %PC.i1773 = bitcast %union.anon* %11278 to i64*
  %11279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11280 = getelementptr inbounds %struct.GPR, %struct.GPR* %11279, i32 0, i32 5
  %11281 = getelementptr inbounds %struct.Reg, %struct.Reg* %11280, i32 0, i32 0
  %RCX.i1774 = bitcast %union.anon* %11281 to i64*
  %11282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11283 = getelementptr inbounds %struct.GPR, %struct.GPR* %11282, i32 0, i32 15
  %11284 = getelementptr inbounds %struct.Reg, %struct.Reg* %11283, i32 0, i32 0
  %RBP.i1775 = bitcast %union.anon* %11284 to i64*
  %11285 = load i64, i64* %RBP.i1775
  %11286 = load i64, i64* %RCX.i1774
  %11287 = add i64 %11285, -1040
  %11288 = add i64 %11287, %11286
  %11289 = load i64, i64* %PC.i1773
  %11290 = add i64 %11289, 8
  store i64 %11290, i64* %PC.i1773
  %11291 = inttoptr i64 %11288 to i8*
  store i8 1, i8* %11291
  store %struct.Memory* %loadMem_476149, %struct.Memory** %MEMORY
  %loadMem_476151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11293 = getelementptr inbounds %struct.GPR, %struct.GPR* %11292, i32 0, i32 33
  %11294 = getelementptr inbounds %struct.Reg, %struct.Reg* %11293, i32 0, i32 0
  %PC.i1770 = bitcast %union.anon* %11294 to i64*
  %11295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11296 = getelementptr inbounds %struct.GPR, %struct.GPR* %11295, i32 0, i32 1
  %11297 = getelementptr inbounds %struct.Reg, %struct.Reg* %11296, i32 0, i32 0
  %RAX.i1771 = bitcast %union.anon* %11297 to i64*
  %11298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11299 = getelementptr inbounds %struct.GPR, %struct.GPR* %11298, i32 0, i32 15
  %11300 = getelementptr inbounds %struct.Reg, %struct.Reg* %11299, i32 0, i32 0
  %RBP.i1772 = bitcast %union.anon* %11300 to i64*
  %11301 = load i64, i64* %RBP.i1772
  %11302 = sub i64 %11301, 40
  %11303 = load i64, i64* %PC.i1770
  %11304 = add i64 %11303, 3
  store i64 %11304, i64* %PC.i1770
  %11305 = inttoptr i64 %11302 to i32*
  %11306 = load i32, i32* %11305
  %11307 = zext i32 %11306 to i64
  store i64 %11307, i64* %RAX.i1771, align 8
  store %struct.Memory* %loadMem_476151, %struct.Memory** %MEMORY
  %loadMem_476154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11309 = getelementptr inbounds %struct.GPR, %struct.GPR* %11308, i32 0, i32 33
  %11310 = getelementptr inbounds %struct.Reg, %struct.Reg* %11309, i32 0, i32 0
  %PC.i1768 = bitcast %union.anon* %11310 to i64*
  %11311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11312 = getelementptr inbounds %struct.GPR, %struct.GPR* %11311, i32 0, i32 1
  %11313 = getelementptr inbounds %struct.Reg, %struct.Reg* %11312, i32 0, i32 0
  %RAX.i1769 = bitcast %union.anon* %11313 to i64*
  %11314 = load i64, i64* %RAX.i1769
  %11315 = load i64, i64* %PC.i1768
  %11316 = add i64 %11315, 3
  store i64 %11316, i64* %PC.i1768
  %11317 = trunc i64 %11314 to i32
  %11318 = add i32 1, %11317
  %11319 = zext i32 %11318 to i64
  store i64 %11319, i64* %RAX.i1769, align 8
  %11320 = icmp ult i32 %11318, %11317
  %11321 = icmp ult i32 %11318, 1
  %11322 = or i1 %11320, %11321
  %11323 = zext i1 %11322 to i8
  %11324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11323, i8* %11324, align 1
  %11325 = and i32 %11318, 255
  %11326 = call i32 @llvm.ctpop.i32(i32 %11325)
  %11327 = trunc i32 %11326 to i8
  %11328 = and i8 %11327, 1
  %11329 = xor i8 %11328, 1
  %11330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11329, i8* %11330, align 1
  %11331 = xor i64 1, %11314
  %11332 = trunc i64 %11331 to i32
  %11333 = xor i32 %11332, %11318
  %11334 = lshr i32 %11333, 4
  %11335 = trunc i32 %11334 to i8
  %11336 = and i8 %11335, 1
  %11337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11336, i8* %11337, align 1
  %11338 = icmp eq i32 %11318, 0
  %11339 = zext i1 %11338 to i8
  %11340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11339, i8* %11340, align 1
  %11341 = lshr i32 %11318, 31
  %11342 = trunc i32 %11341 to i8
  %11343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11342, i8* %11343, align 1
  %11344 = lshr i32 %11317, 31
  %11345 = xor i32 %11341, %11344
  %11346 = add i32 %11345, %11341
  %11347 = icmp eq i32 %11346, 2
  %11348 = zext i1 %11347 to i8
  %11349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11348, i8* %11349, align 1
  store %struct.Memory* %loadMem_476154, %struct.Memory** %MEMORY
  %loadMem_476157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11351 = getelementptr inbounds %struct.GPR, %struct.GPR* %11350, i32 0, i32 33
  %11352 = getelementptr inbounds %struct.Reg, %struct.Reg* %11351, i32 0, i32 0
  %PC.i1765 = bitcast %union.anon* %11352 to i64*
  %11353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11354 = getelementptr inbounds %struct.GPR, %struct.GPR* %11353, i32 0, i32 1
  %11355 = getelementptr inbounds %struct.Reg, %struct.Reg* %11354, i32 0, i32 0
  %EAX.i1766 = bitcast %union.anon* %11355 to i32*
  %11356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11357 = getelementptr inbounds %struct.GPR, %struct.GPR* %11356, i32 0, i32 15
  %11358 = getelementptr inbounds %struct.Reg, %struct.Reg* %11357, i32 0, i32 0
  %RBP.i1767 = bitcast %union.anon* %11358 to i64*
  %11359 = load i64, i64* %RBP.i1767
  %11360 = sub i64 %11359, 40
  %11361 = load i32, i32* %EAX.i1766
  %11362 = zext i32 %11361 to i64
  %11363 = load i64, i64* %PC.i1765
  %11364 = add i64 %11363, 3
  store i64 %11364, i64* %PC.i1765
  %11365 = inttoptr i64 %11360 to i32*
  store i32 %11361, i32* %11365
  store %struct.Memory* %loadMem_476157, %struct.Memory** %MEMORY
  %loadMem_47615a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11367 = getelementptr inbounds %struct.GPR, %struct.GPR* %11366, i32 0, i32 33
  %11368 = getelementptr inbounds %struct.Reg, %struct.Reg* %11367, i32 0, i32 0
  %PC.i1764 = bitcast %union.anon* %11368 to i64*
  %11369 = load i64, i64* %PC.i1764
  %11370 = add i64 %11369, -88
  %11371 = load i64, i64* %PC.i1764
  %11372 = add i64 %11371, 5
  store i64 %11372, i64* %PC.i1764
  %11373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11370, i64* %11373, align 8
  store %struct.Memory* %loadMem_47615a, %struct.Memory** %MEMORY
  br label %block_.L_476102

block_.L_47615f:                                  ; preds = %routine_idivl__edi.exit
  %loadMem_47615f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11375 = getelementptr inbounds %struct.GPR, %struct.GPR* %11374, i32 0, i32 33
  %11376 = getelementptr inbounds %struct.Reg, %struct.Reg* %11375, i32 0, i32 0
  %PC.i1761 = bitcast %union.anon* %11376 to i64*
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11378 = getelementptr inbounds %struct.GPR, %struct.GPR* %11377, i32 0, i32 1
  %11379 = getelementptr inbounds %struct.Reg, %struct.Reg* %11378, i32 0, i32 0
  %RAX.i1762 = bitcast %union.anon* %11379 to i64*
  %11380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11381 = getelementptr inbounds %struct.GPR, %struct.GPR* %11380, i32 0, i32 15
  %11382 = getelementptr inbounds %struct.Reg, %struct.Reg* %11381, i32 0, i32 0
  %RBP.i1763 = bitcast %union.anon* %11382 to i64*
  %11383 = load i64, i64* %RBP.i1763
  %11384 = sub i64 %11383, 220
  %11385 = load i64, i64* %PC.i1761
  %11386 = add i64 %11385, 6
  store i64 %11386, i64* %PC.i1761
  %11387 = inttoptr i64 %11384 to i32*
  %11388 = load i32, i32* %11387
  %11389 = zext i32 %11388 to i64
  store i64 %11389, i64* %RAX.i1762, align 8
  store %struct.Memory* %loadMem_47615f, %struct.Memory** %MEMORY
  %loadMem_476165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11391 = getelementptr inbounds %struct.GPR, %struct.GPR* %11390, i32 0, i32 33
  %11392 = getelementptr inbounds %struct.Reg, %struct.Reg* %11391, i32 0, i32 0
  %PC.i1759 = bitcast %union.anon* %11392 to i64*
  %11393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11394 = getelementptr inbounds %struct.GPR, %struct.GPR* %11393, i32 0, i32 1
  %11395 = getelementptr inbounds %struct.Reg, %struct.Reg* %11394, i32 0, i32 0
  %RAX.i1760 = bitcast %union.anon* %11395 to i64*
  %11396 = load i64, i64* %RAX.i1760
  %11397 = load i64, i64* %PC.i1759
  %11398 = add i64 %11397, 3
  store i64 %11398, i64* %PC.i1759
  %11399 = trunc i64 %11396 to i32
  %11400 = add i32 1, %11399
  %11401 = zext i32 %11400 to i64
  store i64 %11401, i64* %RAX.i1760, align 8
  %11402 = icmp ult i32 %11400, %11399
  %11403 = icmp ult i32 %11400, 1
  %11404 = or i1 %11402, %11403
  %11405 = zext i1 %11404 to i8
  %11406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11405, i8* %11406, align 1
  %11407 = and i32 %11400, 255
  %11408 = call i32 @llvm.ctpop.i32(i32 %11407)
  %11409 = trunc i32 %11408 to i8
  %11410 = and i8 %11409, 1
  %11411 = xor i8 %11410, 1
  %11412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11411, i8* %11412, align 1
  %11413 = xor i64 1, %11396
  %11414 = trunc i64 %11413 to i32
  %11415 = xor i32 %11414, %11400
  %11416 = lshr i32 %11415, 4
  %11417 = trunc i32 %11416 to i8
  %11418 = and i8 %11417, 1
  %11419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11418, i8* %11419, align 1
  %11420 = icmp eq i32 %11400, 0
  %11421 = zext i1 %11420 to i8
  %11422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11421, i8* %11422, align 1
  %11423 = lshr i32 %11400, 31
  %11424 = trunc i32 %11423 to i8
  %11425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11424, i8* %11425, align 1
  %11426 = lshr i32 %11399, 31
  %11427 = xor i32 %11423, %11426
  %11428 = add i32 %11427, %11423
  %11429 = icmp eq i32 %11428, 2
  %11430 = zext i1 %11429 to i8
  %11431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11430, i8* %11431, align 1
  store %struct.Memory* %loadMem_476165, %struct.Memory** %MEMORY
  %loadMem_476168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11433 = getelementptr inbounds %struct.GPR, %struct.GPR* %11432, i32 0, i32 33
  %11434 = getelementptr inbounds %struct.Reg, %struct.Reg* %11433, i32 0, i32 0
  %PC.i1756 = bitcast %union.anon* %11434 to i64*
  %11435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11436 = getelementptr inbounds %struct.GPR, %struct.GPR* %11435, i32 0, i32 1
  %11437 = getelementptr inbounds %struct.Reg, %struct.Reg* %11436, i32 0, i32 0
  %EAX.i1757 = bitcast %union.anon* %11437 to i32*
  %11438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11439 = getelementptr inbounds %struct.GPR, %struct.GPR* %11438, i32 0, i32 15
  %11440 = getelementptr inbounds %struct.Reg, %struct.Reg* %11439, i32 0, i32 0
  %RBP.i1758 = bitcast %union.anon* %11440 to i64*
  %11441 = load i64, i64* %RBP.i1758
  %11442 = sub i64 %11441, 36
  %11443 = load i32, i32* %EAX.i1757
  %11444 = zext i32 %11443 to i64
  %11445 = load i64, i64* %PC.i1756
  %11446 = add i64 %11445, 3
  store i64 %11446, i64* %PC.i1756
  %11447 = inttoptr i64 %11442 to i32*
  store i32 %11443, i32* %11447
  store %struct.Memory* %loadMem_476168, %struct.Memory** %MEMORY
  br label %block_.L_47616b

block_.L_47616b:                                  ; preds = %block_.L_47645b, %block_.L_47615f
  %loadMem_47616b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11449 = getelementptr inbounds %struct.GPR, %struct.GPR* %11448, i32 0, i32 33
  %11450 = getelementptr inbounds %struct.Reg, %struct.Reg* %11449, i32 0, i32 0
  %PC.i1753 = bitcast %union.anon* %11450 to i64*
  %11451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11452 = getelementptr inbounds %struct.GPR, %struct.GPR* %11451, i32 0, i32 1
  %11453 = getelementptr inbounds %struct.Reg, %struct.Reg* %11452, i32 0, i32 0
  %RAX.i1754 = bitcast %union.anon* %11453 to i64*
  %11454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11455 = getelementptr inbounds %struct.GPR, %struct.GPR* %11454, i32 0, i32 15
  %11456 = getelementptr inbounds %struct.Reg, %struct.Reg* %11455, i32 0, i32 0
  %RBP.i1755 = bitcast %union.anon* %11456 to i64*
  %11457 = load i64, i64* %RBP.i1755
  %11458 = sub i64 %11457, 36
  %11459 = load i64, i64* %PC.i1753
  %11460 = add i64 %11459, 3
  store i64 %11460, i64* %PC.i1753
  %11461 = inttoptr i64 %11458 to i32*
  %11462 = load i32, i32* %11461
  %11463 = zext i32 %11462 to i64
  store i64 %11463, i64* %RAX.i1754, align 8
  store %struct.Memory* %loadMem_47616b, %struct.Memory** %MEMORY
  %loadMem_47616e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11465 = getelementptr inbounds %struct.GPR, %struct.GPR* %11464, i32 0, i32 33
  %11466 = getelementptr inbounds %struct.Reg, %struct.Reg* %11465, i32 0, i32 0
  %PC.i1750 = bitcast %union.anon* %11466 to i64*
  %11467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11468 = getelementptr inbounds %struct.GPR, %struct.GPR* %11467, i32 0, i32 1
  %11469 = getelementptr inbounds %struct.Reg, %struct.Reg* %11468, i32 0, i32 0
  %EAX.i1751 = bitcast %union.anon* %11469 to i32*
  %11470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11471 = getelementptr inbounds %struct.GPR, %struct.GPR* %11470, i32 0, i32 15
  %11472 = getelementptr inbounds %struct.Reg, %struct.Reg* %11471, i32 0, i32 0
  %RBP.i1752 = bitcast %union.anon* %11472 to i64*
  %11473 = load i32, i32* %EAX.i1751
  %11474 = zext i32 %11473 to i64
  %11475 = load i64, i64* %RBP.i1752
  %11476 = sub i64 %11475, 224
  %11477 = load i64, i64* %PC.i1750
  %11478 = add i64 %11477, 6
  store i64 %11478, i64* %PC.i1750
  %11479 = inttoptr i64 %11476 to i32*
  %11480 = load i32, i32* %11479
  %11481 = sub i32 %11473, %11480
  %11482 = icmp ult i32 %11473, %11480
  %11483 = zext i1 %11482 to i8
  %11484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11483, i8* %11484, align 1
  %11485 = and i32 %11481, 255
  %11486 = call i32 @llvm.ctpop.i32(i32 %11485)
  %11487 = trunc i32 %11486 to i8
  %11488 = and i8 %11487, 1
  %11489 = xor i8 %11488, 1
  %11490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11489, i8* %11490, align 1
  %11491 = xor i32 %11480, %11473
  %11492 = xor i32 %11491, %11481
  %11493 = lshr i32 %11492, 4
  %11494 = trunc i32 %11493 to i8
  %11495 = and i8 %11494, 1
  %11496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11495, i8* %11496, align 1
  %11497 = icmp eq i32 %11481, 0
  %11498 = zext i1 %11497 to i8
  %11499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11498, i8* %11499, align 1
  %11500 = lshr i32 %11481, 31
  %11501 = trunc i32 %11500 to i8
  %11502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11501, i8* %11502, align 1
  %11503 = lshr i32 %11473, 31
  %11504 = lshr i32 %11480, 31
  %11505 = xor i32 %11504, %11503
  %11506 = xor i32 %11500, %11503
  %11507 = add i32 %11506, %11505
  %11508 = icmp eq i32 %11507, 2
  %11509 = zext i1 %11508 to i8
  %11510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11509, i8* %11510, align 1
  store %struct.Memory* %loadMem_47616e, %struct.Memory** %MEMORY
  %loadMem_476174 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11512 = getelementptr inbounds %struct.GPR, %struct.GPR* %11511, i32 0, i32 33
  %11513 = getelementptr inbounds %struct.Reg, %struct.Reg* %11512, i32 0, i32 0
  %PC.i1749 = bitcast %union.anon* %11513 to i64*
  %11514 = load i64, i64* %PC.i1749
  %11515 = add i64 %11514, 757
  %11516 = load i64, i64* %PC.i1749
  %11517 = add i64 %11516, 6
  %11518 = load i64, i64* %PC.i1749
  %11519 = add i64 %11518, 6
  store i64 %11519, i64* %PC.i1749
  %11520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11521 = load i8, i8* %11520, align 1
  %11522 = icmp ne i8 %11521, 0
  %11523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11524 = load i8, i8* %11523, align 1
  %11525 = icmp ne i8 %11524, 0
  %11526 = xor i1 %11522, %11525
  %11527 = xor i1 %11526, true
  %11528 = zext i1 %11527 to i8
  store i8 %11528, i8* %BRANCH_TAKEN, align 1
  %11529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11530 = select i1 %11526, i64 %11517, i64 %11515
  store i64 %11530, i64* %11529, align 8
  store %struct.Memory* %loadMem_476174, %struct.Memory** %MEMORY
  %loadBr_476174 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476174 = icmp eq i8 %loadBr_476174, 1
  br i1 %cmpBr_476174, label %block_.L_476469, label %block_47617a

block_47617a:                                     ; preds = %block_.L_47616b
  %loadMem_47617a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11532 = getelementptr inbounds %struct.GPR, %struct.GPR* %11531, i32 0, i32 33
  %11533 = getelementptr inbounds %struct.Reg, %struct.Reg* %11532, i32 0, i32 0
  %PC.i1747 = bitcast %union.anon* %11533 to i64*
  %11534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11535 = getelementptr inbounds %struct.GPR, %struct.GPR* %11534, i32 0, i32 15
  %11536 = getelementptr inbounds %struct.Reg, %struct.Reg* %11535, i32 0, i32 0
  %RBP.i1748 = bitcast %union.anon* %11536 to i64*
  %11537 = load i64, i64* %RBP.i1748
  %11538 = sub i64 %11537, 1088
  %11539 = load i64, i64* %PC.i1747
  %11540 = add i64 %11539, 10
  store i64 %11540, i64* %PC.i1747
  %11541 = inttoptr i64 %11538 to i32*
  store i32 -1, i32* %11541
  store %struct.Memory* %loadMem_47617a, %struct.Memory** %MEMORY
  %loadMem_476184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11543 = getelementptr inbounds %struct.GPR, %struct.GPR* %11542, i32 0, i32 33
  %11544 = getelementptr inbounds %struct.Reg, %struct.Reg* %11543, i32 0, i32 0
  %PC.i1745 = bitcast %union.anon* %11544 to i64*
  %11545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11546 = getelementptr inbounds %struct.GPR, %struct.GPR* %11545, i32 0, i32 15
  %11547 = getelementptr inbounds %struct.Reg, %struct.Reg* %11546, i32 0, i32 0
  %RBP.i1746 = bitcast %union.anon* %11547 to i64*
  %11548 = load i64, i64* %RBP.i1746
  %11549 = sub i64 %11548, 1092
  %11550 = load i64, i64* %PC.i1745
  %11551 = add i64 %11550, 10
  store i64 %11551, i64* %PC.i1745
  %11552 = inttoptr i64 %11549 to i32*
  store i32 -1, i32* %11552
  store %struct.Memory* %loadMem_476184, %struct.Memory** %MEMORY
  %loadMem_47618e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11554 = getelementptr inbounds %struct.GPR, %struct.GPR* %11553, i32 0, i32 33
  %11555 = getelementptr inbounds %struct.Reg, %struct.Reg* %11554, i32 0, i32 0
  %PC.i1743 = bitcast %union.anon* %11555 to i64*
  %11556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11557 = getelementptr inbounds %struct.GPR, %struct.GPR* %11556, i32 0, i32 15
  %11558 = getelementptr inbounds %struct.Reg, %struct.Reg* %11557, i32 0, i32 0
  %RBP.i1744 = bitcast %union.anon* %11558 to i64*
  %11559 = load i64, i64* %RBP.i1744
  %11560 = sub i64 %11559, 44
  %11561 = load i64, i64* %PC.i1743
  %11562 = add i64 %11561, 7
  store i64 %11562, i64* %PC.i1743
  %11563 = inttoptr i64 %11560 to i32*
  store i32 1, i32* %11563
  store %struct.Memory* %loadMem_47618e, %struct.Memory** %MEMORY
  br label %block_.L_476195

block_.L_476195:                                  ; preds = %block_.L_4762bf, %block_47617a
  %loadMem_476195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11565 = getelementptr inbounds %struct.GPR, %struct.GPR* %11564, i32 0, i32 33
  %11566 = getelementptr inbounds %struct.Reg, %struct.Reg* %11565, i32 0, i32 0
  %PC.i1740 = bitcast %union.anon* %11566 to i64*
  %11567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11568 = getelementptr inbounds %struct.GPR, %struct.GPR* %11567, i32 0, i32 1
  %11569 = getelementptr inbounds %struct.Reg, %struct.Reg* %11568, i32 0, i32 0
  %RAX.i1741 = bitcast %union.anon* %11569 to i64*
  %11570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11571 = getelementptr inbounds %struct.GPR, %struct.GPR* %11570, i32 0, i32 15
  %11572 = getelementptr inbounds %struct.Reg, %struct.Reg* %11571, i32 0, i32 0
  %RBP.i1742 = bitcast %union.anon* %11572 to i64*
  %11573 = load i64, i64* %RBP.i1742
  %11574 = sub i64 %11573, 44
  %11575 = load i64, i64* %PC.i1740
  %11576 = add i64 %11575, 3
  store i64 %11576, i64* %PC.i1740
  %11577 = inttoptr i64 %11574 to i32*
  %11578 = load i32, i32* %11577
  %11579 = zext i32 %11578 to i64
  store i64 %11579, i64* %RAX.i1741, align 8
  store %struct.Memory* %loadMem_476195, %struct.Memory** %MEMORY
  %loadMem_476198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11581 = getelementptr inbounds %struct.GPR, %struct.GPR* %11580, i32 0, i32 33
  %11582 = getelementptr inbounds %struct.Reg, %struct.Reg* %11581, i32 0, i32 0
  %PC.i1737 = bitcast %union.anon* %11582 to i64*
  %11583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11584 = getelementptr inbounds %struct.GPR, %struct.GPR* %11583, i32 0, i32 1
  %11585 = getelementptr inbounds %struct.Reg, %struct.Reg* %11584, i32 0, i32 0
  %EAX.i1738 = bitcast %union.anon* %11585 to i32*
  %11586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11587 = getelementptr inbounds %struct.GPR, %struct.GPR* %11586, i32 0, i32 15
  %11588 = getelementptr inbounds %struct.Reg, %struct.Reg* %11587, i32 0, i32 0
  %RBP.i1739 = bitcast %union.anon* %11588 to i64*
  %11589 = load i32, i32* %EAX.i1738
  %11590 = zext i32 %11589 to i64
  %11591 = load i64, i64* %RBP.i1739
  %11592 = sub i64 %11591, 212
  %11593 = load i64, i64* %PC.i1737
  %11594 = add i64 %11593, 6
  store i64 %11594, i64* %PC.i1737
  %11595 = inttoptr i64 %11592 to i32*
  %11596 = load i32, i32* %11595
  %11597 = sub i32 %11589, %11596
  %11598 = icmp ult i32 %11589, %11596
  %11599 = zext i1 %11598 to i8
  %11600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11599, i8* %11600, align 1
  %11601 = and i32 %11597, 255
  %11602 = call i32 @llvm.ctpop.i32(i32 %11601)
  %11603 = trunc i32 %11602 to i8
  %11604 = and i8 %11603, 1
  %11605 = xor i8 %11604, 1
  %11606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11605, i8* %11606, align 1
  %11607 = xor i32 %11596, %11589
  %11608 = xor i32 %11607, %11597
  %11609 = lshr i32 %11608, 4
  %11610 = trunc i32 %11609 to i8
  %11611 = and i8 %11610, 1
  %11612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11611, i8* %11612, align 1
  %11613 = icmp eq i32 %11597, 0
  %11614 = zext i1 %11613 to i8
  %11615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11614, i8* %11615, align 1
  %11616 = lshr i32 %11597, 31
  %11617 = trunc i32 %11616 to i8
  %11618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11617, i8* %11618, align 1
  %11619 = lshr i32 %11589, 31
  %11620 = lshr i32 %11596, 31
  %11621 = xor i32 %11620, %11619
  %11622 = xor i32 %11616, %11619
  %11623 = add i32 %11622, %11621
  %11624 = icmp eq i32 %11623, 2
  %11625 = zext i1 %11624 to i8
  %11626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11625, i8* %11626, align 1
  store %struct.Memory* %loadMem_476198, %struct.Memory** %MEMORY
  %loadMem_47619e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11628 = getelementptr inbounds %struct.GPR, %struct.GPR* %11627, i32 0, i32 33
  %11629 = getelementptr inbounds %struct.Reg, %struct.Reg* %11628, i32 0, i32 0
  %PC.i1736 = bitcast %union.anon* %11629 to i64*
  %11630 = load i64, i64* %PC.i1736
  %11631 = add i64 %11630, 303
  %11632 = load i64, i64* %PC.i1736
  %11633 = add i64 %11632, 6
  %11634 = load i64, i64* %PC.i1736
  %11635 = add i64 %11634, 6
  store i64 %11635, i64* %PC.i1736
  %11636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11637 = load i8, i8* %11636, align 1
  %11638 = icmp ne i8 %11637, 0
  %11639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11640 = load i8, i8* %11639, align 1
  %11641 = icmp ne i8 %11640, 0
  %11642 = xor i1 %11638, %11641
  %11643 = xor i1 %11642, true
  %11644 = zext i1 %11643 to i8
  store i8 %11644, i8* %BRANCH_TAKEN, align 1
  %11645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11646 = select i1 %11642, i64 %11633, i64 %11631
  store i64 %11646, i64* %11645, align 8
  store %struct.Memory* %loadMem_47619e, %struct.Memory** %MEMORY
  %loadBr_47619e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47619e = icmp eq i8 %loadBr_47619e, 1
  br i1 %cmpBr_47619e, label %block_.L_4762cd, label %block_4761a4

block_4761a4:                                     ; preds = %block_.L_476195
  %loadMem_4761a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11648 = getelementptr inbounds %struct.GPR, %struct.GPR* %11647, i32 0, i32 33
  %11649 = getelementptr inbounds %struct.Reg, %struct.Reg* %11648, i32 0, i32 0
  %PC.i1734 = bitcast %union.anon* %11649 to i64*
  %11650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11651 = getelementptr inbounds %struct.GPR, %struct.GPR* %11650, i32 0, i32 1
  %11652 = getelementptr inbounds %struct.Reg, %struct.Reg* %11651, i32 0, i32 0
  %RAX.i1735 = bitcast %union.anon* %11652 to i64*
  %11653 = load i64, i64* %PC.i1734
  %11654 = add i64 %11653, 5
  store i64 %11654, i64* %PC.i1734
  store i64 20, i64* %RAX.i1735, align 8
  store %struct.Memory* %loadMem_4761a4, %struct.Memory** %MEMORY
  %loadMem_4761a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11656 = getelementptr inbounds %struct.GPR, %struct.GPR* %11655, i32 0, i32 33
  %11657 = getelementptr inbounds %struct.Reg, %struct.Reg* %11656, i32 0, i32 0
  %PC.i1731 = bitcast %union.anon* %11657 to i64*
  %11658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11659 = getelementptr inbounds %struct.GPR, %struct.GPR* %11658, i32 0, i32 5
  %11660 = getelementptr inbounds %struct.Reg, %struct.Reg* %11659, i32 0, i32 0
  %RCX.i1732 = bitcast %union.anon* %11660 to i64*
  %11661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11662 = getelementptr inbounds %struct.GPR, %struct.GPR* %11661, i32 0, i32 15
  %11663 = getelementptr inbounds %struct.Reg, %struct.Reg* %11662, i32 0, i32 0
  %RBP.i1733 = bitcast %union.anon* %11663 to i64*
  %11664 = load i64, i64* %RBP.i1733
  %11665 = sub i64 %11664, 44
  %11666 = load i64, i64* %PC.i1731
  %11667 = add i64 %11666, 4
  store i64 %11667, i64* %PC.i1731
  %11668 = inttoptr i64 %11665 to i32*
  %11669 = load i32, i32* %11668
  %11670 = sext i32 %11669 to i64
  store i64 %11670, i64* %RCX.i1732, align 8
  store %struct.Memory* %loadMem_4761a9, %struct.Memory** %MEMORY
  %loadMem_4761ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %11671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11672 = getelementptr inbounds %struct.GPR, %struct.GPR* %11671, i32 0, i32 33
  %11673 = getelementptr inbounds %struct.Reg, %struct.Reg* %11672, i32 0, i32 0
  %PC.i1727 = bitcast %union.anon* %11673 to i64*
  %11674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11675 = getelementptr inbounds %struct.GPR, %struct.GPR* %11674, i32 0, i32 5
  %11676 = getelementptr inbounds %struct.Reg, %struct.Reg* %11675, i32 0, i32 0
  %RCX.i1728 = bitcast %union.anon* %11676 to i64*
  %11677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11678 = getelementptr inbounds %struct.GPR, %struct.GPR* %11677, i32 0, i32 7
  %11679 = getelementptr inbounds %struct.Reg, %struct.Reg* %11678, i32 0, i32 0
  %RDX.i1729 = bitcast %union.anon* %11679 to i64*
  %11680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11681 = getelementptr inbounds %struct.GPR, %struct.GPR* %11680, i32 0, i32 15
  %11682 = getelementptr inbounds %struct.Reg, %struct.Reg* %11681, i32 0, i32 0
  %RBP.i1730 = bitcast %union.anon* %11682 to i64*
  %11683 = load i64, i64* %RBP.i1730
  %11684 = load i64, i64* %RCX.i1728
  %11685 = mul i64 %11684, 4
  %11686 = add i64 %11683, -128
  %11687 = add i64 %11686, %11685
  %11688 = load i64, i64* %PC.i1727
  %11689 = add i64 %11688, 4
  store i64 %11689, i64* %PC.i1727
  %11690 = inttoptr i64 %11687 to i32*
  %11691 = load i32, i32* %11690
  %11692 = zext i32 %11691 to i64
  store i64 %11692, i64* %RDX.i1729, align 8
  store %struct.Memory* %loadMem_4761ad, %struct.Memory** %MEMORY
  %loadMem_4761b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11694 = getelementptr inbounds %struct.GPR, %struct.GPR* %11693, i32 0, i32 33
  %11695 = getelementptr inbounds %struct.Reg, %struct.Reg* %11694, i32 0, i32 0
  %PC.i1724 = bitcast %union.anon* %11695 to i64*
  %11696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11697 = getelementptr inbounds %struct.GPR, %struct.GPR* %11696, i32 0, i32 1
  %11698 = getelementptr inbounds %struct.Reg, %struct.Reg* %11697, i32 0, i32 0
  %EAX.i1725 = bitcast %union.anon* %11698 to i32*
  %11699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11700 = getelementptr inbounds %struct.GPR, %struct.GPR* %11699, i32 0, i32 15
  %11701 = getelementptr inbounds %struct.Reg, %struct.Reg* %11700, i32 0, i32 0
  %RBP.i1726 = bitcast %union.anon* %11701 to i64*
  %11702 = load i64, i64* %RBP.i1726
  %11703 = sub i64 %11702, 1200
  %11704 = load i32, i32* %EAX.i1725
  %11705 = zext i32 %11704 to i64
  %11706 = load i64, i64* %PC.i1724
  %11707 = add i64 %11706, 6
  store i64 %11707, i64* %PC.i1724
  %11708 = inttoptr i64 %11703 to i32*
  store i32 %11704, i32* %11708
  store %struct.Memory* %loadMem_4761b1, %struct.Memory** %MEMORY
  %loadMem_4761b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11710 = getelementptr inbounds %struct.GPR, %struct.GPR* %11709, i32 0, i32 33
  %11711 = getelementptr inbounds %struct.Reg, %struct.Reg* %11710, i32 0, i32 0
  %PC.i1721 = bitcast %union.anon* %11711 to i64*
  %11712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11713 = getelementptr inbounds %struct.GPR, %struct.GPR* %11712, i32 0, i32 7
  %11714 = getelementptr inbounds %struct.Reg, %struct.Reg* %11713, i32 0, i32 0
  %EDX.i1722 = bitcast %union.anon* %11714 to i32*
  %11715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11716 = getelementptr inbounds %struct.GPR, %struct.GPR* %11715, i32 0, i32 1
  %11717 = getelementptr inbounds %struct.Reg, %struct.Reg* %11716, i32 0, i32 0
  %RAX.i1723 = bitcast %union.anon* %11717 to i64*
  %11718 = load i32, i32* %EDX.i1722
  %11719 = zext i32 %11718 to i64
  %11720 = load i64, i64* %PC.i1721
  %11721 = add i64 %11720, 2
  store i64 %11721, i64* %PC.i1721
  %11722 = and i64 %11719, 4294967295
  store i64 %11722, i64* %RAX.i1723, align 8
  store %struct.Memory* %loadMem_4761b7, %struct.Memory** %MEMORY
  %loadMem_4761b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11724 = getelementptr inbounds %struct.GPR, %struct.GPR* %11723, i32 0, i32 33
  %11725 = getelementptr inbounds %struct.Reg, %struct.Reg* %11724, i32 0, i32 0
  %PC.i1720 = bitcast %union.anon* %11725 to i64*
  %11726 = load i64, i64* %PC.i1720
  %11727 = add i64 %11726, 1
  store i64 %11727, i64* %PC.i1720
  %11728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %11729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11730 = bitcast %union.anon* %11729 to i32*
  %11731 = load i32, i32* %11730, align 8
  %11732 = sext i32 %11731 to i64
  %11733 = lshr i64 %11732, 32
  store i64 %11733, i64* %11728, align 8
  store %struct.Memory* %loadMem_4761b9, %struct.Memory** %MEMORY
  %loadMem_4761ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %11734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11735 = getelementptr inbounds %struct.GPR, %struct.GPR* %11734, i32 0, i32 33
  %11736 = getelementptr inbounds %struct.Reg, %struct.Reg* %11735, i32 0, i32 0
  %PC.i1717 = bitcast %union.anon* %11736 to i64*
  %11737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11738 = getelementptr inbounds %struct.GPR, %struct.GPR* %11737, i32 0, i32 9
  %11739 = getelementptr inbounds %struct.Reg, %struct.Reg* %11738, i32 0, i32 0
  %RSI.i1718 = bitcast %union.anon* %11739 to i64*
  %11740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11741 = getelementptr inbounds %struct.GPR, %struct.GPR* %11740, i32 0, i32 15
  %11742 = getelementptr inbounds %struct.Reg, %struct.Reg* %11741, i32 0, i32 0
  %RBP.i1719 = bitcast %union.anon* %11742 to i64*
  %11743 = load i64, i64* %RBP.i1719
  %11744 = sub i64 %11743, 1200
  %11745 = load i64, i64* %PC.i1717
  %11746 = add i64 %11745, 6
  store i64 %11746, i64* %PC.i1717
  %11747 = inttoptr i64 %11744 to i32*
  %11748 = load i32, i32* %11747
  %11749 = zext i32 %11748 to i64
  store i64 %11749, i64* %RSI.i1718, align 8
  store %struct.Memory* %loadMem_4761ba, %struct.Memory** %MEMORY
  %loadMem_4761c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11751 = getelementptr inbounds %struct.GPR, %struct.GPR* %11750, i32 0, i32 33
  %11752 = getelementptr inbounds %struct.Reg, %struct.Reg* %11751, i32 0, i32 0
  %PC.i1711 = bitcast %union.anon* %11752 to i64*
  %11753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11754 = getelementptr inbounds %struct.GPR, %struct.GPR* %11753, i32 0, i32 9
  %11755 = getelementptr inbounds %struct.Reg, %struct.Reg* %11754, i32 0, i32 0
  %ESI.i1712 = bitcast %union.anon* %11755 to i32*
  %11756 = load i32, i32* %ESI.i1712
  %11757 = zext i32 %11756 to i64
  %11758 = load i64, i64* %PC.i1711
  %11759 = add i64 %11758, 2
  store i64 %11759, i64* %PC.i1711
  %11760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11761 = bitcast %union.anon* %11760 to i32*
  %11762 = load i32, i32* %11761, align 8
  %11763 = zext i32 %11762 to i64
  %11764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11765 = bitcast %union.anon* %11764 to i32*
  %11766 = load i32, i32* %11765, align 8
  %11767 = zext i32 %11766 to i64
  %11768 = shl i64 %11757, 32
  %11769 = ashr exact i64 %11768, 32
  %11770 = shl i64 %11767, 32
  %11771 = or i64 %11770, %11763
  %11772 = sdiv i64 %11771, %11769
  %11773 = shl i64 %11772, 32
  %11774 = ashr exact i64 %11773, 32
  %11775 = icmp eq i64 %11772, %11774
  br i1 %11775, label %11780, label %11776

; <label>:11776:                                  ; preds = %block_4761a4
  %11777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11778 = load i64, i64* %11777, align 8
  %11779 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11778, %struct.Memory* %loadMem_4761c0)
  br label %routine_idivl__esi.exit1713

; <label>:11780:                                  ; preds = %block_4761a4
  %11781 = srem i64 %11771, %11769
  %11782 = getelementptr inbounds %union.anon, %union.anon* %11760, i64 0, i32 0
  %11783 = and i64 %11772, 4294967295
  store i64 %11783, i64* %11782, align 8
  %11784 = getelementptr inbounds %union.anon, %union.anon* %11764, i64 0, i32 0
  %11785 = and i64 %11781, 4294967295
  store i64 %11785, i64* %11784, align 8
  %11786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11786, align 1
  %11787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11787, align 1
  %11788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11788, align 1
  %11789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11789, align 1
  %11790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11790, align 1
  %11791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11791, align 1
  br label %routine_idivl__esi.exit1713

routine_idivl__esi.exit1713:                      ; preds = %11776, %11780
  %11792 = phi %struct.Memory* [ %11779, %11776 ], [ %loadMem_4761c0, %11780 ]
  store %struct.Memory* %11792, %struct.Memory** %MEMORY
  %loadMem_4761c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11794 = getelementptr inbounds %struct.GPR, %struct.GPR* %11793, i32 0, i32 33
  %11795 = getelementptr inbounds %struct.Reg, %struct.Reg* %11794, i32 0, i32 0
  %PC.i1709 = bitcast %union.anon* %11795 to i64*
  %11796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11797 = getelementptr inbounds %struct.GPR, %struct.GPR* %11796, i32 0, i32 1
  %11798 = getelementptr inbounds %struct.Reg, %struct.Reg* %11797, i32 0, i32 0
  %RAX.i1710 = bitcast %union.anon* %11798 to i64*
  %11799 = load i64, i64* %RAX.i1710
  %11800 = load i64, i64* %PC.i1709
  %11801 = add i64 %11800, 3
  store i64 %11801, i64* %PC.i1709
  %11802 = trunc i64 %11799 to i32
  %11803 = sub i32 %11802, 1
  %11804 = zext i32 %11803 to i64
  store i64 %11804, i64* %RAX.i1710, align 8
  %11805 = icmp ult i32 %11802, 1
  %11806 = zext i1 %11805 to i8
  %11807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11806, i8* %11807, align 1
  %11808 = and i32 %11803, 255
  %11809 = call i32 @llvm.ctpop.i32(i32 %11808)
  %11810 = trunc i32 %11809 to i8
  %11811 = and i8 %11810, 1
  %11812 = xor i8 %11811, 1
  %11813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11812, i8* %11813, align 1
  %11814 = xor i64 1, %11799
  %11815 = trunc i64 %11814 to i32
  %11816 = xor i32 %11815, %11803
  %11817 = lshr i32 %11816, 4
  %11818 = trunc i32 %11817 to i8
  %11819 = and i8 %11818, 1
  %11820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11819, i8* %11820, align 1
  %11821 = icmp eq i32 %11803, 0
  %11822 = zext i1 %11821 to i8
  %11823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11822, i8* %11823, align 1
  %11824 = lshr i32 %11803, 31
  %11825 = trunc i32 %11824 to i8
  %11826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11825, i8* %11826, align 1
  %11827 = lshr i32 %11802, 31
  %11828 = xor i32 %11824, %11827
  %11829 = add i32 %11828, %11827
  %11830 = icmp eq i32 %11829, 2
  %11831 = zext i1 %11830 to i8
  %11832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11831, i8* %11832, align 1
  store %struct.Memory* %loadMem_4761c2, %struct.Memory** %MEMORY
  %loadMem_4761c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11834 = getelementptr inbounds %struct.GPR, %struct.GPR* %11833, i32 0, i32 33
  %11835 = getelementptr inbounds %struct.Reg, %struct.Reg* %11834, i32 0, i32 0
  %PC.i1706 = bitcast %union.anon* %11835 to i64*
  %11836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11837 = getelementptr inbounds %struct.GPR, %struct.GPR* %11836, i32 0, i32 1
  %11838 = getelementptr inbounds %struct.Reg, %struct.Reg* %11837, i32 0, i32 0
  %EAX.i1707 = bitcast %union.anon* %11838 to i32*
  %11839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11840 = getelementptr inbounds %struct.GPR, %struct.GPR* %11839, i32 0, i32 15
  %11841 = getelementptr inbounds %struct.Reg, %struct.Reg* %11840, i32 0, i32 0
  %RBP.i1708 = bitcast %union.anon* %11841 to i64*
  %11842 = load i32, i32* %EAX.i1707
  %11843 = zext i32 %11842 to i64
  %11844 = load i64, i64* %RBP.i1708
  %11845 = sub i64 %11844, 36
  %11846 = load i64, i64* %PC.i1706
  %11847 = add i64 %11846, 3
  store i64 %11847, i64* %PC.i1706
  %11848 = inttoptr i64 %11845 to i32*
  %11849 = load i32, i32* %11848
  %11850 = sub i32 %11842, %11849
  %11851 = icmp ult i32 %11842, %11849
  %11852 = zext i1 %11851 to i8
  %11853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11852, i8* %11853, align 1
  %11854 = and i32 %11850, 255
  %11855 = call i32 @llvm.ctpop.i32(i32 %11854)
  %11856 = trunc i32 %11855 to i8
  %11857 = and i8 %11856, 1
  %11858 = xor i8 %11857, 1
  %11859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11858, i8* %11859, align 1
  %11860 = xor i32 %11849, %11842
  %11861 = xor i32 %11860, %11850
  %11862 = lshr i32 %11861, 4
  %11863 = trunc i32 %11862 to i8
  %11864 = and i8 %11863, 1
  %11865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11864, i8* %11865, align 1
  %11866 = icmp eq i32 %11850, 0
  %11867 = zext i1 %11866 to i8
  %11868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11867, i8* %11868, align 1
  %11869 = lshr i32 %11850, 31
  %11870 = trunc i32 %11869 to i8
  %11871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11870, i8* %11871, align 1
  %11872 = lshr i32 %11842, 31
  %11873 = lshr i32 %11849, 31
  %11874 = xor i32 %11873, %11872
  %11875 = xor i32 %11869, %11872
  %11876 = add i32 %11875, %11874
  %11877 = icmp eq i32 %11876, 2
  %11878 = zext i1 %11877 to i8
  %11879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11878, i8* %11879, align 1
  store %struct.Memory* %loadMem_4761c5, %struct.Memory** %MEMORY
  %loadMem_4761c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11881 = getelementptr inbounds %struct.GPR, %struct.GPR* %11880, i32 0, i32 33
  %11882 = getelementptr inbounds %struct.Reg, %struct.Reg* %11881, i32 0, i32 0
  %PC.i1705 = bitcast %union.anon* %11882 to i64*
  %11883 = load i64, i64* %PC.i1705
  %11884 = add i64 %11883, 242
  %11885 = load i64, i64* %PC.i1705
  %11886 = add i64 %11885, 6
  %11887 = load i64, i64* %PC.i1705
  %11888 = add i64 %11887, 6
  store i64 %11888, i64* %PC.i1705
  %11889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11890 = load i8, i8* %11889, align 1
  %11891 = icmp ne i8 %11890, 0
  %11892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11893 = load i8, i8* %11892, align 1
  %11894 = icmp ne i8 %11893, 0
  %11895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11896 = load i8, i8* %11895, align 1
  %11897 = icmp ne i8 %11896, 0
  %11898 = xor i1 %11894, %11897
  %11899 = or i1 %11891, %11898
  %11900 = zext i1 %11899 to i8
  store i8 %11900, i8* %BRANCH_TAKEN, align 1
  %11901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11902 = select i1 %11899, i64 %11884, i64 %11886
  store i64 %11902, i64* %11901, align 8
  store %struct.Memory* %loadMem_4761c8, %struct.Memory** %MEMORY
  %loadBr_4761c8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4761c8 = icmp eq i8 %loadBr_4761c8, 1
  br i1 %cmpBr_4761c8, label %block_.L_4762ba, label %block_4761ce

block_4761ce:                                     ; preds = %routine_idivl__esi.exit1713
  %loadMem_4761ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %11903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11904 = getelementptr inbounds %struct.GPR, %struct.GPR* %11903, i32 0, i32 33
  %11905 = getelementptr inbounds %struct.Reg, %struct.Reg* %11904, i32 0, i32 0
  %PC.i1703 = bitcast %union.anon* %11905 to i64*
  %11906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11907 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11906, i64 0, i64 0
  %YMM0.i1704 = bitcast %union.VectorReg* %11907 to %"class.std::bitset"*
  %11908 = bitcast %"class.std::bitset"* %YMM0.i1704 to i8*
  %11909 = load i64, i64* %PC.i1703
  %11910 = add i64 %11909, ptrtoint (%G_0x6cea2__rip__type* @G_0x6cea2__rip_ to i64)
  %11911 = load i64, i64* %PC.i1703
  %11912 = add i64 %11911, 8
  store i64 %11912, i64* %PC.i1703
  %11913 = inttoptr i64 %11910 to double*
  %11914 = load double, double* %11913
  %11915 = bitcast i8* %11908 to double*
  store double %11914, double* %11915, align 1
  %11916 = getelementptr inbounds i8, i8* %11908, i64 8
  %11917 = bitcast i8* %11916 to double*
  store double 0.000000e+00, double* %11917, align 1
  store %struct.Memory* %loadMem_4761ce, %struct.Memory** %MEMORY
  %loadMem_4761d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11919 = getelementptr inbounds %struct.GPR, %struct.GPR* %11918, i32 0, i32 33
  %11920 = getelementptr inbounds %struct.Reg, %struct.Reg* %11919, i32 0, i32 0
  %PC.i1701 = bitcast %union.anon* %11920 to i64*
  %11921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11922 = getelementptr inbounds %struct.GPR, %struct.GPR* %11921, i32 0, i32 1
  %11923 = getelementptr inbounds %struct.Reg, %struct.Reg* %11922, i32 0, i32 0
  %RAX.i1702 = bitcast %union.anon* %11923 to i64*
  %11924 = load i64, i64* %PC.i1701
  %11925 = add i64 %11924, 5
  store i64 %11925, i64* %PC.i1701
  store i64 20, i64* %RAX.i1702, align 8
  store %struct.Memory* %loadMem_4761d6, %struct.Memory** %MEMORY
  %loadMem_4761db = load %struct.Memory*, %struct.Memory** %MEMORY
  %11926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11927 = getelementptr inbounds %struct.GPR, %struct.GPR* %11926, i32 0, i32 33
  %11928 = getelementptr inbounds %struct.Reg, %struct.Reg* %11927, i32 0, i32 0
  %PC.i1698 = bitcast %union.anon* %11928 to i64*
  %11929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11930 = getelementptr inbounds %struct.GPR, %struct.GPR* %11929, i32 0, i32 5
  %11931 = getelementptr inbounds %struct.Reg, %struct.Reg* %11930, i32 0, i32 0
  %RCX.i1699 = bitcast %union.anon* %11931 to i64*
  %11932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11933 = getelementptr inbounds %struct.GPR, %struct.GPR* %11932, i32 0, i32 15
  %11934 = getelementptr inbounds %struct.Reg, %struct.Reg* %11933, i32 0, i32 0
  %RBP.i1700 = bitcast %union.anon* %11934 to i64*
  %11935 = load i64, i64* %RBP.i1700
  %11936 = sub i64 %11935, 44
  %11937 = load i64, i64* %PC.i1698
  %11938 = add i64 %11937, 3
  store i64 %11938, i64* %PC.i1698
  %11939 = inttoptr i64 %11936 to i32*
  %11940 = load i32, i32* %11939
  %11941 = zext i32 %11940 to i64
  store i64 %11941, i64* %RCX.i1699, align 8
  store %struct.Memory* %loadMem_4761db, %struct.Memory** %MEMORY
  %loadMem_4761de = load %struct.Memory*, %struct.Memory** %MEMORY
  %11942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11943 = getelementptr inbounds %struct.GPR, %struct.GPR* %11942, i32 0, i32 33
  %11944 = getelementptr inbounds %struct.Reg, %struct.Reg* %11943, i32 0, i32 0
  %PC.i1696 = bitcast %union.anon* %11944 to i64*
  %11945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11946 = getelementptr inbounds %struct.GPR, %struct.GPR* %11945, i32 0, i32 5
  %11947 = getelementptr inbounds %struct.Reg, %struct.Reg* %11946, i32 0, i32 0
  %RCX.i1697 = bitcast %union.anon* %11947 to i64*
  %11948 = load i64, i64* %RCX.i1697
  %11949 = load i64, i64* %PC.i1696
  %11950 = add i64 %11949, 3
  store i64 %11950, i64* %PC.i1696
  %11951 = trunc i64 %11948 to i32
  %11952 = sub i32 %11951, 1
  %11953 = zext i32 %11952 to i64
  store i64 %11953, i64* %RCX.i1697, align 8
  %11954 = icmp ult i32 %11951, 1
  %11955 = zext i1 %11954 to i8
  %11956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11955, i8* %11956, align 1
  %11957 = and i32 %11952, 255
  %11958 = call i32 @llvm.ctpop.i32(i32 %11957)
  %11959 = trunc i32 %11958 to i8
  %11960 = and i8 %11959, 1
  %11961 = xor i8 %11960, 1
  %11962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11961, i8* %11962, align 1
  %11963 = xor i64 1, %11948
  %11964 = trunc i64 %11963 to i32
  %11965 = xor i32 %11964, %11952
  %11966 = lshr i32 %11965, 4
  %11967 = trunc i32 %11966 to i8
  %11968 = and i8 %11967, 1
  %11969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11968, i8* %11969, align 1
  %11970 = icmp eq i32 %11952, 0
  %11971 = zext i1 %11970 to i8
  %11972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11971, i8* %11972, align 1
  %11973 = lshr i32 %11952, 31
  %11974 = trunc i32 %11973 to i8
  %11975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11974, i8* %11975, align 1
  %11976 = lshr i32 %11951, 31
  %11977 = xor i32 %11973, %11976
  %11978 = add i32 %11977, %11976
  %11979 = icmp eq i32 %11978, 2
  %11980 = zext i1 %11979 to i8
  %11981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11980, i8* %11981, align 1
  store %struct.Memory* %loadMem_4761de, %struct.Memory** %MEMORY
  %loadMem_4761e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11983 = getelementptr inbounds %struct.GPR, %struct.GPR* %11982, i32 0, i32 33
  %11984 = getelementptr inbounds %struct.Reg, %struct.Reg* %11983, i32 0, i32 0
  %PC.i1693 = bitcast %union.anon* %11984 to i64*
  %11985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11986 = getelementptr inbounds %struct.GPR, %struct.GPR* %11985, i32 0, i32 5
  %11987 = getelementptr inbounds %struct.Reg, %struct.Reg* %11986, i32 0, i32 0
  %ECX.i1694 = bitcast %union.anon* %11987 to i32*
  %11988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11989 = getelementptr inbounds %struct.GPR, %struct.GPR* %11988, i32 0, i32 7
  %11990 = getelementptr inbounds %struct.Reg, %struct.Reg* %11989, i32 0, i32 0
  %RDX.i1695 = bitcast %union.anon* %11990 to i64*
  %11991 = load i32, i32* %ECX.i1694
  %11992 = zext i32 %11991 to i64
  %11993 = load i64, i64* %PC.i1693
  %11994 = add i64 %11993, 3
  store i64 %11994, i64* %PC.i1693
  %11995 = shl i64 %11992, 32
  %11996 = ashr exact i64 %11995, 32
  store i64 %11996, i64* %RDX.i1695, align 8
  store %struct.Memory* %loadMem_4761e1, %struct.Memory** %MEMORY
  %loadMem_4761e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11998 = getelementptr inbounds %struct.GPR, %struct.GPR* %11997, i32 0, i32 33
  %11999 = getelementptr inbounds %struct.Reg, %struct.Reg* %11998, i32 0, i32 0
  %PC.i1689 = bitcast %union.anon* %11999 to i64*
  %12000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12001 = getelementptr inbounds %struct.GPR, %struct.GPR* %12000, i32 0, i32 5
  %12002 = getelementptr inbounds %struct.Reg, %struct.Reg* %12001, i32 0, i32 0
  %RCX.i1690 = bitcast %union.anon* %12002 to i64*
  %12003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12004 = getelementptr inbounds %struct.GPR, %struct.GPR* %12003, i32 0, i32 7
  %12005 = getelementptr inbounds %struct.Reg, %struct.Reg* %12004, i32 0, i32 0
  %RDX.i1691 = bitcast %union.anon* %12005 to i64*
  %12006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12007 = getelementptr inbounds %struct.GPR, %struct.GPR* %12006, i32 0, i32 15
  %12008 = getelementptr inbounds %struct.Reg, %struct.Reg* %12007, i32 0, i32 0
  %RBP.i1692 = bitcast %union.anon* %12008 to i64*
  %12009 = load i64, i64* %RBP.i1692
  %12010 = load i64, i64* %RDX.i1691
  %12011 = mul i64 %12010, 4
  %12012 = add i64 %12009, -128
  %12013 = add i64 %12012, %12011
  %12014 = load i64, i64* %PC.i1689
  %12015 = add i64 %12014, 4
  store i64 %12015, i64* %PC.i1689
  %12016 = inttoptr i64 %12013 to i32*
  %12017 = load i32, i32* %12016
  %12018 = zext i32 %12017 to i64
  store i64 %12018, i64* %RCX.i1690, align 8
  store %struct.Memory* %loadMem_4761e4, %struct.Memory** %MEMORY
  %loadMem_4761e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12020 = getelementptr inbounds %struct.GPR, %struct.GPR* %12019, i32 0, i32 33
  %12021 = getelementptr inbounds %struct.Reg, %struct.Reg* %12020, i32 0, i32 0
  %PC.i1686 = bitcast %union.anon* %12021 to i64*
  %12022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12023 = getelementptr inbounds %struct.GPR, %struct.GPR* %12022, i32 0, i32 1
  %12024 = getelementptr inbounds %struct.Reg, %struct.Reg* %12023, i32 0, i32 0
  %EAX.i1687 = bitcast %union.anon* %12024 to i32*
  %12025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12026 = getelementptr inbounds %struct.GPR, %struct.GPR* %12025, i32 0, i32 15
  %12027 = getelementptr inbounds %struct.Reg, %struct.Reg* %12026, i32 0, i32 0
  %RBP.i1688 = bitcast %union.anon* %12027 to i64*
  %12028 = load i64, i64* %RBP.i1688
  %12029 = sub i64 %12028, 1204
  %12030 = load i32, i32* %EAX.i1687
  %12031 = zext i32 %12030 to i64
  %12032 = load i64, i64* %PC.i1686
  %12033 = add i64 %12032, 6
  store i64 %12033, i64* %PC.i1686
  %12034 = inttoptr i64 %12029 to i32*
  store i32 %12030, i32* %12034
  store %struct.Memory* %loadMem_4761e8, %struct.Memory** %MEMORY
  %loadMem_4761ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %12035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12036 = getelementptr inbounds %struct.GPR, %struct.GPR* %12035, i32 0, i32 33
  %12037 = getelementptr inbounds %struct.Reg, %struct.Reg* %12036, i32 0, i32 0
  %PC.i1683 = bitcast %union.anon* %12037 to i64*
  %12038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12039 = getelementptr inbounds %struct.GPR, %struct.GPR* %12038, i32 0, i32 5
  %12040 = getelementptr inbounds %struct.Reg, %struct.Reg* %12039, i32 0, i32 0
  %ECX.i1684 = bitcast %union.anon* %12040 to i32*
  %12041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12042 = getelementptr inbounds %struct.GPR, %struct.GPR* %12041, i32 0, i32 1
  %12043 = getelementptr inbounds %struct.Reg, %struct.Reg* %12042, i32 0, i32 0
  %RAX.i1685 = bitcast %union.anon* %12043 to i64*
  %12044 = load i32, i32* %ECX.i1684
  %12045 = zext i32 %12044 to i64
  %12046 = load i64, i64* %PC.i1683
  %12047 = add i64 %12046, 2
  store i64 %12047, i64* %PC.i1683
  %12048 = and i64 %12045, 4294967295
  store i64 %12048, i64* %RAX.i1685, align 8
  store %struct.Memory* %loadMem_4761ee, %struct.Memory** %MEMORY
  %loadMem_4761f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12050 = getelementptr inbounds %struct.GPR, %struct.GPR* %12049, i32 0, i32 33
  %12051 = getelementptr inbounds %struct.Reg, %struct.Reg* %12050, i32 0, i32 0
  %PC.i1682 = bitcast %union.anon* %12051 to i64*
  %12052 = load i64, i64* %PC.i1682
  %12053 = add i64 %12052, 1
  store i64 %12053, i64* %PC.i1682
  %12054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %12055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12056 = bitcast %union.anon* %12055 to i32*
  %12057 = load i32, i32* %12056, align 8
  %12058 = sext i32 %12057 to i64
  %12059 = lshr i64 %12058, 32
  store i64 %12059, i64* %12054, align 8
  store %struct.Memory* %loadMem_4761f0, %struct.Memory** %MEMORY
  %loadMem_4761f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12061 = getelementptr inbounds %struct.GPR, %struct.GPR* %12060, i32 0, i32 33
  %12062 = getelementptr inbounds %struct.Reg, %struct.Reg* %12061, i32 0, i32 0
  %PC.i1679 = bitcast %union.anon* %12062 to i64*
  %12063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12064 = getelementptr inbounds %struct.GPR, %struct.GPR* %12063, i32 0, i32 5
  %12065 = getelementptr inbounds %struct.Reg, %struct.Reg* %12064, i32 0, i32 0
  %RCX.i1680 = bitcast %union.anon* %12065 to i64*
  %12066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12067 = getelementptr inbounds %struct.GPR, %struct.GPR* %12066, i32 0, i32 15
  %12068 = getelementptr inbounds %struct.Reg, %struct.Reg* %12067, i32 0, i32 0
  %RBP.i1681 = bitcast %union.anon* %12068 to i64*
  %12069 = load i64, i64* %RBP.i1681
  %12070 = sub i64 %12069, 1204
  %12071 = load i64, i64* %PC.i1679
  %12072 = add i64 %12071, 6
  store i64 %12072, i64* %PC.i1679
  %12073 = inttoptr i64 %12070 to i32*
  %12074 = load i32, i32* %12073
  %12075 = zext i32 %12074 to i64
  store i64 %12075, i64* %RCX.i1680, align 8
  store %struct.Memory* %loadMem_4761f1, %struct.Memory** %MEMORY
  %loadMem_4761f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12077 = getelementptr inbounds %struct.GPR, %struct.GPR* %12076, i32 0, i32 33
  %12078 = getelementptr inbounds %struct.Reg, %struct.Reg* %12077, i32 0, i32 0
  %PC.i1673 = bitcast %union.anon* %12078 to i64*
  %12079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12080 = getelementptr inbounds %struct.GPR, %struct.GPR* %12079, i32 0, i32 5
  %12081 = getelementptr inbounds %struct.Reg, %struct.Reg* %12080, i32 0, i32 0
  %ECX.i1674 = bitcast %union.anon* %12081 to i32*
  %12082 = load i32, i32* %ECX.i1674
  %12083 = zext i32 %12082 to i64
  %12084 = load i64, i64* %PC.i1673
  %12085 = add i64 %12084, 2
  store i64 %12085, i64* %PC.i1673
  %12086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12087 = bitcast %union.anon* %12086 to i32*
  %12088 = load i32, i32* %12087, align 8
  %12089 = zext i32 %12088 to i64
  %12090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12091 = bitcast %union.anon* %12090 to i32*
  %12092 = load i32, i32* %12091, align 8
  %12093 = zext i32 %12092 to i64
  %12094 = shl i64 %12083, 32
  %12095 = ashr exact i64 %12094, 32
  %12096 = shl i64 %12093, 32
  %12097 = or i64 %12096, %12089
  %12098 = sdiv i64 %12097, %12095
  %12099 = shl i64 %12098, 32
  %12100 = ashr exact i64 %12099, 32
  %12101 = icmp eq i64 %12098, %12100
  br i1 %12101, label %12106, label %12102

; <label>:12102:                                  ; preds = %block_4761ce
  %12103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12104 = load i64, i64* %12103, align 8
  %12105 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12104, %struct.Memory* %loadMem_4761f7)
  br label %routine_idivl__ecx.exit1675

; <label>:12106:                                  ; preds = %block_4761ce
  %12107 = srem i64 %12097, %12095
  %12108 = getelementptr inbounds %union.anon, %union.anon* %12086, i64 0, i32 0
  %12109 = and i64 %12098, 4294967295
  store i64 %12109, i64* %12108, align 8
  %12110 = getelementptr inbounds %union.anon, %union.anon* %12090, i64 0, i32 0
  %12111 = and i64 %12107, 4294967295
  store i64 %12111, i64* %12110, align 8
  %12112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12112, align 1
  %12113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %12113, align 1
  %12114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12114, align 1
  %12115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12115, align 1
  %12116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12116, align 1
  %12117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12117, align 1
  br label %routine_idivl__ecx.exit1675

routine_idivl__ecx.exit1675:                      ; preds = %12102, %12106
  %12118 = phi %struct.Memory* [ %12105, %12102 ], [ %loadMem_4761f7, %12106 ]
  store %struct.Memory* %12118, %struct.Memory** %MEMORY
  %loadMem_4761f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12120 = getelementptr inbounds %struct.GPR, %struct.GPR* %12119, i32 0, i32 33
  %12121 = getelementptr inbounds %struct.Reg, %struct.Reg* %12120, i32 0, i32 0
  %PC.i1671 = bitcast %union.anon* %12121 to i64*
  %12122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12123 = getelementptr inbounds %struct.GPR, %struct.GPR* %12122, i32 0, i32 1
  %12124 = getelementptr inbounds %struct.Reg, %struct.Reg* %12123, i32 0, i32 0
  %RAX.i1672 = bitcast %union.anon* %12124 to i64*
  %12125 = load i64, i64* %RAX.i1672
  %12126 = load i64, i64* %PC.i1671
  %12127 = add i64 %12126, 3
  store i64 %12127, i64* %PC.i1671
  %12128 = trunc i64 %12125 to i32
  %12129 = sub i32 %12128, 1
  %12130 = zext i32 %12129 to i64
  store i64 %12130, i64* %RAX.i1672, align 8
  %12131 = icmp ult i32 %12128, 1
  %12132 = zext i1 %12131 to i8
  %12133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12132, i8* %12133, align 1
  %12134 = and i32 %12129, 255
  %12135 = call i32 @llvm.ctpop.i32(i32 %12134)
  %12136 = trunc i32 %12135 to i8
  %12137 = and i8 %12136, 1
  %12138 = xor i8 %12137, 1
  %12139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12138, i8* %12139, align 1
  %12140 = xor i64 1, %12125
  %12141 = trunc i64 %12140 to i32
  %12142 = xor i32 %12141, %12129
  %12143 = lshr i32 %12142, 4
  %12144 = trunc i32 %12143 to i8
  %12145 = and i8 %12144, 1
  %12146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12145, i8* %12146, align 1
  %12147 = icmp eq i32 %12129, 0
  %12148 = zext i1 %12147 to i8
  %12149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12148, i8* %12149, align 1
  %12150 = lshr i32 %12129, 31
  %12151 = trunc i32 %12150 to i8
  %12152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12151, i8* %12152, align 1
  %12153 = lshr i32 %12128, 31
  %12154 = xor i32 %12150, %12153
  %12155 = add i32 %12154, %12153
  %12156 = icmp eq i32 %12155, 2
  %12157 = zext i1 %12156 to i8
  %12158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12157, i8* %12158, align 1
  store %struct.Memory* %loadMem_4761f9, %struct.Memory** %MEMORY
  %loadMem_4761fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12160 = getelementptr inbounds %struct.GPR, %struct.GPR* %12159, i32 0, i32 33
  %12161 = getelementptr inbounds %struct.Reg, %struct.Reg* %12160, i32 0, i32 0
  %PC.i1668 = bitcast %union.anon* %12161 to i64*
  %12162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12163 = getelementptr inbounds %struct.GPR, %struct.GPR* %12162, i32 0, i32 1
  %12164 = getelementptr inbounds %struct.Reg, %struct.Reg* %12163, i32 0, i32 0
  %EAX.i1669 = bitcast %union.anon* %12164 to i32*
  %12165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12166 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12165, i64 0, i64 1
  %YMM1.i1670 = bitcast %union.VectorReg* %12166 to %"class.std::bitset"*
  %12167 = bitcast %"class.std::bitset"* %YMM1.i1670 to i8*
  %12168 = load i32, i32* %EAX.i1669
  %12169 = zext i32 %12168 to i64
  %12170 = load i64, i64* %PC.i1668
  %12171 = add i64 %12170, 4
  store i64 %12171, i64* %PC.i1668
  %12172 = bitcast i8* %12167 to <2 x i32>*
  %12173 = load <2 x i32>, <2 x i32>* %12172, align 1
  %12174 = getelementptr inbounds i8, i8* %12167, i64 8
  %12175 = bitcast i8* %12174 to <2 x i32>*
  %12176 = load <2 x i32>, <2 x i32>* %12175, align 1
  %12177 = sitofp i32 %12168 to float
  %12178 = bitcast i8* %12167 to float*
  store float %12177, float* %12178, align 1
  %12179 = extractelement <2 x i32> %12173, i32 1
  %12180 = getelementptr inbounds i8, i8* %12167, i64 4
  %12181 = bitcast i8* %12180 to i32*
  store i32 %12179, i32* %12181, align 1
  %12182 = extractelement <2 x i32> %12176, i32 0
  %12183 = bitcast i8* %12174 to i32*
  store i32 %12182, i32* %12183, align 1
  %12184 = extractelement <2 x i32> %12176, i32 1
  %12185 = getelementptr inbounds i8, i8* %12167, i64 12
  %12186 = bitcast i8* %12185 to i32*
  store i32 %12184, i32* %12186, align 1
  store %struct.Memory* %loadMem_4761fc, %struct.Memory** %MEMORY
  %loadMem_476200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12188 = getelementptr inbounds %struct.GPR, %struct.GPR* %12187, i32 0, i32 33
  %12189 = getelementptr inbounds %struct.Reg, %struct.Reg* %12188, i32 0, i32 0
  %PC.i1665 = bitcast %union.anon* %12189 to i64*
  %12190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12191 = getelementptr inbounds %struct.GPR, %struct.GPR* %12190, i32 0, i32 15
  %12192 = getelementptr inbounds %struct.Reg, %struct.Reg* %12191, i32 0, i32 0
  %RBP.i1666 = bitcast %union.anon* %12192 to i64*
  %12193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12194 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12193, i64 0, i64 1
  %XMM1.i1667 = bitcast %union.VectorReg* %12194 to %union.vec128_t*
  %12195 = load i64, i64* %RBP.i1666
  %12196 = sub i64 %12195, 1096
  %12197 = bitcast %union.vec128_t* %XMM1.i1667 to i8*
  %12198 = load i64, i64* %PC.i1665
  %12199 = add i64 %12198, 8
  store i64 %12199, i64* %PC.i1665
  %12200 = bitcast i8* %12197 to <2 x float>*
  %12201 = load <2 x float>, <2 x float>* %12200, align 1
  %12202 = extractelement <2 x float> %12201, i32 0
  %12203 = inttoptr i64 %12196 to float*
  store float %12202, float* %12203
  store %struct.Memory* %loadMem_476200, %struct.Memory** %MEMORY
  %loadMem_476208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12205 = getelementptr inbounds %struct.GPR, %struct.GPR* %12204, i32 0, i32 33
  %12206 = getelementptr inbounds %struct.Reg, %struct.Reg* %12205, i32 0, i32 0
  %PC.i1662 = bitcast %union.anon* %12206 to i64*
  %12207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12208 = getelementptr inbounds %struct.GPR, %struct.GPR* %12207, i32 0, i32 1
  %12209 = getelementptr inbounds %struct.Reg, %struct.Reg* %12208, i32 0, i32 0
  %RAX.i1663 = bitcast %union.anon* %12209 to i64*
  %12210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12211 = getelementptr inbounds %struct.GPR, %struct.GPR* %12210, i32 0, i32 15
  %12212 = getelementptr inbounds %struct.Reg, %struct.Reg* %12211, i32 0, i32 0
  %RBP.i1664 = bitcast %union.anon* %12212 to i64*
  %12213 = load i64, i64* %RBP.i1664
  %12214 = sub i64 %12213, 44
  %12215 = load i64, i64* %PC.i1662
  %12216 = add i64 %12215, 3
  store i64 %12216, i64* %PC.i1662
  %12217 = inttoptr i64 %12214 to i32*
  %12218 = load i32, i32* %12217
  %12219 = zext i32 %12218 to i64
  store i64 %12219, i64* %RAX.i1663, align 8
  store %struct.Memory* %loadMem_476208, %struct.Memory** %MEMORY
  %loadMem_47620b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12221 = getelementptr inbounds %struct.GPR, %struct.GPR* %12220, i32 0, i32 33
  %12222 = getelementptr inbounds %struct.Reg, %struct.Reg* %12221, i32 0, i32 0
  %PC.i1660 = bitcast %union.anon* %12222 to i64*
  %12223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12224 = getelementptr inbounds %struct.GPR, %struct.GPR* %12223, i32 0, i32 1
  %12225 = getelementptr inbounds %struct.Reg, %struct.Reg* %12224, i32 0, i32 0
  %RAX.i1661 = bitcast %union.anon* %12225 to i64*
  %12226 = load i64, i64* %RAX.i1661
  %12227 = load i64, i64* %PC.i1660
  %12228 = add i64 %12227, 3
  store i64 %12228, i64* %PC.i1660
  %12229 = trunc i64 %12226 to i32
  %12230 = sub i32 %12229, 1
  %12231 = zext i32 %12230 to i64
  store i64 %12231, i64* %RAX.i1661, align 8
  %12232 = icmp ult i32 %12229, 1
  %12233 = zext i1 %12232 to i8
  %12234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12233, i8* %12234, align 1
  %12235 = and i32 %12230, 255
  %12236 = call i32 @llvm.ctpop.i32(i32 %12235)
  %12237 = trunc i32 %12236 to i8
  %12238 = and i8 %12237, 1
  %12239 = xor i8 %12238, 1
  %12240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12239, i8* %12240, align 1
  %12241 = xor i64 1, %12226
  %12242 = trunc i64 %12241 to i32
  %12243 = xor i32 %12242, %12230
  %12244 = lshr i32 %12243, 4
  %12245 = trunc i32 %12244 to i8
  %12246 = and i8 %12245, 1
  %12247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12246, i8* %12247, align 1
  %12248 = icmp eq i32 %12230, 0
  %12249 = zext i1 %12248 to i8
  %12250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12249, i8* %12250, align 1
  %12251 = lshr i32 %12230, 31
  %12252 = trunc i32 %12251 to i8
  %12253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12252, i8* %12253, align 1
  %12254 = lshr i32 %12229, 31
  %12255 = xor i32 %12251, %12254
  %12256 = add i32 %12255, %12254
  %12257 = icmp eq i32 %12256, 2
  %12258 = zext i1 %12257 to i8
  %12259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12258, i8* %12259, align 1
  store %struct.Memory* %loadMem_47620b, %struct.Memory** %MEMORY
  %loadMem_47620e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12261 = getelementptr inbounds %struct.GPR, %struct.GPR* %12260, i32 0, i32 33
  %12262 = getelementptr inbounds %struct.Reg, %struct.Reg* %12261, i32 0, i32 0
  %PC.i1657 = bitcast %union.anon* %12262 to i64*
  %12263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12264 = getelementptr inbounds %struct.GPR, %struct.GPR* %12263, i32 0, i32 1
  %12265 = getelementptr inbounds %struct.Reg, %struct.Reg* %12264, i32 0, i32 0
  %EAX.i1658 = bitcast %union.anon* %12265 to i32*
  %12266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12267 = getelementptr inbounds %struct.GPR, %struct.GPR* %12266, i32 0, i32 9
  %12268 = getelementptr inbounds %struct.Reg, %struct.Reg* %12267, i32 0, i32 0
  %RSI.i1659 = bitcast %union.anon* %12268 to i64*
  %12269 = load i32, i32* %EAX.i1658
  %12270 = zext i32 %12269 to i64
  %12271 = load i64, i64* %PC.i1657
  %12272 = add i64 %12271, 3
  store i64 %12272, i64* %PC.i1657
  %12273 = shl i64 %12270, 32
  %12274 = ashr exact i64 %12273, 32
  store i64 %12274, i64* %RSI.i1659, align 8
  store %struct.Memory* %loadMem_47620e, %struct.Memory** %MEMORY
  %loadMem_476211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12276 = getelementptr inbounds %struct.GPR, %struct.GPR* %12275, i32 0, i32 33
  %12277 = getelementptr inbounds %struct.Reg, %struct.Reg* %12276, i32 0, i32 0
  %PC.i1653 = bitcast %union.anon* %12277 to i64*
  %12278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12279 = getelementptr inbounds %struct.GPR, %struct.GPR* %12278, i32 0, i32 1
  %12280 = getelementptr inbounds %struct.Reg, %struct.Reg* %12279, i32 0, i32 0
  %RAX.i1654 = bitcast %union.anon* %12280 to i64*
  %12281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12282 = getelementptr inbounds %struct.GPR, %struct.GPR* %12281, i32 0, i32 9
  %12283 = getelementptr inbounds %struct.Reg, %struct.Reg* %12282, i32 0, i32 0
  %RSI.i1655 = bitcast %union.anon* %12283 to i64*
  %12284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12285 = getelementptr inbounds %struct.GPR, %struct.GPR* %12284, i32 0, i32 15
  %12286 = getelementptr inbounds %struct.Reg, %struct.Reg* %12285, i32 0, i32 0
  %RBP.i1656 = bitcast %union.anon* %12286 to i64*
  %12287 = load i64, i64* %RBP.i1656
  %12288 = load i64, i64* %RSI.i1655
  %12289 = mul i64 %12288, 4
  %12290 = add i64 %12287, -128
  %12291 = add i64 %12290, %12289
  %12292 = load i64, i64* %PC.i1653
  %12293 = add i64 %12292, 4
  store i64 %12293, i64* %PC.i1653
  %12294 = inttoptr i64 %12291 to i32*
  %12295 = load i32, i32* %12294
  %12296 = zext i32 %12295 to i64
  store i64 %12296, i64* %RAX.i1654, align 8
  store %struct.Memory* %loadMem_476211, %struct.Memory** %MEMORY
  %loadMem_476215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12298 = getelementptr inbounds %struct.GPR, %struct.GPR* %12297, i32 0, i32 33
  %12299 = getelementptr inbounds %struct.Reg, %struct.Reg* %12298, i32 0, i32 0
  %PC.i1652 = bitcast %union.anon* %12299 to i64*
  %12300 = load i64, i64* %PC.i1652
  %12301 = add i64 %12300, 1
  store i64 %12301, i64* %PC.i1652
  %12302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %12303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12304 = bitcast %union.anon* %12303 to i32*
  %12305 = load i32, i32* %12304, align 8
  %12306 = sext i32 %12305 to i64
  %12307 = lshr i64 %12306, 32
  store i64 %12307, i64* %12302, align 8
  store %struct.Memory* %loadMem_476215, %struct.Memory** %MEMORY
  %loadMem_476216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12309 = getelementptr inbounds %struct.GPR, %struct.GPR* %12308, i32 0, i32 33
  %12310 = getelementptr inbounds %struct.Reg, %struct.Reg* %12309, i32 0, i32 0
  %PC.i1646 = bitcast %union.anon* %12310 to i64*
  %12311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12312 = getelementptr inbounds %struct.GPR, %struct.GPR* %12311, i32 0, i32 5
  %12313 = getelementptr inbounds %struct.Reg, %struct.Reg* %12312, i32 0, i32 0
  %ECX.i1647 = bitcast %union.anon* %12313 to i32*
  %12314 = load i32, i32* %ECX.i1647
  %12315 = zext i32 %12314 to i64
  %12316 = load i64, i64* %PC.i1646
  %12317 = add i64 %12316, 2
  store i64 %12317, i64* %PC.i1646
  %12318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12319 = bitcast %union.anon* %12318 to i32*
  %12320 = load i32, i32* %12319, align 8
  %12321 = zext i32 %12320 to i64
  %12322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12323 = bitcast %union.anon* %12322 to i32*
  %12324 = load i32, i32* %12323, align 8
  %12325 = zext i32 %12324 to i64
  %12326 = shl i64 %12315, 32
  %12327 = ashr exact i64 %12326, 32
  %12328 = shl i64 %12325, 32
  %12329 = or i64 %12328, %12321
  %12330 = sdiv i64 %12329, %12327
  %12331 = shl i64 %12330, 32
  %12332 = ashr exact i64 %12331, 32
  %12333 = icmp eq i64 %12330, %12332
  br i1 %12333, label %12338, label %12334

; <label>:12334:                                  ; preds = %routine_idivl__ecx.exit1675
  %12335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12336 = load i64, i64* %12335, align 8
  %12337 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12336, %struct.Memory* %loadMem_476216)
  br label %routine_idivl__ecx.exit1648

; <label>:12338:                                  ; preds = %routine_idivl__ecx.exit1675
  %12339 = srem i64 %12329, %12327
  %12340 = getelementptr inbounds %union.anon, %union.anon* %12318, i64 0, i32 0
  %12341 = and i64 %12330, 4294967295
  store i64 %12341, i64* %12340, align 8
  %12342 = getelementptr inbounds %union.anon, %union.anon* %12322, i64 0, i32 0
  %12343 = and i64 %12339, 4294967295
  store i64 %12343, i64* %12342, align 8
  %12344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12344, align 1
  %12345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %12345, align 1
  %12346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12346, align 1
  %12347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12347, align 1
  %12348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12348, align 1
  %12349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12349, align 1
  br label %routine_idivl__ecx.exit1648

routine_idivl__ecx.exit1648:                      ; preds = %12334, %12338
  %12350 = phi %struct.Memory* [ %12337, %12334 ], [ %loadMem_476216, %12338 ]
  store %struct.Memory* %12350, %struct.Memory** %MEMORY
  %loadMem_476218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12352 = getelementptr inbounds %struct.GPR, %struct.GPR* %12351, i32 0, i32 33
  %12353 = getelementptr inbounds %struct.Reg, %struct.Reg* %12352, i32 0, i32 0
  %PC.i1644 = bitcast %union.anon* %12353 to i64*
  %12354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12355 = getelementptr inbounds %struct.GPR, %struct.GPR* %12354, i32 0, i32 7
  %12356 = getelementptr inbounds %struct.Reg, %struct.Reg* %12355, i32 0, i32 0
  %RDX.i1645 = bitcast %union.anon* %12356 to i64*
  %12357 = load i64, i64* %RDX.i1645
  %12358 = load i64, i64* %PC.i1644
  %12359 = add i64 %12358, 3
  store i64 %12359, i64* %PC.i1644
  %12360 = trunc i64 %12357 to i32
  %12361 = sub i32 %12360, 1
  %12362 = zext i32 %12361 to i64
  store i64 %12362, i64* %RDX.i1645, align 8
  %12363 = icmp ult i32 %12360, 1
  %12364 = zext i1 %12363 to i8
  %12365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12364, i8* %12365, align 1
  %12366 = and i32 %12361, 255
  %12367 = call i32 @llvm.ctpop.i32(i32 %12366)
  %12368 = trunc i32 %12367 to i8
  %12369 = and i8 %12368, 1
  %12370 = xor i8 %12369, 1
  %12371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12370, i8* %12371, align 1
  %12372 = xor i64 1, %12357
  %12373 = trunc i64 %12372 to i32
  %12374 = xor i32 %12373, %12361
  %12375 = lshr i32 %12374, 4
  %12376 = trunc i32 %12375 to i8
  %12377 = and i8 %12376, 1
  %12378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12377, i8* %12378, align 1
  %12379 = icmp eq i32 %12361, 0
  %12380 = zext i1 %12379 to i8
  %12381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12380, i8* %12381, align 1
  %12382 = lshr i32 %12361, 31
  %12383 = trunc i32 %12382 to i8
  %12384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12383, i8* %12384, align 1
  %12385 = lshr i32 %12360, 31
  %12386 = xor i32 %12382, %12385
  %12387 = add i32 %12386, %12385
  %12388 = icmp eq i32 %12387, 2
  %12389 = zext i1 %12388 to i8
  %12390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12389, i8* %12390, align 1
  store %struct.Memory* %loadMem_476218, %struct.Memory** %MEMORY
  %loadMem_47621b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12392 = getelementptr inbounds %struct.GPR, %struct.GPR* %12391, i32 0, i32 33
  %12393 = getelementptr inbounds %struct.Reg, %struct.Reg* %12392, i32 0, i32 0
  %PC.i1641 = bitcast %union.anon* %12393 to i64*
  %12394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12395 = getelementptr inbounds %struct.GPR, %struct.GPR* %12394, i32 0, i32 7
  %12396 = getelementptr inbounds %struct.Reg, %struct.Reg* %12395, i32 0, i32 0
  %EDX.i1642 = bitcast %union.anon* %12396 to i32*
  %12397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12398 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12397, i64 0, i64 1
  %YMM1.i1643 = bitcast %union.VectorReg* %12398 to %"class.std::bitset"*
  %12399 = bitcast %"class.std::bitset"* %YMM1.i1643 to i8*
  %12400 = load i32, i32* %EDX.i1642
  %12401 = zext i32 %12400 to i64
  %12402 = load i64, i64* %PC.i1641
  %12403 = add i64 %12402, 4
  store i64 %12403, i64* %PC.i1641
  %12404 = bitcast i8* %12399 to <2 x i32>*
  %12405 = load <2 x i32>, <2 x i32>* %12404, align 1
  %12406 = getelementptr inbounds i8, i8* %12399, i64 8
  %12407 = bitcast i8* %12406 to <2 x i32>*
  %12408 = load <2 x i32>, <2 x i32>* %12407, align 1
  %12409 = sitofp i32 %12400 to float
  %12410 = bitcast i8* %12399 to float*
  store float %12409, float* %12410, align 1
  %12411 = extractelement <2 x i32> %12405, i32 1
  %12412 = getelementptr inbounds i8, i8* %12399, i64 4
  %12413 = bitcast i8* %12412 to i32*
  store i32 %12411, i32* %12413, align 1
  %12414 = extractelement <2 x i32> %12408, i32 0
  %12415 = bitcast i8* %12406 to i32*
  store i32 %12414, i32* %12415, align 1
  %12416 = extractelement <2 x i32> %12408, i32 1
  %12417 = getelementptr inbounds i8, i8* %12399, i64 12
  %12418 = bitcast i8* %12417 to i32*
  store i32 %12416, i32* %12418, align 1
  store %struct.Memory* %loadMem_47621b, %struct.Memory** %MEMORY
  %loadMem_47621f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12420 = getelementptr inbounds %struct.GPR, %struct.GPR* %12419, i32 0, i32 33
  %12421 = getelementptr inbounds %struct.Reg, %struct.Reg* %12420, i32 0, i32 0
  %PC.i1638 = bitcast %union.anon* %12421 to i64*
  %12422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12423 = getelementptr inbounds %struct.GPR, %struct.GPR* %12422, i32 0, i32 15
  %12424 = getelementptr inbounds %struct.Reg, %struct.Reg* %12423, i32 0, i32 0
  %RBP.i1639 = bitcast %union.anon* %12424 to i64*
  %12425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12426 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12425, i64 0, i64 1
  %XMM1.i1640 = bitcast %union.VectorReg* %12426 to %union.vec128_t*
  %12427 = load i64, i64* %RBP.i1639
  %12428 = sub i64 %12427, 1100
  %12429 = bitcast %union.vec128_t* %XMM1.i1640 to i8*
  %12430 = load i64, i64* %PC.i1638
  %12431 = add i64 %12430, 8
  store i64 %12431, i64* %PC.i1638
  %12432 = bitcast i8* %12429 to <2 x float>*
  %12433 = load <2 x float>, <2 x float>* %12432, align 1
  %12434 = extractelement <2 x float> %12433, i32 0
  %12435 = inttoptr i64 %12428 to float*
  store float %12434, float* %12435
  store %struct.Memory* %loadMem_47621f, %struct.Memory** %MEMORY
  %loadMem_476227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12437 = getelementptr inbounds %struct.GPR, %struct.GPR* %12436, i32 0, i32 33
  %12438 = getelementptr inbounds %struct.Reg, %struct.Reg* %12437, i32 0, i32 0
  %PC.i1635 = bitcast %union.anon* %12438 to i64*
  %12439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12440 = getelementptr inbounds %struct.GPR, %struct.GPR* %12439, i32 0, i32 9
  %12441 = getelementptr inbounds %struct.Reg, %struct.Reg* %12440, i32 0, i32 0
  %RSI.i1636 = bitcast %union.anon* %12441 to i64*
  %12442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12443 = getelementptr inbounds %struct.GPR, %struct.GPR* %12442, i32 0, i32 15
  %12444 = getelementptr inbounds %struct.Reg, %struct.Reg* %12443, i32 0, i32 0
  %RBP.i1637 = bitcast %union.anon* %12444 to i64*
  %12445 = load i64, i64* %RBP.i1637
  %12446 = sub i64 %12445, 44
  %12447 = load i64, i64* %PC.i1635
  %12448 = add i64 %12447, 4
  store i64 %12448, i64* %PC.i1635
  %12449 = inttoptr i64 %12446 to i32*
  %12450 = load i32, i32* %12449
  %12451 = sext i32 %12450 to i64
  store i64 %12451, i64* %RSI.i1636, align 8
  store %struct.Memory* %loadMem_476227, %struct.Memory** %MEMORY
  %loadMem_47622b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12453 = getelementptr inbounds %struct.GPR, %struct.GPR* %12452, i32 0, i32 33
  %12454 = getelementptr inbounds %struct.Reg, %struct.Reg* %12453, i32 0, i32 0
  %PC.i1631 = bitcast %union.anon* %12454 to i64*
  %12455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12456 = getelementptr inbounds %struct.GPR, %struct.GPR* %12455, i32 0, i32 7
  %12457 = getelementptr inbounds %struct.Reg, %struct.Reg* %12456, i32 0, i32 0
  %RDX.i1632 = bitcast %union.anon* %12457 to i64*
  %12458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12459 = getelementptr inbounds %struct.GPR, %struct.GPR* %12458, i32 0, i32 9
  %12460 = getelementptr inbounds %struct.Reg, %struct.Reg* %12459, i32 0, i32 0
  %RSI.i1633 = bitcast %union.anon* %12460 to i64*
  %12461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12462 = getelementptr inbounds %struct.GPR, %struct.GPR* %12461, i32 0, i32 15
  %12463 = getelementptr inbounds %struct.Reg, %struct.Reg* %12462, i32 0, i32 0
  %RBP.i1634 = bitcast %union.anon* %12463 to i64*
  %12464 = load i64, i64* %RBP.i1634
  %12465 = load i64, i64* %RSI.i1633
  %12466 = mul i64 %12465, 4
  %12467 = add i64 %12464, -128
  %12468 = add i64 %12467, %12466
  %12469 = load i64, i64* %PC.i1631
  %12470 = add i64 %12469, 4
  store i64 %12470, i64* %PC.i1631
  %12471 = inttoptr i64 %12468 to i32*
  %12472 = load i32, i32* %12471
  %12473 = zext i32 %12472 to i64
  store i64 %12473, i64* %RDX.i1632, align 8
  store %struct.Memory* %loadMem_47622b, %struct.Memory** %MEMORY
  %loadMem_47622f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12475 = getelementptr inbounds %struct.GPR, %struct.GPR* %12474, i32 0, i32 33
  %12476 = getelementptr inbounds %struct.Reg, %struct.Reg* %12475, i32 0, i32 0
  %PC.i1628 = bitcast %union.anon* %12476 to i64*
  %12477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12478 = getelementptr inbounds %struct.GPR, %struct.GPR* %12477, i32 0, i32 7
  %12479 = getelementptr inbounds %struct.Reg, %struct.Reg* %12478, i32 0, i32 0
  %EDX.i1629 = bitcast %union.anon* %12479 to i32*
  %12480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12481 = getelementptr inbounds %struct.GPR, %struct.GPR* %12480, i32 0, i32 1
  %12482 = getelementptr inbounds %struct.Reg, %struct.Reg* %12481, i32 0, i32 0
  %RAX.i1630 = bitcast %union.anon* %12482 to i64*
  %12483 = load i32, i32* %EDX.i1629
  %12484 = zext i32 %12483 to i64
  %12485 = load i64, i64* %PC.i1628
  %12486 = add i64 %12485, 2
  store i64 %12486, i64* %PC.i1628
  %12487 = and i64 %12484, 4294967295
  store i64 %12487, i64* %RAX.i1630, align 8
  store %struct.Memory* %loadMem_47622f, %struct.Memory** %MEMORY
  %loadMem_476231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12489 = getelementptr inbounds %struct.GPR, %struct.GPR* %12488, i32 0, i32 33
  %12490 = getelementptr inbounds %struct.Reg, %struct.Reg* %12489, i32 0, i32 0
  %PC.i1627 = bitcast %union.anon* %12490 to i64*
  %12491 = load i64, i64* %PC.i1627
  %12492 = add i64 %12491, 1
  store i64 %12492, i64* %PC.i1627
  %12493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %12494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12495 = bitcast %union.anon* %12494 to i32*
  %12496 = load i32, i32* %12495, align 8
  %12497 = sext i32 %12496 to i64
  %12498 = lshr i64 %12497, 32
  store i64 %12498, i64* %12493, align 8
  store %struct.Memory* %loadMem_476231, %struct.Memory** %MEMORY
  %loadMem_476232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12500 = getelementptr inbounds %struct.GPR, %struct.GPR* %12499, i32 0, i32 33
  %12501 = getelementptr inbounds %struct.Reg, %struct.Reg* %12500, i32 0, i32 0
  %PC.i1622 = bitcast %union.anon* %12501 to i64*
  %12502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12503 = getelementptr inbounds %struct.GPR, %struct.GPR* %12502, i32 0, i32 5
  %12504 = getelementptr inbounds %struct.Reg, %struct.Reg* %12503, i32 0, i32 0
  %ECX.i1623 = bitcast %union.anon* %12504 to i32*
  %12505 = load i32, i32* %ECX.i1623
  %12506 = zext i32 %12505 to i64
  %12507 = load i64, i64* %PC.i1622
  %12508 = add i64 %12507, 2
  store i64 %12508, i64* %PC.i1622
  %12509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12510 = bitcast %union.anon* %12509 to i32*
  %12511 = load i32, i32* %12510, align 8
  %12512 = zext i32 %12511 to i64
  %12513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12514 = bitcast %union.anon* %12513 to i32*
  %12515 = load i32, i32* %12514, align 8
  %12516 = zext i32 %12515 to i64
  %12517 = shl i64 %12506, 32
  %12518 = ashr exact i64 %12517, 32
  %12519 = shl i64 %12516, 32
  %12520 = or i64 %12519, %12512
  %12521 = sdiv i64 %12520, %12518
  %12522 = shl i64 %12521, 32
  %12523 = ashr exact i64 %12522, 32
  %12524 = icmp eq i64 %12521, %12523
  br i1 %12524, label %12529, label %12525

; <label>:12525:                                  ; preds = %routine_idivl__ecx.exit1648
  %12526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12527 = load i64, i64* %12526, align 8
  %12528 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12527, %struct.Memory* %loadMem_476232)
  br label %routine_idivl__ecx.exit1624

; <label>:12529:                                  ; preds = %routine_idivl__ecx.exit1648
  %12530 = srem i64 %12520, %12518
  %12531 = getelementptr inbounds %union.anon, %union.anon* %12509, i64 0, i32 0
  %12532 = and i64 %12521, 4294967295
  store i64 %12532, i64* %12531, align 8
  %12533 = getelementptr inbounds %union.anon, %union.anon* %12513, i64 0, i32 0
  %12534 = and i64 %12530, 4294967295
  store i64 %12534, i64* %12533, align 8
  %12535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12535, align 1
  %12536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %12536, align 1
  %12537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12537, align 1
  %12538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12538, align 1
  %12539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12539, align 1
  %12540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12540, align 1
  br label %routine_idivl__ecx.exit1624

routine_idivl__ecx.exit1624:                      ; preds = %12525, %12529
  %12541 = phi %struct.Memory* [ %12528, %12525 ], [ %loadMem_476232, %12529 ]
  store %struct.Memory* %12541, %struct.Memory** %MEMORY
  %loadMem_476234 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12543 = getelementptr inbounds %struct.GPR, %struct.GPR* %12542, i32 0, i32 33
  %12544 = getelementptr inbounds %struct.Reg, %struct.Reg* %12543, i32 0, i32 0
  %PC.i1620 = bitcast %union.anon* %12544 to i64*
  %12545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12546 = getelementptr inbounds %struct.GPR, %struct.GPR* %12545, i32 0, i32 1
  %12547 = getelementptr inbounds %struct.Reg, %struct.Reg* %12546, i32 0, i32 0
  %RAX.i1621 = bitcast %union.anon* %12547 to i64*
  %12548 = load i64, i64* %RAX.i1621
  %12549 = load i64, i64* %PC.i1620
  %12550 = add i64 %12549, 3
  store i64 %12550, i64* %PC.i1620
  %12551 = trunc i64 %12548 to i32
  %12552 = sub i32 %12551, 1
  %12553 = zext i32 %12552 to i64
  store i64 %12553, i64* %RAX.i1621, align 8
  %12554 = icmp ult i32 %12551, 1
  %12555 = zext i1 %12554 to i8
  %12556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12555, i8* %12556, align 1
  %12557 = and i32 %12552, 255
  %12558 = call i32 @llvm.ctpop.i32(i32 %12557)
  %12559 = trunc i32 %12558 to i8
  %12560 = and i8 %12559, 1
  %12561 = xor i8 %12560, 1
  %12562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12561, i8* %12562, align 1
  %12563 = xor i64 1, %12548
  %12564 = trunc i64 %12563 to i32
  %12565 = xor i32 %12564, %12552
  %12566 = lshr i32 %12565, 4
  %12567 = trunc i32 %12566 to i8
  %12568 = and i8 %12567, 1
  %12569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12568, i8* %12569, align 1
  %12570 = icmp eq i32 %12552, 0
  %12571 = zext i1 %12570 to i8
  %12572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12571, i8* %12572, align 1
  %12573 = lshr i32 %12552, 31
  %12574 = trunc i32 %12573 to i8
  %12575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12574, i8* %12575, align 1
  %12576 = lshr i32 %12551, 31
  %12577 = xor i32 %12573, %12576
  %12578 = add i32 %12577, %12576
  %12579 = icmp eq i32 %12578, 2
  %12580 = zext i1 %12579 to i8
  %12581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12580, i8* %12581, align 1
  store %struct.Memory* %loadMem_476234, %struct.Memory** %MEMORY
  %loadMem_476237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12583 = getelementptr inbounds %struct.GPR, %struct.GPR* %12582, i32 0, i32 33
  %12584 = getelementptr inbounds %struct.Reg, %struct.Reg* %12583, i32 0, i32 0
  %PC.i1617 = bitcast %union.anon* %12584 to i64*
  %12585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12586 = getelementptr inbounds %struct.GPR, %struct.GPR* %12585, i32 0, i32 1
  %12587 = getelementptr inbounds %struct.Reg, %struct.Reg* %12586, i32 0, i32 0
  %EAX.i1618 = bitcast %union.anon* %12587 to i32*
  %12588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12589 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12588, i64 0, i64 1
  %YMM1.i1619 = bitcast %union.VectorReg* %12589 to %"class.std::bitset"*
  %12590 = bitcast %"class.std::bitset"* %YMM1.i1619 to i8*
  %12591 = load i32, i32* %EAX.i1618
  %12592 = zext i32 %12591 to i64
  %12593 = load i64, i64* %PC.i1617
  %12594 = add i64 %12593, 4
  store i64 %12594, i64* %PC.i1617
  %12595 = bitcast i8* %12590 to <2 x i32>*
  %12596 = load <2 x i32>, <2 x i32>* %12595, align 1
  %12597 = getelementptr inbounds i8, i8* %12590, i64 8
  %12598 = bitcast i8* %12597 to <2 x i32>*
  %12599 = load <2 x i32>, <2 x i32>* %12598, align 1
  %12600 = sitofp i32 %12591 to float
  %12601 = bitcast i8* %12590 to float*
  store float %12600, float* %12601, align 1
  %12602 = extractelement <2 x i32> %12596, i32 1
  %12603 = getelementptr inbounds i8, i8* %12590, i64 4
  %12604 = bitcast i8* %12603 to i32*
  store i32 %12602, i32* %12604, align 1
  %12605 = extractelement <2 x i32> %12599, i32 0
  %12606 = bitcast i8* %12597 to i32*
  store i32 %12605, i32* %12606, align 1
  %12607 = extractelement <2 x i32> %12599, i32 1
  %12608 = getelementptr inbounds i8, i8* %12590, i64 12
  %12609 = bitcast i8* %12608 to i32*
  store i32 %12607, i32* %12609, align 1
  store %struct.Memory* %loadMem_476237, %struct.Memory** %MEMORY
  %loadMem_47623b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12611 = getelementptr inbounds %struct.GPR, %struct.GPR* %12610, i32 0, i32 33
  %12612 = getelementptr inbounds %struct.Reg, %struct.Reg* %12611, i32 0, i32 0
  %PC.i1614 = bitcast %union.anon* %12612 to i64*
  %12613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12614 = getelementptr inbounds %struct.GPR, %struct.GPR* %12613, i32 0, i32 15
  %12615 = getelementptr inbounds %struct.Reg, %struct.Reg* %12614, i32 0, i32 0
  %RBP.i1615 = bitcast %union.anon* %12615 to i64*
  %12616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12617 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12616, i64 0, i64 1
  %XMM1.i1616 = bitcast %union.VectorReg* %12617 to %union.vec128_t*
  %12618 = load i64, i64* %RBP.i1615
  %12619 = sub i64 %12618, 1104
  %12620 = bitcast %union.vec128_t* %XMM1.i1616 to i8*
  %12621 = load i64, i64* %PC.i1614
  %12622 = add i64 %12621, 8
  store i64 %12622, i64* %PC.i1614
  %12623 = bitcast i8* %12620 to <2 x float>*
  %12624 = load <2 x float>, <2 x float>* %12623, align 1
  %12625 = extractelement <2 x float> %12624, i32 0
  %12626 = inttoptr i64 %12619 to float*
  store float %12625, float* %12626
  store %struct.Memory* %loadMem_47623b, %struct.Memory** %MEMORY
  %loadMem_476243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12628 = getelementptr inbounds %struct.GPR, %struct.GPR* %12627, i32 0, i32 33
  %12629 = getelementptr inbounds %struct.Reg, %struct.Reg* %12628, i32 0, i32 0
  %PC.i1611 = bitcast %union.anon* %12629 to i64*
  %12630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12631 = getelementptr inbounds %struct.GPR, %struct.GPR* %12630, i32 0, i32 9
  %12632 = getelementptr inbounds %struct.Reg, %struct.Reg* %12631, i32 0, i32 0
  %RSI.i1612 = bitcast %union.anon* %12632 to i64*
  %12633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12634 = getelementptr inbounds %struct.GPR, %struct.GPR* %12633, i32 0, i32 15
  %12635 = getelementptr inbounds %struct.Reg, %struct.Reg* %12634, i32 0, i32 0
  %RBP.i1613 = bitcast %union.anon* %12635 to i64*
  %12636 = load i64, i64* %RBP.i1613
  %12637 = sub i64 %12636, 44
  %12638 = load i64, i64* %PC.i1611
  %12639 = add i64 %12638, 4
  store i64 %12639, i64* %PC.i1611
  %12640 = inttoptr i64 %12637 to i32*
  %12641 = load i32, i32* %12640
  %12642 = sext i32 %12641 to i64
  store i64 %12642, i64* %RSI.i1612, align 8
  store %struct.Memory* %loadMem_476243, %struct.Memory** %MEMORY
  %loadMem_476247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12644 = getelementptr inbounds %struct.GPR, %struct.GPR* %12643, i32 0, i32 33
  %12645 = getelementptr inbounds %struct.Reg, %struct.Reg* %12644, i32 0, i32 0
  %PC.i1607 = bitcast %union.anon* %12645 to i64*
  %12646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12647 = getelementptr inbounds %struct.GPR, %struct.GPR* %12646, i32 0, i32 1
  %12648 = getelementptr inbounds %struct.Reg, %struct.Reg* %12647, i32 0, i32 0
  %RAX.i1608 = bitcast %union.anon* %12648 to i64*
  %12649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12650 = getelementptr inbounds %struct.GPR, %struct.GPR* %12649, i32 0, i32 9
  %12651 = getelementptr inbounds %struct.Reg, %struct.Reg* %12650, i32 0, i32 0
  %RSI.i1609 = bitcast %union.anon* %12651 to i64*
  %12652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12653 = getelementptr inbounds %struct.GPR, %struct.GPR* %12652, i32 0, i32 15
  %12654 = getelementptr inbounds %struct.Reg, %struct.Reg* %12653, i32 0, i32 0
  %RBP.i1610 = bitcast %union.anon* %12654 to i64*
  %12655 = load i64, i64* %RBP.i1610
  %12656 = load i64, i64* %RSI.i1609
  %12657 = mul i64 %12656, 4
  %12658 = add i64 %12655, -128
  %12659 = add i64 %12658, %12657
  %12660 = load i64, i64* %PC.i1607
  %12661 = add i64 %12660, 4
  store i64 %12661, i64* %PC.i1607
  %12662 = inttoptr i64 %12659 to i32*
  %12663 = load i32, i32* %12662
  %12664 = zext i32 %12663 to i64
  store i64 %12664, i64* %RAX.i1608, align 8
  store %struct.Memory* %loadMem_476247, %struct.Memory** %MEMORY
  %loadMem_47624b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12666 = getelementptr inbounds %struct.GPR, %struct.GPR* %12665, i32 0, i32 33
  %12667 = getelementptr inbounds %struct.Reg, %struct.Reg* %12666, i32 0, i32 0
  %PC.i1606 = bitcast %union.anon* %12667 to i64*
  %12668 = load i64, i64* %PC.i1606
  %12669 = add i64 %12668, 1
  store i64 %12669, i64* %PC.i1606
  %12670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %12671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12672 = bitcast %union.anon* %12671 to i32*
  %12673 = load i32, i32* %12672, align 8
  %12674 = sext i32 %12673 to i64
  %12675 = lshr i64 %12674, 32
  store i64 %12675, i64* %12670, align 8
  store %struct.Memory* %loadMem_47624b, %struct.Memory** %MEMORY
  %loadMem_47624c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12677 = getelementptr inbounds %struct.GPR, %struct.GPR* %12676, i32 0, i32 33
  %12678 = getelementptr inbounds %struct.Reg, %struct.Reg* %12677, i32 0, i32 0
  %PC.i1601 = bitcast %union.anon* %12678 to i64*
  %12679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12680 = getelementptr inbounds %struct.GPR, %struct.GPR* %12679, i32 0, i32 5
  %12681 = getelementptr inbounds %struct.Reg, %struct.Reg* %12680, i32 0, i32 0
  %ECX.i1602 = bitcast %union.anon* %12681 to i32*
  %12682 = load i32, i32* %ECX.i1602
  %12683 = zext i32 %12682 to i64
  %12684 = load i64, i64* %PC.i1601
  %12685 = add i64 %12684, 2
  store i64 %12685, i64* %PC.i1601
  %12686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12687 = bitcast %union.anon* %12686 to i32*
  %12688 = load i32, i32* %12687, align 8
  %12689 = zext i32 %12688 to i64
  %12690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12691 = bitcast %union.anon* %12690 to i32*
  %12692 = load i32, i32* %12691, align 8
  %12693 = zext i32 %12692 to i64
  %12694 = shl i64 %12683, 32
  %12695 = ashr exact i64 %12694, 32
  %12696 = shl i64 %12693, 32
  %12697 = or i64 %12696, %12689
  %12698 = sdiv i64 %12697, %12695
  %12699 = shl i64 %12698, 32
  %12700 = ashr exact i64 %12699, 32
  %12701 = icmp eq i64 %12698, %12700
  br i1 %12701, label %12706, label %12702

; <label>:12702:                                  ; preds = %routine_idivl__ecx.exit1624
  %12703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12704 = load i64, i64* %12703, align 8
  %12705 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12704, %struct.Memory* %loadMem_47624c)
  br label %routine_idivl__ecx.exit1603

; <label>:12706:                                  ; preds = %routine_idivl__ecx.exit1624
  %12707 = srem i64 %12697, %12695
  %12708 = getelementptr inbounds %union.anon, %union.anon* %12686, i64 0, i32 0
  %12709 = and i64 %12698, 4294967295
  store i64 %12709, i64* %12708, align 8
  %12710 = getelementptr inbounds %union.anon, %union.anon* %12690, i64 0, i32 0
  %12711 = and i64 %12707, 4294967295
  store i64 %12711, i64* %12710, align 8
  %12712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12712, align 1
  %12713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %12713, align 1
  %12714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12714, align 1
  %12715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12715, align 1
  %12716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12716, align 1
  %12717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12717, align 1
  br label %routine_idivl__ecx.exit1603

routine_idivl__ecx.exit1603:                      ; preds = %12702, %12706
  %12718 = phi %struct.Memory* [ %12705, %12702 ], [ %loadMem_47624c, %12706 ]
  store %struct.Memory* %12718, %struct.Memory** %MEMORY
  %loadMem_47624e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12720 = getelementptr inbounds %struct.GPR, %struct.GPR* %12719, i32 0, i32 33
  %12721 = getelementptr inbounds %struct.Reg, %struct.Reg* %12720, i32 0, i32 0
  %PC.i1599 = bitcast %union.anon* %12721 to i64*
  %12722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12723 = getelementptr inbounds %struct.GPR, %struct.GPR* %12722, i32 0, i32 7
  %12724 = getelementptr inbounds %struct.Reg, %struct.Reg* %12723, i32 0, i32 0
  %RDX.i1600 = bitcast %union.anon* %12724 to i64*
  %12725 = load i64, i64* %RDX.i1600
  %12726 = load i64, i64* %PC.i1599
  %12727 = add i64 %12726, 3
  store i64 %12727, i64* %PC.i1599
  %12728 = trunc i64 %12725 to i32
  %12729 = sub i32 %12728, 1
  %12730 = zext i32 %12729 to i64
  store i64 %12730, i64* %RDX.i1600, align 8
  %12731 = icmp ult i32 %12728, 1
  %12732 = zext i1 %12731 to i8
  %12733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12732, i8* %12733, align 1
  %12734 = and i32 %12729, 255
  %12735 = call i32 @llvm.ctpop.i32(i32 %12734)
  %12736 = trunc i32 %12735 to i8
  %12737 = and i8 %12736, 1
  %12738 = xor i8 %12737, 1
  %12739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12738, i8* %12739, align 1
  %12740 = xor i64 1, %12725
  %12741 = trunc i64 %12740 to i32
  %12742 = xor i32 %12741, %12729
  %12743 = lshr i32 %12742, 4
  %12744 = trunc i32 %12743 to i8
  %12745 = and i8 %12744, 1
  %12746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12745, i8* %12746, align 1
  %12747 = icmp eq i32 %12729, 0
  %12748 = zext i1 %12747 to i8
  %12749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12748, i8* %12749, align 1
  %12750 = lshr i32 %12729, 31
  %12751 = trunc i32 %12750 to i8
  %12752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12751, i8* %12752, align 1
  %12753 = lshr i32 %12728, 31
  %12754 = xor i32 %12750, %12753
  %12755 = add i32 %12754, %12753
  %12756 = icmp eq i32 %12755, 2
  %12757 = zext i1 %12756 to i8
  %12758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12757, i8* %12758, align 1
  store %struct.Memory* %loadMem_47624e, %struct.Memory** %MEMORY
  %loadMem_476251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12760 = getelementptr inbounds %struct.GPR, %struct.GPR* %12759, i32 0, i32 33
  %12761 = getelementptr inbounds %struct.Reg, %struct.Reg* %12760, i32 0, i32 0
  %PC.i1596 = bitcast %union.anon* %12761 to i64*
  %12762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12763 = getelementptr inbounds %struct.GPR, %struct.GPR* %12762, i32 0, i32 7
  %12764 = getelementptr inbounds %struct.Reg, %struct.Reg* %12763, i32 0, i32 0
  %EDX.i1597 = bitcast %union.anon* %12764 to i32*
  %12765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12766 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12765, i64 0, i64 1
  %YMM1.i1598 = bitcast %union.VectorReg* %12766 to %"class.std::bitset"*
  %12767 = bitcast %"class.std::bitset"* %YMM1.i1598 to i8*
  %12768 = load i32, i32* %EDX.i1597
  %12769 = zext i32 %12768 to i64
  %12770 = load i64, i64* %PC.i1596
  %12771 = add i64 %12770, 4
  store i64 %12771, i64* %PC.i1596
  %12772 = bitcast i8* %12767 to <2 x i32>*
  %12773 = load <2 x i32>, <2 x i32>* %12772, align 1
  %12774 = getelementptr inbounds i8, i8* %12767, i64 8
  %12775 = bitcast i8* %12774 to <2 x i32>*
  %12776 = load <2 x i32>, <2 x i32>* %12775, align 1
  %12777 = sitofp i32 %12768 to float
  %12778 = bitcast i8* %12767 to float*
  store float %12777, float* %12778, align 1
  %12779 = extractelement <2 x i32> %12773, i32 1
  %12780 = getelementptr inbounds i8, i8* %12767, i64 4
  %12781 = bitcast i8* %12780 to i32*
  store i32 %12779, i32* %12781, align 1
  %12782 = extractelement <2 x i32> %12776, i32 0
  %12783 = bitcast i8* %12774 to i32*
  store i32 %12782, i32* %12783, align 1
  %12784 = extractelement <2 x i32> %12776, i32 1
  %12785 = getelementptr inbounds i8, i8* %12767, i64 12
  %12786 = bitcast i8* %12785 to i32*
  store i32 %12784, i32* %12786, align 1
  store %struct.Memory* %loadMem_476251, %struct.Memory** %MEMORY
  %loadMem_476255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12788 = getelementptr inbounds %struct.GPR, %struct.GPR* %12787, i32 0, i32 33
  %12789 = getelementptr inbounds %struct.Reg, %struct.Reg* %12788, i32 0, i32 0
  %PC.i1593 = bitcast %union.anon* %12789 to i64*
  %12790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12791 = getelementptr inbounds %struct.GPR, %struct.GPR* %12790, i32 0, i32 15
  %12792 = getelementptr inbounds %struct.Reg, %struct.Reg* %12791, i32 0, i32 0
  %RBP.i1594 = bitcast %union.anon* %12792 to i64*
  %12793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12794 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12793, i64 0, i64 1
  %XMM1.i1595 = bitcast %union.VectorReg* %12794 to %union.vec128_t*
  %12795 = load i64, i64* %RBP.i1594
  %12796 = sub i64 %12795, 1108
  %12797 = bitcast %union.vec128_t* %XMM1.i1595 to i8*
  %12798 = load i64, i64* %PC.i1593
  %12799 = add i64 %12798, 8
  store i64 %12799, i64* %PC.i1593
  %12800 = bitcast i8* %12797 to <2 x float>*
  %12801 = load <2 x float>, <2 x float>* %12800, align 1
  %12802 = extractelement <2 x float> %12801, i32 0
  %12803 = inttoptr i64 %12796 to float*
  store float %12802, float* %12803
  store %struct.Memory* %loadMem_476255, %struct.Memory** %MEMORY
  %loadMem_47625d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12805 = getelementptr inbounds %struct.GPR, %struct.GPR* %12804, i32 0, i32 33
  %12806 = getelementptr inbounds %struct.Reg, %struct.Reg* %12805, i32 0, i32 0
  %PC.i1590 = bitcast %union.anon* %12806 to i64*
  %12807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12808 = getelementptr inbounds %struct.GPR, %struct.GPR* %12807, i32 0, i32 15
  %12809 = getelementptr inbounds %struct.Reg, %struct.Reg* %12808, i32 0, i32 0
  %RBP.i1591 = bitcast %union.anon* %12809 to i64*
  %12810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12811 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12810, i64 0, i64 1
  %YMM1.i1592 = bitcast %union.VectorReg* %12811 to %"class.std::bitset"*
  %12812 = bitcast %"class.std::bitset"* %YMM1.i1592 to i8*
  %12813 = load i64, i64* %RBP.i1591
  %12814 = sub i64 %12813, 1100
  %12815 = load i64, i64* %PC.i1590
  %12816 = add i64 %12815, 8
  store i64 %12816, i64* %PC.i1590
  %12817 = inttoptr i64 %12814 to float*
  %12818 = load float, float* %12817
  %12819 = fpext float %12818 to double
  %12820 = bitcast i8* %12812 to double*
  store double %12819, double* %12820, align 1
  store %struct.Memory* %loadMem_47625d, %struct.Memory** %MEMORY
  %loadMem_476265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12822 = getelementptr inbounds %struct.GPR, %struct.GPR* %12821, i32 0, i32 33
  %12823 = getelementptr inbounds %struct.Reg, %struct.Reg* %12822, i32 0, i32 0
  %PC.i1587 = bitcast %union.anon* %12823 to i64*
  %12824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12825 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12824, i64 0, i64 0
  %YMM0.i1588 = bitcast %union.VectorReg* %12825 to %"class.std::bitset"*
  %12826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12827 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12826, i64 0, i64 1
  %XMM1.i1589 = bitcast %union.VectorReg* %12827 to %union.vec128_t*
  %12828 = bitcast %"class.std::bitset"* %YMM0.i1588 to i8*
  %12829 = bitcast %"class.std::bitset"* %YMM0.i1588 to i8*
  %12830 = bitcast %union.vec128_t* %XMM1.i1589 to i8*
  %12831 = load i64, i64* %PC.i1587
  %12832 = add i64 %12831, 4
  store i64 %12832, i64* %PC.i1587
  %12833 = bitcast i8* %12829 to double*
  %12834 = load double, double* %12833, align 1
  %12835 = getelementptr inbounds i8, i8* %12829, i64 8
  %12836 = bitcast i8* %12835 to i64*
  %12837 = load i64, i64* %12836, align 1
  %12838 = bitcast i8* %12830 to double*
  %12839 = load double, double* %12838, align 1
  %12840 = fadd double %12834, %12839
  %12841 = bitcast i8* %12828 to double*
  store double %12840, double* %12841, align 1
  %12842 = getelementptr inbounds i8, i8* %12828, i64 8
  %12843 = bitcast i8* %12842 to i64*
  store i64 %12837, i64* %12843, align 1
  store %struct.Memory* %loadMem_476265, %struct.Memory** %MEMORY
  %loadMem_476269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12845 = getelementptr inbounds %struct.GPR, %struct.GPR* %12844, i32 0, i32 33
  %12846 = getelementptr inbounds %struct.Reg, %struct.Reg* %12845, i32 0, i32 0
  %PC.i1584 = bitcast %union.anon* %12846 to i64*
  %12847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12848 = getelementptr inbounds %struct.GPR, %struct.GPR* %12847, i32 0, i32 15
  %12849 = getelementptr inbounds %struct.Reg, %struct.Reg* %12848, i32 0, i32 0
  %RBP.i1585 = bitcast %union.anon* %12849 to i64*
  %12850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12851 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12850, i64 0, i64 1
  %YMM1.i1586 = bitcast %union.VectorReg* %12851 to %"class.std::bitset"*
  %12852 = bitcast %"class.std::bitset"* %YMM1.i1586 to i8*
  %12853 = load i64, i64* %RBP.i1585
  %12854 = sub i64 %12853, 36
  %12855 = load i64, i64* %PC.i1584
  %12856 = add i64 %12855, 5
  store i64 %12856, i64* %PC.i1584
  %12857 = bitcast i8* %12852 to <2 x i32>*
  %12858 = load <2 x i32>, <2 x i32>* %12857, align 1
  %12859 = getelementptr inbounds i8, i8* %12852, i64 8
  %12860 = bitcast i8* %12859 to <2 x i32>*
  %12861 = load <2 x i32>, <2 x i32>* %12860, align 1
  %12862 = inttoptr i64 %12854 to i32*
  %12863 = load i32, i32* %12862
  %12864 = sitofp i32 %12863 to float
  %12865 = bitcast i8* %12852 to float*
  store float %12864, float* %12865, align 1
  %12866 = extractelement <2 x i32> %12858, i32 1
  %12867 = getelementptr inbounds i8, i8* %12852, i64 4
  %12868 = bitcast i8* %12867 to i32*
  store i32 %12866, i32* %12868, align 1
  %12869 = extractelement <2 x i32> %12861, i32 0
  %12870 = bitcast i8* %12859 to i32*
  store i32 %12869, i32* %12870, align 1
  %12871 = extractelement <2 x i32> %12861, i32 1
  %12872 = getelementptr inbounds i8, i8* %12852, i64 12
  %12873 = bitcast i8* %12872 to i32*
  store i32 %12871, i32* %12873, align 1
  store %struct.Memory* %loadMem_476269, %struct.Memory** %MEMORY
  %loadMem_47626e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12875 = getelementptr inbounds %struct.GPR, %struct.GPR* %12874, i32 0, i32 33
  %12876 = getelementptr inbounds %struct.Reg, %struct.Reg* %12875, i32 0, i32 0
  %PC.i1581 = bitcast %union.anon* %12876 to i64*
  %12877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12878 = getelementptr inbounds %struct.GPR, %struct.GPR* %12877, i32 0, i32 15
  %12879 = getelementptr inbounds %struct.Reg, %struct.Reg* %12878, i32 0, i32 0
  %RBP.i1582 = bitcast %union.anon* %12879 to i64*
  %12880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12881 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12880, i64 0, i64 1
  %YMM1.i1583 = bitcast %union.VectorReg* %12881 to %"class.std::bitset"*
  %12882 = bitcast %"class.std::bitset"* %YMM1.i1583 to i8*
  %12883 = bitcast %"class.std::bitset"* %YMM1.i1583 to i8*
  %12884 = load i64, i64* %RBP.i1582
  %12885 = sub i64 %12884, 1096
  %12886 = load i64, i64* %PC.i1581
  %12887 = add i64 %12886, 8
  store i64 %12887, i64* %PC.i1581
  %12888 = bitcast i8* %12883 to <2 x float>*
  %12889 = load <2 x float>, <2 x float>* %12888, align 1
  %12890 = getelementptr inbounds i8, i8* %12883, i64 8
  %12891 = bitcast i8* %12890 to <2 x i32>*
  %12892 = load <2 x i32>, <2 x i32>* %12891, align 1
  %12893 = inttoptr i64 %12885 to float*
  %12894 = load float, float* %12893
  %12895 = extractelement <2 x float> %12889, i32 0
  %12896 = fsub float %12895, %12894
  %12897 = bitcast i8* %12882 to float*
  store float %12896, float* %12897, align 1
  %12898 = bitcast <2 x float> %12889 to <2 x i32>
  %12899 = extractelement <2 x i32> %12898, i32 1
  %12900 = getelementptr inbounds i8, i8* %12882, i64 4
  %12901 = bitcast i8* %12900 to i32*
  store i32 %12899, i32* %12901, align 1
  %12902 = extractelement <2 x i32> %12892, i32 0
  %12903 = getelementptr inbounds i8, i8* %12882, i64 8
  %12904 = bitcast i8* %12903 to i32*
  store i32 %12902, i32* %12904, align 1
  %12905 = extractelement <2 x i32> %12892, i32 1
  %12906 = getelementptr inbounds i8, i8* %12882, i64 12
  %12907 = bitcast i8* %12906 to i32*
  store i32 %12905, i32* %12907, align 1
  store %struct.Memory* %loadMem_47626e, %struct.Memory** %MEMORY
  %loadMem_476276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12909 = getelementptr inbounds %struct.GPR, %struct.GPR* %12908, i32 0, i32 33
  %12910 = getelementptr inbounds %struct.Reg, %struct.Reg* %12909, i32 0, i32 0
  %PC.i1578 = bitcast %union.anon* %12910 to i64*
  %12911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12912 = getelementptr inbounds %struct.GPR, %struct.GPR* %12911, i32 0, i32 15
  %12913 = getelementptr inbounds %struct.Reg, %struct.Reg* %12912, i32 0, i32 0
  %RBP.i1579 = bitcast %union.anon* %12913 to i64*
  %12914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12915 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12914, i64 0, i64 2
  %YMM2.i1580 = bitcast %union.VectorReg* %12915 to %"class.std::bitset"*
  %12916 = bitcast %"class.std::bitset"* %YMM2.i1580 to i8*
  %12917 = load i64, i64* %RBP.i1579
  %12918 = sub i64 %12917, 1108
  %12919 = load i64, i64* %PC.i1578
  %12920 = add i64 %12919, 8
  store i64 %12920, i64* %PC.i1578
  %12921 = inttoptr i64 %12918 to float*
  %12922 = load float, float* %12921
  %12923 = bitcast i8* %12916 to float*
  store float %12922, float* %12923, align 1
  %12924 = getelementptr inbounds i8, i8* %12916, i64 4
  %12925 = bitcast i8* %12924 to float*
  store float 0.000000e+00, float* %12925, align 1
  %12926 = getelementptr inbounds i8, i8* %12916, i64 8
  %12927 = bitcast i8* %12926 to float*
  store float 0.000000e+00, float* %12927, align 1
  %12928 = getelementptr inbounds i8, i8* %12916, i64 12
  %12929 = bitcast i8* %12928 to float*
  store float 0.000000e+00, float* %12929, align 1
  store %struct.Memory* %loadMem_476276, %struct.Memory** %MEMORY
  %loadMem_47627e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12931 = getelementptr inbounds %struct.GPR, %struct.GPR* %12930, i32 0, i32 33
  %12932 = getelementptr inbounds %struct.Reg, %struct.Reg* %12931, i32 0, i32 0
  %PC.i1575 = bitcast %union.anon* %12932 to i64*
  %12933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12934 = getelementptr inbounds %struct.GPR, %struct.GPR* %12933, i32 0, i32 15
  %12935 = getelementptr inbounds %struct.Reg, %struct.Reg* %12934, i32 0, i32 0
  %RBP.i1576 = bitcast %union.anon* %12935 to i64*
  %12936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12937 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12936, i64 0, i64 2
  %YMM2.i1577 = bitcast %union.VectorReg* %12937 to %"class.std::bitset"*
  %12938 = bitcast %"class.std::bitset"* %YMM2.i1577 to i8*
  %12939 = bitcast %"class.std::bitset"* %YMM2.i1577 to i8*
  %12940 = load i64, i64* %RBP.i1576
  %12941 = sub i64 %12940, 1100
  %12942 = load i64, i64* %PC.i1575
  %12943 = add i64 %12942, 8
  store i64 %12943, i64* %PC.i1575
  %12944 = bitcast i8* %12939 to <2 x float>*
  %12945 = load <2 x float>, <2 x float>* %12944, align 1
  %12946 = getelementptr inbounds i8, i8* %12939, i64 8
  %12947 = bitcast i8* %12946 to <2 x i32>*
  %12948 = load <2 x i32>, <2 x i32>* %12947, align 1
  %12949 = inttoptr i64 %12941 to float*
  %12950 = load float, float* %12949
  %12951 = extractelement <2 x float> %12945, i32 0
  %12952 = fsub float %12951, %12950
  %12953 = bitcast i8* %12938 to float*
  store float %12952, float* %12953, align 1
  %12954 = bitcast <2 x float> %12945 to <2 x i32>
  %12955 = extractelement <2 x i32> %12954, i32 1
  %12956 = getelementptr inbounds i8, i8* %12938, i64 4
  %12957 = bitcast i8* %12956 to i32*
  store i32 %12955, i32* %12957, align 1
  %12958 = extractelement <2 x i32> %12948, i32 0
  %12959 = getelementptr inbounds i8, i8* %12938, i64 8
  %12960 = bitcast i8* %12959 to i32*
  store i32 %12958, i32* %12960, align 1
  %12961 = extractelement <2 x i32> %12948, i32 1
  %12962 = getelementptr inbounds i8, i8* %12938, i64 12
  %12963 = bitcast i8* %12962 to i32*
  store i32 %12961, i32* %12963, align 1
  store %struct.Memory* %loadMem_47627e, %struct.Memory** %MEMORY
  %loadMem_476286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12965 = getelementptr inbounds %struct.GPR, %struct.GPR* %12964, i32 0, i32 33
  %12966 = getelementptr inbounds %struct.Reg, %struct.Reg* %12965, i32 0, i32 0
  %PC.i1572 = bitcast %union.anon* %12966 to i64*
  %12967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12968 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12967, i64 0, i64 1
  %YMM1.i1573 = bitcast %union.VectorReg* %12968 to %"class.std::bitset"*
  %12969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12970 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12969, i64 0, i64 2
  %XMM2.i1574 = bitcast %union.VectorReg* %12970 to %union.vec128_t*
  %12971 = bitcast %"class.std::bitset"* %YMM1.i1573 to i8*
  %12972 = bitcast %"class.std::bitset"* %YMM1.i1573 to i8*
  %12973 = bitcast %union.vec128_t* %XMM2.i1574 to i8*
  %12974 = load i64, i64* %PC.i1572
  %12975 = add i64 %12974, 4
  store i64 %12975, i64* %PC.i1572
  %12976 = bitcast i8* %12972 to <2 x float>*
  %12977 = load <2 x float>, <2 x float>* %12976, align 1
  %12978 = getelementptr inbounds i8, i8* %12972, i64 8
  %12979 = bitcast i8* %12978 to <2 x i32>*
  %12980 = load <2 x i32>, <2 x i32>* %12979, align 1
  %12981 = bitcast i8* %12973 to <2 x float>*
  %12982 = load <2 x float>, <2 x float>* %12981, align 1
  %12983 = extractelement <2 x float> %12977, i32 0
  %12984 = extractelement <2 x float> %12982, i32 0
  %12985 = fmul float %12983, %12984
  %12986 = bitcast i8* %12971 to float*
  store float %12985, float* %12986, align 1
  %12987 = bitcast <2 x float> %12977 to <2 x i32>
  %12988 = extractelement <2 x i32> %12987, i32 1
  %12989 = getelementptr inbounds i8, i8* %12971, i64 4
  %12990 = bitcast i8* %12989 to i32*
  store i32 %12988, i32* %12990, align 1
  %12991 = extractelement <2 x i32> %12980, i32 0
  %12992 = getelementptr inbounds i8, i8* %12971, i64 8
  %12993 = bitcast i8* %12992 to i32*
  store i32 %12991, i32* %12993, align 1
  %12994 = extractelement <2 x i32> %12980, i32 1
  %12995 = getelementptr inbounds i8, i8* %12971, i64 12
  %12996 = bitcast i8* %12995 to i32*
  store i32 %12994, i32* %12996, align 1
  store %struct.Memory* %loadMem_476286, %struct.Memory** %MEMORY
  %loadMem_47628a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12998 = getelementptr inbounds %struct.GPR, %struct.GPR* %12997, i32 0, i32 33
  %12999 = getelementptr inbounds %struct.Reg, %struct.Reg* %12998, i32 0, i32 0
  %PC.i1569 = bitcast %union.anon* %12999 to i64*
  %13000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13001 = getelementptr inbounds %struct.GPR, %struct.GPR* %13000, i32 0, i32 15
  %13002 = getelementptr inbounds %struct.Reg, %struct.Reg* %13001, i32 0, i32 0
  %RBP.i1570 = bitcast %union.anon* %13002 to i64*
  %13003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13004 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13003, i64 0, i64 2
  %YMM2.i1571 = bitcast %union.VectorReg* %13004 to %"class.std::bitset"*
  %13005 = bitcast %"class.std::bitset"* %YMM2.i1571 to i8*
  %13006 = load i64, i64* %RBP.i1570
  %13007 = sub i64 %13006, 1104
  %13008 = load i64, i64* %PC.i1569
  %13009 = add i64 %13008, 8
  store i64 %13009, i64* %PC.i1569
  %13010 = inttoptr i64 %13007 to float*
  %13011 = load float, float* %13010
  %13012 = bitcast i8* %13005 to float*
  store float %13011, float* %13012, align 1
  %13013 = getelementptr inbounds i8, i8* %13005, i64 4
  %13014 = bitcast i8* %13013 to float*
  store float 0.000000e+00, float* %13014, align 1
  %13015 = getelementptr inbounds i8, i8* %13005, i64 8
  %13016 = bitcast i8* %13015 to float*
  store float 0.000000e+00, float* %13016, align 1
  %13017 = getelementptr inbounds i8, i8* %13005, i64 12
  %13018 = bitcast i8* %13017 to float*
  store float 0.000000e+00, float* %13018, align 1
  store %struct.Memory* %loadMem_47628a, %struct.Memory** %MEMORY
  %loadMem_476292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13020 = getelementptr inbounds %struct.GPR, %struct.GPR* %13019, i32 0, i32 33
  %13021 = getelementptr inbounds %struct.Reg, %struct.Reg* %13020, i32 0, i32 0
  %PC.i1566 = bitcast %union.anon* %13021 to i64*
  %13022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13023 = getelementptr inbounds %struct.GPR, %struct.GPR* %13022, i32 0, i32 15
  %13024 = getelementptr inbounds %struct.Reg, %struct.Reg* %13023, i32 0, i32 0
  %RBP.i1567 = bitcast %union.anon* %13024 to i64*
  %13025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13026 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13025, i64 0, i64 2
  %YMM2.i1568 = bitcast %union.VectorReg* %13026 to %"class.std::bitset"*
  %13027 = bitcast %"class.std::bitset"* %YMM2.i1568 to i8*
  %13028 = bitcast %"class.std::bitset"* %YMM2.i1568 to i8*
  %13029 = load i64, i64* %RBP.i1567
  %13030 = sub i64 %13029, 1096
  %13031 = load i64, i64* %PC.i1566
  %13032 = add i64 %13031, 8
  store i64 %13032, i64* %PC.i1566
  %13033 = bitcast i8* %13028 to <2 x float>*
  %13034 = load <2 x float>, <2 x float>* %13033, align 1
  %13035 = getelementptr inbounds i8, i8* %13028, i64 8
  %13036 = bitcast i8* %13035 to <2 x i32>*
  %13037 = load <2 x i32>, <2 x i32>* %13036, align 1
  %13038 = inttoptr i64 %13030 to float*
  %13039 = load float, float* %13038
  %13040 = extractelement <2 x float> %13034, i32 0
  %13041 = fsub float %13040, %13039
  %13042 = bitcast i8* %13027 to float*
  store float %13041, float* %13042, align 1
  %13043 = bitcast <2 x float> %13034 to <2 x i32>
  %13044 = extractelement <2 x i32> %13043, i32 1
  %13045 = getelementptr inbounds i8, i8* %13027, i64 4
  %13046 = bitcast i8* %13045 to i32*
  store i32 %13044, i32* %13046, align 1
  %13047 = extractelement <2 x i32> %13037, i32 0
  %13048 = getelementptr inbounds i8, i8* %13027, i64 8
  %13049 = bitcast i8* %13048 to i32*
  store i32 %13047, i32* %13049, align 1
  %13050 = extractelement <2 x i32> %13037, i32 1
  %13051 = getelementptr inbounds i8, i8* %13027, i64 12
  %13052 = bitcast i8* %13051 to i32*
  store i32 %13050, i32* %13052, align 1
  store %struct.Memory* %loadMem_476292, %struct.Memory** %MEMORY
  %loadMem_47629a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13054 = getelementptr inbounds %struct.GPR, %struct.GPR* %13053, i32 0, i32 33
  %13055 = getelementptr inbounds %struct.Reg, %struct.Reg* %13054, i32 0, i32 0
  %PC.i1563 = bitcast %union.anon* %13055 to i64*
  %13056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13057 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13056, i64 0, i64 1
  %YMM1.i1564 = bitcast %union.VectorReg* %13057 to %"class.std::bitset"*
  %13058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13059 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13058, i64 0, i64 2
  %XMM2.i1565 = bitcast %union.VectorReg* %13059 to %union.vec128_t*
  %13060 = bitcast %"class.std::bitset"* %YMM1.i1564 to i8*
  %13061 = bitcast %"class.std::bitset"* %YMM1.i1564 to i8*
  %13062 = bitcast %union.vec128_t* %XMM2.i1565 to i8*
  %13063 = load i64, i64* %PC.i1563
  %13064 = add i64 %13063, 4
  store i64 %13064, i64* %PC.i1563
  %13065 = bitcast i8* %13061 to <2 x float>*
  %13066 = load <2 x float>, <2 x float>* %13065, align 1
  %13067 = getelementptr inbounds i8, i8* %13061, i64 8
  %13068 = bitcast i8* %13067 to <2 x i32>*
  %13069 = load <2 x i32>, <2 x i32>* %13068, align 1
  %13070 = bitcast i8* %13062 to <2 x float>*
  %13071 = load <2 x float>, <2 x float>* %13070, align 1
  %13072 = extractelement <2 x float> %13066, i32 0
  %13073 = extractelement <2 x float> %13071, i32 0
  %13074 = fdiv float %13072, %13073
  %13075 = bitcast i8* %13060 to float*
  store float %13074, float* %13075, align 1
  %13076 = bitcast <2 x float> %13066 to <2 x i32>
  %13077 = extractelement <2 x i32> %13076, i32 1
  %13078 = getelementptr inbounds i8, i8* %13060, i64 4
  %13079 = bitcast i8* %13078 to i32*
  store i32 %13077, i32* %13079, align 1
  %13080 = extractelement <2 x i32> %13069, i32 0
  %13081 = getelementptr inbounds i8, i8* %13060, i64 8
  %13082 = bitcast i8* %13081 to i32*
  store i32 %13080, i32* %13082, align 1
  %13083 = extractelement <2 x i32> %13069, i32 1
  %13084 = getelementptr inbounds i8, i8* %13060, i64 12
  %13085 = bitcast i8* %13084 to i32*
  store i32 %13083, i32* %13085, align 1
  store %struct.Memory* %loadMem_47629a, %struct.Memory** %MEMORY
  %loadMem_47629e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13087 = getelementptr inbounds %struct.GPR, %struct.GPR* %13086, i32 0, i32 33
  %13088 = getelementptr inbounds %struct.Reg, %struct.Reg* %13087, i32 0, i32 0
  %PC.i1560 = bitcast %union.anon* %13088 to i64*
  %13089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13090 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13089, i64 0, i64 1
  %YMM1.i1561 = bitcast %union.VectorReg* %13090 to %"class.std::bitset"*
  %13091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13092 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13091, i64 0, i64 1
  %XMM1.i1562 = bitcast %union.VectorReg* %13092 to %union.vec128_t*
  %13093 = bitcast %"class.std::bitset"* %YMM1.i1561 to i8*
  %13094 = bitcast %union.vec128_t* %XMM1.i1562 to i8*
  %13095 = load i64, i64* %PC.i1560
  %13096 = add i64 %13095, 4
  store i64 %13096, i64* %PC.i1560
  %13097 = bitcast i8* %13094 to <2 x float>*
  %13098 = load <2 x float>, <2 x float>* %13097, align 1
  %13099 = extractelement <2 x float> %13098, i32 0
  %13100 = fpext float %13099 to double
  %13101 = bitcast i8* %13093 to double*
  store double %13100, double* %13101, align 1
  store %struct.Memory* %loadMem_47629e, %struct.Memory** %MEMORY
  %loadMem_4762a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13103 = getelementptr inbounds %struct.GPR, %struct.GPR* %13102, i32 0, i32 33
  %13104 = getelementptr inbounds %struct.Reg, %struct.Reg* %13103, i32 0, i32 0
  %PC.i1557 = bitcast %union.anon* %13104 to i64*
  %13105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13106 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13105, i64 0, i64 0
  %YMM0.i1558 = bitcast %union.VectorReg* %13106 to %"class.std::bitset"*
  %13107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13108 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13107, i64 0, i64 1
  %XMM1.i1559 = bitcast %union.VectorReg* %13108 to %union.vec128_t*
  %13109 = bitcast %"class.std::bitset"* %YMM0.i1558 to i8*
  %13110 = bitcast %"class.std::bitset"* %YMM0.i1558 to i8*
  %13111 = bitcast %union.vec128_t* %XMM1.i1559 to i8*
  %13112 = load i64, i64* %PC.i1557
  %13113 = add i64 %13112, 4
  store i64 %13113, i64* %PC.i1557
  %13114 = bitcast i8* %13110 to double*
  %13115 = load double, double* %13114, align 1
  %13116 = getelementptr inbounds i8, i8* %13110, i64 8
  %13117 = bitcast i8* %13116 to i64*
  %13118 = load i64, i64* %13117, align 1
  %13119 = bitcast i8* %13111 to double*
  %13120 = load double, double* %13119, align 1
  %13121 = fadd double %13115, %13120
  %13122 = bitcast i8* %13109 to double*
  store double %13121, double* %13122, align 1
  %13123 = getelementptr inbounds i8, i8* %13109, i64 8
  %13124 = bitcast i8* %13123 to i64*
  store i64 %13118, i64* %13124, align 1
  store %struct.Memory* %loadMem_4762a2, %struct.Memory** %MEMORY
  %loadMem1_4762a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13126 = getelementptr inbounds %struct.GPR, %struct.GPR* %13125, i32 0, i32 33
  %13127 = getelementptr inbounds %struct.Reg, %struct.Reg* %13126, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %13127 to i64*
  %13128 = load i64, i64* %PC.i1556
  %13129 = add i64 %13128, -479414
  %13130 = load i64, i64* %PC.i1556
  %13131 = add i64 %13130, 5
  %13132 = load i64, i64* %PC.i1556
  %13133 = add i64 %13132, 5
  store i64 %13133, i64* %PC.i1556
  %13134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13135 = load i64, i64* %13134, align 8
  %13136 = add i64 %13135, -8
  %13137 = inttoptr i64 %13136 to i64*
  store i64 %13131, i64* %13137
  store i64 %13136, i64* %13134, align 8
  %13138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13129, i64* %13138, align 8
  store %struct.Memory* %loadMem1_4762a6, %struct.Memory** %MEMORY
  %loadMem2_4762a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4762a6 = load i64, i64* %3
  %call2_4762a6 = call %struct.Memory* @sub_4011f0.ceil_plt(%struct.State* %0, i64 %loadPC_4762a6, %struct.Memory* %loadMem2_4762a6)
  store %struct.Memory* %call2_4762a6, %struct.Memory** %MEMORY
  %loadMem_4762ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %13139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13140 = getelementptr inbounds %struct.GPR, %struct.GPR* %13139, i32 0, i32 33
  %13141 = getelementptr inbounds %struct.Reg, %struct.Reg* %13140, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %13141 to i64*
  %13142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13143 = getelementptr inbounds %struct.GPR, %struct.GPR* %13142, i32 0, i32 5
  %13144 = getelementptr inbounds %struct.Reg, %struct.Reg* %13143, i32 0, i32 0
  %RCX.i1554 = bitcast %union.anon* %13144 to i64*
  %13145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13146 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13145, i64 0, i64 0
  %XMM0.i1555 = bitcast %union.VectorReg* %13146 to %union.vec128_t*
  %13147 = bitcast %union.vec128_t* %XMM0.i1555 to i8*
  %13148 = load i64, i64* %PC.i1553
  %13149 = add i64 %13148, 4
  store i64 %13149, i64* %PC.i1553
  %13150 = bitcast i8* %13147 to double*
  %13151 = load double, double* %13150, align 1
  %13152 = call double @llvm.trunc.f64(double %13151)
  %13153 = call double @llvm.fabs.f64(double %13152)
  %13154 = fcmp ogt double %13153, 0x41DFFFFFFFC00000
  %13155 = fptosi double %13152 to i32
  %13156 = zext i32 %13155 to i64
  %13157 = select i1 %13154, i64 2147483648, i64 %13156
  store i64 %13157, i64* %RCX.i1554, align 8
  store %struct.Memory* %loadMem_4762ab, %struct.Memory** %MEMORY
  %loadMem_4762af = load %struct.Memory*, %struct.Memory** %MEMORY
  %13158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13159 = getelementptr inbounds %struct.GPR, %struct.GPR* %13158, i32 0, i32 33
  %13160 = getelementptr inbounds %struct.Reg, %struct.Reg* %13159, i32 0, i32 0
  %PC.i1550 = bitcast %union.anon* %13160 to i64*
  %13161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13162 = getelementptr inbounds %struct.GPR, %struct.GPR* %13161, i32 0, i32 5
  %13163 = getelementptr inbounds %struct.Reg, %struct.Reg* %13162, i32 0, i32 0
  %ECX.i1551 = bitcast %union.anon* %13163 to i32*
  %13164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13165 = getelementptr inbounds %struct.GPR, %struct.GPR* %13164, i32 0, i32 15
  %13166 = getelementptr inbounds %struct.Reg, %struct.Reg* %13165, i32 0, i32 0
  %RBP.i1552 = bitcast %union.anon* %13166 to i64*
  %13167 = load i64, i64* %RBP.i1552
  %13168 = sub i64 %13167, 1088
  %13169 = load i32, i32* %ECX.i1551
  %13170 = zext i32 %13169 to i64
  %13171 = load i64, i64* %PC.i1550
  %13172 = add i64 %13171, 6
  store i64 %13172, i64* %PC.i1550
  %13173 = inttoptr i64 %13168 to i32*
  store i32 %13169, i32* %13173
  store %struct.Memory* %loadMem_4762af, %struct.Memory** %MEMORY
  %loadMem_4762b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13175 = getelementptr inbounds %struct.GPR, %struct.GPR* %13174, i32 0, i32 33
  %13176 = getelementptr inbounds %struct.Reg, %struct.Reg* %13175, i32 0, i32 0
  %PC.i1549 = bitcast %union.anon* %13176 to i64*
  %13177 = load i64, i64* %PC.i1549
  %13178 = add i64 %13177, 24
  %13179 = load i64, i64* %PC.i1549
  %13180 = add i64 %13179, 5
  store i64 %13180, i64* %PC.i1549
  %13181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13178, i64* %13181, align 8
  store %struct.Memory* %loadMem_4762b5, %struct.Memory** %MEMORY
  br label %block_.L_4762cd

block_.L_4762ba:                                  ; preds = %routine_idivl__esi.exit1713
  %loadMem_4762ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %13182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13183 = getelementptr inbounds %struct.GPR, %struct.GPR* %13182, i32 0, i32 33
  %13184 = getelementptr inbounds %struct.Reg, %struct.Reg* %13183, i32 0, i32 0
  %PC.i1548 = bitcast %union.anon* %13184 to i64*
  %13185 = load i64, i64* %PC.i1548
  %13186 = add i64 %13185, 5
  %13187 = load i64, i64* %PC.i1548
  %13188 = add i64 %13187, 5
  store i64 %13188, i64* %PC.i1548
  %13189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13186, i64* %13189, align 8
  store %struct.Memory* %loadMem_4762ba, %struct.Memory** %MEMORY
  br label %block_.L_4762bf

block_.L_4762bf:                                  ; preds = %block_.L_4762ba
  %loadMem_4762bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %13190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13191 = getelementptr inbounds %struct.GPR, %struct.GPR* %13190, i32 0, i32 33
  %13192 = getelementptr inbounds %struct.Reg, %struct.Reg* %13191, i32 0, i32 0
  %PC.i1545 = bitcast %union.anon* %13192 to i64*
  %13193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13194 = getelementptr inbounds %struct.GPR, %struct.GPR* %13193, i32 0, i32 1
  %13195 = getelementptr inbounds %struct.Reg, %struct.Reg* %13194, i32 0, i32 0
  %RAX.i1546 = bitcast %union.anon* %13195 to i64*
  %13196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13197 = getelementptr inbounds %struct.GPR, %struct.GPR* %13196, i32 0, i32 15
  %13198 = getelementptr inbounds %struct.Reg, %struct.Reg* %13197, i32 0, i32 0
  %RBP.i1547 = bitcast %union.anon* %13198 to i64*
  %13199 = load i64, i64* %RBP.i1547
  %13200 = sub i64 %13199, 44
  %13201 = load i64, i64* %PC.i1545
  %13202 = add i64 %13201, 3
  store i64 %13202, i64* %PC.i1545
  %13203 = inttoptr i64 %13200 to i32*
  %13204 = load i32, i32* %13203
  %13205 = zext i32 %13204 to i64
  store i64 %13205, i64* %RAX.i1546, align 8
  store %struct.Memory* %loadMem_4762bf, %struct.Memory** %MEMORY
  %loadMem_4762c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13207 = getelementptr inbounds %struct.GPR, %struct.GPR* %13206, i32 0, i32 33
  %13208 = getelementptr inbounds %struct.Reg, %struct.Reg* %13207, i32 0, i32 0
  %PC.i1543 = bitcast %union.anon* %13208 to i64*
  %13209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13210 = getelementptr inbounds %struct.GPR, %struct.GPR* %13209, i32 0, i32 1
  %13211 = getelementptr inbounds %struct.Reg, %struct.Reg* %13210, i32 0, i32 0
  %RAX.i1544 = bitcast %union.anon* %13211 to i64*
  %13212 = load i64, i64* %RAX.i1544
  %13213 = load i64, i64* %PC.i1543
  %13214 = add i64 %13213, 3
  store i64 %13214, i64* %PC.i1543
  %13215 = trunc i64 %13212 to i32
  %13216 = add i32 1, %13215
  %13217 = zext i32 %13216 to i64
  store i64 %13217, i64* %RAX.i1544, align 8
  %13218 = icmp ult i32 %13216, %13215
  %13219 = icmp ult i32 %13216, 1
  %13220 = or i1 %13218, %13219
  %13221 = zext i1 %13220 to i8
  %13222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13221, i8* %13222, align 1
  %13223 = and i32 %13216, 255
  %13224 = call i32 @llvm.ctpop.i32(i32 %13223)
  %13225 = trunc i32 %13224 to i8
  %13226 = and i8 %13225, 1
  %13227 = xor i8 %13226, 1
  %13228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13227, i8* %13228, align 1
  %13229 = xor i64 1, %13212
  %13230 = trunc i64 %13229 to i32
  %13231 = xor i32 %13230, %13216
  %13232 = lshr i32 %13231, 4
  %13233 = trunc i32 %13232 to i8
  %13234 = and i8 %13233, 1
  %13235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13234, i8* %13235, align 1
  %13236 = icmp eq i32 %13216, 0
  %13237 = zext i1 %13236 to i8
  %13238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13237, i8* %13238, align 1
  %13239 = lshr i32 %13216, 31
  %13240 = trunc i32 %13239 to i8
  %13241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13240, i8* %13241, align 1
  %13242 = lshr i32 %13215, 31
  %13243 = xor i32 %13239, %13242
  %13244 = add i32 %13243, %13239
  %13245 = icmp eq i32 %13244, 2
  %13246 = zext i1 %13245 to i8
  %13247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13246, i8* %13247, align 1
  store %struct.Memory* %loadMem_4762c2, %struct.Memory** %MEMORY
  %loadMem_4762c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13249 = getelementptr inbounds %struct.GPR, %struct.GPR* %13248, i32 0, i32 33
  %13250 = getelementptr inbounds %struct.Reg, %struct.Reg* %13249, i32 0, i32 0
  %PC.i1540 = bitcast %union.anon* %13250 to i64*
  %13251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13252 = getelementptr inbounds %struct.GPR, %struct.GPR* %13251, i32 0, i32 1
  %13253 = getelementptr inbounds %struct.Reg, %struct.Reg* %13252, i32 0, i32 0
  %EAX.i1541 = bitcast %union.anon* %13253 to i32*
  %13254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13255 = getelementptr inbounds %struct.GPR, %struct.GPR* %13254, i32 0, i32 15
  %13256 = getelementptr inbounds %struct.Reg, %struct.Reg* %13255, i32 0, i32 0
  %RBP.i1542 = bitcast %union.anon* %13256 to i64*
  %13257 = load i64, i64* %RBP.i1542
  %13258 = sub i64 %13257, 44
  %13259 = load i32, i32* %EAX.i1541
  %13260 = zext i32 %13259 to i64
  %13261 = load i64, i64* %PC.i1540
  %13262 = add i64 %13261, 3
  store i64 %13262, i64* %PC.i1540
  %13263 = inttoptr i64 %13258 to i32*
  store i32 %13259, i32* %13263
  store %struct.Memory* %loadMem_4762c5, %struct.Memory** %MEMORY
  %loadMem_4762c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13265 = getelementptr inbounds %struct.GPR, %struct.GPR* %13264, i32 0, i32 33
  %13266 = getelementptr inbounds %struct.Reg, %struct.Reg* %13265, i32 0, i32 0
  %PC.i1539 = bitcast %union.anon* %13266 to i64*
  %13267 = load i64, i64* %PC.i1539
  %13268 = add i64 %13267, -307
  %13269 = load i64, i64* %PC.i1539
  %13270 = add i64 %13269, 5
  store i64 %13270, i64* %PC.i1539
  %13271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13268, i64* %13271, align 8
  store %struct.Memory* %loadMem_4762c8, %struct.Memory** %MEMORY
  br label %block_.L_476195

block_.L_4762cd:                                  ; preds = %routine_idivl__ecx.exit1603, %block_.L_476195
  %loadMem_4762cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13273 = getelementptr inbounds %struct.GPR, %struct.GPR* %13272, i32 0, i32 33
  %13274 = getelementptr inbounds %struct.Reg, %struct.Reg* %13273, i32 0, i32 0
  %PC.i1537 = bitcast %union.anon* %13274 to i64*
  %13275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13276 = getelementptr inbounds %struct.GPR, %struct.GPR* %13275, i32 0, i32 15
  %13277 = getelementptr inbounds %struct.Reg, %struct.Reg* %13276, i32 0, i32 0
  %RBP.i1538 = bitcast %union.anon* %13277 to i64*
  %13278 = load i64, i64* %RBP.i1538
  %13279 = sub i64 %13278, 44
  %13280 = load i64, i64* %PC.i1537
  %13281 = add i64 %13280, 7
  store i64 %13281, i64* %PC.i1537
  %13282 = inttoptr i64 %13279 to i32*
  store i32 1, i32* %13282
  store %struct.Memory* %loadMem_4762cd, %struct.Memory** %MEMORY
  br label %block_.L_4762d4

block_.L_4762d4:                                  ; preds = %block_.L_47640d, %block_.L_4762cd
  %loadMem_4762d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13284 = getelementptr inbounds %struct.GPR, %struct.GPR* %13283, i32 0, i32 33
  %13285 = getelementptr inbounds %struct.Reg, %struct.Reg* %13284, i32 0, i32 0
  %PC.i1534 = bitcast %union.anon* %13285 to i64*
  %13286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13287 = getelementptr inbounds %struct.GPR, %struct.GPR* %13286, i32 0, i32 1
  %13288 = getelementptr inbounds %struct.Reg, %struct.Reg* %13287, i32 0, i32 0
  %RAX.i1535 = bitcast %union.anon* %13288 to i64*
  %13289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13290 = getelementptr inbounds %struct.GPR, %struct.GPR* %13289, i32 0, i32 15
  %13291 = getelementptr inbounds %struct.Reg, %struct.Reg* %13290, i32 0, i32 0
  %RBP.i1536 = bitcast %union.anon* %13291 to i64*
  %13292 = load i64, i64* %RBP.i1536
  %13293 = sub i64 %13292, 44
  %13294 = load i64, i64* %PC.i1534
  %13295 = add i64 %13294, 3
  store i64 %13295, i64* %PC.i1534
  %13296 = inttoptr i64 %13293 to i32*
  %13297 = load i32, i32* %13296
  %13298 = zext i32 %13297 to i64
  store i64 %13298, i64* %RAX.i1535, align 8
  store %struct.Memory* %loadMem_4762d4, %struct.Memory** %MEMORY
  %loadMem_4762d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13300 = getelementptr inbounds %struct.GPR, %struct.GPR* %13299, i32 0, i32 33
  %13301 = getelementptr inbounds %struct.Reg, %struct.Reg* %13300, i32 0, i32 0
  %PC.i1531 = bitcast %union.anon* %13301 to i64*
  %13302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13303 = getelementptr inbounds %struct.GPR, %struct.GPR* %13302, i32 0, i32 1
  %13304 = getelementptr inbounds %struct.Reg, %struct.Reg* %13303, i32 0, i32 0
  %EAX.i1532 = bitcast %union.anon* %13304 to i32*
  %13305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13306 = getelementptr inbounds %struct.GPR, %struct.GPR* %13305, i32 0, i32 15
  %13307 = getelementptr inbounds %struct.Reg, %struct.Reg* %13306, i32 0, i32 0
  %RBP.i1533 = bitcast %union.anon* %13307 to i64*
  %13308 = load i32, i32* %EAX.i1532
  %13309 = zext i32 %13308 to i64
  %13310 = load i64, i64* %RBP.i1533
  %13311 = sub i64 %13310, 216
  %13312 = load i64, i64* %PC.i1531
  %13313 = add i64 %13312, 6
  store i64 %13313, i64* %PC.i1531
  %13314 = inttoptr i64 %13311 to i32*
  %13315 = load i32, i32* %13314
  %13316 = sub i32 %13308, %13315
  %13317 = icmp ult i32 %13308, %13315
  %13318 = zext i1 %13317 to i8
  %13319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13318, i8* %13319, align 1
  %13320 = and i32 %13316, 255
  %13321 = call i32 @llvm.ctpop.i32(i32 %13320)
  %13322 = trunc i32 %13321 to i8
  %13323 = and i8 %13322, 1
  %13324 = xor i8 %13323, 1
  %13325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13324, i8* %13325, align 1
  %13326 = xor i32 %13315, %13308
  %13327 = xor i32 %13326, %13316
  %13328 = lshr i32 %13327, 4
  %13329 = trunc i32 %13328 to i8
  %13330 = and i8 %13329, 1
  %13331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13330, i8* %13331, align 1
  %13332 = icmp eq i32 %13316, 0
  %13333 = zext i1 %13332 to i8
  %13334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13333, i8* %13334, align 1
  %13335 = lshr i32 %13316, 31
  %13336 = trunc i32 %13335 to i8
  %13337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13336, i8* %13337, align 1
  %13338 = lshr i32 %13308, 31
  %13339 = lshr i32 %13315, 31
  %13340 = xor i32 %13339, %13338
  %13341 = xor i32 %13335, %13338
  %13342 = add i32 %13341, %13340
  %13343 = icmp eq i32 %13342, 2
  %13344 = zext i1 %13343 to i8
  %13345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13344, i8* %13345, align 1
  store %struct.Memory* %loadMem_4762d7, %struct.Memory** %MEMORY
  %loadMem_4762dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13347 = getelementptr inbounds %struct.GPR, %struct.GPR* %13346, i32 0, i32 33
  %13348 = getelementptr inbounds %struct.Reg, %struct.Reg* %13347, i32 0, i32 0
  %PC.i1530 = bitcast %union.anon* %13348 to i64*
  %13349 = load i64, i64* %PC.i1530
  %13350 = add i64 %13349, 318
  %13351 = load i64, i64* %PC.i1530
  %13352 = add i64 %13351, 6
  %13353 = load i64, i64* %PC.i1530
  %13354 = add i64 %13353, 6
  store i64 %13354, i64* %PC.i1530
  %13355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13356 = load i8, i8* %13355, align 1
  %13357 = icmp ne i8 %13356, 0
  %13358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13359 = load i8, i8* %13358, align 1
  %13360 = icmp ne i8 %13359, 0
  %13361 = xor i1 %13357, %13360
  %13362 = xor i1 %13361, true
  %13363 = zext i1 %13362 to i8
  store i8 %13363, i8* %BRANCH_TAKEN, align 1
  %13364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13365 = select i1 %13361, i64 %13352, i64 %13350
  store i64 %13365, i64* %13364, align 8
  store %struct.Memory* %loadMem_4762dd, %struct.Memory** %MEMORY
  %loadBr_4762dd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4762dd = icmp eq i8 %loadBr_4762dd, 1
  br i1 %cmpBr_4762dd, label %block_.L_47641b, label %block_4762e3

block_4762e3:                                     ; preds = %block_.L_4762d4
  %loadMem_4762e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13367 = getelementptr inbounds %struct.GPR, %struct.GPR* %13366, i32 0, i32 33
  %13368 = getelementptr inbounds %struct.Reg, %struct.Reg* %13367, i32 0, i32 0
  %PC.i1528 = bitcast %union.anon* %13368 to i64*
  %13369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13370 = getelementptr inbounds %struct.GPR, %struct.GPR* %13369, i32 0, i32 1
  %13371 = getelementptr inbounds %struct.Reg, %struct.Reg* %13370, i32 0, i32 0
  %RAX.i1529 = bitcast %union.anon* %13371 to i64*
  %13372 = load i64, i64* %PC.i1528
  %13373 = add i64 %13372, 5
  store i64 %13373, i64* %PC.i1528
  store i64 20, i64* %RAX.i1529, align 8
  store %struct.Memory* %loadMem_4762e3, %struct.Memory** %MEMORY
  %loadMem_4762e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13375 = getelementptr inbounds %struct.GPR, %struct.GPR* %13374, i32 0, i32 33
  %13376 = getelementptr inbounds %struct.Reg, %struct.Reg* %13375, i32 0, i32 0
  %PC.i1525 = bitcast %union.anon* %13376 to i64*
  %13377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13378 = getelementptr inbounds %struct.GPR, %struct.GPR* %13377, i32 0, i32 5
  %13379 = getelementptr inbounds %struct.Reg, %struct.Reg* %13378, i32 0, i32 0
  %RCX.i1526 = bitcast %union.anon* %13379 to i64*
  %13380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13381 = getelementptr inbounds %struct.GPR, %struct.GPR* %13380, i32 0, i32 15
  %13382 = getelementptr inbounds %struct.Reg, %struct.Reg* %13381, i32 0, i32 0
  %RBP.i1527 = bitcast %union.anon* %13382 to i64*
  %13383 = load i64, i64* %RBP.i1527
  %13384 = sub i64 %13383, 44
  %13385 = load i64, i64* %PC.i1525
  %13386 = add i64 %13385, 4
  store i64 %13386, i64* %PC.i1525
  %13387 = inttoptr i64 %13384 to i32*
  %13388 = load i32, i32* %13387
  %13389 = sext i32 %13388 to i64
  store i64 %13389, i64* %RCX.i1526, align 8
  store %struct.Memory* %loadMem_4762e8, %struct.Memory** %MEMORY
  %loadMem_4762ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %13390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13391 = getelementptr inbounds %struct.GPR, %struct.GPR* %13390, i32 0, i32 33
  %13392 = getelementptr inbounds %struct.Reg, %struct.Reg* %13391, i32 0, i32 0
  %PC.i1521 = bitcast %union.anon* %13392 to i64*
  %13393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13394 = getelementptr inbounds %struct.GPR, %struct.GPR* %13393, i32 0, i32 5
  %13395 = getelementptr inbounds %struct.Reg, %struct.Reg* %13394, i32 0, i32 0
  %RCX.i1522 = bitcast %union.anon* %13395 to i64*
  %13396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13397 = getelementptr inbounds %struct.GPR, %struct.GPR* %13396, i32 0, i32 7
  %13398 = getelementptr inbounds %struct.Reg, %struct.Reg* %13397, i32 0, i32 0
  %RDX.i1523 = bitcast %union.anon* %13398 to i64*
  %13399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13400 = getelementptr inbounds %struct.GPR, %struct.GPR* %13399, i32 0, i32 15
  %13401 = getelementptr inbounds %struct.Reg, %struct.Reg* %13400, i32 0, i32 0
  %RBP.i1524 = bitcast %union.anon* %13401 to i64*
  %13402 = load i64, i64* %RBP.i1524
  %13403 = load i64, i64* %RCX.i1522
  %13404 = mul i64 %13403, 4
  %13405 = add i64 %13402, -208
  %13406 = add i64 %13405, %13404
  %13407 = load i64, i64* %PC.i1521
  %13408 = add i64 %13407, 7
  store i64 %13408, i64* %PC.i1521
  %13409 = inttoptr i64 %13406 to i32*
  %13410 = load i32, i32* %13409
  %13411 = zext i32 %13410 to i64
  store i64 %13411, i64* %RDX.i1523, align 8
  store %struct.Memory* %loadMem_4762ec, %struct.Memory** %MEMORY
  %loadMem_4762f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13413 = getelementptr inbounds %struct.GPR, %struct.GPR* %13412, i32 0, i32 33
  %13414 = getelementptr inbounds %struct.Reg, %struct.Reg* %13413, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %13414 to i64*
  %13415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13416 = getelementptr inbounds %struct.GPR, %struct.GPR* %13415, i32 0, i32 1
  %13417 = getelementptr inbounds %struct.Reg, %struct.Reg* %13416, i32 0, i32 0
  %EAX.i1519 = bitcast %union.anon* %13417 to i32*
  %13418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13419 = getelementptr inbounds %struct.GPR, %struct.GPR* %13418, i32 0, i32 15
  %13420 = getelementptr inbounds %struct.Reg, %struct.Reg* %13419, i32 0, i32 0
  %RBP.i1520 = bitcast %union.anon* %13420 to i64*
  %13421 = load i64, i64* %RBP.i1520
  %13422 = sub i64 %13421, 1208
  %13423 = load i32, i32* %EAX.i1519
  %13424 = zext i32 %13423 to i64
  %13425 = load i64, i64* %PC.i1518
  %13426 = add i64 %13425, 6
  store i64 %13426, i64* %PC.i1518
  %13427 = inttoptr i64 %13422 to i32*
  store i32 %13423, i32* %13427
  store %struct.Memory* %loadMem_4762f3, %struct.Memory** %MEMORY
  %loadMem_4762f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13429 = getelementptr inbounds %struct.GPR, %struct.GPR* %13428, i32 0, i32 33
  %13430 = getelementptr inbounds %struct.Reg, %struct.Reg* %13429, i32 0, i32 0
  %PC.i1515 = bitcast %union.anon* %13430 to i64*
  %13431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13432 = getelementptr inbounds %struct.GPR, %struct.GPR* %13431, i32 0, i32 7
  %13433 = getelementptr inbounds %struct.Reg, %struct.Reg* %13432, i32 0, i32 0
  %EDX.i1516 = bitcast %union.anon* %13433 to i32*
  %13434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13435 = getelementptr inbounds %struct.GPR, %struct.GPR* %13434, i32 0, i32 1
  %13436 = getelementptr inbounds %struct.Reg, %struct.Reg* %13435, i32 0, i32 0
  %RAX.i1517 = bitcast %union.anon* %13436 to i64*
  %13437 = load i32, i32* %EDX.i1516
  %13438 = zext i32 %13437 to i64
  %13439 = load i64, i64* %PC.i1515
  %13440 = add i64 %13439, 2
  store i64 %13440, i64* %PC.i1515
  %13441 = and i64 %13438, 4294967295
  store i64 %13441, i64* %RAX.i1517, align 8
  store %struct.Memory* %loadMem_4762f9, %struct.Memory** %MEMORY
  %loadMem_4762fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13443 = getelementptr inbounds %struct.GPR, %struct.GPR* %13442, i32 0, i32 33
  %13444 = getelementptr inbounds %struct.Reg, %struct.Reg* %13443, i32 0, i32 0
  %PC.i1514 = bitcast %union.anon* %13444 to i64*
  %13445 = load i64, i64* %PC.i1514
  %13446 = add i64 %13445, 1
  store i64 %13446, i64* %PC.i1514
  %13447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %13448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13449 = bitcast %union.anon* %13448 to i32*
  %13450 = load i32, i32* %13449, align 8
  %13451 = sext i32 %13450 to i64
  %13452 = lshr i64 %13451, 32
  store i64 %13452, i64* %13447, align 8
  store %struct.Memory* %loadMem_4762fb, %struct.Memory** %MEMORY
  %loadMem_4762fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13454 = getelementptr inbounds %struct.GPR, %struct.GPR* %13453, i32 0, i32 33
  %13455 = getelementptr inbounds %struct.Reg, %struct.Reg* %13454, i32 0, i32 0
  %PC.i1511 = bitcast %union.anon* %13455 to i64*
  %13456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13457 = getelementptr inbounds %struct.GPR, %struct.GPR* %13456, i32 0, i32 9
  %13458 = getelementptr inbounds %struct.Reg, %struct.Reg* %13457, i32 0, i32 0
  %RSI.i1512 = bitcast %union.anon* %13458 to i64*
  %13459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13460 = getelementptr inbounds %struct.GPR, %struct.GPR* %13459, i32 0, i32 15
  %13461 = getelementptr inbounds %struct.Reg, %struct.Reg* %13460, i32 0, i32 0
  %RBP.i1513 = bitcast %union.anon* %13461 to i64*
  %13462 = load i64, i64* %RBP.i1513
  %13463 = sub i64 %13462, 1208
  %13464 = load i64, i64* %PC.i1511
  %13465 = add i64 %13464, 6
  store i64 %13465, i64* %PC.i1511
  %13466 = inttoptr i64 %13463 to i32*
  %13467 = load i32, i32* %13466
  %13468 = zext i32 %13467 to i64
  store i64 %13468, i64* %RSI.i1512, align 8
  store %struct.Memory* %loadMem_4762fc, %struct.Memory** %MEMORY
  %loadMem_476302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13470 = getelementptr inbounds %struct.GPR, %struct.GPR* %13469, i32 0, i32 33
  %13471 = getelementptr inbounds %struct.Reg, %struct.Reg* %13470, i32 0, i32 0
  %PC.i1508 = bitcast %union.anon* %13471 to i64*
  %13472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13473 = getelementptr inbounds %struct.GPR, %struct.GPR* %13472, i32 0, i32 9
  %13474 = getelementptr inbounds %struct.Reg, %struct.Reg* %13473, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %13474 to i32*
  %13475 = load i32, i32* %ESI.i
  %13476 = zext i32 %13475 to i64
  %13477 = load i64, i64* %PC.i1508
  %13478 = add i64 %13477, 2
  store i64 %13478, i64* %PC.i1508
  %13479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13480 = bitcast %union.anon* %13479 to i32*
  %13481 = load i32, i32* %13480, align 8
  %13482 = zext i32 %13481 to i64
  %13483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %13484 = bitcast %union.anon* %13483 to i32*
  %13485 = load i32, i32* %13484, align 8
  %13486 = zext i32 %13485 to i64
  %13487 = shl i64 %13476, 32
  %13488 = ashr exact i64 %13487, 32
  %13489 = shl i64 %13486, 32
  %13490 = or i64 %13489, %13482
  %13491 = sdiv i64 %13490, %13488
  %13492 = shl i64 %13491, 32
  %13493 = ashr exact i64 %13492, 32
  %13494 = icmp eq i64 %13491, %13493
  br i1 %13494, label %13499, label %13495

; <label>:13495:                                  ; preds = %block_4762e3
  %13496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13497 = load i64, i64* %13496, align 8
  %13498 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %13497, %struct.Memory* %loadMem_476302)
  br label %routine_idivl__esi.exit

; <label>:13499:                                  ; preds = %block_4762e3
  %13500 = srem i64 %13490, %13488
  %13501 = getelementptr inbounds %union.anon, %union.anon* %13479, i64 0, i32 0
  %13502 = and i64 %13491, 4294967295
  store i64 %13502, i64* %13501, align 8
  %13503 = getelementptr inbounds %union.anon, %union.anon* %13483, i64 0, i32 0
  %13504 = and i64 %13500, 4294967295
  store i64 %13504, i64* %13503, align 8
  %13505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13505, align 1
  %13506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %13506, align 1
  %13507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13507, align 1
  %13508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13508, align 1
  %13509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13509, align 1
  %13510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13510, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %13495, %13499
  %13511 = phi %struct.Memory* [ %13498, %13495 ], [ %loadMem_476302, %13499 ]
  store %struct.Memory* %13511, %struct.Memory** %MEMORY
  %loadMem_476304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13513 = getelementptr inbounds %struct.GPR, %struct.GPR* %13512, i32 0, i32 33
  %13514 = getelementptr inbounds %struct.Reg, %struct.Reg* %13513, i32 0, i32 0
  %PC.i1506 = bitcast %union.anon* %13514 to i64*
  %13515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13516 = getelementptr inbounds %struct.GPR, %struct.GPR* %13515, i32 0, i32 1
  %13517 = getelementptr inbounds %struct.Reg, %struct.Reg* %13516, i32 0, i32 0
  %RAX.i1507 = bitcast %union.anon* %13517 to i64*
  %13518 = load i64, i64* %RAX.i1507
  %13519 = load i64, i64* %PC.i1506
  %13520 = add i64 %13519, 3
  store i64 %13520, i64* %PC.i1506
  %13521 = trunc i64 %13518 to i32
  %13522 = sub i32 %13521, 1
  %13523 = zext i32 %13522 to i64
  store i64 %13523, i64* %RAX.i1507, align 8
  %13524 = icmp ult i32 %13521, 1
  %13525 = zext i1 %13524 to i8
  %13526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13525, i8* %13526, align 1
  %13527 = and i32 %13522, 255
  %13528 = call i32 @llvm.ctpop.i32(i32 %13527)
  %13529 = trunc i32 %13528 to i8
  %13530 = and i8 %13529, 1
  %13531 = xor i8 %13530, 1
  %13532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13531, i8* %13532, align 1
  %13533 = xor i64 1, %13518
  %13534 = trunc i64 %13533 to i32
  %13535 = xor i32 %13534, %13522
  %13536 = lshr i32 %13535, 4
  %13537 = trunc i32 %13536 to i8
  %13538 = and i8 %13537, 1
  %13539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13538, i8* %13539, align 1
  %13540 = icmp eq i32 %13522, 0
  %13541 = zext i1 %13540 to i8
  %13542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13541, i8* %13542, align 1
  %13543 = lshr i32 %13522, 31
  %13544 = trunc i32 %13543 to i8
  %13545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13544, i8* %13545, align 1
  %13546 = lshr i32 %13521, 31
  %13547 = xor i32 %13543, %13546
  %13548 = add i32 %13547, %13546
  %13549 = icmp eq i32 %13548, 2
  %13550 = zext i1 %13549 to i8
  %13551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13550, i8* %13551, align 1
  store %struct.Memory* %loadMem_476304, %struct.Memory** %MEMORY
  %loadMem_476307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13553 = getelementptr inbounds %struct.GPR, %struct.GPR* %13552, i32 0, i32 33
  %13554 = getelementptr inbounds %struct.Reg, %struct.Reg* %13553, i32 0, i32 0
  %PC.i1503 = bitcast %union.anon* %13554 to i64*
  %13555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13556 = getelementptr inbounds %struct.GPR, %struct.GPR* %13555, i32 0, i32 1
  %13557 = getelementptr inbounds %struct.Reg, %struct.Reg* %13556, i32 0, i32 0
  %EAX.i1504 = bitcast %union.anon* %13557 to i32*
  %13558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13559 = getelementptr inbounds %struct.GPR, %struct.GPR* %13558, i32 0, i32 15
  %13560 = getelementptr inbounds %struct.Reg, %struct.Reg* %13559, i32 0, i32 0
  %RBP.i1505 = bitcast %union.anon* %13560 to i64*
  %13561 = load i32, i32* %EAX.i1504
  %13562 = zext i32 %13561 to i64
  %13563 = load i64, i64* %RBP.i1505
  %13564 = sub i64 %13563, 36
  %13565 = load i64, i64* %PC.i1503
  %13566 = add i64 %13565, 3
  store i64 %13566, i64* %PC.i1503
  %13567 = inttoptr i64 %13564 to i32*
  %13568 = load i32, i32* %13567
  %13569 = sub i32 %13561, %13568
  %13570 = icmp ult i32 %13561, %13568
  %13571 = zext i1 %13570 to i8
  %13572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13571, i8* %13572, align 1
  %13573 = and i32 %13569, 255
  %13574 = call i32 @llvm.ctpop.i32(i32 %13573)
  %13575 = trunc i32 %13574 to i8
  %13576 = and i8 %13575, 1
  %13577 = xor i8 %13576, 1
  %13578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13577, i8* %13578, align 1
  %13579 = xor i32 %13568, %13561
  %13580 = xor i32 %13579, %13569
  %13581 = lshr i32 %13580, 4
  %13582 = trunc i32 %13581 to i8
  %13583 = and i8 %13582, 1
  %13584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13583, i8* %13584, align 1
  %13585 = icmp eq i32 %13569, 0
  %13586 = zext i1 %13585 to i8
  %13587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13586, i8* %13587, align 1
  %13588 = lshr i32 %13569, 31
  %13589 = trunc i32 %13588 to i8
  %13590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13589, i8* %13590, align 1
  %13591 = lshr i32 %13561, 31
  %13592 = lshr i32 %13568, 31
  %13593 = xor i32 %13592, %13591
  %13594 = xor i32 %13588, %13591
  %13595 = add i32 %13594, %13593
  %13596 = icmp eq i32 %13595, 2
  %13597 = zext i1 %13596 to i8
  %13598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13597, i8* %13598, align 1
  store %struct.Memory* %loadMem_476307, %struct.Memory** %MEMORY
  %loadMem_47630a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13600 = getelementptr inbounds %struct.GPR, %struct.GPR* %13599, i32 0, i32 33
  %13601 = getelementptr inbounds %struct.Reg, %struct.Reg* %13600, i32 0, i32 0
  %PC.i1502 = bitcast %union.anon* %13601 to i64*
  %13602 = load i64, i64* %PC.i1502
  %13603 = add i64 %13602, 254
  %13604 = load i64, i64* %PC.i1502
  %13605 = add i64 %13604, 6
  %13606 = load i64, i64* %PC.i1502
  %13607 = add i64 %13606, 6
  store i64 %13607, i64* %PC.i1502
  %13608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13609 = load i8, i8* %13608, align 1
  %13610 = icmp ne i8 %13609, 0
  %13611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13612 = load i8, i8* %13611, align 1
  %13613 = icmp ne i8 %13612, 0
  %13614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13615 = load i8, i8* %13614, align 1
  %13616 = icmp ne i8 %13615, 0
  %13617 = xor i1 %13613, %13616
  %13618 = or i1 %13610, %13617
  %13619 = zext i1 %13618 to i8
  store i8 %13619, i8* %BRANCH_TAKEN, align 1
  %13620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13621 = select i1 %13618, i64 %13603, i64 %13605
  store i64 %13621, i64* %13620, align 8
  store %struct.Memory* %loadMem_47630a, %struct.Memory** %MEMORY
  %loadBr_47630a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47630a = icmp eq i8 %loadBr_47630a, 1
  br i1 %cmpBr_47630a, label %block_.L_476408, label %block_476310

block_476310:                                     ; preds = %routine_idivl__esi.exit
  %loadMem_476310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13623 = getelementptr inbounds %struct.GPR, %struct.GPR* %13622, i32 0, i32 33
  %13624 = getelementptr inbounds %struct.Reg, %struct.Reg* %13623, i32 0, i32 0
  %PC.i1500 = bitcast %union.anon* %13624 to i64*
  %13625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13626 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13625, i64 0, i64 0
  %YMM0.i1501 = bitcast %union.VectorReg* %13626 to %"class.std::bitset"*
  %13627 = bitcast %"class.std::bitset"* %YMM0.i1501 to i8*
  %13628 = load i64, i64* %PC.i1500
  %13629 = add i64 %13628, ptrtoint (%G_0x6cd68__rip__type* @G_0x6cd68__rip_ to i64)
  %13630 = load i64, i64* %PC.i1500
  %13631 = add i64 %13630, 8
  store i64 %13631, i64* %PC.i1500
  %13632 = inttoptr i64 %13629 to double*
  %13633 = load double, double* %13632
  %13634 = bitcast i8* %13627 to double*
  store double %13633, double* %13634, align 1
  %13635 = getelementptr inbounds i8, i8* %13627, i64 8
  %13636 = bitcast i8* %13635 to double*
  store double 0.000000e+00, double* %13636, align 1
  store %struct.Memory* %loadMem_476310, %struct.Memory** %MEMORY
  %loadMem_476318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13638 = getelementptr inbounds %struct.GPR, %struct.GPR* %13637, i32 0, i32 33
  %13639 = getelementptr inbounds %struct.Reg, %struct.Reg* %13638, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %13639 to i64*
  %13640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13641 = getelementptr inbounds %struct.GPR, %struct.GPR* %13640, i32 0, i32 1
  %13642 = getelementptr inbounds %struct.Reg, %struct.Reg* %13641, i32 0, i32 0
  %RAX.i1499 = bitcast %union.anon* %13642 to i64*
  %13643 = load i64, i64* %PC.i1498
  %13644 = add i64 %13643, 5
  store i64 %13644, i64* %PC.i1498
  store i64 20, i64* %RAX.i1499, align 8
  store %struct.Memory* %loadMem_476318, %struct.Memory** %MEMORY
  %loadMem_47631d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13646 = getelementptr inbounds %struct.GPR, %struct.GPR* %13645, i32 0, i32 33
  %13647 = getelementptr inbounds %struct.Reg, %struct.Reg* %13646, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %13647 to i64*
  %13648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13649 = getelementptr inbounds %struct.GPR, %struct.GPR* %13648, i32 0, i32 5
  %13650 = getelementptr inbounds %struct.Reg, %struct.Reg* %13649, i32 0, i32 0
  %RCX.i1496 = bitcast %union.anon* %13650 to i64*
  %13651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13652 = getelementptr inbounds %struct.GPR, %struct.GPR* %13651, i32 0, i32 15
  %13653 = getelementptr inbounds %struct.Reg, %struct.Reg* %13652, i32 0, i32 0
  %RBP.i1497 = bitcast %union.anon* %13653 to i64*
  %13654 = load i64, i64* %RBP.i1497
  %13655 = sub i64 %13654, 44
  %13656 = load i64, i64* %PC.i1495
  %13657 = add i64 %13656, 3
  store i64 %13657, i64* %PC.i1495
  %13658 = inttoptr i64 %13655 to i32*
  %13659 = load i32, i32* %13658
  %13660 = zext i32 %13659 to i64
  store i64 %13660, i64* %RCX.i1496, align 8
  store %struct.Memory* %loadMem_47631d, %struct.Memory** %MEMORY
  %loadMem_476320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13662 = getelementptr inbounds %struct.GPR, %struct.GPR* %13661, i32 0, i32 33
  %13663 = getelementptr inbounds %struct.Reg, %struct.Reg* %13662, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %13663 to i64*
  %13664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13665 = getelementptr inbounds %struct.GPR, %struct.GPR* %13664, i32 0, i32 5
  %13666 = getelementptr inbounds %struct.Reg, %struct.Reg* %13665, i32 0, i32 0
  %RCX.i1494 = bitcast %union.anon* %13666 to i64*
  %13667 = load i64, i64* %RCX.i1494
  %13668 = load i64, i64* %PC.i1493
  %13669 = add i64 %13668, 3
  store i64 %13669, i64* %PC.i1493
  %13670 = trunc i64 %13667 to i32
  %13671 = sub i32 %13670, 1
  %13672 = zext i32 %13671 to i64
  store i64 %13672, i64* %RCX.i1494, align 8
  %13673 = icmp ult i32 %13670, 1
  %13674 = zext i1 %13673 to i8
  %13675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13674, i8* %13675, align 1
  %13676 = and i32 %13671, 255
  %13677 = call i32 @llvm.ctpop.i32(i32 %13676)
  %13678 = trunc i32 %13677 to i8
  %13679 = and i8 %13678, 1
  %13680 = xor i8 %13679, 1
  %13681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13680, i8* %13681, align 1
  %13682 = xor i64 1, %13667
  %13683 = trunc i64 %13682 to i32
  %13684 = xor i32 %13683, %13671
  %13685 = lshr i32 %13684, 4
  %13686 = trunc i32 %13685 to i8
  %13687 = and i8 %13686, 1
  %13688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13687, i8* %13688, align 1
  %13689 = icmp eq i32 %13671, 0
  %13690 = zext i1 %13689 to i8
  %13691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13690, i8* %13691, align 1
  %13692 = lshr i32 %13671, 31
  %13693 = trunc i32 %13692 to i8
  %13694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13693, i8* %13694, align 1
  %13695 = lshr i32 %13670, 31
  %13696 = xor i32 %13692, %13695
  %13697 = add i32 %13696, %13695
  %13698 = icmp eq i32 %13697, 2
  %13699 = zext i1 %13698 to i8
  %13700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13699, i8* %13700, align 1
  store %struct.Memory* %loadMem_476320, %struct.Memory** %MEMORY
  %loadMem_476323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13702 = getelementptr inbounds %struct.GPR, %struct.GPR* %13701, i32 0, i32 33
  %13703 = getelementptr inbounds %struct.Reg, %struct.Reg* %13702, i32 0, i32 0
  %PC.i1490 = bitcast %union.anon* %13703 to i64*
  %13704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13705 = getelementptr inbounds %struct.GPR, %struct.GPR* %13704, i32 0, i32 5
  %13706 = getelementptr inbounds %struct.Reg, %struct.Reg* %13705, i32 0, i32 0
  %ECX.i1491 = bitcast %union.anon* %13706 to i32*
  %13707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13708 = getelementptr inbounds %struct.GPR, %struct.GPR* %13707, i32 0, i32 7
  %13709 = getelementptr inbounds %struct.Reg, %struct.Reg* %13708, i32 0, i32 0
  %RDX.i1492 = bitcast %union.anon* %13709 to i64*
  %13710 = load i32, i32* %ECX.i1491
  %13711 = zext i32 %13710 to i64
  %13712 = load i64, i64* %PC.i1490
  %13713 = add i64 %13712, 3
  store i64 %13713, i64* %PC.i1490
  %13714 = shl i64 %13711, 32
  %13715 = ashr exact i64 %13714, 32
  store i64 %13715, i64* %RDX.i1492, align 8
  store %struct.Memory* %loadMem_476323, %struct.Memory** %MEMORY
  %loadMem_476326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13717 = getelementptr inbounds %struct.GPR, %struct.GPR* %13716, i32 0, i32 33
  %13718 = getelementptr inbounds %struct.Reg, %struct.Reg* %13717, i32 0, i32 0
  %PC.i1486 = bitcast %union.anon* %13718 to i64*
  %13719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13720 = getelementptr inbounds %struct.GPR, %struct.GPR* %13719, i32 0, i32 5
  %13721 = getelementptr inbounds %struct.Reg, %struct.Reg* %13720, i32 0, i32 0
  %RCX.i1487 = bitcast %union.anon* %13721 to i64*
  %13722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13723 = getelementptr inbounds %struct.GPR, %struct.GPR* %13722, i32 0, i32 7
  %13724 = getelementptr inbounds %struct.Reg, %struct.Reg* %13723, i32 0, i32 0
  %RDX.i1488 = bitcast %union.anon* %13724 to i64*
  %13725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13726 = getelementptr inbounds %struct.GPR, %struct.GPR* %13725, i32 0, i32 15
  %13727 = getelementptr inbounds %struct.Reg, %struct.Reg* %13726, i32 0, i32 0
  %RBP.i1489 = bitcast %union.anon* %13727 to i64*
  %13728 = load i64, i64* %RBP.i1489
  %13729 = load i64, i64* %RDX.i1488
  %13730 = mul i64 %13729, 4
  %13731 = add i64 %13728, -208
  %13732 = add i64 %13731, %13730
  %13733 = load i64, i64* %PC.i1486
  %13734 = add i64 %13733, 7
  store i64 %13734, i64* %PC.i1486
  %13735 = inttoptr i64 %13732 to i32*
  %13736 = load i32, i32* %13735
  %13737 = zext i32 %13736 to i64
  store i64 %13737, i64* %RCX.i1487, align 8
  store %struct.Memory* %loadMem_476326, %struct.Memory** %MEMORY
  %loadMem_47632d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13739 = getelementptr inbounds %struct.GPR, %struct.GPR* %13738, i32 0, i32 33
  %13740 = getelementptr inbounds %struct.Reg, %struct.Reg* %13739, i32 0, i32 0
  %PC.i1483 = bitcast %union.anon* %13740 to i64*
  %13741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13742 = getelementptr inbounds %struct.GPR, %struct.GPR* %13741, i32 0, i32 1
  %13743 = getelementptr inbounds %struct.Reg, %struct.Reg* %13742, i32 0, i32 0
  %EAX.i1484 = bitcast %union.anon* %13743 to i32*
  %13744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13745 = getelementptr inbounds %struct.GPR, %struct.GPR* %13744, i32 0, i32 15
  %13746 = getelementptr inbounds %struct.Reg, %struct.Reg* %13745, i32 0, i32 0
  %RBP.i1485 = bitcast %union.anon* %13746 to i64*
  %13747 = load i64, i64* %RBP.i1485
  %13748 = sub i64 %13747, 1212
  %13749 = load i32, i32* %EAX.i1484
  %13750 = zext i32 %13749 to i64
  %13751 = load i64, i64* %PC.i1483
  %13752 = add i64 %13751, 6
  store i64 %13752, i64* %PC.i1483
  %13753 = inttoptr i64 %13748 to i32*
  store i32 %13749, i32* %13753
  store %struct.Memory* %loadMem_47632d, %struct.Memory** %MEMORY
  %loadMem_476333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13755 = getelementptr inbounds %struct.GPR, %struct.GPR* %13754, i32 0, i32 33
  %13756 = getelementptr inbounds %struct.Reg, %struct.Reg* %13755, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %13756 to i64*
  %13757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13758 = getelementptr inbounds %struct.GPR, %struct.GPR* %13757, i32 0, i32 5
  %13759 = getelementptr inbounds %struct.Reg, %struct.Reg* %13758, i32 0, i32 0
  %ECX.i1481 = bitcast %union.anon* %13759 to i32*
  %13760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13761 = getelementptr inbounds %struct.GPR, %struct.GPR* %13760, i32 0, i32 1
  %13762 = getelementptr inbounds %struct.Reg, %struct.Reg* %13761, i32 0, i32 0
  %RAX.i1482 = bitcast %union.anon* %13762 to i64*
  %13763 = load i32, i32* %ECX.i1481
  %13764 = zext i32 %13763 to i64
  %13765 = load i64, i64* %PC.i1480
  %13766 = add i64 %13765, 2
  store i64 %13766, i64* %PC.i1480
  %13767 = and i64 %13764, 4294967295
  store i64 %13767, i64* %RAX.i1482, align 8
  store %struct.Memory* %loadMem_476333, %struct.Memory** %MEMORY
  %loadMem_476335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13769 = getelementptr inbounds %struct.GPR, %struct.GPR* %13768, i32 0, i32 33
  %13770 = getelementptr inbounds %struct.Reg, %struct.Reg* %13769, i32 0, i32 0
  %PC.i1479 = bitcast %union.anon* %13770 to i64*
  %13771 = load i64, i64* %PC.i1479
  %13772 = add i64 %13771, 1
  store i64 %13772, i64* %PC.i1479
  %13773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %13774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13775 = bitcast %union.anon* %13774 to i32*
  %13776 = load i32, i32* %13775, align 8
  %13777 = sext i32 %13776 to i64
  %13778 = lshr i64 %13777, 32
  store i64 %13778, i64* %13773, align 8
  store %struct.Memory* %loadMem_476335, %struct.Memory** %MEMORY
  %loadMem_476336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13780 = getelementptr inbounds %struct.GPR, %struct.GPR* %13779, i32 0, i32 33
  %13781 = getelementptr inbounds %struct.Reg, %struct.Reg* %13780, i32 0, i32 0
  %PC.i1476 = bitcast %union.anon* %13781 to i64*
  %13782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13783 = getelementptr inbounds %struct.GPR, %struct.GPR* %13782, i32 0, i32 5
  %13784 = getelementptr inbounds %struct.Reg, %struct.Reg* %13783, i32 0, i32 0
  %RCX.i1477 = bitcast %union.anon* %13784 to i64*
  %13785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13786 = getelementptr inbounds %struct.GPR, %struct.GPR* %13785, i32 0, i32 15
  %13787 = getelementptr inbounds %struct.Reg, %struct.Reg* %13786, i32 0, i32 0
  %RBP.i1478 = bitcast %union.anon* %13787 to i64*
  %13788 = load i64, i64* %RBP.i1478
  %13789 = sub i64 %13788, 1212
  %13790 = load i64, i64* %PC.i1476
  %13791 = add i64 %13790, 6
  store i64 %13791, i64* %PC.i1476
  %13792 = inttoptr i64 %13789 to i32*
  %13793 = load i32, i32* %13792
  %13794 = zext i32 %13793 to i64
  store i64 %13794, i64* %RCX.i1477, align 8
  store %struct.Memory* %loadMem_476336, %struct.Memory** %MEMORY
  %loadMem_47633c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13796 = getelementptr inbounds %struct.GPR, %struct.GPR* %13795, i32 0, i32 33
  %13797 = getelementptr inbounds %struct.Reg, %struct.Reg* %13796, i32 0, i32 0
  %PC.i1471 = bitcast %union.anon* %13797 to i64*
  %13798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13799 = getelementptr inbounds %struct.GPR, %struct.GPR* %13798, i32 0, i32 5
  %13800 = getelementptr inbounds %struct.Reg, %struct.Reg* %13799, i32 0, i32 0
  %ECX.i1472 = bitcast %union.anon* %13800 to i32*
  %13801 = load i32, i32* %ECX.i1472
  %13802 = zext i32 %13801 to i64
  %13803 = load i64, i64* %PC.i1471
  %13804 = add i64 %13803, 2
  store i64 %13804, i64* %PC.i1471
  %13805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13806 = bitcast %union.anon* %13805 to i32*
  %13807 = load i32, i32* %13806, align 8
  %13808 = zext i32 %13807 to i64
  %13809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %13810 = bitcast %union.anon* %13809 to i32*
  %13811 = load i32, i32* %13810, align 8
  %13812 = zext i32 %13811 to i64
  %13813 = shl i64 %13802, 32
  %13814 = ashr exact i64 %13813, 32
  %13815 = shl i64 %13812, 32
  %13816 = or i64 %13815, %13808
  %13817 = sdiv i64 %13816, %13814
  %13818 = shl i64 %13817, 32
  %13819 = ashr exact i64 %13818, 32
  %13820 = icmp eq i64 %13817, %13819
  br i1 %13820, label %13825, label %13821

; <label>:13821:                                  ; preds = %block_476310
  %13822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13823 = load i64, i64* %13822, align 8
  %13824 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %13823, %struct.Memory* %loadMem_47633c)
  br label %routine_idivl__ecx.exit1473

; <label>:13825:                                  ; preds = %block_476310
  %13826 = srem i64 %13816, %13814
  %13827 = getelementptr inbounds %union.anon, %union.anon* %13805, i64 0, i32 0
  %13828 = and i64 %13817, 4294967295
  store i64 %13828, i64* %13827, align 8
  %13829 = getelementptr inbounds %union.anon, %union.anon* %13809, i64 0, i32 0
  %13830 = and i64 %13826, 4294967295
  store i64 %13830, i64* %13829, align 8
  %13831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13831, align 1
  %13832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %13832, align 1
  %13833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13833, align 1
  %13834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13834, align 1
  %13835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13835, align 1
  %13836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13836, align 1
  br label %routine_idivl__ecx.exit1473

routine_idivl__ecx.exit1473:                      ; preds = %13821, %13825
  %13837 = phi %struct.Memory* [ %13824, %13821 ], [ %loadMem_47633c, %13825 ]
  store %struct.Memory* %13837, %struct.Memory** %MEMORY
  %loadMem_47633e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13839 = getelementptr inbounds %struct.GPR, %struct.GPR* %13838, i32 0, i32 33
  %13840 = getelementptr inbounds %struct.Reg, %struct.Reg* %13839, i32 0, i32 0
  %PC.i1469 = bitcast %union.anon* %13840 to i64*
  %13841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13842 = getelementptr inbounds %struct.GPR, %struct.GPR* %13841, i32 0, i32 1
  %13843 = getelementptr inbounds %struct.Reg, %struct.Reg* %13842, i32 0, i32 0
  %RAX.i1470 = bitcast %union.anon* %13843 to i64*
  %13844 = load i64, i64* %RAX.i1470
  %13845 = load i64, i64* %PC.i1469
  %13846 = add i64 %13845, 3
  store i64 %13846, i64* %PC.i1469
  %13847 = trunc i64 %13844 to i32
  %13848 = sub i32 %13847, 1
  %13849 = zext i32 %13848 to i64
  store i64 %13849, i64* %RAX.i1470, align 8
  %13850 = icmp ult i32 %13847, 1
  %13851 = zext i1 %13850 to i8
  %13852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13851, i8* %13852, align 1
  %13853 = and i32 %13848, 255
  %13854 = call i32 @llvm.ctpop.i32(i32 %13853)
  %13855 = trunc i32 %13854 to i8
  %13856 = and i8 %13855, 1
  %13857 = xor i8 %13856, 1
  %13858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13857, i8* %13858, align 1
  %13859 = xor i64 1, %13844
  %13860 = trunc i64 %13859 to i32
  %13861 = xor i32 %13860, %13848
  %13862 = lshr i32 %13861, 4
  %13863 = trunc i32 %13862 to i8
  %13864 = and i8 %13863, 1
  %13865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13864, i8* %13865, align 1
  %13866 = icmp eq i32 %13848, 0
  %13867 = zext i1 %13866 to i8
  %13868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13867, i8* %13868, align 1
  %13869 = lshr i32 %13848, 31
  %13870 = trunc i32 %13869 to i8
  %13871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13870, i8* %13871, align 1
  %13872 = lshr i32 %13847, 31
  %13873 = xor i32 %13869, %13872
  %13874 = add i32 %13873, %13872
  %13875 = icmp eq i32 %13874, 2
  %13876 = zext i1 %13875 to i8
  %13877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13876, i8* %13877, align 1
  store %struct.Memory* %loadMem_47633e, %struct.Memory** %MEMORY
  %loadMem_476341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13879 = getelementptr inbounds %struct.GPR, %struct.GPR* %13878, i32 0, i32 33
  %13880 = getelementptr inbounds %struct.Reg, %struct.Reg* %13879, i32 0, i32 0
  %PC.i1466 = bitcast %union.anon* %13880 to i64*
  %13881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13882 = getelementptr inbounds %struct.GPR, %struct.GPR* %13881, i32 0, i32 1
  %13883 = getelementptr inbounds %struct.Reg, %struct.Reg* %13882, i32 0, i32 0
  %EAX.i1467 = bitcast %union.anon* %13883 to i32*
  %13884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13885 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13884, i64 0, i64 1
  %YMM1.i1468 = bitcast %union.VectorReg* %13885 to %"class.std::bitset"*
  %13886 = bitcast %"class.std::bitset"* %YMM1.i1468 to i8*
  %13887 = load i32, i32* %EAX.i1467
  %13888 = zext i32 %13887 to i64
  %13889 = load i64, i64* %PC.i1466
  %13890 = add i64 %13889, 4
  store i64 %13890, i64* %PC.i1466
  %13891 = bitcast i8* %13886 to <2 x i32>*
  %13892 = load <2 x i32>, <2 x i32>* %13891, align 1
  %13893 = getelementptr inbounds i8, i8* %13886, i64 8
  %13894 = bitcast i8* %13893 to <2 x i32>*
  %13895 = load <2 x i32>, <2 x i32>* %13894, align 1
  %13896 = sitofp i32 %13887 to float
  %13897 = bitcast i8* %13886 to float*
  store float %13896, float* %13897, align 1
  %13898 = extractelement <2 x i32> %13892, i32 1
  %13899 = getelementptr inbounds i8, i8* %13886, i64 4
  %13900 = bitcast i8* %13899 to i32*
  store i32 %13898, i32* %13900, align 1
  %13901 = extractelement <2 x i32> %13895, i32 0
  %13902 = bitcast i8* %13893 to i32*
  store i32 %13901, i32* %13902, align 1
  %13903 = extractelement <2 x i32> %13895, i32 1
  %13904 = getelementptr inbounds i8, i8* %13886, i64 12
  %13905 = bitcast i8* %13904 to i32*
  store i32 %13903, i32* %13905, align 1
  store %struct.Memory* %loadMem_476341, %struct.Memory** %MEMORY
  %loadMem_476345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13907 = getelementptr inbounds %struct.GPR, %struct.GPR* %13906, i32 0, i32 33
  %13908 = getelementptr inbounds %struct.Reg, %struct.Reg* %13907, i32 0, i32 0
  %PC.i1463 = bitcast %union.anon* %13908 to i64*
  %13909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13910 = getelementptr inbounds %struct.GPR, %struct.GPR* %13909, i32 0, i32 15
  %13911 = getelementptr inbounds %struct.Reg, %struct.Reg* %13910, i32 0, i32 0
  %RBP.i1464 = bitcast %union.anon* %13911 to i64*
  %13912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13913 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13912, i64 0, i64 1
  %XMM1.i1465 = bitcast %union.VectorReg* %13913 to %union.vec128_t*
  %13914 = load i64, i64* %RBP.i1464
  %13915 = sub i64 %13914, 1112
  %13916 = bitcast %union.vec128_t* %XMM1.i1465 to i8*
  %13917 = load i64, i64* %PC.i1463
  %13918 = add i64 %13917, 8
  store i64 %13918, i64* %PC.i1463
  %13919 = bitcast i8* %13916 to <2 x float>*
  %13920 = load <2 x float>, <2 x float>* %13919, align 1
  %13921 = extractelement <2 x float> %13920, i32 0
  %13922 = inttoptr i64 %13915 to float*
  store float %13921, float* %13922
  store %struct.Memory* %loadMem_476345, %struct.Memory** %MEMORY
  %loadMem_47634d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13924 = getelementptr inbounds %struct.GPR, %struct.GPR* %13923, i32 0, i32 33
  %13925 = getelementptr inbounds %struct.Reg, %struct.Reg* %13924, i32 0, i32 0
  %PC.i1460 = bitcast %union.anon* %13925 to i64*
  %13926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13927 = getelementptr inbounds %struct.GPR, %struct.GPR* %13926, i32 0, i32 1
  %13928 = getelementptr inbounds %struct.Reg, %struct.Reg* %13927, i32 0, i32 0
  %RAX.i1461 = bitcast %union.anon* %13928 to i64*
  %13929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13930 = getelementptr inbounds %struct.GPR, %struct.GPR* %13929, i32 0, i32 15
  %13931 = getelementptr inbounds %struct.Reg, %struct.Reg* %13930, i32 0, i32 0
  %RBP.i1462 = bitcast %union.anon* %13931 to i64*
  %13932 = load i64, i64* %RBP.i1462
  %13933 = sub i64 %13932, 44
  %13934 = load i64, i64* %PC.i1460
  %13935 = add i64 %13934, 3
  store i64 %13935, i64* %PC.i1460
  %13936 = inttoptr i64 %13933 to i32*
  %13937 = load i32, i32* %13936
  %13938 = zext i32 %13937 to i64
  store i64 %13938, i64* %RAX.i1461, align 8
  store %struct.Memory* %loadMem_47634d, %struct.Memory** %MEMORY
  %loadMem_476350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13940 = getelementptr inbounds %struct.GPR, %struct.GPR* %13939, i32 0, i32 33
  %13941 = getelementptr inbounds %struct.Reg, %struct.Reg* %13940, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %13941 to i64*
  %13942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13943 = getelementptr inbounds %struct.GPR, %struct.GPR* %13942, i32 0, i32 1
  %13944 = getelementptr inbounds %struct.Reg, %struct.Reg* %13943, i32 0, i32 0
  %RAX.i1459 = bitcast %union.anon* %13944 to i64*
  %13945 = load i64, i64* %RAX.i1459
  %13946 = load i64, i64* %PC.i1458
  %13947 = add i64 %13946, 3
  store i64 %13947, i64* %PC.i1458
  %13948 = trunc i64 %13945 to i32
  %13949 = sub i32 %13948, 1
  %13950 = zext i32 %13949 to i64
  store i64 %13950, i64* %RAX.i1459, align 8
  %13951 = icmp ult i32 %13948, 1
  %13952 = zext i1 %13951 to i8
  %13953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13952, i8* %13953, align 1
  %13954 = and i32 %13949, 255
  %13955 = call i32 @llvm.ctpop.i32(i32 %13954)
  %13956 = trunc i32 %13955 to i8
  %13957 = and i8 %13956, 1
  %13958 = xor i8 %13957, 1
  %13959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13958, i8* %13959, align 1
  %13960 = xor i64 1, %13945
  %13961 = trunc i64 %13960 to i32
  %13962 = xor i32 %13961, %13949
  %13963 = lshr i32 %13962, 4
  %13964 = trunc i32 %13963 to i8
  %13965 = and i8 %13964, 1
  %13966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13965, i8* %13966, align 1
  %13967 = icmp eq i32 %13949, 0
  %13968 = zext i1 %13967 to i8
  %13969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13968, i8* %13969, align 1
  %13970 = lshr i32 %13949, 31
  %13971 = trunc i32 %13970 to i8
  %13972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13971, i8* %13972, align 1
  %13973 = lshr i32 %13948, 31
  %13974 = xor i32 %13970, %13973
  %13975 = add i32 %13974, %13973
  %13976 = icmp eq i32 %13975, 2
  %13977 = zext i1 %13976 to i8
  %13978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13977, i8* %13978, align 1
  store %struct.Memory* %loadMem_476350, %struct.Memory** %MEMORY
  %loadMem_476353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13980 = getelementptr inbounds %struct.GPR, %struct.GPR* %13979, i32 0, i32 33
  %13981 = getelementptr inbounds %struct.Reg, %struct.Reg* %13980, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %13981 to i64*
  %13982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13983 = getelementptr inbounds %struct.GPR, %struct.GPR* %13982, i32 0, i32 1
  %13984 = getelementptr inbounds %struct.Reg, %struct.Reg* %13983, i32 0, i32 0
  %EAX.i1456 = bitcast %union.anon* %13984 to i32*
  %13985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13986 = getelementptr inbounds %struct.GPR, %struct.GPR* %13985, i32 0, i32 9
  %13987 = getelementptr inbounds %struct.Reg, %struct.Reg* %13986, i32 0, i32 0
  %RSI.i1457 = bitcast %union.anon* %13987 to i64*
  %13988 = load i32, i32* %EAX.i1456
  %13989 = zext i32 %13988 to i64
  %13990 = load i64, i64* %PC.i1455
  %13991 = add i64 %13990, 3
  store i64 %13991, i64* %PC.i1455
  %13992 = shl i64 %13989, 32
  %13993 = ashr exact i64 %13992, 32
  store i64 %13993, i64* %RSI.i1457, align 8
  store %struct.Memory* %loadMem_476353, %struct.Memory** %MEMORY
  %loadMem_476356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13995 = getelementptr inbounds %struct.GPR, %struct.GPR* %13994, i32 0, i32 33
  %13996 = getelementptr inbounds %struct.Reg, %struct.Reg* %13995, i32 0, i32 0
  %PC.i1451 = bitcast %union.anon* %13996 to i64*
  %13997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13998 = getelementptr inbounds %struct.GPR, %struct.GPR* %13997, i32 0, i32 1
  %13999 = getelementptr inbounds %struct.Reg, %struct.Reg* %13998, i32 0, i32 0
  %RAX.i1452 = bitcast %union.anon* %13999 to i64*
  %14000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14001 = getelementptr inbounds %struct.GPR, %struct.GPR* %14000, i32 0, i32 9
  %14002 = getelementptr inbounds %struct.Reg, %struct.Reg* %14001, i32 0, i32 0
  %RSI.i1453 = bitcast %union.anon* %14002 to i64*
  %14003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14004 = getelementptr inbounds %struct.GPR, %struct.GPR* %14003, i32 0, i32 15
  %14005 = getelementptr inbounds %struct.Reg, %struct.Reg* %14004, i32 0, i32 0
  %RBP.i1454 = bitcast %union.anon* %14005 to i64*
  %14006 = load i64, i64* %RBP.i1454
  %14007 = load i64, i64* %RSI.i1453
  %14008 = mul i64 %14007, 4
  %14009 = add i64 %14006, -208
  %14010 = add i64 %14009, %14008
  %14011 = load i64, i64* %PC.i1451
  %14012 = add i64 %14011, 7
  store i64 %14012, i64* %PC.i1451
  %14013 = inttoptr i64 %14010 to i32*
  %14014 = load i32, i32* %14013
  %14015 = zext i32 %14014 to i64
  store i64 %14015, i64* %RAX.i1452, align 8
  store %struct.Memory* %loadMem_476356, %struct.Memory** %MEMORY
  %loadMem_47635d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14017 = getelementptr inbounds %struct.GPR, %struct.GPR* %14016, i32 0, i32 33
  %14018 = getelementptr inbounds %struct.Reg, %struct.Reg* %14017, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %14018 to i64*
  %14019 = load i64, i64* %PC.i1450
  %14020 = add i64 %14019, 1
  store i64 %14020, i64* %PC.i1450
  %14021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %14022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14023 = bitcast %union.anon* %14022 to i32*
  %14024 = load i32, i32* %14023, align 8
  %14025 = sext i32 %14024 to i64
  %14026 = lshr i64 %14025, 32
  store i64 %14026, i64* %14021, align 8
  store %struct.Memory* %loadMem_47635d, %struct.Memory** %MEMORY
  %loadMem_47635e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14028 = getelementptr inbounds %struct.GPR, %struct.GPR* %14027, i32 0, i32 33
  %14029 = getelementptr inbounds %struct.Reg, %struct.Reg* %14028, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %14029 to i64*
  %14030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14031 = getelementptr inbounds %struct.GPR, %struct.GPR* %14030, i32 0, i32 5
  %14032 = getelementptr inbounds %struct.Reg, %struct.Reg* %14031, i32 0, i32 0
  %ECX.i1445 = bitcast %union.anon* %14032 to i32*
  %14033 = load i32, i32* %ECX.i1445
  %14034 = zext i32 %14033 to i64
  %14035 = load i64, i64* %PC.i1444
  %14036 = add i64 %14035, 2
  store i64 %14036, i64* %PC.i1444
  %14037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14038 = bitcast %union.anon* %14037 to i32*
  %14039 = load i32, i32* %14038, align 8
  %14040 = zext i32 %14039 to i64
  %14041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %14042 = bitcast %union.anon* %14041 to i32*
  %14043 = load i32, i32* %14042, align 8
  %14044 = zext i32 %14043 to i64
  %14045 = shl i64 %14034, 32
  %14046 = ashr exact i64 %14045, 32
  %14047 = shl i64 %14044, 32
  %14048 = or i64 %14047, %14040
  %14049 = sdiv i64 %14048, %14046
  %14050 = shl i64 %14049, 32
  %14051 = ashr exact i64 %14050, 32
  %14052 = icmp eq i64 %14049, %14051
  br i1 %14052, label %14057, label %14053

; <label>:14053:                                  ; preds = %routine_idivl__ecx.exit1473
  %14054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14055 = load i64, i64* %14054, align 8
  %14056 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %14055, %struct.Memory* %loadMem_47635e)
  br label %routine_idivl__ecx.exit1446

; <label>:14057:                                  ; preds = %routine_idivl__ecx.exit1473
  %14058 = srem i64 %14048, %14046
  %14059 = getelementptr inbounds %union.anon, %union.anon* %14037, i64 0, i32 0
  %14060 = and i64 %14049, 4294967295
  store i64 %14060, i64* %14059, align 8
  %14061 = getelementptr inbounds %union.anon, %union.anon* %14041, i64 0, i32 0
  %14062 = and i64 %14058, 4294967295
  store i64 %14062, i64* %14061, align 8
  %14063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14063, align 1
  %14064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %14064, align 1
  %14065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14065, align 1
  %14066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14066, align 1
  %14067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %14067, align 1
  %14068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14068, align 1
  br label %routine_idivl__ecx.exit1446

routine_idivl__ecx.exit1446:                      ; preds = %14053, %14057
  %14069 = phi %struct.Memory* [ %14056, %14053 ], [ %loadMem_47635e, %14057 ]
  store %struct.Memory* %14069, %struct.Memory** %MEMORY
  %loadMem_476360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14071 = getelementptr inbounds %struct.GPR, %struct.GPR* %14070, i32 0, i32 33
  %14072 = getelementptr inbounds %struct.Reg, %struct.Reg* %14071, i32 0, i32 0
  %PC.i1442 = bitcast %union.anon* %14072 to i64*
  %14073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14074 = getelementptr inbounds %struct.GPR, %struct.GPR* %14073, i32 0, i32 7
  %14075 = getelementptr inbounds %struct.Reg, %struct.Reg* %14074, i32 0, i32 0
  %RDX.i1443 = bitcast %union.anon* %14075 to i64*
  %14076 = load i64, i64* %RDX.i1443
  %14077 = load i64, i64* %PC.i1442
  %14078 = add i64 %14077, 3
  store i64 %14078, i64* %PC.i1442
  %14079 = trunc i64 %14076 to i32
  %14080 = sub i32 %14079, 1
  %14081 = zext i32 %14080 to i64
  store i64 %14081, i64* %RDX.i1443, align 8
  %14082 = icmp ult i32 %14079, 1
  %14083 = zext i1 %14082 to i8
  %14084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14083, i8* %14084, align 1
  %14085 = and i32 %14080, 255
  %14086 = call i32 @llvm.ctpop.i32(i32 %14085)
  %14087 = trunc i32 %14086 to i8
  %14088 = and i8 %14087, 1
  %14089 = xor i8 %14088, 1
  %14090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14089, i8* %14090, align 1
  %14091 = xor i64 1, %14076
  %14092 = trunc i64 %14091 to i32
  %14093 = xor i32 %14092, %14080
  %14094 = lshr i32 %14093, 4
  %14095 = trunc i32 %14094 to i8
  %14096 = and i8 %14095, 1
  %14097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14096, i8* %14097, align 1
  %14098 = icmp eq i32 %14080, 0
  %14099 = zext i1 %14098 to i8
  %14100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14099, i8* %14100, align 1
  %14101 = lshr i32 %14080, 31
  %14102 = trunc i32 %14101 to i8
  %14103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14102, i8* %14103, align 1
  %14104 = lshr i32 %14079, 31
  %14105 = xor i32 %14101, %14104
  %14106 = add i32 %14105, %14104
  %14107 = icmp eq i32 %14106, 2
  %14108 = zext i1 %14107 to i8
  %14109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14108, i8* %14109, align 1
  store %struct.Memory* %loadMem_476360, %struct.Memory** %MEMORY
  %loadMem_476363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14111 = getelementptr inbounds %struct.GPR, %struct.GPR* %14110, i32 0, i32 33
  %14112 = getelementptr inbounds %struct.Reg, %struct.Reg* %14111, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %14112 to i64*
  %14113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14114 = getelementptr inbounds %struct.GPR, %struct.GPR* %14113, i32 0, i32 7
  %14115 = getelementptr inbounds %struct.Reg, %struct.Reg* %14114, i32 0, i32 0
  %EDX.i1440 = bitcast %union.anon* %14115 to i32*
  %14116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14117 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14116, i64 0, i64 1
  %YMM1.i1441 = bitcast %union.VectorReg* %14117 to %"class.std::bitset"*
  %14118 = bitcast %"class.std::bitset"* %YMM1.i1441 to i8*
  %14119 = load i32, i32* %EDX.i1440
  %14120 = zext i32 %14119 to i64
  %14121 = load i64, i64* %PC.i1439
  %14122 = add i64 %14121, 4
  store i64 %14122, i64* %PC.i1439
  %14123 = bitcast i8* %14118 to <2 x i32>*
  %14124 = load <2 x i32>, <2 x i32>* %14123, align 1
  %14125 = getelementptr inbounds i8, i8* %14118, i64 8
  %14126 = bitcast i8* %14125 to <2 x i32>*
  %14127 = load <2 x i32>, <2 x i32>* %14126, align 1
  %14128 = sitofp i32 %14119 to float
  %14129 = bitcast i8* %14118 to float*
  store float %14128, float* %14129, align 1
  %14130 = extractelement <2 x i32> %14124, i32 1
  %14131 = getelementptr inbounds i8, i8* %14118, i64 4
  %14132 = bitcast i8* %14131 to i32*
  store i32 %14130, i32* %14132, align 1
  %14133 = extractelement <2 x i32> %14127, i32 0
  %14134 = bitcast i8* %14125 to i32*
  store i32 %14133, i32* %14134, align 1
  %14135 = extractelement <2 x i32> %14127, i32 1
  %14136 = getelementptr inbounds i8, i8* %14118, i64 12
  %14137 = bitcast i8* %14136 to i32*
  store i32 %14135, i32* %14137, align 1
  store %struct.Memory* %loadMem_476363, %struct.Memory** %MEMORY
  %loadMem_476367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14139 = getelementptr inbounds %struct.GPR, %struct.GPR* %14138, i32 0, i32 33
  %14140 = getelementptr inbounds %struct.Reg, %struct.Reg* %14139, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %14140 to i64*
  %14141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14142 = getelementptr inbounds %struct.GPR, %struct.GPR* %14141, i32 0, i32 15
  %14143 = getelementptr inbounds %struct.Reg, %struct.Reg* %14142, i32 0, i32 0
  %RBP.i1437 = bitcast %union.anon* %14143 to i64*
  %14144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14145 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14144, i64 0, i64 1
  %XMM1.i1438 = bitcast %union.VectorReg* %14145 to %union.vec128_t*
  %14146 = load i64, i64* %RBP.i1437
  %14147 = sub i64 %14146, 1116
  %14148 = bitcast %union.vec128_t* %XMM1.i1438 to i8*
  %14149 = load i64, i64* %PC.i1436
  %14150 = add i64 %14149, 8
  store i64 %14150, i64* %PC.i1436
  %14151 = bitcast i8* %14148 to <2 x float>*
  %14152 = load <2 x float>, <2 x float>* %14151, align 1
  %14153 = extractelement <2 x float> %14152, i32 0
  %14154 = inttoptr i64 %14147 to float*
  store float %14153, float* %14154
  store %struct.Memory* %loadMem_476367, %struct.Memory** %MEMORY
  %loadMem_47636f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14156 = getelementptr inbounds %struct.GPR, %struct.GPR* %14155, i32 0, i32 33
  %14157 = getelementptr inbounds %struct.Reg, %struct.Reg* %14156, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %14157 to i64*
  %14158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14159 = getelementptr inbounds %struct.GPR, %struct.GPR* %14158, i32 0, i32 9
  %14160 = getelementptr inbounds %struct.Reg, %struct.Reg* %14159, i32 0, i32 0
  %RSI.i1434 = bitcast %union.anon* %14160 to i64*
  %14161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14162 = getelementptr inbounds %struct.GPR, %struct.GPR* %14161, i32 0, i32 15
  %14163 = getelementptr inbounds %struct.Reg, %struct.Reg* %14162, i32 0, i32 0
  %RBP.i1435 = bitcast %union.anon* %14163 to i64*
  %14164 = load i64, i64* %RBP.i1435
  %14165 = sub i64 %14164, 44
  %14166 = load i64, i64* %PC.i1433
  %14167 = add i64 %14166, 4
  store i64 %14167, i64* %PC.i1433
  %14168 = inttoptr i64 %14165 to i32*
  %14169 = load i32, i32* %14168
  %14170 = sext i32 %14169 to i64
  store i64 %14170, i64* %RSI.i1434, align 8
  store %struct.Memory* %loadMem_47636f, %struct.Memory** %MEMORY
  %loadMem_476373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14172 = getelementptr inbounds %struct.GPR, %struct.GPR* %14171, i32 0, i32 33
  %14173 = getelementptr inbounds %struct.Reg, %struct.Reg* %14172, i32 0, i32 0
  %PC.i1429 = bitcast %union.anon* %14173 to i64*
  %14174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14175 = getelementptr inbounds %struct.GPR, %struct.GPR* %14174, i32 0, i32 7
  %14176 = getelementptr inbounds %struct.Reg, %struct.Reg* %14175, i32 0, i32 0
  %RDX.i1430 = bitcast %union.anon* %14176 to i64*
  %14177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14178 = getelementptr inbounds %struct.GPR, %struct.GPR* %14177, i32 0, i32 9
  %14179 = getelementptr inbounds %struct.Reg, %struct.Reg* %14178, i32 0, i32 0
  %RSI.i1431 = bitcast %union.anon* %14179 to i64*
  %14180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14181 = getelementptr inbounds %struct.GPR, %struct.GPR* %14180, i32 0, i32 15
  %14182 = getelementptr inbounds %struct.Reg, %struct.Reg* %14181, i32 0, i32 0
  %RBP.i1432 = bitcast %union.anon* %14182 to i64*
  %14183 = load i64, i64* %RBP.i1432
  %14184 = load i64, i64* %RSI.i1431
  %14185 = mul i64 %14184, 4
  %14186 = add i64 %14183, -208
  %14187 = add i64 %14186, %14185
  %14188 = load i64, i64* %PC.i1429
  %14189 = add i64 %14188, 7
  store i64 %14189, i64* %PC.i1429
  %14190 = inttoptr i64 %14187 to i32*
  %14191 = load i32, i32* %14190
  %14192 = zext i32 %14191 to i64
  store i64 %14192, i64* %RDX.i1430, align 8
  store %struct.Memory* %loadMem_476373, %struct.Memory** %MEMORY
  %loadMem_47637a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14194 = getelementptr inbounds %struct.GPR, %struct.GPR* %14193, i32 0, i32 33
  %14195 = getelementptr inbounds %struct.Reg, %struct.Reg* %14194, i32 0, i32 0
  %PC.i1426 = bitcast %union.anon* %14195 to i64*
  %14196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14197 = getelementptr inbounds %struct.GPR, %struct.GPR* %14196, i32 0, i32 7
  %14198 = getelementptr inbounds %struct.Reg, %struct.Reg* %14197, i32 0, i32 0
  %EDX.i1427 = bitcast %union.anon* %14198 to i32*
  %14199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14200 = getelementptr inbounds %struct.GPR, %struct.GPR* %14199, i32 0, i32 1
  %14201 = getelementptr inbounds %struct.Reg, %struct.Reg* %14200, i32 0, i32 0
  %RAX.i1428 = bitcast %union.anon* %14201 to i64*
  %14202 = load i32, i32* %EDX.i1427
  %14203 = zext i32 %14202 to i64
  %14204 = load i64, i64* %PC.i1426
  %14205 = add i64 %14204, 2
  store i64 %14205, i64* %PC.i1426
  %14206 = and i64 %14203, 4294967295
  store i64 %14206, i64* %RAX.i1428, align 8
  store %struct.Memory* %loadMem_47637a, %struct.Memory** %MEMORY
  %loadMem_47637c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14208 = getelementptr inbounds %struct.GPR, %struct.GPR* %14207, i32 0, i32 33
  %14209 = getelementptr inbounds %struct.Reg, %struct.Reg* %14208, i32 0, i32 0
  %PC.i1425 = bitcast %union.anon* %14209 to i64*
  %14210 = load i64, i64* %PC.i1425
  %14211 = add i64 %14210, 1
  store i64 %14211, i64* %PC.i1425
  %14212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %14213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14214 = bitcast %union.anon* %14213 to i32*
  %14215 = load i32, i32* %14214, align 8
  %14216 = sext i32 %14215 to i64
  %14217 = lshr i64 %14216, 32
  store i64 %14217, i64* %14212, align 8
  store %struct.Memory* %loadMem_47637c, %struct.Memory** %MEMORY
  %loadMem_47637d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14219 = getelementptr inbounds %struct.GPR, %struct.GPR* %14218, i32 0, i32 33
  %14220 = getelementptr inbounds %struct.Reg, %struct.Reg* %14219, i32 0, i32 0
  %PC.i1421 = bitcast %union.anon* %14220 to i64*
  %14221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14222 = getelementptr inbounds %struct.GPR, %struct.GPR* %14221, i32 0, i32 5
  %14223 = getelementptr inbounds %struct.Reg, %struct.Reg* %14222, i32 0, i32 0
  %ECX.i1422 = bitcast %union.anon* %14223 to i32*
  %14224 = load i32, i32* %ECX.i1422
  %14225 = zext i32 %14224 to i64
  %14226 = load i64, i64* %PC.i1421
  %14227 = add i64 %14226, 2
  store i64 %14227, i64* %PC.i1421
  %14228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14229 = bitcast %union.anon* %14228 to i32*
  %14230 = load i32, i32* %14229, align 8
  %14231 = zext i32 %14230 to i64
  %14232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %14233 = bitcast %union.anon* %14232 to i32*
  %14234 = load i32, i32* %14233, align 8
  %14235 = zext i32 %14234 to i64
  %14236 = shl i64 %14225, 32
  %14237 = ashr exact i64 %14236, 32
  %14238 = shl i64 %14235, 32
  %14239 = or i64 %14238, %14231
  %14240 = sdiv i64 %14239, %14237
  %14241 = shl i64 %14240, 32
  %14242 = ashr exact i64 %14241, 32
  %14243 = icmp eq i64 %14240, %14242
  br i1 %14243, label %14248, label %14244

; <label>:14244:                                  ; preds = %routine_idivl__ecx.exit1446
  %14245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14246 = load i64, i64* %14245, align 8
  %14247 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %14246, %struct.Memory* %loadMem_47637d)
  br label %routine_idivl__ecx.exit1423

; <label>:14248:                                  ; preds = %routine_idivl__ecx.exit1446
  %14249 = srem i64 %14239, %14237
  %14250 = getelementptr inbounds %union.anon, %union.anon* %14228, i64 0, i32 0
  %14251 = and i64 %14240, 4294967295
  store i64 %14251, i64* %14250, align 8
  %14252 = getelementptr inbounds %union.anon, %union.anon* %14232, i64 0, i32 0
  %14253 = and i64 %14249, 4294967295
  store i64 %14253, i64* %14252, align 8
  %14254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14254, align 1
  %14255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %14255, align 1
  %14256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14256, align 1
  %14257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14257, align 1
  %14258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %14258, align 1
  %14259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14259, align 1
  br label %routine_idivl__ecx.exit1423

routine_idivl__ecx.exit1423:                      ; preds = %14244, %14248
  %14260 = phi %struct.Memory* [ %14247, %14244 ], [ %loadMem_47637d, %14248 ]
  store %struct.Memory* %14260, %struct.Memory** %MEMORY
  %loadMem_47637f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14262 = getelementptr inbounds %struct.GPR, %struct.GPR* %14261, i32 0, i32 33
  %14263 = getelementptr inbounds %struct.Reg, %struct.Reg* %14262, i32 0, i32 0
  %PC.i1419 = bitcast %union.anon* %14263 to i64*
  %14264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14265 = getelementptr inbounds %struct.GPR, %struct.GPR* %14264, i32 0, i32 1
  %14266 = getelementptr inbounds %struct.Reg, %struct.Reg* %14265, i32 0, i32 0
  %RAX.i1420 = bitcast %union.anon* %14266 to i64*
  %14267 = load i64, i64* %RAX.i1420
  %14268 = load i64, i64* %PC.i1419
  %14269 = add i64 %14268, 3
  store i64 %14269, i64* %PC.i1419
  %14270 = trunc i64 %14267 to i32
  %14271 = sub i32 %14270, 1
  %14272 = zext i32 %14271 to i64
  store i64 %14272, i64* %RAX.i1420, align 8
  %14273 = icmp ult i32 %14270, 1
  %14274 = zext i1 %14273 to i8
  %14275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14274, i8* %14275, align 1
  %14276 = and i32 %14271, 255
  %14277 = call i32 @llvm.ctpop.i32(i32 %14276)
  %14278 = trunc i32 %14277 to i8
  %14279 = and i8 %14278, 1
  %14280 = xor i8 %14279, 1
  %14281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14280, i8* %14281, align 1
  %14282 = xor i64 1, %14267
  %14283 = trunc i64 %14282 to i32
  %14284 = xor i32 %14283, %14271
  %14285 = lshr i32 %14284, 4
  %14286 = trunc i32 %14285 to i8
  %14287 = and i8 %14286, 1
  %14288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14287, i8* %14288, align 1
  %14289 = icmp eq i32 %14271, 0
  %14290 = zext i1 %14289 to i8
  %14291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14290, i8* %14291, align 1
  %14292 = lshr i32 %14271, 31
  %14293 = trunc i32 %14292 to i8
  %14294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14293, i8* %14294, align 1
  %14295 = lshr i32 %14270, 31
  %14296 = xor i32 %14292, %14295
  %14297 = add i32 %14296, %14295
  %14298 = icmp eq i32 %14297, 2
  %14299 = zext i1 %14298 to i8
  %14300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14299, i8* %14300, align 1
  store %struct.Memory* %loadMem_47637f, %struct.Memory** %MEMORY
  %loadMem_476382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14302 = getelementptr inbounds %struct.GPR, %struct.GPR* %14301, i32 0, i32 33
  %14303 = getelementptr inbounds %struct.Reg, %struct.Reg* %14302, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %14303 to i64*
  %14304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14305 = getelementptr inbounds %struct.GPR, %struct.GPR* %14304, i32 0, i32 1
  %14306 = getelementptr inbounds %struct.Reg, %struct.Reg* %14305, i32 0, i32 0
  %EAX.i1417 = bitcast %union.anon* %14306 to i32*
  %14307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14308 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14307, i64 0, i64 1
  %YMM1.i1418 = bitcast %union.VectorReg* %14308 to %"class.std::bitset"*
  %14309 = bitcast %"class.std::bitset"* %YMM1.i1418 to i8*
  %14310 = load i32, i32* %EAX.i1417
  %14311 = zext i32 %14310 to i64
  %14312 = load i64, i64* %PC.i1416
  %14313 = add i64 %14312, 4
  store i64 %14313, i64* %PC.i1416
  %14314 = bitcast i8* %14309 to <2 x i32>*
  %14315 = load <2 x i32>, <2 x i32>* %14314, align 1
  %14316 = getelementptr inbounds i8, i8* %14309, i64 8
  %14317 = bitcast i8* %14316 to <2 x i32>*
  %14318 = load <2 x i32>, <2 x i32>* %14317, align 1
  %14319 = sitofp i32 %14310 to float
  %14320 = bitcast i8* %14309 to float*
  store float %14319, float* %14320, align 1
  %14321 = extractelement <2 x i32> %14315, i32 1
  %14322 = getelementptr inbounds i8, i8* %14309, i64 4
  %14323 = bitcast i8* %14322 to i32*
  store i32 %14321, i32* %14323, align 1
  %14324 = extractelement <2 x i32> %14318, i32 0
  %14325 = bitcast i8* %14316 to i32*
  store i32 %14324, i32* %14325, align 1
  %14326 = extractelement <2 x i32> %14318, i32 1
  %14327 = getelementptr inbounds i8, i8* %14309, i64 12
  %14328 = bitcast i8* %14327 to i32*
  store i32 %14326, i32* %14328, align 1
  store %struct.Memory* %loadMem_476382, %struct.Memory** %MEMORY
  %loadMem_476386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14330 = getelementptr inbounds %struct.GPR, %struct.GPR* %14329, i32 0, i32 33
  %14331 = getelementptr inbounds %struct.Reg, %struct.Reg* %14330, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %14331 to i64*
  %14332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14333 = getelementptr inbounds %struct.GPR, %struct.GPR* %14332, i32 0, i32 15
  %14334 = getelementptr inbounds %struct.Reg, %struct.Reg* %14333, i32 0, i32 0
  %RBP.i1414 = bitcast %union.anon* %14334 to i64*
  %14335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14336 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14335, i64 0, i64 1
  %XMM1.i1415 = bitcast %union.VectorReg* %14336 to %union.vec128_t*
  %14337 = load i64, i64* %RBP.i1414
  %14338 = sub i64 %14337, 1120
  %14339 = bitcast %union.vec128_t* %XMM1.i1415 to i8*
  %14340 = load i64, i64* %PC.i1413
  %14341 = add i64 %14340, 8
  store i64 %14341, i64* %PC.i1413
  %14342 = bitcast i8* %14339 to <2 x float>*
  %14343 = load <2 x float>, <2 x float>* %14342, align 1
  %14344 = extractelement <2 x float> %14343, i32 0
  %14345 = inttoptr i64 %14338 to float*
  store float %14344, float* %14345
  store %struct.Memory* %loadMem_476386, %struct.Memory** %MEMORY
  %loadMem_47638e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14347 = getelementptr inbounds %struct.GPR, %struct.GPR* %14346, i32 0, i32 33
  %14348 = getelementptr inbounds %struct.Reg, %struct.Reg* %14347, i32 0, i32 0
  %PC.i1410 = bitcast %union.anon* %14348 to i64*
  %14349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14350 = getelementptr inbounds %struct.GPR, %struct.GPR* %14349, i32 0, i32 9
  %14351 = getelementptr inbounds %struct.Reg, %struct.Reg* %14350, i32 0, i32 0
  %RSI.i1411 = bitcast %union.anon* %14351 to i64*
  %14352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14353 = getelementptr inbounds %struct.GPR, %struct.GPR* %14352, i32 0, i32 15
  %14354 = getelementptr inbounds %struct.Reg, %struct.Reg* %14353, i32 0, i32 0
  %RBP.i1412 = bitcast %union.anon* %14354 to i64*
  %14355 = load i64, i64* %RBP.i1412
  %14356 = sub i64 %14355, 44
  %14357 = load i64, i64* %PC.i1410
  %14358 = add i64 %14357, 4
  store i64 %14358, i64* %PC.i1410
  %14359 = inttoptr i64 %14356 to i32*
  %14360 = load i32, i32* %14359
  %14361 = sext i32 %14360 to i64
  store i64 %14361, i64* %RSI.i1411, align 8
  store %struct.Memory* %loadMem_47638e, %struct.Memory** %MEMORY
  %loadMem_476392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14363 = getelementptr inbounds %struct.GPR, %struct.GPR* %14362, i32 0, i32 33
  %14364 = getelementptr inbounds %struct.Reg, %struct.Reg* %14363, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %14364 to i64*
  %14365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14366 = getelementptr inbounds %struct.GPR, %struct.GPR* %14365, i32 0, i32 1
  %14367 = getelementptr inbounds %struct.Reg, %struct.Reg* %14366, i32 0, i32 0
  %RAX.i1407 = bitcast %union.anon* %14367 to i64*
  %14368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14369 = getelementptr inbounds %struct.GPR, %struct.GPR* %14368, i32 0, i32 9
  %14370 = getelementptr inbounds %struct.Reg, %struct.Reg* %14369, i32 0, i32 0
  %RSI.i1408 = bitcast %union.anon* %14370 to i64*
  %14371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14372 = getelementptr inbounds %struct.GPR, %struct.GPR* %14371, i32 0, i32 15
  %14373 = getelementptr inbounds %struct.Reg, %struct.Reg* %14372, i32 0, i32 0
  %RBP.i1409 = bitcast %union.anon* %14373 to i64*
  %14374 = load i64, i64* %RBP.i1409
  %14375 = load i64, i64* %RSI.i1408
  %14376 = mul i64 %14375, 4
  %14377 = add i64 %14374, -208
  %14378 = add i64 %14377, %14376
  %14379 = load i64, i64* %PC.i1406
  %14380 = add i64 %14379, 7
  store i64 %14380, i64* %PC.i1406
  %14381 = inttoptr i64 %14378 to i32*
  %14382 = load i32, i32* %14381
  %14383 = zext i32 %14382 to i64
  store i64 %14383, i64* %RAX.i1407, align 8
  store %struct.Memory* %loadMem_476392, %struct.Memory** %MEMORY
  %loadMem_476399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14385 = getelementptr inbounds %struct.GPR, %struct.GPR* %14384, i32 0, i32 33
  %14386 = getelementptr inbounds %struct.Reg, %struct.Reg* %14385, i32 0, i32 0
  %PC.i1405 = bitcast %union.anon* %14386 to i64*
  %14387 = load i64, i64* %PC.i1405
  %14388 = add i64 %14387, 1
  store i64 %14388, i64* %PC.i1405
  %14389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %14390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14391 = bitcast %union.anon* %14390 to i32*
  %14392 = load i32, i32* %14391, align 8
  %14393 = sext i32 %14392 to i64
  %14394 = lshr i64 %14393, 32
  store i64 %14394, i64* %14389, align 8
  store %struct.Memory* %loadMem_476399, %struct.Memory** %MEMORY
  %loadMem_47639a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14396 = getelementptr inbounds %struct.GPR, %struct.GPR* %14395, i32 0, i32 33
  %14397 = getelementptr inbounds %struct.Reg, %struct.Reg* %14396, i32 0, i32 0
  %PC.i1400 = bitcast %union.anon* %14397 to i64*
  %14398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14399 = getelementptr inbounds %struct.GPR, %struct.GPR* %14398, i32 0, i32 5
  %14400 = getelementptr inbounds %struct.Reg, %struct.Reg* %14399, i32 0, i32 0
  %ECX.i1401 = bitcast %union.anon* %14400 to i32*
  %14401 = load i32, i32* %ECX.i1401
  %14402 = zext i32 %14401 to i64
  %14403 = load i64, i64* %PC.i1400
  %14404 = add i64 %14403, 2
  store i64 %14404, i64* %PC.i1400
  %14405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14406 = bitcast %union.anon* %14405 to i32*
  %14407 = load i32, i32* %14406, align 8
  %14408 = zext i32 %14407 to i64
  %14409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %14410 = bitcast %union.anon* %14409 to i32*
  %14411 = load i32, i32* %14410, align 8
  %14412 = zext i32 %14411 to i64
  %14413 = shl i64 %14402, 32
  %14414 = ashr exact i64 %14413, 32
  %14415 = shl i64 %14412, 32
  %14416 = or i64 %14415, %14408
  %14417 = sdiv i64 %14416, %14414
  %14418 = shl i64 %14417, 32
  %14419 = ashr exact i64 %14418, 32
  %14420 = icmp eq i64 %14417, %14419
  br i1 %14420, label %14425, label %14421

; <label>:14421:                                  ; preds = %routine_idivl__ecx.exit1423
  %14422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14423 = load i64, i64* %14422, align 8
  %14424 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %14423, %struct.Memory* %loadMem_47639a)
  br label %routine_idivl__ecx.exit

; <label>:14425:                                  ; preds = %routine_idivl__ecx.exit1423
  %14426 = srem i64 %14416, %14414
  %14427 = getelementptr inbounds %union.anon, %union.anon* %14405, i64 0, i32 0
  %14428 = and i64 %14417, 4294967295
  store i64 %14428, i64* %14427, align 8
  %14429 = getelementptr inbounds %union.anon, %union.anon* %14409, i64 0, i32 0
  %14430 = and i64 %14426, 4294967295
  store i64 %14430, i64* %14429, align 8
  %14431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14431, align 1
  %14432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %14432, align 1
  %14433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14433, align 1
  %14434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14434, align 1
  %14435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %14435, align 1
  %14436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14436, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %14421, %14425
  %14437 = phi %struct.Memory* [ %14424, %14421 ], [ %loadMem_47639a, %14425 ]
  store %struct.Memory* %14437, %struct.Memory** %MEMORY
  %loadMem_47639c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14439 = getelementptr inbounds %struct.GPR, %struct.GPR* %14438, i32 0, i32 33
  %14440 = getelementptr inbounds %struct.Reg, %struct.Reg* %14439, i32 0, i32 0
  %PC.i1398 = bitcast %union.anon* %14440 to i64*
  %14441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14442 = getelementptr inbounds %struct.GPR, %struct.GPR* %14441, i32 0, i32 7
  %14443 = getelementptr inbounds %struct.Reg, %struct.Reg* %14442, i32 0, i32 0
  %RDX.i1399 = bitcast %union.anon* %14443 to i64*
  %14444 = load i64, i64* %RDX.i1399
  %14445 = load i64, i64* %PC.i1398
  %14446 = add i64 %14445, 3
  store i64 %14446, i64* %PC.i1398
  %14447 = trunc i64 %14444 to i32
  %14448 = sub i32 %14447, 1
  %14449 = zext i32 %14448 to i64
  store i64 %14449, i64* %RDX.i1399, align 8
  %14450 = icmp ult i32 %14447, 1
  %14451 = zext i1 %14450 to i8
  %14452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14451, i8* %14452, align 1
  %14453 = and i32 %14448, 255
  %14454 = call i32 @llvm.ctpop.i32(i32 %14453)
  %14455 = trunc i32 %14454 to i8
  %14456 = and i8 %14455, 1
  %14457 = xor i8 %14456, 1
  %14458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14457, i8* %14458, align 1
  %14459 = xor i64 1, %14444
  %14460 = trunc i64 %14459 to i32
  %14461 = xor i32 %14460, %14448
  %14462 = lshr i32 %14461, 4
  %14463 = trunc i32 %14462 to i8
  %14464 = and i8 %14463, 1
  %14465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14464, i8* %14465, align 1
  %14466 = icmp eq i32 %14448, 0
  %14467 = zext i1 %14466 to i8
  %14468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14467, i8* %14468, align 1
  %14469 = lshr i32 %14448, 31
  %14470 = trunc i32 %14469 to i8
  %14471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14470, i8* %14471, align 1
  %14472 = lshr i32 %14447, 31
  %14473 = xor i32 %14469, %14472
  %14474 = add i32 %14473, %14472
  %14475 = icmp eq i32 %14474, 2
  %14476 = zext i1 %14475 to i8
  %14477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14476, i8* %14477, align 1
  store %struct.Memory* %loadMem_47639c, %struct.Memory** %MEMORY
  %loadMem_47639f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14479 = getelementptr inbounds %struct.GPR, %struct.GPR* %14478, i32 0, i32 33
  %14480 = getelementptr inbounds %struct.Reg, %struct.Reg* %14479, i32 0, i32 0
  %PC.i1396 = bitcast %union.anon* %14480 to i64*
  %14481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14482 = getelementptr inbounds %struct.GPR, %struct.GPR* %14481, i32 0, i32 7
  %14483 = getelementptr inbounds %struct.Reg, %struct.Reg* %14482, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %14483 to i32*
  %14484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14485 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14484, i64 0, i64 1
  %YMM1.i1397 = bitcast %union.VectorReg* %14485 to %"class.std::bitset"*
  %14486 = bitcast %"class.std::bitset"* %YMM1.i1397 to i8*
  %14487 = load i32, i32* %EDX.i
  %14488 = zext i32 %14487 to i64
  %14489 = load i64, i64* %PC.i1396
  %14490 = add i64 %14489, 4
  store i64 %14490, i64* %PC.i1396
  %14491 = bitcast i8* %14486 to <2 x i32>*
  %14492 = load <2 x i32>, <2 x i32>* %14491, align 1
  %14493 = getelementptr inbounds i8, i8* %14486, i64 8
  %14494 = bitcast i8* %14493 to <2 x i32>*
  %14495 = load <2 x i32>, <2 x i32>* %14494, align 1
  %14496 = sitofp i32 %14487 to float
  %14497 = bitcast i8* %14486 to float*
  store float %14496, float* %14497, align 1
  %14498 = extractelement <2 x i32> %14492, i32 1
  %14499 = getelementptr inbounds i8, i8* %14486, i64 4
  %14500 = bitcast i8* %14499 to i32*
  store i32 %14498, i32* %14500, align 1
  %14501 = extractelement <2 x i32> %14495, i32 0
  %14502 = bitcast i8* %14493 to i32*
  store i32 %14501, i32* %14502, align 1
  %14503 = extractelement <2 x i32> %14495, i32 1
  %14504 = getelementptr inbounds i8, i8* %14486, i64 12
  %14505 = bitcast i8* %14504 to i32*
  store i32 %14503, i32* %14505, align 1
  store %struct.Memory* %loadMem_47639f, %struct.Memory** %MEMORY
  %loadMem_4763a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14507 = getelementptr inbounds %struct.GPR, %struct.GPR* %14506, i32 0, i32 33
  %14508 = getelementptr inbounds %struct.Reg, %struct.Reg* %14507, i32 0, i32 0
  %PC.i1393 = bitcast %union.anon* %14508 to i64*
  %14509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14510 = getelementptr inbounds %struct.GPR, %struct.GPR* %14509, i32 0, i32 15
  %14511 = getelementptr inbounds %struct.Reg, %struct.Reg* %14510, i32 0, i32 0
  %RBP.i1394 = bitcast %union.anon* %14511 to i64*
  %14512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14513 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14512, i64 0, i64 1
  %XMM1.i1395 = bitcast %union.VectorReg* %14513 to %union.vec128_t*
  %14514 = load i64, i64* %RBP.i1394
  %14515 = sub i64 %14514, 1124
  %14516 = bitcast %union.vec128_t* %XMM1.i1395 to i8*
  %14517 = load i64, i64* %PC.i1393
  %14518 = add i64 %14517, 8
  store i64 %14518, i64* %PC.i1393
  %14519 = bitcast i8* %14516 to <2 x float>*
  %14520 = load <2 x float>, <2 x float>* %14519, align 1
  %14521 = extractelement <2 x float> %14520, i32 0
  %14522 = inttoptr i64 %14515 to float*
  store float %14521, float* %14522
  store %struct.Memory* %loadMem_4763a3, %struct.Memory** %MEMORY
  %loadMem_4763ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %14523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14524 = getelementptr inbounds %struct.GPR, %struct.GPR* %14523, i32 0, i32 33
  %14525 = getelementptr inbounds %struct.Reg, %struct.Reg* %14524, i32 0, i32 0
  %PC.i1390 = bitcast %union.anon* %14525 to i64*
  %14526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14527 = getelementptr inbounds %struct.GPR, %struct.GPR* %14526, i32 0, i32 15
  %14528 = getelementptr inbounds %struct.Reg, %struct.Reg* %14527, i32 0, i32 0
  %RBP.i1391 = bitcast %union.anon* %14528 to i64*
  %14529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14530 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14529, i64 0, i64 1
  %YMM1.i1392 = bitcast %union.VectorReg* %14530 to %"class.std::bitset"*
  %14531 = bitcast %"class.std::bitset"* %YMM1.i1392 to i8*
  %14532 = load i64, i64* %RBP.i1391
  %14533 = sub i64 %14532, 1116
  %14534 = load i64, i64* %PC.i1390
  %14535 = add i64 %14534, 8
  store i64 %14535, i64* %PC.i1390
  %14536 = inttoptr i64 %14533 to float*
  %14537 = load float, float* %14536
  %14538 = fpext float %14537 to double
  %14539 = bitcast i8* %14531 to double*
  store double %14538, double* %14539, align 1
  store %struct.Memory* %loadMem_4763ab, %struct.Memory** %MEMORY
  %loadMem_4763b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14541 = getelementptr inbounds %struct.GPR, %struct.GPR* %14540, i32 0, i32 33
  %14542 = getelementptr inbounds %struct.Reg, %struct.Reg* %14541, i32 0, i32 0
  %PC.i1387 = bitcast %union.anon* %14542 to i64*
  %14543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14544 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14543, i64 0, i64 0
  %YMM0.i1388 = bitcast %union.VectorReg* %14544 to %"class.std::bitset"*
  %14545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14546 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14545, i64 0, i64 1
  %XMM1.i1389 = bitcast %union.VectorReg* %14546 to %union.vec128_t*
  %14547 = bitcast %"class.std::bitset"* %YMM0.i1388 to i8*
  %14548 = bitcast %"class.std::bitset"* %YMM0.i1388 to i8*
  %14549 = bitcast %union.vec128_t* %XMM1.i1389 to i8*
  %14550 = load i64, i64* %PC.i1387
  %14551 = add i64 %14550, 4
  store i64 %14551, i64* %PC.i1387
  %14552 = bitcast i8* %14548 to double*
  %14553 = load double, double* %14552, align 1
  %14554 = getelementptr inbounds i8, i8* %14548, i64 8
  %14555 = bitcast i8* %14554 to i64*
  %14556 = load i64, i64* %14555, align 1
  %14557 = bitcast i8* %14549 to double*
  %14558 = load double, double* %14557, align 1
  %14559 = fadd double %14553, %14558
  %14560 = bitcast i8* %14547 to double*
  store double %14559, double* %14560, align 1
  %14561 = getelementptr inbounds i8, i8* %14547, i64 8
  %14562 = bitcast i8* %14561 to i64*
  store i64 %14556, i64* %14562, align 1
  store %struct.Memory* %loadMem_4763b3, %struct.Memory** %MEMORY
  %loadMem_4763b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14564 = getelementptr inbounds %struct.GPR, %struct.GPR* %14563, i32 0, i32 33
  %14565 = getelementptr inbounds %struct.Reg, %struct.Reg* %14564, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %14565 to i64*
  %14566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14567 = getelementptr inbounds %struct.GPR, %struct.GPR* %14566, i32 0, i32 15
  %14568 = getelementptr inbounds %struct.Reg, %struct.Reg* %14567, i32 0, i32 0
  %RBP.i1385 = bitcast %union.anon* %14568 to i64*
  %14569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14570 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14569, i64 0, i64 1
  %YMM1.i1386 = bitcast %union.VectorReg* %14570 to %"class.std::bitset"*
  %14571 = bitcast %"class.std::bitset"* %YMM1.i1386 to i8*
  %14572 = load i64, i64* %RBP.i1385
  %14573 = sub i64 %14572, 36
  %14574 = load i64, i64* %PC.i1384
  %14575 = add i64 %14574, 5
  store i64 %14575, i64* %PC.i1384
  %14576 = bitcast i8* %14571 to <2 x i32>*
  %14577 = load <2 x i32>, <2 x i32>* %14576, align 1
  %14578 = getelementptr inbounds i8, i8* %14571, i64 8
  %14579 = bitcast i8* %14578 to <2 x i32>*
  %14580 = load <2 x i32>, <2 x i32>* %14579, align 1
  %14581 = inttoptr i64 %14573 to i32*
  %14582 = load i32, i32* %14581
  %14583 = sitofp i32 %14582 to float
  %14584 = bitcast i8* %14571 to float*
  store float %14583, float* %14584, align 1
  %14585 = extractelement <2 x i32> %14577, i32 1
  %14586 = getelementptr inbounds i8, i8* %14571, i64 4
  %14587 = bitcast i8* %14586 to i32*
  store i32 %14585, i32* %14587, align 1
  %14588 = extractelement <2 x i32> %14580, i32 0
  %14589 = bitcast i8* %14578 to i32*
  store i32 %14588, i32* %14589, align 1
  %14590 = extractelement <2 x i32> %14580, i32 1
  %14591 = getelementptr inbounds i8, i8* %14571, i64 12
  %14592 = bitcast i8* %14591 to i32*
  store i32 %14590, i32* %14592, align 1
  store %struct.Memory* %loadMem_4763b7, %struct.Memory** %MEMORY
  %loadMem_4763bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %14593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14594 = getelementptr inbounds %struct.GPR, %struct.GPR* %14593, i32 0, i32 33
  %14595 = getelementptr inbounds %struct.Reg, %struct.Reg* %14594, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %14595 to i64*
  %14596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14597 = getelementptr inbounds %struct.GPR, %struct.GPR* %14596, i32 0, i32 15
  %14598 = getelementptr inbounds %struct.Reg, %struct.Reg* %14597, i32 0, i32 0
  %RBP.i1382 = bitcast %union.anon* %14598 to i64*
  %14599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14600 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14599, i64 0, i64 1
  %YMM1.i1383 = bitcast %union.VectorReg* %14600 to %"class.std::bitset"*
  %14601 = bitcast %"class.std::bitset"* %YMM1.i1383 to i8*
  %14602 = bitcast %"class.std::bitset"* %YMM1.i1383 to i8*
  %14603 = load i64, i64* %RBP.i1382
  %14604 = sub i64 %14603, 1112
  %14605 = load i64, i64* %PC.i1381
  %14606 = add i64 %14605, 8
  store i64 %14606, i64* %PC.i1381
  %14607 = bitcast i8* %14602 to <2 x float>*
  %14608 = load <2 x float>, <2 x float>* %14607, align 1
  %14609 = getelementptr inbounds i8, i8* %14602, i64 8
  %14610 = bitcast i8* %14609 to <2 x i32>*
  %14611 = load <2 x i32>, <2 x i32>* %14610, align 1
  %14612 = inttoptr i64 %14604 to float*
  %14613 = load float, float* %14612
  %14614 = extractelement <2 x float> %14608, i32 0
  %14615 = fsub float %14614, %14613
  %14616 = bitcast i8* %14601 to float*
  store float %14615, float* %14616, align 1
  %14617 = bitcast <2 x float> %14608 to <2 x i32>
  %14618 = extractelement <2 x i32> %14617, i32 1
  %14619 = getelementptr inbounds i8, i8* %14601, i64 4
  %14620 = bitcast i8* %14619 to i32*
  store i32 %14618, i32* %14620, align 1
  %14621 = extractelement <2 x i32> %14611, i32 0
  %14622 = getelementptr inbounds i8, i8* %14601, i64 8
  %14623 = bitcast i8* %14622 to i32*
  store i32 %14621, i32* %14623, align 1
  %14624 = extractelement <2 x i32> %14611, i32 1
  %14625 = getelementptr inbounds i8, i8* %14601, i64 12
  %14626 = bitcast i8* %14625 to i32*
  store i32 %14624, i32* %14626, align 1
  store %struct.Memory* %loadMem_4763bc, %struct.Memory** %MEMORY
  %loadMem_4763c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14628 = getelementptr inbounds %struct.GPR, %struct.GPR* %14627, i32 0, i32 33
  %14629 = getelementptr inbounds %struct.Reg, %struct.Reg* %14628, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %14629 to i64*
  %14630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14631 = getelementptr inbounds %struct.GPR, %struct.GPR* %14630, i32 0, i32 15
  %14632 = getelementptr inbounds %struct.Reg, %struct.Reg* %14631, i32 0, i32 0
  %RBP.i1379 = bitcast %union.anon* %14632 to i64*
  %14633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14634 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14633, i64 0, i64 2
  %YMM2.i1380 = bitcast %union.VectorReg* %14634 to %"class.std::bitset"*
  %14635 = bitcast %"class.std::bitset"* %YMM2.i1380 to i8*
  %14636 = load i64, i64* %RBP.i1379
  %14637 = sub i64 %14636, 1124
  %14638 = load i64, i64* %PC.i1378
  %14639 = add i64 %14638, 8
  store i64 %14639, i64* %PC.i1378
  %14640 = inttoptr i64 %14637 to float*
  %14641 = load float, float* %14640
  %14642 = bitcast i8* %14635 to float*
  store float %14641, float* %14642, align 1
  %14643 = getelementptr inbounds i8, i8* %14635, i64 4
  %14644 = bitcast i8* %14643 to float*
  store float 0.000000e+00, float* %14644, align 1
  %14645 = getelementptr inbounds i8, i8* %14635, i64 8
  %14646 = bitcast i8* %14645 to float*
  store float 0.000000e+00, float* %14646, align 1
  %14647 = getelementptr inbounds i8, i8* %14635, i64 12
  %14648 = bitcast i8* %14647 to float*
  store float 0.000000e+00, float* %14648, align 1
  store %struct.Memory* %loadMem_4763c4, %struct.Memory** %MEMORY
  %loadMem_4763cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %14649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14650 = getelementptr inbounds %struct.GPR, %struct.GPR* %14649, i32 0, i32 33
  %14651 = getelementptr inbounds %struct.Reg, %struct.Reg* %14650, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %14651 to i64*
  %14652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14653 = getelementptr inbounds %struct.GPR, %struct.GPR* %14652, i32 0, i32 15
  %14654 = getelementptr inbounds %struct.Reg, %struct.Reg* %14653, i32 0, i32 0
  %RBP.i1376 = bitcast %union.anon* %14654 to i64*
  %14655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14656 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14655, i64 0, i64 2
  %YMM2.i1377 = bitcast %union.VectorReg* %14656 to %"class.std::bitset"*
  %14657 = bitcast %"class.std::bitset"* %YMM2.i1377 to i8*
  %14658 = bitcast %"class.std::bitset"* %YMM2.i1377 to i8*
  %14659 = load i64, i64* %RBP.i1376
  %14660 = sub i64 %14659, 1116
  %14661 = load i64, i64* %PC.i1375
  %14662 = add i64 %14661, 8
  store i64 %14662, i64* %PC.i1375
  %14663 = bitcast i8* %14658 to <2 x float>*
  %14664 = load <2 x float>, <2 x float>* %14663, align 1
  %14665 = getelementptr inbounds i8, i8* %14658, i64 8
  %14666 = bitcast i8* %14665 to <2 x i32>*
  %14667 = load <2 x i32>, <2 x i32>* %14666, align 1
  %14668 = inttoptr i64 %14660 to float*
  %14669 = load float, float* %14668
  %14670 = extractelement <2 x float> %14664, i32 0
  %14671 = fsub float %14670, %14669
  %14672 = bitcast i8* %14657 to float*
  store float %14671, float* %14672, align 1
  %14673 = bitcast <2 x float> %14664 to <2 x i32>
  %14674 = extractelement <2 x i32> %14673, i32 1
  %14675 = getelementptr inbounds i8, i8* %14657, i64 4
  %14676 = bitcast i8* %14675 to i32*
  store i32 %14674, i32* %14676, align 1
  %14677 = extractelement <2 x i32> %14667, i32 0
  %14678 = getelementptr inbounds i8, i8* %14657, i64 8
  %14679 = bitcast i8* %14678 to i32*
  store i32 %14677, i32* %14679, align 1
  %14680 = extractelement <2 x i32> %14667, i32 1
  %14681 = getelementptr inbounds i8, i8* %14657, i64 12
  %14682 = bitcast i8* %14681 to i32*
  store i32 %14680, i32* %14682, align 1
  store %struct.Memory* %loadMem_4763cc, %struct.Memory** %MEMORY
  %loadMem_4763d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14684 = getelementptr inbounds %struct.GPR, %struct.GPR* %14683, i32 0, i32 33
  %14685 = getelementptr inbounds %struct.Reg, %struct.Reg* %14684, i32 0, i32 0
  %PC.i1372 = bitcast %union.anon* %14685 to i64*
  %14686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14687 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14686, i64 0, i64 1
  %YMM1.i1373 = bitcast %union.VectorReg* %14687 to %"class.std::bitset"*
  %14688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14689 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14688, i64 0, i64 2
  %XMM2.i1374 = bitcast %union.VectorReg* %14689 to %union.vec128_t*
  %14690 = bitcast %"class.std::bitset"* %YMM1.i1373 to i8*
  %14691 = bitcast %"class.std::bitset"* %YMM1.i1373 to i8*
  %14692 = bitcast %union.vec128_t* %XMM2.i1374 to i8*
  %14693 = load i64, i64* %PC.i1372
  %14694 = add i64 %14693, 4
  store i64 %14694, i64* %PC.i1372
  %14695 = bitcast i8* %14691 to <2 x float>*
  %14696 = load <2 x float>, <2 x float>* %14695, align 1
  %14697 = getelementptr inbounds i8, i8* %14691, i64 8
  %14698 = bitcast i8* %14697 to <2 x i32>*
  %14699 = load <2 x i32>, <2 x i32>* %14698, align 1
  %14700 = bitcast i8* %14692 to <2 x float>*
  %14701 = load <2 x float>, <2 x float>* %14700, align 1
  %14702 = extractelement <2 x float> %14696, i32 0
  %14703 = extractelement <2 x float> %14701, i32 0
  %14704 = fmul float %14702, %14703
  %14705 = bitcast i8* %14690 to float*
  store float %14704, float* %14705, align 1
  %14706 = bitcast <2 x float> %14696 to <2 x i32>
  %14707 = extractelement <2 x i32> %14706, i32 1
  %14708 = getelementptr inbounds i8, i8* %14690, i64 4
  %14709 = bitcast i8* %14708 to i32*
  store i32 %14707, i32* %14709, align 1
  %14710 = extractelement <2 x i32> %14699, i32 0
  %14711 = getelementptr inbounds i8, i8* %14690, i64 8
  %14712 = bitcast i8* %14711 to i32*
  store i32 %14710, i32* %14712, align 1
  %14713 = extractelement <2 x i32> %14699, i32 1
  %14714 = getelementptr inbounds i8, i8* %14690, i64 12
  %14715 = bitcast i8* %14714 to i32*
  store i32 %14713, i32* %14715, align 1
  store %struct.Memory* %loadMem_4763d4, %struct.Memory** %MEMORY
  %loadMem_4763d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14717 = getelementptr inbounds %struct.GPR, %struct.GPR* %14716, i32 0, i32 33
  %14718 = getelementptr inbounds %struct.Reg, %struct.Reg* %14717, i32 0, i32 0
  %PC.i1369 = bitcast %union.anon* %14718 to i64*
  %14719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14720 = getelementptr inbounds %struct.GPR, %struct.GPR* %14719, i32 0, i32 15
  %14721 = getelementptr inbounds %struct.Reg, %struct.Reg* %14720, i32 0, i32 0
  %RBP.i1370 = bitcast %union.anon* %14721 to i64*
  %14722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14723 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14722, i64 0, i64 2
  %YMM2.i1371 = bitcast %union.VectorReg* %14723 to %"class.std::bitset"*
  %14724 = bitcast %"class.std::bitset"* %YMM2.i1371 to i8*
  %14725 = load i64, i64* %RBP.i1370
  %14726 = sub i64 %14725, 1120
  %14727 = load i64, i64* %PC.i1369
  %14728 = add i64 %14727, 8
  store i64 %14728, i64* %PC.i1369
  %14729 = inttoptr i64 %14726 to float*
  %14730 = load float, float* %14729
  %14731 = bitcast i8* %14724 to float*
  store float %14730, float* %14731, align 1
  %14732 = getelementptr inbounds i8, i8* %14724, i64 4
  %14733 = bitcast i8* %14732 to float*
  store float 0.000000e+00, float* %14733, align 1
  %14734 = getelementptr inbounds i8, i8* %14724, i64 8
  %14735 = bitcast i8* %14734 to float*
  store float 0.000000e+00, float* %14735, align 1
  %14736 = getelementptr inbounds i8, i8* %14724, i64 12
  %14737 = bitcast i8* %14736 to float*
  store float 0.000000e+00, float* %14737, align 1
  store %struct.Memory* %loadMem_4763d8, %struct.Memory** %MEMORY
  %loadMem_4763e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14739 = getelementptr inbounds %struct.GPR, %struct.GPR* %14738, i32 0, i32 33
  %14740 = getelementptr inbounds %struct.Reg, %struct.Reg* %14739, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %14740 to i64*
  %14741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14742 = getelementptr inbounds %struct.GPR, %struct.GPR* %14741, i32 0, i32 15
  %14743 = getelementptr inbounds %struct.Reg, %struct.Reg* %14742, i32 0, i32 0
  %RBP.i1368 = bitcast %union.anon* %14743 to i64*
  %14744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14745 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14744, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %14745 to %"class.std::bitset"*
  %14746 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %14747 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %14748 = load i64, i64* %RBP.i1368
  %14749 = sub i64 %14748, 1112
  %14750 = load i64, i64* %PC.i1367
  %14751 = add i64 %14750, 8
  store i64 %14751, i64* %PC.i1367
  %14752 = bitcast i8* %14747 to <2 x float>*
  %14753 = load <2 x float>, <2 x float>* %14752, align 1
  %14754 = getelementptr inbounds i8, i8* %14747, i64 8
  %14755 = bitcast i8* %14754 to <2 x i32>*
  %14756 = load <2 x i32>, <2 x i32>* %14755, align 1
  %14757 = inttoptr i64 %14749 to float*
  %14758 = load float, float* %14757
  %14759 = extractelement <2 x float> %14753, i32 0
  %14760 = fsub float %14759, %14758
  %14761 = bitcast i8* %14746 to float*
  store float %14760, float* %14761, align 1
  %14762 = bitcast <2 x float> %14753 to <2 x i32>
  %14763 = extractelement <2 x i32> %14762, i32 1
  %14764 = getelementptr inbounds i8, i8* %14746, i64 4
  %14765 = bitcast i8* %14764 to i32*
  store i32 %14763, i32* %14765, align 1
  %14766 = extractelement <2 x i32> %14756, i32 0
  %14767 = getelementptr inbounds i8, i8* %14746, i64 8
  %14768 = bitcast i8* %14767 to i32*
  store i32 %14766, i32* %14768, align 1
  %14769 = extractelement <2 x i32> %14756, i32 1
  %14770 = getelementptr inbounds i8, i8* %14746, i64 12
  %14771 = bitcast i8* %14770 to i32*
  store i32 %14769, i32* %14771, align 1
  store %struct.Memory* %loadMem_4763e0, %struct.Memory** %MEMORY
  %loadMem_4763e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14773 = getelementptr inbounds %struct.GPR, %struct.GPR* %14772, i32 0, i32 33
  %14774 = getelementptr inbounds %struct.Reg, %struct.Reg* %14773, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %14774 to i64*
  %14775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14776 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14775, i64 0, i64 1
  %YMM1.i1366 = bitcast %union.VectorReg* %14776 to %"class.std::bitset"*
  %14777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14778 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14777, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %14778 to %union.vec128_t*
  %14779 = bitcast %"class.std::bitset"* %YMM1.i1366 to i8*
  %14780 = bitcast %"class.std::bitset"* %YMM1.i1366 to i8*
  %14781 = bitcast %union.vec128_t* %XMM2.i to i8*
  %14782 = load i64, i64* %PC.i1365
  %14783 = add i64 %14782, 4
  store i64 %14783, i64* %PC.i1365
  %14784 = bitcast i8* %14780 to <2 x float>*
  %14785 = load <2 x float>, <2 x float>* %14784, align 1
  %14786 = getelementptr inbounds i8, i8* %14780, i64 8
  %14787 = bitcast i8* %14786 to <2 x i32>*
  %14788 = load <2 x i32>, <2 x i32>* %14787, align 1
  %14789 = bitcast i8* %14781 to <2 x float>*
  %14790 = load <2 x float>, <2 x float>* %14789, align 1
  %14791 = extractelement <2 x float> %14785, i32 0
  %14792 = extractelement <2 x float> %14790, i32 0
  %14793 = fdiv float %14791, %14792
  %14794 = bitcast i8* %14779 to float*
  store float %14793, float* %14794, align 1
  %14795 = bitcast <2 x float> %14785 to <2 x i32>
  %14796 = extractelement <2 x i32> %14795, i32 1
  %14797 = getelementptr inbounds i8, i8* %14779, i64 4
  %14798 = bitcast i8* %14797 to i32*
  store i32 %14796, i32* %14798, align 1
  %14799 = extractelement <2 x i32> %14788, i32 0
  %14800 = getelementptr inbounds i8, i8* %14779, i64 8
  %14801 = bitcast i8* %14800 to i32*
  store i32 %14799, i32* %14801, align 1
  %14802 = extractelement <2 x i32> %14788, i32 1
  %14803 = getelementptr inbounds i8, i8* %14779, i64 12
  %14804 = bitcast i8* %14803 to i32*
  store i32 %14802, i32* %14804, align 1
  store %struct.Memory* %loadMem_4763e8, %struct.Memory** %MEMORY
  %loadMem_4763ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %14805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14806 = getelementptr inbounds %struct.GPR, %struct.GPR* %14805, i32 0, i32 33
  %14807 = getelementptr inbounds %struct.Reg, %struct.Reg* %14806, i32 0, i32 0
  %PC.i1363 = bitcast %union.anon* %14807 to i64*
  %14808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14809 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14808, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %14809 to %"class.std::bitset"*
  %14810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14811 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14810, i64 0, i64 1
  %XMM1.i1364 = bitcast %union.VectorReg* %14811 to %union.vec128_t*
  %14812 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %14813 = bitcast %union.vec128_t* %XMM1.i1364 to i8*
  %14814 = load i64, i64* %PC.i1363
  %14815 = add i64 %14814, 4
  store i64 %14815, i64* %PC.i1363
  %14816 = bitcast i8* %14813 to <2 x float>*
  %14817 = load <2 x float>, <2 x float>* %14816, align 1
  %14818 = extractelement <2 x float> %14817, i32 0
  %14819 = fpext float %14818 to double
  %14820 = bitcast i8* %14812 to double*
  store double %14819, double* %14820, align 1
  store %struct.Memory* %loadMem_4763ec, %struct.Memory** %MEMORY
  %loadMem_4763f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14822 = getelementptr inbounds %struct.GPR, %struct.GPR* %14821, i32 0, i32 33
  %14823 = getelementptr inbounds %struct.Reg, %struct.Reg* %14822, i32 0, i32 0
  %PC.i1362 = bitcast %union.anon* %14823 to i64*
  %14824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14825 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14824, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %14825 to %"class.std::bitset"*
  %14826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14827 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14826, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %14827 to %union.vec128_t*
  %14828 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %14829 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %14830 = bitcast %union.vec128_t* %XMM1.i to i8*
  %14831 = load i64, i64* %PC.i1362
  %14832 = add i64 %14831, 4
  store i64 %14832, i64* %PC.i1362
  %14833 = bitcast i8* %14829 to double*
  %14834 = load double, double* %14833, align 1
  %14835 = getelementptr inbounds i8, i8* %14829, i64 8
  %14836 = bitcast i8* %14835 to i64*
  %14837 = load i64, i64* %14836, align 1
  %14838 = bitcast i8* %14830 to double*
  %14839 = load double, double* %14838, align 1
  %14840 = fadd double %14834, %14839
  %14841 = bitcast i8* %14828 to double*
  store double %14840, double* %14841, align 1
  %14842 = getelementptr inbounds i8, i8* %14828, i64 8
  %14843 = bitcast i8* %14842 to i64*
  store i64 %14837, i64* %14843, align 1
  store %struct.Memory* %loadMem_4763f0, %struct.Memory** %MEMORY
  %loadMem1_4763f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14845 = getelementptr inbounds %struct.GPR, %struct.GPR* %14844, i32 0, i32 33
  %14846 = getelementptr inbounds %struct.Reg, %struct.Reg* %14845, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %14846 to i64*
  %14847 = load i64, i64* %PC.i1361
  %14848 = add i64 %14847, -479828
  %14849 = load i64, i64* %PC.i1361
  %14850 = add i64 %14849, 5
  %14851 = load i64, i64* %PC.i1361
  %14852 = add i64 %14851, 5
  store i64 %14852, i64* %PC.i1361
  %14853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14854 = load i64, i64* %14853, align 8
  %14855 = add i64 %14854, -8
  %14856 = inttoptr i64 %14855 to i64*
  store i64 %14850, i64* %14856
  store i64 %14855, i64* %14853, align 8
  %14857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14848, i64* %14857, align 8
  store %struct.Memory* %loadMem1_4763f4, %struct.Memory** %MEMORY
  %loadMem2_4763f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4763f4 = load i64, i64* %3
  %14858 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %loadMem2_4763f4)
  store %struct.Memory* %14858, %struct.Memory** %MEMORY
  %loadMem_4763f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14860 = getelementptr inbounds %struct.GPR, %struct.GPR* %14859, i32 0, i32 33
  %14861 = getelementptr inbounds %struct.Reg, %struct.Reg* %14860, i32 0, i32 0
  %PC.i1357 = bitcast %union.anon* %14861 to i64*
  %14862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14863 = getelementptr inbounds %struct.GPR, %struct.GPR* %14862, i32 0, i32 5
  %14864 = getelementptr inbounds %struct.Reg, %struct.Reg* %14863, i32 0, i32 0
  %RCX.i1358 = bitcast %union.anon* %14864 to i64*
  %14865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %14866 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %14865, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %14866 to %union.vec128_t*
  %14867 = bitcast %union.vec128_t* %XMM0.i to i8*
  %14868 = load i64, i64* %PC.i1357
  %14869 = add i64 %14868, 4
  store i64 %14869, i64* %PC.i1357
  %14870 = bitcast i8* %14867 to double*
  %14871 = load double, double* %14870, align 1
  %14872 = call double @llvm.trunc.f64(double %14871)
  %14873 = call double @llvm.fabs.f64(double %14872)
  %14874 = fcmp ogt double %14873, 0x41DFFFFFFFC00000
  %14875 = fptosi double %14872 to i32
  %14876 = zext i32 %14875 to i64
  %14877 = select i1 %14874, i64 2147483648, i64 %14876
  store i64 %14877, i64* %RCX.i1358, align 8
  store %struct.Memory* %loadMem_4763f9, %struct.Memory** %MEMORY
  %loadMem_4763fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14879 = getelementptr inbounds %struct.GPR, %struct.GPR* %14878, i32 0, i32 33
  %14880 = getelementptr inbounds %struct.Reg, %struct.Reg* %14879, i32 0, i32 0
  %PC.i1354 = bitcast %union.anon* %14880 to i64*
  %14881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14882 = getelementptr inbounds %struct.GPR, %struct.GPR* %14881, i32 0, i32 5
  %14883 = getelementptr inbounds %struct.Reg, %struct.Reg* %14882, i32 0, i32 0
  %ECX.i1355 = bitcast %union.anon* %14883 to i32*
  %14884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14885 = getelementptr inbounds %struct.GPR, %struct.GPR* %14884, i32 0, i32 15
  %14886 = getelementptr inbounds %struct.Reg, %struct.Reg* %14885, i32 0, i32 0
  %RBP.i1356 = bitcast %union.anon* %14886 to i64*
  %14887 = load i64, i64* %RBP.i1356
  %14888 = sub i64 %14887, 1092
  %14889 = load i32, i32* %ECX.i1355
  %14890 = zext i32 %14889 to i64
  %14891 = load i64, i64* %PC.i1354
  %14892 = add i64 %14891, 6
  store i64 %14892, i64* %PC.i1354
  %14893 = inttoptr i64 %14888 to i32*
  store i32 %14889, i32* %14893
  store %struct.Memory* %loadMem_4763fd, %struct.Memory** %MEMORY
  %loadMem_476403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14895 = getelementptr inbounds %struct.GPR, %struct.GPR* %14894, i32 0, i32 33
  %14896 = getelementptr inbounds %struct.Reg, %struct.Reg* %14895, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %14896 to i64*
  %14897 = load i64, i64* %PC.i1353
  %14898 = add i64 %14897, 24
  %14899 = load i64, i64* %PC.i1353
  %14900 = add i64 %14899, 5
  store i64 %14900, i64* %PC.i1353
  %14901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14898, i64* %14901, align 8
  store %struct.Memory* %loadMem_476403, %struct.Memory** %MEMORY
  br label %block_.L_47641b

block_.L_476408:                                  ; preds = %routine_idivl__esi.exit
  %loadMem_476408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14903 = getelementptr inbounds %struct.GPR, %struct.GPR* %14902, i32 0, i32 33
  %14904 = getelementptr inbounds %struct.Reg, %struct.Reg* %14903, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %14904 to i64*
  %14905 = load i64, i64* %PC.i1352
  %14906 = add i64 %14905, 5
  %14907 = load i64, i64* %PC.i1352
  %14908 = add i64 %14907, 5
  store i64 %14908, i64* %PC.i1352
  %14909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14906, i64* %14909, align 8
  store %struct.Memory* %loadMem_476408, %struct.Memory** %MEMORY
  br label %block_.L_47640d

block_.L_47640d:                                  ; preds = %block_.L_476408
  %loadMem_47640d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14911 = getelementptr inbounds %struct.GPR, %struct.GPR* %14910, i32 0, i32 33
  %14912 = getelementptr inbounds %struct.Reg, %struct.Reg* %14911, i32 0, i32 0
  %PC.i1349 = bitcast %union.anon* %14912 to i64*
  %14913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14914 = getelementptr inbounds %struct.GPR, %struct.GPR* %14913, i32 0, i32 1
  %14915 = getelementptr inbounds %struct.Reg, %struct.Reg* %14914, i32 0, i32 0
  %RAX.i1350 = bitcast %union.anon* %14915 to i64*
  %14916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14917 = getelementptr inbounds %struct.GPR, %struct.GPR* %14916, i32 0, i32 15
  %14918 = getelementptr inbounds %struct.Reg, %struct.Reg* %14917, i32 0, i32 0
  %RBP.i1351 = bitcast %union.anon* %14918 to i64*
  %14919 = load i64, i64* %RBP.i1351
  %14920 = sub i64 %14919, 44
  %14921 = load i64, i64* %PC.i1349
  %14922 = add i64 %14921, 3
  store i64 %14922, i64* %PC.i1349
  %14923 = inttoptr i64 %14920 to i32*
  %14924 = load i32, i32* %14923
  %14925 = zext i32 %14924 to i64
  store i64 %14925, i64* %RAX.i1350, align 8
  store %struct.Memory* %loadMem_47640d, %struct.Memory** %MEMORY
  %loadMem_476410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14927 = getelementptr inbounds %struct.GPR, %struct.GPR* %14926, i32 0, i32 33
  %14928 = getelementptr inbounds %struct.Reg, %struct.Reg* %14927, i32 0, i32 0
  %PC.i1347 = bitcast %union.anon* %14928 to i64*
  %14929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14930 = getelementptr inbounds %struct.GPR, %struct.GPR* %14929, i32 0, i32 1
  %14931 = getelementptr inbounds %struct.Reg, %struct.Reg* %14930, i32 0, i32 0
  %RAX.i1348 = bitcast %union.anon* %14931 to i64*
  %14932 = load i64, i64* %RAX.i1348
  %14933 = load i64, i64* %PC.i1347
  %14934 = add i64 %14933, 3
  store i64 %14934, i64* %PC.i1347
  %14935 = trunc i64 %14932 to i32
  %14936 = add i32 1, %14935
  %14937 = zext i32 %14936 to i64
  store i64 %14937, i64* %RAX.i1348, align 8
  %14938 = icmp ult i32 %14936, %14935
  %14939 = icmp ult i32 %14936, 1
  %14940 = or i1 %14938, %14939
  %14941 = zext i1 %14940 to i8
  %14942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14941, i8* %14942, align 1
  %14943 = and i32 %14936, 255
  %14944 = call i32 @llvm.ctpop.i32(i32 %14943)
  %14945 = trunc i32 %14944 to i8
  %14946 = and i8 %14945, 1
  %14947 = xor i8 %14946, 1
  %14948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14947, i8* %14948, align 1
  %14949 = xor i64 1, %14932
  %14950 = trunc i64 %14949 to i32
  %14951 = xor i32 %14950, %14936
  %14952 = lshr i32 %14951, 4
  %14953 = trunc i32 %14952 to i8
  %14954 = and i8 %14953, 1
  %14955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14954, i8* %14955, align 1
  %14956 = icmp eq i32 %14936, 0
  %14957 = zext i1 %14956 to i8
  %14958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14957, i8* %14958, align 1
  %14959 = lshr i32 %14936, 31
  %14960 = trunc i32 %14959 to i8
  %14961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14960, i8* %14961, align 1
  %14962 = lshr i32 %14935, 31
  %14963 = xor i32 %14959, %14962
  %14964 = add i32 %14963, %14959
  %14965 = icmp eq i32 %14964, 2
  %14966 = zext i1 %14965 to i8
  %14967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14966, i8* %14967, align 1
  store %struct.Memory* %loadMem_476410, %struct.Memory** %MEMORY
  %loadMem_476413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14969 = getelementptr inbounds %struct.GPR, %struct.GPR* %14968, i32 0, i32 33
  %14970 = getelementptr inbounds %struct.Reg, %struct.Reg* %14969, i32 0, i32 0
  %PC.i1344 = bitcast %union.anon* %14970 to i64*
  %14971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14972 = getelementptr inbounds %struct.GPR, %struct.GPR* %14971, i32 0, i32 1
  %14973 = getelementptr inbounds %struct.Reg, %struct.Reg* %14972, i32 0, i32 0
  %EAX.i1345 = bitcast %union.anon* %14973 to i32*
  %14974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14975 = getelementptr inbounds %struct.GPR, %struct.GPR* %14974, i32 0, i32 15
  %14976 = getelementptr inbounds %struct.Reg, %struct.Reg* %14975, i32 0, i32 0
  %RBP.i1346 = bitcast %union.anon* %14976 to i64*
  %14977 = load i64, i64* %RBP.i1346
  %14978 = sub i64 %14977, 44
  %14979 = load i32, i32* %EAX.i1345
  %14980 = zext i32 %14979 to i64
  %14981 = load i64, i64* %PC.i1344
  %14982 = add i64 %14981, 3
  store i64 %14982, i64* %PC.i1344
  %14983 = inttoptr i64 %14978 to i32*
  store i32 %14979, i32* %14983
  store %struct.Memory* %loadMem_476413, %struct.Memory** %MEMORY
  %loadMem_476416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14985 = getelementptr inbounds %struct.GPR, %struct.GPR* %14984, i32 0, i32 33
  %14986 = getelementptr inbounds %struct.Reg, %struct.Reg* %14985, i32 0, i32 0
  %PC.i1343 = bitcast %union.anon* %14986 to i64*
  %14987 = load i64, i64* %PC.i1343
  %14988 = add i64 %14987, -322
  %14989 = load i64, i64* %PC.i1343
  %14990 = add i64 %14989, 5
  store i64 %14990, i64* %PC.i1343
  %14991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14988, i64* %14991, align 8
  store %struct.Memory* %loadMem_476416, %struct.Memory** %MEMORY
  br label %block_.L_4762d4

block_.L_47641b:                                  ; preds = %routine_idivl__ecx.exit, %block_.L_4762d4
  %loadMem_47641b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14993 = getelementptr inbounds %struct.GPR, %struct.GPR* %14992, i32 0, i32 33
  %14994 = getelementptr inbounds %struct.Reg, %struct.Reg* %14993, i32 0, i32 0
  %PC.i1340 = bitcast %union.anon* %14994 to i64*
  %14995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14996 = getelementptr inbounds %struct.GPR, %struct.GPR* %14995, i32 0, i32 1
  %14997 = getelementptr inbounds %struct.Reg, %struct.Reg* %14996, i32 0, i32 0
  %RAX.i1341 = bitcast %union.anon* %14997 to i64*
  %14998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14999 = getelementptr inbounds %struct.GPR, %struct.GPR* %14998, i32 0, i32 15
  %15000 = getelementptr inbounds %struct.Reg, %struct.Reg* %14999, i32 0, i32 0
  %RBP.i1342 = bitcast %union.anon* %15000 to i64*
  %15001 = load i64, i64* %RBP.i1342
  %15002 = sub i64 %15001, 1088
  %15003 = load i64, i64* %PC.i1340
  %15004 = add i64 %15003, 6
  store i64 %15004, i64* %PC.i1340
  %15005 = inttoptr i64 %15002 to i32*
  %15006 = load i32, i32* %15005
  %15007 = zext i32 %15006 to i64
  store i64 %15007, i64* %RAX.i1341, align 8
  store %struct.Memory* %loadMem_47641b, %struct.Memory** %MEMORY
  %loadMem_476421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15009 = getelementptr inbounds %struct.GPR, %struct.GPR* %15008, i32 0, i32 33
  %15010 = getelementptr inbounds %struct.Reg, %struct.Reg* %15009, i32 0, i32 0
  %PC.i1337 = bitcast %union.anon* %15010 to i64*
  %15011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15012 = getelementptr inbounds %struct.GPR, %struct.GPR* %15011, i32 0, i32 1
  %15013 = getelementptr inbounds %struct.Reg, %struct.Reg* %15012, i32 0, i32 0
  %EAX.i1338 = bitcast %union.anon* %15013 to i32*
  %15014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15015 = getelementptr inbounds %struct.GPR, %struct.GPR* %15014, i32 0, i32 15
  %15016 = getelementptr inbounds %struct.Reg, %struct.Reg* %15015, i32 0, i32 0
  %RBP.i1339 = bitcast %union.anon* %15016 to i64*
  %15017 = load i64, i64* %RBP.i1339
  %15018 = sub i64 %15017, 40
  %15019 = load i32, i32* %EAX.i1338
  %15020 = zext i32 %15019 to i64
  %15021 = load i64, i64* %PC.i1337
  %15022 = add i64 %15021, 3
  store i64 %15022, i64* %PC.i1337
  %15023 = inttoptr i64 %15018 to i32*
  store i32 %15019, i32* %15023
  store %struct.Memory* %loadMem_476421, %struct.Memory** %MEMORY
  br label %block_.L_476424

block_.L_476424:                                  ; preds = %block_476433, %block_.L_47641b
  %loadMem_476424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15025 = getelementptr inbounds %struct.GPR, %struct.GPR* %15024, i32 0, i32 33
  %15026 = getelementptr inbounds %struct.Reg, %struct.Reg* %15025, i32 0, i32 0
  %PC.i1334 = bitcast %union.anon* %15026 to i64*
  %15027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15028 = getelementptr inbounds %struct.GPR, %struct.GPR* %15027, i32 0, i32 1
  %15029 = getelementptr inbounds %struct.Reg, %struct.Reg* %15028, i32 0, i32 0
  %RAX.i1335 = bitcast %union.anon* %15029 to i64*
  %15030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15031 = getelementptr inbounds %struct.GPR, %struct.GPR* %15030, i32 0, i32 15
  %15032 = getelementptr inbounds %struct.Reg, %struct.Reg* %15031, i32 0, i32 0
  %RBP.i1336 = bitcast %union.anon* %15032 to i64*
  %15033 = load i64, i64* %RBP.i1336
  %15034 = sub i64 %15033, 40
  %15035 = load i64, i64* %PC.i1334
  %15036 = add i64 %15035, 3
  store i64 %15036, i64* %PC.i1334
  %15037 = inttoptr i64 %15034 to i32*
  %15038 = load i32, i32* %15037
  %15039 = zext i32 %15038 to i64
  store i64 %15039, i64* %RAX.i1335, align 8
  store %struct.Memory* %loadMem_476424, %struct.Memory** %MEMORY
  %loadMem_476427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15041 = getelementptr inbounds %struct.GPR, %struct.GPR* %15040, i32 0, i32 33
  %15042 = getelementptr inbounds %struct.Reg, %struct.Reg* %15041, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %15042 to i64*
  %15043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15044 = getelementptr inbounds %struct.GPR, %struct.GPR* %15043, i32 0, i32 1
  %15045 = getelementptr inbounds %struct.Reg, %struct.Reg* %15044, i32 0, i32 0
  %EAX.i1332 = bitcast %union.anon* %15045 to i32*
  %15046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15047 = getelementptr inbounds %struct.GPR, %struct.GPR* %15046, i32 0, i32 15
  %15048 = getelementptr inbounds %struct.Reg, %struct.Reg* %15047, i32 0, i32 0
  %RBP.i1333 = bitcast %union.anon* %15048 to i64*
  %15049 = load i32, i32* %EAX.i1332
  %15050 = zext i32 %15049 to i64
  %15051 = load i64, i64* %RBP.i1333
  %15052 = sub i64 %15051, 1092
  %15053 = load i64, i64* %PC.i1331
  %15054 = add i64 %15053, 6
  store i64 %15054, i64* %PC.i1331
  %15055 = inttoptr i64 %15052 to i32*
  %15056 = load i32, i32* %15055
  %15057 = sub i32 %15049, %15056
  %15058 = icmp ult i32 %15049, %15056
  %15059 = zext i1 %15058 to i8
  %15060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15059, i8* %15060, align 1
  %15061 = and i32 %15057, 255
  %15062 = call i32 @llvm.ctpop.i32(i32 %15061)
  %15063 = trunc i32 %15062 to i8
  %15064 = and i8 %15063, 1
  %15065 = xor i8 %15064, 1
  %15066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15065, i8* %15066, align 1
  %15067 = xor i32 %15056, %15049
  %15068 = xor i32 %15067, %15057
  %15069 = lshr i32 %15068, 4
  %15070 = trunc i32 %15069 to i8
  %15071 = and i8 %15070, 1
  %15072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15071, i8* %15072, align 1
  %15073 = icmp eq i32 %15057, 0
  %15074 = zext i1 %15073 to i8
  %15075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15074, i8* %15075, align 1
  %15076 = lshr i32 %15057, 31
  %15077 = trunc i32 %15076 to i8
  %15078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15077, i8* %15078, align 1
  %15079 = lshr i32 %15049, 31
  %15080 = lshr i32 %15056, 31
  %15081 = xor i32 %15080, %15079
  %15082 = xor i32 %15076, %15079
  %15083 = add i32 %15082, %15081
  %15084 = icmp eq i32 %15083, 2
  %15085 = zext i1 %15084 to i8
  %15086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15085, i8* %15086, align 1
  store %struct.Memory* %loadMem_476427, %struct.Memory** %MEMORY
  %loadMem_47642d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15088 = getelementptr inbounds %struct.GPR, %struct.GPR* %15087, i32 0, i32 33
  %15089 = getelementptr inbounds %struct.Reg, %struct.Reg* %15088, i32 0, i32 0
  %PC.i1330 = bitcast %union.anon* %15089 to i64*
  %15090 = load i64, i64* %PC.i1330
  %15091 = add i64 %15090, 41
  %15092 = load i64, i64* %PC.i1330
  %15093 = add i64 %15092, 6
  %15094 = load i64, i64* %PC.i1330
  %15095 = add i64 %15094, 6
  store i64 %15095, i64* %PC.i1330
  %15096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15097 = load i8, i8* %15096, align 1
  %15098 = icmp eq i8 %15097, 0
  %15099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15100 = load i8, i8* %15099, align 1
  %15101 = icmp ne i8 %15100, 0
  %15102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15103 = load i8, i8* %15102, align 1
  %15104 = icmp ne i8 %15103, 0
  %15105 = xor i1 %15101, %15104
  %15106 = xor i1 %15105, true
  %15107 = and i1 %15098, %15106
  %15108 = zext i1 %15107 to i8
  store i8 %15108, i8* %BRANCH_TAKEN, align 1
  %15109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15110 = select i1 %15107, i64 %15091, i64 %15093
  store i64 %15110, i64* %15109, align 8
  store %struct.Memory* %loadMem_47642d, %struct.Memory** %MEMORY
  %loadBr_47642d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47642d = icmp eq i8 %loadBr_47642d, 1
  br i1 %cmpBr_47642d, label %block_.L_476456, label %block_476433

block_476433:                                     ; preds = %block_.L_476424
  %loadMem_476433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15112 = getelementptr inbounds %struct.GPR, %struct.GPR* %15111, i32 0, i32 33
  %15113 = getelementptr inbounds %struct.Reg, %struct.Reg* %15112, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %15113 to i64*
  %15114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15115 = getelementptr inbounds %struct.GPR, %struct.GPR* %15114, i32 0, i32 1
  %15116 = getelementptr inbounds %struct.Reg, %struct.Reg* %15115, i32 0, i32 0
  %RAX.i1328 = bitcast %union.anon* %15116 to i64*
  %15117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15118 = getelementptr inbounds %struct.GPR, %struct.GPR* %15117, i32 0, i32 15
  %15119 = getelementptr inbounds %struct.Reg, %struct.Reg* %15118, i32 0, i32 0
  %RBP.i1329 = bitcast %union.anon* %15119 to i64*
  %15120 = load i64, i64* %RBP.i1329
  %15121 = sub i64 %15120, 36
  %15122 = load i64, i64* %PC.i1327
  %15123 = add i64 %15122, 4
  store i64 %15123, i64* %PC.i1327
  %15124 = inttoptr i64 %15121 to i32*
  %15125 = load i32, i32* %15124
  %15126 = sext i32 %15125 to i64
  %15127 = mul i64 %15126, 20
  %15128 = trunc i64 %15127 to i32
  %15129 = and i64 %15127, 4294967295
  store i64 %15129, i64* %RAX.i1328, align 8
  %15130 = shl i64 %15127, 32
  %15131 = ashr exact i64 %15130, 32
  %15132 = icmp ne i64 %15131, %15127
  %15133 = zext i1 %15132 to i8
  %15134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15133, i8* %15134, align 1
  %15135 = and i32 %15128, 255
  %15136 = call i32 @llvm.ctpop.i32(i32 %15135)
  %15137 = trunc i32 %15136 to i8
  %15138 = and i8 %15137, 1
  %15139 = xor i8 %15138, 1
  %15140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15139, i8* %15140, align 1
  %15141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15141, align 1
  %15142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15142, align 1
  %15143 = lshr i32 %15128, 31
  %15144 = trunc i32 %15143 to i8
  %15145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15144, i8* %15145, align 1
  %15146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15133, i8* %15146, align 1
  store %struct.Memory* %loadMem_476433, %struct.Memory** %MEMORY
  %loadMem_476437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15148 = getelementptr inbounds %struct.GPR, %struct.GPR* %15147, i32 0, i32 33
  %15149 = getelementptr inbounds %struct.Reg, %struct.Reg* %15148, i32 0, i32 0
  %PC.i1325 = bitcast %union.anon* %15149 to i64*
  %15150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15151 = getelementptr inbounds %struct.GPR, %struct.GPR* %15150, i32 0, i32 1
  %15152 = getelementptr inbounds %struct.Reg, %struct.Reg* %15151, i32 0, i32 0
  %RAX.i1326 = bitcast %union.anon* %15152 to i64*
  %15153 = load i64, i64* %RAX.i1326
  %15154 = load i64, i64* %PC.i1325
  %15155 = add i64 %15154, 3
  store i64 %15155, i64* %PC.i1325
  %15156 = trunc i64 %15153 to i32
  %15157 = add i32 21, %15156
  %15158 = zext i32 %15157 to i64
  store i64 %15158, i64* %RAX.i1326, align 8
  %15159 = icmp ult i32 %15157, %15156
  %15160 = icmp ult i32 %15157, 21
  %15161 = or i1 %15159, %15160
  %15162 = zext i1 %15161 to i8
  %15163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15162, i8* %15163, align 1
  %15164 = and i32 %15157, 255
  %15165 = call i32 @llvm.ctpop.i32(i32 %15164)
  %15166 = trunc i32 %15165 to i8
  %15167 = and i8 %15166, 1
  %15168 = xor i8 %15167, 1
  %15169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15168, i8* %15169, align 1
  %15170 = xor i64 21, %15153
  %15171 = trunc i64 %15170 to i32
  %15172 = xor i32 %15171, %15157
  %15173 = lshr i32 %15172, 4
  %15174 = trunc i32 %15173 to i8
  %15175 = and i8 %15174, 1
  %15176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15175, i8* %15176, align 1
  %15177 = icmp eq i32 %15157, 0
  %15178 = zext i1 %15177 to i8
  %15179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15178, i8* %15179, align 1
  %15180 = lshr i32 %15157, 31
  %15181 = trunc i32 %15180 to i8
  %15182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15181, i8* %15182, align 1
  %15183 = lshr i32 %15156, 31
  %15184 = xor i32 %15180, %15183
  %15185 = add i32 %15184, %15180
  %15186 = icmp eq i32 %15185, 2
  %15187 = zext i1 %15186 to i8
  %15188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15187, i8* %15188, align 1
  store %struct.Memory* %loadMem_476437, %struct.Memory** %MEMORY
  %loadMem_47643a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15190 = getelementptr inbounds %struct.GPR, %struct.GPR* %15189, i32 0, i32 33
  %15191 = getelementptr inbounds %struct.Reg, %struct.Reg* %15190, i32 0, i32 0
  %PC.i1322 = bitcast %union.anon* %15191 to i64*
  %15192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15193 = getelementptr inbounds %struct.GPR, %struct.GPR* %15192, i32 0, i32 1
  %15194 = getelementptr inbounds %struct.Reg, %struct.Reg* %15193, i32 0, i32 0
  %RAX.i1323 = bitcast %union.anon* %15194 to i64*
  %15195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15196 = getelementptr inbounds %struct.GPR, %struct.GPR* %15195, i32 0, i32 15
  %15197 = getelementptr inbounds %struct.Reg, %struct.Reg* %15196, i32 0, i32 0
  %RBP.i1324 = bitcast %union.anon* %15197 to i64*
  %15198 = load i64, i64* %RAX.i1323
  %15199 = load i64, i64* %RBP.i1324
  %15200 = sub i64 %15199, 40
  %15201 = load i64, i64* %PC.i1322
  %15202 = add i64 %15201, 3
  store i64 %15202, i64* %PC.i1322
  %15203 = trunc i64 %15198 to i32
  %15204 = inttoptr i64 %15200 to i32*
  %15205 = load i32, i32* %15204
  %15206 = add i32 %15205, %15203
  %15207 = zext i32 %15206 to i64
  store i64 %15207, i64* %RAX.i1323, align 8
  %15208 = icmp ult i32 %15206, %15203
  %15209 = icmp ult i32 %15206, %15205
  %15210 = or i1 %15208, %15209
  %15211 = zext i1 %15210 to i8
  %15212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15211, i8* %15212, align 1
  %15213 = and i32 %15206, 255
  %15214 = call i32 @llvm.ctpop.i32(i32 %15213)
  %15215 = trunc i32 %15214 to i8
  %15216 = and i8 %15215, 1
  %15217 = xor i8 %15216, 1
  %15218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15217, i8* %15218, align 1
  %15219 = xor i32 %15205, %15203
  %15220 = xor i32 %15219, %15206
  %15221 = lshr i32 %15220, 4
  %15222 = trunc i32 %15221 to i8
  %15223 = and i8 %15222, 1
  %15224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15223, i8* %15224, align 1
  %15225 = icmp eq i32 %15206, 0
  %15226 = zext i1 %15225 to i8
  %15227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15226, i8* %15227, align 1
  %15228 = lshr i32 %15206, 31
  %15229 = trunc i32 %15228 to i8
  %15230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15229, i8* %15230, align 1
  %15231 = lshr i32 %15203, 31
  %15232 = lshr i32 %15205, 31
  %15233 = xor i32 %15228, %15231
  %15234 = xor i32 %15228, %15232
  %15235 = add i32 %15233, %15234
  %15236 = icmp eq i32 %15235, 2
  %15237 = zext i1 %15236 to i8
  %15238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15237, i8* %15238, align 1
  store %struct.Memory* %loadMem_47643a, %struct.Memory** %MEMORY
  %loadMem_47643d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15240 = getelementptr inbounds %struct.GPR, %struct.GPR* %15239, i32 0, i32 33
  %15241 = getelementptr inbounds %struct.Reg, %struct.Reg* %15240, i32 0, i32 0
  %PC.i1319 = bitcast %union.anon* %15241 to i64*
  %15242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15243 = getelementptr inbounds %struct.GPR, %struct.GPR* %15242, i32 0, i32 1
  %15244 = getelementptr inbounds %struct.Reg, %struct.Reg* %15243, i32 0, i32 0
  %EAX.i1320 = bitcast %union.anon* %15244 to i32*
  %15245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15246 = getelementptr inbounds %struct.GPR, %struct.GPR* %15245, i32 0, i32 5
  %15247 = getelementptr inbounds %struct.Reg, %struct.Reg* %15246, i32 0, i32 0
  %RCX.i1321 = bitcast %union.anon* %15247 to i64*
  %15248 = load i32, i32* %EAX.i1320
  %15249 = zext i32 %15248 to i64
  %15250 = load i64, i64* %PC.i1319
  %15251 = add i64 %15250, 3
  store i64 %15251, i64* %PC.i1319
  %15252 = shl i64 %15249, 32
  %15253 = ashr exact i64 %15252, 32
  store i64 %15253, i64* %RCX.i1321, align 8
  store %struct.Memory* %loadMem_47643d, %struct.Memory** %MEMORY
  %loadMem_476440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15255 = getelementptr inbounds %struct.GPR, %struct.GPR* %15254, i32 0, i32 33
  %15256 = getelementptr inbounds %struct.Reg, %struct.Reg* %15255, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %15256 to i64*
  %15257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15258 = getelementptr inbounds %struct.GPR, %struct.GPR* %15257, i32 0, i32 5
  %15259 = getelementptr inbounds %struct.Reg, %struct.Reg* %15258, i32 0, i32 0
  %RCX.i1317 = bitcast %union.anon* %15259 to i64*
  %15260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15261 = getelementptr inbounds %struct.GPR, %struct.GPR* %15260, i32 0, i32 15
  %15262 = getelementptr inbounds %struct.Reg, %struct.Reg* %15261, i32 0, i32 0
  %RBP.i1318 = bitcast %union.anon* %15262 to i64*
  %15263 = load i64, i64* %RBP.i1318
  %15264 = load i64, i64* %RCX.i1317
  %15265 = add i64 %15263, -1040
  %15266 = add i64 %15265, %15264
  %15267 = load i64, i64* %PC.i1316
  %15268 = add i64 %15267, 8
  store i64 %15268, i64* %PC.i1316
  %15269 = inttoptr i64 %15266 to i8*
  store i8 1, i8* %15269
  store %struct.Memory* %loadMem_476440, %struct.Memory** %MEMORY
  %loadMem_476448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15271 = getelementptr inbounds %struct.GPR, %struct.GPR* %15270, i32 0, i32 33
  %15272 = getelementptr inbounds %struct.Reg, %struct.Reg* %15271, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %15272 to i64*
  %15273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15274 = getelementptr inbounds %struct.GPR, %struct.GPR* %15273, i32 0, i32 1
  %15275 = getelementptr inbounds %struct.Reg, %struct.Reg* %15274, i32 0, i32 0
  %RAX.i1314 = bitcast %union.anon* %15275 to i64*
  %15276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15277 = getelementptr inbounds %struct.GPR, %struct.GPR* %15276, i32 0, i32 15
  %15278 = getelementptr inbounds %struct.Reg, %struct.Reg* %15277, i32 0, i32 0
  %RBP.i1315 = bitcast %union.anon* %15278 to i64*
  %15279 = load i64, i64* %RBP.i1315
  %15280 = sub i64 %15279, 40
  %15281 = load i64, i64* %PC.i1313
  %15282 = add i64 %15281, 3
  store i64 %15282, i64* %PC.i1313
  %15283 = inttoptr i64 %15280 to i32*
  %15284 = load i32, i32* %15283
  %15285 = zext i32 %15284 to i64
  store i64 %15285, i64* %RAX.i1314, align 8
  store %struct.Memory* %loadMem_476448, %struct.Memory** %MEMORY
  %loadMem_47644b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15287 = getelementptr inbounds %struct.GPR, %struct.GPR* %15286, i32 0, i32 33
  %15288 = getelementptr inbounds %struct.Reg, %struct.Reg* %15287, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %15288 to i64*
  %15289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15290 = getelementptr inbounds %struct.GPR, %struct.GPR* %15289, i32 0, i32 1
  %15291 = getelementptr inbounds %struct.Reg, %struct.Reg* %15290, i32 0, i32 0
  %RAX.i1312 = bitcast %union.anon* %15291 to i64*
  %15292 = load i64, i64* %RAX.i1312
  %15293 = load i64, i64* %PC.i1311
  %15294 = add i64 %15293, 3
  store i64 %15294, i64* %PC.i1311
  %15295 = trunc i64 %15292 to i32
  %15296 = add i32 1, %15295
  %15297 = zext i32 %15296 to i64
  store i64 %15297, i64* %RAX.i1312, align 8
  %15298 = icmp ult i32 %15296, %15295
  %15299 = icmp ult i32 %15296, 1
  %15300 = or i1 %15298, %15299
  %15301 = zext i1 %15300 to i8
  %15302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15301, i8* %15302, align 1
  %15303 = and i32 %15296, 255
  %15304 = call i32 @llvm.ctpop.i32(i32 %15303)
  %15305 = trunc i32 %15304 to i8
  %15306 = and i8 %15305, 1
  %15307 = xor i8 %15306, 1
  %15308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15307, i8* %15308, align 1
  %15309 = xor i64 1, %15292
  %15310 = trunc i64 %15309 to i32
  %15311 = xor i32 %15310, %15296
  %15312 = lshr i32 %15311, 4
  %15313 = trunc i32 %15312 to i8
  %15314 = and i8 %15313, 1
  %15315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15314, i8* %15315, align 1
  %15316 = icmp eq i32 %15296, 0
  %15317 = zext i1 %15316 to i8
  %15318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15317, i8* %15318, align 1
  %15319 = lshr i32 %15296, 31
  %15320 = trunc i32 %15319 to i8
  %15321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15320, i8* %15321, align 1
  %15322 = lshr i32 %15295, 31
  %15323 = xor i32 %15319, %15322
  %15324 = add i32 %15323, %15319
  %15325 = icmp eq i32 %15324, 2
  %15326 = zext i1 %15325 to i8
  %15327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15326, i8* %15327, align 1
  store %struct.Memory* %loadMem_47644b, %struct.Memory** %MEMORY
  %loadMem_47644e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15329 = getelementptr inbounds %struct.GPR, %struct.GPR* %15328, i32 0, i32 33
  %15330 = getelementptr inbounds %struct.Reg, %struct.Reg* %15329, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %15330 to i64*
  %15331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15332 = getelementptr inbounds %struct.GPR, %struct.GPR* %15331, i32 0, i32 1
  %15333 = getelementptr inbounds %struct.Reg, %struct.Reg* %15332, i32 0, i32 0
  %EAX.i1309 = bitcast %union.anon* %15333 to i32*
  %15334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15335 = getelementptr inbounds %struct.GPR, %struct.GPR* %15334, i32 0, i32 15
  %15336 = getelementptr inbounds %struct.Reg, %struct.Reg* %15335, i32 0, i32 0
  %RBP.i1310 = bitcast %union.anon* %15336 to i64*
  %15337 = load i64, i64* %RBP.i1310
  %15338 = sub i64 %15337, 40
  %15339 = load i32, i32* %EAX.i1309
  %15340 = zext i32 %15339 to i64
  %15341 = load i64, i64* %PC.i1308
  %15342 = add i64 %15341, 3
  store i64 %15342, i64* %PC.i1308
  %15343 = inttoptr i64 %15338 to i32*
  store i32 %15339, i32* %15343
  store %struct.Memory* %loadMem_47644e, %struct.Memory** %MEMORY
  %loadMem_476451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15345 = getelementptr inbounds %struct.GPR, %struct.GPR* %15344, i32 0, i32 33
  %15346 = getelementptr inbounds %struct.Reg, %struct.Reg* %15345, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %15346 to i64*
  %15347 = load i64, i64* %PC.i1307
  %15348 = add i64 %15347, -45
  %15349 = load i64, i64* %PC.i1307
  %15350 = add i64 %15349, 5
  store i64 %15350, i64* %PC.i1307
  %15351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15348, i64* %15351, align 8
  store %struct.Memory* %loadMem_476451, %struct.Memory** %MEMORY
  br label %block_.L_476424

block_.L_476456:                                  ; preds = %block_.L_476424
  %loadMem_476456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15353 = getelementptr inbounds %struct.GPR, %struct.GPR* %15352, i32 0, i32 33
  %15354 = getelementptr inbounds %struct.Reg, %struct.Reg* %15353, i32 0, i32 0
  %PC.i1306 = bitcast %union.anon* %15354 to i64*
  %15355 = load i64, i64* %PC.i1306
  %15356 = add i64 %15355, 5
  %15357 = load i64, i64* %PC.i1306
  %15358 = add i64 %15357, 5
  store i64 %15358, i64* %PC.i1306
  %15359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15356, i64* %15359, align 8
  store %struct.Memory* %loadMem_476456, %struct.Memory** %MEMORY
  br label %block_.L_47645b

block_.L_47645b:                                  ; preds = %block_.L_476456
  %loadMem_47645b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15361 = getelementptr inbounds %struct.GPR, %struct.GPR* %15360, i32 0, i32 33
  %15362 = getelementptr inbounds %struct.Reg, %struct.Reg* %15361, i32 0, i32 0
  %PC.i1303 = bitcast %union.anon* %15362 to i64*
  %15363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15364 = getelementptr inbounds %struct.GPR, %struct.GPR* %15363, i32 0, i32 1
  %15365 = getelementptr inbounds %struct.Reg, %struct.Reg* %15364, i32 0, i32 0
  %RAX.i1304 = bitcast %union.anon* %15365 to i64*
  %15366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15367 = getelementptr inbounds %struct.GPR, %struct.GPR* %15366, i32 0, i32 15
  %15368 = getelementptr inbounds %struct.Reg, %struct.Reg* %15367, i32 0, i32 0
  %RBP.i1305 = bitcast %union.anon* %15368 to i64*
  %15369 = load i64, i64* %RBP.i1305
  %15370 = sub i64 %15369, 36
  %15371 = load i64, i64* %PC.i1303
  %15372 = add i64 %15371, 3
  store i64 %15372, i64* %PC.i1303
  %15373 = inttoptr i64 %15370 to i32*
  %15374 = load i32, i32* %15373
  %15375 = zext i32 %15374 to i64
  store i64 %15375, i64* %RAX.i1304, align 8
  store %struct.Memory* %loadMem_47645b, %struct.Memory** %MEMORY
  %loadMem_47645e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15377 = getelementptr inbounds %struct.GPR, %struct.GPR* %15376, i32 0, i32 33
  %15378 = getelementptr inbounds %struct.Reg, %struct.Reg* %15377, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %15378 to i64*
  %15379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15380 = getelementptr inbounds %struct.GPR, %struct.GPR* %15379, i32 0, i32 1
  %15381 = getelementptr inbounds %struct.Reg, %struct.Reg* %15380, i32 0, i32 0
  %RAX.i1302 = bitcast %union.anon* %15381 to i64*
  %15382 = load i64, i64* %RAX.i1302
  %15383 = load i64, i64* %PC.i1301
  %15384 = add i64 %15383, 3
  store i64 %15384, i64* %PC.i1301
  %15385 = trunc i64 %15382 to i32
  %15386 = add i32 1, %15385
  %15387 = zext i32 %15386 to i64
  store i64 %15387, i64* %RAX.i1302, align 8
  %15388 = icmp ult i32 %15386, %15385
  %15389 = icmp ult i32 %15386, 1
  %15390 = or i1 %15388, %15389
  %15391 = zext i1 %15390 to i8
  %15392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15391, i8* %15392, align 1
  %15393 = and i32 %15386, 255
  %15394 = call i32 @llvm.ctpop.i32(i32 %15393)
  %15395 = trunc i32 %15394 to i8
  %15396 = and i8 %15395, 1
  %15397 = xor i8 %15396, 1
  %15398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15397, i8* %15398, align 1
  %15399 = xor i64 1, %15382
  %15400 = trunc i64 %15399 to i32
  %15401 = xor i32 %15400, %15386
  %15402 = lshr i32 %15401, 4
  %15403 = trunc i32 %15402 to i8
  %15404 = and i8 %15403, 1
  %15405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15404, i8* %15405, align 1
  %15406 = icmp eq i32 %15386, 0
  %15407 = zext i1 %15406 to i8
  %15408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15407, i8* %15408, align 1
  %15409 = lshr i32 %15386, 31
  %15410 = trunc i32 %15409 to i8
  %15411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15410, i8* %15411, align 1
  %15412 = lshr i32 %15385, 31
  %15413 = xor i32 %15409, %15412
  %15414 = add i32 %15413, %15409
  %15415 = icmp eq i32 %15414, 2
  %15416 = zext i1 %15415 to i8
  %15417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15416, i8* %15417, align 1
  store %struct.Memory* %loadMem_47645e, %struct.Memory** %MEMORY
  %loadMem_476461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15419 = getelementptr inbounds %struct.GPR, %struct.GPR* %15418, i32 0, i32 33
  %15420 = getelementptr inbounds %struct.Reg, %struct.Reg* %15419, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %15420 to i64*
  %15421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15422 = getelementptr inbounds %struct.GPR, %struct.GPR* %15421, i32 0, i32 1
  %15423 = getelementptr inbounds %struct.Reg, %struct.Reg* %15422, i32 0, i32 0
  %EAX.i1299 = bitcast %union.anon* %15423 to i32*
  %15424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15425 = getelementptr inbounds %struct.GPR, %struct.GPR* %15424, i32 0, i32 15
  %15426 = getelementptr inbounds %struct.Reg, %struct.Reg* %15425, i32 0, i32 0
  %RBP.i1300 = bitcast %union.anon* %15426 to i64*
  %15427 = load i64, i64* %RBP.i1300
  %15428 = sub i64 %15427, 36
  %15429 = load i32, i32* %EAX.i1299
  %15430 = zext i32 %15429 to i64
  %15431 = load i64, i64* %PC.i1298
  %15432 = add i64 %15431, 3
  store i64 %15432, i64* %PC.i1298
  %15433 = inttoptr i64 %15428 to i32*
  store i32 %15429, i32* %15433
  store %struct.Memory* %loadMem_476461, %struct.Memory** %MEMORY
  %loadMem_476464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15435 = getelementptr inbounds %struct.GPR, %struct.GPR* %15434, i32 0, i32 33
  %15436 = getelementptr inbounds %struct.Reg, %struct.Reg* %15435, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %15436 to i64*
  %15437 = load i64, i64* %PC.i1297
  %15438 = add i64 %15437, -761
  %15439 = load i64, i64* %PC.i1297
  %15440 = add i64 %15439, 5
  store i64 %15440, i64* %PC.i1297
  %15441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15438, i64* %15441, align 8
  store %struct.Memory* %loadMem_476464, %struct.Memory** %MEMORY
  br label %block_.L_47616b

block_.L_476469:                                  ; preds = %block_.L_47616b
  %loadMem_476469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15443 = getelementptr inbounds %struct.GPR, %struct.GPR* %15442, i32 0, i32 33
  %15444 = getelementptr inbounds %struct.Reg, %struct.Reg* %15443, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %15444 to i64*
  %15445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15446 = getelementptr inbounds %struct.GPR, %struct.GPR* %15445, i32 0, i32 15
  %15447 = getelementptr inbounds %struct.Reg, %struct.Reg* %15446, i32 0, i32 0
  %RBP.i1296 = bitcast %union.anon* %15447 to i64*
  %15448 = load i64, i64* %RBP.i1296
  %15449 = sub i64 %15448, 48
  %15450 = load i64, i64* %PC.i1295
  %15451 = add i64 %15450, 7
  store i64 %15451, i64* %PC.i1295
  %15452 = inttoptr i64 %15449 to i32*
  store i32 21, i32* %15452
  store %struct.Memory* %loadMem_476469, %struct.Memory** %MEMORY
  br label %block_.L_476470

block_.L_476470:                                  ; preds = %block_.L_47652f, %block_.L_476469
  %loadMem_476470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15454 = getelementptr inbounds %struct.GPR, %struct.GPR* %15453, i32 0, i32 33
  %15455 = getelementptr inbounds %struct.Reg, %struct.Reg* %15454, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %15455 to i64*
  %15456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15457 = getelementptr inbounds %struct.GPR, %struct.GPR* %15456, i32 0, i32 15
  %15458 = getelementptr inbounds %struct.Reg, %struct.Reg* %15457, i32 0, i32 0
  %RBP.i1294 = bitcast %union.anon* %15458 to i64*
  %15459 = load i64, i64* %RBP.i1294
  %15460 = sub i64 %15459, 48
  %15461 = load i64, i64* %PC.i1293
  %15462 = add i64 %15461, 7
  store i64 %15462, i64* %PC.i1293
  %15463 = inttoptr i64 %15460 to i32*
  %15464 = load i32, i32* %15463
  %15465 = sub i32 %15464, 400
  %15466 = icmp ult i32 %15464, 400
  %15467 = zext i1 %15466 to i8
  %15468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15467, i8* %15468, align 1
  %15469 = and i32 %15465, 255
  %15470 = call i32 @llvm.ctpop.i32(i32 %15469)
  %15471 = trunc i32 %15470 to i8
  %15472 = and i8 %15471, 1
  %15473 = xor i8 %15472, 1
  %15474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15473, i8* %15474, align 1
  %15475 = xor i32 %15464, 400
  %15476 = xor i32 %15475, %15465
  %15477 = lshr i32 %15476, 4
  %15478 = trunc i32 %15477 to i8
  %15479 = and i8 %15478, 1
  %15480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15479, i8* %15480, align 1
  %15481 = icmp eq i32 %15465, 0
  %15482 = zext i1 %15481 to i8
  %15483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15482, i8* %15483, align 1
  %15484 = lshr i32 %15465, 31
  %15485 = trunc i32 %15484 to i8
  %15486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15485, i8* %15486, align 1
  %15487 = lshr i32 %15464, 31
  %15488 = xor i32 %15484, %15487
  %15489 = add i32 %15488, %15487
  %15490 = icmp eq i32 %15489, 2
  %15491 = zext i1 %15490 to i8
  %15492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15491, i8* %15492, align 1
  store %struct.Memory* %loadMem_476470, %struct.Memory** %MEMORY
  %loadMem_476477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15494 = getelementptr inbounds %struct.GPR, %struct.GPR* %15493, i32 0, i32 33
  %15495 = getelementptr inbounds %struct.Reg, %struct.Reg* %15494, i32 0, i32 0
  %PC.i1292 = bitcast %union.anon* %15495 to i64*
  %15496 = load i64, i64* %PC.i1292
  %15497 = add i64 %15496, 198
  %15498 = load i64, i64* %PC.i1292
  %15499 = add i64 %15498, 6
  %15500 = load i64, i64* %PC.i1292
  %15501 = add i64 %15500, 6
  store i64 %15501, i64* %PC.i1292
  %15502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15503 = load i8, i8* %15502, align 1
  %15504 = icmp ne i8 %15503, 0
  %15505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15506 = load i8, i8* %15505, align 1
  %15507 = icmp ne i8 %15506, 0
  %15508 = xor i1 %15504, %15507
  %15509 = xor i1 %15508, true
  %15510 = zext i1 %15509 to i8
  store i8 %15510, i8* %BRANCH_TAKEN, align 1
  %15511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15512 = select i1 %15508, i64 %15499, i64 %15497
  store i64 %15512, i64* %15511, align 8
  store %struct.Memory* %loadMem_476477, %struct.Memory** %MEMORY
  %loadBr_476477 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476477 = icmp eq i8 %loadBr_476477, 1
  br i1 %cmpBr_476477, label %block_.L_47653d, label %block_47647d

block_47647d:                                     ; preds = %block_.L_476470
  %loadMem_47647d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15514 = getelementptr inbounds %struct.GPR, %struct.GPR* %15513, i32 0, i32 33
  %15515 = getelementptr inbounds %struct.Reg, %struct.Reg* %15514, i32 0, i32 0
  %PC.i1289 = bitcast %union.anon* %15515 to i64*
  %15516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15517 = getelementptr inbounds %struct.GPR, %struct.GPR* %15516, i32 0, i32 1
  %15518 = getelementptr inbounds %struct.Reg, %struct.Reg* %15517, i32 0, i32 0
  %RAX.i1290 = bitcast %union.anon* %15518 to i64*
  %15519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15520 = getelementptr inbounds %struct.GPR, %struct.GPR* %15519, i32 0, i32 15
  %15521 = getelementptr inbounds %struct.Reg, %struct.Reg* %15520, i32 0, i32 0
  %RBP.i1291 = bitcast %union.anon* %15521 to i64*
  %15522 = load i64, i64* %RBP.i1291
  %15523 = sub i64 %15522, 48
  %15524 = load i64, i64* %PC.i1289
  %15525 = add i64 %15524, 4
  store i64 %15525, i64* %PC.i1289
  %15526 = inttoptr i64 %15523 to i32*
  %15527 = load i32, i32* %15526
  %15528 = sext i32 %15527 to i64
  store i64 %15528, i64* %RAX.i1290, align 8
  store %struct.Memory* %loadMem_47647d, %struct.Memory** %MEMORY
  %loadMem_476481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15530 = getelementptr inbounds %struct.GPR, %struct.GPR* %15529, i32 0, i32 33
  %15531 = getelementptr inbounds %struct.Reg, %struct.Reg* %15530, i32 0, i32 0
  %PC.i1286 = bitcast %union.anon* %15531 to i64*
  %15532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15533 = getelementptr inbounds %struct.GPR, %struct.GPR* %15532, i32 0, i32 1
  %15534 = getelementptr inbounds %struct.Reg, %struct.Reg* %15533, i32 0, i32 0
  %RAX.i1287 = bitcast %union.anon* %15534 to i64*
  %15535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15536 = getelementptr inbounds %struct.GPR, %struct.GPR* %15535, i32 0, i32 5
  %15537 = getelementptr inbounds %struct.Reg, %struct.Reg* %15536, i32 0, i32 0
  %RCX.i1288 = bitcast %union.anon* %15537 to i64*
  %15538 = load i64, i64* %RAX.i1287
  %15539 = add i64 %15538, 12099168
  %15540 = load i64, i64* %PC.i1286
  %15541 = add i64 %15540, 8
  store i64 %15541, i64* %PC.i1286
  %15542 = inttoptr i64 %15539 to i8*
  %15543 = load i8, i8* %15542
  %15544 = zext i8 %15543 to i64
  store i64 %15544, i64* %RCX.i1288, align 8
  store %struct.Memory* %loadMem_476481, %struct.Memory** %MEMORY
  %loadMem_476489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15546 = getelementptr inbounds %struct.GPR, %struct.GPR* %15545, i32 0, i32 33
  %15547 = getelementptr inbounds %struct.Reg, %struct.Reg* %15546, i32 0, i32 0
  %PC.i1284 = bitcast %union.anon* %15547 to i64*
  %15548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15549 = getelementptr inbounds %struct.GPR, %struct.GPR* %15548, i32 0, i32 5
  %15550 = getelementptr inbounds %struct.Reg, %struct.Reg* %15549, i32 0, i32 0
  %ECX.i1285 = bitcast %union.anon* %15550 to i32*
  %15551 = load i32, i32* %ECX.i1285
  %15552 = zext i32 %15551 to i64
  %15553 = load i64, i64* %PC.i1284
  %15554 = add i64 %15553, 3
  store i64 %15554, i64* %PC.i1284
  %15555 = sub i32 %15551, 3
  %15556 = icmp ult i32 %15551, 3
  %15557 = zext i1 %15556 to i8
  %15558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15557, i8* %15558, align 1
  %15559 = and i32 %15555, 255
  %15560 = call i32 @llvm.ctpop.i32(i32 %15559)
  %15561 = trunc i32 %15560 to i8
  %15562 = and i8 %15561, 1
  %15563 = xor i8 %15562, 1
  %15564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15563, i8* %15564, align 1
  %15565 = xor i64 3, %15552
  %15566 = trunc i64 %15565 to i32
  %15567 = xor i32 %15566, %15555
  %15568 = lshr i32 %15567, 4
  %15569 = trunc i32 %15568 to i8
  %15570 = and i8 %15569, 1
  %15571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15570, i8* %15571, align 1
  %15572 = icmp eq i32 %15555, 0
  %15573 = zext i1 %15572 to i8
  %15574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15573, i8* %15574, align 1
  %15575 = lshr i32 %15555, 31
  %15576 = trunc i32 %15575 to i8
  %15577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15576, i8* %15577, align 1
  %15578 = lshr i32 %15551, 31
  %15579 = xor i32 %15575, %15578
  %15580 = add i32 %15579, %15578
  %15581 = icmp eq i32 %15580, 2
  %15582 = zext i1 %15581 to i8
  %15583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15582, i8* %15583, align 1
  store %struct.Memory* %loadMem_476489, %struct.Memory** %MEMORY
  %loadMem_47648c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15585 = getelementptr inbounds %struct.GPR, %struct.GPR* %15584, i32 0, i32 33
  %15586 = getelementptr inbounds %struct.Reg, %struct.Reg* %15585, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %15586 to i64*
  %15587 = load i64, i64* %PC.i1283
  %15588 = add i64 %15587, 158
  %15589 = load i64, i64* %PC.i1283
  %15590 = add i64 %15589, 6
  %15591 = load i64, i64* %PC.i1283
  %15592 = add i64 %15591, 6
  store i64 %15592, i64* %PC.i1283
  %15593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15594 = load i8, i8* %15593, align 1
  store i8 %15594, i8* %BRANCH_TAKEN, align 1
  %15595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15596 = icmp ne i8 %15594, 0
  %15597 = select i1 %15596, i64 %15588, i64 %15590
  store i64 %15597, i64* %15595, align 8
  store %struct.Memory* %loadMem_47648c, %struct.Memory** %MEMORY
  %loadBr_47648c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47648c = icmp eq i8 %loadBr_47648c, 1
  br i1 %cmpBr_47648c, label %block_.L_47652a, label %block_476492

block_476492:                                     ; preds = %block_47647d
  %loadMem_476492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15599 = getelementptr inbounds %struct.GPR, %struct.GPR* %15598, i32 0, i32 33
  %15600 = getelementptr inbounds %struct.Reg, %struct.Reg* %15599, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %15600 to i64*
  %15601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15602 = getelementptr inbounds %struct.GPR, %struct.GPR* %15601, i32 0, i32 1
  %15603 = getelementptr inbounds %struct.Reg, %struct.Reg* %15602, i32 0, i32 0
  %RAX.i1281 = bitcast %union.anon* %15603 to i64*
  %15604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15605 = getelementptr inbounds %struct.GPR, %struct.GPR* %15604, i32 0, i32 15
  %15606 = getelementptr inbounds %struct.Reg, %struct.Reg* %15605, i32 0, i32 0
  %RBP.i1282 = bitcast %union.anon* %15606 to i64*
  %15607 = load i64, i64* %RBP.i1282
  %15608 = sub i64 %15607, 48
  %15609 = load i64, i64* %PC.i1280
  %15610 = add i64 %15609, 4
  store i64 %15610, i64* %PC.i1280
  %15611 = inttoptr i64 %15608 to i32*
  %15612 = load i32, i32* %15611
  %15613 = sext i32 %15612 to i64
  store i64 %15613, i64* %RAX.i1281, align 8
  store %struct.Memory* %loadMem_476492, %struct.Memory** %MEMORY
  %loadMem_476496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15615 = getelementptr inbounds %struct.GPR, %struct.GPR* %15614, i32 0, i32 33
  %15616 = getelementptr inbounds %struct.Reg, %struct.Reg* %15615, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %15616 to i64*
  %15617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15618 = getelementptr inbounds %struct.GPR, %struct.GPR* %15617, i32 0, i32 1
  %15619 = getelementptr inbounds %struct.Reg, %struct.Reg* %15618, i32 0, i32 0
  %RAX.i1277 = bitcast %union.anon* %15619 to i64*
  %15620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15621 = getelementptr inbounds %struct.GPR, %struct.GPR* %15620, i32 0, i32 5
  %15622 = getelementptr inbounds %struct.Reg, %struct.Reg* %15621, i32 0, i32 0
  %RCX.i1278 = bitcast %union.anon* %15622 to i64*
  %15623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15624 = getelementptr inbounds %struct.GPR, %struct.GPR* %15623, i32 0, i32 15
  %15625 = getelementptr inbounds %struct.Reg, %struct.Reg* %15624, i32 0, i32 0
  %RBP.i1279 = bitcast %union.anon* %15625 to i64*
  %15626 = load i64, i64* %RBP.i1279
  %15627 = load i64, i64* %RAX.i1277
  %15628 = add i64 %15626, -1040
  %15629 = add i64 %15628, %15627
  %15630 = load i64, i64* %PC.i1276
  %15631 = add i64 %15630, 8
  store i64 %15631, i64* %PC.i1276
  %15632 = inttoptr i64 %15629 to i8*
  %15633 = load i8, i8* %15632
  %15634 = sext i8 %15633 to i64
  %15635 = and i64 %15634, 4294967295
  store i64 %15635, i64* %RCX.i1278, align 8
  store %struct.Memory* %loadMem_476496, %struct.Memory** %MEMORY
  %loadMem_47649e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15637 = getelementptr inbounds %struct.GPR, %struct.GPR* %15636, i32 0, i32 33
  %15638 = getelementptr inbounds %struct.Reg, %struct.Reg* %15637, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %15638 to i64*
  %15639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15640 = getelementptr inbounds %struct.GPR, %struct.GPR* %15639, i32 0, i32 5
  %15641 = getelementptr inbounds %struct.Reg, %struct.Reg* %15640, i32 0, i32 0
  %ECX.i1275 = bitcast %union.anon* %15641 to i32*
  %15642 = load i32, i32* %ECX.i1275
  %15643 = zext i32 %15642 to i64
  %15644 = load i64, i64* %PC.i1274
  %15645 = add i64 %15644, 3
  store i64 %15645, i64* %PC.i1274
  %15646 = sub i32 %15642, 1
  %15647 = icmp ult i32 %15642, 1
  %15648 = zext i1 %15647 to i8
  %15649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15648, i8* %15649, align 1
  %15650 = and i32 %15646, 255
  %15651 = call i32 @llvm.ctpop.i32(i32 %15650)
  %15652 = trunc i32 %15651 to i8
  %15653 = and i8 %15652, 1
  %15654 = xor i8 %15653, 1
  %15655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15654, i8* %15655, align 1
  %15656 = xor i64 1, %15643
  %15657 = trunc i64 %15656 to i32
  %15658 = xor i32 %15657, %15646
  %15659 = lshr i32 %15658, 4
  %15660 = trunc i32 %15659 to i8
  %15661 = and i8 %15660, 1
  %15662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15661, i8* %15662, align 1
  %15663 = icmp eq i32 %15646, 0
  %15664 = zext i1 %15663 to i8
  %15665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15664, i8* %15665, align 1
  %15666 = lshr i32 %15646, 31
  %15667 = trunc i32 %15666 to i8
  %15668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15667, i8* %15668, align 1
  %15669 = lshr i32 %15642, 31
  %15670 = xor i32 %15666, %15669
  %15671 = add i32 %15670, %15669
  %15672 = icmp eq i32 %15671, 2
  %15673 = zext i1 %15672 to i8
  %15674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15673, i8* %15674, align 1
  store %struct.Memory* %loadMem_47649e, %struct.Memory** %MEMORY
  %loadMem_4764a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15676 = getelementptr inbounds %struct.GPR, %struct.GPR* %15675, i32 0, i32 33
  %15677 = getelementptr inbounds %struct.Reg, %struct.Reg* %15676, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %15677 to i64*
  %15678 = load i64, i64* %PC.i1273
  %15679 = add i64 %15678, 137
  %15680 = load i64, i64* %PC.i1273
  %15681 = add i64 %15680, 6
  %15682 = load i64, i64* %PC.i1273
  %15683 = add i64 %15682, 6
  store i64 %15683, i64* %PC.i1273
  %15684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15685 = load i8, i8* %15684, align 1
  %15686 = icmp eq i8 %15685, 0
  %15687 = zext i1 %15686 to i8
  store i8 %15687, i8* %BRANCH_TAKEN, align 1
  %15688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15689 = select i1 %15686, i64 %15679, i64 %15681
  store i64 %15689, i64* %15688, align 8
  store %struct.Memory* %loadMem_4764a1, %struct.Memory** %MEMORY
  %loadBr_4764a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4764a1 = icmp eq i8 %loadBr_4764a1, 1
  br i1 %cmpBr_4764a1, label %block_.L_47652a, label %block_4764a7

block_4764a7:                                     ; preds = %block_476492
  %loadMem_4764a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15691 = getelementptr inbounds %struct.GPR, %struct.GPR* %15690, i32 0, i32 33
  %15692 = getelementptr inbounds %struct.Reg, %struct.Reg* %15691, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %15692 to i64*
  %15693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15694 = getelementptr inbounds %struct.GPR, %struct.GPR* %15693, i32 0, i32 15
  %15695 = getelementptr inbounds %struct.Reg, %struct.Reg* %15694, i32 0, i32 0
  %RBP.i1272 = bitcast %union.anon* %15695 to i64*
  %15696 = load i64, i64* %RBP.i1272
  %15697 = sub i64 %15696, 44
  %15698 = load i64, i64* %PC.i1271
  %15699 = add i64 %15698, 7
  store i64 %15699, i64* %PC.i1271
  %15700 = inttoptr i64 %15697 to i32*
  store i32 0, i32* %15700
  store %struct.Memory* %loadMem_4764a7, %struct.Memory** %MEMORY
  br label %block_.L_4764ae

block_.L_4764ae:                                  ; preds = %block_.L_476517, %block_4764a7
  %loadMem_4764ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %15701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15702 = getelementptr inbounds %struct.GPR, %struct.GPR* %15701, i32 0, i32 33
  %15703 = getelementptr inbounds %struct.Reg, %struct.Reg* %15702, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %15703 to i64*
  %15704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15705 = getelementptr inbounds %struct.GPR, %struct.GPR* %15704, i32 0, i32 15
  %15706 = getelementptr inbounds %struct.Reg, %struct.Reg* %15705, i32 0, i32 0
  %RBP.i1270 = bitcast %union.anon* %15706 to i64*
  %15707 = load i64, i64* %RBP.i1270
  %15708 = sub i64 %15707, 44
  %15709 = load i64, i64* %PC.i1269
  %15710 = add i64 %15709, 4
  store i64 %15710, i64* %PC.i1269
  %15711 = inttoptr i64 %15708 to i32*
  %15712 = load i32, i32* %15711
  %15713 = sub i32 %15712, 4
  %15714 = icmp ult i32 %15712, 4
  %15715 = zext i1 %15714 to i8
  %15716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15715, i8* %15716, align 1
  %15717 = and i32 %15713, 255
  %15718 = call i32 @llvm.ctpop.i32(i32 %15717)
  %15719 = trunc i32 %15718 to i8
  %15720 = and i8 %15719, 1
  %15721 = xor i8 %15720, 1
  %15722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15721, i8* %15722, align 1
  %15723 = xor i32 %15712, 4
  %15724 = xor i32 %15723, %15713
  %15725 = lshr i32 %15724, 4
  %15726 = trunc i32 %15725 to i8
  %15727 = and i8 %15726, 1
  %15728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15727, i8* %15728, align 1
  %15729 = icmp eq i32 %15713, 0
  %15730 = zext i1 %15729 to i8
  %15731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15730, i8* %15731, align 1
  %15732 = lshr i32 %15713, 31
  %15733 = trunc i32 %15732 to i8
  %15734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15733, i8* %15734, align 1
  %15735 = lshr i32 %15712, 31
  %15736 = xor i32 %15732, %15735
  %15737 = add i32 %15736, %15735
  %15738 = icmp eq i32 %15737, 2
  %15739 = zext i1 %15738 to i8
  %15740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15739, i8* %15740, align 1
  store %struct.Memory* %loadMem_4764ae, %struct.Memory** %MEMORY
  %loadMem_4764b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15742 = getelementptr inbounds %struct.GPR, %struct.GPR* %15741, i32 0, i32 33
  %15743 = getelementptr inbounds %struct.Reg, %struct.Reg* %15742, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %15743 to i64*
  %15744 = load i64, i64* %PC.i1268
  %15745 = add i64 %15744, 115
  %15746 = load i64, i64* %PC.i1268
  %15747 = add i64 %15746, 6
  %15748 = load i64, i64* %PC.i1268
  %15749 = add i64 %15748, 6
  store i64 %15749, i64* %PC.i1268
  %15750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15751 = load i8, i8* %15750, align 1
  %15752 = icmp ne i8 %15751, 0
  %15753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15754 = load i8, i8* %15753, align 1
  %15755 = icmp ne i8 %15754, 0
  %15756 = xor i1 %15752, %15755
  %15757 = xor i1 %15756, true
  %15758 = zext i1 %15757 to i8
  store i8 %15758, i8* %BRANCH_TAKEN, align 1
  %15759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15760 = select i1 %15756, i64 %15747, i64 %15745
  store i64 %15760, i64* %15759, align 8
  store %struct.Memory* %loadMem_4764b2, %struct.Memory** %MEMORY
  %loadBr_4764b2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4764b2 = icmp eq i8 %loadBr_4764b2, 1
  br i1 %cmpBr_4764b2, label %block_.L_476525, label %block_4764b8

block_4764b8:                                     ; preds = %block_.L_4764ae
  %loadMem_4764b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15762 = getelementptr inbounds %struct.GPR, %struct.GPR* %15761, i32 0, i32 33
  %15763 = getelementptr inbounds %struct.Reg, %struct.Reg* %15762, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %15763 to i64*
  %15764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15765 = getelementptr inbounds %struct.GPR, %struct.GPR* %15764, i32 0, i32 1
  %15766 = getelementptr inbounds %struct.Reg, %struct.Reg* %15765, i32 0, i32 0
  %RAX.i1266 = bitcast %union.anon* %15766 to i64*
  %15767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15768 = getelementptr inbounds %struct.GPR, %struct.GPR* %15767, i32 0, i32 15
  %15769 = getelementptr inbounds %struct.Reg, %struct.Reg* %15768, i32 0, i32 0
  %RBP.i1267 = bitcast %union.anon* %15769 to i64*
  %15770 = load i64, i64* %RBP.i1267
  %15771 = sub i64 %15770, 48
  %15772 = load i64, i64* %PC.i1265
  %15773 = add i64 %15772, 3
  store i64 %15773, i64* %PC.i1265
  %15774 = inttoptr i64 %15771 to i32*
  %15775 = load i32, i32* %15774
  %15776 = zext i32 %15775 to i64
  store i64 %15776, i64* %RAX.i1266, align 8
  store %struct.Memory* %loadMem_4764b8, %struct.Memory** %MEMORY
  %loadMem_4764bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %15777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15778 = getelementptr inbounds %struct.GPR, %struct.GPR* %15777, i32 0, i32 33
  %15779 = getelementptr inbounds %struct.Reg, %struct.Reg* %15778, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %15779 to i64*
  %15780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15781 = getelementptr inbounds %struct.GPR, %struct.GPR* %15780, i32 0, i32 5
  %15782 = getelementptr inbounds %struct.Reg, %struct.Reg* %15781, i32 0, i32 0
  %RCX.i1263 = bitcast %union.anon* %15782 to i64*
  %15783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15784 = getelementptr inbounds %struct.GPR, %struct.GPR* %15783, i32 0, i32 15
  %15785 = getelementptr inbounds %struct.Reg, %struct.Reg* %15784, i32 0, i32 0
  %RBP.i1264 = bitcast %union.anon* %15785 to i64*
  %15786 = load i64, i64* %RBP.i1264
  %15787 = sub i64 %15786, 44
  %15788 = load i64, i64* %PC.i1262
  %15789 = add i64 %15788, 4
  store i64 %15789, i64* %PC.i1262
  %15790 = inttoptr i64 %15787 to i32*
  %15791 = load i32, i32* %15790
  %15792 = sext i32 %15791 to i64
  store i64 %15792, i64* %RCX.i1263, align 8
  store %struct.Memory* %loadMem_4764bb, %struct.Memory** %MEMORY
  %loadMem_4764bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %15793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15794 = getelementptr inbounds %struct.GPR, %struct.GPR* %15793, i32 0, i32 33
  %15795 = getelementptr inbounds %struct.Reg, %struct.Reg* %15794, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %15795 to i64*
  %15796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15797 = getelementptr inbounds %struct.GPR, %struct.GPR* %15796, i32 0, i32 1
  %15798 = getelementptr inbounds %struct.Reg, %struct.Reg* %15797, i32 0, i32 0
  %RAX.i1260 = bitcast %union.anon* %15798 to i64*
  %15799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15800 = getelementptr inbounds %struct.GPR, %struct.GPR* %15799, i32 0, i32 5
  %15801 = getelementptr inbounds %struct.Reg, %struct.Reg* %15800, i32 0, i32 0
  %RCX.i1261 = bitcast %union.anon* %15801 to i64*
  %15802 = load i64, i64* %RAX.i1260
  %15803 = load i64, i64* %RCX.i1261
  %15804 = mul i64 %15803, 4
  %15805 = add i64 %15804, 8053168
  %15806 = load i64, i64* %PC.i1259
  %15807 = add i64 %15806, 7
  store i64 %15807, i64* %PC.i1259
  %15808 = trunc i64 %15802 to i32
  %15809 = inttoptr i64 %15805 to i32*
  %15810 = load i32, i32* %15809
  %15811 = add i32 %15810, %15808
  %15812 = zext i32 %15811 to i64
  store i64 %15812, i64* %RAX.i1260, align 8
  %15813 = icmp ult i32 %15811, %15808
  %15814 = icmp ult i32 %15811, %15810
  %15815 = or i1 %15813, %15814
  %15816 = zext i1 %15815 to i8
  %15817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15816, i8* %15817, align 1
  %15818 = and i32 %15811, 255
  %15819 = call i32 @llvm.ctpop.i32(i32 %15818)
  %15820 = trunc i32 %15819 to i8
  %15821 = and i8 %15820, 1
  %15822 = xor i8 %15821, 1
  %15823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15822, i8* %15823, align 1
  %15824 = xor i32 %15810, %15808
  %15825 = xor i32 %15824, %15811
  %15826 = lshr i32 %15825, 4
  %15827 = trunc i32 %15826 to i8
  %15828 = and i8 %15827, 1
  %15829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15828, i8* %15829, align 1
  %15830 = icmp eq i32 %15811, 0
  %15831 = zext i1 %15830 to i8
  %15832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15831, i8* %15832, align 1
  %15833 = lshr i32 %15811, 31
  %15834 = trunc i32 %15833 to i8
  %15835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15834, i8* %15835, align 1
  %15836 = lshr i32 %15808, 31
  %15837 = lshr i32 %15810, 31
  %15838 = xor i32 %15833, %15836
  %15839 = xor i32 %15833, %15837
  %15840 = add i32 %15838, %15839
  %15841 = icmp eq i32 %15840, 2
  %15842 = zext i1 %15841 to i8
  %15843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15842, i8* %15843, align 1
  store %struct.Memory* %loadMem_4764bf, %struct.Memory** %MEMORY
  %loadMem_4764c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15845 = getelementptr inbounds %struct.GPR, %struct.GPR* %15844, i32 0, i32 33
  %15846 = getelementptr inbounds %struct.Reg, %struct.Reg* %15845, i32 0, i32 0
  %PC.i1256 = bitcast %union.anon* %15846 to i64*
  %15847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15848 = getelementptr inbounds %struct.GPR, %struct.GPR* %15847, i32 0, i32 1
  %15849 = getelementptr inbounds %struct.Reg, %struct.Reg* %15848, i32 0, i32 0
  %EAX.i1257 = bitcast %union.anon* %15849 to i32*
  %15850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15851 = getelementptr inbounds %struct.GPR, %struct.GPR* %15850, i32 0, i32 5
  %15852 = getelementptr inbounds %struct.Reg, %struct.Reg* %15851, i32 0, i32 0
  %RCX.i1258 = bitcast %union.anon* %15852 to i64*
  %15853 = load i32, i32* %EAX.i1257
  %15854 = zext i32 %15853 to i64
  %15855 = load i64, i64* %PC.i1256
  %15856 = add i64 %15855, 3
  store i64 %15856, i64* %PC.i1256
  %15857 = shl i64 %15854, 32
  %15858 = ashr exact i64 %15857, 32
  store i64 %15858, i64* %RCX.i1258, align 8
  store %struct.Memory* %loadMem_4764c6, %struct.Memory** %MEMORY
  %loadMem_4764c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15860 = getelementptr inbounds %struct.GPR, %struct.GPR* %15859, i32 0, i32 33
  %15861 = getelementptr inbounds %struct.Reg, %struct.Reg* %15860, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %15861 to i64*
  %15862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15863 = getelementptr inbounds %struct.GPR, %struct.GPR* %15862, i32 0, i32 1
  %15864 = getelementptr inbounds %struct.Reg, %struct.Reg* %15863, i32 0, i32 0
  %RAX.i1254 = bitcast %union.anon* %15864 to i64*
  %15865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15866 = getelementptr inbounds %struct.GPR, %struct.GPR* %15865, i32 0, i32 5
  %15867 = getelementptr inbounds %struct.Reg, %struct.Reg* %15866, i32 0, i32 0
  %RCX.i1255 = bitcast %union.anon* %15867 to i64*
  %15868 = load i64, i64* %RCX.i1255
  %15869 = add i64 %15868, 12099168
  %15870 = load i64, i64* %PC.i1253
  %15871 = add i64 %15870, 8
  store i64 %15871, i64* %PC.i1253
  %15872 = inttoptr i64 %15869 to i8*
  %15873 = load i8, i8* %15872
  %15874 = zext i8 %15873 to i64
  store i64 %15874, i64* %RAX.i1254, align 8
  store %struct.Memory* %loadMem_4764c9, %struct.Memory** %MEMORY
  %loadMem_4764d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15876 = getelementptr inbounds %struct.GPR, %struct.GPR* %15875, i32 0, i32 33
  %15877 = getelementptr inbounds %struct.Reg, %struct.Reg* %15876, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %15877 to i64*
  %15878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15879 = getelementptr inbounds %struct.GPR, %struct.GPR* %15878, i32 0, i32 1
  %15880 = getelementptr inbounds %struct.Reg, %struct.Reg* %15879, i32 0, i32 0
  %EAX.i1252 = bitcast %union.anon* %15880 to i32*
  %15881 = load i32, i32* %EAX.i1252
  %15882 = zext i32 %15881 to i64
  %15883 = load i64, i64* %PC.i1251
  %15884 = add i64 %15883, 3
  store i64 %15884, i64* %PC.i1251
  %15885 = sub i32 %15881, 3
  %15886 = icmp ult i32 %15881, 3
  %15887 = zext i1 %15886 to i8
  %15888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15887, i8* %15888, align 1
  %15889 = and i32 %15885, 255
  %15890 = call i32 @llvm.ctpop.i32(i32 %15889)
  %15891 = trunc i32 %15890 to i8
  %15892 = and i8 %15891, 1
  %15893 = xor i8 %15892, 1
  %15894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15893, i8* %15894, align 1
  %15895 = xor i64 3, %15882
  %15896 = trunc i64 %15895 to i32
  %15897 = xor i32 %15896, %15885
  %15898 = lshr i32 %15897, 4
  %15899 = trunc i32 %15898 to i8
  %15900 = and i8 %15899, 1
  %15901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15900, i8* %15901, align 1
  %15902 = icmp eq i32 %15885, 0
  %15903 = zext i1 %15902 to i8
  %15904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15903, i8* %15904, align 1
  %15905 = lshr i32 %15885, 31
  %15906 = trunc i32 %15905 to i8
  %15907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15906, i8* %15907, align 1
  %15908 = lshr i32 %15881, 31
  %15909 = xor i32 %15905, %15908
  %15910 = add i32 %15909, %15908
  %15911 = icmp eq i32 %15910, 2
  %15912 = zext i1 %15911 to i8
  %15913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15912, i8* %15913, align 1
  store %struct.Memory* %loadMem_4764d1, %struct.Memory** %MEMORY
  %loadMem_4764d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15915 = getelementptr inbounds %struct.GPR, %struct.GPR* %15914, i32 0, i32 33
  %15916 = getelementptr inbounds %struct.Reg, %struct.Reg* %15915, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %15916 to i64*
  %15917 = load i64, i64* %PC.i1250
  %15918 = add i64 %15917, 62
  %15919 = load i64, i64* %PC.i1250
  %15920 = add i64 %15919, 6
  %15921 = load i64, i64* %PC.i1250
  %15922 = add i64 %15921, 6
  store i64 %15922, i64* %PC.i1250
  %15923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15924 = load i8, i8* %15923, align 1
  store i8 %15924, i8* %BRANCH_TAKEN, align 1
  %15925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15926 = icmp ne i8 %15924, 0
  %15927 = select i1 %15926, i64 %15918, i64 %15920
  store i64 %15927, i64* %15925, align 8
  store %struct.Memory* %loadMem_4764d4, %struct.Memory** %MEMORY
  %loadBr_4764d4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4764d4 = icmp eq i8 %loadBr_4764d4, 1
  br i1 %cmpBr_4764d4, label %block_.L_476512, label %block_4764da

block_4764da:                                     ; preds = %block_4764b8
  %loadMem_4764da = load %struct.Memory*, %struct.Memory** %MEMORY
  %15928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15929 = getelementptr inbounds %struct.GPR, %struct.GPR* %15928, i32 0, i32 33
  %15930 = getelementptr inbounds %struct.Reg, %struct.Reg* %15929, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %15930 to i64*
  %15931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15932 = getelementptr inbounds %struct.GPR, %struct.GPR* %15931, i32 0, i32 1
  %15933 = getelementptr inbounds %struct.Reg, %struct.Reg* %15932, i32 0, i32 0
  %RAX.i1248 = bitcast %union.anon* %15933 to i64*
  %15934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15935 = getelementptr inbounds %struct.GPR, %struct.GPR* %15934, i32 0, i32 15
  %15936 = getelementptr inbounds %struct.Reg, %struct.Reg* %15935, i32 0, i32 0
  %RBP.i1249 = bitcast %union.anon* %15936 to i64*
  %15937 = load i64, i64* %RBP.i1249
  %15938 = sub i64 %15937, 48
  %15939 = load i64, i64* %PC.i1247
  %15940 = add i64 %15939, 3
  store i64 %15940, i64* %PC.i1247
  %15941 = inttoptr i64 %15938 to i32*
  %15942 = load i32, i32* %15941
  %15943 = zext i32 %15942 to i64
  store i64 %15943, i64* %RAX.i1248, align 8
  store %struct.Memory* %loadMem_4764da, %struct.Memory** %MEMORY
  %loadMem_4764dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %15944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15945 = getelementptr inbounds %struct.GPR, %struct.GPR* %15944, i32 0, i32 33
  %15946 = getelementptr inbounds %struct.Reg, %struct.Reg* %15945, i32 0, i32 0
  %PC.i1244 = bitcast %union.anon* %15946 to i64*
  %15947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15948 = getelementptr inbounds %struct.GPR, %struct.GPR* %15947, i32 0, i32 5
  %15949 = getelementptr inbounds %struct.Reg, %struct.Reg* %15948, i32 0, i32 0
  %RCX.i1245 = bitcast %union.anon* %15949 to i64*
  %15950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15951 = getelementptr inbounds %struct.GPR, %struct.GPR* %15950, i32 0, i32 15
  %15952 = getelementptr inbounds %struct.Reg, %struct.Reg* %15951, i32 0, i32 0
  %RBP.i1246 = bitcast %union.anon* %15952 to i64*
  %15953 = load i64, i64* %RBP.i1246
  %15954 = sub i64 %15953, 44
  %15955 = load i64, i64* %PC.i1244
  %15956 = add i64 %15955, 4
  store i64 %15956, i64* %PC.i1244
  %15957 = inttoptr i64 %15954 to i32*
  %15958 = load i32, i32* %15957
  %15959 = sext i32 %15958 to i64
  store i64 %15959, i64* %RCX.i1245, align 8
  store %struct.Memory* %loadMem_4764dd, %struct.Memory** %MEMORY
  %loadMem_4764e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15961 = getelementptr inbounds %struct.GPR, %struct.GPR* %15960, i32 0, i32 33
  %15962 = getelementptr inbounds %struct.Reg, %struct.Reg* %15961, i32 0, i32 0
  %PC.i1241 = bitcast %union.anon* %15962 to i64*
  %15963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15964 = getelementptr inbounds %struct.GPR, %struct.GPR* %15963, i32 0, i32 1
  %15965 = getelementptr inbounds %struct.Reg, %struct.Reg* %15964, i32 0, i32 0
  %RAX.i1242 = bitcast %union.anon* %15965 to i64*
  %15966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15967 = getelementptr inbounds %struct.GPR, %struct.GPR* %15966, i32 0, i32 5
  %15968 = getelementptr inbounds %struct.Reg, %struct.Reg* %15967, i32 0, i32 0
  %RCX.i1243 = bitcast %union.anon* %15968 to i64*
  %15969 = load i64, i64* %RAX.i1242
  %15970 = load i64, i64* %RCX.i1243
  %15971 = mul i64 %15970, 4
  %15972 = add i64 %15971, 8053168
  %15973 = load i64, i64* %PC.i1241
  %15974 = add i64 %15973, 7
  store i64 %15974, i64* %PC.i1241
  %15975 = trunc i64 %15969 to i32
  %15976 = inttoptr i64 %15972 to i32*
  %15977 = load i32, i32* %15976
  %15978 = add i32 %15977, %15975
  %15979 = zext i32 %15978 to i64
  store i64 %15979, i64* %RAX.i1242, align 8
  %15980 = icmp ult i32 %15978, %15975
  %15981 = icmp ult i32 %15978, %15977
  %15982 = or i1 %15980, %15981
  %15983 = zext i1 %15982 to i8
  %15984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15983, i8* %15984, align 1
  %15985 = and i32 %15978, 255
  %15986 = call i32 @llvm.ctpop.i32(i32 %15985)
  %15987 = trunc i32 %15986 to i8
  %15988 = and i8 %15987, 1
  %15989 = xor i8 %15988, 1
  %15990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15989, i8* %15990, align 1
  %15991 = xor i32 %15977, %15975
  %15992 = xor i32 %15991, %15978
  %15993 = lshr i32 %15992, 4
  %15994 = trunc i32 %15993 to i8
  %15995 = and i8 %15994, 1
  %15996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15995, i8* %15996, align 1
  %15997 = icmp eq i32 %15978, 0
  %15998 = zext i1 %15997 to i8
  %15999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15998, i8* %15999, align 1
  %16000 = lshr i32 %15978, 31
  %16001 = trunc i32 %16000 to i8
  %16002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16001, i8* %16002, align 1
  %16003 = lshr i32 %15975, 31
  %16004 = lshr i32 %15977, 31
  %16005 = xor i32 %16000, %16003
  %16006 = xor i32 %16000, %16004
  %16007 = add i32 %16005, %16006
  %16008 = icmp eq i32 %16007, 2
  %16009 = zext i1 %16008 to i8
  %16010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16009, i8* %16010, align 1
  store %struct.Memory* %loadMem_4764e1, %struct.Memory** %MEMORY
  %loadMem_4764e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16012 = getelementptr inbounds %struct.GPR, %struct.GPR* %16011, i32 0, i32 33
  %16013 = getelementptr inbounds %struct.Reg, %struct.Reg* %16012, i32 0, i32 0
  %PC.i1238 = bitcast %union.anon* %16013 to i64*
  %16014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16015 = getelementptr inbounds %struct.GPR, %struct.GPR* %16014, i32 0, i32 1
  %16016 = getelementptr inbounds %struct.Reg, %struct.Reg* %16015, i32 0, i32 0
  %EAX.i1239 = bitcast %union.anon* %16016 to i32*
  %16017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16018 = getelementptr inbounds %struct.GPR, %struct.GPR* %16017, i32 0, i32 5
  %16019 = getelementptr inbounds %struct.Reg, %struct.Reg* %16018, i32 0, i32 0
  %RCX.i1240 = bitcast %union.anon* %16019 to i64*
  %16020 = load i32, i32* %EAX.i1239
  %16021 = zext i32 %16020 to i64
  %16022 = load i64, i64* %PC.i1238
  %16023 = add i64 %16022, 3
  store i64 %16023, i64* %PC.i1238
  %16024 = shl i64 %16021, 32
  %16025 = ashr exact i64 %16024, 32
  store i64 %16025, i64* %RCX.i1240, align 8
  store %struct.Memory* %loadMem_4764e8, %struct.Memory** %MEMORY
  %loadMem_4764eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16027 = getelementptr inbounds %struct.GPR, %struct.GPR* %16026, i32 0, i32 33
  %16028 = getelementptr inbounds %struct.Reg, %struct.Reg* %16027, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %16028 to i64*
  %16029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16030 = getelementptr inbounds %struct.GPR, %struct.GPR* %16029, i32 0, i32 5
  %16031 = getelementptr inbounds %struct.Reg, %struct.Reg* %16030, i32 0, i32 0
  %RCX.i1236 = bitcast %union.anon* %16031 to i64*
  %16032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16033 = getelementptr inbounds %struct.GPR, %struct.GPR* %16032, i32 0, i32 15
  %16034 = getelementptr inbounds %struct.Reg, %struct.Reg* %16033, i32 0, i32 0
  %RBP.i1237 = bitcast %union.anon* %16034 to i64*
  %16035 = load i64, i64* %RBP.i1237
  %16036 = load i64, i64* %RCX.i1236
  %16037 = add i64 %16035, -1040
  %16038 = add i64 %16037, %16036
  %16039 = load i64, i64* %PC.i1235
  %16040 = add i64 %16039, 8
  store i64 %16040, i64* %PC.i1235
  %16041 = inttoptr i64 %16038 to i8*
  %16042 = load i8, i8* %16041
  %16043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16043, align 1
  %16044 = zext i8 %16042 to i32
  %16045 = call i32 @llvm.ctpop.i32(i32 %16044)
  %16046 = trunc i32 %16045 to i8
  %16047 = and i8 %16046, 1
  %16048 = xor i8 %16047, 1
  %16049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16048, i8* %16049, align 1
  %16050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16050, align 1
  %16051 = icmp eq i8 %16042, 0
  %16052 = zext i1 %16051 to i8
  %16053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16052, i8* %16053, align 1
  %16054 = lshr i8 %16042, 7
  %16055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16054, i8* %16055, align 1
  %16056 = lshr i8 %16042, 7
  %16057 = xor i8 %16054, %16056
  %16058 = add i8 %16057, %16056
  %16059 = icmp eq i8 %16058, 2
  %16060 = zext i1 %16059 to i8
  %16061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16060, i8* %16061, align 1
  store %struct.Memory* %loadMem_4764eb, %struct.Memory** %MEMORY
  %loadMem_4764f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16063 = getelementptr inbounds %struct.GPR, %struct.GPR* %16062, i32 0, i32 33
  %16064 = getelementptr inbounds %struct.Reg, %struct.Reg* %16063, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %16064 to i64*
  %16065 = load i64, i64* %PC.i1234
  %16066 = add i64 %16065, 31
  %16067 = load i64, i64* %PC.i1234
  %16068 = add i64 %16067, 6
  %16069 = load i64, i64* %PC.i1234
  %16070 = add i64 %16069, 6
  store i64 %16070, i64* %PC.i1234
  %16071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16072 = load i8, i8* %16071, align 1
  %16073 = icmp eq i8 %16072, 0
  %16074 = zext i1 %16073 to i8
  store i8 %16074, i8* %BRANCH_TAKEN, align 1
  %16075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16076 = select i1 %16073, i64 %16066, i64 %16068
  store i64 %16076, i64* %16075, align 8
  store %struct.Memory* %loadMem_4764f3, %struct.Memory** %MEMORY
  %loadBr_4764f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4764f3 = icmp eq i8 %loadBr_4764f3, 1
  br i1 %cmpBr_4764f3, label %block_.L_476512, label %block_4764f9

block_4764f9:                                     ; preds = %block_4764da
  %loadMem_4764f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16078 = getelementptr inbounds %struct.GPR, %struct.GPR* %16077, i32 0, i32 33
  %16079 = getelementptr inbounds %struct.Reg, %struct.Reg* %16078, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %16079 to i64*
  %16080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16081 = getelementptr inbounds %struct.GPR, %struct.GPR* %16080, i32 0, i32 1
  %16082 = getelementptr inbounds %struct.Reg, %struct.Reg* %16081, i32 0, i32 0
  %RAX.i1232 = bitcast %union.anon* %16082 to i64*
  %16083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16084 = getelementptr inbounds %struct.GPR, %struct.GPR* %16083, i32 0, i32 15
  %16085 = getelementptr inbounds %struct.Reg, %struct.Reg* %16084, i32 0, i32 0
  %RBP.i1233 = bitcast %union.anon* %16085 to i64*
  %16086 = load i64, i64* %RBP.i1233
  %16087 = sub i64 %16086, 48
  %16088 = load i64, i64* %PC.i1231
  %16089 = add i64 %16088, 3
  store i64 %16089, i64* %PC.i1231
  %16090 = inttoptr i64 %16087 to i32*
  %16091 = load i32, i32* %16090
  %16092 = zext i32 %16091 to i64
  store i64 %16092, i64* %RAX.i1232, align 8
  store %struct.Memory* %loadMem_4764f9, %struct.Memory** %MEMORY
  %loadMem_4764fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %16093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16094 = getelementptr inbounds %struct.GPR, %struct.GPR* %16093, i32 0, i32 33
  %16095 = getelementptr inbounds %struct.Reg, %struct.Reg* %16094, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %16095 to i64*
  %16096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16097 = getelementptr inbounds %struct.GPR, %struct.GPR* %16096, i32 0, i32 5
  %16098 = getelementptr inbounds %struct.Reg, %struct.Reg* %16097, i32 0, i32 0
  %RCX.i1229 = bitcast %union.anon* %16098 to i64*
  %16099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16100 = getelementptr inbounds %struct.GPR, %struct.GPR* %16099, i32 0, i32 15
  %16101 = getelementptr inbounds %struct.Reg, %struct.Reg* %16100, i32 0, i32 0
  %RBP.i1230 = bitcast %union.anon* %16101 to i64*
  %16102 = load i64, i64* %RBP.i1230
  %16103 = sub i64 %16102, 44
  %16104 = load i64, i64* %PC.i1228
  %16105 = add i64 %16104, 4
  store i64 %16105, i64* %PC.i1228
  %16106 = inttoptr i64 %16103 to i32*
  %16107 = load i32, i32* %16106
  %16108 = sext i32 %16107 to i64
  store i64 %16108, i64* %RCX.i1229, align 8
  store %struct.Memory* %loadMem_4764fc, %struct.Memory** %MEMORY
  %loadMem_476500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16110 = getelementptr inbounds %struct.GPR, %struct.GPR* %16109, i32 0, i32 33
  %16111 = getelementptr inbounds %struct.Reg, %struct.Reg* %16110, i32 0, i32 0
  %PC.i1225 = bitcast %union.anon* %16111 to i64*
  %16112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16113 = getelementptr inbounds %struct.GPR, %struct.GPR* %16112, i32 0, i32 1
  %16114 = getelementptr inbounds %struct.Reg, %struct.Reg* %16113, i32 0, i32 0
  %RAX.i1226 = bitcast %union.anon* %16114 to i64*
  %16115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16116 = getelementptr inbounds %struct.GPR, %struct.GPR* %16115, i32 0, i32 5
  %16117 = getelementptr inbounds %struct.Reg, %struct.Reg* %16116, i32 0, i32 0
  %RCX.i1227 = bitcast %union.anon* %16117 to i64*
  %16118 = load i64, i64* %RAX.i1226
  %16119 = load i64, i64* %RCX.i1227
  %16120 = mul i64 %16119, 4
  %16121 = add i64 %16120, 8053168
  %16122 = load i64, i64* %PC.i1225
  %16123 = add i64 %16122, 7
  store i64 %16123, i64* %PC.i1225
  %16124 = trunc i64 %16118 to i32
  %16125 = inttoptr i64 %16121 to i32*
  %16126 = load i32, i32* %16125
  %16127 = add i32 %16126, %16124
  %16128 = zext i32 %16127 to i64
  store i64 %16128, i64* %RAX.i1226, align 8
  %16129 = icmp ult i32 %16127, %16124
  %16130 = icmp ult i32 %16127, %16126
  %16131 = or i1 %16129, %16130
  %16132 = zext i1 %16131 to i8
  %16133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16132, i8* %16133, align 1
  %16134 = and i32 %16127, 255
  %16135 = call i32 @llvm.ctpop.i32(i32 %16134)
  %16136 = trunc i32 %16135 to i8
  %16137 = and i8 %16136, 1
  %16138 = xor i8 %16137, 1
  %16139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16138, i8* %16139, align 1
  %16140 = xor i32 %16126, %16124
  %16141 = xor i32 %16140, %16127
  %16142 = lshr i32 %16141, 4
  %16143 = trunc i32 %16142 to i8
  %16144 = and i8 %16143, 1
  %16145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16144, i8* %16145, align 1
  %16146 = icmp eq i32 %16127, 0
  %16147 = zext i1 %16146 to i8
  %16148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16147, i8* %16148, align 1
  %16149 = lshr i32 %16127, 31
  %16150 = trunc i32 %16149 to i8
  %16151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16150, i8* %16151, align 1
  %16152 = lshr i32 %16124, 31
  %16153 = lshr i32 %16126, 31
  %16154 = xor i32 %16149, %16152
  %16155 = xor i32 %16149, %16153
  %16156 = add i32 %16154, %16155
  %16157 = icmp eq i32 %16156, 2
  %16158 = zext i1 %16157 to i8
  %16159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16158, i8* %16159, align 1
  store %struct.Memory* %loadMem_476500, %struct.Memory** %MEMORY
  %loadMem_476507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16161 = getelementptr inbounds %struct.GPR, %struct.GPR* %16160, i32 0, i32 33
  %16162 = getelementptr inbounds %struct.Reg, %struct.Reg* %16161, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %16162 to i64*
  %16163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16164 = getelementptr inbounds %struct.GPR, %struct.GPR* %16163, i32 0, i32 1
  %16165 = getelementptr inbounds %struct.Reg, %struct.Reg* %16164, i32 0, i32 0
  %EAX.i1223 = bitcast %union.anon* %16165 to i32*
  %16166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16167 = getelementptr inbounds %struct.GPR, %struct.GPR* %16166, i32 0, i32 5
  %16168 = getelementptr inbounds %struct.Reg, %struct.Reg* %16167, i32 0, i32 0
  %RCX.i1224 = bitcast %union.anon* %16168 to i64*
  %16169 = load i32, i32* %EAX.i1223
  %16170 = zext i32 %16169 to i64
  %16171 = load i64, i64* %PC.i1222
  %16172 = add i64 %16171, 3
  store i64 %16172, i64* %PC.i1222
  %16173 = shl i64 %16170, 32
  %16174 = ashr exact i64 %16173, 32
  store i64 %16174, i64* %RCX.i1224, align 8
  store %struct.Memory* %loadMem_476507, %struct.Memory** %MEMORY
  %loadMem_47650a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16176 = getelementptr inbounds %struct.GPR, %struct.GPR* %16175, i32 0, i32 33
  %16177 = getelementptr inbounds %struct.Reg, %struct.Reg* %16176, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %16177 to i64*
  %16178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16179 = getelementptr inbounds %struct.GPR, %struct.GPR* %16178, i32 0, i32 5
  %16180 = getelementptr inbounds %struct.Reg, %struct.Reg* %16179, i32 0, i32 0
  %RCX.i1220 = bitcast %union.anon* %16180 to i64*
  %16181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16182 = getelementptr inbounds %struct.GPR, %struct.GPR* %16181, i32 0, i32 15
  %16183 = getelementptr inbounds %struct.Reg, %struct.Reg* %16182, i32 0, i32 0
  %RBP.i1221 = bitcast %union.anon* %16183 to i64*
  %16184 = load i64, i64* %RBP.i1221
  %16185 = load i64, i64* %RCX.i1220
  %16186 = add i64 %16184, -1040
  %16187 = add i64 %16186, %16185
  %16188 = load i64, i64* %PC.i1219
  %16189 = add i64 %16188, 8
  store i64 %16189, i64* %PC.i1219
  %16190 = inttoptr i64 %16187 to i8*
  store i8 2, i8* %16190
  store %struct.Memory* %loadMem_47650a, %struct.Memory** %MEMORY
  br label %block_.L_476512

block_.L_476512:                                  ; preds = %block_4764f9, %block_4764da, %block_4764b8
  %loadMem_476512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16192 = getelementptr inbounds %struct.GPR, %struct.GPR* %16191, i32 0, i32 33
  %16193 = getelementptr inbounds %struct.Reg, %struct.Reg* %16192, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %16193 to i64*
  %16194 = load i64, i64* %PC.i1218
  %16195 = add i64 %16194, 5
  %16196 = load i64, i64* %PC.i1218
  %16197 = add i64 %16196, 5
  store i64 %16197, i64* %PC.i1218
  %16198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16195, i64* %16198, align 8
  store %struct.Memory* %loadMem_476512, %struct.Memory** %MEMORY
  br label %block_.L_476517

block_.L_476517:                                  ; preds = %block_.L_476512
  %loadMem_476517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16200 = getelementptr inbounds %struct.GPR, %struct.GPR* %16199, i32 0, i32 33
  %16201 = getelementptr inbounds %struct.Reg, %struct.Reg* %16200, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %16201 to i64*
  %16202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16203 = getelementptr inbounds %struct.GPR, %struct.GPR* %16202, i32 0, i32 1
  %16204 = getelementptr inbounds %struct.Reg, %struct.Reg* %16203, i32 0, i32 0
  %RAX.i1216 = bitcast %union.anon* %16204 to i64*
  %16205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16206 = getelementptr inbounds %struct.GPR, %struct.GPR* %16205, i32 0, i32 15
  %16207 = getelementptr inbounds %struct.Reg, %struct.Reg* %16206, i32 0, i32 0
  %RBP.i1217 = bitcast %union.anon* %16207 to i64*
  %16208 = load i64, i64* %RBP.i1217
  %16209 = sub i64 %16208, 44
  %16210 = load i64, i64* %PC.i1215
  %16211 = add i64 %16210, 3
  store i64 %16211, i64* %PC.i1215
  %16212 = inttoptr i64 %16209 to i32*
  %16213 = load i32, i32* %16212
  %16214 = zext i32 %16213 to i64
  store i64 %16214, i64* %RAX.i1216, align 8
  store %struct.Memory* %loadMem_476517, %struct.Memory** %MEMORY
  %loadMem_47651a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16216 = getelementptr inbounds %struct.GPR, %struct.GPR* %16215, i32 0, i32 33
  %16217 = getelementptr inbounds %struct.Reg, %struct.Reg* %16216, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %16217 to i64*
  %16218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16219 = getelementptr inbounds %struct.GPR, %struct.GPR* %16218, i32 0, i32 1
  %16220 = getelementptr inbounds %struct.Reg, %struct.Reg* %16219, i32 0, i32 0
  %RAX.i1214 = bitcast %union.anon* %16220 to i64*
  %16221 = load i64, i64* %RAX.i1214
  %16222 = load i64, i64* %PC.i1213
  %16223 = add i64 %16222, 3
  store i64 %16223, i64* %PC.i1213
  %16224 = trunc i64 %16221 to i32
  %16225 = add i32 1, %16224
  %16226 = zext i32 %16225 to i64
  store i64 %16226, i64* %RAX.i1214, align 8
  %16227 = icmp ult i32 %16225, %16224
  %16228 = icmp ult i32 %16225, 1
  %16229 = or i1 %16227, %16228
  %16230 = zext i1 %16229 to i8
  %16231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16230, i8* %16231, align 1
  %16232 = and i32 %16225, 255
  %16233 = call i32 @llvm.ctpop.i32(i32 %16232)
  %16234 = trunc i32 %16233 to i8
  %16235 = and i8 %16234, 1
  %16236 = xor i8 %16235, 1
  %16237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16236, i8* %16237, align 1
  %16238 = xor i64 1, %16221
  %16239 = trunc i64 %16238 to i32
  %16240 = xor i32 %16239, %16225
  %16241 = lshr i32 %16240, 4
  %16242 = trunc i32 %16241 to i8
  %16243 = and i8 %16242, 1
  %16244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16243, i8* %16244, align 1
  %16245 = icmp eq i32 %16225, 0
  %16246 = zext i1 %16245 to i8
  %16247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16246, i8* %16247, align 1
  %16248 = lshr i32 %16225, 31
  %16249 = trunc i32 %16248 to i8
  %16250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16249, i8* %16250, align 1
  %16251 = lshr i32 %16224, 31
  %16252 = xor i32 %16248, %16251
  %16253 = add i32 %16252, %16248
  %16254 = icmp eq i32 %16253, 2
  %16255 = zext i1 %16254 to i8
  %16256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16255, i8* %16256, align 1
  store %struct.Memory* %loadMem_47651a, %struct.Memory** %MEMORY
  %loadMem_47651d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16258 = getelementptr inbounds %struct.GPR, %struct.GPR* %16257, i32 0, i32 33
  %16259 = getelementptr inbounds %struct.Reg, %struct.Reg* %16258, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %16259 to i64*
  %16260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16261 = getelementptr inbounds %struct.GPR, %struct.GPR* %16260, i32 0, i32 1
  %16262 = getelementptr inbounds %struct.Reg, %struct.Reg* %16261, i32 0, i32 0
  %EAX.i1211 = bitcast %union.anon* %16262 to i32*
  %16263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16264 = getelementptr inbounds %struct.GPR, %struct.GPR* %16263, i32 0, i32 15
  %16265 = getelementptr inbounds %struct.Reg, %struct.Reg* %16264, i32 0, i32 0
  %RBP.i1212 = bitcast %union.anon* %16265 to i64*
  %16266 = load i64, i64* %RBP.i1212
  %16267 = sub i64 %16266, 44
  %16268 = load i32, i32* %EAX.i1211
  %16269 = zext i32 %16268 to i64
  %16270 = load i64, i64* %PC.i1210
  %16271 = add i64 %16270, 3
  store i64 %16271, i64* %PC.i1210
  %16272 = inttoptr i64 %16267 to i32*
  store i32 %16268, i32* %16272
  store %struct.Memory* %loadMem_47651d, %struct.Memory** %MEMORY
  %loadMem_476520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16274 = getelementptr inbounds %struct.GPR, %struct.GPR* %16273, i32 0, i32 33
  %16275 = getelementptr inbounds %struct.Reg, %struct.Reg* %16274, i32 0, i32 0
  %PC.i1209 = bitcast %union.anon* %16275 to i64*
  %16276 = load i64, i64* %PC.i1209
  %16277 = add i64 %16276, -114
  %16278 = load i64, i64* %PC.i1209
  %16279 = add i64 %16278, 5
  store i64 %16279, i64* %PC.i1209
  %16280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16277, i64* %16280, align 8
  store %struct.Memory* %loadMem_476520, %struct.Memory** %MEMORY
  br label %block_.L_4764ae

block_.L_476525:                                  ; preds = %block_.L_4764ae
  %loadMem_476525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16282 = getelementptr inbounds %struct.GPR, %struct.GPR* %16281, i32 0, i32 33
  %16283 = getelementptr inbounds %struct.Reg, %struct.Reg* %16282, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %16283 to i64*
  %16284 = load i64, i64* %PC.i1208
  %16285 = add i64 %16284, 5
  %16286 = load i64, i64* %PC.i1208
  %16287 = add i64 %16286, 5
  store i64 %16287, i64* %PC.i1208
  %16288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16285, i64* %16288, align 8
  store %struct.Memory* %loadMem_476525, %struct.Memory** %MEMORY
  br label %block_.L_47652a

block_.L_47652a:                                  ; preds = %block_.L_476525, %block_476492, %block_47647d
  %loadMem_47652a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16290 = getelementptr inbounds %struct.GPR, %struct.GPR* %16289, i32 0, i32 33
  %16291 = getelementptr inbounds %struct.Reg, %struct.Reg* %16290, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %16291 to i64*
  %16292 = load i64, i64* %PC.i1207
  %16293 = add i64 %16292, 5
  %16294 = load i64, i64* %PC.i1207
  %16295 = add i64 %16294, 5
  store i64 %16295, i64* %PC.i1207
  %16296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16293, i64* %16296, align 8
  store %struct.Memory* %loadMem_47652a, %struct.Memory** %MEMORY
  br label %block_.L_47652f

block_.L_47652f:                                  ; preds = %block_.L_47652a
  %loadMem_47652f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16298 = getelementptr inbounds %struct.GPR, %struct.GPR* %16297, i32 0, i32 33
  %16299 = getelementptr inbounds %struct.Reg, %struct.Reg* %16298, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %16299 to i64*
  %16300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16301 = getelementptr inbounds %struct.GPR, %struct.GPR* %16300, i32 0, i32 1
  %16302 = getelementptr inbounds %struct.Reg, %struct.Reg* %16301, i32 0, i32 0
  %RAX.i1205 = bitcast %union.anon* %16302 to i64*
  %16303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16304 = getelementptr inbounds %struct.GPR, %struct.GPR* %16303, i32 0, i32 15
  %16305 = getelementptr inbounds %struct.Reg, %struct.Reg* %16304, i32 0, i32 0
  %RBP.i1206 = bitcast %union.anon* %16305 to i64*
  %16306 = load i64, i64* %RBP.i1206
  %16307 = sub i64 %16306, 48
  %16308 = load i64, i64* %PC.i1204
  %16309 = add i64 %16308, 3
  store i64 %16309, i64* %PC.i1204
  %16310 = inttoptr i64 %16307 to i32*
  %16311 = load i32, i32* %16310
  %16312 = zext i32 %16311 to i64
  store i64 %16312, i64* %RAX.i1205, align 8
  store %struct.Memory* %loadMem_47652f, %struct.Memory** %MEMORY
  %loadMem_476532 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16314 = getelementptr inbounds %struct.GPR, %struct.GPR* %16313, i32 0, i32 33
  %16315 = getelementptr inbounds %struct.Reg, %struct.Reg* %16314, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %16315 to i64*
  %16316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16317 = getelementptr inbounds %struct.GPR, %struct.GPR* %16316, i32 0, i32 1
  %16318 = getelementptr inbounds %struct.Reg, %struct.Reg* %16317, i32 0, i32 0
  %RAX.i1203 = bitcast %union.anon* %16318 to i64*
  %16319 = load i64, i64* %RAX.i1203
  %16320 = load i64, i64* %PC.i1202
  %16321 = add i64 %16320, 3
  store i64 %16321, i64* %PC.i1202
  %16322 = trunc i64 %16319 to i32
  %16323 = add i32 1, %16322
  %16324 = zext i32 %16323 to i64
  store i64 %16324, i64* %RAX.i1203, align 8
  %16325 = icmp ult i32 %16323, %16322
  %16326 = icmp ult i32 %16323, 1
  %16327 = or i1 %16325, %16326
  %16328 = zext i1 %16327 to i8
  %16329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16328, i8* %16329, align 1
  %16330 = and i32 %16323, 255
  %16331 = call i32 @llvm.ctpop.i32(i32 %16330)
  %16332 = trunc i32 %16331 to i8
  %16333 = and i8 %16332, 1
  %16334 = xor i8 %16333, 1
  %16335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16334, i8* %16335, align 1
  %16336 = xor i64 1, %16319
  %16337 = trunc i64 %16336 to i32
  %16338 = xor i32 %16337, %16323
  %16339 = lshr i32 %16338, 4
  %16340 = trunc i32 %16339 to i8
  %16341 = and i8 %16340, 1
  %16342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16341, i8* %16342, align 1
  %16343 = icmp eq i32 %16323, 0
  %16344 = zext i1 %16343 to i8
  %16345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16344, i8* %16345, align 1
  %16346 = lshr i32 %16323, 31
  %16347 = trunc i32 %16346 to i8
  %16348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16347, i8* %16348, align 1
  %16349 = lshr i32 %16322, 31
  %16350 = xor i32 %16346, %16349
  %16351 = add i32 %16350, %16346
  %16352 = icmp eq i32 %16351, 2
  %16353 = zext i1 %16352 to i8
  %16354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16353, i8* %16354, align 1
  store %struct.Memory* %loadMem_476532, %struct.Memory** %MEMORY
  %loadMem_476535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16356 = getelementptr inbounds %struct.GPR, %struct.GPR* %16355, i32 0, i32 33
  %16357 = getelementptr inbounds %struct.Reg, %struct.Reg* %16356, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %16357 to i64*
  %16358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16359 = getelementptr inbounds %struct.GPR, %struct.GPR* %16358, i32 0, i32 1
  %16360 = getelementptr inbounds %struct.Reg, %struct.Reg* %16359, i32 0, i32 0
  %EAX.i1200 = bitcast %union.anon* %16360 to i32*
  %16361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16362 = getelementptr inbounds %struct.GPR, %struct.GPR* %16361, i32 0, i32 15
  %16363 = getelementptr inbounds %struct.Reg, %struct.Reg* %16362, i32 0, i32 0
  %RBP.i1201 = bitcast %union.anon* %16363 to i64*
  %16364 = load i64, i64* %RBP.i1201
  %16365 = sub i64 %16364, 48
  %16366 = load i32, i32* %EAX.i1200
  %16367 = zext i32 %16366 to i64
  %16368 = load i64, i64* %PC.i1199
  %16369 = add i64 %16368, 3
  store i64 %16369, i64* %PC.i1199
  %16370 = inttoptr i64 %16365 to i32*
  store i32 %16366, i32* %16370
  store %struct.Memory* %loadMem_476535, %struct.Memory** %MEMORY
  %loadMem_476538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16372 = getelementptr inbounds %struct.GPR, %struct.GPR* %16371, i32 0, i32 33
  %16373 = getelementptr inbounds %struct.Reg, %struct.Reg* %16372, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %16373 to i64*
  %16374 = load i64, i64* %PC.i1198
  %16375 = add i64 %16374, -200
  %16376 = load i64, i64* %PC.i1198
  %16377 = add i64 %16376, 5
  store i64 %16377, i64* %PC.i1198
  %16378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16375, i64* %16378, align 8
  store %struct.Memory* %loadMem_476538, %struct.Memory** %MEMORY
  br label %block_.L_476470

block_.L_47653d:                                  ; preds = %block_.L_476470
  %loadMem_47653d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16380 = getelementptr inbounds %struct.GPR, %struct.GPR* %16379, i32 0, i32 33
  %16381 = getelementptr inbounds %struct.Reg, %struct.Reg* %16380, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %16381 to i64*
  %16382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16383 = getelementptr inbounds %struct.GPR, %struct.GPR* %16382, i32 0, i32 15
  %16384 = getelementptr inbounds %struct.Reg, %struct.Reg* %16383, i32 0, i32 0
  %RBP.i1197 = bitcast %union.anon* %16384 to i64*
  %16385 = load i64, i64* %RBP.i1197
  %16386 = sub i64 %16385, 48
  %16387 = load i64, i64* %PC.i1196
  %16388 = add i64 %16387, 7
  store i64 %16388, i64* %PC.i1196
  %16389 = inttoptr i64 %16386 to i32*
  store i32 21, i32* %16389
  store %struct.Memory* %loadMem_47653d, %struct.Memory** %MEMORY
  br label %block_.L_476544

block_.L_476544:                                  ; preds = %block_.L_476634, %block_.L_47653d
  %loadMem_476544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16391 = getelementptr inbounds %struct.GPR, %struct.GPR* %16390, i32 0, i32 33
  %16392 = getelementptr inbounds %struct.Reg, %struct.Reg* %16391, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %16392 to i64*
  %16393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16394 = getelementptr inbounds %struct.GPR, %struct.GPR* %16393, i32 0, i32 15
  %16395 = getelementptr inbounds %struct.Reg, %struct.Reg* %16394, i32 0, i32 0
  %RBP.i1195 = bitcast %union.anon* %16395 to i64*
  %16396 = load i64, i64* %RBP.i1195
  %16397 = sub i64 %16396, 48
  %16398 = load i64, i64* %PC.i1194
  %16399 = add i64 %16398, 7
  store i64 %16399, i64* %PC.i1194
  %16400 = inttoptr i64 %16397 to i32*
  %16401 = load i32, i32* %16400
  %16402 = sub i32 %16401, 400
  %16403 = icmp ult i32 %16401, 400
  %16404 = zext i1 %16403 to i8
  %16405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16404, i8* %16405, align 1
  %16406 = and i32 %16402, 255
  %16407 = call i32 @llvm.ctpop.i32(i32 %16406)
  %16408 = trunc i32 %16407 to i8
  %16409 = and i8 %16408, 1
  %16410 = xor i8 %16409, 1
  %16411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16410, i8* %16411, align 1
  %16412 = xor i32 %16401, 400
  %16413 = xor i32 %16412, %16402
  %16414 = lshr i32 %16413, 4
  %16415 = trunc i32 %16414 to i8
  %16416 = and i8 %16415, 1
  %16417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16416, i8* %16417, align 1
  %16418 = icmp eq i32 %16402, 0
  %16419 = zext i1 %16418 to i8
  %16420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16419, i8* %16420, align 1
  %16421 = lshr i32 %16402, 31
  %16422 = trunc i32 %16421 to i8
  %16423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16422, i8* %16423, align 1
  %16424 = lshr i32 %16401, 31
  %16425 = xor i32 %16421, %16424
  %16426 = add i32 %16425, %16424
  %16427 = icmp eq i32 %16426, 2
  %16428 = zext i1 %16427 to i8
  %16429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16428, i8* %16429, align 1
  store %struct.Memory* %loadMem_476544, %struct.Memory** %MEMORY
  %loadMem_47654b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16431 = getelementptr inbounds %struct.GPR, %struct.GPR* %16430, i32 0, i32 33
  %16432 = getelementptr inbounds %struct.Reg, %struct.Reg* %16431, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %16432 to i64*
  %16433 = load i64, i64* %PC.i1193
  %16434 = add i64 %16433, 247
  %16435 = load i64, i64* %PC.i1193
  %16436 = add i64 %16435, 6
  %16437 = load i64, i64* %PC.i1193
  %16438 = add i64 %16437, 6
  store i64 %16438, i64* %PC.i1193
  %16439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16440 = load i8, i8* %16439, align 1
  %16441 = icmp ne i8 %16440, 0
  %16442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16443 = load i8, i8* %16442, align 1
  %16444 = icmp ne i8 %16443, 0
  %16445 = xor i1 %16441, %16444
  %16446 = xor i1 %16445, true
  %16447 = zext i1 %16446 to i8
  store i8 %16447, i8* %BRANCH_TAKEN, align 1
  %16448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16449 = select i1 %16445, i64 %16436, i64 %16434
  store i64 %16449, i64* %16448, align 8
  store %struct.Memory* %loadMem_47654b, %struct.Memory** %MEMORY
  %loadBr_47654b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47654b = icmp eq i8 %loadBr_47654b, 1
  br i1 %cmpBr_47654b, label %block_.L_476642, label %block_476551

block_476551:                                     ; preds = %block_.L_476544
  %loadMem_476551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16451 = getelementptr inbounds %struct.GPR, %struct.GPR* %16450, i32 0, i32 33
  %16452 = getelementptr inbounds %struct.Reg, %struct.Reg* %16451, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %16452 to i64*
  %16453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16454 = getelementptr inbounds %struct.GPR, %struct.GPR* %16453, i32 0, i32 1
  %16455 = getelementptr inbounds %struct.Reg, %struct.Reg* %16454, i32 0, i32 0
  %RAX.i1191 = bitcast %union.anon* %16455 to i64*
  %16456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16457 = getelementptr inbounds %struct.GPR, %struct.GPR* %16456, i32 0, i32 15
  %16458 = getelementptr inbounds %struct.Reg, %struct.Reg* %16457, i32 0, i32 0
  %RBP.i1192 = bitcast %union.anon* %16458 to i64*
  %16459 = load i64, i64* %RBP.i1192
  %16460 = sub i64 %16459, 48
  %16461 = load i64, i64* %PC.i1190
  %16462 = add i64 %16461, 4
  store i64 %16462, i64* %PC.i1190
  %16463 = inttoptr i64 %16460 to i32*
  %16464 = load i32, i32* %16463
  %16465 = sext i32 %16464 to i64
  store i64 %16465, i64* %RAX.i1191, align 8
  store %struct.Memory* %loadMem_476551, %struct.Memory** %MEMORY
  %loadMem_476555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16467 = getelementptr inbounds %struct.GPR, %struct.GPR* %16466, i32 0, i32 33
  %16468 = getelementptr inbounds %struct.Reg, %struct.Reg* %16467, i32 0, i32 0
  %PC.i1187 = bitcast %union.anon* %16468 to i64*
  %16469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16470 = getelementptr inbounds %struct.GPR, %struct.GPR* %16469, i32 0, i32 1
  %16471 = getelementptr inbounds %struct.Reg, %struct.Reg* %16470, i32 0, i32 0
  %RAX.i1188 = bitcast %union.anon* %16471 to i64*
  %16472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16473 = getelementptr inbounds %struct.GPR, %struct.GPR* %16472, i32 0, i32 5
  %16474 = getelementptr inbounds %struct.Reg, %struct.Reg* %16473, i32 0, i32 0
  %RCX.i1189 = bitcast %union.anon* %16474 to i64*
  %16475 = load i64, i64* %RAX.i1188
  %16476 = add i64 %16475, 12099168
  %16477 = load i64, i64* %PC.i1187
  %16478 = add i64 %16477, 8
  store i64 %16478, i64* %PC.i1187
  %16479 = inttoptr i64 %16476 to i8*
  %16480 = load i8, i8* %16479
  %16481 = zext i8 %16480 to i64
  store i64 %16481, i64* %RCX.i1189, align 8
  store %struct.Memory* %loadMem_476555, %struct.Memory** %MEMORY
  %loadMem_47655d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16483 = getelementptr inbounds %struct.GPR, %struct.GPR* %16482, i32 0, i32 33
  %16484 = getelementptr inbounds %struct.Reg, %struct.Reg* %16483, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %16484 to i64*
  %16485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16486 = getelementptr inbounds %struct.GPR, %struct.GPR* %16485, i32 0, i32 5
  %16487 = getelementptr inbounds %struct.Reg, %struct.Reg* %16486, i32 0, i32 0
  %ECX.i1186 = bitcast %union.anon* %16487 to i32*
  %16488 = load i32, i32* %ECX.i1186
  %16489 = zext i32 %16488 to i64
  %16490 = load i64, i64* %PC.i1185
  %16491 = add i64 %16490, 3
  store i64 %16491, i64* %PC.i1185
  %16492 = sub i32 %16488, 3
  %16493 = icmp ult i32 %16488, 3
  %16494 = zext i1 %16493 to i8
  %16495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16494, i8* %16495, align 1
  %16496 = and i32 %16492, 255
  %16497 = call i32 @llvm.ctpop.i32(i32 %16496)
  %16498 = trunc i32 %16497 to i8
  %16499 = and i8 %16498, 1
  %16500 = xor i8 %16499, 1
  %16501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16500, i8* %16501, align 1
  %16502 = xor i64 3, %16489
  %16503 = trunc i64 %16502 to i32
  %16504 = xor i32 %16503, %16492
  %16505 = lshr i32 %16504, 4
  %16506 = trunc i32 %16505 to i8
  %16507 = and i8 %16506, 1
  %16508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16507, i8* %16508, align 1
  %16509 = icmp eq i32 %16492, 0
  %16510 = zext i1 %16509 to i8
  %16511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16510, i8* %16511, align 1
  %16512 = lshr i32 %16492, 31
  %16513 = trunc i32 %16512 to i8
  %16514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16513, i8* %16514, align 1
  %16515 = lshr i32 %16488, 31
  %16516 = xor i32 %16512, %16515
  %16517 = add i32 %16516, %16515
  %16518 = icmp eq i32 %16517, 2
  %16519 = zext i1 %16518 to i8
  %16520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16519, i8* %16520, align 1
  store %struct.Memory* %loadMem_47655d, %struct.Memory** %MEMORY
  %loadMem_476560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16522 = getelementptr inbounds %struct.GPR, %struct.GPR* %16521, i32 0, i32 33
  %16523 = getelementptr inbounds %struct.Reg, %struct.Reg* %16522, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %16523 to i64*
  %16524 = load i64, i64* %PC.i1184
  %16525 = add i64 %16524, 207
  %16526 = load i64, i64* %PC.i1184
  %16527 = add i64 %16526, 6
  %16528 = load i64, i64* %PC.i1184
  %16529 = add i64 %16528, 6
  store i64 %16529, i64* %PC.i1184
  %16530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16531 = load i8, i8* %16530, align 1
  store i8 %16531, i8* %BRANCH_TAKEN, align 1
  %16532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16533 = icmp ne i8 %16531, 0
  %16534 = select i1 %16533, i64 %16525, i64 %16527
  store i64 %16534, i64* %16532, align 8
  store %struct.Memory* %loadMem_476560, %struct.Memory** %MEMORY
  %loadBr_476560 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476560 = icmp eq i8 %loadBr_476560, 1
  br i1 %cmpBr_476560, label %block_.L_47662f, label %block_476566

block_476566:                                     ; preds = %block_476551
  %loadMem_476566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16536 = getelementptr inbounds %struct.GPR, %struct.GPR* %16535, i32 0, i32 33
  %16537 = getelementptr inbounds %struct.Reg, %struct.Reg* %16536, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %16537 to i64*
  %16538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16539 = getelementptr inbounds %struct.GPR, %struct.GPR* %16538, i32 0, i32 1
  %16540 = getelementptr inbounds %struct.Reg, %struct.Reg* %16539, i32 0, i32 0
  %RAX.i1182 = bitcast %union.anon* %16540 to i64*
  %16541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16542 = getelementptr inbounds %struct.GPR, %struct.GPR* %16541, i32 0, i32 15
  %16543 = getelementptr inbounds %struct.Reg, %struct.Reg* %16542, i32 0, i32 0
  %RBP.i1183 = bitcast %union.anon* %16543 to i64*
  %16544 = load i64, i64* %RBP.i1183
  %16545 = sub i64 %16544, 48
  %16546 = load i64, i64* %PC.i1181
  %16547 = add i64 %16546, 4
  store i64 %16547, i64* %PC.i1181
  %16548 = inttoptr i64 %16545 to i32*
  %16549 = load i32, i32* %16548
  %16550 = sext i32 %16549 to i64
  store i64 %16550, i64* %RAX.i1182, align 8
  store %struct.Memory* %loadMem_476566, %struct.Memory** %MEMORY
  %loadMem_47656a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16552 = getelementptr inbounds %struct.GPR, %struct.GPR* %16551, i32 0, i32 33
  %16553 = getelementptr inbounds %struct.Reg, %struct.Reg* %16552, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %16553 to i64*
  %16554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16555 = getelementptr inbounds %struct.GPR, %struct.GPR* %16554, i32 0, i32 1
  %16556 = getelementptr inbounds %struct.Reg, %struct.Reg* %16555, i32 0, i32 0
  %RAX.i1178 = bitcast %union.anon* %16556 to i64*
  %16557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16558 = getelementptr inbounds %struct.GPR, %struct.GPR* %16557, i32 0, i32 5
  %16559 = getelementptr inbounds %struct.Reg, %struct.Reg* %16558, i32 0, i32 0
  %RCX.i1179 = bitcast %union.anon* %16559 to i64*
  %16560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16561 = getelementptr inbounds %struct.GPR, %struct.GPR* %16560, i32 0, i32 15
  %16562 = getelementptr inbounds %struct.Reg, %struct.Reg* %16561, i32 0, i32 0
  %RBP.i1180 = bitcast %union.anon* %16562 to i64*
  %16563 = load i64, i64* %RBP.i1180
  %16564 = load i64, i64* %RAX.i1178
  %16565 = add i64 %16563, -1040
  %16566 = add i64 %16565, %16564
  %16567 = load i64, i64* %PC.i1177
  %16568 = add i64 %16567, 8
  store i64 %16568, i64* %PC.i1177
  %16569 = inttoptr i64 %16566 to i8*
  %16570 = load i8, i8* %16569
  %16571 = sext i8 %16570 to i64
  %16572 = and i64 %16571, 4294967295
  store i64 %16572, i64* %RCX.i1179, align 8
  store %struct.Memory* %loadMem_47656a, %struct.Memory** %MEMORY
  %loadMem_476572 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16574 = getelementptr inbounds %struct.GPR, %struct.GPR* %16573, i32 0, i32 33
  %16575 = getelementptr inbounds %struct.Reg, %struct.Reg* %16574, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %16575 to i64*
  %16576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16577 = getelementptr inbounds %struct.GPR, %struct.GPR* %16576, i32 0, i32 5
  %16578 = getelementptr inbounds %struct.Reg, %struct.Reg* %16577, i32 0, i32 0
  %ECX.i1176 = bitcast %union.anon* %16578 to i32*
  %16579 = load i32, i32* %ECX.i1176
  %16580 = zext i32 %16579 to i64
  %16581 = load i64, i64* %PC.i1175
  %16582 = add i64 %16581, 3
  store i64 %16582, i64* %PC.i1175
  %16583 = sub i32 %16579, 1
  %16584 = icmp ult i32 %16579, 1
  %16585 = zext i1 %16584 to i8
  %16586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16585, i8* %16586, align 1
  %16587 = and i32 %16583, 255
  %16588 = call i32 @llvm.ctpop.i32(i32 %16587)
  %16589 = trunc i32 %16588 to i8
  %16590 = and i8 %16589, 1
  %16591 = xor i8 %16590, 1
  %16592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16591, i8* %16592, align 1
  %16593 = xor i64 1, %16580
  %16594 = trunc i64 %16593 to i32
  %16595 = xor i32 %16594, %16583
  %16596 = lshr i32 %16595, 4
  %16597 = trunc i32 %16596 to i8
  %16598 = and i8 %16597, 1
  %16599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16598, i8* %16599, align 1
  %16600 = icmp eq i32 %16583, 0
  %16601 = zext i1 %16600 to i8
  %16602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16601, i8* %16602, align 1
  %16603 = lshr i32 %16583, 31
  %16604 = trunc i32 %16603 to i8
  %16605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16604, i8* %16605, align 1
  %16606 = lshr i32 %16579, 31
  %16607 = xor i32 %16603, %16606
  %16608 = add i32 %16607, %16606
  %16609 = icmp eq i32 %16608, 2
  %16610 = zext i1 %16609 to i8
  %16611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16610, i8* %16611, align 1
  store %struct.Memory* %loadMem_476572, %struct.Memory** %MEMORY
  %loadMem_476575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16613 = getelementptr inbounds %struct.GPR, %struct.GPR* %16612, i32 0, i32 33
  %16614 = getelementptr inbounds %struct.Reg, %struct.Reg* %16613, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %16614 to i64*
  %16615 = load i64, i64* %PC.i1174
  %16616 = add i64 %16615, 186
  %16617 = load i64, i64* %PC.i1174
  %16618 = add i64 %16617, 6
  %16619 = load i64, i64* %PC.i1174
  %16620 = add i64 %16619, 6
  store i64 %16620, i64* %PC.i1174
  %16621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16622 = load i8, i8* %16621, align 1
  %16623 = icmp eq i8 %16622, 0
  %16624 = zext i1 %16623 to i8
  store i8 %16624, i8* %BRANCH_TAKEN, align 1
  %16625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16626 = select i1 %16623, i64 %16616, i64 %16618
  store i64 %16626, i64* %16625, align 8
  store %struct.Memory* %loadMem_476575, %struct.Memory** %MEMORY
  %loadBr_476575 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476575 = icmp eq i8 %loadBr_476575, 1
  br i1 %cmpBr_476575, label %block_.L_47662f, label %block_47657b

block_47657b:                                     ; preds = %block_476566
  %loadMem_47657b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16628 = getelementptr inbounds %struct.GPR, %struct.GPR* %16627, i32 0, i32 33
  %16629 = getelementptr inbounds %struct.Reg, %struct.Reg* %16628, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %16629 to i64*
  %16630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16631 = getelementptr inbounds %struct.GPR, %struct.GPR* %16630, i32 0, i32 1
  %16632 = getelementptr inbounds %struct.Reg, %struct.Reg* %16631, i32 0, i32 0
  %RAX.i1172 = bitcast %union.anon* %16632 to i64*
  %16633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16634 = getelementptr inbounds %struct.GPR, %struct.GPR* %16633, i32 0, i32 15
  %16635 = getelementptr inbounds %struct.Reg, %struct.Reg* %16634, i32 0, i32 0
  %RBP.i1173 = bitcast %union.anon* %16635 to i64*
  %16636 = load i64, i64* %RBP.i1173
  %16637 = sub i64 %16636, 48
  %16638 = load i64, i64* %PC.i1171
  %16639 = add i64 %16638, 4
  store i64 %16639, i64* %PC.i1171
  %16640 = inttoptr i64 %16637 to i32*
  %16641 = load i32, i32* %16640
  %16642 = sext i32 %16641 to i64
  store i64 %16642, i64* %RAX.i1172, align 8
  store %struct.Memory* %loadMem_47657b, %struct.Memory** %MEMORY
  %loadMem_47657f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16644 = getelementptr inbounds %struct.GPR, %struct.GPR* %16643, i32 0, i32 33
  %16645 = getelementptr inbounds %struct.Reg, %struct.Reg* %16644, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %16645 to i64*
  %16646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16647 = getelementptr inbounds %struct.GPR, %struct.GPR* %16646, i32 0, i32 1
  %16648 = getelementptr inbounds %struct.Reg, %struct.Reg* %16647, i32 0, i32 0
  %RAX.i1169 = bitcast %union.anon* %16648 to i64*
  %16649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16650 = getelementptr inbounds %struct.GPR, %struct.GPR* %16649, i32 0, i32 5
  %16651 = getelementptr inbounds %struct.Reg, %struct.Reg* %16650, i32 0, i32 0
  %RCX.i1170 = bitcast %union.anon* %16651 to i64*
  %16652 = load i64, i64* %RAX.i1169
  %16653 = add i64 %16652, 12099168
  %16654 = load i64, i64* %PC.i1168
  %16655 = add i64 %16654, 8
  store i64 %16655, i64* %PC.i1168
  %16656 = inttoptr i64 %16653 to i8*
  %16657 = load i8, i8* %16656
  %16658 = zext i8 %16657 to i64
  store i64 %16658, i64* %RCX.i1170, align 8
  store %struct.Memory* %loadMem_47657f, %struct.Memory** %MEMORY
  %loadMem_476587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16660 = getelementptr inbounds %struct.GPR, %struct.GPR* %16659, i32 0, i32 33
  %16661 = getelementptr inbounds %struct.Reg, %struct.Reg* %16660, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %16661 to i64*
  %16662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16663 = getelementptr inbounds %struct.GPR, %struct.GPR* %16662, i32 0, i32 5
  %16664 = getelementptr inbounds %struct.Reg, %struct.Reg* %16663, i32 0, i32 0
  %ECX.i1166 = bitcast %union.anon* %16664 to i32*
  %16665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16666 = getelementptr inbounds %struct.GPR, %struct.GPR* %16665, i32 0, i32 15
  %16667 = getelementptr inbounds %struct.Reg, %struct.Reg* %16666, i32 0, i32 0
  %RBP.i1167 = bitcast %union.anon* %16667 to i64*
  %16668 = load i32, i32* %ECX.i1166
  %16669 = zext i32 %16668 to i64
  %16670 = load i64, i64* %RBP.i1167
  %16671 = sub i64 %16670, 228
  %16672 = load i64, i64* %PC.i1165
  %16673 = add i64 %16672, 6
  store i64 %16673, i64* %PC.i1165
  %16674 = inttoptr i64 %16671 to i32*
  %16675 = load i32, i32* %16674
  %16676 = sub i32 %16668, %16675
  %16677 = icmp ult i32 %16668, %16675
  %16678 = zext i1 %16677 to i8
  %16679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16678, i8* %16679, align 1
  %16680 = and i32 %16676, 255
  %16681 = call i32 @llvm.ctpop.i32(i32 %16680)
  %16682 = trunc i32 %16681 to i8
  %16683 = and i8 %16682, 1
  %16684 = xor i8 %16683, 1
  %16685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16684, i8* %16685, align 1
  %16686 = xor i32 %16675, %16668
  %16687 = xor i32 %16686, %16676
  %16688 = lshr i32 %16687, 4
  %16689 = trunc i32 %16688 to i8
  %16690 = and i8 %16689, 1
  %16691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16690, i8* %16691, align 1
  %16692 = icmp eq i32 %16676, 0
  %16693 = zext i1 %16692 to i8
  %16694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16693, i8* %16694, align 1
  %16695 = lshr i32 %16676, 31
  %16696 = trunc i32 %16695 to i8
  %16697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16696, i8* %16697, align 1
  %16698 = lshr i32 %16668, 31
  %16699 = lshr i32 %16675, 31
  %16700 = xor i32 %16699, %16698
  %16701 = xor i32 %16695, %16698
  %16702 = add i32 %16701, %16700
  %16703 = icmp eq i32 %16702, 2
  %16704 = zext i1 %16703 to i8
  %16705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16704, i8* %16705, align 1
  store %struct.Memory* %loadMem_476587, %struct.Memory** %MEMORY
  %loadMem_47658d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16707 = getelementptr inbounds %struct.GPR, %struct.GPR* %16706, i32 0, i32 33
  %16708 = getelementptr inbounds %struct.Reg, %struct.Reg* %16707, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %16708 to i64*
  %16709 = load i64, i64* %PC.i1164
  %16710 = add i64 %16709, 162
  %16711 = load i64, i64* %PC.i1164
  %16712 = add i64 %16711, 6
  %16713 = load i64, i64* %PC.i1164
  %16714 = add i64 %16713, 6
  store i64 %16714, i64* %PC.i1164
  %16715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16716 = load i8, i8* %16715, align 1
  %16717 = icmp eq i8 %16716, 0
  %16718 = zext i1 %16717 to i8
  store i8 %16718, i8* %BRANCH_TAKEN, align 1
  %16719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16720 = select i1 %16717, i64 %16710, i64 %16712
  store i64 %16720, i64* %16719, align 8
  store %struct.Memory* %loadMem_47658d, %struct.Memory** %MEMORY
  %loadBr_47658d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47658d = icmp eq i8 %loadBr_47658d, 1
  br i1 %cmpBr_47658d, label %block_.L_47662f, label %block_476593

block_476593:                                     ; preds = %block_47657b
  %loadMem_476593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16722 = getelementptr inbounds %struct.GPR, %struct.GPR* %16721, i32 0, i32 33
  %16723 = getelementptr inbounds %struct.Reg, %struct.Reg* %16722, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %16723 to i64*
  %16724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16725 = getelementptr inbounds %struct.GPR, %struct.GPR* %16724, i32 0, i32 11
  %16726 = getelementptr inbounds %struct.Reg, %struct.Reg* %16725, i32 0, i32 0
  %RDI.i1162 = bitcast %union.anon* %16726 to i64*
  %16727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16728 = getelementptr inbounds %struct.GPR, %struct.GPR* %16727, i32 0, i32 15
  %16729 = getelementptr inbounds %struct.Reg, %struct.Reg* %16728, i32 0, i32 0
  %RBP.i1163 = bitcast %union.anon* %16729 to i64*
  %16730 = load i64, i64* %RBP.i1163
  %16731 = sub i64 %16730, 8
  %16732 = load i64, i64* %PC.i1161
  %16733 = add i64 %16732, 3
  store i64 %16733, i64* %PC.i1161
  %16734 = inttoptr i64 %16731 to i32*
  %16735 = load i32, i32* %16734
  %16736 = zext i32 %16735 to i64
  store i64 %16736, i64* %RDI.i1162, align 8
  store %struct.Memory* %loadMem_476593, %struct.Memory** %MEMORY
  %loadMem_476596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16738 = getelementptr inbounds %struct.GPR, %struct.GPR* %16737, i32 0, i32 33
  %16739 = getelementptr inbounds %struct.Reg, %struct.Reg* %16738, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %16739 to i64*
  %16740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16741 = getelementptr inbounds %struct.GPR, %struct.GPR* %16740, i32 0, i32 9
  %16742 = getelementptr inbounds %struct.Reg, %struct.Reg* %16741, i32 0, i32 0
  %RSI.i1159 = bitcast %union.anon* %16742 to i64*
  %16743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16744 = getelementptr inbounds %struct.GPR, %struct.GPR* %16743, i32 0, i32 15
  %16745 = getelementptr inbounds %struct.Reg, %struct.Reg* %16744, i32 0, i32 0
  %RBP.i1160 = bitcast %union.anon* %16745 to i64*
  %16746 = load i64, i64* %RBP.i1160
  %16747 = sub i64 %16746, 48
  %16748 = load i64, i64* %PC.i1158
  %16749 = add i64 %16748, 3
  store i64 %16749, i64* %PC.i1158
  %16750 = inttoptr i64 %16747 to i32*
  %16751 = load i32, i32* %16750
  %16752 = zext i32 %16751 to i64
  store i64 %16752, i64* %RSI.i1159, align 8
  store %struct.Memory* %loadMem_476596, %struct.Memory** %MEMORY
  %loadMem1_476599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16754 = getelementptr inbounds %struct.GPR, %struct.GPR* %16753, i32 0, i32 33
  %16755 = getelementptr inbounds %struct.Reg, %struct.Reg* %16754, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %16755 to i64*
  %16756 = load i64, i64* %PC.i1157
  %16757 = add i64 %16756, -341113
  %16758 = load i64, i64* %PC.i1157
  %16759 = add i64 %16758, 5
  %16760 = load i64, i64* %PC.i1157
  %16761 = add i64 %16760, 5
  store i64 %16761, i64* %PC.i1157
  %16762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16763 = load i64, i64* %16762, align 8
  %16764 = add i64 %16763, -8
  %16765 = inttoptr i64 %16764 to i64*
  store i64 %16759, i64* %16765
  store i64 %16764, i64* %16762, align 8
  %16766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16757, i64* %16766, align 8
  store %struct.Memory* %loadMem1_476599, %struct.Memory** %MEMORY
  %loadMem2_476599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_476599 = load i64, i64* %3
  %call2_476599 = call %struct.Memory* @sub_423120.are_neighbor_dragons(%struct.State* %0, i64 %loadPC_476599, %struct.Memory* %loadMem2_476599)
  store %struct.Memory* %call2_476599, %struct.Memory** %MEMORY
  %loadMem_47659e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16768 = getelementptr inbounds %struct.GPR, %struct.GPR* %16767, i32 0, i32 33
  %16769 = getelementptr inbounds %struct.Reg, %struct.Reg* %16768, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %16769 to i64*
  %16770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16771 = getelementptr inbounds %struct.GPR, %struct.GPR* %16770, i32 0, i32 1
  %16772 = getelementptr inbounds %struct.Reg, %struct.Reg* %16771, i32 0, i32 0
  %EAX.i1156 = bitcast %union.anon* %16772 to i32*
  %16773 = load i32, i32* %EAX.i1156
  %16774 = zext i32 %16773 to i64
  %16775 = load i64, i64* %PC.i1155
  %16776 = add i64 %16775, 3
  store i64 %16776, i64* %PC.i1155
  %16777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16777, align 1
  %16778 = and i32 %16773, 255
  %16779 = call i32 @llvm.ctpop.i32(i32 %16778)
  %16780 = trunc i32 %16779 to i8
  %16781 = and i8 %16780, 1
  %16782 = xor i8 %16781, 1
  %16783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16782, i8* %16783, align 1
  %16784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16784, align 1
  %16785 = icmp eq i32 %16773, 0
  %16786 = zext i1 %16785 to i8
  %16787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16786, i8* %16787, align 1
  %16788 = lshr i32 %16773, 31
  %16789 = trunc i32 %16788 to i8
  %16790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16789, i8* %16790, align 1
  %16791 = lshr i32 %16773, 31
  %16792 = xor i32 %16788, %16791
  %16793 = add i32 %16792, %16791
  %16794 = icmp eq i32 %16793, 2
  %16795 = zext i1 %16794 to i8
  %16796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16795, i8* %16796, align 1
  store %struct.Memory* %loadMem_47659e, %struct.Memory** %MEMORY
  %loadMem_4765a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16798 = getelementptr inbounds %struct.GPR, %struct.GPR* %16797, i32 0, i32 33
  %16799 = getelementptr inbounds %struct.Reg, %struct.Reg* %16798, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %16799 to i64*
  %16800 = load i64, i64* %PC.i1154
  %16801 = add i64 %16800, 142
  %16802 = load i64, i64* %PC.i1154
  %16803 = add i64 %16802, 6
  %16804 = load i64, i64* %PC.i1154
  %16805 = add i64 %16804, 6
  store i64 %16805, i64* %PC.i1154
  %16806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16807 = load i8, i8* %16806, align 1
  store i8 %16807, i8* %BRANCH_TAKEN, align 1
  %16808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16809 = icmp ne i8 %16807, 0
  %16810 = select i1 %16809, i64 %16801, i64 %16803
  store i64 %16810, i64* %16808, align 8
  store %struct.Memory* %loadMem_4765a1, %struct.Memory** %MEMORY
  %loadBr_4765a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4765a1 = icmp eq i8 %loadBr_4765a1, 1
  br i1 %cmpBr_4765a1, label %block_.L_47662f, label %block_4765a7

block_4765a7:                                     ; preds = %block_476593
  %loadMem_4765a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16812 = getelementptr inbounds %struct.GPR, %struct.GPR* %16811, i32 0, i32 33
  %16813 = getelementptr inbounds %struct.Reg, %struct.Reg* %16812, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %16813 to i64*
  %16814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16815 = getelementptr inbounds %struct.GPR, %struct.GPR* %16814, i32 0, i32 1
  %16816 = getelementptr inbounds %struct.Reg, %struct.Reg* %16815, i32 0, i32 0
  %RAX.i1152 = bitcast %union.anon* %16816 to i64*
  %16817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16818 = getelementptr inbounds %struct.GPR, %struct.GPR* %16817, i32 0, i32 15
  %16819 = getelementptr inbounds %struct.Reg, %struct.Reg* %16818, i32 0, i32 0
  %RBP.i1153 = bitcast %union.anon* %16819 to i64*
  %16820 = load i64, i64* %RBP.i1153
  %16821 = sub i64 %16820, 48
  %16822 = load i64, i64* %PC.i1151
  %16823 = add i64 %16822, 4
  store i64 %16823, i64* %PC.i1151
  %16824 = inttoptr i64 %16821 to i32*
  %16825 = load i32, i32* %16824
  %16826 = sext i32 %16825 to i64
  store i64 %16826, i64* %RAX.i1152, align 8
  store %struct.Memory* %loadMem_4765a7, %struct.Memory** %MEMORY
  %loadMem_4765ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %16827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16828 = getelementptr inbounds %struct.GPR, %struct.GPR* %16827, i32 0, i32 33
  %16829 = getelementptr inbounds %struct.Reg, %struct.Reg* %16828, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %16829 to i64*
  %16830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16831 = getelementptr inbounds %struct.GPR, %struct.GPR* %16830, i32 0, i32 1
  %16832 = getelementptr inbounds %struct.Reg, %struct.Reg* %16831, i32 0, i32 0
  %RAX.i1149 = bitcast %union.anon* %16832 to i64*
  %16833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16834 = getelementptr inbounds %struct.GPR, %struct.GPR* %16833, i32 0, i32 15
  %16835 = getelementptr inbounds %struct.Reg, %struct.Reg* %16834, i32 0, i32 0
  %RBP.i1150 = bitcast %union.anon* %16835 to i64*
  %16836 = load i64, i64* %RBP.i1150
  %16837 = load i64, i64* %RAX.i1149
  %16838 = add i64 %16836, -640
  %16839 = add i64 %16838, %16837
  %16840 = load i64, i64* %PC.i1148
  %16841 = add i64 %16840, 8
  store i64 %16841, i64* %PC.i1148
  %16842 = inttoptr i64 %16839 to i8*
  %16843 = load i8, i8* %16842
  %16844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16844, align 1
  %16845 = zext i8 %16843 to i32
  %16846 = call i32 @llvm.ctpop.i32(i32 %16845)
  %16847 = trunc i32 %16846 to i8
  %16848 = and i8 %16847, 1
  %16849 = xor i8 %16848, 1
  %16850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16849, i8* %16850, align 1
  %16851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16851, align 1
  %16852 = icmp eq i8 %16843, 0
  %16853 = zext i1 %16852 to i8
  %16854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16853, i8* %16854, align 1
  %16855 = lshr i8 %16843, 7
  %16856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16855, i8* %16856, align 1
  %16857 = lshr i8 %16843, 7
  %16858 = xor i8 %16855, %16857
  %16859 = add i8 %16858, %16857
  %16860 = icmp eq i8 %16859, 2
  %16861 = zext i1 %16860 to i8
  %16862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16861, i8* %16862, align 1
  store %struct.Memory* %loadMem_4765ab, %struct.Memory** %MEMORY
  %loadMem_4765b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16864 = getelementptr inbounds %struct.GPR, %struct.GPR* %16863, i32 0, i32 33
  %16865 = getelementptr inbounds %struct.Reg, %struct.Reg* %16864, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %16865 to i64*
  %16866 = load i64, i64* %PC.i1147
  %16867 = add i64 %16866, 124
  %16868 = load i64, i64* %PC.i1147
  %16869 = add i64 %16868, 6
  %16870 = load i64, i64* %PC.i1147
  %16871 = add i64 %16870, 6
  store i64 %16871, i64* %PC.i1147
  %16872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16873 = load i8, i8* %16872, align 1
  %16874 = icmp eq i8 %16873, 0
  %16875 = zext i1 %16874 to i8
  store i8 %16875, i8* %BRANCH_TAKEN, align 1
  %16876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16877 = select i1 %16874, i64 %16867, i64 %16869
  store i64 %16877, i64* %16876, align 8
  store %struct.Memory* %loadMem_4765b3, %struct.Memory** %MEMORY
  %loadBr_4765b3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4765b3 = icmp eq i8 %loadBr_4765b3, 1
  br i1 %cmpBr_4765b3, label %block_.L_47662f, label %block_4765b9

block_4765b9:                                     ; preds = %block_4765a7
  %loadMem_4765b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16879 = getelementptr inbounds %struct.GPR, %struct.GPR* %16878, i32 0, i32 33
  %16880 = getelementptr inbounds %struct.Reg, %struct.Reg* %16879, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %16880 to i64*
  %16881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16882 = getelementptr inbounds %struct.GPR, %struct.GPR* %16881, i32 0, i32 15
  %16883 = getelementptr inbounds %struct.Reg, %struct.Reg* %16882, i32 0, i32 0
  %RBP.i1146 = bitcast %union.anon* %16883 to i64*
  %16884 = load i64, i64* %RBP.i1146
  %16885 = sub i64 %16884, 1128
  %16886 = load i64, i64* %PC.i1145
  %16887 = add i64 %16886, 10
  store i64 %16887, i64* %PC.i1145
  %16888 = inttoptr i64 %16885 to i32*
  store i32 21, i32* %16888
  store %struct.Memory* %loadMem_4765b9, %struct.Memory** %MEMORY
  br label %block_.L_4765c3

block_.L_4765c3:                                  ; preds = %block_.L_476616, %block_4765b9
  %loadMem_4765c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16890 = getelementptr inbounds %struct.GPR, %struct.GPR* %16889, i32 0, i32 33
  %16891 = getelementptr inbounds %struct.Reg, %struct.Reg* %16890, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %16891 to i64*
  %16892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16893 = getelementptr inbounds %struct.GPR, %struct.GPR* %16892, i32 0, i32 15
  %16894 = getelementptr inbounds %struct.Reg, %struct.Reg* %16893, i32 0, i32 0
  %RBP.i1144 = bitcast %union.anon* %16894 to i64*
  %16895 = load i64, i64* %RBP.i1144
  %16896 = sub i64 %16895, 1128
  %16897 = load i64, i64* %PC.i1143
  %16898 = add i64 %16897, 10
  store i64 %16898, i64* %PC.i1143
  %16899 = inttoptr i64 %16896 to i32*
  %16900 = load i32, i32* %16899
  %16901 = sub i32 %16900, 400
  %16902 = icmp ult i32 %16900, 400
  %16903 = zext i1 %16902 to i8
  %16904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16903, i8* %16904, align 1
  %16905 = and i32 %16901, 255
  %16906 = call i32 @llvm.ctpop.i32(i32 %16905)
  %16907 = trunc i32 %16906 to i8
  %16908 = and i8 %16907, 1
  %16909 = xor i8 %16908, 1
  %16910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16909, i8* %16910, align 1
  %16911 = xor i32 %16900, 400
  %16912 = xor i32 %16911, %16901
  %16913 = lshr i32 %16912, 4
  %16914 = trunc i32 %16913 to i8
  %16915 = and i8 %16914, 1
  %16916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16915, i8* %16916, align 1
  %16917 = icmp eq i32 %16901, 0
  %16918 = zext i1 %16917 to i8
  %16919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16918, i8* %16919, align 1
  %16920 = lshr i32 %16901, 31
  %16921 = trunc i32 %16920 to i8
  %16922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16921, i8* %16922, align 1
  %16923 = lshr i32 %16900, 31
  %16924 = xor i32 %16920, %16923
  %16925 = add i32 %16924, %16923
  %16926 = icmp eq i32 %16925, 2
  %16927 = zext i1 %16926 to i8
  %16928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16927, i8* %16928, align 1
  store %struct.Memory* %loadMem_4765c3, %struct.Memory** %MEMORY
  %loadMem_4765cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %16929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16930 = getelementptr inbounds %struct.GPR, %struct.GPR* %16929, i32 0, i32 33
  %16931 = getelementptr inbounds %struct.Reg, %struct.Reg* %16930, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %16931 to i64*
  %16932 = load i64, i64* %PC.i1142
  %16933 = add i64 %16932, 93
  %16934 = load i64, i64* %PC.i1142
  %16935 = add i64 %16934, 6
  %16936 = load i64, i64* %PC.i1142
  %16937 = add i64 %16936, 6
  store i64 %16937, i64* %PC.i1142
  %16938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16939 = load i8, i8* %16938, align 1
  %16940 = icmp ne i8 %16939, 0
  %16941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16942 = load i8, i8* %16941, align 1
  %16943 = icmp ne i8 %16942, 0
  %16944 = xor i1 %16940, %16943
  %16945 = xor i1 %16944, true
  %16946 = zext i1 %16945 to i8
  store i8 %16946, i8* %BRANCH_TAKEN, align 1
  %16947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16948 = select i1 %16944, i64 %16935, i64 %16933
  store i64 %16948, i64* %16947, align 8
  store %struct.Memory* %loadMem_4765cd, %struct.Memory** %MEMORY
  %loadBr_4765cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4765cd = icmp eq i8 %loadBr_4765cd, 1
  br i1 %cmpBr_4765cd, label %block_.L_47662a, label %block_4765d3

block_4765d3:                                     ; preds = %block_.L_4765c3
  %loadMem_4765d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16950 = getelementptr inbounds %struct.GPR, %struct.GPR* %16949, i32 0, i32 33
  %16951 = getelementptr inbounds %struct.Reg, %struct.Reg* %16950, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %16951 to i64*
  %16952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16953 = getelementptr inbounds %struct.GPR, %struct.GPR* %16952, i32 0, i32 1
  %16954 = getelementptr inbounds %struct.Reg, %struct.Reg* %16953, i32 0, i32 0
  %RAX.i1140 = bitcast %union.anon* %16954 to i64*
  %16955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16956 = getelementptr inbounds %struct.GPR, %struct.GPR* %16955, i32 0, i32 15
  %16957 = getelementptr inbounds %struct.Reg, %struct.Reg* %16956, i32 0, i32 0
  %RBP.i1141 = bitcast %union.anon* %16957 to i64*
  %16958 = load i64, i64* %RBP.i1141
  %16959 = sub i64 %16958, 1128
  %16960 = load i64, i64* %PC.i1139
  %16961 = add i64 %16960, 7
  store i64 %16961, i64* %PC.i1139
  %16962 = inttoptr i64 %16959 to i32*
  %16963 = load i32, i32* %16962
  %16964 = sext i32 %16963 to i64
  store i64 %16964, i64* %RAX.i1140, align 8
  store %struct.Memory* %loadMem_4765d3, %struct.Memory** %MEMORY
  %loadMem_4765da = load %struct.Memory*, %struct.Memory** %MEMORY
  %16965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16966 = getelementptr inbounds %struct.GPR, %struct.GPR* %16965, i32 0, i32 33
  %16967 = getelementptr inbounds %struct.Reg, %struct.Reg* %16966, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %16967 to i64*
  %16968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16969 = getelementptr inbounds %struct.GPR, %struct.GPR* %16968, i32 0, i32 1
  %16970 = getelementptr inbounds %struct.Reg, %struct.Reg* %16969, i32 0, i32 0
  %RAX.i1137 = bitcast %union.anon* %16970 to i64*
  %16971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16972 = getelementptr inbounds %struct.GPR, %struct.GPR* %16971, i32 0, i32 5
  %16973 = getelementptr inbounds %struct.Reg, %struct.Reg* %16972, i32 0, i32 0
  %RCX.i1138 = bitcast %union.anon* %16973 to i64*
  %16974 = load i64, i64* %RAX.i1137
  %16975 = add i64 %16974, 12099168
  %16976 = load i64, i64* %PC.i1136
  %16977 = add i64 %16976, 8
  store i64 %16977, i64* %PC.i1136
  %16978 = inttoptr i64 %16975 to i8*
  %16979 = load i8, i8* %16978
  %16980 = zext i8 %16979 to i64
  store i64 %16980, i64* %RCX.i1138, align 8
  store %struct.Memory* %loadMem_4765da, %struct.Memory** %MEMORY
  %loadMem_4765e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16982 = getelementptr inbounds %struct.GPR, %struct.GPR* %16981, i32 0, i32 33
  %16983 = getelementptr inbounds %struct.Reg, %struct.Reg* %16982, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %16983 to i64*
  %16984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16985 = getelementptr inbounds %struct.GPR, %struct.GPR* %16984, i32 0, i32 5
  %16986 = getelementptr inbounds %struct.Reg, %struct.Reg* %16985, i32 0, i32 0
  %ECX.i1135 = bitcast %union.anon* %16986 to i32*
  %16987 = load i32, i32* %ECX.i1135
  %16988 = zext i32 %16987 to i64
  %16989 = load i64, i64* %PC.i1134
  %16990 = add i64 %16989, 3
  store i64 %16990, i64* %PC.i1134
  %16991 = sub i32 %16987, 3
  %16992 = icmp ult i32 %16987, 3
  %16993 = zext i1 %16992 to i8
  %16994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16993, i8* %16994, align 1
  %16995 = and i32 %16991, 255
  %16996 = call i32 @llvm.ctpop.i32(i32 %16995)
  %16997 = trunc i32 %16996 to i8
  %16998 = and i8 %16997, 1
  %16999 = xor i8 %16998, 1
  %17000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16999, i8* %17000, align 1
  %17001 = xor i64 3, %16988
  %17002 = trunc i64 %17001 to i32
  %17003 = xor i32 %17002, %16991
  %17004 = lshr i32 %17003, 4
  %17005 = trunc i32 %17004 to i8
  %17006 = and i8 %17005, 1
  %17007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17006, i8* %17007, align 1
  %17008 = icmp eq i32 %16991, 0
  %17009 = zext i1 %17008 to i8
  %17010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17009, i8* %17010, align 1
  %17011 = lshr i32 %16991, 31
  %17012 = trunc i32 %17011 to i8
  %17013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17012, i8* %17013, align 1
  %17014 = lshr i32 %16987, 31
  %17015 = xor i32 %17011, %17014
  %17016 = add i32 %17015, %17014
  %17017 = icmp eq i32 %17016, 2
  %17018 = zext i1 %17017 to i8
  %17019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17018, i8* %17019, align 1
  store %struct.Memory* %loadMem_4765e2, %struct.Memory** %MEMORY
  %loadMem_4765e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17021 = getelementptr inbounds %struct.GPR, %struct.GPR* %17020, i32 0, i32 33
  %17022 = getelementptr inbounds %struct.Reg, %struct.Reg* %17021, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %17022 to i64*
  %17023 = load i64, i64* %PC.i1133
  %17024 = add i64 %17023, 44
  %17025 = load i64, i64* %PC.i1133
  %17026 = add i64 %17025, 6
  %17027 = load i64, i64* %PC.i1133
  %17028 = add i64 %17027, 6
  store i64 %17028, i64* %PC.i1133
  %17029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17030 = load i8, i8* %17029, align 1
  store i8 %17030, i8* %BRANCH_TAKEN, align 1
  %17031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17032 = icmp ne i8 %17030, 0
  %17033 = select i1 %17032, i64 %17024, i64 %17026
  store i64 %17033, i64* %17031, align 8
  store %struct.Memory* %loadMem_4765e5, %struct.Memory** %MEMORY
  %loadBr_4765e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4765e5 = icmp eq i8 %loadBr_4765e5, 1
  br i1 %cmpBr_4765e5, label %block_.L_476611, label %block_4765eb

block_4765eb:                                     ; preds = %block_4765d3
  %loadMem_4765eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %17034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17035 = getelementptr inbounds %struct.GPR, %struct.GPR* %17034, i32 0, i32 33
  %17036 = getelementptr inbounds %struct.Reg, %struct.Reg* %17035, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %17036 to i64*
  %17037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17038 = getelementptr inbounds %struct.GPR, %struct.GPR* %17037, i32 0, i32 11
  %17039 = getelementptr inbounds %struct.Reg, %struct.Reg* %17038, i32 0, i32 0
  %RDI.i1131 = bitcast %union.anon* %17039 to i64*
  %17040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17041 = getelementptr inbounds %struct.GPR, %struct.GPR* %17040, i32 0, i32 15
  %17042 = getelementptr inbounds %struct.Reg, %struct.Reg* %17041, i32 0, i32 0
  %RBP.i1132 = bitcast %union.anon* %17042 to i64*
  %17043 = load i64, i64* %RBP.i1132
  %17044 = sub i64 %17043, 1128
  %17045 = load i64, i64* %PC.i1130
  %17046 = add i64 %17045, 6
  store i64 %17046, i64* %PC.i1130
  %17047 = inttoptr i64 %17044 to i32*
  %17048 = load i32, i32* %17047
  %17049 = zext i32 %17048 to i64
  store i64 %17049, i64* %RDI.i1131, align 8
  store %struct.Memory* %loadMem_4765eb, %struct.Memory** %MEMORY
  %loadMem_4765f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17051 = getelementptr inbounds %struct.GPR, %struct.GPR* %17050, i32 0, i32 33
  %17052 = getelementptr inbounds %struct.Reg, %struct.Reg* %17051, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %17052 to i64*
  %17053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17054 = getelementptr inbounds %struct.GPR, %struct.GPR* %17053, i32 0, i32 9
  %17055 = getelementptr inbounds %struct.Reg, %struct.Reg* %17054, i32 0, i32 0
  %RSI.i1128 = bitcast %union.anon* %17055 to i64*
  %17056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17057 = getelementptr inbounds %struct.GPR, %struct.GPR* %17056, i32 0, i32 15
  %17058 = getelementptr inbounds %struct.Reg, %struct.Reg* %17057, i32 0, i32 0
  %RBP.i1129 = bitcast %union.anon* %17058 to i64*
  %17059 = load i64, i64* %RBP.i1129
  %17060 = sub i64 %17059, 48
  %17061 = load i64, i64* %PC.i1127
  %17062 = add i64 %17061, 3
  store i64 %17062, i64* %PC.i1127
  %17063 = inttoptr i64 %17060 to i32*
  %17064 = load i32, i32* %17063
  %17065 = zext i32 %17064 to i64
  store i64 %17065, i64* %RSI.i1128, align 8
  store %struct.Memory* %loadMem_4765f1, %struct.Memory** %MEMORY
  %loadMem1_4765f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17067 = getelementptr inbounds %struct.GPR, %struct.GPR* %17066, i32 0, i32 33
  %17068 = getelementptr inbounds %struct.Reg, %struct.Reg* %17067, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %17068 to i64*
  %17069 = load i64, i64* %PC.i1126
  %17070 = add i64 %17069, -354756
  %17071 = load i64, i64* %PC.i1126
  %17072 = add i64 %17071, 5
  %17073 = load i64, i64* %PC.i1126
  %17074 = add i64 %17073, 5
  store i64 %17074, i64* %PC.i1126
  %17075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %17076 = load i64, i64* %17075, align 8
  %17077 = add i64 %17076, -8
  %17078 = inttoptr i64 %17077 to i64*
  store i64 %17072, i64* %17078
  store i64 %17077, i64* %17075, align 8
  %17079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17070, i64* %17079, align 8
  store %struct.Memory* %loadMem1_4765f4, %struct.Memory** %MEMORY
  %loadMem2_4765f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4765f4 = load i64, i64* %3
  %call2_4765f4 = call %struct.Memory* @sub_41fc30.is_same_dragon(%struct.State* %0, i64 %loadPC_4765f4, %struct.Memory* %loadMem2_4765f4)
  store %struct.Memory* %call2_4765f4, %struct.Memory** %MEMORY
  %loadMem_4765f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17081 = getelementptr inbounds %struct.GPR, %struct.GPR* %17080, i32 0, i32 33
  %17082 = getelementptr inbounds %struct.Reg, %struct.Reg* %17081, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %17082 to i64*
  %17083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17084 = getelementptr inbounds %struct.GPR, %struct.GPR* %17083, i32 0, i32 1
  %17085 = getelementptr inbounds %struct.Reg, %struct.Reg* %17084, i32 0, i32 0
  %EAX.i1125 = bitcast %union.anon* %17085 to i32*
  %17086 = load i32, i32* %EAX.i1125
  %17087 = zext i32 %17086 to i64
  %17088 = load i64, i64* %PC.i1124
  %17089 = add i64 %17088, 3
  store i64 %17089, i64* %PC.i1124
  %17090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17090, align 1
  %17091 = and i32 %17086, 255
  %17092 = call i32 @llvm.ctpop.i32(i32 %17091)
  %17093 = trunc i32 %17092 to i8
  %17094 = and i8 %17093, 1
  %17095 = xor i8 %17094, 1
  %17096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17095, i8* %17096, align 1
  %17097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17097, align 1
  %17098 = icmp eq i32 %17086, 0
  %17099 = zext i1 %17098 to i8
  %17100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17099, i8* %17100, align 1
  %17101 = lshr i32 %17086, 31
  %17102 = trunc i32 %17101 to i8
  %17103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17102, i8* %17103, align 1
  %17104 = lshr i32 %17086, 31
  %17105 = xor i32 %17101, %17104
  %17106 = add i32 %17105, %17104
  %17107 = icmp eq i32 %17106, 2
  %17108 = zext i1 %17107 to i8
  %17109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17108, i8* %17109, align 1
  store %struct.Memory* %loadMem_4765f9, %struct.Memory** %MEMORY
  %loadMem_4765fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %17110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17111 = getelementptr inbounds %struct.GPR, %struct.GPR* %17110, i32 0, i32 33
  %17112 = getelementptr inbounds %struct.Reg, %struct.Reg* %17111, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %17112 to i64*
  %17113 = load i64, i64* %PC.i1123
  %17114 = add i64 %17113, 21
  %17115 = load i64, i64* %PC.i1123
  %17116 = add i64 %17115, 6
  %17117 = load i64, i64* %PC.i1123
  %17118 = add i64 %17117, 6
  store i64 %17118, i64* %PC.i1123
  %17119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17120 = load i8, i8* %17119, align 1
  store i8 %17120, i8* %BRANCH_TAKEN, align 1
  %17121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17122 = icmp ne i8 %17120, 0
  %17123 = select i1 %17122, i64 %17114, i64 %17116
  store i64 %17123, i64* %17121, align 8
  store %struct.Memory* %loadMem_4765fc, %struct.Memory** %MEMORY
  %loadBr_4765fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4765fc = icmp eq i8 %loadBr_4765fc, 1
  br i1 %cmpBr_4765fc, label %block_.L_476611, label %block_476602

block_476602:                                     ; preds = %block_4765eb
  %loadMem_476602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17125 = getelementptr inbounds %struct.GPR, %struct.GPR* %17124, i32 0, i32 33
  %17126 = getelementptr inbounds %struct.Reg, %struct.Reg* %17125, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %17126 to i64*
  %17127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17128 = getelementptr inbounds %struct.GPR, %struct.GPR* %17127, i32 0, i32 1
  %17129 = getelementptr inbounds %struct.Reg, %struct.Reg* %17128, i32 0, i32 0
  %RAX.i1121 = bitcast %union.anon* %17129 to i64*
  %17130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17131 = getelementptr inbounds %struct.GPR, %struct.GPR* %17130, i32 0, i32 15
  %17132 = getelementptr inbounds %struct.Reg, %struct.Reg* %17131, i32 0, i32 0
  %RBP.i1122 = bitcast %union.anon* %17132 to i64*
  %17133 = load i64, i64* %RBP.i1122
  %17134 = sub i64 %17133, 1128
  %17135 = load i64, i64* %PC.i1120
  %17136 = add i64 %17135, 7
  store i64 %17136, i64* %PC.i1120
  %17137 = inttoptr i64 %17134 to i32*
  %17138 = load i32, i32* %17137
  %17139 = sext i32 %17138 to i64
  store i64 %17139, i64* %RAX.i1121, align 8
  store %struct.Memory* %loadMem_476602, %struct.Memory** %MEMORY
  %loadMem_476609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17141 = getelementptr inbounds %struct.GPR, %struct.GPR* %17140, i32 0, i32 33
  %17142 = getelementptr inbounds %struct.Reg, %struct.Reg* %17141, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %17142 to i64*
  %17143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17144 = getelementptr inbounds %struct.GPR, %struct.GPR* %17143, i32 0, i32 1
  %17145 = getelementptr inbounds %struct.Reg, %struct.Reg* %17144, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %17145 to i64*
  %17146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17147 = getelementptr inbounds %struct.GPR, %struct.GPR* %17146, i32 0, i32 15
  %17148 = getelementptr inbounds %struct.Reg, %struct.Reg* %17147, i32 0, i32 0
  %RBP.i1119 = bitcast %union.anon* %17148 to i64*
  %17149 = load i64, i64* %RBP.i1119
  %17150 = load i64, i64* %RAX.i1118
  %17151 = add i64 %17149, -640
  %17152 = add i64 %17151, %17150
  %17153 = load i64, i64* %PC.i1117
  %17154 = add i64 %17153, 8
  store i64 %17154, i64* %PC.i1117
  %17155 = inttoptr i64 %17152 to i8*
  store i8 2, i8* %17155
  store %struct.Memory* %loadMem_476609, %struct.Memory** %MEMORY
  br label %block_.L_476611

block_.L_476611:                                  ; preds = %block_476602, %block_4765eb, %block_4765d3
  %loadMem_476611 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17157 = getelementptr inbounds %struct.GPR, %struct.GPR* %17156, i32 0, i32 33
  %17158 = getelementptr inbounds %struct.Reg, %struct.Reg* %17157, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %17158 to i64*
  %17159 = load i64, i64* %PC.i1116
  %17160 = add i64 %17159, 5
  %17161 = load i64, i64* %PC.i1116
  %17162 = add i64 %17161, 5
  store i64 %17162, i64* %PC.i1116
  %17163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17160, i64* %17163, align 8
  store %struct.Memory* %loadMem_476611, %struct.Memory** %MEMORY
  br label %block_.L_476616

block_.L_476616:                                  ; preds = %block_.L_476611
  %loadMem_476616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17165 = getelementptr inbounds %struct.GPR, %struct.GPR* %17164, i32 0, i32 33
  %17166 = getelementptr inbounds %struct.Reg, %struct.Reg* %17165, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %17166 to i64*
  %17167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17168 = getelementptr inbounds %struct.GPR, %struct.GPR* %17167, i32 0, i32 1
  %17169 = getelementptr inbounds %struct.Reg, %struct.Reg* %17168, i32 0, i32 0
  %RAX.i1114 = bitcast %union.anon* %17169 to i64*
  %17170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17171 = getelementptr inbounds %struct.GPR, %struct.GPR* %17170, i32 0, i32 15
  %17172 = getelementptr inbounds %struct.Reg, %struct.Reg* %17171, i32 0, i32 0
  %RBP.i1115 = bitcast %union.anon* %17172 to i64*
  %17173 = load i64, i64* %RBP.i1115
  %17174 = sub i64 %17173, 1128
  %17175 = load i64, i64* %PC.i1113
  %17176 = add i64 %17175, 6
  store i64 %17176, i64* %PC.i1113
  %17177 = inttoptr i64 %17174 to i32*
  %17178 = load i32, i32* %17177
  %17179 = zext i32 %17178 to i64
  store i64 %17179, i64* %RAX.i1114, align 8
  store %struct.Memory* %loadMem_476616, %struct.Memory** %MEMORY
  %loadMem_47661c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17181 = getelementptr inbounds %struct.GPR, %struct.GPR* %17180, i32 0, i32 33
  %17182 = getelementptr inbounds %struct.Reg, %struct.Reg* %17181, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %17182 to i64*
  %17183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17184 = getelementptr inbounds %struct.GPR, %struct.GPR* %17183, i32 0, i32 1
  %17185 = getelementptr inbounds %struct.Reg, %struct.Reg* %17184, i32 0, i32 0
  %RAX.i1112 = bitcast %union.anon* %17185 to i64*
  %17186 = load i64, i64* %RAX.i1112
  %17187 = load i64, i64* %PC.i1111
  %17188 = add i64 %17187, 3
  store i64 %17188, i64* %PC.i1111
  %17189 = trunc i64 %17186 to i32
  %17190 = add i32 1, %17189
  %17191 = zext i32 %17190 to i64
  store i64 %17191, i64* %RAX.i1112, align 8
  %17192 = icmp ult i32 %17190, %17189
  %17193 = icmp ult i32 %17190, 1
  %17194 = or i1 %17192, %17193
  %17195 = zext i1 %17194 to i8
  %17196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17195, i8* %17196, align 1
  %17197 = and i32 %17190, 255
  %17198 = call i32 @llvm.ctpop.i32(i32 %17197)
  %17199 = trunc i32 %17198 to i8
  %17200 = and i8 %17199, 1
  %17201 = xor i8 %17200, 1
  %17202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17201, i8* %17202, align 1
  %17203 = xor i64 1, %17186
  %17204 = trunc i64 %17203 to i32
  %17205 = xor i32 %17204, %17190
  %17206 = lshr i32 %17205, 4
  %17207 = trunc i32 %17206 to i8
  %17208 = and i8 %17207, 1
  %17209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17208, i8* %17209, align 1
  %17210 = icmp eq i32 %17190, 0
  %17211 = zext i1 %17210 to i8
  %17212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17211, i8* %17212, align 1
  %17213 = lshr i32 %17190, 31
  %17214 = trunc i32 %17213 to i8
  %17215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17214, i8* %17215, align 1
  %17216 = lshr i32 %17189, 31
  %17217 = xor i32 %17213, %17216
  %17218 = add i32 %17217, %17213
  %17219 = icmp eq i32 %17218, 2
  %17220 = zext i1 %17219 to i8
  %17221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17220, i8* %17221, align 1
  store %struct.Memory* %loadMem_47661c, %struct.Memory** %MEMORY
  %loadMem_47661f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17223 = getelementptr inbounds %struct.GPR, %struct.GPR* %17222, i32 0, i32 33
  %17224 = getelementptr inbounds %struct.Reg, %struct.Reg* %17223, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %17224 to i64*
  %17225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17226 = getelementptr inbounds %struct.GPR, %struct.GPR* %17225, i32 0, i32 1
  %17227 = getelementptr inbounds %struct.Reg, %struct.Reg* %17226, i32 0, i32 0
  %EAX.i1109 = bitcast %union.anon* %17227 to i32*
  %17228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17229 = getelementptr inbounds %struct.GPR, %struct.GPR* %17228, i32 0, i32 15
  %17230 = getelementptr inbounds %struct.Reg, %struct.Reg* %17229, i32 0, i32 0
  %RBP.i1110 = bitcast %union.anon* %17230 to i64*
  %17231 = load i64, i64* %RBP.i1110
  %17232 = sub i64 %17231, 1128
  %17233 = load i32, i32* %EAX.i1109
  %17234 = zext i32 %17233 to i64
  %17235 = load i64, i64* %PC.i1108
  %17236 = add i64 %17235, 6
  store i64 %17236, i64* %PC.i1108
  %17237 = inttoptr i64 %17232 to i32*
  store i32 %17233, i32* %17237
  store %struct.Memory* %loadMem_47661f, %struct.Memory** %MEMORY
  %loadMem_476625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17239 = getelementptr inbounds %struct.GPR, %struct.GPR* %17238, i32 0, i32 33
  %17240 = getelementptr inbounds %struct.Reg, %struct.Reg* %17239, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %17240 to i64*
  %17241 = load i64, i64* %PC.i1107
  %17242 = add i64 %17241, -98
  %17243 = load i64, i64* %PC.i1107
  %17244 = add i64 %17243, 5
  store i64 %17244, i64* %PC.i1107
  %17245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17242, i64* %17245, align 8
  store %struct.Memory* %loadMem_476625, %struct.Memory** %MEMORY
  br label %block_.L_4765c3

block_.L_47662a:                                  ; preds = %block_.L_4765c3
  %loadMem_47662a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17247 = getelementptr inbounds %struct.GPR, %struct.GPR* %17246, i32 0, i32 33
  %17248 = getelementptr inbounds %struct.Reg, %struct.Reg* %17247, i32 0, i32 0
  %PC.i1106 = bitcast %union.anon* %17248 to i64*
  %17249 = load i64, i64* %PC.i1106
  %17250 = add i64 %17249, 5
  %17251 = load i64, i64* %PC.i1106
  %17252 = add i64 %17251, 5
  store i64 %17252, i64* %PC.i1106
  %17253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17250, i64* %17253, align 8
  store %struct.Memory* %loadMem_47662a, %struct.Memory** %MEMORY
  br label %block_.L_47662f

block_.L_47662f:                                  ; preds = %block_.L_47662a, %block_4765a7, %block_476593, %block_47657b, %block_476566, %block_476551
  %loadMem_47662f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17255 = getelementptr inbounds %struct.GPR, %struct.GPR* %17254, i32 0, i32 33
  %17256 = getelementptr inbounds %struct.Reg, %struct.Reg* %17255, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %17256 to i64*
  %17257 = load i64, i64* %PC.i1105
  %17258 = add i64 %17257, 5
  %17259 = load i64, i64* %PC.i1105
  %17260 = add i64 %17259, 5
  store i64 %17260, i64* %PC.i1105
  %17261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17258, i64* %17261, align 8
  store %struct.Memory* %loadMem_47662f, %struct.Memory** %MEMORY
  br label %block_.L_476634

block_.L_476634:                                  ; preds = %block_.L_47662f
  %loadMem_476634 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17263 = getelementptr inbounds %struct.GPR, %struct.GPR* %17262, i32 0, i32 33
  %17264 = getelementptr inbounds %struct.Reg, %struct.Reg* %17263, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %17264 to i64*
  %17265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17266 = getelementptr inbounds %struct.GPR, %struct.GPR* %17265, i32 0, i32 1
  %17267 = getelementptr inbounds %struct.Reg, %struct.Reg* %17266, i32 0, i32 0
  %RAX.i1103 = bitcast %union.anon* %17267 to i64*
  %17268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17269 = getelementptr inbounds %struct.GPR, %struct.GPR* %17268, i32 0, i32 15
  %17270 = getelementptr inbounds %struct.Reg, %struct.Reg* %17269, i32 0, i32 0
  %RBP.i1104 = bitcast %union.anon* %17270 to i64*
  %17271 = load i64, i64* %RBP.i1104
  %17272 = sub i64 %17271, 48
  %17273 = load i64, i64* %PC.i1102
  %17274 = add i64 %17273, 3
  store i64 %17274, i64* %PC.i1102
  %17275 = inttoptr i64 %17272 to i32*
  %17276 = load i32, i32* %17275
  %17277 = zext i32 %17276 to i64
  store i64 %17277, i64* %RAX.i1103, align 8
  store %struct.Memory* %loadMem_476634, %struct.Memory** %MEMORY
  %loadMem_476637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17279 = getelementptr inbounds %struct.GPR, %struct.GPR* %17278, i32 0, i32 33
  %17280 = getelementptr inbounds %struct.Reg, %struct.Reg* %17279, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %17280 to i64*
  %17281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17282 = getelementptr inbounds %struct.GPR, %struct.GPR* %17281, i32 0, i32 1
  %17283 = getelementptr inbounds %struct.Reg, %struct.Reg* %17282, i32 0, i32 0
  %RAX.i1101 = bitcast %union.anon* %17283 to i64*
  %17284 = load i64, i64* %RAX.i1101
  %17285 = load i64, i64* %PC.i1100
  %17286 = add i64 %17285, 3
  store i64 %17286, i64* %PC.i1100
  %17287 = trunc i64 %17284 to i32
  %17288 = add i32 1, %17287
  %17289 = zext i32 %17288 to i64
  store i64 %17289, i64* %RAX.i1101, align 8
  %17290 = icmp ult i32 %17288, %17287
  %17291 = icmp ult i32 %17288, 1
  %17292 = or i1 %17290, %17291
  %17293 = zext i1 %17292 to i8
  %17294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17293, i8* %17294, align 1
  %17295 = and i32 %17288, 255
  %17296 = call i32 @llvm.ctpop.i32(i32 %17295)
  %17297 = trunc i32 %17296 to i8
  %17298 = and i8 %17297, 1
  %17299 = xor i8 %17298, 1
  %17300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17299, i8* %17300, align 1
  %17301 = xor i64 1, %17284
  %17302 = trunc i64 %17301 to i32
  %17303 = xor i32 %17302, %17288
  %17304 = lshr i32 %17303, 4
  %17305 = trunc i32 %17304 to i8
  %17306 = and i8 %17305, 1
  %17307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17306, i8* %17307, align 1
  %17308 = icmp eq i32 %17288, 0
  %17309 = zext i1 %17308 to i8
  %17310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17309, i8* %17310, align 1
  %17311 = lshr i32 %17288, 31
  %17312 = trunc i32 %17311 to i8
  %17313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17312, i8* %17313, align 1
  %17314 = lshr i32 %17287, 31
  %17315 = xor i32 %17311, %17314
  %17316 = add i32 %17315, %17311
  %17317 = icmp eq i32 %17316, 2
  %17318 = zext i1 %17317 to i8
  %17319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17318, i8* %17319, align 1
  store %struct.Memory* %loadMem_476637, %struct.Memory** %MEMORY
  %loadMem_47663a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17321 = getelementptr inbounds %struct.GPR, %struct.GPR* %17320, i32 0, i32 33
  %17322 = getelementptr inbounds %struct.Reg, %struct.Reg* %17321, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %17322 to i64*
  %17323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17324 = getelementptr inbounds %struct.GPR, %struct.GPR* %17323, i32 0, i32 1
  %17325 = getelementptr inbounds %struct.Reg, %struct.Reg* %17324, i32 0, i32 0
  %EAX.i1098 = bitcast %union.anon* %17325 to i32*
  %17326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17327 = getelementptr inbounds %struct.GPR, %struct.GPR* %17326, i32 0, i32 15
  %17328 = getelementptr inbounds %struct.Reg, %struct.Reg* %17327, i32 0, i32 0
  %RBP.i1099 = bitcast %union.anon* %17328 to i64*
  %17329 = load i64, i64* %RBP.i1099
  %17330 = sub i64 %17329, 48
  %17331 = load i32, i32* %EAX.i1098
  %17332 = zext i32 %17331 to i64
  %17333 = load i64, i64* %PC.i1097
  %17334 = add i64 %17333, 3
  store i64 %17334, i64* %PC.i1097
  %17335 = inttoptr i64 %17330 to i32*
  store i32 %17331, i32* %17335
  store %struct.Memory* %loadMem_47663a, %struct.Memory** %MEMORY
  %loadMem_47663d = load %struct.Memory*, %struct.Memory** %MEMORY
  %17336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17337 = getelementptr inbounds %struct.GPR, %struct.GPR* %17336, i32 0, i32 33
  %17338 = getelementptr inbounds %struct.Reg, %struct.Reg* %17337, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %17338 to i64*
  %17339 = load i64, i64* %PC.i1096
  %17340 = add i64 %17339, -249
  %17341 = load i64, i64* %PC.i1096
  %17342 = add i64 %17341, 5
  store i64 %17342, i64* %PC.i1096
  %17343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17340, i64* %17343, align 8
  store %struct.Memory* %loadMem_47663d, %struct.Memory** %MEMORY
  br label %block_.L_476544

block_.L_476642:                                  ; preds = %block_.L_476544
  %loadMem_476642 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17345 = getelementptr inbounds %struct.GPR, %struct.GPR* %17344, i32 0, i32 33
  %17346 = getelementptr inbounds %struct.Reg, %struct.Reg* %17345, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %17346 to i64*
  %17347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17348 = getelementptr inbounds %struct.GPR, %struct.GPR* %17347, i32 0, i32 15
  %17349 = getelementptr inbounds %struct.Reg, %struct.Reg* %17348, i32 0, i32 0
  %RBP.i1095 = bitcast %union.anon* %17349 to i64*
  %17350 = load i64, i64* %RBP.i1095
  %17351 = sub i64 %17350, 52
  %17352 = load i64, i64* %PC.i1094
  %17353 = add i64 %17352, 7
  store i64 %17353, i64* %PC.i1094
  %17354 = inttoptr i64 %17351 to i32*
  store i32 1, i32* %17354
  store %struct.Memory* %loadMem_476642, %struct.Memory** %MEMORY
  %loadMem_476649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17356 = getelementptr inbounds %struct.GPR, %struct.GPR* %17355, i32 0, i32 33
  %17357 = getelementptr inbounds %struct.Reg, %struct.Reg* %17356, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %17357 to i64*
  %17358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17359 = getelementptr inbounds %struct.GPR, %struct.GPR* %17358, i32 0, i32 15
  %17360 = getelementptr inbounds %struct.Reg, %struct.Reg* %17359, i32 0, i32 0
  %RBP.i1093 = bitcast %union.anon* %17360 to i64*
  %17361 = load i64, i64* %RBP.i1093
  %17362 = sub i64 %17361, 36
  %17363 = load i64, i64* %PC.i1092
  %17364 = add i64 %17363, 7
  store i64 %17364, i64* %PC.i1092
  %17365 = inttoptr i64 %17362 to i32*
  store i32 0, i32* %17365
  store %struct.Memory* %loadMem_476649, %struct.Memory** %MEMORY
  br label %block_.L_476650

block_.L_476650:                                  ; preds = %block_.L_476703, %block_.L_476642
  %loadMem_476650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17367 = getelementptr inbounds %struct.GPR, %struct.GPR* %17366, i32 0, i32 33
  %17368 = getelementptr inbounds %struct.Reg, %struct.Reg* %17367, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %17368 to i64*
  %17369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17370 = getelementptr inbounds %struct.GPR, %struct.GPR* %17369, i32 0, i32 1
  %17371 = getelementptr inbounds %struct.Reg, %struct.Reg* %17370, i32 0, i32 0
  %RAX.i1090 = bitcast %union.anon* %17371 to i64*
  %17372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17373 = getelementptr inbounds %struct.GPR, %struct.GPR* %17372, i32 0, i32 15
  %17374 = getelementptr inbounds %struct.Reg, %struct.Reg* %17373, i32 0, i32 0
  %RBP.i1091 = bitcast %union.anon* %17374 to i64*
  %17375 = load i64, i64* %RBP.i1091
  %17376 = sub i64 %17375, 36
  %17377 = load i64, i64* %PC.i1089
  %17378 = add i64 %17377, 3
  store i64 %17378, i64* %PC.i1089
  %17379 = inttoptr i64 %17376 to i32*
  %17380 = load i32, i32* %17379
  %17381 = zext i32 %17380 to i64
  store i64 %17381, i64* %RAX.i1090, align 8
  store %struct.Memory* %loadMem_476650, %struct.Memory** %MEMORY
  %loadMem_476653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17383 = getelementptr inbounds %struct.GPR, %struct.GPR* %17382, i32 0, i32 33
  %17384 = getelementptr inbounds %struct.Reg, %struct.Reg* %17383, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %17384 to i64*
  %17385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17386 = getelementptr inbounds %struct.GPR, %struct.GPR* %17385, i32 0, i32 1
  %17387 = getelementptr inbounds %struct.Reg, %struct.Reg* %17386, i32 0, i32 0
  %EAX.i1088 = bitcast %union.anon* %17387 to i32*
  %17388 = load i32, i32* %EAX.i1088
  %17389 = zext i32 %17388 to i64
  %17390 = load i64, i64* %PC.i1087
  %17391 = add i64 %17390, 7
  store i64 %17391, i64* %PC.i1087
  %17392 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %17393 = sub i32 %17388, %17392
  %17394 = icmp ult i32 %17388, %17392
  %17395 = zext i1 %17394 to i8
  %17396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17395, i8* %17396, align 1
  %17397 = and i32 %17393, 255
  %17398 = call i32 @llvm.ctpop.i32(i32 %17397)
  %17399 = trunc i32 %17398 to i8
  %17400 = and i8 %17399, 1
  %17401 = xor i8 %17400, 1
  %17402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17401, i8* %17402, align 1
  %17403 = xor i32 %17392, %17388
  %17404 = xor i32 %17403, %17393
  %17405 = lshr i32 %17404, 4
  %17406 = trunc i32 %17405 to i8
  %17407 = and i8 %17406, 1
  %17408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17407, i8* %17408, align 1
  %17409 = icmp eq i32 %17393, 0
  %17410 = zext i1 %17409 to i8
  %17411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17410, i8* %17411, align 1
  %17412 = lshr i32 %17393, 31
  %17413 = trunc i32 %17412 to i8
  %17414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17413, i8* %17414, align 1
  %17415 = lshr i32 %17388, 31
  %17416 = lshr i32 %17392, 31
  %17417 = xor i32 %17416, %17415
  %17418 = xor i32 %17412, %17415
  %17419 = add i32 %17418, %17417
  %17420 = icmp eq i32 %17419, 2
  %17421 = zext i1 %17420 to i8
  %17422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17421, i8* %17422, align 1
  store %struct.Memory* %loadMem_476653, %struct.Memory** %MEMORY
  %loadMem_47665a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17424 = getelementptr inbounds %struct.GPR, %struct.GPR* %17423, i32 0, i32 33
  %17425 = getelementptr inbounds %struct.Reg, %struct.Reg* %17424, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %17425 to i64*
  %17426 = load i64, i64* %PC.i1086
  %17427 = add i64 %17426, 183
  %17428 = load i64, i64* %PC.i1086
  %17429 = add i64 %17428, 6
  %17430 = load i64, i64* %PC.i1086
  %17431 = add i64 %17430, 6
  store i64 %17431, i64* %PC.i1086
  %17432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17433 = load i8, i8* %17432, align 1
  %17434 = icmp ne i8 %17433, 0
  %17435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17436 = load i8, i8* %17435, align 1
  %17437 = icmp ne i8 %17436, 0
  %17438 = xor i1 %17434, %17437
  %17439 = xor i1 %17438, true
  %17440 = zext i1 %17439 to i8
  store i8 %17440, i8* %BRANCH_TAKEN, align 1
  %17441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17442 = select i1 %17438, i64 %17429, i64 %17427
  store i64 %17442, i64* %17441, align 8
  store %struct.Memory* %loadMem_47665a, %struct.Memory** %MEMORY
  %loadBr_47665a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47665a = icmp eq i8 %loadBr_47665a, 1
  br i1 %cmpBr_47665a, label %block_.L_476711, label %block_476660

block_476660:                                     ; preds = %block_.L_476650
  %loadMem_476660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17444 = getelementptr inbounds %struct.GPR, %struct.GPR* %17443, i32 0, i32 33
  %17445 = getelementptr inbounds %struct.Reg, %struct.Reg* %17444, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %17445 to i64*
  %17446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17447 = getelementptr inbounds %struct.GPR, %struct.GPR* %17446, i32 0, i32 15
  %17448 = getelementptr inbounds %struct.Reg, %struct.Reg* %17447, i32 0, i32 0
  %RBP.i1085 = bitcast %union.anon* %17448 to i64*
  %17449 = load i64, i64* %RBP.i1085
  %17450 = sub i64 %17449, 40
  %17451 = load i64, i64* %PC.i1084
  %17452 = add i64 %17451, 7
  store i64 %17452, i64* %PC.i1084
  %17453 = inttoptr i64 %17450 to i32*
  store i32 0, i32* %17453
  store %struct.Memory* %loadMem_476660, %struct.Memory** %MEMORY
  br label %block_.L_476667

block_.L_476667:                                  ; preds = %block_.L_4766f0, %block_476660
  %loadMem_476667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17455 = getelementptr inbounds %struct.GPR, %struct.GPR* %17454, i32 0, i32 33
  %17456 = getelementptr inbounds %struct.Reg, %struct.Reg* %17455, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %17456 to i64*
  %17457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17458 = getelementptr inbounds %struct.GPR, %struct.GPR* %17457, i32 0, i32 1
  %17459 = getelementptr inbounds %struct.Reg, %struct.Reg* %17458, i32 0, i32 0
  %RAX.i1082 = bitcast %union.anon* %17459 to i64*
  %17460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17461 = getelementptr inbounds %struct.GPR, %struct.GPR* %17460, i32 0, i32 15
  %17462 = getelementptr inbounds %struct.Reg, %struct.Reg* %17461, i32 0, i32 0
  %RBP.i1083 = bitcast %union.anon* %17462 to i64*
  %17463 = load i64, i64* %RBP.i1083
  %17464 = sub i64 %17463, 40
  %17465 = load i64, i64* %PC.i1081
  %17466 = add i64 %17465, 3
  store i64 %17466, i64* %PC.i1081
  %17467 = inttoptr i64 %17464 to i32*
  %17468 = load i32, i32* %17467
  %17469 = zext i32 %17468 to i64
  store i64 %17469, i64* %RAX.i1082, align 8
  store %struct.Memory* %loadMem_476667, %struct.Memory** %MEMORY
  %loadMem_47666a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17471 = getelementptr inbounds %struct.GPR, %struct.GPR* %17470, i32 0, i32 33
  %17472 = getelementptr inbounds %struct.Reg, %struct.Reg* %17471, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %17472 to i64*
  %17473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17474 = getelementptr inbounds %struct.GPR, %struct.GPR* %17473, i32 0, i32 1
  %17475 = getelementptr inbounds %struct.Reg, %struct.Reg* %17474, i32 0, i32 0
  %EAX.i1080 = bitcast %union.anon* %17475 to i32*
  %17476 = load i32, i32* %EAX.i1080
  %17477 = zext i32 %17476 to i64
  %17478 = load i64, i64* %PC.i1079
  %17479 = add i64 %17478, 7
  store i64 %17479, i64* %PC.i1079
  %17480 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %17481 = sub i32 %17476, %17480
  %17482 = icmp ult i32 %17476, %17480
  %17483 = zext i1 %17482 to i8
  %17484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17483, i8* %17484, align 1
  %17485 = and i32 %17481, 255
  %17486 = call i32 @llvm.ctpop.i32(i32 %17485)
  %17487 = trunc i32 %17486 to i8
  %17488 = and i8 %17487, 1
  %17489 = xor i8 %17488, 1
  %17490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17489, i8* %17490, align 1
  %17491 = xor i32 %17480, %17476
  %17492 = xor i32 %17491, %17481
  %17493 = lshr i32 %17492, 4
  %17494 = trunc i32 %17493 to i8
  %17495 = and i8 %17494, 1
  %17496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17495, i8* %17496, align 1
  %17497 = icmp eq i32 %17481, 0
  %17498 = zext i1 %17497 to i8
  %17499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17498, i8* %17499, align 1
  %17500 = lshr i32 %17481, 31
  %17501 = trunc i32 %17500 to i8
  %17502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17501, i8* %17502, align 1
  %17503 = lshr i32 %17476, 31
  %17504 = lshr i32 %17480, 31
  %17505 = xor i32 %17504, %17503
  %17506 = xor i32 %17500, %17503
  %17507 = add i32 %17506, %17505
  %17508 = icmp eq i32 %17507, 2
  %17509 = zext i1 %17508 to i8
  %17510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17509, i8* %17510, align 1
  store %struct.Memory* %loadMem_47666a, %struct.Memory** %MEMORY
  %loadMem_476671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17512 = getelementptr inbounds %struct.GPR, %struct.GPR* %17511, i32 0, i32 33
  %17513 = getelementptr inbounds %struct.Reg, %struct.Reg* %17512, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %17513 to i64*
  %17514 = load i64, i64* %PC.i1078
  %17515 = add i64 %17514, 141
  %17516 = load i64, i64* %PC.i1078
  %17517 = add i64 %17516, 6
  %17518 = load i64, i64* %PC.i1078
  %17519 = add i64 %17518, 6
  store i64 %17519, i64* %PC.i1078
  %17520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17521 = load i8, i8* %17520, align 1
  %17522 = icmp ne i8 %17521, 0
  %17523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17524 = load i8, i8* %17523, align 1
  %17525 = icmp ne i8 %17524, 0
  %17526 = xor i1 %17522, %17525
  %17527 = xor i1 %17526, true
  %17528 = zext i1 %17527 to i8
  store i8 %17528, i8* %BRANCH_TAKEN, align 1
  %17529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17530 = select i1 %17526, i64 %17517, i64 %17515
  store i64 %17530, i64* %17529, align 8
  store %struct.Memory* %loadMem_476671, %struct.Memory** %MEMORY
  %loadBr_476671 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476671 = icmp eq i8 %loadBr_476671, 1
  br i1 %cmpBr_476671, label %block_.L_4766fe, label %block_476677

block_476677:                                     ; preds = %block_.L_476667
  %loadMem_476677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17532 = getelementptr inbounds %struct.GPR, %struct.GPR* %17531, i32 0, i32 33
  %17533 = getelementptr inbounds %struct.Reg, %struct.Reg* %17532, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %17533 to i64*
  %17534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17535 = getelementptr inbounds %struct.GPR, %struct.GPR* %17534, i32 0, i32 1
  %17536 = getelementptr inbounds %struct.Reg, %struct.Reg* %17535, i32 0, i32 0
  %RAX.i1076 = bitcast %union.anon* %17536 to i64*
  %17537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17538 = getelementptr inbounds %struct.GPR, %struct.GPR* %17537, i32 0, i32 15
  %17539 = getelementptr inbounds %struct.Reg, %struct.Reg* %17538, i32 0, i32 0
  %RBP.i1077 = bitcast %union.anon* %17539 to i64*
  %17540 = load i64, i64* %RBP.i1077
  %17541 = sub i64 %17540, 36
  %17542 = load i64, i64* %PC.i1075
  %17543 = add i64 %17542, 4
  store i64 %17543, i64* %PC.i1075
  %17544 = inttoptr i64 %17541 to i32*
  %17545 = load i32, i32* %17544
  %17546 = sext i32 %17545 to i64
  %17547 = mul i64 %17546, 20
  %17548 = trunc i64 %17547 to i32
  %17549 = and i64 %17547, 4294967295
  store i64 %17549, i64* %RAX.i1076, align 8
  %17550 = shl i64 %17547, 32
  %17551 = ashr exact i64 %17550, 32
  %17552 = icmp ne i64 %17551, %17547
  %17553 = zext i1 %17552 to i8
  %17554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17553, i8* %17554, align 1
  %17555 = and i32 %17548, 255
  %17556 = call i32 @llvm.ctpop.i32(i32 %17555)
  %17557 = trunc i32 %17556 to i8
  %17558 = and i8 %17557, 1
  %17559 = xor i8 %17558, 1
  %17560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17559, i8* %17560, align 1
  %17561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17561, align 1
  %17562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %17562, align 1
  %17563 = lshr i32 %17548, 31
  %17564 = trunc i32 %17563 to i8
  %17565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17564, i8* %17565, align 1
  %17566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17553, i8* %17566, align 1
  store %struct.Memory* %loadMem_476677, %struct.Memory** %MEMORY
  %loadMem_47667b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17568 = getelementptr inbounds %struct.GPR, %struct.GPR* %17567, i32 0, i32 33
  %17569 = getelementptr inbounds %struct.Reg, %struct.Reg* %17568, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %17569 to i64*
  %17570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17571 = getelementptr inbounds %struct.GPR, %struct.GPR* %17570, i32 0, i32 1
  %17572 = getelementptr inbounds %struct.Reg, %struct.Reg* %17571, i32 0, i32 0
  %RAX.i1074 = bitcast %union.anon* %17572 to i64*
  %17573 = load i64, i64* %RAX.i1074
  %17574 = load i64, i64* %PC.i1073
  %17575 = add i64 %17574, 3
  store i64 %17575, i64* %PC.i1073
  %17576 = trunc i64 %17573 to i32
  %17577 = add i32 21, %17576
  %17578 = zext i32 %17577 to i64
  store i64 %17578, i64* %RAX.i1074, align 8
  %17579 = icmp ult i32 %17577, %17576
  %17580 = icmp ult i32 %17577, 21
  %17581 = or i1 %17579, %17580
  %17582 = zext i1 %17581 to i8
  %17583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17582, i8* %17583, align 1
  %17584 = and i32 %17577, 255
  %17585 = call i32 @llvm.ctpop.i32(i32 %17584)
  %17586 = trunc i32 %17585 to i8
  %17587 = and i8 %17586, 1
  %17588 = xor i8 %17587, 1
  %17589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17588, i8* %17589, align 1
  %17590 = xor i64 21, %17573
  %17591 = trunc i64 %17590 to i32
  %17592 = xor i32 %17591, %17577
  %17593 = lshr i32 %17592, 4
  %17594 = trunc i32 %17593 to i8
  %17595 = and i8 %17594, 1
  %17596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17595, i8* %17596, align 1
  %17597 = icmp eq i32 %17577, 0
  %17598 = zext i1 %17597 to i8
  %17599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17598, i8* %17599, align 1
  %17600 = lshr i32 %17577, 31
  %17601 = trunc i32 %17600 to i8
  %17602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17601, i8* %17602, align 1
  %17603 = lshr i32 %17576, 31
  %17604 = xor i32 %17600, %17603
  %17605 = add i32 %17604, %17600
  %17606 = icmp eq i32 %17605, 2
  %17607 = zext i1 %17606 to i8
  %17608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17607, i8* %17608, align 1
  store %struct.Memory* %loadMem_47667b, %struct.Memory** %MEMORY
  %loadMem_47667e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17610 = getelementptr inbounds %struct.GPR, %struct.GPR* %17609, i32 0, i32 33
  %17611 = getelementptr inbounds %struct.Reg, %struct.Reg* %17610, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %17611 to i64*
  %17612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17613 = getelementptr inbounds %struct.GPR, %struct.GPR* %17612, i32 0, i32 1
  %17614 = getelementptr inbounds %struct.Reg, %struct.Reg* %17613, i32 0, i32 0
  %RAX.i1071 = bitcast %union.anon* %17614 to i64*
  %17615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17616 = getelementptr inbounds %struct.GPR, %struct.GPR* %17615, i32 0, i32 15
  %17617 = getelementptr inbounds %struct.Reg, %struct.Reg* %17616, i32 0, i32 0
  %RBP.i1072 = bitcast %union.anon* %17617 to i64*
  %17618 = load i64, i64* %RAX.i1071
  %17619 = load i64, i64* %RBP.i1072
  %17620 = sub i64 %17619, 40
  %17621 = load i64, i64* %PC.i1070
  %17622 = add i64 %17621, 3
  store i64 %17622, i64* %PC.i1070
  %17623 = trunc i64 %17618 to i32
  %17624 = inttoptr i64 %17620 to i32*
  %17625 = load i32, i32* %17624
  %17626 = add i32 %17625, %17623
  %17627 = zext i32 %17626 to i64
  store i64 %17627, i64* %RAX.i1071, align 8
  %17628 = icmp ult i32 %17626, %17623
  %17629 = icmp ult i32 %17626, %17625
  %17630 = or i1 %17628, %17629
  %17631 = zext i1 %17630 to i8
  %17632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17631, i8* %17632, align 1
  %17633 = and i32 %17626, 255
  %17634 = call i32 @llvm.ctpop.i32(i32 %17633)
  %17635 = trunc i32 %17634 to i8
  %17636 = and i8 %17635, 1
  %17637 = xor i8 %17636, 1
  %17638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17637, i8* %17638, align 1
  %17639 = xor i32 %17625, %17623
  %17640 = xor i32 %17639, %17626
  %17641 = lshr i32 %17640, 4
  %17642 = trunc i32 %17641 to i8
  %17643 = and i8 %17642, 1
  %17644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17643, i8* %17644, align 1
  %17645 = icmp eq i32 %17626, 0
  %17646 = zext i1 %17645 to i8
  %17647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17646, i8* %17647, align 1
  %17648 = lshr i32 %17626, 31
  %17649 = trunc i32 %17648 to i8
  %17650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17649, i8* %17650, align 1
  %17651 = lshr i32 %17623, 31
  %17652 = lshr i32 %17625, 31
  %17653 = xor i32 %17648, %17651
  %17654 = xor i32 %17648, %17652
  %17655 = add i32 %17653, %17654
  %17656 = icmp eq i32 %17655, 2
  %17657 = zext i1 %17656 to i8
  %17658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17657, i8* %17658, align 1
  store %struct.Memory* %loadMem_47667e, %struct.Memory** %MEMORY
  %loadMem_476681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17660 = getelementptr inbounds %struct.GPR, %struct.GPR* %17659, i32 0, i32 33
  %17661 = getelementptr inbounds %struct.Reg, %struct.Reg* %17660, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %17661 to i64*
  %17662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17663 = getelementptr inbounds %struct.GPR, %struct.GPR* %17662, i32 0, i32 1
  %17664 = getelementptr inbounds %struct.Reg, %struct.Reg* %17663, i32 0, i32 0
  %EAX.i1068 = bitcast %union.anon* %17664 to i32*
  %17665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17666 = getelementptr inbounds %struct.GPR, %struct.GPR* %17665, i32 0, i32 5
  %17667 = getelementptr inbounds %struct.Reg, %struct.Reg* %17666, i32 0, i32 0
  %RCX.i1069 = bitcast %union.anon* %17667 to i64*
  %17668 = load i32, i32* %EAX.i1068
  %17669 = zext i32 %17668 to i64
  %17670 = load i64, i64* %PC.i1067
  %17671 = add i64 %17670, 3
  store i64 %17671, i64* %PC.i1067
  %17672 = shl i64 %17669, 32
  %17673 = ashr exact i64 %17672, 32
  store i64 %17673, i64* %RCX.i1069, align 8
  store %struct.Memory* %loadMem_476681, %struct.Memory** %MEMORY
  %loadMem_476684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17675 = getelementptr inbounds %struct.GPR, %struct.GPR* %17674, i32 0, i32 33
  %17676 = getelementptr inbounds %struct.Reg, %struct.Reg* %17675, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %17676 to i64*
  %17677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17678 = getelementptr inbounds %struct.GPR, %struct.GPR* %17677, i32 0, i32 5
  %17679 = getelementptr inbounds %struct.Reg, %struct.Reg* %17678, i32 0, i32 0
  %RCX.i1065 = bitcast %union.anon* %17679 to i64*
  %17680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17681 = getelementptr inbounds %struct.GPR, %struct.GPR* %17680, i32 0, i32 15
  %17682 = getelementptr inbounds %struct.Reg, %struct.Reg* %17681, i32 0, i32 0
  %RBP.i1066 = bitcast %union.anon* %17682 to i64*
  %17683 = load i64, i64* %RBP.i1066
  %17684 = load i64, i64* %RCX.i1065
  %17685 = add i64 %17683, -640
  %17686 = add i64 %17685, %17684
  %17687 = load i64, i64* %PC.i1064
  %17688 = add i64 %17687, 8
  store i64 %17688, i64* %PC.i1064
  %17689 = inttoptr i64 %17686 to i8*
  %17690 = load i8, i8* %17689
  %17691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17691, align 1
  %17692 = zext i8 %17690 to i32
  %17693 = call i32 @llvm.ctpop.i32(i32 %17692)
  %17694 = trunc i32 %17693 to i8
  %17695 = and i8 %17694, 1
  %17696 = xor i8 %17695, 1
  %17697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17696, i8* %17697, align 1
  %17698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17698, align 1
  %17699 = icmp eq i8 %17690, 0
  %17700 = zext i1 %17699 to i8
  %17701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17700, i8* %17701, align 1
  %17702 = lshr i8 %17690, 7
  %17703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17702, i8* %17703, align 1
  %17704 = lshr i8 %17690, 7
  %17705 = xor i8 %17702, %17704
  %17706 = add i8 %17705, %17704
  %17707 = icmp eq i8 %17706, 2
  %17708 = zext i1 %17707 to i8
  %17709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17708, i8* %17709, align 1
  store %struct.Memory* %loadMem_476684, %struct.Memory** %MEMORY
  %loadMem_47668c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17711 = getelementptr inbounds %struct.GPR, %struct.GPR* %17710, i32 0, i32 33
  %17712 = getelementptr inbounds %struct.Reg, %struct.Reg* %17711, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %17712 to i64*
  %17713 = load i64, i64* %PC.i1063
  %17714 = add i64 %17713, 95
  %17715 = load i64, i64* %PC.i1063
  %17716 = add i64 %17715, 6
  %17717 = load i64, i64* %PC.i1063
  %17718 = add i64 %17717, 6
  store i64 %17718, i64* %PC.i1063
  %17719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17720 = load i8, i8* %17719, align 1
  store i8 %17720, i8* %BRANCH_TAKEN, align 1
  %17721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17722 = icmp ne i8 %17720, 0
  %17723 = select i1 %17722, i64 %17714, i64 %17716
  store i64 %17723, i64* %17721, align 8
  store %struct.Memory* %loadMem_47668c, %struct.Memory** %MEMORY
  %loadBr_47668c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47668c = icmp eq i8 %loadBr_47668c, 1
  br i1 %cmpBr_47668c, label %block_.L_4766eb, label %block_476692

block_476692:                                     ; preds = %block_476677
  %loadMem_476692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17725 = getelementptr inbounds %struct.GPR, %struct.GPR* %17724, i32 0, i32 33
  %17726 = getelementptr inbounds %struct.Reg, %struct.Reg* %17725, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %17726 to i64*
  %17727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17728 = getelementptr inbounds %struct.GPR, %struct.GPR* %17727, i32 0, i32 1
  %17729 = getelementptr inbounds %struct.Reg, %struct.Reg* %17728, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %17729 to i64*
  %17730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17731 = getelementptr inbounds %struct.GPR, %struct.GPR* %17730, i32 0, i32 15
  %17732 = getelementptr inbounds %struct.Reg, %struct.Reg* %17731, i32 0, i32 0
  %RBP.i1062 = bitcast %union.anon* %17732 to i64*
  %17733 = load i64, i64* %RBP.i1062
  %17734 = sub i64 %17733, 36
  %17735 = load i64, i64* %PC.i1060
  %17736 = add i64 %17735, 4
  store i64 %17736, i64* %PC.i1060
  %17737 = inttoptr i64 %17734 to i32*
  %17738 = load i32, i32* %17737
  %17739 = sext i32 %17738 to i64
  %17740 = mul i64 %17739, 20
  %17741 = trunc i64 %17740 to i32
  %17742 = and i64 %17740, 4294967295
  store i64 %17742, i64* %RAX.i1061, align 8
  %17743 = shl i64 %17740, 32
  %17744 = ashr exact i64 %17743, 32
  %17745 = icmp ne i64 %17744, %17740
  %17746 = zext i1 %17745 to i8
  %17747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17746, i8* %17747, align 1
  %17748 = and i32 %17741, 255
  %17749 = call i32 @llvm.ctpop.i32(i32 %17748)
  %17750 = trunc i32 %17749 to i8
  %17751 = and i8 %17750, 1
  %17752 = xor i8 %17751, 1
  %17753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17752, i8* %17753, align 1
  %17754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17754, align 1
  %17755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %17755, align 1
  %17756 = lshr i32 %17741, 31
  %17757 = trunc i32 %17756 to i8
  %17758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17757, i8* %17758, align 1
  %17759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17746, i8* %17759, align 1
  store %struct.Memory* %loadMem_476692, %struct.Memory** %MEMORY
  %loadMem_476696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17761 = getelementptr inbounds %struct.GPR, %struct.GPR* %17760, i32 0, i32 33
  %17762 = getelementptr inbounds %struct.Reg, %struct.Reg* %17761, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %17762 to i64*
  %17763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17764 = getelementptr inbounds %struct.GPR, %struct.GPR* %17763, i32 0, i32 1
  %17765 = getelementptr inbounds %struct.Reg, %struct.Reg* %17764, i32 0, i32 0
  %RAX.i1059 = bitcast %union.anon* %17765 to i64*
  %17766 = load i64, i64* %RAX.i1059
  %17767 = load i64, i64* %PC.i1058
  %17768 = add i64 %17767, 3
  store i64 %17768, i64* %PC.i1058
  %17769 = trunc i64 %17766 to i32
  %17770 = add i32 21, %17769
  %17771 = zext i32 %17770 to i64
  store i64 %17771, i64* %RAX.i1059, align 8
  %17772 = icmp ult i32 %17770, %17769
  %17773 = icmp ult i32 %17770, 21
  %17774 = or i1 %17772, %17773
  %17775 = zext i1 %17774 to i8
  %17776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17775, i8* %17776, align 1
  %17777 = and i32 %17770, 255
  %17778 = call i32 @llvm.ctpop.i32(i32 %17777)
  %17779 = trunc i32 %17778 to i8
  %17780 = and i8 %17779, 1
  %17781 = xor i8 %17780, 1
  %17782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17781, i8* %17782, align 1
  %17783 = xor i64 21, %17766
  %17784 = trunc i64 %17783 to i32
  %17785 = xor i32 %17784, %17770
  %17786 = lshr i32 %17785, 4
  %17787 = trunc i32 %17786 to i8
  %17788 = and i8 %17787, 1
  %17789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17788, i8* %17789, align 1
  %17790 = icmp eq i32 %17770, 0
  %17791 = zext i1 %17790 to i8
  %17792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17791, i8* %17792, align 1
  %17793 = lshr i32 %17770, 31
  %17794 = trunc i32 %17793 to i8
  %17795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17794, i8* %17795, align 1
  %17796 = lshr i32 %17769, 31
  %17797 = xor i32 %17793, %17796
  %17798 = add i32 %17797, %17793
  %17799 = icmp eq i32 %17798, 2
  %17800 = zext i1 %17799 to i8
  %17801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17800, i8* %17801, align 1
  store %struct.Memory* %loadMem_476696, %struct.Memory** %MEMORY
  %loadMem_476699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17803 = getelementptr inbounds %struct.GPR, %struct.GPR* %17802, i32 0, i32 33
  %17804 = getelementptr inbounds %struct.Reg, %struct.Reg* %17803, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %17804 to i64*
  %17805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17806 = getelementptr inbounds %struct.GPR, %struct.GPR* %17805, i32 0, i32 1
  %17807 = getelementptr inbounds %struct.Reg, %struct.Reg* %17806, i32 0, i32 0
  %RAX.i1056 = bitcast %union.anon* %17807 to i64*
  %17808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17809 = getelementptr inbounds %struct.GPR, %struct.GPR* %17808, i32 0, i32 15
  %17810 = getelementptr inbounds %struct.Reg, %struct.Reg* %17809, i32 0, i32 0
  %RBP.i1057 = bitcast %union.anon* %17810 to i64*
  %17811 = load i64, i64* %RAX.i1056
  %17812 = load i64, i64* %RBP.i1057
  %17813 = sub i64 %17812, 40
  %17814 = load i64, i64* %PC.i1055
  %17815 = add i64 %17814, 3
  store i64 %17815, i64* %PC.i1055
  %17816 = trunc i64 %17811 to i32
  %17817 = inttoptr i64 %17813 to i32*
  %17818 = load i32, i32* %17817
  %17819 = add i32 %17818, %17816
  %17820 = zext i32 %17819 to i64
  store i64 %17820, i64* %RAX.i1056, align 8
  %17821 = icmp ult i32 %17819, %17816
  %17822 = icmp ult i32 %17819, %17818
  %17823 = or i1 %17821, %17822
  %17824 = zext i1 %17823 to i8
  %17825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17824, i8* %17825, align 1
  %17826 = and i32 %17819, 255
  %17827 = call i32 @llvm.ctpop.i32(i32 %17826)
  %17828 = trunc i32 %17827 to i8
  %17829 = and i8 %17828, 1
  %17830 = xor i8 %17829, 1
  %17831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17830, i8* %17831, align 1
  %17832 = xor i32 %17818, %17816
  %17833 = xor i32 %17832, %17819
  %17834 = lshr i32 %17833, 4
  %17835 = trunc i32 %17834 to i8
  %17836 = and i8 %17835, 1
  %17837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17836, i8* %17837, align 1
  %17838 = icmp eq i32 %17819, 0
  %17839 = zext i1 %17838 to i8
  %17840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17839, i8* %17840, align 1
  %17841 = lshr i32 %17819, 31
  %17842 = trunc i32 %17841 to i8
  %17843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17842, i8* %17843, align 1
  %17844 = lshr i32 %17816, 31
  %17845 = lshr i32 %17818, 31
  %17846 = xor i32 %17841, %17844
  %17847 = xor i32 %17841, %17845
  %17848 = add i32 %17846, %17847
  %17849 = icmp eq i32 %17848, 2
  %17850 = zext i1 %17849 to i8
  %17851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17850, i8* %17851, align 1
  store %struct.Memory* %loadMem_476699, %struct.Memory** %MEMORY
  %loadMem_47669c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17853 = getelementptr inbounds %struct.GPR, %struct.GPR* %17852, i32 0, i32 33
  %17854 = getelementptr inbounds %struct.Reg, %struct.Reg* %17853, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %17854 to i64*
  %17855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17856 = getelementptr inbounds %struct.GPR, %struct.GPR* %17855, i32 0, i32 1
  %17857 = getelementptr inbounds %struct.Reg, %struct.Reg* %17856, i32 0, i32 0
  %EAX.i1053 = bitcast %union.anon* %17857 to i32*
  %17858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17859 = getelementptr inbounds %struct.GPR, %struct.GPR* %17858, i32 0, i32 5
  %17860 = getelementptr inbounds %struct.Reg, %struct.Reg* %17859, i32 0, i32 0
  %RCX.i1054 = bitcast %union.anon* %17860 to i64*
  %17861 = load i32, i32* %EAX.i1053
  %17862 = zext i32 %17861 to i64
  %17863 = load i64, i64* %PC.i1052
  %17864 = add i64 %17863, 3
  store i64 %17864, i64* %PC.i1052
  %17865 = shl i64 %17862, 32
  %17866 = ashr exact i64 %17865, 32
  store i64 %17866, i64* %RCX.i1054, align 8
  store %struct.Memory* %loadMem_47669c, %struct.Memory** %MEMORY
  %loadMem_47669f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17868 = getelementptr inbounds %struct.GPR, %struct.GPR* %17867, i32 0, i32 33
  %17869 = getelementptr inbounds %struct.Reg, %struct.Reg* %17868, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %17869 to i64*
  %17870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17871 = getelementptr inbounds %struct.GPR, %struct.GPR* %17870, i32 0, i32 1
  %17872 = getelementptr inbounds %struct.Reg, %struct.Reg* %17871, i32 0, i32 0
  %RAX.i1049 = bitcast %union.anon* %17872 to i64*
  %17873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17874 = getelementptr inbounds %struct.GPR, %struct.GPR* %17873, i32 0, i32 5
  %17875 = getelementptr inbounds %struct.Reg, %struct.Reg* %17874, i32 0, i32 0
  %RCX.i1050 = bitcast %union.anon* %17875 to i64*
  %17876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17877 = getelementptr inbounds %struct.GPR, %struct.GPR* %17876, i32 0, i32 15
  %17878 = getelementptr inbounds %struct.Reg, %struct.Reg* %17877, i32 0, i32 0
  %RBP.i1051 = bitcast %union.anon* %17878 to i64*
  %17879 = load i64, i64* %RBP.i1051
  %17880 = load i64, i64* %RCX.i1050
  %17881 = add i64 %17879, -1040
  %17882 = add i64 %17881, %17880
  %17883 = load i64, i64* %PC.i1048
  %17884 = add i64 %17883, 8
  store i64 %17884, i64* %PC.i1048
  %17885 = inttoptr i64 %17882 to i8*
  %17886 = load i8, i8* %17885
  %17887 = sext i8 %17886 to i64
  %17888 = and i64 %17887, 4294967295
  store i64 %17888, i64* %RAX.i1049, align 8
  store %struct.Memory* %loadMem_47669f, %struct.Memory** %MEMORY
  %loadMem_4766a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17890 = getelementptr inbounds %struct.GPR, %struct.GPR* %17889, i32 0, i32 33
  %17891 = getelementptr inbounds %struct.Reg, %struct.Reg* %17890, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %17891 to i64*
  %17892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17893 = getelementptr inbounds %struct.GPR, %struct.GPR* %17892, i32 0, i32 1
  %17894 = getelementptr inbounds %struct.Reg, %struct.Reg* %17893, i32 0, i32 0
  %EAX.i1047 = bitcast %union.anon* %17894 to i32*
  %17895 = load i32, i32* %EAX.i1047
  %17896 = zext i32 %17895 to i64
  %17897 = load i64, i64* %PC.i1046
  %17898 = add i64 %17897, 3
  store i64 %17898, i64* %PC.i1046
  %17899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17899, align 1
  %17900 = and i32 %17895, 255
  %17901 = call i32 @llvm.ctpop.i32(i32 %17900)
  %17902 = trunc i32 %17901 to i8
  %17903 = and i8 %17902, 1
  %17904 = xor i8 %17903, 1
  %17905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17904, i8* %17905, align 1
  %17906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17906, align 1
  %17907 = icmp eq i32 %17895, 0
  %17908 = zext i1 %17907 to i8
  %17909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17908, i8* %17909, align 1
  %17910 = lshr i32 %17895, 31
  %17911 = trunc i32 %17910 to i8
  %17912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17911, i8* %17912, align 1
  %17913 = lshr i32 %17895, 31
  %17914 = xor i32 %17910, %17913
  %17915 = add i32 %17914, %17913
  %17916 = icmp eq i32 %17915, 2
  %17917 = zext i1 %17916 to i8
  %17918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17917, i8* %17918, align 1
  store %struct.Memory* %loadMem_4766a7, %struct.Memory** %MEMORY
  %loadMem_4766aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %17919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17920 = getelementptr inbounds %struct.GPR, %struct.GPR* %17919, i32 0, i32 33
  %17921 = getelementptr inbounds %struct.Reg, %struct.Reg* %17920, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %17921 to i64*
  %17922 = load i64, i64* %PC.i1045
  %17923 = add i64 %17922, 18
  %17924 = load i64, i64* %PC.i1045
  %17925 = add i64 %17924, 6
  %17926 = load i64, i64* %PC.i1045
  %17927 = add i64 %17926, 6
  store i64 %17927, i64* %PC.i1045
  %17928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17929 = load i8, i8* %17928, align 1
  %17930 = icmp eq i8 %17929, 0
  %17931 = zext i1 %17930 to i8
  store i8 %17931, i8* %BRANCH_TAKEN, align 1
  %17932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17933 = select i1 %17930, i64 %17923, i64 %17925
  store i64 %17933, i64* %17932, align 8
  store %struct.Memory* %loadMem_4766aa, %struct.Memory** %MEMORY
  %loadBr_4766aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4766aa = icmp eq i8 %loadBr_4766aa, 1
  br i1 %cmpBr_4766aa, label %block_.L_4766bc, label %block_4766b0

block_4766b0:                                     ; preds = %block_476692
  %loadMem_4766b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17935 = getelementptr inbounds %struct.GPR, %struct.GPR* %17934, i32 0, i32 33
  %17936 = getelementptr inbounds %struct.Reg, %struct.Reg* %17935, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %17936 to i64*
  %17937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17938 = getelementptr inbounds %struct.GPR, %struct.GPR* %17937, i32 0, i32 15
  %17939 = getelementptr inbounds %struct.Reg, %struct.Reg* %17938, i32 0, i32 0
  %RBP.i1044 = bitcast %union.anon* %17939 to i64*
  %17940 = load i64, i64* %RBP.i1044
  %17941 = sub i64 %17940, 52
  %17942 = load i64, i64* %PC.i1043
  %17943 = add i64 %17942, 7
  store i64 %17943, i64* %PC.i1043
  %17944 = inttoptr i64 %17941 to i32*
  store i32 0, i32* %17944
  store %struct.Memory* %loadMem_4766b0, %struct.Memory** %MEMORY
  %loadMem_4766b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17946 = getelementptr inbounds %struct.GPR, %struct.GPR* %17945, i32 0, i32 33
  %17947 = getelementptr inbounds %struct.Reg, %struct.Reg* %17946, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %17947 to i64*
  %17948 = load i64, i64* %PC.i1042
  %17949 = add i64 %17948, 71
  %17950 = load i64, i64* %PC.i1042
  %17951 = add i64 %17950, 5
  store i64 %17951, i64* %PC.i1042
  %17952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17949, i64* %17952, align 8
  store %struct.Memory* %loadMem_4766b7, %struct.Memory** %MEMORY
  br label %block_.L_4766fe

block_.L_4766bc:                                  ; preds = %block_476692
  %loadMem_4766bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %17953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17954 = getelementptr inbounds %struct.GPR, %struct.GPR* %17953, i32 0, i32 33
  %17955 = getelementptr inbounds %struct.Reg, %struct.Reg* %17954, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %17955 to i64*
  %17956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17957 = getelementptr inbounds %struct.GPR, %struct.GPR* %17956, i32 0, i32 1
  %17958 = getelementptr inbounds %struct.Reg, %struct.Reg* %17957, i32 0, i32 0
  %RAX.i1040 = bitcast %union.anon* %17958 to i64*
  %17959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17960 = getelementptr inbounds %struct.GPR, %struct.GPR* %17959, i32 0, i32 15
  %17961 = getelementptr inbounds %struct.Reg, %struct.Reg* %17960, i32 0, i32 0
  %RBP.i1041 = bitcast %union.anon* %17961 to i64*
  %17962 = load i64, i64* %RBP.i1041
  %17963 = sub i64 %17962, 36
  %17964 = load i64, i64* %PC.i1039
  %17965 = add i64 %17964, 4
  store i64 %17965, i64* %PC.i1039
  %17966 = inttoptr i64 %17963 to i32*
  %17967 = load i32, i32* %17966
  %17968 = sext i32 %17967 to i64
  %17969 = mul i64 %17968, 20
  %17970 = trunc i64 %17969 to i32
  %17971 = and i64 %17969, 4294967295
  store i64 %17971, i64* %RAX.i1040, align 8
  %17972 = shl i64 %17969, 32
  %17973 = ashr exact i64 %17972, 32
  %17974 = icmp ne i64 %17973, %17969
  %17975 = zext i1 %17974 to i8
  %17976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17975, i8* %17976, align 1
  %17977 = and i32 %17970, 255
  %17978 = call i32 @llvm.ctpop.i32(i32 %17977)
  %17979 = trunc i32 %17978 to i8
  %17980 = and i8 %17979, 1
  %17981 = xor i8 %17980, 1
  %17982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17981, i8* %17982, align 1
  %17983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17983, align 1
  %17984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %17984, align 1
  %17985 = lshr i32 %17970, 31
  %17986 = trunc i32 %17985 to i8
  %17987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17986, i8* %17987, align 1
  %17988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17975, i8* %17988, align 1
  store %struct.Memory* %loadMem_4766bc, %struct.Memory** %MEMORY
  %loadMem_4766c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17990 = getelementptr inbounds %struct.GPR, %struct.GPR* %17989, i32 0, i32 33
  %17991 = getelementptr inbounds %struct.Reg, %struct.Reg* %17990, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %17991 to i64*
  %17992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17993 = getelementptr inbounds %struct.GPR, %struct.GPR* %17992, i32 0, i32 1
  %17994 = getelementptr inbounds %struct.Reg, %struct.Reg* %17993, i32 0, i32 0
  %RAX.i1038 = bitcast %union.anon* %17994 to i64*
  %17995 = load i64, i64* %RAX.i1038
  %17996 = load i64, i64* %PC.i1037
  %17997 = add i64 %17996, 3
  store i64 %17997, i64* %PC.i1037
  %17998 = trunc i64 %17995 to i32
  %17999 = add i32 21, %17998
  %18000 = zext i32 %17999 to i64
  store i64 %18000, i64* %RAX.i1038, align 8
  %18001 = icmp ult i32 %17999, %17998
  %18002 = icmp ult i32 %17999, 21
  %18003 = or i1 %18001, %18002
  %18004 = zext i1 %18003 to i8
  %18005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18004, i8* %18005, align 1
  %18006 = and i32 %17999, 255
  %18007 = call i32 @llvm.ctpop.i32(i32 %18006)
  %18008 = trunc i32 %18007 to i8
  %18009 = and i8 %18008, 1
  %18010 = xor i8 %18009, 1
  %18011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18010, i8* %18011, align 1
  %18012 = xor i64 21, %17995
  %18013 = trunc i64 %18012 to i32
  %18014 = xor i32 %18013, %17999
  %18015 = lshr i32 %18014, 4
  %18016 = trunc i32 %18015 to i8
  %18017 = and i8 %18016, 1
  %18018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18017, i8* %18018, align 1
  %18019 = icmp eq i32 %17999, 0
  %18020 = zext i1 %18019 to i8
  %18021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18020, i8* %18021, align 1
  %18022 = lshr i32 %17999, 31
  %18023 = trunc i32 %18022 to i8
  %18024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18023, i8* %18024, align 1
  %18025 = lshr i32 %17998, 31
  %18026 = xor i32 %18022, %18025
  %18027 = add i32 %18026, %18022
  %18028 = icmp eq i32 %18027, 2
  %18029 = zext i1 %18028 to i8
  %18030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18029, i8* %18030, align 1
  store %struct.Memory* %loadMem_4766c0, %struct.Memory** %MEMORY
  %loadMem_4766c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18032 = getelementptr inbounds %struct.GPR, %struct.GPR* %18031, i32 0, i32 33
  %18033 = getelementptr inbounds %struct.Reg, %struct.Reg* %18032, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %18033 to i64*
  %18034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18035 = getelementptr inbounds %struct.GPR, %struct.GPR* %18034, i32 0, i32 1
  %18036 = getelementptr inbounds %struct.Reg, %struct.Reg* %18035, i32 0, i32 0
  %RAX.i1035 = bitcast %union.anon* %18036 to i64*
  %18037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18038 = getelementptr inbounds %struct.GPR, %struct.GPR* %18037, i32 0, i32 15
  %18039 = getelementptr inbounds %struct.Reg, %struct.Reg* %18038, i32 0, i32 0
  %RBP.i1036 = bitcast %union.anon* %18039 to i64*
  %18040 = load i64, i64* %RAX.i1035
  %18041 = load i64, i64* %RBP.i1036
  %18042 = sub i64 %18041, 40
  %18043 = load i64, i64* %PC.i1034
  %18044 = add i64 %18043, 3
  store i64 %18044, i64* %PC.i1034
  %18045 = trunc i64 %18040 to i32
  %18046 = inttoptr i64 %18042 to i32*
  %18047 = load i32, i32* %18046
  %18048 = add i32 %18047, %18045
  %18049 = zext i32 %18048 to i64
  store i64 %18049, i64* %RAX.i1035, align 8
  %18050 = icmp ult i32 %18048, %18045
  %18051 = icmp ult i32 %18048, %18047
  %18052 = or i1 %18050, %18051
  %18053 = zext i1 %18052 to i8
  %18054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18053, i8* %18054, align 1
  %18055 = and i32 %18048, 255
  %18056 = call i32 @llvm.ctpop.i32(i32 %18055)
  %18057 = trunc i32 %18056 to i8
  %18058 = and i8 %18057, 1
  %18059 = xor i8 %18058, 1
  %18060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18059, i8* %18060, align 1
  %18061 = xor i32 %18047, %18045
  %18062 = xor i32 %18061, %18048
  %18063 = lshr i32 %18062, 4
  %18064 = trunc i32 %18063 to i8
  %18065 = and i8 %18064, 1
  %18066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18065, i8* %18066, align 1
  %18067 = icmp eq i32 %18048, 0
  %18068 = zext i1 %18067 to i8
  %18069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18068, i8* %18069, align 1
  %18070 = lshr i32 %18048, 31
  %18071 = trunc i32 %18070 to i8
  %18072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18071, i8* %18072, align 1
  %18073 = lshr i32 %18045, 31
  %18074 = lshr i32 %18047, 31
  %18075 = xor i32 %18070, %18073
  %18076 = xor i32 %18070, %18074
  %18077 = add i32 %18075, %18076
  %18078 = icmp eq i32 %18077, 2
  %18079 = zext i1 %18078 to i8
  %18080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18079, i8* %18080, align 1
  store %struct.Memory* %loadMem_4766c3, %struct.Memory** %MEMORY
  %loadMem_4766c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18082 = getelementptr inbounds %struct.GPR, %struct.GPR* %18081, i32 0, i32 33
  %18083 = getelementptr inbounds %struct.Reg, %struct.Reg* %18082, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %18083 to i64*
  %18084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18085 = getelementptr inbounds %struct.GPR, %struct.GPR* %18084, i32 0, i32 1
  %18086 = getelementptr inbounds %struct.Reg, %struct.Reg* %18085, i32 0, i32 0
  %EAX.i1032 = bitcast %union.anon* %18086 to i32*
  %18087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18088 = getelementptr inbounds %struct.GPR, %struct.GPR* %18087, i32 0, i32 5
  %18089 = getelementptr inbounds %struct.Reg, %struct.Reg* %18088, i32 0, i32 0
  %RCX.i1033 = bitcast %union.anon* %18089 to i64*
  %18090 = load i32, i32* %EAX.i1032
  %18091 = zext i32 %18090 to i64
  %18092 = load i64, i64* %PC.i1031
  %18093 = add i64 %18092, 3
  store i64 %18093, i64* %PC.i1031
  %18094 = shl i64 %18091, 32
  %18095 = ashr exact i64 %18094, 32
  store i64 %18095, i64* %RCX.i1033, align 8
  store %struct.Memory* %loadMem_4766c6, %struct.Memory** %MEMORY
  %loadMem_4766c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18097 = getelementptr inbounds %struct.GPR, %struct.GPR* %18096, i32 0, i32 33
  %18098 = getelementptr inbounds %struct.Reg, %struct.Reg* %18097, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %18098 to i64*
  %18099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18100 = getelementptr inbounds %struct.GPR, %struct.GPR* %18099, i32 0, i32 1
  %18101 = getelementptr inbounds %struct.Reg, %struct.Reg* %18100, i32 0, i32 0
  %RAX.i1028 = bitcast %union.anon* %18101 to i64*
  %18102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18103 = getelementptr inbounds %struct.GPR, %struct.GPR* %18102, i32 0, i32 5
  %18104 = getelementptr inbounds %struct.Reg, %struct.Reg* %18103, i32 0, i32 0
  %RCX.i1029 = bitcast %union.anon* %18104 to i64*
  %18105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18106 = getelementptr inbounds %struct.GPR, %struct.GPR* %18105, i32 0, i32 15
  %18107 = getelementptr inbounds %struct.Reg, %struct.Reg* %18106, i32 0, i32 0
  %RBP.i1030 = bitcast %union.anon* %18107 to i64*
  %18108 = load i64, i64* %RBP.i1030
  %18109 = load i64, i64* %RCX.i1029
  %18110 = add i64 %18108, -1040
  %18111 = add i64 %18110, %18109
  %18112 = load i64, i64* %PC.i1027
  %18113 = add i64 %18112, 8
  store i64 %18113, i64* %PC.i1027
  %18114 = inttoptr i64 %18111 to i8*
  %18115 = load i8, i8* %18114
  %18116 = sext i8 %18115 to i64
  %18117 = and i64 %18116, 4294967295
  store i64 %18117, i64* %RAX.i1028, align 8
  store %struct.Memory* %loadMem_4766c9, %struct.Memory** %MEMORY
  %loadMem_4766d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18119 = getelementptr inbounds %struct.GPR, %struct.GPR* %18118, i32 0, i32 33
  %18120 = getelementptr inbounds %struct.Reg, %struct.Reg* %18119, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %18120 to i64*
  %18121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18122 = getelementptr inbounds %struct.GPR, %struct.GPR* %18121, i32 0, i32 1
  %18123 = getelementptr inbounds %struct.Reg, %struct.Reg* %18122, i32 0, i32 0
  %EAX.i1026 = bitcast %union.anon* %18123 to i32*
  %18124 = load i32, i32* %EAX.i1026
  %18125 = zext i32 %18124 to i64
  %18126 = load i64, i64* %PC.i1025
  %18127 = add i64 %18126, 3
  store i64 %18127, i64* %PC.i1025
  %18128 = sub i32 %18124, 2
  %18129 = icmp ult i32 %18124, 2
  %18130 = zext i1 %18129 to i8
  %18131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18130, i8* %18131, align 1
  %18132 = and i32 %18128, 255
  %18133 = call i32 @llvm.ctpop.i32(i32 %18132)
  %18134 = trunc i32 %18133 to i8
  %18135 = and i8 %18134, 1
  %18136 = xor i8 %18135, 1
  %18137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18136, i8* %18137, align 1
  %18138 = xor i64 2, %18125
  %18139 = trunc i64 %18138 to i32
  %18140 = xor i32 %18139, %18128
  %18141 = lshr i32 %18140, 4
  %18142 = trunc i32 %18141 to i8
  %18143 = and i8 %18142, 1
  %18144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18143, i8* %18144, align 1
  %18145 = icmp eq i32 %18128, 0
  %18146 = zext i1 %18145 to i8
  %18147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18146, i8* %18147, align 1
  %18148 = lshr i32 %18128, 31
  %18149 = trunc i32 %18148 to i8
  %18150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18149, i8* %18150, align 1
  %18151 = lshr i32 %18124, 31
  %18152 = xor i32 %18148, %18151
  %18153 = add i32 %18152, %18151
  %18154 = icmp eq i32 %18153, 2
  %18155 = zext i1 %18154 to i8
  %18156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18155, i8* %18156, align 1
  store %struct.Memory* %loadMem_4766d1, %struct.Memory** %MEMORY
  %loadMem_4766d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18158 = getelementptr inbounds %struct.GPR, %struct.GPR* %18157, i32 0, i32 33
  %18159 = getelementptr inbounds %struct.Reg, %struct.Reg* %18158, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %18159 to i64*
  %18160 = load i64, i64* %PC.i1024
  %18161 = add i64 %18160, 13
  %18162 = load i64, i64* %PC.i1024
  %18163 = add i64 %18162, 6
  %18164 = load i64, i64* %PC.i1024
  %18165 = add i64 %18164, 6
  store i64 %18165, i64* %PC.i1024
  %18166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18167 = load i8, i8* %18166, align 1
  %18168 = icmp eq i8 %18167, 0
  %18169 = zext i1 %18168 to i8
  store i8 %18169, i8* %BRANCH_TAKEN, align 1
  %18170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18171 = select i1 %18168, i64 %18161, i64 %18163
  store i64 %18171, i64* %18170, align 8
  store %struct.Memory* %loadMem_4766d4, %struct.Memory** %MEMORY
  %loadBr_4766d4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4766d4 = icmp eq i8 %loadBr_4766d4, 1
  br i1 %cmpBr_4766d4, label %block_.L_4766e1, label %block_4766da

block_4766da:                                     ; preds = %block_.L_4766bc
  %loadMem_4766da = load %struct.Memory*, %struct.Memory** %MEMORY
  %18172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18173 = getelementptr inbounds %struct.GPR, %struct.GPR* %18172, i32 0, i32 33
  %18174 = getelementptr inbounds %struct.Reg, %struct.Reg* %18173, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %18174 to i64*
  %18175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18176 = getelementptr inbounds %struct.GPR, %struct.GPR* %18175, i32 0, i32 15
  %18177 = getelementptr inbounds %struct.Reg, %struct.Reg* %18176, i32 0, i32 0
  %RBP.i1023 = bitcast %union.anon* %18177 to i64*
  %18178 = load i64, i64* %RBP.i1023
  %18179 = sub i64 %18178, 52
  %18180 = load i64, i64* %PC.i1022
  %18181 = add i64 %18180, 7
  store i64 %18181, i64* %PC.i1022
  %18182 = inttoptr i64 %18179 to i32*
  store i32 2, i32* %18182
  store %struct.Memory* %loadMem_4766da, %struct.Memory** %MEMORY
  br label %block_.L_4766e1

block_.L_4766e1:                                  ; preds = %block_4766da, %block_.L_4766bc
  %loadMem_4766e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18184 = getelementptr inbounds %struct.GPR, %struct.GPR* %18183, i32 0, i32 33
  %18185 = getelementptr inbounds %struct.Reg, %struct.Reg* %18184, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %18185 to i64*
  %18186 = load i64, i64* %PC.i1021
  %18187 = add i64 %18186, 5
  %18188 = load i64, i64* %PC.i1021
  %18189 = add i64 %18188, 5
  store i64 %18189, i64* %PC.i1021
  %18190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18187, i64* %18190, align 8
  store %struct.Memory* %loadMem_4766e1, %struct.Memory** %MEMORY
  br label %block_.L_4766e6

block_.L_4766e6:                                  ; preds = %block_.L_4766e1
  %loadMem_4766e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18192 = getelementptr inbounds %struct.GPR, %struct.GPR* %18191, i32 0, i32 33
  %18193 = getelementptr inbounds %struct.Reg, %struct.Reg* %18192, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %18193 to i64*
  %18194 = load i64, i64* %PC.i1020
  %18195 = add i64 %18194, 5
  %18196 = load i64, i64* %PC.i1020
  %18197 = add i64 %18196, 5
  store i64 %18197, i64* %PC.i1020
  %18198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18195, i64* %18198, align 8
  store %struct.Memory* %loadMem_4766e6, %struct.Memory** %MEMORY
  br label %block_.L_4766eb

block_.L_4766eb:                                  ; preds = %block_.L_4766e6, %block_476677
  %loadMem_4766eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %18199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18200 = getelementptr inbounds %struct.GPR, %struct.GPR* %18199, i32 0, i32 33
  %18201 = getelementptr inbounds %struct.Reg, %struct.Reg* %18200, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %18201 to i64*
  %18202 = load i64, i64* %PC.i1019
  %18203 = add i64 %18202, 5
  %18204 = load i64, i64* %PC.i1019
  %18205 = add i64 %18204, 5
  store i64 %18205, i64* %PC.i1019
  %18206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18203, i64* %18206, align 8
  store %struct.Memory* %loadMem_4766eb, %struct.Memory** %MEMORY
  br label %block_.L_4766f0

block_.L_4766f0:                                  ; preds = %block_.L_4766eb
  %loadMem_4766f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18208 = getelementptr inbounds %struct.GPR, %struct.GPR* %18207, i32 0, i32 33
  %18209 = getelementptr inbounds %struct.Reg, %struct.Reg* %18208, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %18209 to i64*
  %18210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18211 = getelementptr inbounds %struct.GPR, %struct.GPR* %18210, i32 0, i32 1
  %18212 = getelementptr inbounds %struct.Reg, %struct.Reg* %18211, i32 0, i32 0
  %RAX.i1017 = bitcast %union.anon* %18212 to i64*
  %18213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18214 = getelementptr inbounds %struct.GPR, %struct.GPR* %18213, i32 0, i32 15
  %18215 = getelementptr inbounds %struct.Reg, %struct.Reg* %18214, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %18215 to i64*
  %18216 = load i64, i64* %RBP.i1018
  %18217 = sub i64 %18216, 40
  %18218 = load i64, i64* %PC.i1016
  %18219 = add i64 %18218, 3
  store i64 %18219, i64* %PC.i1016
  %18220 = inttoptr i64 %18217 to i32*
  %18221 = load i32, i32* %18220
  %18222 = zext i32 %18221 to i64
  store i64 %18222, i64* %RAX.i1017, align 8
  store %struct.Memory* %loadMem_4766f0, %struct.Memory** %MEMORY
  %loadMem_4766f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18224 = getelementptr inbounds %struct.GPR, %struct.GPR* %18223, i32 0, i32 33
  %18225 = getelementptr inbounds %struct.Reg, %struct.Reg* %18224, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %18225 to i64*
  %18226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18227 = getelementptr inbounds %struct.GPR, %struct.GPR* %18226, i32 0, i32 1
  %18228 = getelementptr inbounds %struct.Reg, %struct.Reg* %18227, i32 0, i32 0
  %RAX.i1015 = bitcast %union.anon* %18228 to i64*
  %18229 = load i64, i64* %RAX.i1015
  %18230 = load i64, i64* %PC.i1014
  %18231 = add i64 %18230, 3
  store i64 %18231, i64* %PC.i1014
  %18232 = trunc i64 %18229 to i32
  %18233 = add i32 1, %18232
  %18234 = zext i32 %18233 to i64
  store i64 %18234, i64* %RAX.i1015, align 8
  %18235 = icmp ult i32 %18233, %18232
  %18236 = icmp ult i32 %18233, 1
  %18237 = or i1 %18235, %18236
  %18238 = zext i1 %18237 to i8
  %18239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18238, i8* %18239, align 1
  %18240 = and i32 %18233, 255
  %18241 = call i32 @llvm.ctpop.i32(i32 %18240)
  %18242 = trunc i32 %18241 to i8
  %18243 = and i8 %18242, 1
  %18244 = xor i8 %18243, 1
  %18245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18244, i8* %18245, align 1
  %18246 = xor i64 1, %18229
  %18247 = trunc i64 %18246 to i32
  %18248 = xor i32 %18247, %18233
  %18249 = lshr i32 %18248, 4
  %18250 = trunc i32 %18249 to i8
  %18251 = and i8 %18250, 1
  %18252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18251, i8* %18252, align 1
  %18253 = icmp eq i32 %18233, 0
  %18254 = zext i1 %18253 to i8
  %18255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18254, i8* %18255, align 1
  %18256 = lshr i32 %18233, 31
  %18257 = trunc i32 %18256 to i8
  %18258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18257, i8* %18258, align 1
  %18259 = lshr i32 %18232, 31
  %18260 = xor i32 %18256, %18259
  %18261 = add i32 %18260, %18256
  %18262 = icmp eq i32 %18261, 2
  %18263 = zext i1 %18262 to i8
  %18264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18263, i8* %18264, align 1
  store %struct.Memory* %loadMem_4766f3, %struct.Memory** %MEMORY
  %loadMem_4766f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18266 = getelementptr inbounds %struct.GPR, %struct.GPR* %18265, i32 0, i32 33
  %18267 = getelementptr inbounds %struct.Reg, %struct.Reg* %18266, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %18267 to i64*
  %18268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18269 = getelementptr inbounds %struct.GPR, %struct.GPR* %18268, i32 0, i32 1
  %18270 = getelementptr inbounds %struct.Reg, %struct.Reg* %18269, i32 0, i32 0
  %EAX.i1012 = bitcast %union.anon* %18270 to i32*
  %18271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18272 = getelementptr inbounds %struct.GPR, %struct.GPR* %18271, i32 0, i32 15
  %18273 = getelementptr inbounds %struct.Reg, %struct.Reg* %18272, i32 0, i32 0
  %RBP.i1013 = bitcast %union.anon* %18273 to i64*
  %18274 = load i64, i64* %RBP.i1013
  %18275 = sub i64 %18274, 40
  %18276 = load i32, i32* %EAX.i1012
  %18277 = zext i32 %18276 to i64
  %18278 = load i64, i64* %PC.i1011
  %18279 = add i64 %18278, 3
  store i64 %18279, i64* %PC.i1011
  %18280 = inttoptr i64 %18275 to i32*
  store i32 %18276, i32* %18280
  store %struct.Memory* %loadMem_4766f6, %struct.Memory** %MEMORY
  %loadMem_4766f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18282 = getelementptr inbounds %struct.GPR, %struct.GPR* %18281, i32 0, i32 33
  %18283 = getelementptr inbounds %struct.Reg, %struct.Reg* %18282, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %18283 to i64*
  %18284 = load i64, i64* %PC.i1010
  %18285 = add i64 %18284, -146
  %18286 = load i64, i64* %PC.i1010
  %18287 = add i64 %18286, 5
  store i64 %18287, i64* %PC.i1010
  %18288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18285, i64* %18288, align 8
  store %struct.Memory* %loadMem_4766f9, %struct.Memory** %MEMORY
  br label %block_.L_476667

block_.L_4766fe:                                  ; preds = %block_4766b0, %block_.L_476667
  %loadMem_4766fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %18289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18290 = getelementptr inbounds %struct.GPR, %struct.GPR* %18289, i32 0, i32 33
  %18291 = getelementptr inbounds %struct.Reg, %struct.Reg* %18290, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %18291 to i64*
  %18292 = load i64, i64* %PC.i1009
  %18293 = add i64 %18292, 5
  %18294 = load i64, i64* %PC.i1009
  %18295 = add i64 %18294, 5
  store i64 %18295, i64* %PC.i1009
  %18296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18293, i64* %18296, align 8
  store %struct.Memory* %loadMem_4766fe, %struct.Memory** %MEMORY
  br label %block_.L_476703

block_.L_476703:                                  ; preds = %block_.L_4766fe
  %loadMem_476703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18298 = getelementptr inbounds %struct.GPR, %struct.GPR* %18297, i32 0, i32 33
  %18299 = getelementptr inbounds %struct.Reg, %struct.Reg* %18298, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %18299 to i64*
  %18300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18301 = getelementptr inbounds %struct.GPR, %struct.GPR* %18300, i32 0, i32 1
  %18302 = getelementptr inbounds %struct.Reg, %struct.Reg* %18301, i32 0, i32 0
  %RAX.i1007 = bitcast %union.anon* %18302 to i64*
  %18303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18304 = getelementptr inbounds %struct.GPR, %struct.GPR* %18303, i32 0, i32 15
  %18305 = getelementptr inbounds %struct.Reg, %struct.Reg* %18304, i32 0, i32 0
  %RBP.i1008 = bitcast %union.anon* %18305 to i64*
  %18306 = load i64, i64* %RBP.i1008
  %18307 = sub i64 %18306, 36
  %18308 = load i64, i64* %PC.i1006
  %18309 = add i64 %18308, 3
  store i64 %18309, i64* %PC.i1006
  %18310 = inttoptr i64 %18307 to i32*
  %18311 = load i32, i32* %18310
  %18312 = zext i32 %18311 to i64
  store i64 %18312, i64* %RAX.i1007, align 8
  store %struct.Memory* %loadMem_476703, %struct.Memory** %MEMORY
  %loadMem_476706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18314 = getelementptr inbounds %struct.GPR, %struct.GPR* %18313, i32 0, i32 33
  %18315 = getelementptr inbounds %struct.Reg, %struct.Reg* %18314, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %18315 to i64*
  %18316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18317 = getelementptr inbounds %struct.GPR, %struct.GPR* %18316, i32 0, i32 1
  %18318 = getelementptr inbounds %struct.Reg, %struct.Reg* %18317, i32 0, i32 0
  %RAX.i1005 = bitcast %union.anon* %18318 to i64*
  %18319 = load i64, i64* %RAX.i1005
  %18320 = load i64, i64* %PC.i1004
  %18321 = add i64 %18320, 3
  store i64 %18321, i64* %PC.i1004
  %18322 = trunc i64 %18319 to i32
  %18323 = add i32 1, %18322
  %18324 = zext i32 %18323 to i64
  store i64 %18324, i64* %RAX.i1005, align 8
  %18325 = icmp ult i32 %18323, %18322
  %18326 = icmp ult i32 %18323, 1
  %18327 = or i1 %18325, %18326
  %18328 = zext i1 %18327 to i8
  %18329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18328, i8* %18329, align 1
  %18330 = and i32 %18323, 255
  %18331 = call i32 @llvm.ctpop.i32(i32 %18330)
  %18332 = trunc i32 %18331 to i8
  %18333 = and i8 %18332, 1
  %18334 = xor i8 %18333, 1
  %18335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18334, i8* %18335, align 1
  %18336 = xor i64 1, %18319
  %18337 = trunc i64 %18336 to i32
  %18338 = xor i32 %18337, %18323
  %18339 = lshr i32 %18338, 4
  %18340 = trunc i32 %18339 to i8
  %18341 = and i8 %18340, 1
  %18342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18341, i8* %18342, align 1
  %18343 = icmp eq i32 %18323, 0
  %18344 = zext i1 %18343 to i8
  %18345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18344, i8* %18345, align 1
  %18346 = lshr i32 %18323, 31
  %18347 = trunc i32 %18346 to i8
  %18348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18347, i8* %18348, align 1
  %18349 = lshr i32 %18322, 31
  %18350 = xor i32 %18346, %18349
  %18351 = add i32 %18350, %18346
  %18352 = icmp eq i32 %18351, 2
  %18353 = zext i1 %18352 to i8
  %18354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18353, i8* %18354, align 1
  store %struct.Memory* %loadMem_476706, %struct.Memory** %MEMORY
  %loadMem_476709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18356 = getelementptr inbounds %struct.GPR, %struct.GPR* %18355, i32 0, i32 33
  %18357 = getelementptr inbounds %struct.Reg, %struct.Reg* %18356, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %18357 to i64*
  %18358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18359 = getelementptr inbounds %struct.GPR, %struct.GPR* %18358, i32 0, i32 1
  %18360 = getelementptr inbounds %struct.Reg, %struct.Reg* %18359, i32 0, i32 0
  %EAX.i1002 = bitcast %union.anon* %18360 to i32*
  %18361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18362 = getelementptr inbounds %struct.GPR, %struct.GPR* %18361, i32 0, i32 15
  %18363 = getelementptr inbounds %struct.Reg, %struct.Reg* %18362, i32 0, i32 0
  %RBP.i1003 = bitcast %union.anon* %18363 to i64*
  %18364 = load i64, i64* %RBP.i1003
  %18365 = sub i64 %18364, 36
  %18366 = load i32, i32* %EAX.i1002
  %18367 = zext i32 %18366 to i64
  %18368 = load i64, i64* %PC.i1001
  %18369 = add i64 %18368, 3
  store i64 %18369, i64* %PC.i1001
  %18370 = inttoptr i64 %18365 to i32*
  store i32 %18366, i32* %18370
  store %struct.Memory* %loadMem_476709, %struct.Memory** %MEMORY
  %loadMem_47670c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18372 = getelementptr inbounds %struct.GPR, %struct.GPR* %18371, i32 0, i32 33
  %18373 = getelementptr inbounds %struct.Reg, %struct.Reg* %18372, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %18373 to i64*
  %18374 = load i64, i64* %PC.i1000
  %18375 = add i64 %18374, -188
  %18376 = load i64, i64* %PC.i1000
  %18377 = add i64 %18376, 5
  store i64 %18377, i64* %PC.i1000
  %18378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18375, i64* %18378, align 8
  store %struct.Memory* %loadMem_47670c, %struct.Memory** %MEMORY
  br label %block_.L_476650

block_.L_476711:                                  ; preds = %block_.L_476650
  %loadMem_476711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18380 = getelementptr inbounds %struct.GPR, %struct.GPR* %18379, i32 0, i32 33
  %18381 = getelementptr inbounds %struct.Reg, %struct.Reg* %18380, i32 0, i32 0
  %PC.i998 = bitcast %union.anon* %18381 to i64*
  %18382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18383 = getelementptr inbounds %struct.GPR, %struct.GPR* %18382, i32 0, i32 15
  %18384 = getelementptr inbounds %struct.Reg, %struct.Reg* %18383, i32 0, i32 0
  %RBP.i999 = bitcast %union.anon* %18384 to i64*
  %18385 = load i64, i64* %RBP.i999
  %18386 = sub i64 %18385, 52
  %18387 = load i64, i64* %PC.i998
  %18388 = add i64 %18387, 4
  store i64 %18388, i64* %PC.i998
  %18389 = inttoptr i64 %18386 to i32*
  %18390 = load i32, i32* %18389
  %18391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18391, align 1
  %18392 = and i32 %18390, 255
  %18393 = call i32 @llvm.ctpop.i32(i32 %18392)
  %18394 = trunc i32 %18393 to i8
  %18395 = and i8 %18394, 1
  %18396 = xor i8 %18395, 1
  %18397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18396, i8* %18397, align 1
  %18398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18398, align 1
  %18399 = icmp eq i32 %18390, 0
  %18400 = zext i1 %18399 to i8
  %18401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18400, i8* %18401, align 1
  %18402 = lshr i32 %18390, 31
  %18403 = trunc i32 %18402 to i8
  %18404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18403, i8* %18404, align 1
  %18405 = lshr i32 %18390, 31
  %18406 = xor i32 %18402, %18405
  %18407 = add i32 %18406, %18405
  %18408 = icmp eq i32 %18407, 2
  %18409 = zext i1 %18408 to i8
  %18410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18409, i8* %18410, align 1
  store %struct.Memory* %loadMem_476711, %struct.Memory** %MEMORY
  %loadMem_476715 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18412 = getelementptr inbounds %struct.GPR, %struct.GPR* %18411, i32 0, i32 33
  %18413 = getelementptr inbounds %struct.Reg, %struct.Reg* %18412, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %18413 to i64*
  %18414 = load i64, i64* %PC.i997
  %18415 = add i64 %18414, 1202
  %18416 = load i64, i64* %PC.i997
  %18417 = add i64 %18416, 6
  %18418 = load i64, i64* %PC.i997
  %18419 = add i64 %18418, 6
  store i64 %18419, i64* %PC.i997
  %18420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18421 = load i8, i8* %18420, align 1
  store i8 %18421, i8* %BRANCH_TAKEN, align 1
  %18422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18423 = icmp ne i8 %18421, 0
  %18424 = select i1 %18423, i64 %18415, i64 %18417
  store i64 %18424, i64* %18422, align 8
  store %struct.Memory* %loadMem_476715, %struct.Memory** %MEMORY
  %loadBr_476715 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476715 = icmp eq i8 %loadBr_476715, 1
  br i1 %cmpBr_476715, label %block_.L_476bc7, label %block_47671b

block_47671b:                                     ; preds = %block_.L_476711
  %loadMem_47671b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18426 = getelementptr inbounds %struct.GPR, %struct.GPR* %18425, i32 0, i32 33
  %18427 = getelementptr inbounds %struct.Reg, %struct.Reg* %18426, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %18427 to i64*
  %18428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18429 = getelementptr inbounds %struct.GPR, %struct.GPR* %18428, i32 0, i32 15
  %18430 = getelementptr inbounds %struct.Reg, %struct.Reg* %18429, i32 0, i32 0
  %RBP.i996 = bitcast %union.anon* %18430 to i64*
  %18431 = load i64, i64* %RBP.i996
  %18432 = sub i64 %18431, 48
  %18433 = load i64, i64* %PC.i995
  %18434 = add i64 %18433, 7
  store i64 %18434, i64* %PC.i995
  %18435 = inttoptr i64 %18432 to i32*
  store i32 21, i32* %18435
  store %struct.Memory* %loadMem_47671b, %struct.Memory** %MEMORY
  br label %block_.L_476722

block_.L_476722:                                  ; preds = %block_.L_476bb4, %block_47671b
  %loadMem_476722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18437 = getelementptr inbounds %struct.GPR, %struct.GPR* %18436, i32 0, i32 33
  %18438 = getelementptr inbounds %struct.Reg, %struct.Reg* %18437, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %18438 to i64*
  %18439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18440 = getelementptr inbounds %struct.GPR, %struct.GPR* %18439, i32 0, i32 1
  %18441 = getelementptr inbounds %struct.Reg, %struct.Reg* %18440, i32 0, i32 0
  %EAX.i993 = bitcast %union.anon* %18441 to i32*
  %18442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18443 = getelementptr inbounds %struct.GPR, %struct.GPR* %18442, i32 0, i32 1
  %18444 = getelementptr inbounds %struct.Reg, %struct.Reg* %18443, i32 0, i32 0
  %RAX.i994 = bitcast %union.anon* %18444 to i64*
  %18445 = load i64, i64* %RAX.i994
  %18446 = load i32, i32* %EAX.i993
  %18447 = zext i32 %18446 to i64
  %18448 = load i64, i64* %PC.i992
  %18449 = add i64 %18448, 2
  store i64 %18449, i64* %PC.i992
  %18450 = xor i64 %18447, %18445
  %18451 = trunc i64 %18450 to i32
  %18452 = and i64 %18450, 4294967295
  store i64 %18452, i64* %RAX.i994, align 8
  %18453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18453, align 1
  %18454 = and i32 %18451, 255
  %18455 = call i32 @llvm.ctpop.i32(i32 %18454)
  %18456 = trunc i32 %18455 to i8
  %18457 = and i8 %18456, 1
  %18458 = xor i8 %18457, 1
  %18459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18458, i8* %18459, align 1
  %18460 = icmp eq i32 %18451, 0
  %18461 = zext i1 %18460 to i8
  %18462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18461, i8* %18462, align 1
  %18463 = lshr i32 %18451, 31
  %18464 = trunc i32 %18463 to i8
  %18465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18464, i8* %18465, align 1
  %18466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18466, align 1
  %18467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18467, align 1
  store %struct.Memory* %loadMem_476722, %struct.Memory** %MEMORY
  %loadMem_476724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18469 = getelementptr inbounds %struct.GPR, %struct.GPR* %18468, i32 0, i32 33
  %18470 = getelementptr inbounds %struct.Reg, %struct.Reg* %18469, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %18470 to i64*
  %18471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18472 = getelementptr inbounds %struct.GPR, %struct.GPR* %18471, i32 0, i32 1
  %18473 = getelementptr inbounds %struct.Reg, %struct.Reg* %18472, i32 0, i32 0
  %18474 = bitcast %union.anon* %18473 to %struct.anon.2*
  %AL.i990 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18474, i32 0, i32 0
  %18475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18476 = getelementptr inbounds %struct.GPR, %struct.GPR* %18475, i32 0, i32 5
  %18477 = getelementptr inbounds %struct.Reg, %struct.Reg* %18476, i32 0, i32 0
  %18478 = bitcast %union.anon* %18477 to %struct.anon.2*
  %CL.i991 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18478, i32 0, i32 0
  %18479 = load i8, i8* %AL.i990
  %18480 = zext i8 %18479 to i64
  %18481 = load i64, i64* %PC.i989
  %18482 = add i64 %18481, 2
  store i64 %18482, i64* %PC.i989
  store i8 %18479, i8* %CL.i991, align 1
  store %struct.Memory* %loadMem_476724, %struct.Memory** %MEMORY
  %loadMem_476726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18484 = getelementptr inbounds %struct.GPR, %struct.GPR* %18483, i32 0, i32 33
  %18485 = getelementptr inbounds %struct.Reg, %struct.Reg* %18484, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %18485 to i64*
  %18486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18487 = getelementptr inbounds %struct.GPR, %struct.GPR* %18486, i32 0, i32 15
  %18488 = getelementptr inbounds %struct.Reg, %struct.Reg* %18487, i32 0, i32 0
  %RBP.i988 = bitcast %union.anon* %18488 to i64*
  %18489 = load i64, i64* %RBP.i988
  %18490 = sub i64 %18489, 48
  %18491 = load i64, i64* %PC.i987
  %18492 = add i64 %18491, 7
  store i64 %18492, i64* %PC.i987
  %18493 = inttoptr i64 %18490 to i32*
  %18494 = load i32, i32* %18493
  %18495 = sub i32 %18494, 400
  %18496 = icmp ult i32 %18494, 400
  %18497 = zext i1 %18496 to i8
  %18498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18497, i8* %18498, align 1
  %18499 = and i32 %18495, 255
  %18500 = call i32 @llvm.ctpop.i32(i32 %18499)
  %18501 = trunc i32 %18500 to i8
  %18502 = and i8 %18501, 1
  %18503 = xor i8 %18502, 1
  %18504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18503, i8* %18504, align 1
  %18505 = xor i32 %18494, 400
  %18506 = xor i32 %18505, %18495
  %18507 = lshr i32 %18506, 4
  %18508 = trunc i32 %18507 to i8
  %18509 = and i8 %18508, 1
  %18510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18509, i8* %18510, align 1
  %18511 = icmp eq i32 %18495, 0
  %18512 = zext i1 %18511 to i8
  %18513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18512, i8* %18513, align 1
  %18514 = lshr i32 %18495, 31
  %18515 = trunc i32 %18514 to i8
  %18516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18515, i8* %18516, align 1
  %18517 = lshr i32 %18494, 31
  %18518 = xor i32 %18514, %18517
  %18519 = add i32 %18518, %18517
  %18520 = icmp eq i32 %18519, 2
  %18521 = zext i1 %18520 to i8
  %18522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18521, i8* %18522, align 1
  store %struct.Memory* %loadMem_476726, %struct.Memory** %MEMORY
  %loadMem_47672d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18524 = getelementptr inbounds %struct.GPR, %struct.GPR* %18523, i32 0, i32 33
  %18525 = getelementptr inbounds %struct.Reg, %struct.Reg* %18524, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %18525 to i64*
  %18526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18527 = getelementptr inbounds %struct.GPR, %struct.GPR* %18526, i32 0, i32 5
  %18528 = getelementptr inbounds %struct.Reg, %struct.Reg* %18527, i32 0, i32 0
  %18529 = bitcast %union.anon* %18528 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18529, i32 0, i32 0
  %18530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18531 = getelementptr inbounds %struct.GPR, %struct.GPR* %18530, i32 0, i32 15
  %18532 = getelementptr inbounds %struct.Reg, %struct.Reg* %18531, i32 0, i32 0
  %RBP.i986 = bitcast %union.anon* %18532 to i64*
  %18533 = load i64, i64* %RBP.i986
  %18534 = sub i64 %18533, 1213
  %18535 = load i8, i8* %CL.i
  %18536 = zext i8 %18535 to i64
  %18537 = load i64, i64* %PC.i985
  %18538 = add i64 %18537, 6
  store i64 %18538, i64* %PC.i985
  %18539 = inttoptr i64 %18534 to i8*
  store i8 %18535, i8* %18539
  store %struct.Memory* %loadMem_47672d, %struct.Memory** %MEMORY
  %loadMem_476733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18541 = getelementptr inbounds %struct.GPR, %struct.GPR* %18540, i32 0, i32 33
  %18542 = getelementptr inbounds %struct.Reg, %struct.Reg* %18541, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %18542 to i64*
  %18543 = load i64, i64* %PC.i984
  %18544 = add i64 %18543, 19
  %18545 = load i64, i64* %PC.i984
  %18546 = add i64 %18545, 6
  %18547 = load i64, i64* %PC.i984
  %18548 = add i64 %18547, 6
  store i64 %18548, i64* %PC.i984
  %18549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18550 = load i8, i8* %18549, align 1
  %18551 = icmp ne i8 %18550, 0
  %18552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18553 = load i8, i8* %18552, align 1
  %18554 = icmp ne i8 %18553, 0
  %18555 = xor i1 %18551, %18554
  %18556 = xor i1 %18555, true
  %18557 = zext i1 %18556 to i8
  store i8 %18557, i8* %BRANCH_TAKEN, align 1
  %18558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18559 = select i1 %18555, i64 %18546, i64 %18544
  store i64 %18559, i64* %18558, align 8
  store %struct.Memory* %loadMem_476733, %struct.Memory** %MEMORY
  %loadBr_476733 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476733 = icmp eq i8 %loadBr_476733, 1
  br i1 %cmpBr_476733, label %block_.L_476746, label %block_476739

block_476739:                                     ; preds = %block_.L_476722
  %loadMem_476739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18561 = getelementptr inbounds %struct.GPR, %struct.GPR* %18560, i32 0, i32 33
  %18562 = getelementptr inbounds %struct.Reg, %struct.Reg* %18561, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %18562 to i64*
  %18563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18564 = getelementptr inbounds %struct.GPR, %struct.GPR* %18563, i32 0, i32 15
  %18565 = getelementptr inbounds %struct.Reg, %struct.Reg* %18564, i32 0, i32 0
  %RBP.i983 = bitcast %union.anon* %18565 to i64*
  %18566 = load i64, i64* %RBP.i983
  %18567 = sub i64 %18566, 52
  %18568 = load i64, i64* %PC.i982
  %18569 = add i64 %18568, 4
  store i64 %18569, i64* %PC.i982
  %18570 = inttoptr i64 %18567 to i32*
  %18571 = load i32, i32* %18570
  %18572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18572, align 1
  %18573 = and i32 %18571, 255
  %18574 = call i32 @llvm.ctpop.i32(i32 %18573)
  %18575 = trunc i32 %18574 to i8
  %18576 = and i8 %18575, 1
  %18577 = xor i8 %18576, 1
  %18578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18577, i8* %18578, align 1
  %18579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18579, align 1
  %18580 = icmp eq i32 %18571, 0
  %18581 = zext i1 %18580 to i8
  %18582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18581, i8* %18582, align 1
  %18583 = lshr i32 %18571, 31
  %18584 = trunc i32 %18583 to i8
  %18585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18584, i8* %18585, align 1
  %18586 = lshr i32 %18571, 31
  %18587 = xor i32 %18583, %18586
  %18588 = add i32 %18587, %18586
  %18589 = icmp eq i32 %18588, 2
  %18590 = zext i1 %18589 to i8
  %18591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18590, i8* %18591, align 1
  store %struct.Memory* %loadMem_476739, %struct.Memory** %MEMORY
  %loadMem_47673d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18593 = getelementptr inbounds %struct.GPR, %struct.GPR* %18592, i32 0, i32 33
  %18594 = getelementptr inbounds %struct.Reg, %struct.Reg* %18593, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %18594 to i64*
  %18595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18596 = getelementptr inbounds %struct.GPR, %struct.GPR* %18595, i32 0, i32 1
  %18597 = getelementptr inbounds %struct.Reg, %struct.Reg* %18596, i32 0, i32 0
  %18598 = bitcast %union.anon* %18597 to %struct.anon.2*
  %AL.i981 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18598, i32 0, i32 0
  %18599 = load i64, i64* %PC.i980
  %18600 = add i64 %18599, 3
  store i64 %18600, i64* %PC.i980
  %18601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18602 = load i8, i8* %18601, align 1
  %18603 = icmp eq i8 %18602, 0
  %18604 = zext i1 %18603 to i8
  store i8 %18604, i8* %AL.i981, align 1
  store %struct.Memory* %loadMem_47673d, %struct.Memory** %MEMORY
  %loadMem_476740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18606 = getelementptr inbounds %struct.GPR, %struct.GPR* %18605, i32 0, i32 33
  %18607 = getelementptr inbounds %struct.Reg, %struct.Reg* %18606, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %18607 to i64*
  %18608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18609 = getelementptr inbounds %struct.GPR, %struct.GPR* %18608, i32 0, i32 1
  %18610 = getelementptr inbounds %struct.Reg, %struct.Reg* %18609, i32 0, i32 0
  %18611 = bitcast %union.anon* %18610 to %struct.anon.2*
  %AL.i978 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18611, i32 0, i32 0
  %18612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18613 = getelementptr inbounds %struct.GPR, %struct.GPR* %18612, i32 0, i32 15
  %18614 = getelementptr inbounds %struct.Reg, %struct.Reg* %18613, i32 0, i32 0
  %RBP.i979 = bitcast %union.anon* %18614 to i64*
  %18615 = load i64, i64* %RBP.i979
  %18616 = sub i64 %18615, 1213
  %18617 = load i8, i8* %AL.i978
  %18618 = zext i8 %18617 to i64
  %18619 = load i64, i64* %PC.i977
  %18620 = add i64 %18619, 6
  store i64 %18620, i64* %PC.i977
  %18621 = inttoptr i64 %18616 to i8*
  store i8 %18617, i8* %18621
  store %struct.Memory* %loadMem_476740, %struct.Memory** %MEMORY
  br label %block_.L_476746

block_.L_476746:                                  ; preds = %block_476739, %block_.L_476722
  %loadMem_476746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18623 = getelementptr inbounds %struct.GPR, %struct.GPR* %18622, i32 0, i32 33
  %18624 = getelementptr inbounds %struct.Reg, %struct.Reg* %18623, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %18624 to i64*
  %18625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18626 = getelementptr inbounds %struct.GPR, %struct.GPR* %18625, i32 0, i32 1
  %18627 = getelementptr inbounds %struct.Reg, %struct.Reg* %18626, i32 0, i32 0
  %18628 = bitcast %union.anon* %18627 to %struct.anon.2*
  %AL.i975 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18628, i32 0, i32 0
  %18629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18630 = getelementptr inbounds %struct.GPR, %struct.GPR* %18629, i32 0, i32 15
  %18631 = getelementptr inbounds %struct.Reg, %struct.Reg* %18630, i32 0, i32 0
  %RBP.i976 = bitcast %union.anon* %18631 to i64*
  %18632 = load i64, i64* %RBP.i976
  %18633 = sub i64 %18632, 1213
  %18634 = load i64, i64* %PC.i974
  %18635 = add i64 %18634, 6
  store i64 %18635, i64* %PC.i974
  %18636 = inttoptr i64 %18633 to i8*
  %18637 = load i8, i8* %18636
  store i8 %18637, i8* %AL.i975, align 1
  store %struct.Memory* %loadMem_476746, %struct.Memory** %MEMORY
  %loadMem_47674c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18639 = getelementptr inbounds %struct.GPR, %struct.GPR* %18638, i32 0, i32 33
  %18640 = getelementptr inbounds %struct.Reg, %struct.Reg* %18639, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %18640 to i64*
  %18641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18642 = getelementptr inbounds %struct.GPR, %struct.GPR* %18641, i32 0, i32 1
  %18643 = getelementptr inbounds %struct.Reg, %struct.Reg* %18642, i32 0, i32 0
  %18644 = bitcast %union.anon* %18643 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18644, i32 0, i32 0
  %18645 = load i8, i8* %AL.i
  %18646 = zext i8 %18645 to i64
  %18647 = load i64, i64* %PC.i973
  %18648 = add i64 %18647, 2
  store i64 %18648, i64* %PC.i973
  %18649 = and i64 1, %18646
  %18650 = trunc i64 %18649 to i8
  %18651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18651, align 1
  %18652 = trunc i64 %18649 to i32
  %18653 = and i32 %18652, 255
  %18654 = call i32 @llvm.ctpop.i32(i32 %18653)
  %18655 = trunc i32 %18654 to i8
  %18656 = and i8 %18655, 1
  %18657 = xor i8 %18656, 1
  %18658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18657, i8* %18658, align 1
  %18659 = icmp eq i8 %18650, 0
  %18660 = zext i1 %18659 to i8
  %18661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18660, i8* %18661, align 1
  %18662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %18662, align 1
  %18663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18663, align 1
  %18664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18664, align 1
  store %struct.Memory* %loadMem_47674c, %struct.Memory** %MEMORY
  %loadMem_47674e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18666 = getelementptr inbounds %struct.GPR, %struct.GPR* %18665, i32 0, i32 33
  %18667 = getelementptr inbounds %struct.Reg, %struct.Reg* %18666, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %18667 to i64*
  %18668 = load i64, i64* %PC.i972
  %18669 = add i64 %18668, 11
  %18670 = load i64, i64* %PC.i972
  %18671 = add i64 %18670, 6
  %18672 = load i64, i64* %PC.i972
  %18673 = add i64 %18672, 6
  store i64 %18673, i64* %PC.i972
  %18674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18675 = load i8, i8* %18674, align 1
  %18676 = icmp eq i8 %18675, 0
  %18677 = zext i1 %18676 to i8
  store i8 %18677, i8* %BRANCH_TAKEN, align 1
  %18678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18679 = select i1 %18676, i64 %18669, i64 %18671
  store i64 %18679, i64* %18678, align 8
  store %struct.Memory* %loadMem_47674e, %struct.Memory** %MEMORY
  %loadBr_47674e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47674e = icmp eq i8 %loadBr_47674e, 1
  br i1 %cmpBr_47674e, label %block_.L_476759, label %block_476754

block_476754:                                     ; preds = %block_.L_476746
  %loadMem_476754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18681 = getelementptr inbounds %struct.GPR, %struct.GPR* %18680, i32 0, i32 33
  %18682 = getelementptr inbounds %struct.Reg, %struct.Reg* %18681, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %18682 to i64*
  %18683 = load i64, i64* %PC.i971
  %18684 = add i64 %18683, 1134
  %18685 = load i64, i64* %PC.i971
  %18686 = add i64 %18685, 5
  store i64 %18686, i64* %PC.i971
  %18687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18684, i64* %18687, align 8
  store %struct.Memory* %loadMem_476754, %struct.Memory** %MEMORY
  br label %block_.L_476bc2

block_.L_476759:                                  ; preds = %block_.L_476746
  %loadMem_476759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18689 = getelementptr inbounds %struct.GPR, %struct.GPR* %18688, i32 0, i32 33
  %18690 = getelementptr inbounds %struct.Reg, %struct.Reg* %18689, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %18690 to i64*
  %18691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18692 = getelementptr inbounds %struct.GPR, %struct.GPR* %18691, i32 0, i32 1
  %18693 = getelementptr inbounds %struct.Reg, %struct.Reg* %18692, i32 0, i32 0
  %RAX.i969 = bitcast %union.anon* %18693 to i64*
  %18694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18695 = getelementptr inbounds %struct.GPR, %struct.GPR* %18694, i32 0, i32 15
  %18696 = getelementptr inbounds %struct.Reg, %struct.Reg* %18695, i32 0, i32 0
  %RBP.i970 = bitcast %union.anon* %18696 to i64*
  %18697 = load i64, i64* %RBP.i970
  %18698 = sub i64 %18697, 48
  %18699 = load i64, i64* %PC.i968
  %18700 = add i64 %18699, 4
  store i64 %18700, i64* %PC.i968
  %18701 = inttoptr i64 %18698 to i32*
  %18702 = load i32, i32* %18701
  %18703 = sext i32 %18702 to i64
  store i64 %18703, i64* %RAX.i969, align 8
  store %struct.Memory* %loadMem_476759, %struct.Memory** %MEMORY
  %loadMem_47675d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18705 = getelementptr inbounds %struct.GPR, %struct.GPR* %18704, i32 0, i32 33
  %18706 = getelementptr inbounds %struct.Reg, %struct.Reg* %18705, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %18706 to i64*
  %18707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18708 = getelementptr inbounds %struct.GPR, %struct.GPR* %18707, i32 0, i32 1
  %18709 = getelementptr inbounds %struct.Reg, %struct.Reg* %18708, i32 0, i32 0
  %RAX.i966 = bitcast %union.anon* %18709 to i64*
  %18710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18711 = getelementptr inbounds %struct.GPR, %struct.GPR* %18710, i32 0, i32 5
  %18712 = getelementptr inbounds %struct.Reg, %struct.Reg* %18711, i32 0, i32 0
  %RCX.i967 = bitcast %union.anon* %18712 to i64*
  %18713 = load i64, i64* %RAX.i966
  %18714 = add i64 %18713, 12099168
  %18715 = load i64, i64* %PC.i965
  %18716 = add i64 %18715, 8
  store i64 %18716, i64* %PC.i965
  %18717 = inttoptr i64 %18714 to i8*
  %18718 = load i8, i8* %18717
  %18719 = zext i8 %18718 to i64
  store i64 %18719, i64* %RCX.i967, align 8
  store %struct.Memory* %loadMem_47675d, %struct.Memory** %MEMORY
  %loadMem_476765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18721 = getelementptr inbounds %struct.GPR, %struct.GPR* %18720, i32 0, i32 33
  %18722 = getelementptr inbounds %struct.Reg, %struct.Reg* %18721, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %18722 to i64*
  %18723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18724 = getelementptr inbounds %struct.GPR, %struct.GPR* %18723, i32 0, i32 5
  %18725 = getelementptr inbounds %struct.Reg, %struct.Reg* %18724, i32 0, i32 0
  %ECX.i964 = bitcast %union.anon* %18725 to i32*
  %18726 = load i32, i32* %ECX.i964
  %18727 = zext i32 %18726 to i64
  %18728 = load i64, i64* %PC.i963
  %18729 = add i64 %18728, 3
  store i64 %18729, i64* %PC.i963
  %18730 = sub i32 %18726, 3
  %18731 = icmp ult i32 %18726, 3
  %18732 = zext i1 %18731 to i8
  %18733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18732, i8* %18733, align 1
  %18734 = and i32 %18730, 255
  %18735 = call i32 @llvm.ctpop.i32(i32 %18734)
  %18736 = trunc i32 %18735 to i8
  %18737 = and i8 %18736, 1
  %18738 = xor i8 %18737, 1
  %18739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18738, i8* %18739, align 1
  %18740 = xor i64 3, %18727
  %18741 = trunc i64 %18740 to i32
  %18742 = xor i32 %18741, %18730
  %18743 = lshr i32 %18742, 4
  %18744 = trunc i32 %18743 to i8
  %18745 = and i8 %18744, 1
  %18746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18745, i8* %18746, align 1
  %18747 = icmp eq i32 %18730, 0
  %18748 = zext i1 %18747 to i8
  %18749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18748, i8* %18749, align 1
  %18750 = lshr i32 %18730, 31
  %18751 = trunc i32 %18750 to i8
  %18752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18751, i8* %18752, align 1
  %18753 = lshr i32 %18726, 31
  %18754 = xor i32 %18750, %18753
  %18755 = add i32 %18754, %18753
  %18756 = icmp eq i32 %18755, 2
  %18757 = zext i1 %18756 to i8
  %18758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18757, i8* %18758, align 1
  store %struct.Memory* %loadMem_476765, %struct.Memory** %MEMORY
  %loadMem_476768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18760 = getelementptr inbounds %struct.GPR, %struct.GPR* %18759, i32 0, i32 33
  %18761 = getelementptr inbounds %struct.Reg, %struct.Reg* %18760, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %18761 to i64*
  %18762 = load i64, i64* %PC.i962
  %18763 = add i64 %18762, 1095
  %18764 = load i64, i64* %PC.i962
  %18765 = add i64 %18764, 6
  %18766 = load i64, i64* %PC.i962
  %18767 = add i64 %18766, 6
  store i64 %18767, i64* %PC.i962
  %18768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18769 = load i8, i8* %18768, align 1
  store i8 %18769, i8* %BRANCH_TAKEN, align 1
  %18770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18771 = icmp ne i8 %18769, 0
  %18772 = select i1 %18771, i64 %18763, i64 %18765
  store i64 %18772, i64* %18770, align 8
  store %struct.Memory* %loadMem_476768, %struct.Memory** %MEMORY
  %loadBr_476768 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476768 = icmp eq i8 %loadBr_476768, 1
  br i1 %cmpBr_476768, label %block_.L_476baf, label %block_47676e

block_47676e:                                     ; preds = %block_.L_476759
  %loadMem_47676e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18774 = getelementptr inbounds %struct.GPR, %struct.GPR* %18773, i32 0, i32 33
  %18775 = getelementptr inbounds %struct.Reg, %struct.Reg* %18774, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %18775 to i64*
  %18776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18777 = getelementptr inbounds %struct.GPR, %struct.GPR* %18776, i32 0, i32 1
  %18778 = getelementptr inbounds %struct.Reg, %struct.Reg* %18777, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %18778 to i64*
  %18779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18780 = getelementptr inbounds %struct.GPR, %struct.GPR* %18779, i32 0, i32 15
  %18781 = getelementptr inbounds %struct.Reg, %struct.Reg* %18780, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %18781 to i64*
  %18782 = load i64, i64* %RBP.i961
  %18783 = sub i64 %18782, 48
  %18784 = load i64, i64* %PC.i959
  %18785 = add i64 %18784, 4
  store i64 %18785, i64* %PC.i959
  %18786 = inttoptr i64 %18783 to i32*
  %18787 = load i32, i32* %18786
  %18788 = sext i32 %18787 to i64
  store i64 %18788, i64* %RAX.i960, align 8
  store %struct.Memory* %loadMem_47676e, %struct.Memory** %MEMORY
  %loadMem_476772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18790 = getelementptr inbounds %struct.GPR, %struct.GPR* %18789, i32 0, i32 33
  %18791 = getelementptr inbounds %struct.Reg, %struct.Reg* %18790, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %18791 to i64*
  %18792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18793 = getelementptr inbounds %struct.GPR, %struct.GPR* %18792, i32 0, i32 1
  %18794 = getelementptr inbounds %struct.Reg, %struct.Reg* %18793, i32 0, i32 0
  %RAX.i956 = bitcast %union.anon* %18794 to i64*
  %18795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18796 = getelementptr inbounds %struct.GPR, %struct.GPR* %18795, i32 0, i32 5
  %18797 = getelementptr inbounds %struct.Reg, %struct.Reg* %18796, i32 0, i32 0
  %RCX.i957 = bitcast %union.anon* %18797 to i64*
  %18798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18799 = getelementptr inbounds %struct.GPR, %struct.GPR* %18798, i32 0, i32 15
  %18800 = getelementptr inbounds %struct.Reg, %struct.Reg* %18799, i32 0, i32 0
  %RBP.i958 = bitcast %union.anon* %18800 to i64*
  %18801 = load i64, i64* %RBP.i958
  %18802 = load i64, i64* %RAX.i956
  %18803 = add i64 %18801, -640
  %18804 = add i64 %18803, %18802
  %18805 = load i64, i64* %PC.i955
  %18806 = add i64 %18805, 8
  store i64 %18806, i64* %PC.i955
  %18807 = inttoptr i64 %18804 to i8*
  %18808 = load i8, i8* %18807
  %18809 = sext i8 %18808 to i64
  %18810 = and i64 %18809, 4294967295
  store i64 %18810, i64* %RCX.i957, align 8
  store %struct.Memory* %loadMem_476772, %struct.Memory** %MEMORY
  %loadMem_47677a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18812 = getelementptr inbounds %struct.GPR, %struct.GPR* %18811, i32 0, i32 33
  %18813 = getelementptr inbounds %struct.Reg, %struct.Reg* %18812, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %18813 to i64*
  %18814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18815 = getelementptr inbounds %struct.GPR, %struct.GPR* %18814, i32 0, i32 5
  %18816 = getelementptr inbounds %struct.Reg, %struct.Reg* %18815, i32 0, i32 0
  %ECX.i954 = bitcast %union.anon* %18816 to i32*
  %18817 = load i32, i32* %ECX.i954
  %18818 = zext i32 %18817 to i64
  %18819 = load i64, i64* %PC.i953
  %18820 = add i64 %18819, 3
  store i64 %18820, i64* %PC.i953
  %18821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18821, align 1
  %18822 = and i32 %18817, 255
  %18823 = call i32 @llvm.ctpop.i32(i32 %18822)
  %18824 = trunc i32 %18823 to i8
  %18825 = and i8 %18824, 1
  %18826 = xor i8 %18825, 1
  %18827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18826, i8* %18827, align 1
  %18828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18828, align 1
  %18829 = icmp eq i32 %18817, 0
  %18830 = zext i1 %18829 to i8
  %18831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18830, i8* %18831, align 1
  %18832 = lshr i32 %18817, 31
  %18833 = trunc i32 %18832 to i8
  %18834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18833, i8* %18834, align 1
  %18835 = lshr i32 %18817, 31
  %18836 = xor i32 %18832, %18835
  %18837 = add i32 %18836, %18835
  %18838 = icmp eq i32 %18837, 2
  %18839 = zext i1 %18838 to i8
  %18840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18839, i8* %18840, align 1
  store %struct.Memory* %loadMem_47677a, %struct.Memory** %MEMORY
  %loadMem_47677d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18842 = getelementptr inbounds %struct.GPR, %struct.GPR* %18841, i32 0, i32 33
  %18843 = getelementptr inbounds %struct.Reg, %struct.Reg* %18842, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %18843 to i64*
  %18844 = load i64, i64* %PC.i952
  %18845 = add i64 %18844, 1074
  %18846 = load i64, i64* %PC.i952
  %18847 = add i64 %18846, 6
  %18848 = load i64, i64* %PC.i952
  %18849 = add i64 %18848, 6
  store i64 %18849, i64* %PC.i952
  %18850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18851 = load i8, i8* %18850, align 1
  store i8 %18851, i8* %BRANCH_TAKEN, align 1
  %18852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18853 = icmp ne i8 %18851, 0
  %18854 = select i1 %18853, i64 %18845, i64 %18847
  store i64 %18854, i64* %18852, align 8
  store %struct.Memory* %loadMem_47677d, %struct.Memory** %MEMORY
  %loadBr_47677d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47677d = icmp eq i8 %loadBr_47677d, 1
  br i1 %cmpBr_47677d, label %block_.L_476baf, label %block_476783

block_476783:                                     ; preds = %block_47676e
  %loadMem_476783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18856 = getelementptr inbounds %struct.GPR, %struct.GPR* %18855, i32 0, i32 33
  %18857 = getelementptr inbounds %struct.Reg, %struct.Reg* %18856, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %18857 to i64*
  %18858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18859 = getelementptr inbounds %struct.GPR, %struct.GPR* %18858, i32 0, i32 1
  %18860 = getelementptr inbounds %struct.Reg, %struct.Reg* %18859, i32 0, i32 0
  %RAX.i950 = bitcast %union.anon* %18860 to i64*
  %18861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18862 = getelementptr inbounds %struct.GPR, %struct.GPR* %18861, i32 0, i32 15
  %18863 = getelementptr inbounds %struct.Reg, %struct.Reg* %18862, i32 0, i32 0
  %RBP.i951 = bitcast %union.anon* %18863 to i64*
  %18864 = load i64, i64* %RBP.i951
  %18865 = sub i64 %18864, 48
  %18866 = load i64, i64* %PC.i949
  %18867 = add i64 %18866, 3
  store i64 %18867, i64* %PC.i949
  %18868 = inttoptr i64 %18865 to i32*
  %18869 = load i32, i32* %18868
  %18870 = zext i32 %18869 to i64
  store i64 %18870, i64* %RAX.i950, align 8
  store %struct.Memory* %loadMem_476783, %struct.Memory** %MEMORY
  %loadMem_476786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18872 = getelementptr inbounds %struct.GPR, %struct.GPR* %18871, i32 0, i32 33
  %18873 = getelementptr inbounds %struct.Reg, %struct.Reg* %18872, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %18873 to i64*
  %18874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18875 = getelementptr inbounds %struct.GPR, %struct.GPR* %18874, i32 0, i32 1
  %18876 = getelementptr inbounds %struct.Reg, %struct.Reg* %18875, i32 0, i32 0
  %RAX.i948 = bitcast %union.anon* %18876 to i64*
  %18877 = load i64, i64* %RAX.i948
  %18878 = load i64, i64* %PC.i947
  %18879 = add i64 %18878, 3
  store i64 %18879, i64* %PC.i947
  %18880 = trunc i64 %18877 to i32
  %18881 = sub i32 %18880, 20
  %18882 = zext i32 %18881 to i64
  store i64 %18882, i64* %RAX.i948, align 8
  %18883 = icmp ult i32 %18880, 20
  %18884 = zext i1 %18883 to i8
  %18885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18884, i8* %18885, align 1
  %18886 = and i32 %18881, 255
  %18887 = call i32 @llvm.ctpop.i32(i32 %18886)
  %18888 = trunc i32 %18887 to i8
  %18889 = and i8 %18888, 1
  %18890 = xor i8 %18889, 1
  %18891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18890, i8* %18891, align 1
  %18892 = xor i64 20, %18877
  %18893 = trunc i64 %18892 to i32
  %18894 = xor i32 %18893, %18881
  %18895 = lshr i32 %18894, 4
  %18896 = trunc i32 %18895 to i8
  %18897 = and i8 %18896, 1
  %18898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18897, i8* %18898, align 1
  %18899 = icmp eq i32 %18881, 0
  %18900 = zext i1 %18899 to i8
  %18901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18900, i8* %18901, align 1
  %18902 = lshr i32 %18881, 31
  %18903 = trunc i32 %18902 to i8
  %18904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18903, i8* %18904, align 1
  %18905 = lshr i32 %18880, 31
  %18906 = xor i32 %18902, %18905
  %18907 = add i32 %18906, %18905
  %18908 = icmp eq i32 %18907, 2
  %18909 = zext i1 %18908 to i8
  %18910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18909, i8* %18910, align 1
  store %struct.Memory* %loadMem_476786, %struct.Memory** %MEMORY
  %loadMem_476789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18912 = getelementptr inbounds %struct.GPR, %struct.GPR* %18911, i32 0, i32 33
  %18913 = getelementptr inbounds %struct.Reg, %struct.Reg* %18912, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %18913 to i64*
  %18914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18915 = getelementptr inbounds %struct.GPR, %struct.GPR* %18914, i32 0, i32 1
  %18916 = getelementptr inbounds %struct.Reg, %struct.Reg* %18915, i32 0, i32 0
  %EAX.i945 = bitcast %union.anon* %18916 to i32*
  %18917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18918 = getelementptr inbounds %struct.GPR, %struct.GPR* %18917, i32 0, i32 5
  %18919 = getelementptr inbounds %struct.Reg, %struct.Reg* %18918, i32 0, i32 0
  %RCX.i946 = bitcast %union.anon* %18919 to i64*
  %18920 = load i32, i32* %EAX.i945
  %18921 = zext i32 %18920 to i64
  %18922 = load i64, i64* %PC.i944
  %18923 = add i64 %18922, 3
  store i64 %18923, i64* %PC.i944
  %18924 = shl i64 %18921, 32
  %18925 = ashr exact i64 %18924, 32
  store i64 %18925, i64* %RCX.i946, align 8
  store %struct.Memory* %loadMem_476789, %struct.Memory** %MEMORY
  %loadMem_47678c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18927 = getelementptr inbounds %struct.GPR, %struct.GPR* %18926, i32 0, i32 33
  %18928 = getelementptr inbounds %struct.Reg, %struct.Reg* %18927, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %18928 to i64*
  %18929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18930 = getelementptr inbounds %struct.GPR, %struct.GPR* %18929, i32 0, i32 1
  %18931 = getelementptr inbounds %struct.Reg, %struct.Reg* %18930, i32 0, i32 0
  %RAX.i942 = bitcast %union.anon* %18931 to i64*
  %18932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18933 = getelementptr inbounds %struct.GPR, %struct.GPR* %18932, i32 0, i32 5
  %18934 = getelementptr inbounds %struct.Reg, %struct.Reg* %18933, i32 0, i32 0
  %RCX.i943 = bitcast %union.anon* %18934 to i64*
  %18935 = load i64, i64* %RCX.i943
  %18936 = add i64 %18935, 12099168
  %18937 = load i64, i64* %PC.i941
  %18938 = add i64 %18937, 8
  store i64 %18938, i64* %PC.i941
  %18939 = inttoptr i64 %18936 to i8*
  %18940 = load i8, i8* %18939
  %18941 = zext i8 %18940 to i64
  store i64 %18941, i64* %RAX.i942, align 8
  store %struct.Memory* %loadMem_47678c, %struct.Memory** %MEMORY
  %loadMem_476794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18943 = getelementptr inbounds %struct.GPR, %struct.GPR* %18942, i32 0, i32 33
  %18944 = getelementptr inbounds %struct.Reg, %struct.Reg* %18943, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %18944 to i64*
  %18945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18946 = getelementptr inbounds %struct.GPR, %struct.GPR* %18945, i32 0, i32 1
  %18947 = getelementptr inbounds %struct.Reg, %struct.Reg* %18946, i32 0, i32 0
  %EAX.i940 = bitcast %union.anon* %18947 to i32*
  %18948 = load i32, i32* %EAX.i940
  %18949 = zext i32 %18948 to i64
  %18950 = load i64, i64* %PC.i939
  %18951 = add i64 %18950, 3
  store i64 %18951, i64* %PC.i939
  %18952 = sub i32 %18948, 3
  %18953 = icmp ult i32 %18948, 3
  %18954 = zext i1 %18953 to i8
  %18955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18954, i8* %18955, align 1
  %18956 = and i32 %18952, 255
  %18957 = call i32 @llvm.ctpop.i32(i32 %18956)
  %18958 = trunc i32 %18957 to i8
  %18959 = and i8 %18958, 1
  %18960 = xor i8 %18959, 1
  %18961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18960, i8* %18961, align 1
  %18962 = xor i64 3, %18949
  %18963 = trunc i64 %18962 to i32
  %18964 = xor i32 %18963, %18952
  %18965 = lshr i32 %18964, 4
  %18966 = trunc i32 %18965 to i8
  %18967 = and i8 %18966, 1
  %18968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18967, i8* %18968, align 1
  %18969 = icmp eq i32 %18952, 0
  %18970 = zext i1 %18969 to i8
  %18971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18970, i8* %18971, align 1
  %18972 = lshr i32 %18952, 31
  %18973 = trunc i32 %18972 to i8
  %18974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18973, i8* %18974, align 1
  %18975 = lshr i32 %18948, 31
  %18976 = xor i32 %18972, %18975
  %18977 = add i32 %18976, %18975
  %18978 = icmp eq i32 %18977, 2
  %18979 = zext i1 %18978 to i8
  %18980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18979, i8* %18980, align 1
  store %struct.Memory* %loadMem_476794, %struct.Memory** %MEMORY
  %loadMem_476797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18982 = getelementptr inbounds %struct.GPR, %struct.GPR* %18981, i32 0, i32 33
  %18983 = getelementptr inbounds %struct.Reg, %struct.Reg* %18982, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %18983 to i64*
  %18984 = load i64, i64* %PC.i938
  %18985 = add i64 %18984, 244
  %18986 = load i64, i64* %PC.i938
  %18987 = add i64 %18986, 6
  %18988 = load i64, i64* %PC.i938
  %18989 = add i64 %18988, 6
  store i64 %18989, i64* %PC.i938
  %18990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18991 = load i8, i8* %18990, align 1
  store i8 %18991, i8* %BRANCH_TAKEN, align 1
  %18992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18993 = icmp ne i8 %18991, 0
  %18994 = select i1 %18993, i64 %18985, i64 %18987
  store i64 %18994, i64* %18992, align 8
  store %struct.Memory* %loadMem_476797, %struct.Memory** %MEMORY
  %loadBr_476797 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476797 = icmp eq i8 %loadBr_476797, 1
  br i1 %cmpBr_476797, label %block_.L_47688b, label %block_47679d

block_47679d:                                     ; preds = %block_476783
  %loadMem_47679d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18996 = getelementptr inbounds %struct.GPR, %struct.GPR* %18995, i32 0, i32 33
  %18997 = getelementptr inbounds %struct.Reg, %struct.Reg* %18996, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %18997 to i64*
  %18998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18999 = getelementptr inbounds %struct.GPR, %struct.GPR* %18998, i32 0, i32 1
  %19000 = getelementptr inbounds %struct.Reg, %struct.Reg* %18999, i32 0, i32 0
  %RAX.i936 = bitcast %union.anon* %19000 to i64*
  %19001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19002 = getelementptr inbounds %struct.GPR, %struct.GPR* %19001, i32 0, i32 15
  %19003 = getelementptr inbounds %struct.Reg, %struct.Reg* %19002, i32 0, i32 0
  %RBP.i937 = bitcast %union.anon* %19003 to i64*
  %19004 = load i64, i64* %RBP.i937
  %19005 = sub i64 %19004, 48
  %19006 = load i64, i64* %PC.i935
  %19007 = add i64 %19006, 3
  store i64 %19007, i64* %PC.i935
  %19008 = inttoptr i64 %19005 to i32*
  %19009 = load i32, i32* %19008
  %19010 = zext i32 %19009 to i64
  store i64 %19010, i64* %RAX.i936, align 8
  store %struct.Memory* %loadMem_47679d, %struct.Memory** %MEMORY
  %loadMem_4767a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19012 = getelementptr inbounds %struct.GPR, %struct.GPR* %19011, i32 0, i32 33
  %19013 = getelementptr inbounds %struct.Reg, %struct.Reg* %19012, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %19013 to i64*
  %19014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19015 = getelementptr inbounds %struct.GPR, %struct.GPR* %19014, i32 0, i32 1
  %19016 = getelementptr inbounds %struct.Reg, %struct.Reg* %19015, i32 0, i32 0
  %RAX.i934 = bitcast %union.anon* %19016 to i64*
  %19017 = load i64, i64* %RAX.i934
  %19018 = load i64, i64* %PC.i933
  %19019 = add i64 %19018, 3
  store i64 %19019, i64* %PC.i933
  %19020 = trunc i64 %19017 to i32
  %19021 = sub i32 %19020, 20
  %19022 = zext i32 %19021 to i64
  store i64 %19022, i64* %RAX.i934, align 8
  %19023 = icmp ult i32 %19020, 20
  %19024 = zext i1 %19023 to i8
  %19025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19024, i8* %19025, align 1
  %19026 = and i32 %19021, 255
  %19027 = call i32 @llvm.ctpop.i32(i32 %19026)
  %19028 = trunc i32 %19027 to i8
  %19029 = and i8 %19028, 1
  %19030 = xor i8 %19029, 1
  %19031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19030, i8* %19031, align 1
  %19032 = xor i64 20, %19017
  %19033 = trunc i64 %19032 to i32
  %19034 = xor i32 %19033, %19021
  %19035 = lshr i32 %19034, 4
  %19036 = trunc i32 %19035 to i8
  %19037 = and i8 %19036, 1
  %19038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19037, i8* %19038, align 1
  %19039 = icmp eq i32 %19021, 0
  %19040 = zext i1 %19039 to i8
  %19041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19040, i8* %19041, align 1
  %19042 = lshr i32 %19021, 31
  %19043 = trunc i32 %19042 to i8
  %19044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19043, i8* %19044, align 1
  %19045 = lshr i32 %19020, 31
  %19046 = xor i32 %19042, %19045
  %19047 = add i32 %19046, %19045
  %19048 = icmp eq i32 %19047, 2
  %19049 = zext i1 %19048 to i8
  %19050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19049, i8* %19050, align 1
  store %struct.Memory* %loadMem_4767a0, %struct.Memory** %MEMORY
  %loadMem_4767a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19052 = getelementptr inbounds %struct.GPR, %struct.GPR* %19051, i32 0, i32 33
  %19053 = getelementptr inbounds %struct.Reg, %struct.Reg* %19052, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %19053 to i64*
  %19054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19055 = getelementptr inbounds %struct.GPR, %struct.GPR* %19054, i32 0, i32 1
  %19056 = getelementptr inbounds %struct.Reg, %struct.Reg* %19055, i32 0, i32 0
  %EAX.i931 = bitcast %union.anon* %19056 to i32*
  %19057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19058 = getelementptr inbounds %struct.GPR, %struct.GPR* %19057, i32 0, i32 5
  %19059 = getelementptr inbounds %struct.Reg, %struct.Reg* %19058, i32 0, i32 0
  %RCX.i932 = bitcast %union.anon* %19059 to i64*
  %19060 = load i32, i32* %EAX.i931
  %19061 = zext i32 %19060 to i64
  %19062 = load i64, i64* %PC.i930
  %19063 = add i64 %19062, 3
  store i64 %19063, i64* %PC.i930
  %19064 = shl i64 %19061, 32
  %19065 = ashr exact i64 %19064, 32
  store i64 %19065, i64* %RCX.i932, align 8
  store %struct.Memory* %loadMem_4767a3, %struct.Memory** %MEMORY
  %loadMem_4767a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19067 = getelementptr inbounds %struct.GPR, %struct.GPR* %19066, i32 0, i32 33
  %19068 = getelementptr inbounds %struct.Reg, %struct.Reg* %19067, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %19068 to i64*
  %19069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19070 = getelementptr inbounds %struct.GPR, %struct.GPR* %19069, i32 0, i32 1
  %19071 = getelementptr inbounds %struct.Reg, %struct.Reg* %19070, i32 0, i32 0
  %RAX.i928 = bitcast %union.anon* %19071 to i64*
  %19072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19073 = getelementptr inbounds %struct.GPR, %struct.GPR* %19072, i32 0, i32 5
  %19074 = getelementptr inbounds %struct.Reg, %struct.Reg* %19073, i32 0, i32 0
  %RCX.i929 = bitcast %union.anon* %19074 to i64*
  %19075 = load i64, i64* %RCX.i929
  %19076 = add i64 %19075, 12099168
  %19077 = load i64, i64* %PC.i927
  %19078 = add i64 %19077, 8
  store i64 %19078, i64* %PC.i927
  %19079 = inttoptr i64 %19076 to i8*
  %19080 = load i8, i8* %19079
  %19081 = zext i8 %19080 to i64
  store i64 %19081, i64* %RAX.i928, align 8
  store %struct.Memory* %loadMem_4767a6, %struct.Memory** %MEMORY
  %loadMem_4767ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %19082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19083 = getelementptr inbounds %struct.GPR, %struct.GPR* %19082, i32 0, i32 33
  %19084 = getelementptr inbounds %struct.Reg, %struct.Reg* %19083, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %19084 to i64*
  %19085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19086 = getelementptr inbounds %struct.GPR, %struct.GPR* %19085, i32 0, i32 1
  %19087 = getelementptr inbounds %struct.Reg, %struct.Reg* %19086, i32 0, i32 0
  %EAX.i926 = bitcast %union.anon* %19087 to i32*
  %19088 = load i32, i32* %EAX.i926
  %19089 = zext i32 %19088 to i64
  %19090 = load i64, i64* %PC.i925
  %19091 = add i64 %19090, 3
  store i64 %19091, i64* %PC.i925
  %19092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19092, align 1
  %19093 = and i32 %19088, 255
  %19094 = call i32 @llvm.ctpop.i32(i32 %19093)
  %19095 = trunc i32 %19094 to i8
  %19096 = and i8 %19095, 1
  %19097 = xor i8 %19096, 1
  %19098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19097, i8* %19098, align 1
  %19099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19099, align 1
  %19100 = icmp eq i32 %19088, 0
  %19101 = zext i1 %19100 to i8
  %19102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19101, i8* %19102, align 1
  %19103 = lshr i32 %19088, 31
  %19104 = trunc i32 %19103 to i8
  %19105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19104, i8* %19105, align 1
  %19106 = lshr i32 %19088, 31
  %19107 = xor i32 %19103, %19106
  %19108 = add i32 %19107, %19106
  %19109 = icmp eq i32 %19108, 2
  %19110 = zext i1 %19109 to i8
  %19111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19110, i8* %19111, align 1
  store %struct.Memory* %loadMem_4767ae, %struct.Memory** %MEMORY
  %loadMem_4767b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19113 = getelementptr inbounds %struct.GPR, %struct.GPR* %19112, i32 0, i32 33
  %19114 = getelementptr inbounds %struct.Reg, %struct.Reg* %19113, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %19114 to i64*
  %19115 = load i64, i64* %PC.i924
  %19116 = add i64 %19115, 218
  %19117 = load i64, i64* %PC.i924
  %19118 = add i64 %19117, 6
  %19119 = load i64, i64* %PC.i924
  %19120 = add i64 %19119, 6
  store i64 %19120, i64* %PC.i924
  %19121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19122 = load i8, i8* %19121, align 1
  %19123 = icmp eq i8 %19122, 0
  %19124 = zext i1 %19123 to i8
  store i8 %19124, i8* %BRANCH_TAKEN, align 1
  %19125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19126 = select i1 %19123, i64 %19116, i64 %19118
  store i64 %19126, i64* %19125, align 8
  store %struct.Memory* %loadMem_4767b1, %struct.Memory** %MEMORY
  %loadBr_4767b1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4767b1 = icmp eq i8 %loadBr_4767b1, 1
  br i1 %cmpBr_4767b1, label %block_.L_47688b, label %block_4767b7

block_4767b7:                                     ; preds = %block_47679d
  %loadMem_4767b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19128 = getelementptr inbounds %struct.GPR, %struct.GPR* %19127, i32 0, i32 33
  %19129 = getelementptr inbounds %struct.Reg, %struct.Reg* %19128, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %19129 to i64*
  %19130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19131 = getelementptr inbounds %struct.GPR, %struct.GPR* %19130, i32 0, i32 1
  %19132 = getelementptr inbounds %struct.Reg, %struct.Reg* %19131, i32 0, i32 0
  %RAX.i922 = bitcast %union.anon* %19132 to i64*
  %19133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19134 = getelementptr inbounds %struct.GPR, %struct.GPR* %19133, i32 0, i32 15
  %19135 = getelementptr inbounds %struct.Reg, %struct.Reg* %19134, i32 0, i32 0
  %RBP.i923 = bitcast %union.anon* %19135 to i64*
  %19136 = load i64, i64* %RBP.i923
  %19137 = sub i64 %19136, 48
  %19138 = load i64, i64* %PC.i921
  %19139 = add i64 %19138, 3
  store i64 %19139, i64* %PC.i921
  %19140 = inttoptr i64 %19137 to i32*
  %19141 = load i32, i32* %19140
  %19142 = zext i32 %19141 to i64
  store i64 %19142, i64* %RAX.i922, align 8
  store %struct.Memory* %loadMem_4767b7, %struct.Memory** %MEMORY
  %loadMem_4767ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %19143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19144 = getelementptr inbounds %struct.GPR, %struct.GPR* %19143, i32 0, i32 33
  %19145 = getelementptr inbounds %struct.Reg, %struct.Reg* %19144, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %19145 to i64*
  %19146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19147 = getelementptr inbounds %struct.GPR, %struct.GPR* %19146, i32 0, i32 1
  %19148 = getelementptr inbounds %struct.Reg, %struct.Reg* %19147, i32 0, i32 0
  %RAX.i920 = bitcast %union.anon* %19148 to i64*
  %19149 = load i64, i64* %RAX.i920
  %19150 = load i64, i64* %PC.i919
  %19151 = add i64 %19150, 3
  store i64 %19151, i64* %PC.i919
  %19152 = trunc i64 %19149 to i32
  %19153 = sub i32 %19152, 20
  %19154 = zext i32 %19153 to i64
  store i64 %19154, i64* %RAX.i920, align 8
  %19155 = icmp ult i32 %19152, 20
  %19156 = zext i1 %19155 to i8
  %19157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19156, i8* %19157, align 1
  %19158 = and i32 %19153, 255
  %19159 = call i32 @llvm.ctpop.i32(i32 %19158)
  %19160 = trunc i32 %19159 to i8
  %19161 = and i8 %19160, 1
  %19162 = xor i8 %19161, 1
  %19163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19162, i8* %19163, align 1
  %19164 = xor i64 20, %19149
  %19165 = trunc i64 %19164 to i32
  %19166 = xor i32 %19165, %19153
  %19167 = lshr i32 %19166, 4
  %19168 = trunc i32 %19167 to i8
  %19169 = and i8 %19168, 1
  %19170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19169, i8* %19170, align 1
  %19171 = icmp eq i32 %19153, 0
  %19172 = zext i1 %19171 to i8
  %19173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19172, i8* %19173, align 1
  %19174 = lshr i32 %19153, 31
  %19175 = trunc i32 %19174 to i8
  %19176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19175, i8* %19176, align 1
  %19177 = lshr i32 %19152, 31
  %19178 = xor i32 %19174, %19177
  %19179 = add i32 %19178, %19177
  %19180 = icmp eq i32 %19179, 2
  %19181 = zext i1 %19180 to i8
  %19182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19181, i8* %19182, align 1
  store %struct.Memory* %loadMem_4767ba, %struct.Memory** %MEMORY
  %loadMem_4767bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %19183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19184 = getelementptr inbounds %struct.GPR, %struct.GPR* %19183, i32 0, i32 33
  %19185 = getelementptr inbounds %struct.Reg, %struct.Reg* %19184, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %19185 to i64*
  %19186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19187 = getelementptr inbounds %struct.GPR, %struct.GPR* %19186, i32 0, i32 1
  %19188 = getelementptr inbounds %struct.Reg, %struct.Reg* %19187, i32 0, i32 0
  %RAX.i918 = bitcast %union.anon* %19188 to i64*
  %19189 = load i64, i64* %RAX.i918
  %19190 = load i64, i64* %PC.i917
  %19191 = add i64 %19190, 3
  store i64 %19191, i64* %PC.i917
  %19192 = trunc i64 %19189 to i32
  %19193 = sub i32 %19192, 20
  %19194 = zext i32 %19193 to i64
  store i64 %19194, i64* %RAX.i918, align 8
  %19195 = icmp ult i32 %19192, 20
  %19196 = zext i1 %19195 to i8
  %19197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19196, i8* %19197, align 1
  %19198 = and i32 %19193, 255
  %19199 = call i32 @llvm.ctpop.i32(i32 %19198)
  %19200 = trunc i32 %19199 to i8
  %19201 = and i8 %19200, 1
  %19202 = xor i8 %19201, 1
  %19203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19202, i8* %19203, align 1
  %19204 = xor i64 20, %19189
  %19205 = trunc i64 %19204 to i32
  %19206 = xor i32 %19205, %19193
  %19207 = lshr i32 %19206, 4
  %19208 = trunc i32 %19207 to i8
  %19209 = and i8 %19208, 1
  %19210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19209, i8* %19210, align 1
  %19211 = icmp eq i32 %19193, 0
  %19212 = zext i1 %19211 to i8
  %19213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19212, i8* %19213, align 1
  %19214 = lshr i32 %19193, 31
  %19215 = trunc i32 %19214 to i8
  %19216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19215, i8* %19216, align 1
  %19217 = lshr i32 %19192, 31
  %19218 = xor i32 %19214, %19217
  %19219 = add i32 %19218, %19217
  %19220 = icmp eq i32 %19219, 2
  %19221 = zext i1 %19220 to i8
  %19222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19221, i8* %19222, align 1
  store %struct.Memory* %loadMem_4767bd, %struct.Memory** %MEMORY
  %loadMem_4767c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19224 = getelementptr inbounds %struct.GPR, %struct.GPR* %19223, i32 0, i32 33
  %19225 = getelementptr inbounds %struct.Reg, %struct.Reg* %19224, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %19225 to i64*
  %19226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19227 = getelementptr inbounds %struct.GPR, %struct.GPR* %19226, i32 0, i32 1
  %19228 = getelementptr inbounds %struct.Reg, %struct.Reg* %19227, i32 0, i32 0
  %EAX.i915 = bitcast %union.anon* %19228 to i32*
  %19229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19230 = getelementptr inbounds %struct.GPR, %struct.GPR* %19229, i32 0, i32 5
  %19231 = getelementptr inbounds %struct.Reg, %struct.Reg* %19230, i32 0, i32 0
  %RCX.i916 = bitcast %union.anon* %19231 to i64*
  %19232 = load i32, i32* %EAX.i915
  %19233 = zext i32 %19232 to i64
  %19234 = load i64, i64* %PC.i914
  %19235 = add i64 %19234, 3
  store i64 %19235, i64* %PC.i914
  %19236 = shl i64 %19233, 32
  %19237 = ashr exact i64 %19236, 32
  store i64 %19237, i64* %RCX.i916, align 8
  store %struct.Memory* %loadMem_4767c0, %struct.Memory** %MEMORY
  %loadMem_4767c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19239 = getelementptr inbounds %struct.GPR, %struct.GPR* %19238, i32 0, i32 33
  %19240 = getelementptr inbounds %struct.Reg, %struct.Reg* %19239, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %19240 to i64*
  %19241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19242 = getelementptr inbounds %struct.GPR, %struct.GPR* %19241, i32 0, i32 1
  %19243 = getelementptr inbounds %struct.Reg, %struct.Reg* %19242, i32 0, i32 0
  %RAX.i912 = bitcast %union.anon* %19243 to i64*
  %19244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19245 = getelementptr inbounds %struct.GPR, %struct.GPR* %19244, i32 0, i32 5
  %19246 = getelementptr inbounds %struct.Reg, %struct.Reg* %19245, i32 0, i32 0
  %RCX.i913 = bitcast %union.anon* %19246 to i64*
  %19247 = load i64, i64* %RCX.i913
  %19248 = add i64 %19247, 12099168
  %19249 = load i64, i64* %PC.i911
  %19250 = add i64 %19249, 8
  store i64 %19250, i64* %PC.i911
  %19251 = inttoptr i64 %19248 to i8*
  %19252 = load i8, i8* %19251
  %19253 = zext i8 %19252 to i64
  store i64 %19253, i64* %RAX.i912, align 8
  store %struct.Memory* %loadMem_4767c3, %struct.Memory** %MEMORY
  %loadMem_4767cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %19254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19255 = getelementptr inbounds %struct.GPR, %struct.GPR* %19254, i32 0, i32 33
  %19256 = getelementptr inbounds %struct.Reg, %struct.Reg* %19255, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %19256 to i64*
  %19257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19258 = getelementptr inbounds %struct.GPR, %struct.GPR* %19257, i32 0, i32 1
  %19259 = getelementptr inbounds %struct.Reg, %struct.Reg* %19258, i32 0, i32 0
  %EAX.i910 = bitcast %union.anon* %19259 to i32*
  %19260 = load i32, i32* %EAX.i910
  %19261 = zext i32 %19260 to i64
  %19262 = load i64, i64* %PC.i909
  %19263 = add i64 %19262, 3
  store i64 %19263, i64* %PC.i909
  %19264 = sub i32 %19260, 3
  %19265 = icmp ult i32 %19260, 3
  %19266 = zext i1 %19265 to i8
  %19267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19266, i8* %19267, align 1
  %19268 = and i32 %19264, 255
  %19269 = call i32 @llvm.ctpop.i32(i32 %19268)
  %19270 = trunc i32 %19269 to i8
  %19271 = and i8 %19270, 1
  %19272 = xor i8 %19271, 1
  %19273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19272, i8* %19273, align 1
  %19274 = xor i64 3, %19261
  %19275 = trunc i64 %19274 to i32
  %19276 = xor i32 %19275, %19264
  %19277 = lshr i32 %19276, 4
  %19278 = trunc i32 %19277 to i8
  %19279 = and i8 %19278, 1
  %19280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19279, i8* %19280, align 1
  %19281 = icmp eq i32 %19264, 0
  %19282 = zext i1 %19281 to i8
  %19283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19282, i8* %19283, align 1
  %19284 = lshr i32 %19264, 31
  %19285 = trunc i32 %19284 to i8
  %19286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19285, i8* %19286, align 1
  %19287 = lshr i32 %19260, 31
  %19288 = xor i32 %19284, %19287
  %19289 = add i32 %19288, %19287
  %19290 = icmp eq i32 %19289, 2
  %19291 = zext i1 %19290 to i8
  %19292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19291, i8* %19292, align 1
  store %struct.Memory* %loadMem_4767cb, %struct.Memory** %MEMORY
  %loadMem_4767ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %19293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19294 = getelementptr inbounds %struct.GPR, %struct.GPR* %19293, i32 0, i32 33
  %19295 = getelementptr inbounds %struct.Reg, %struct.Reg* %19294, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %19295 to i64*
  %19296 = load i64, i64* %PC.i908
  %19297 = add i64 %19296, 189
  %19298 = load i64, i64* %PC.i908
  %19299 = add i64 %19298, 6
  %19300 = load i64, i64* %PC.i908
  %19301 = add i64 %19300, 6
  store i64 %19301, i64* %PC.i908
  %19302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19303 = load i8, i8* %19302, align 1
  store i8 %19303, i8* %BRANCH_TAKEN, align 1
  %19304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19305 = icmp ne i8 %19303, 0
  %19306 = select i1 %19305, i64 %19297, i64 %19299
  store i64 %19306, i64* %19304, align 8
  store %struct.Memory* %loadMem_4767ce, %struct.Memory** %MEMORY
  %loadBr_4767ce = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4767ce = icmp eq i8 %loadBr_4767ce, 1
  br i1 %cmpBr_4767ce, label %block_.L_47688b, label %block_4767d4

block_4767d4:                                     ; preds = %block_4767b7
  %loadMem_4767d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19308 = getelementptr inbounds %struct.GPR, %struct.GPR* %19307, i32 0, i32 33
  %19309 = getelementptr inbounds %struct.Reg, %struct.Reg* %19308, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %19309 to i64*
  %19310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19311 = getelementptr inbounds %struct.GPR, %struct.GPR* %19310, i32 0, i32 1
  %19312 = getelementptr inbounds %struct.Reg, %struct.Reg* %19311, i32 0, i32 0
  %RAX.i906 = bitcast %union.anon* %19312 to i64*
  %19313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19314 = getelementptr inbounds %struct.GPR, %struct.GPR* %19313, i32 0, i32 15
  %19315 = getelementptr inbounds %struct.Reg, %struct.Reg* %19314, i32 0, i32 0
  %RBP.i907 = bitcast %union.anon* %19315 to i64*
  %19316 = load i64, i64* %RBP.i907
  %19317 = sub i64 %19316, 48
  %19318 = load i64, i64* %PC.i905
  %19319 = add i64 %19318, 3
  store i64 %19319, i64* %PC.i905
  %19320 = inttoptr i64 %19317 to i32*
  %19321 = load i32, i32* %19320
  %19322 = zext i32 %19321 to i64
  store i64 %19322, i64* %RAX.i906, align 8
  store %struct.Memory* %loadMem_4767d4, %struct.Memory** %MEMORY
  %loadMem_4767d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19324 = getelementptr inbounds %struct.GPR, %struct.GPR* %19323, i32 0, i32 33
  %19325 = getelementptr inbounds %struct.Reg, %struct.Reg* %19324, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %19325 to i64*
  %19326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19327 = getelementptr inbounds %struct.GPR, %struct.GPR* %19326, i32 0, i32 1
  %19328 = getelementptr inbounds %struct.Reg, %struct.Reg* %19327, i32 0, i32 0
  %RAX.i904 = bitcast %union.anon* %19328 to i64*
  %19329 = load i64, i64* %RAX.i904
  %19330 = load i64, i64* %PC.i903
  %19331 = add i64 %19330, 3
  store i64 %19331, i64* %PC.i903
  %19332 = trunc i64 %19329 to i32
  %19333 = sub i32 %19332, 20
  %19334 = zext i32 %19333 to i64
  store i64 %19334, i64* %RAX.i904, align 8
  %19335 = icmp ult i32 %19332, 20
  %19336 = zext i1 %19335 to i8
  %19337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19336, i8* %19337, align 1
  %19338 = and i32 %19333, 255
  %19339 = call i32 @llvm.ctpop.i32(i32 %19338)
  %19340 = trunc i32 %19339 to i8
  %19341 = and i8 %19340, 1
  %19342 = xor i8 %19341, 1
  %19343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19342, i8* %19343, align 1
  %19344 = xor i64 20, %19329
  %19345 = trunc i64 %19344 to i32
  %19346 = xor i32 %19345, %19333
  %19347 = lshr i32 %19346, 4
  %19348 = trunc i32 %19347 to i8
  %19349 = and i8 %19348, 1
  %19350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19349, i8* %19350, align 1
  %19351 = icmp eq i32 %19333, 0
  %19352 = zext i1 %19351 to i8
  %19353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19352, i8* %19353, align 1
  %19354 = lshr i32 %19333, 31
  %19355 = trunc i32 %19354 to i8
  %19356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19355, i8* %19356, align 1
  %19357 = lshr i32 %19332, 31
  %19358 = xor i32 %19354, %19357
  %19359 = add i32 %19358, %19357
  %19360 = icmp eq i32 %19359, 2
  %19361 = zext i1 %19360 to i8
  %19362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19361, i8* %19362, align 1
  store %struct.Memory* %loadMem_4767d7, %struct.Memory** %MEMORY
  %loadMem_4767da = load %struct.Memory*, %struct.Memory** %MEMORY
  %19363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19364 = getelementptr inbounds %struct.GPR, %struct.GPR* %19363, i32 0, i32 33
  %19365 = getelementptr inbounds %struct.Reg, %struct.Reg* %19364, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %19365 to i64*
  %19366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19367 = getelementptr inbounds %struct.GPR, %struct.GPR* %19366, i32 0, i32 1
  %19368 = getelementptr inbounds %struct.Reg, %struct.Reg* %19367, i32 0, i32 0
  %RAX.i902 = bitcast %union.anon* %19368 to i64*
  %19369 = load i64, i64* %RAX.i902
  %19370 = load i64, i64* %PC.i901
  %19371 = add i64 %19370, 3
  store i64 %19371, i64* %PC.i901
  %19372 = trunc i64 %19369 to i32
  %19373 = sub i32 %19372, 20
  %19374 = zext i32 %19373 to i64
  store i64 %19374, i64* %RAX.i902, align 8
  %19375 = icmp ult i32 %19372, 20
  %19376 = zext i1 %19375 to i8
  %19377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19376, i8* %19377, align 1
  %19378 = and i32 %19373, 255
  %19379 = call i32 @llvm.ctpop.i32(i32 %19378)
  %19380 = trunc i32 %19379 to i8
  %19381 = and i8 %19380, 1
  %19382 = xor i8 %19381, 1
  %19383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19382, i8* %19383, align 1
  %19384 = xor i64 20, %19369
  %19385 = trunc i64 %19384 to i32
  %19386 = xor i32 %19385, %19373
  %19387 = lshr i32 %19386, 4
  %19388 = trunc i32 %19387 to i8
  %19389 = and i8 %19388, 1
  %19390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19389, i8* %19390, align 1
  %19391 = icmp eq i32 %19373, 0
  %19392 = zext i1 %19391 to i8
  %19393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19392, i8* %19393, align 1
  %19394 = lshr i32 %19373, 31
  %19395 = trunc i32 %19394 to i8
  %19396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19395, i8* %19396, align 1
  %19397 = lshr i32 %19372, 31
  %19398 = xor i32 %19394, %19397
  %19399 = add i32 %19398, %19397
  %19400 = icmp eq i32 %19399, 2
  %19401 = zext i1 %19400 to i8
  %19402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19401, i8* %19402, align 1
  store %struct.Memory* %loadMem_4767da, %struct.Memory** %MEMORY
  %loadMem_4767dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %19403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19404 = getelementptr inbounds %struct.GPR, %struct.GPR* %19403, i32 0, i32 33
  %19405 = getelementptr inbounds %struct.Reg, %struct.Reg* %19404, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %19405 to i64*
  %19406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19407 = getelementptr inbounds %struct.GPR, %struct.GPR* %19406, i32 0, i32 1
  %19408 = getelementptr inbounds %struct.Reg, %struct.Reg* %19407, i32 0, i32 0
  %EAX.i899 = bitcast %union.anon* %19408 to i32*
  %19409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19410 = getelementptr inbounds %struct.GPR, %struct.GPR* %19409, i32 0, i32 5
  %19411 = getelementptr inbounds %struct.Reg, %struct.Reg* %19410, i32 0, i32 0
  %RCX.i900 = bitcast %union.anon* %19411 to i64*
  %19412 = load i32, i32* %EAX.i899
  %19413 = zext i32 %19412 to i64
  %19414 = load i64, i64* %PC.i898
  %19415 = add i64 %19414, 3
  store i64 %19415, i64* %PC.i898
  %19416 = shl i64 %19413, 32
  %19417 = ashr exact i64 %19416, 32
  store i64 %19417, i64* %RCX.i900, align 8
  store %struct.Memory* %loadMem_4767dd, %struct.Memory** %MEMORY
  %loadMem_4767e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19419 = getelementptr inbounds %struct.GPR, %struct.GPR* %19418, i32 0, i32 33
  %19420 = getelementptr inbounds %struct.Reg, %struct.Reg* %19419, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %19420 to i64*
  %19421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19422 = getelementptr inbounds %struct.GPR, %struct.GPR* %19421, i32 0, i32 1
  %19423 = getelementptr inbounds %struct.Reg, %struct.Reg* %19422, i32 0, i32 0
  %RAX.i896 = bitcast %union.anon* %19423 to i64*
  %19424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19425 = getelementptr inbounds %struct.GPR, %struct.GPR* %19424, i32 0, i32 5
  %19426 = getelementptr inbounds %struct.Reg, %struct.Reg* %19425, i32 0, i32 0
  %RCX.i897 = bitcast %union.anon* %19426 to i64*
  %19427 = load i64, i64* %RCX.i897
  %19428 = add i64 %19427, 12099168
  %19429 = load i64, i64* %PC.i895
  %19430 = add i64 %19429, 8
  store i64 %19430, i64* %PC.i895
  %19431 = inttoptr i64 %19428 to i8*
  %19432 = load i8, i8* %19431
  %19433 = zext i8 %19432 to i64
  store i64 %19433, i64* %RAX.i896, align 8
  store %struct.Memory* %loadMem_4767e0, %struct.Memory** %MEMORY
  %loadMem_4767e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19435 = getelementptr inbounds %struct.GPR, %struct.GPR* %19434, i32 0, i32 33
  %19436 = getelementptr inbounds %struct.Reg, %struct.Reg* %19435, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %19436 to i64*
  %19437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19438 = getelementptr inbounds %struct.GPR, %struct.GPR* %19437, i32 0, i32 1
  %19439 = getelementptr inbounds %struct.Reg, %struct.Reg* %19438, i32 0, i32 0
  %EAX.i893 = bitcast %union.anon* %19439 to i32*
  %19440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19441 = getelementptr inbounds %struct.GPR, %struct.GPR* %19440, i32 0, i32 15
  %19442 = getelementptr inbounds %struct.Reg, %struct.Reg* %19441, i32 0, i32 0
  %RBP.i894 = bitcast %union.anon* %19442 to i64*
  %19443 = load i32, i32* %EAX.i893
  %19444 = zext i32 %19443 to i64
  %19445 = load i64, i64* %RBP.i894
  %19446 = sub i64 %19445, 228
  %19447 = load i64, i64* %PC.i892
  %19448 = add i64 %19447, 6
  store i64 %19448, i64* %PC.i892
  %19449 = inttoptr i64 %19446 to i32*
  %19450 = load i32, i32* %19449
  %19451 = sub i32 %19443, %19450
  %19452 = icmp ult i32 %19443, %19450
  %19453 = zext i1 %19452 to i8
  %19454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19453, i8* %19454, align 1
  %19455 = and i32 %19451, 255
  %19456 = call i32 @llvm.ctpop.i32(i32 %19455)
  %19457 = trunc i32 %19456 to i8
  %19458 = and i8 %19457, 1
  %19459 = xor i8 %19458, 1
  %19460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19459, i8* %19460, align 1
  %19461 = xor i32 %19450, %19443
  %19462 = xor i32 %19461, %19451
  %19463 = lshr i32 %19462, 4
  %19464 = trunc i32 %19463 to i8
  %19465 = and i8 %19464, 1
  %19466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19465, i8* %19466, align 1
  %19467 = icmp eq i32 %19451, 0
  %19468 = zext i1 %19467 to i8
  %19469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19468, i8* %19469, align 1
  %19470 = lshr i32 %19451, 31
  %19471 = trunc i32 %19470 to i8
  %19472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19471, i8* %19472, align 1
  %19473 = lshr i32 %19443, 31
  %19474 = lshr i32 %19450, 31
  %19475 = xor i32 %19474, %19473
  %19476 = xor i32 %19470, %19473
  %19477 = add i32 %19476, %19475
  %19478 = icmp eq i32 %19477, 2
  %19479 = zext i1 %19478 to i8
  %19480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19479, i8* %19480, align 1
  store %struct.Memory* %loadMem_4767e8, %struct.Memory** %MEMORY
  %loadMem_4767ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %19481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19482 = getelementptr inbounds %struct.GPR, %struct.GPR* %19481, i32 0, i32 33
  %19483 = getelementptr inbounds %struct.Reg, %struct.Reg* %19482, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %19483 to i64*
  %19484 = load i64, i64* %PC.i891
  %19485 = add i64 %19484, 157
  %19486 = load i64, i64* %PC.i891
  %19487 = add i64 %19486, 6
  %19488 = load i64, i64* %PC.i891
  %19489 = add i64 %19488, 6
  store i64 %19489, i64* %PC.i891
  %19490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19491 = load i8, i8* %19490, align 1
  %19492 = icmp eq i8 %19491, 0
  %19493 = zext i1 %19492 to i8
  store i8 %19493, i8* %BRANCH_TAKEN, align 1
  %19494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19495 = select i1 %19492, i64 %19485, i64 %19487
  store i64 %19495, i64* %19494, align 8
  store %struct.Memory* %loadMem_4767ee, %struct.Memory** %MEMORY
  %loadBr_4767ee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4767ee = icmp eq i8 %loadBr_4767ee, 1
  br i1 %cmpBr_4767ee, label %block_.L_47688b, label %block_4767f4

block_4767f4:                                     ; preds = %block_4767d4
  %loadMem_4767f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19497 = getelementptr inbounds %struct.GPR, %struct.GPR* %19496, i32 0, i32 33
  %19498 = getelementptr inbounds %struct.Reg, %struct.Reg* %19497, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %19498 to i64*
  %19499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19500 = getelementptr inbounds %struct.GPR, %struct.GPR* %19499, i32 0, i32 1
  %19501 = getelementptr inbounds %struct.Reg, %struct.Reg* %19500, i32 0, i32 0
  %RAX.i889 = bitcast %union.anon* %19501 to i64*
  %19502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19503 = getelementptr inbounds %struct.GPR, %struct.GPR* %19502, i32 0, i32 15
  %19504 = getelementptr inbounds %struct.Reg, %struct.Reg* %19503, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %19504 to i64*
  %19505 = load i64, i64* %RBP.i890
  %19506 = sub i64 %19505, 48
  %19507 = load i64, i64* %PC.i888
  %19508 = add i64 %19507, 3
  store i64 %19508, i64* %PC.i888
  %19509 = inttoptr i64 %19506 to i32*
  %19510 = load i32, i32* %19509
  %19511 = zext i32 %19510 to i64
  store i64 %19511, i64* %RAX.i889, align 8
  store %struct.Memory* %loadMem_4767f4, %struct.Memory** %MEMORY
  %loadMem_4767f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19513 = getelementptr inbounds %struct.GPR, %struct.GPR* %19512, i32 0, i32 33
  %19514 = getelementptr inbounds %struct.Reg, %struct.Reg* %19513, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %19514 to i64*
  %19515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19516 = getelementptr inbounds %struct.GPR, %struct.GPR* %19515, i32 0, i32 1
  %19517 = getelementptr inbounds %struct.Reg, %struct.Reg* %19516, i32 0, i32 0
  %RAX.i887 = bitcast %union.anon* %19517 to i64*
  %19518 = load i64, i64* %RAX.i887
  %19519 = load i64, i64* %PC.i886
  %19520 = add i64 %19519, 3
  store i64 %19520, i64* %PC.i886
  %19521 = trunc i64 %19518 to i32
  %19522 = sub i32 %19521, 20
  %19523 = zext i32 %19522 to i64
  store i64 %19523, i64* %RAX.i887, align 8
  %19524 = icmp ult i32 %19521, 20
  %19525 = zext i1 %19524 to i8
  %19526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19525, i8* %19526, align 1
  %19527 = and i32 %19522, 255
  %19528 = call i32 @llvm.ctpop.i32(i32 %19527)
  %19529 = trunc i32 %19528 to i8
  %19530 = and i8 %19529, 1
  %19531 = xor i8 %19530, 1
  %19532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19531, i8* %19532, align 1
  %19533 = xor i64 20, %19518
  %19534 = trunc i64 %19533 to i32
  %19535 = xor i32 %19534, %19522
  %19536 = lshr i32 %19535, 4
  %19537 = trunc i32 %19536 to i8
  %19538 = and i8 %19537, 1
  %19539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19538, i8* %19539, align 1
  %19540 = icmp eq i32 %19522, 0
  %19541 = zext i1 %19540 to i8
  %19542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19541, i8* %19542, align 1
  %19543 = lshr i32 %19522, 31
  %19544 = trunc i32 %19543 to i8
  %19545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19544, i8* %19545, align 1
  %19546 = lshr i32 %19521, 31
  %19547 = xor i32 %19543, %19546
  %19548 = add i32 %19547, %19546
  %19549 = icmp eq i32 %19548, 2
  %19550 = zext i1 %19549 to i8
  %19551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19550, i8* %19551, align 1
  store %struct.Memory* %loadMem_4767f7, %struct.Memory** %MEMORY
  %loadMem_4767fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %19552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19553 = getelementptr inbounds %struct.GPR, %struct.GPR* %19552, i32 0, i32 33
  %19554 = getelementptr inbounds %struct.Reg, %struct.Reg* %19553, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %19554 to i64*
  %19555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19556 = getelementptr inbounds %struct.GPR, %struct.GPR* %19555, i32 0, i32 1
  %19557 = getelementptr inbounds %struct.Reg, %struct.Reg* %19556, i32 0, i32 0
  %RAX.i885 = bitcast %union.anon* %19557 to i64*
  %19558 = load i64, i64* %RAX.i885
  %19559 = load i64, i64* %PC.i884
  %19560 = add i64 %19559, 3
  store i64 %19560, i64* %PC.i884
  %19561 = trunc i64 %19558 to i32
  %19562 = sub i32 %19561, 20
  %19563 = zext i32 %19562 to i64
  store i64 %19563, i64* %RAX.i885, align 8
  %19564 = icmp ult i32 %19561, 20
  %19565 = zext i1 %19564 to i8
  %19566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19565, i8* %19566, align 1
  %19567 = and i32 %19562, 255
  %19568 = call i32 @llvm.ctpop.i32(i32 %19567)
  %19569 = trunc i32 %19568 to i8
  %19570 = and i8 %19569, 1
  %19571 = xor i8 %19570, 1
  %19572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19571, i8* %19572, align 1
  %19573 = xor i64 20, %19558
  %19574 = trunc i64 %19573 to i32
  %19575 = xor i32 %19574, %19562
  %19576 = lshr i32 %19575, 4
  %19577 = trunc i32 %19576 to i8
  %19578 = and i8 %19577, 1
  %19579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19578, i8* %19579, align 1
  %19580 = icmp eq i32 %19562, 0
  %19581 = zext i1 %19580 to i8
  %19582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19581, i8* %19582, align 1
  %19583 = lshr i32 %19562, 31
  %19584 = trunc i32 %19583 to i8
  %19585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19584, i8* %19585, align 1
  %19586 = lshr i32 %19561, 31
  %19587 = xor i32 %19583, %19586
  %19588 = add i32 %19587, %19586
  %19589 = icmp eq i32 %19588, 2
  %19590 = zext i1 %19589 to i8
  %19591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19590, i8* %19591, align 1
  store %struct.Memory* %loadMem_4767fa, %struct.Memory** %MEMORY
  %loadMem_4767fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %19592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19593 = getelementptr inbounds %struct.GPR, %struct.GPR* %19592, i32 0, i32 33
  %19594 = getelementptr inbounds %struct.Reg, %struct.Reg* %19593, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %19594 to i64*
  %19595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19596 = getelementptr inbounds %struct.GPR, %struct.GPR* %19595, i32 0, i32 1
  %19597 = getelementptr inbounds %struct.Reg, %struct.Reg* %19596, i32 0, i32 0
  %EAX.i882 = bitcast %union.anon* %19597 to i32*
  %19598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19599 = getelementptr inbounds %struct.GPR, %struct.GPR* %19598, i32 0, i32 5
  %19600 = getelementptr inbounds %struct.Reg, %struct.Reg* %19599, i32 0, i32 0
  %RCX.i883 = bitcast %union.anon* %19600 to i64*
  %19601 = load i32, i32* %EAX.i882
  %19602 = zext i32 %19601 to i64
  %19603 = load i64, i64* %PC.i881
  %19604 = add i64 %19603, 3
  store i64 %19604, i64* %PC.i881
  %19605 = shl i64 %19602, 32
  %19606 = ashr exact i64 %19605, 32
  store i64 %19606, i64* %RCX.i883, align 8
  store %struct.Memory* %loadMem_4767fd, %struct.Memory** %MEMORY
  %loadMem_476800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19608 = getelementptr inbounds %struct.GPR, %struct.GPR* %19607, i32 0, i32 33
  %19609 = getelementptr inbounds %struct.Reg, %struct.Reg* %19608, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %19609 to i64*
  %19610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19611 = getelementptr inbounds %struct.GPR, %struct.GPR* %19610, i32 0, i32 1
  %19612 = getelementptr inbounds %struct.Reg, %struct.Reg* %19611, i32 0, i32 0
  %RAX.i878 = bitcast %union.anon* %19612 to i64*
  %19613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19614 = getelementptr inbounds %struct.GPR, %struct.GPR* %19613, i32 0, i32 5
  %19615 = getelementptr inbounds %struct.Reg, %struct.Reg* %19614, i32 0, i32 0
  %RCX.i879 = bitcast %union.anon* %19615 to i64*
  %19616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19617 = getelementptr inbounds %struct.GPR, %struct.GPR* %19616, i32 0, i32 15
  %19618 = getelementptr inbounds %struct.Reg, %struct.Reg* %19617, i32 0, i32 0
  %RBP.i880 = bitcast %union.anon* %19618 to i64*
  %19619 = load i64, i64* %RBP.i880
  %19620 = load i64, i64* %RCX.i879
  %19621 = add i64 %19619, -1040
  %19622 = add i64 %19621, %19620
  %19623 = load i64, i64* %PC.i877
  %19624 = add i64 %19623, 8
  store i64 %19624, i64* %PC.i877
  %19625 = inttoptr i64 %19622 to i8*
  %19626 = load i8, i8* %19625
  %19627 = sext i8 %19626 to i64
  %19628 = and i64 %19627, 4294967295
  store i64 %19628, i64* %RAX.i878, align 8
  store %struct.Memory* %loadMem_476800, %struct.Memory** %MEMORY
  %loadMem_476808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19630 = getelementptr inbounds %struct.GPR, %struct.GPR* %19629, i32 0, i32 33
  %19631 = getelementptr inbounds %struct.Reg, %struct.Reg* %19630, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %19631 to i64*
  %19632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19633 = getelementptr inbounds %struct.GPR, %struct.GPR* %19632, i32 0, i32 1
  %19634 = getelementptr inbounds %struct.Reg, %struct.Reg* %19633, i32 0, i32 0
  %EAX.i876 = bitcast %union.anon* %19634 to i32*
  %19635 = load i32, i32* %EAX.i876
  %19636 = zext i32 %19635 to i64
  %19637 = load i64, i64* %PC.i875
  %19638 = add i64 %19637, 3
  store i64 %19638, i64* %PC.i875
  %19639 = sub i32 %19635, 1
  %19640 = icmp ult i32 %19635, 1
  %19641 = zext i1 %19640 to i8
  %19642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19641, i8* %19642, align 1
  %19643 = and i32 %19639, 255
  %19644 = call i32 @llvm.ctpop.i32(i32 %19643)
  %19645 = trunc i32 %19644 to i8
  %19646 = and i8 %19645, 1
  %19647 = xor i8 %19646, 1
  %19648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19647, i8* %19648, align 1
  %19649 = xor i64 1, %19636
  %19650 = trunc i64 %19649 to i32
  %19651 = xor i32 %19650, %19639
  %19652 = lshr i32 %19651, 4
  %19653 = trunc i32 %19652 to i8
  %19654 = and i8 %19653, 1
  %19655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19654, i8* %19655, align 1
  %19656 = icmp eq i32 %19639, 0
  %19657 = zext i1 %19656 to i8
  %19658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19657, i8* %19658, align 1
  %19659 = lshr i32 %19639, 31
  %19660 = trunc i32 %19659 to i8
  %19661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19660, i8* %19661, align 1
  %19662 = lshr i32 %19635, 31
  %19663 = xor i32 %19659, %19662
  %19664 = add i32 %19663, %19662
  %19665 = icmp eq i32 %19664, 2
  %19666 = zext i1 %19665 to i8
  %19667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19666, i8* %19667, align 1
  store %struct.Memory* %loadMem_476808, %struct.Memory** %MEMORY
  %loadMem_47680b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19669 = getelementptr inbounds %struct.GPR, %struct.GPR* %19668, i32 0, i32 33
  %19670 = getelementptr inbounds %struct.Reg, %struct.Reg* %19669, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %19670 to i64*
  %19671 = load i64, i64* %PC.i874
  %19672 = add i64 %19671, 128
  %19673 = load i64, i64* %PC.i874
  %19674 = add i64 %19673, 6
  %19675 = load i64, i64* %PC.i874
  %19676 = add i64 %19675, 6
  store i64 %19676, i64* %PC.i874
  %19677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19678 = load i8, i8* %19677, align 1
  store i8 %19678, i8* %BRANCH_TAKEN, align 1
  %19679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19680 = icmp ne i8 %19678, 0
  %19681 = select i1 %19680, i64 %19672, i64 %19674
  store i64 %19681, i64* %19679, align 8
  store %struct.Memory* %loadMem_47680b, %struct.Memory** %MEMORY
  %loadBr_47680b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47680b = icmp eq i8 %loadBr_47680b, 1
  br i1 %cmpBr_47680b, label %block_.L_47688b, label %block_476811

block_476811:                                     ; preds = %block_4767f4
  %loadMem_476811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19683 = getelementptr inbounds %struct.GPR, %struct.GPR* %19682, i32 0, i32 33
  %19684 = getelementptr inbounds %struct.Reg, %struct.Reg* %19683, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %19684 to i64*
  %19685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19686 = getelementptr inbounds %struct.GPR, %struct.GPR* %19685, i32 0, i32 1
  %19687 = getelementptr inbounds %struct.Reg, %struct.Reg* %19686, i32 0, i32 0
  %RAX.i872 = bitcast %union.anon* %19687 to i64*
  %19688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19689 = getelementptr inbounds %struct.GPR, %struct.GPR* %19688, i32 0, i32 15
  %19690 = getelementptr inbounds %struct.Reg, %struct.Reg* %19689, i32 0, i32 0
  %RBP.i873 = bitcast %union.anon* %19690 to i64*
  %19691 = load i64, i64* %RBP.i873
  %19692 = sub i64 %19691, 48
  %19693 = load i64, i64* %PC.i871
  %19694 = add i64 %19693, 3
  store i64 %19694, i64* %PC.i871
  %19695 = inttoptr i64 %19692 to i32*
  %19696 = load i32, i32* %19695
  %19697 = zext i32 %19696 to i64
  store i64 %19697, i64* %RAX.i872, align 8
  store %struct.Memory* %loadMem_476811, %struct.Memory** %MEMORY
  %loadMem_476814 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19699 = getelementptr inbounds %struct.GPR, %struct.GPR* %19698, i32 0, i32 33
  %19700 = getelementptr inbounds %struct.Reg, %struct.Reg* %19699, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %19700 to i64*
  %19701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19702 = getelementptr inbounds %struct.GPR, %struct.GPR* %19701, i32 0, i32 1
  %19703 = getelementptr inbounds %struct.Reg, %struct.Reg* %19702, i32 0, i32 0
  %RAX.i870 = bitcast %union.anon* %19703 to i64*
  %19704 = load i64, i64* %RAX.i870
  %19705 = load i64, i64* %PC.i869
  %19706 = add i64 %19705, 3
  store i64 %19706, i64* %PC.i869
  %19707 = trunc i64 %19704 to i32
  %19708 = sub i32 %19707, 20
  %19709 = zext i32 %19708 to i64
  store i64 %19709, i64* %RAX.i870, align 8
  %19710 = icmp ult i32 %19707, 20
  %19711 = zext i1 %19710 to i8
  %19712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19711, i8* %19712, align 1
  %19713 = and i32 %19708, 255
  %19714 = call i32 @llvm.ctpop.i32(i32 %19713)
  %19715 = trunc i32 %19714 to i8
  %19716 = and i8 %19715, 1
  %19717 = xor i8 %19716, 1
  %19718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19717, i8* %19718, align 1
  %19719 = xor i64 20, %19704
  %19720 = trunc i64 %19719 to i32
  %19721 = xor i32 %19720, %19708
  %19722 = lshr i32 %19721, 4
  %19723 = trunc i32 %19722 to i8
  %19724 = and i8 %19723, 1
  %19725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19724, i8* %19725, align 1
  %19726 = icmp eq i32 %19708, 0
  %19727 = zext i1 %19726 to i8
  %19728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19727, i8* %19728, align 1
  %19729 = lshr i32 %19708, 31
  %19730 = trunc i32 %19729 to i8
  %19731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19730, i8* %19731, align 1
  %19732 = lshr i32 %19707, 31
  %19733 = xor i32 %19729, %19732
  %19734 = add i32 %19733, %19732
  %19735 = icmp eq i32 %19734, 2
  %19736 = zext i1 %19735 to i8
  %19737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19736, i8* %19737, align 1
  store %struct.Memory* %loadMem_476814, %struct.Memory** %MEMORY
  %loadMem_476817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19739 = getelementptr inbounds %struct.GPR, %struct.GPR* %19738, i32 0, i32 33
  %19740 = getelementptr inbounds %struct.Reg, %struct.Reg* %19739, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %19740 to i64*
  %19741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19742 = getelementptr inbounds %struct.GPR, %struct.GPR* %19741, i32 0, i32 1
  %19743 = getelementptr inbounds %struct.Reg, %struct.Reg* %19742, i32 0, i32 0
  %RAX.i868 = bitcast %union.anon* %19743 to i64*
  %19744 = load i64, i64* %RAX.i868
  %19745 = load i64, i64* %PC.i867
  %19746 = add i64 %19745, 3
  store i64 %19746, i64* %PC.i867
  %19747 = trunc i64 %19744 to i32
  %19748 = add i32 1, %19747
  %19749 = zext i32 %19748 to i64
  store i64 %19749, i64* %RAX.i868, align 8
  %19750 = icmp ult i32 %19748, %19747
  %19751 = icmp ult i32 %19748, 1
  %19752 = or i1 %19750, %19751
  %19753 = zext i1 %19752 to i8
  %19754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19753, i8* %19754, align 1
  %19755 = and i32 %19748, 255
  %19756 = call i32 @llvm.ctpop.i32(i32 %19755)
  %19757 = trunc i32 %19756 to i8
  %19758 = and i8 %19757, 1
  %19759 = xor i8 %19758, 1
  %19760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19759, i8* %19760, align 1
  %19761 = xor i64 1, %19744
  %19762 = trunc i64 %19761 to i32
  %19763 = xor i32 %19762, %19748
  %19764 = lshr i32 %19763, 4
  %19765 = trunc i32 %19764 to i8
  %19766 = and i8 %19765, 1
  %19767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19766, i8* %19767, align 1
  %19768 = icmp eq i32 %19748, 0
  %19769 = zext i1 %19768 to i8
  %19770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19769, i8* %19770, align 1
  %19771 = lshr i32 %19748, 31
  %19772 = trunc i32 %19771 to i8
  %19773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19772, i8* %19773, align 1
  %19774 = lshr i32 %19747, 31
  %19775 = xor i32 %19771, %19774
  %19776 = add i32 %19775, %19771
  %19777 = icmp eq i32 %19776, 2
  %19778 = zext i1 %19777 to i8
  %19779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19778, i8* %19779, align 1
  store %struct.Memory* %loadMem_476817, %struct.Memory** %MEMORY
  %loadMem_47681a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19781 = getelementptr inbounds %struct.GPR, %struct.GPR* %19780, i32 0, i32 33
  %19782 = getelementptr inbounds %struct.Reg, %struct.Reg* %19781, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %19782 to i64*
  %19783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19784 = getelementptr inbounds %struct.GPR, %struct.GPR* %19783, i32 0, i32 1
  %19785 = getelementptr inbounds %struct.Reg, %struct.Reg* %19784, i32 0, i32 0
  %EAX.i865 = bitcast %union.anon* %19785 to i32*
  %19786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19787 = getelementptr inbounds %struct.GPR, %struct.GPR* %19786, i32 0, i32 5
  %19788 = getelementptr inbounds %struct.Reg, %struct.Reg* %19787, i32 0, i32 0
  %RCX.i866 = bitcast %union.anon* %19788 to i64*
  %19789 = load i32, i32* %EAX.i865
  %19790 = zext i32 %19789 to i64
  %19791 = load i64, i64* %PC.i864
  %19792 = add i64 %19791, 3
  store i64 %19792, i64* %PC.i864
  %19793 = shl i64 %19790, 32
  %19794 = ashr exact i64 %19793, 32
  store i64 %19794, i64* %RCX.i866, align 8
  store %struct.Memory* %loadMem_47681a, %struct.Memory** %MEMORY
  %loadMem_47681d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19796 = getelementptr inbounds %struct.GPR, %struct.GPR* %19795, i32 0, i32 33
  %19797 = getelementptr inbounds %struct.Reg, %struct.Reg* %19796, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %19797 to i64*
  %19798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19799 = getelementptr inbounds %struct.GPR, %struct.GPR* %19798, i32 0, i32 1
  %19800 = getelementptr inbounds %struct.Reg, %struct.Reg* %19799, i32 0, i32 0
  %RAX.i862 = bitcast %union.anon* %19800 to i64*
  %19801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19802 = getelementptr inbounds %struct.GPR, %struct.GPR* %19801, i32 0, i32 5
  %19803 = getelementptr inbounds %struct.Reg, %struct.Reg* %19802, i32 0, i32 0
  %RCX.i863 = bitcast %union.anon* %19803 to i64*
  %19804 = load i64, i64* %RCX.i863
  %19805 = add i64 %19804, 12099168
  %19806 = load i64, i64* %PC.i861
  %19807 = add i64 %19806, 8
  store i64 %19807, i64* %PC.i861
  %19808 = inttoptr i64 %19805 to i8*
  %19809 = load i8, i8* %19808
  %19810 = zext i8 %19809 to i64
  store i64 %19810, i64* %RAX.i862, align 8
  store %struct.Memory* %loadMem_47681d, %struct.Memory** %MEMORY
  %loadMem_476825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19812 = getelementptr inbounds %struct.GPR, %struct.GPR* %19811, i32 0, i32 33
  %19813 = getelementptr inbounds %struct.Reg, %struct.Reg* %19812, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %19813 to i64*
  %19814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19815 = getelementptr inbounds %struct.GPR, %struct.GPR* %19814, i32 0, i32 1
  %19816 = getelementptr inbounds %struct.Reg, %struct.Reg* %19815, i32 0, i32 0
  %EAX.i860 = bitcast %union.anon* %19816 to i32*
  %19817 = load i32, i32* %EAX.i860
  %19818 = zext i32 %19817 to i64
  %19819 = load i64, i64* %PC.i859
  %19820 = add i64 %19819, 3
  store i64 %19820, i64* %PC.i859
  %19821 = sub i32 %19817, 3
  %19822 = icmp ult i32 %19817, 3
  %19823 = zext i1 %19822 to i8
  %19824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19823, i8* %19824, align 1
  %19825 = and i32 %19821, 255
  %19826 = call i32 @llvm.ctpop.i32(i32 %19825)
  %19827 = trunc i32 %19826 to i8
  %19828 = and i8 %19827, 1
  %19829 = xor i8 %19828, 1
  %19830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19829, i8* %19830, align 1
  %19831 = xor i64 3, %19818
  %19832 = trunc i64 %19831 to i32
  %19833 = xor i32 %19832, %19821
  %19834 = lshr i32 %19833, 4
  %19835 = trunc i32 %19834 to i8
  %19836 = and i8 %19835, 1
  %19837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19836, i8* %19837, align 1
  %19838 = icmp eq i32 %19821, 0
  %19839 = zext i1 %19838 to i8
  %19840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19839, i8* %19840, align 1
  %19841 = lshr i32 %19821, 31
  %19842 = trunc i32 %19841 to i8
  %19843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19842, i8* %19843, align 1
  %19844 = lshr i32 %19817, 31
  %19845 = xor i32 %19841, %19844
  %19846 = add i32 %19845, %19844
  %19847 = icmp eq i32 %19846, 2
  %19848 = zext i1 %19847 to i8
  %19849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19848, i8* %19849, align 1
  store %struct.Memory* %loadMem_476825, %struct.Memory** %MEMORY
  %loadMem_476828 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19851 = getelementptr inbounds %struct.GPR, %struct.GPR* %19850, i32 0, i32 33
  %19852 = getelementptr inbounds %struct.Reg, %struct.Reg* %19851, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %19852 to i64*
  %19853 = load i64, i64* %PC.i858
  %19854 = add i64 %19853, 99
  %19855 = load i64, i64* %PC.i858
  %19856 = add i64 %19855, 6
  %19857 = load i64, i64* %PC.i858
  %19858 = add i64 %19857, 6
  store i64 %19858, i64* %PC.i858
  %19859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19860 = load i8, i8* %19859, align 1
  store i8 %19860, i8* %BRANCH_TAKEN, align 1
  %19861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19862 = icmp ne i8 %19860, 0
  %19863 = select i1 %19862, i64 %19854, i64 %19856
  store i64 %19863, i64* %19861, align 8
  store %struct.Memory* %loadMem_476828, %struct.Memory** %MEMORY
  %loadBr_476828 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476828 = icmp eq i8 %loadBr_476828, 1
  br i1 %cmpBr_476828, label %block_.L_47688b, label %block_47682e

block_47682e:                                     ; preds = %block_476811
  %loadMem_47682e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19865 = getelementptr inbounds %struct.GPR, %struct.GPR* %19864, i32 0, i32 33
  %19866 = getelementptr inbounds %struct.Reg, %struct.Reg* %19865, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %19866 to i64*
  %19867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19868 = getelementptr inbounds %struct.GPR, %struct.GPR* %19867, i32 0, i32 1
  %19869 = getelementptr inbounds %struct.Reg, %struct.Reg* %19868, i32 0, i32 0
  %RAX.i856 = bitcast %union.anon* %19869 to i64*
  %19870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19871 = getelementptr inbounds %struct.GPR, %struct.GPR* %19870, i32 0, i32 15
  %19872 = getelementptr inbounds %struct.Reg, %struct.Reg* %19871, i32 0, i32 0
  %RBP.i857 = bitcast %union.anon* %19872 to i64*
  %19873 = load i64, i64* %RBP.i857
  %19874 = sub i64 %19873, 48
  %19875 = load i64, i64* %PC.i855
  %19876 = add i64 %19875, 3
  store i64 %19876, i64* %PC.i855
  %19877 = inttoptr i64 %19874 to i32*
  %19878 = load i32, i32* %19877
  %19879 = zext i32 %19878 to i64
  store i64 %19879, i64* %RAX.i856, align 8
  store %struct.Memory* %loadMem_47682e, %struct.Memory** %MEMORY
  %loadMem_476831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19881 = getelementptr inbounds %struct.GPR, %struct.GPR* %19880, i32 0, i32 33
  %19882 = getelementptr inbounds %struct.Reg, %struct.Reg* %19881, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %19882 to i64*
  %19883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19884 = getelementptr inbounds %struct.GPR, %struct.GPR* %19883, i32 0, i32 1
  %19885 = getelementptr inbounds %struct.Reg, %struct.Reg* %19884, i32 0, i32 0
  %RAX.i854 = bitcast %union.anon* %19885 to i64*
  %19886 = load i64, i64* %RAX.i854
  %19887 = load i64, i64* %PC.i853
  %19888 = add i64 %19887, 3
  store i64 %19888, i64* %PC.i853
  %19889 = trunc i64 %19886 to i32
  %19890 = sub i32 %19889, 20
  %19891 = zext i32 %19890 to i64
  store i64 %19891, i64* %RAX.i854, align 8
  %19892 = icmp ult i32 %19889, 20
  %19893 = zext i1 %19892 to i8
  %19894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19893, i8* %19894, align 1
  %19895 = and i32 %19890, 255
  %19896 = call i32 @llvm.ctpop.i32(i32 %19895)
  %19897 = trunc i32 %19896 to i8
  %19898 = and i8 %19897, 1
  %19899 = xor i8 %19898, 1
  %19900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19899, i8* %19900, align 1
  %19901 = xor i64 20, %19886
  %19902 = trunc i64 %19901 to i32
  %19903 = xor i32 %19902, %19890
  %19904 = lshr i32 %19903, 4
  %19905 = trunc i32 %19904 to i8
  %19906 = and i8 %19905, 1
  %19907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19906, i8* %19907, align 1
  %19908 = icmp eq i32 %19890, 0
  %19909 = zext i1 %19908 to i8
  %19910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19909, i8* %19910, align 1
  %19911 = lshr i32 %19890, 31
  %19912 = trunc i32 %19911 to i8
  %19913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19912, i8* %19913, align 1
  %19914 = lshr i32 %19889, 31
  %19915 = xor i32 %19911, %19914
  %19916 = add i32 %19915, %19914
  %19917 = icmp eq i32 %19916, 2
  %19918 = zext i1 %19917 to i8
  %19919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19918, i8* %19919, align 1
  store %struct.Memory* %loadMem_476831, %struct.Memory** %MEMORY
  %loadMem_476834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19921 = getelementptr inbounds %struct.GPR, %struct.GPR* %19920, i32 0, i32 33
  %19922 = getelementptr inbounds %struct.Reg, %struct.Reg* %19921, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %19922 to i64*
  %19923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19924 = getelementptr inbounds %struct.GPR, %struct.GPR* %19923, i32 0, i32 1
  %19925 = getelementptr inbounds %struct.Reg, %struct.Reg* %19924, i32 0, i32 0
  %RAX.i852 = bitcast %union.anon* %19925 to i64*
  %19926 = load i64, i64* %RAX.i852
  %19927 = load i64, i64* %PC.i851
  %19928 = add i64 %19927, 3
  store i64 %19928, i64* %PC.i851
  %19929 = trunc i64 %19926 to i32
  %19930 = add i32 1, %19929
  %19931 = zext i32 %19930 to i64
  store i64 %19931, i64* %RAX.i852, align 8
  %19932 = icmp ult i32 %19930, %19929
  %19933 = icmp ult i32 %19930, 1
  %19934 = or i1 %19932, %19933
  %19935 = zext i1 %19934 to i8
  %19936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19935, i8* %19936, align 1
  %19937 = and i32 %19930, 255
  %19938 = call i32 @llvm.ctpop.i32(i32 %19937)
  %19939 = trunc i32 %19938 to i8
  %19940 = and i8 %19939, 1
  %19941 = xor i8 %19940, 1
  %19942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19941, i8* %19942, align 1
  %19943 = xor i64 1, %19926
  %19944 = trunc i64 %19943 to i32
  %19945 = xor i32 %19944, %19930
  %19946 = lshr i32 %19945, 4
  %19947 = trunc i32 %19946 to i8
  %19948 = and i8 %19947, 1
  %19949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19948, i8* %19949, align 1
  %19950 = icmp eq i32 %19930, 0
  %19951 = zext i1 %19950 to i8
  %19952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19951, i8* %19952, align 1
  %19953 = lshr i32 %19930, 31
  %19954 = trunc i32 %19953 to i8
  %19955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19954, i8* %19955, align 1
  %19956 = lshr i32 %19929, 31
  %19957 = xor i32 %19953, %19956
  %19958 = add i32 %19957, %19953
  %19959 = icmp eq i32 %19958, 2
  %19960 = zext i1 %19959 to i8
  %19961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19960, i8* %19961, align 1
  store %struct.Memory* %loadMem_476834, %struct.Memory** %MEMORY
  %loadMem_476837 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19963 = getelementptr inbounds %struct.GPR, %struct.GPR* %19962, i32 0, i32 33
  %19964 = getelementptr inbounds %struct.Reg, %struct.Reg* %19963, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %19964 to i64*
  %19965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19966 = getelementptr inbounds %struct.GPR, %struct.GPR* %19965, i32 0, i32 1
  %19967 = getelementptr inbounds %struct.Reg, %struct.Reg* %19966, i32 0, i32 0
  %EAX.i849 = bitcast %union.anon* %19967 to i32*
  %19968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19969 = getelementptr inbounds %struct.GPR, %struct.GPR* %19968, i32 0, i32 5
  %19970 = getelementptr inbounds %struct.Reg, %struct.Reg* %19969, i32 0, i32 0
  %RCX.i850 = bitcast %union.anon* %19970 to i64*
  %19971 = load i32, i32* %EAX.i849
  %19972 = zext i32 %19971 to i64
  %19973 = load i64, i64* %PC.i848
  %19974 = add i64 %19973, 3
  store i64 %19974, i64* %PC.i848
  %19975 = shl i64 %19972, 32
  %19976 = ashr exact i64 %19975, 32
  store i64 %19976, i64* %RCX.i850, align 8
  store %struct.Memory* %loadMem_476837, %struct.Memory** %MEMORY
  %loadMem_47683a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19978 = getelementptr inbounds %struct.GPR, %struct.GPR* %19977, i32 0, i32 33
  %19979 = getelementptr inbounds %struct.Reg, %struct.Reg* %19978, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %19979 to i64*
  %19980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19981 = getelementptr inbounds %struct.GPR, %struct.GPR* %19980, i32 0, i32 1
  %19982 = getelementptr inbounds %struct.Reg, %struct.Reg* %19981, i32 0, i32 0
  %RAX.i846 = bitcast %union.anon* %19982 to i64*
  %19983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19984 = getelementptr inbounds %struct.GPR, %struct.GPR* %19983, i32 0, i32 5
  %19985 = getelementptr inbounds %struct.Reg, %struct.Reg* %19984, i32 0, i32 0
  %RCX.i847 = bitcast %union.anon* %19985 to i64*
  %19986 = load i64, i64* %RCX.i847
  %19987 = add i64 %19986, 12099168
  %19988 = load i64, i64* %PC.i845
  %19989 = add i64 %19988, 8
  store i64 %19989, i64* %PC.i845
  %19990 = inttoptr i64 %19987 to i8*
  %19991 = load i8, i8* %19990
  %19992 = zext i8 %19991 to i64
  store i64 %19992, i64* %RAX.i846, align 8
  store %struct.Memory* %loadMem_47683a, %struct.Memory** %MEMORY
  %loadMem_476842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19994 = getelementptr inbounds %struct.GPR, %struct.GPR* %19993, i32 0, i32 33
  %19995 = getelementptr inbounds %struct.Reg, %struct.Reg* %19994, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %19995 to i64*
  %19996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19997 = getelementptr inbounds %struct.GPR, %struct.GPR* %19996, i32 0, i32 1
  %19998 = getelementptr inbounds %struct.Reg, %struct.Reg* %19997, i32 0, i32 0
  %EAX.i843 = bitcast %union.anon* %19998 to i32*
  %19999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20000 = getelementptr inbounds %struct.GPR, %struct.GPR* %19999, i32 0, i32 15
  %20001 = getelementptr inbounds %struct.Reg, %struct.Reg* %20000, i32 0, i32 0
  %RBP.i844 = bitcast %union.anon* %20001 to i64*
  %20002 = load i32, i32* %EAX.i843
  %20003 = zext i32 %20002 to i64
  %20004 = load i64, i64* %RBP.i844
  %20005 = sub i64 %20004, 232
  %20006 = load i64, i64* %PC.i842
  %20007 = add i64 %20006, 6
  store i64 %20007, i64* %PC.i842
  %20008 = inttoptr i64 %20005 to i32*
  %20009 = load i32, i32* %20008
  %20010 = sub i32 %20002, %20009
  %20011 = icmp ult i32 %20002, %20009
  %20012 = zext i1 %20011 to i8
  %20013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20012, i8* %20013, align 1
  %20014 = and i32 %20010, 255
  %20015 = call i32 @llvm.ctpop.i32(i32 %20014)
  %20016 = trunc i32 %20015 to i8
  %20017 = and i8 %20016, 1
  %20018 = xor i8 %20017, 1
  %20019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20018, i8* %20019, align 1
  %20020 = xor i32 %20009, %20002
  %20021 = xor i32 %20020, %20010
  %20022 = lshr i32 %20021, 4
  %20023 = trunc i32 %20022 to i8
  %20024 = and i8 %20023, 1
  %20025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20024, i8* %20025, align 1
  %20026 = icmp eq i32 %20010, 0
  %20027 = zext i1 %20026 to i8
  %20028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20027, i8* %20028, align 1
  %20029 = lshr i32 %20010, 31
  %20030 = trunc i32 %20029 to i8
  %20031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20030, i8* %20031, align 1
  %20032 = lshr i32 %20002, 31
  %20033 = lshr i32 %20009, 31
  %20034 = xor i32 %20033, %20032
  %20035 = xor i32 %20029, %20032
  %20036 = add i32 %20035, %20034
  %20037 = icmp eq i32 %20036, 2
  %20038 = zext i1 %20037 to i8
  %20039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20038, i8* %20039, align 1
  store %struct.Memory* %loadMem_476842, %struct.Memory** %MEMORY
  %loadMem_476848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20041 = getelementptr inbounds %struct.GPR, %struct.GPR* %20040, i32 0, i32 33
  %20042 = getelementptr inbounds %struct.Reg, %struct.Reg* %20041, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %20042 to i64*
  %20043 = load i64, i64* %PC.i841
  %20044 = add i64 %20043, 67
  %20045 = load i64, i64* %PC.i841
  %20046 = add i64 %20045, 6
  %20047 = load i64, i64* %PC.i841
  %20048 = add i64 %20047, 6
  store i64 %20048, i64* %PC.i841
  %20049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20050 = load i8, i8* %20049, align 1
  store i8 %20050, i8* %BRANCH_TAKEN, align 1
  %20051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20052 = icmp ne i8 %20050, 0
  %20053 = select i1 %20052, i64 %20044, i64 %20046
  store i64 %20053, i64* %20051, align 8
  store %struct.Memory* %loadMem_476848, %struct.Memory** %MEMORY
  %loadBr_476848 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476848 = icmp eq i8 %loadBr_476848, 1
  br i1 %cmpBr_476848, label %block_.L_47688b, label %block_47684e

block_47684e:                                     ; preds = %block_47682e
  %loadMem_47684e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20055 = getelementptr inbounds %struct.GPR, %struct.GPR* %20054, i32 0, i32 33
  %20056 = getelementptr inbounds %struct.Reg, %struct.Reg* %20055, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %20056 to i64*
  %20057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20058 = getelementptr inbounds %struct.GPR, %struct.GPR* %20057, i32 0, i32 1
  %20059 = getelementptr inbounds %struct.Reg, %struct.Reg* %20058, i32 0, i32 0
  %RAX.i839 = bitcast %union.anon* %20059 to i64*
  %20060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20061 = getelementptr inbounds %struct.GPR, %struct.GPR* %20060, i32 0, i32 15
  %20062 = getelementptr inbounds %struct.Reg, %struct.Reg* %20061, i32 0, i32 0
  %RBP.i840 = bitcast %union.anon* %20062 to i64*
  %20063 = load i64, i64* %RBP.i840
  %20064 = sub i64 %20063, 48
  %20065 = load i64, i64* %PC.i838
  %20066 = add i64 %20065, 3
  store i64 %20066, i64* %PC.i838
  %20067 = inttoptr i64 %20064 to i32*
  %20068 = load i32, i32* %20067
  %20069 = zext i32 %20068 to i64
  store i64 %20069, i64* %RAX.i839, align 8
  store %struct.Memory* %loadMem_47684e, %struct.Memory** %MEMORY
  %loadMem_476851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20071 = getelementptr inbounds %struct.GPR, %struct.GPR* %20070, i32 0, i32 33
  %20072 = getelementptr inbounds %struct.Reg, %struct.Reg* %20071, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %20072 to i64*
  %20073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20074 = getelementptr inbounds %struct.GPR, %struct.GPR* %20073, i32 0, i32 1
  %20075 = getelementptr inbounds %struct.Reg, %struct.Reg* %20074, i32 0, i32 0
  %RAX.i837 = bitcast %union.anon* %20075 to i64*
  %20076 = load i64, i64* %RAX.i837
  %20077 = load i64, i64* %PC.i836
  %20078 = add i64 %20077, 3
  store i64 %20078, i64* %PC.i836
  %20079 = trunc i64 %20076 to i32
  %20080 = sub i32 %20079, 20
  %20081 = zext i32 %20080 to i64
  store i64 %20081, i64* %RAX.i837, align 8
  %20082 = icmp ult i32 %20079, 20
  %20083 = zext i1 %20082 to i8
  %20084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20083, i8* %20084, align 1
  %20085 = and i32 %20080, 255
  %20086 = call i32 @llvm.ctpop.i32(i32 %20085)
  %20087 = trunc i32 %20086 to i8
  %20088 = and i8 %20087, 1
  %20089 = xor i8 %20088, 1
  %20090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20089, i8* %20090, align 1
  %20091 = xor i64 20, %20076
  %20092 = trunc i64 %20091 to i32
  %20093 = xor i32 %20092, %20080
  %20094 = lshr i32 %20093, 4
  %20095 = trunc i32 %20094 to i8
  %20096 = and i8 %20095, 1
  %20097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20096, i8* %20097, align 1
  %20098 = icmp eq i32 %20080, 0
  %20099 = zext i1 %20098 to i8
  %20100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20099, i8* %20100, align 1
  %20101 = lshr i32 %20080, 31
  %20102 = trunc i32 %20101 to i8
  %20103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20102, i8* %20103, align 1
  %20104 = lshr i32 %20079, 31
  %20105 = xor i32 %20101, %20104
  %20106 = add i32 %20105, %20104
  %20107 = icmp eq i32 %20106, 2
  %20108 = zext i1 %20107 to i8
  %20109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20108, i8* %20109, align 1
  store %struct.Memory* %loadMem_476851, %struct.Memory** %MEMORY
  %loadMem_476854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20111 = getelementptr inbounds %struct.GPR, %struct.GPR* %20110, i32 0, i32 33
  %20112 = getelementptr inbounds %struct.Reg, %struct.Reg* %20111, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %20112 to i64*
  %20113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20114 = getelementptr inbounds %struct.GPR, %struct.GPR* %20113, i32 0, i32 1
  %20115 = getelementptr inbounds %struct.Reg, %struct.Reg* %20114, i32 0, i32 0
  %RAX.i835 = bitcast %union.anon* %20115 to i64*
  %20116 = load i64, i64* %RAX.i835
  %20117 = load i64, i64* %PC.i834
  %20118 = add i64 %20117, 3
  store i64 %20118, i64* %PC.i834
  %20119 = trunc i64 %20116 to i32
  %20120 = sub i32 %20119, 1
  %20121 = zext i32 %20120 to i64
  store i64 %20121, i64* %RAX.i835, align 8
  %20122 = icmp ult i32 %20119, 1
  %20123 = zext i1 %20122 to i8
  %20124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20123, i8* %20124, align 1
  %20125 = and i32 %20120, 255
  %20126 = call i32 @llvm.ctpop.i32(i32 %20125)
  %20127 = trunc i32 %20126 to i8
  %20128 = and i8 %20127, 1
  %20129 = xor i8 %20128, 1
  %20130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20129, i8* %20130, align 1
  %20131 = xor i64 1, %20116
  %20132 = trunc i64 %20131 to i32
  %20133 = xor i32 %20132, %20120
  %20134 = lshr i32 %20133, 4
  %20135 = trunc i32 %20134 to i8
  %20136 = and i8 %20135, 1
  %20137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20136, i8* %20137, align 1
  %20138 = icmp eq i32 %20120, 0
  %20139 = zext i1 %20138 to i8
  %20140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20139, i8* %20140, align 1
  %20141 = lshr i32 %20120, 31
  %20142 = trunc i32 %20141 to i8
  %20143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20142, i8* %20143, align 1
  %20144 = lshr i32 %20119, 31
  %20145 = xor i32 %20141, %20144
  %20146 = add i32 %20145, %20144
  %20147 = icmp eq i32 %20146, 2
  %20148 = zext i1 %20147 to i8
  %20149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20148, i8* %20149, align 1
  store %struct.Memory* %loadMem_476854, %struct.Memory** %MEMORY
  %loadMem_476857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20151 = getelementptr inbounds %struct.GPR, %struct.GPR* %20150, i32 0, i32 33
  %20152 = getelementptr inbounds %struct.Reg, %struct.Reg* %20151, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %20152 to i64*
  %20153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20154 = getelementptr inbounds %struct.GPR, %struct.GPR* %20153, i32 0, i32 1
  %20155 = getelementptr inbounds %struct.Reg, %struct.Reg* %20154, i32 0, i32 0
  %EAX.i832 = bitcast %union.anon* %20155 to i32*
  %20156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20157 = getelementptr inbounds %struct.GPR, %struct.GPR* %20156, i32 0, i32 5
  %20158 = getelementptr inbounds %struct.Reg, %struct.Reg* %20157, i32 0, i32 0
  %RCX.i833 = bitcast %union.anon* %20158 to i64*
  %20159 = load i32, i32* %EAX.i832
  %20160 = zext i32 %20159 to i64
  %20161 = load i64, i64* %PC.i831
  %20162 = add i64 %20161, 3
  store i64 %20162, i64* %PC.i831
  %20163 = shl i64 %20160, 32
  %20164 = ashr exact i64 %20163, 32
  store i64 %20164, i64* %RCX.i833, align 8
  store %struct.Memory* %loadMem_476857, %struct.Memory** %MEMORY
  %loadMem_47685a = load %struct.Memory*, %struct.Memory** %MEMORY
  %20165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20166 = getelementptr inbounds %struct.GPR, %struct.GPR* %20165, i32 0, i32 33
  %20167 = getelementptr inbounds %struct.Reg, %struct.Reg* %20166, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %20167 to i64*
  %20168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20169 = getelementptr inbounds %struct.GPR, %struct.GPR* %20168, i32 0, i32 1
  %20170 = getelementptr inbounds %struct.Reg, %struct.Reg* %20169, i32 0, i32 0
  %RAX.i829 = bitcast %union.anon* %20170 to i64*
  %20171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20172 = getelementptr inbounds %struct.GPR, %struct.GPR* %20171, i32 0, i32 5
  %20173 = getelementptr inbounds %struct.Reg, %struct.Reg* %20172, i32 0, i32 0
  %RCX.i830 = bitcast %union.anon* %20173 to i64*
  %20174 = load i64, i64* %RCX.i830
  %20175 = add i64 %20174, 12099168
  %20176 = load i64, i64* %PC.i828
  %20177 = add i64 %20176, 8
  store i64 %20177, i64* %PC.i828
  %20178 = inttoptr i64 %20175 to i8*
  %20179 = load i8, i8* %20178
  %20180 = zext i8 %20179 to i64
  store i64 %20180, i64* %RAX.i829, align 8
  store %struct.Memory* %loadMem_47685a, %struct.Memory** %MEMORY
  %loadMem_476862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20182 = getelementptr inbounds %struct.GPR, %struct.GPR* %20181, i32 0, i32 33
  %20183 = getelementptr inbounds %struct.Reg, %struct.Reg* %20182, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %20183 to i64*
  %20184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20185 = getelementptr inbounds %struct.GPR, %struct.GPR* %20184, i32 0, i32 1
  %20186 = getelementptr inbounds %struct.Reg, %struct.Reg* %20185, i32 0, i32 0
  %EAX.i827 = bitcast %union.anon* %20186 to i32*
  %20187 = load i32, i32* %EAX.i827
  %20188 = zext i32 %20187 to i64
  %20189 = load i64, i64* %PC.i826
  %20190 = add i64 %20189, 3
  store i64 %20190, i64* %PC.i826
  %20191 = sub i32 %20187, 3
  %20192 = icmp ult i32 %20187, 3
  %20193 = zext i1 %20192 to i8
  %20194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20193, i8* %20194, align 1
  %20195 = and i32 %20191, 255
  %20196 = call i32 @llvm.ctpop.i32(i32 %20195)
  %20197 = trunc i32 %20196 to i8
  %20198 = and i8 %20197, 1
  %20199 = xor i8 %20198, 1
  %20200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20199, i8* %20200, align 1
  %20201 = xor i64 3, %20188
  %20202 = trunc i64 %20201 to i32
  %20203 = xor i32 %20202, %20191
  %20204 = lshr i32 %20203, 4
  %20205 = trunc i32 %20204 to i8
  %20206 = and i8 %20205, 1
  %20207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20206, i8* %20207, align 1
  %20208 = icmp eq i32 %20191, 0
  %20209 = zext i1 %20208 to i8
  %20210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20209, i8* %20210, align 1
  %20211 = lshr i32 %20191, 31
  %20212 = trunc i32 %20211 to i8
  %20213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20212, i8* %20213, align 1
  %20214 = lshr i32 %20187, 31
  %20215 = xor i32 %20211, %20214
  %20216 = add i32 %20215, %20214
  %20217 = icmp eq i32 %20216, 2
  %20218 = zext i1 %20217 to i8
  %20219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20218, i8* %20219, align 1
  store %struct.Memory* %loadMem_476862, %struct.Memory** %MEMORY
  %loadMem_476865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20221 = getelementptr inbounds %struct.GPR, %struct.GPR* %20220, i32 0, i32 33
  %20222 = getelementptr inbounds %struct.Reg, %struct.Reg* %20221, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %20222 to i64*
  %20223 = load i64, i64* %PC.i825
  %20224 = add i64 %20223, 38
  %20225 = load i64, i64* %PC.i825
  %20226 = add i64 %20225, 6
  %20227 = load i64, i64* %PC.i825
  %20228 = add i64 %20227, 6
  store i64 %20228, i64* %PC.i825
  %20229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20230 = load i8, i8* %20229, align 1
  store i8 %20230, i8* %BRANCH_TAKEN, align 1
  %20231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20232 = icmp ne i8 %20230, 0
  %20233 = select i1 %20232, i64 %20224, i64 %20226
  store i64 %20233, i64* %20231, align 8
  store %struct.Memory* %loadMem_476865, %struct.Memory** %MEMORY
  %loadBr_476865 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476865 = icmp eq i8 %loadBr_476865, 1
  br i1 %cmpBr_476865, label %block_.L_47688b, label %block_47686b

block_47686b:                                     ; preds = %block_47684e
  %loadMem_47686b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20235 = getelementptr inbounds %struct.GPR, %struct.GPR* %20234, i32 0, i32 33
  %20236 = getelementptr inbounds %struct.Reg, %struct.Reg* %20235, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %20236 to i64*
  %20237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20238 = getelementptr inbounds %struct.GPR, %struct.GPR* %20237, i32 0, i32 1
  %20239 = getelementptr inbounds %struct.Reg, %struct.Reg* %20238, i32 0, i32 0
  %RAX.i823 = bitcast %union.anon* %20239 to i64*
  %20240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20241 = getelementptr inbounds %struct.GPR, %struct.GPR* %20240, i32 0, i32 15
  %20242 = getelementptr inbounds %struct.Reg, %struct.Reg* %20241, i32 0, i32 0
  %RBP.i824 = bitcast %union.anon* %20242 to i64*
  %20243 = load i64, i64* %RBP.i824
  %20244 = sub i64 %20243, 48
  %20245 = load i64, i64* %PC.i822
  %20246 = add i64 %20245, 3
  store i64 %20246, i64* %PC.i822
  %20247 = inttoptr i64 %20244 to i32*
  %20248 = load i32, i32* %20247
  %20249 = zext i32 %20248 to i64
  store i64 %20249, i64* %RAX.i823, align 8
  store %struct.Memory* %loadMem_47686b, %struct.Memory** %MEMORY
  %loadMem_47686e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20251 = getelementptr inbounds %struct.GPR, %struct.GPR* %20250, i32 0, i32 33
  %20252 = getelementptr inbounds %struct.Reg, %struct.Reg* %20251, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %20252 to i64*
  %20253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20254 = getelementptr inbounds %struct.GPR, %struct.GPR* %20253, i32 0, i32 1
  %20255 = getelementptr inbounds %struct.Reg, %struct.Reg* %20254, i32 0, i32 0
  %RAX.i821 = bitcast %union.anon* %20255 to i64*
  %20256 = load i64, i64* %RAX.i821
  %20257 = load i64, i64* %PC.i820
  %20258 = add i64 %20257, 3
  store i64 %20258, i64* %PC.i820
  %20259 = trunc i64 %20256 to i32
  %20260 = sub i32 %20259, 20
  %20261 = zext i32 %20260 to i64
  store i64 %20261, i64* %RAX.i821, align 8
  %20262 = icmp ult i32 %20259, 20
  %20263 = zext i1 %20262 to i8
  %20264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20263, i8* %20264, align 1
  %20265 = and i32 %20260, 255
  %20266 = call i32 @llvm.ctpop.i32(i32 %20265)
  %20267 = trunc i32 %20266 to i8
  %20268 = and i8 %20267, 1
  %20269 = xor i8 %20268, 1
  %20270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20269, i8* %20270, align 1
  %20271 = xor i64 20, %20256
  %20272 = trunc i64 %20271 to i32
  %20273 = xor i32 %20272, %20260
  %20274 = lshr i32 %20273, 4
  %20275 = trunc i32 %20274 to i8
  %20276 = and i8 %20275, 1
  %20277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20276, i8* %20277, align 1
  %20278 = icmp eq i32 %20260, 0
  %20279 = zext i1 %20278 to i8
  %20280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20279, i8* %20280, align 1
  %20281 = lshr i32 %20260, 31
  %20282 = trunc i32 %20281 to i8
  %20283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20282, i8* %20283, align 1
  %20284 = lshr i32 %20259, 31
  %20285 = xor i32 %20281, %20284
  %20286 = add i32 %20285, %20284
  %20287 = icmp eq i32 %20286, 2
  %20288 = zext i1 %20287 to i8
  %20289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20288, i8* %20289, align 1
  store %struct.Memory* %loadMem_47686e, %struct.Memory** %MEMORY
  %loadMem_476871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20291 = getelementptr inbounds %struct.GPR, %struct.GPR* %20290, i32 0, i32 33
  %20292 = getelementptr inbounds %struct.Reg, %struct.Reg* %20291, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %20292 to i64*
  %20293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20294 = getelementptr inbounds %struct.GPR, %struct.GPR* %20293, i32 0, i32 1
  %20295 = getelementptr inbounds %struct.Reg, %struct.Reg* %20294, i32 0, i32 0
  %RAX.i819 = bitcast %union.anon* %20295 to i64*
  %20296 = load i64, i64* %RAX.i819
  %20297 = load i64, i64* %PC.i818
  %20298 = add i64 %20297, 3
  store i64 %20298, i64* %PC.i818
  %20299 = trunc i64 %20296 to i32
  %20300 = sub i32 %20299, 1
  %20301 = zext i32 %20300 to i64
  store i64 %20301, i64* %RAX.i819, align 8
  %20302 = icmp ult i32 %20299, 1
  %20303 = zext i1 %20302 to i8
  %20304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20303, i8* %20304, align 1
  %20305 = and i32 %20300, 255
  %20306 = call i32 @llvm.ctpop.i32(i32 %20305)
  %20307 = trunc i32 %20306 to i8
  %20308 = and i8 %20307, 1
  %20309 = xor i8 %20308, 1
  %20310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20309, i8* %20310, align 1
  %20311 = xor i64 1, %20296
  %20312 = trunc i64 %20311 to i32
  %20313 = xor i32 %20312, %20300
  %20314 = lshr i32 %20313, 4
  %20315 = trunc i32 %20314 to i8
  %20316 = and i8 %20315, 1
  %20317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20316, i8* %20317, align 1
  %20318 = icmp eq i32 %20300, 0
  %20319 = zext i1 %20318 to i8
  %20320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20319, i8* %20320, align 1
  %20321 = lshr i32 %20300, 31
  %20322 = trunc i32 %20321 to i8
  %20323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20322, i8* %20323, align 1
  %20324 = lshr i32 %20299, 31
  %20325 = xor i32 %20321, %20324
  %20326 = add i32 %20325, %20324
  %20327 = icmp eq i32 %20326, 2
  %20328 = zext i1 %20327 to i8
  %20329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20328, i8* %20329, align 1
  store %struct.Memory* %loadMem_476871, %struct.Memory** %MEMORY
  %loadMem_476874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20331 = getelementptr inbounds %struct.GPR, %struct.GPR* %20330, i32 0, i32 33
  %20332 = getelementptr inbounds %struct.Reg, %struct.Reg* %20331, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %20332 to i64*
  %20333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20334 = getelementptr inbounds %struct.GPR, %struct.GPR* %20333, i32 0, i32 1
  %20335 = getelementptr inbounds %struct.Reg, %struct.Reg* %20334, i32 0, i32 0
  %EAX.i816 = bitcast %union.anon* %20335 to i32*
  %20336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20337 = getelementptr inbounds %struct.GPR, %struct.GPR* %20336, i32 0, i32 5
  %20338 = getelementptr inbounds %struct.Reg, %struct.Reg* %20337, i32 0, i32 0
  %RCX.i817 = bitcast %union.anon* %20338 to i64*
  %20339 = load i32, i32* %EAX.i816
  %20340 = zext i32 %20339 to i64
  %20341 = load i64, i64* %PC.i815
  %20342 = add i64 %20341, 3
  store i64 %20342, i64* %PC.i815
  %20343 = shl i64 %20340, 32
  %20344 = ashr exact i64 %20343, 32
  store i64 %20344, i64* %RCX.i817, align 8
  store %struct.Memory* %loadMem_476874, %struct.Memory** %MEMORY
  %loadMem_476877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20346 = getelementptr inbounds %struct.GPR, %struct.GPR* %20345, i32 0, i32 33
  %20347 = getelementptr inbounds %struct.Reg, %struct.Reg* %20346, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %20347 to i64*
  %20348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20349 = getelementptr inbounds %struct.GPR, %struct.GPR* %20348, i32 0, i32 1
  %20350 = getelementptr inbounds %struct.Reg, %struct.Reg* %20349, i32 0, i32 0
  %RAX.i813 = bitcast %union.anon* %20350 to i64*
  %20351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20352 = getelementptr inbounds %struct.GPR, %struct.GPR* %20351, i32 0, i32 5
  %20353 = getelementptr inbounds %struct.Reg, %struct.Reg* %20352, i32 0, i32 0
  %RCX.i814 = bitcast %union.anon* %20353 to i64*
  %20354 = load i64, i64* %RCX.i814
  %20355 = add i64 %20354, 12099168
  %20356 = load i64, i64* %PC.i812
  %20357 = add i64 %20356, 8
  store i64 %20357, i64* %PC.i812
  %20358 = inttoptr i64 %20355 to i8*
  %20359 = load i8, i8* %20358
  %20360 = zext i8 %20359 to i64
  store i64 %20360, i64* %RAX.i813, align 8
  store %struct.Memory* %loadMem_476877, %struct.Memory** %MEMORY
  %loadMem_47687f = load %struct.Memory*, %struct.Memory** %MEMORY
  %20361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20362 = getelementptr inbounds %struct.GPR, %struct.GPR* %20361, i32 0, i32 33
  %20363 = getelementptr inbounds %struct.Reg, %struct.Reg* %20362, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %20363 to i64*
  %20364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20365 = getelementptr inbounds %struct.GPR, %struct.GPR* %20364, i32 0, i32 1
  %20366 = getelementptr inbounds %struct.Reg, %struct.Reg* %20365, i32 0, i32 0
  %EAX.i810 = bitcast %union.anon* %20366 to i32*
  %20367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20368 = getelementptr inbounds %struct.GPR, %struct.GPR* %20367, i32 0, i32 15
  %20369 = getelementptr inbounds %struct.Reg, %struct.Reg* %20368, i32 0, i32 0
  %RBP.i811 = bitcast %union.anon* %20369 to i64*
  %20370 = load i32, i32* %EAX.i810
  %20371 = zext i32 %20370 to i64
  %20372 = load i64, i64* %RBP.i811
  %20373 = sub i64 %20372, 232
  %20374 = load i64, i64* %PC.i809
  %20375 = add i64 %20374, 6
  store i64 %20375, i64* %PC.i809
  %20376 = inttoptr i64 %20373 to i32*
  %20377 = load i32, i32* %20376
  %20378 = sub i32 %20370, %20377
  %20379 = icmp ult i32 %20370, %20377
  %20380 = zext i1 %20379 to i8
  %20381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20380, i8* %20381, align 1
  %20382 = and i32 %20378, 255
  %20383 = call i32 @llvm.ctpop.i32(i32 %20382)
  %20384 = trunc i32 %20383 to i8
  %20385 = and i8 %20384, 1
  %20386 = xor i8 %20385, 1
  %20387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20386, i8* %20387, align 1
  %20388 = xor i32 %20377, %20370
  %20389 = xor i32 %20388, %20378
  %20390 = lshr i32 %20389, 4
  %20391 = trunc i32 %20390 to i8
  %20392 = and i8 %20391, 1
  %20393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20392, i8* %20393, align 1
  %20394 = icmp eq i32 %20378, 0
  %20395 = zext i1 %20394 to i8
  %20396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20395, i8* %20396, align 1
  %20397 = lshr i32 %20378, 31
  %20398 = trunc i32 %20397 to i8
  %20399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20398, i8* %20399, align 1
  %20400 = lshr i32 %20370, 31
  %20401 = lshr i32 %20377, 31
  %20402 = xor i32 %20401, %20400
  %20403 = xor i32 %20397, %20400
  %20404 = add i32 %20403, %20402
  %20405 = icmp eq i32 %20404, 2
  %20406 = zext i1 %20405 to i8
  %20407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20406, i8* %20407, align 1
  store %struct.Memory* %loadMem_47687f, %struct.Memory** %MEMORY
  %loadMem_476885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20409 = getelementptr inbounds %struct.GPR, %struct.GPR* %20408, i32 0, i32 33
  %20410 = getelementptr inbounds %struct.Reg, %struct.Reg* %20409, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %20410 to i64*
  %20411 = load i64, i64* %PC.i808
  %20412 = add i64 %20411, 798
  %20413 = load i64, i64* %PC.i808
  %20414 = add i64 %20413, 6
  %20415 = load i64, i64* %PC.i808
  %20416 = add i64 %20415, 6
  store i64 %20416, i64* %PC.i808
  %20417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20418 = load i8, i8* %20417, align 1
  %20419 = icmp eq i8 %20418, 0
  %20420 = zext i1 %20419 to i8
  store i8 %20420, i8* %BRANCH_TAKEN, align 1
  %20421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20422 = select i1 %20419, i64 %20412, i64 %20414
  store i64 %20422, i64* %20421, align 8
  store %struct.Memory* %loadMem_476885, %struct.Memory** %MEMORY
  %loadBr_476885 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476885 = icmp eq i8 %loadBr_476885, 1
  br i1 %cmpBr_476885, label %block_.L_476ba3, label %block_.L_47688b

block_.L_47688b:                                  ; preds = %block_47686b, %block_47684e, %block_47682e, %block_476811, %block_4767f4, %block_4767d4, %block_4767b7, %block_47679d, %block_476783
  %loadMem_47688b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20424 = getelementptr inbounds %struct.GPR, %struct.GPR* %20423, i32 0, i32 33
  %20425 = getelementptr inbounds %struct.Reg, %struct.Reg* %20424, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %20425 to i64*
  %20426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20427 = getelementptr inbounds %struct.GPR, %struct.GPR* %20426, i32 0, i32 1
  %20428 = getelementptr inbounds %struct.Reg, %struct.Reg* %20427, i32 0, i32 0
  %RAX.i806 = bitcast %union.anon* %20428 to i64*
  %20429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20430 = getelementptr inbounds %struct.GPR, %struct.GPR* %20429, i32 0, i32 15
  %20431 = getelementptr inbounds %struct.Reg, %struct.Reg* %20430, i32 0, i32 0
  %RBP.i807 = bitcast %union.anon* %20431 to i64*
  %20432 = load i64, i64* %RBP.i807
  %20433 = sub i64 %20432, 48
  %20434 = load i64, i64* %PC.i805
  %20435 = add i64 %20434, 3
  store i64 %20435, i64* %PC.i805
  %20436 = inttoptr i64 %20433 to i32*
  %20437 = load i32, i32* %20436
  %20438 = zext i32 %20437 to i64
  store i64 %20438, i64* %RAX.i806, align 8
  store %struct.Memory* %loadMem_47688b, %struct.Memory** %MEMORY
  %loadMem_47688e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20440 = getelementptr inbounds %struct.GPR, %struct.GPR* %20439, i32 0, i32 33
  %20441 = getelementptr inbounds %struct.Reg, %struct.Reg* %20440, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %20441 to i64*
  %20442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20443 = getelementptr inbounds %struct.GPR, %struct.GPR* %20442, i32 0, i32 1
  %20444 = getelementptr inbounds %struct.Reg, %struct.Reg* %20443, i32 0, i32 0
  %RAX.i804 = bitcast %union.anon* %20444 to i64*
  %20445 = load i64, i64* %RAX.i804
  %20446 = load i64, i64* %PC.i803
  %20447 = add i64 %20446, 3
  store i64 %20447, i64* %PC.i803
  %20448 = trunc i64 %20445 to i32
  %20449 = add i32 20, %20448
  %20450 = zext i32 %20449 to i64
  store i64 %20450, i64* %RAX.i804, align 8
  %20451 = icmp ult i32 %20449, %20448
  %20452 = icmp ult i32 %20449, 20
  %20453 = or i1 %20451, %20452
  %20454 = zext i1 %20453 to i8
  %20455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20454, i8* %20455, align 1
  %20456 = and i32 %20449, 255
  %20457 = call i32 @llvm.ctpop.i32(i32 %20456)
  %20458 = trunc i32 %20457 to i8
  %20459 = and i8 %20458, 1
  %20460 = xor i8 %20459, 1
  %20461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20460, i8* %20461, align 1
  %20462 = xor i64 20, %20445
  %20463 = trunc i64 %20462 to i32
  %20464 = xor i32 %20463, %20449
  %20465 = lshr i32 %20464, 4
  %20466 = trunc i32 %20465 to i8
  %20467 = and i8 %20466, 1
  %20468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20467, i8* %20468, align 1
  %20469 = icmp eq i32 %20449, 0
  %20470 = zext i1 %20469 to i8
  %20471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20470, i8* %20471, align 1
  %20472 = lshr i32 %20449, 31
  %20473 = trunc i32 %20472 to i8
  %20474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20473, i8* %20474, align 1
  %20475 = lshr i32 %20448, 31
  %20476 = xor i32 %20472, %20475
  %20477 = add i32 %20476, %20472
  %20478 = icmp eq i32 %20477, 2
  %20479 = zext i1 %20478 to i8
  %20480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20479, i8* %20480, align 1
  store %struct.Memory* %loadMem_47688e, %struct.Memory** %MEMORY
  %loadMem_476891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20482 = getelementptr inbounds %struct.GPR, %struct.GPR* %20481, i32 0, i32 33
  %20483 = getelementptr inbounds %struct.Reg, %struct.Reg* %20482, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %20483 to i64*
  %20484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20485 = getelementptr inbounds %struct.GPR, %struct.GPR* %20484, i32 0, i32 1
  %20486 = getelementptr inbounds %struct.Reg, %struct.Reg* %20485, i32 0, i32 0
  %EAX.i801 = bitcast %union.anon* %20486 to i32*
  %20487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20488 = getelementptr inbounds %struct.GPR, %struct.GPR* %20487, i32 0, i32 5
  %20489 = getelementptr inbounds %struct.Reg, %struct.Reg* %20488, i32 0, i32 0
  %RCX.i802 = bitcast %union.anon* %20489 to i64*
  %20490 = load i32, i32* %EAX.i801
  %20491 = zext i32 %20490 to i64
  %20492 = load i64, i64* %PC.i800
  %20493 = add i64 %20492, 3
  store i64 %20493, i64* %PC.i800
  %20494 = shl i64 %20491, 32
  %20495 = ashr exact i64 %20494, 32
  store i64 %20495, i64* %RCX.i802, align 8
  store %struct.Memory* %loadMem_476891, %struct.Memory** %MEMORY
  %loadMem_476894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20497 = getelementptr inbounds %struct.GPR, %struct.GPR* %20496, i32 0, i32 33
  %20498 = getelementptr inbounds %struct.Reg, %struct.Reg* %20497, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %20498 to i64*
  %20499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20500 = getelementptr inbounds %struct.GPR, %struct.GPR* %20499, i32 0, i32 1
  %20501 = getelementptr inbounds %struct.Reg, %struct.Reg* %20500, i32 0, i32 0
  %RAX.i798 = bitcast %union.anon* %20501 to i64*
  %20502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20503 = getelementptr inbounds %struct.GPR, %struct.GPR* %20502, i32 0, i32 5
  %20504 = getelementptr inbounds %struct.Reg, %struct.Reg* %20503, i32 0, i32 0
  %RCX.i799 = bitcast %union.anon* %20504 to i64*
  %20505 = load i64, i64* %RCX.i799
  %20506 = add i64 %20505, 12099168
  %20507 = load i64, i64* %PC.i797
  %20508 = add i64 %20507, 8
  store i64 %20508, i64* %PC.i797
  %20509 = inttoptr i64 %20506 to i8*
  %20510 = load i8, i8* %20509
  %20511 = zext i8 %20510 to i64
  store i64 %20511, i64* %RAX.i798, align 8
  store %struct.Memory* %loadMem_476894, %struct.Memory** %MEMORY
  %loadMem_47689c = load %struct.Memory*, %struct.Memory** %MEMORY
  %20512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20513 = getelementptr inbounds %struct.GPR, %struct.GPR* %20512, i32 0, i32 33
  %20514 = getelementptr inbounds %struct.Reg, %struct.Reg* %20513, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %20514 to i64*
  %20515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20516 = getelementptr inbounds %struct.GPR, %struct.GPR* %20515, i32 0, i32 1
  %20517 = getelementptr inbounds %struct.Reg, %struct.Reg* %20516, i32 0, i32 0
  %EAX.i796 = bitcast %union.anon* %20517 to i32*
  %20518 = load i32, i32* %EAX.i796
  %20519 = zext i32 %20518 to i64
  %20520 = load i64, i64* %PC.i795
  %20521 = add i64 %20520, 3
  store i64 %20521, i64* %PC.i795
  %20522 = sub i32 %20518, 3
  %20523 = icmp ult i32 %20518, 3
  %20524 = zext i1 %20523 to i8
  %20525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20524, i8* %20525, align 1
  %20526 = and i32 %20522, 255
  %20527 = call i32 @llvm.ctpop.i32(i32 %20526)
  %20528 = trunc i32 %20527 to i8
  %20529 = and i8 %20528, 1
  %20530 = xor i8 %20529, 1
  %20531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20530, i8* %20531, align 1
  %20532 = xor i64 3, %20519
  %20533 = trunc i64 %20532 to i32
  %20534 = xor i32 %20533, %20522
  %20535 = lshr i32 %20534, 4
  %20536 = trunc i32 %20535 to i8
  %20537 = and i8 %20536, 1
  %20538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20537, i8* %20538, align 1
  %20539 = icmp eq i32 %20522, 0
  %20540 = zext i1 %20539 to i8
  %20541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20540, i8* %20541, align 1
  %20542 = lshr i32 %20522, 31
  %20543 = trunc i32 %20542 to i8
  %20544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20543, i8* %20544, align 1
  %20545 = lshr i32 %20518, 31
  %20546 = xor i32 %20542, %20545
  %20547 = add i32 %20546, %20545
  %20548 = icmp eq i32 %20547, 2
  %20549 = zext i1 %20548 to i8
  %20550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20549, i8* %20550, align 1
  store %struct.Memory* %loadMem_47689c, %struct.Memory** %MEMORY
  %loadMem_47689f = load %struct.Memory*, %struct.Memory** %MEMORY
  %20551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20552 = getelementptr inbounds %struct.GPR, %struct.GPR* %20551, i32 0, i32 33
  %20553 = getelementptr inbounds %struct.Reg, %struct.Reg* %20552, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %20553 to i64*
  %20554 = load i64, i64* %PC.i794
  %20555 = add i64 %20554, 244
  %20556 = load i64, i64* %PC.i794
  %20557 = add i64 %20556, 6
  %20558 = load i64, i64* %PC.i794
  %20559 = add i64 %20558, 6
  store i64 %20559, i64* %PC.i794
  %20560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20561 = load i8, i8* %20560, align 1
  store i8 %20561, i8* %BRANCH_TAKEN, align 1
  %20562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20563 = icmp ne i8 %20561, 0
  %20564 = select i1 %20563, i64 %20555, i64 %20557
  store i64 %20564, i64* %20562, align 8
  store %struct.Memory* %loadMem_47689f, %struct.Memory** %MEMORY
  %loadBr_47689f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47689f = icmp eq i8 %loadBr_47689f, 1
  br i1 %cmpBr_47689f, label %block_.L_476993, label %block_4768a5

block_4768a5:                                     ; preds = %block_.L_47688b
  %loadMem_4768a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20566 = getelementptr inbounds %struct.GPR, %struct.GPR* %20565, i32 0, i32 33
  %20567 = getelementptr inbounds %struct.Reg, %struct.Reg* %20566, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %20567 to i64*
  %20568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20569 = getelementptr inbounds %struct.GPR, %struct.GPR* %20568, i32 0, i32 1
  %20570 = getelementptr inbounds %struct.Reg, %struct.Reg* %20569, i32 0, i32 0
  %RAX.i792 = bitcast %union.anon* %20570 to i64*
  %20571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20572 = getelementptr inbounds %struct.GPR, %struct.GPR* %20571, i32 0, i32 15
  %20573 = getelementptr inbounds %struct.Reg, %struct.Reg* %20572, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %20573 to i64*
  %20574 = load i64, i64* %RBP.i793
  %20575 = sub i64 %20574, 48
  %20576 = load i64, i64* %PC.i791
  %20577 = add i64 %20576, 3
  store i64 %20577, i64* %PC.i791
  %20578 = inttoptr i64 %20575 to i32*
  %20579 = load i32, i32* %20578
  %20580 = zext i32 %20579 to i64
  store i64 %20580, i64* %RAX.i792, align 8
  store %struct.Memory* %loadMem_4768a5, %struct.Memory** %MEMORY
  %loadMem_4768a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20582 = getelementptr inbounds %struct.GPR, %struct.GPR* %20581, i32 0, i32 33
  %20583 = getelementptr inbounds %struct.Reg, %struct.Reg* %20582, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %20583 to i64*
  %20584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20585 = getelementptr inbounds %struct.GPR, %struct.GPR* %20584, i32 0, i32 1
  %20586 = getelementptr inbounds %struct.Reg, %struct.Reg* %20585, i32 0, i32 0
  %RAX.i790 = bitcast %union.anon* %20586 to i64*
  %20587 = load i64, i64* %RAX.i790
  %20588 = load i64, i64* %PC.i789
  %20589 = add i64 %20588, 3
  store i64 %20589, i64* %PC.i789
  %20590 = trunc i64 %20587 to i32
  %20591 = add i32 20, %20590
  %20592 = zext i32 %20591 to i64
  store i64 %20592, i64* %RAX.i790, align 8
  %20593 = icmp ult i32 %20591, %20590
  %20594 = icmp ult i32 %20591, 20
  %20595 = or i1 %20593, %20594
  %20596 = zext i1 %20595 to i8
  %20597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20596, i8* %20597, align 1
  %20598 = and i32 %20591, 255
  %20599 = call i32 @llvm.ctpop.i32(i32 %20598)
  %20600 = trunc i32 %20599 to i8
  %20601 = and i8 %20600, 1
  %20602 = xor i8 %20601, 1
  %20603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20602, i8* %20603, align 1
  %20604 = xor i64 20, %20587
  %20605 = trunc i64 %20604 to i32
  %20606 = xor i32 %20605, %20591
  %20607 = lshr i32 %20606, 4
  %20608 = trunc i32 %20607 to i8
  %20609 = and i8 %20608, 1
  %20610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20609, i8* %20610, align 1
  %20611 = icmp eq i32 %20591, 0
  %20612 = zext i1 %20611 to i8
  %20613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20612, i8* %20613, align 1
  %20614 = lshr i32 %20591, 31
  %20615 = trunc i32 %20614 to i8
  %20616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20615, i8* %20616, align 1
  %20617 = lshr i32 %20590, 31
  %20618 = xor i32 %20614, %20617
  %20619 = add i32 %20618, %20614
  %20620 = icmp eq i32 %20619, 2
  %20621 = zext i1 %20620 to i8
  %20622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20621, i8* %20622, align 1
  store %struct.Memory* %loadMem_4768a8, %struct.Memory** %MEMORY
  %loadMem_4768ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %20623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20624 = getelementptr inbounds %struct.GPR, %struct.GPR* %20623, i32 0, i32 33
  %20625 = getelementptr inbounds %struct.Reg, %struct.Reg* %20624, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %20625 to i64*
  %20626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20627 = getelementptr inbounds %struct.GPR, %struct.GPR* %20626, i32 0, i32 1
  %20628 = getelementptr inbounds %struct.Reg, %struct.Reg* %20627, i32 0, i32 0
  %EAX.i787 = bitcast %union.anon* %20628 to i32*
  %20629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20630 = getelementptr inbounds %struct.GPR, %struct.GPR* %20629, i32 0, i32 5
  %20631 = getelementptr inbounds %struct.Reg, %struct.Reg* %20630, i32 0, i32 0
  %RCX.i788 = bitcast %union.anon* %20631 to i64*
  %20632 = load i32, i32* %EAX.i787
  %20633 = zext i32 %20632 to i64
  %20634 = load i64, i64* %PC.i786
  %20635 = add i64 %20634, 3
  store i64 %20635, i64* %PC.i786
  %20636 = shl i64 %20633, 32
  %20637 = ashr exact i64 %20636, 32
  store i64 %20637, i64* %RCX.i788, align 8
  store %struct.Memory* %loadMem_4768ab, %struct.Memory** %MEMORY
  %loadMem_4768ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %20638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20639 = getelementptr inbounds %struct.GPR, %struct.GPR* %20638, i32 0, i32 33
  %20640 = getelementptr inbounds %struct.Reg, %struct.Reg* %20639, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %20640 to i64*
  %20641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20642 = getelementptr inbounds %struct.GPR, %struct.GPR* %20641, i32 0, i32 1
  %20643 = getelementptr inbounds %struct.Reg, %struct.Reg* %20642, i32 0, i32 0
  %RAX.i784 = bitcast %union.anon* %20643 to i64*
  %20644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20645 = getelementptr inbounds %struct.GPR, %struct.GPR* %20644, i32 0, i32 5
  %20646 = getelementptr inbounds %struct.Reg, %struct.Reg* %20645, i32 0, i32 0
  %RCX.i785 = bitcast %union.anon* %20646 to i64*
  %20647 = load i64, i64* %RCX.i785
  %20648 = add i64 %20647, 12099168
  %20649 = load i64, i64* %PC.i783
  %20650 = add i64 %20649, 8
  store i64 %20650, i64* %PC.i783
  %20651 = inttoptr i64 %20648 to i8*
  %20652 = load i8, i8* %20651
  %20653 = zext i8 %20652 to i64
  store i64 %20653, i64* %RAX.i784, align 8
  store %struct.Memory* %loadMem_4768ae, %struct.Memory** %MEMORY
  %loadMem_4768b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20655 = getelementptr inbounds %struct.GPR, %struct.GPR* %20654, i32 0, i32 33
  %20656 = getelementptr inbounds %struct.Reg, %struct.Reg* %20655, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %20656 to i64*
  %20657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20658 = getelementptr inbounds %struct.GPR, %struct.GPR* %20657, i32 0, i32 1
  %20659 = getelementptr inbounds %struct.Reg, %struct.Reg* %20658, i32 0, i32 0
  %EAX.i782 = bitcast %union.anon* %20659 to i32*
  %20660 = load i32, i32* %EAX.i782
  %20661 = zext i32 %20660 to i64
  %20662 = load i64, i64* %PC.i781
  %20663 = add i64 %20662, 3
  store i64 %20663, i64* %PC.i781
  %20664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20664, align 1
  %20665 = and i32 %20660, 255
  %20666 = call i32 @llvm.ctpop.i32(i32 %20665)
  %20667 = trunc i32 %20666 to i8
  %20668 = and i8 %20667, 1
  %20669 = xor i8 %20668, 1
  %20670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20669, i8* %20670, align 1
  %20671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20671, align 1
  %20672 = icmp eq i32 %20660, 0
  %20673 = zext i1 %20672 to i8
  %20674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20673, i8* %20674, align 1
  %20675 = lshr i32 %20660, 31
  %20676 = trunc i32 %20675 to i8
  %20677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20676, i8* %20677, align 1
  %20678 = lshr i32 %20660, 31
  %20679 = xor i32 %20675, %20678
  %20680 = add i32 %20679, %20678
  %20681 = icmp eq i32 %20680, 2
  %20682 = zext i1 %20681 to i8
  %20683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20682, i8* %20683, align 1
  store %struct.Memory* %loadMem_4768b6, %struct.Memory** %MEMORY
  %loadMem_4768b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20685 = getelementptr inbounds %struct.GPR, %struct.GPR* %20684, i32 0, i32 33
  %20686 = getelementptr inbounds %struct.Reg, %struct.Reg* %20685, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %20686 to i64*
  %20687 = load i64, i64* %PC.i780
  %20688 = add i64 %20687, 218
  %20689 = load i64, i64* %PC.i780
  %20690 = add i64 %20689, 6
  %20691 = load i64, i64* %PC.i780
  %20692 = add i64 %20691, 6
  store i64 %20692, i64* %PC.i780
  %20693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20694 = load i8, i8* %20693, align 1
  %20695 = icmp eq i8 %20694, 0
  %20696 = zext i1 %20695 to i8
  store i8 %20696, i8* %BRANCH_TAKEN, align 1
  %20697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20698 = select i1 %20695, i64 %20688, i64 %20690
  store i64 %20698, i64* %20697, align 8
  store %struct.Memory* %loadMem_4768b9, %struct.Memory** %MEMORY
  %loadBr_4768b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4768b9 = icmp eq i8 %loadBr_4768b9, 1
  br i1 %cmpBr_4768b9, label %block_.L_476993, label %block_4768bf

block_4768bf:                                     ; preds = %block_4768a5
  %loadMem_4768bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %20699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20700 = getelementptr inbounds %struct.GPR, %struct.GPR* %20699, i32 0, i32 33
  %20701 = getelementptr inbounds %struct.Reg, %struct.Reg* %20700, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %20701 to i64*
  %20702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20703 = getelementptr inbounds %struct.GPR, %struct.GPR* %20702, i32 0, i32 1
  %20704 = getelementptr inbounds %struct.Reg, %struct.Reg* %20703, i32 0, i32 0
  %RAX.i778 = bitcast %union.anon* %20704 to i64*
  %20705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20706 = getelementptr inbounds %struct.GPR, %struct.GPR* %20705, i32 0, i32 15
  %20707 = getelementptr inbounds %struct.Reg, %struct.Reg* %20706, i32 0, i32 0
  %RBP.i779 = bitcast %union.anon* %20707 to i64*
  %20708 = load i64, i64* %RBP.i779
  %20709 = sub i64 %20708, 48
  %20710 = load i64, i64* %PC.i777
  %20711 = add i64 %20710, 3
  store i64 %20711, i64* %PC.i777
  %20712 = inttoptr i64 %20709 to i32*
  %20713 = load i32, i32* %20712
  %20714 = zext i32 %20713 to i64
  store i64 %20714, i64* %RAX.i778, align 8
  store %struct.Memory* %loadMem_4768bf, %struct.Memory** %MEMORY
  %loadMem_4768c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20716 = getelementptr inbounds %struct.GPR, %struct.GPR* %20715, i32 0, i32 33
  %20717 = getelementptr inbounds %struct.Reg, %struct.Reg* %20716, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %20717 to i64*
  %20718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20719 = getelementptr inbounds %struct.GPR, %struct.GPR* %20718, i32 0, i32 1
  %20720 = getelementptr inbounds %struct.Reg, %struct.Reg* %20719, i32 0, i32 0
  %RAX.i776 = bitcast %union.anon* %20720 to i64*
  %20721 = load i64, i64* %RAX.i776
  %20722 = load i64, i64* %PC.i775
  %20723 = add i64 %20722, 3
  store i64 %20723, i64* %PC.i775
  %20724 = trunc i64 %20721 to i32
  %20725 = add i32 20, %20724
  %20726 = zext i32 %20725 to i64
  store i64 %20726, i64* %RAX.i776, align 8
  %20727 = icmp ult i32 %20725, %20724
  %20728 = icmp ult i32 %20725, 20
  %20729 = or i1 %20727, %20728
  %20730 = zext i1 %20729 to i8
  %20731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20730, i8* %20731, align 1
  %20732 = and i32 %20725, 255
  %20733 = call i32 @llvm.ctpop.i32(i32 %20732)
  %20734 = trunc i32 %20733 to i8
  %20735 = and i8 %20734, 1
  %20736 = xor i8 %20735, 1
  %20737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20736, i8* %20737, align 1
  %20738 = xor i64 20, %20721
  %20739 = trunc i64 %20738 to i32
  %20740 = xor i32 %20739, %20725
  %20741 = lshr i32 %20740, 4
  %20742 = trunc i32 %20741 to i8
  %20743 = and i8 %20742, 1
  %20744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20743, i8* %20744, align 1
  %20745 = icmp eq i32 %20725, 0
  %20746 = zext i1 %20745 to i8
  %20747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20746, i8* %20747, align 1
  %20748 = lshr i32 %20725, 31
  %20749 = trunc i32 %20748 to i8
  %20750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20749, i8* %20750, align 1
  %20751 = lshr i32 %20724, 31
  %20752 = xor i32 %20748, %20751
  %20753 = add i32 %20752, %20748
  %20754 = icmp eq i32 %20753, 2
  %20755 = zext i1 %20754 to i8
  %20756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20755, i8* %20756, align 1
  store %struct.Memory* %loadMem_4768c2, %struct.Memory** %MEMORY
  %loadMem_4768c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20758 = getelementptr inbounds %struct.GPR, %struct.GPR* %20757, i32 0, i32 33
  %20759 = getelementptr inbounds %struct.Reg, %struct.Reg* %20758, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %20759 to i64*
  %20760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20761 = getelementptr inbounds %struct.GPR, %struct.GPR* %20760, i32 0, i32 1
  %20762 = getelementptr inbounds %struct.Reg, %struct.Reg* %20761, i32 0, i32 0
  %RAX.i774 = bitcast %union.anon* %20762 to i64*
  %20763 = load i64, i64* %RAX.i774
  %20764 = load i64, i64* %PC.i773
  %20765 = add i64 %20764, 3
  store i64 %20765, i64* %PC.i773
  %20766 = trunc i64 %20763 to i32
  %20767 = add i32 20, %20766
  %20768 = zext i32 %20767 to i64
  store i64 %20768, i64* %RAX.i774, align 8
  %20769 = icmp ult i32 %20767, %20766
  %20770 = icmp ult i32 %20767, 20
  %20771 = or i1 %20769, %20770
  %20772 = zext i1 %20771 to i8
  %20773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20772, i8* %20773, align 1
  %20774 = and i32 %20767, 255
  %20775 = call i32 @llvm.ctpop.i32(i32 %20774)
  %20776 = trunc i32 %20775 to i8
  %20777 = and i8 %20776, 1
  %20778 = xor i8 %20777, 1
  %20779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20778, i8* %20779, align 1
  %20780 = xor i64 20, %20763
  %20781 = trunc i64 %20780 to i32
  %20782 = xor i32 %20781, %20767
  %20783 = lshr i32 %20782, 4
  %20784 = trunc i32 %20783 to i8
  %20785 = and i8 %20784, 1
  %20786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20785, i8* %20786, align 1
  %20787 = icmp eq i32 %20767, 0
  %20788 = zext i1 %20787 to i8
  %20789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20788, i8* %20789, align 1
  %20790 = lshr i32 %20767, 31
  %20791 = trunc i32 %20790 to i8
  %20792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20791, i8* %20792, align 1
  %20793 = lshr i32 %20766, 31
  %20794 = xor i32 %20790, %20793
  %20795 = add i32 %20794, %20790
  %20796 = icmp eq i32 %20795, 2
  %20797 = zext i1 %20796 to i8
  %20798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20797, i8* %20798, align 1
  store %struct.Memory* %loadMem_4768c5, %struct.Memory** %MEMORY
  %loadMem_4768c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20800 = getelementptr inbounds %struct.GPR, %struct.GPR* %20799, i32 0, i32 33
  %20801 = getelementptr inbounds %struct.Reg, %struct.Reg* %20800, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %20801 to i64*
  %20802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20803 = getelementptr inbounds %struct.GPR, %struct.GPR* %20802, i32 0, i32 1
  %20804 = getelementptr inbounds %struct.Reg, %struct.Reg* %20803, i32 0, i32 0
  %EAX.i771 = bitcast %union.anon* %20804 to i32*
  %20805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20806 = getelementptr inbounds %struct.GPR, %struct.GPR* %20805, i32 0, i32 5
  %20807 = getelementptr inbounds %struct.Reg, %struct.Reg* %20806, i32 0, i32 0
  %RCX.i772 = bitcast %union.anon* %20807 to i64*
  %20808 = load i32, i32* %EAX.i771
  %20809 = zext i32 %20808 to i64
  %20810 = load i64, i64* %PC.i770
  %20811 = add i64 %20810, 3
  store i64 %20811, i64* %PC.i770
  %20812 = shl i64 %20809, 32
  %20813 = ashr exact i64 %20812, 32
  store i64 %20813, i64* %RCX.i772, align 8
  store %struct.Memory* %loadMem_4768c8, %struct.Memory** %MEMORY
  %loadMem_4768cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %20814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20815 = getelementptr inbounds %struct.GPR, %struct.GPR* %20814, i32 0, i32 33
  %20816 = getelementptr inbounds %struct.Reg, %struct.Reg* %20815, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %20816 to i64*
  %20817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20818 = getelementptr inbounds %struct.GPR, %struct.GPR* %20817, i32 0, i32 1
  %20819 = getelementptr inbounds %struct.Reg, %struct.Reg* %20818, i32 0, i32 0
  %RAX.i768 = bitcast %union.anon* %20819 to i64*
  %20820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20821 = getelementptr inbounds %struct.GPR, %struct.GPR* %20820, i32 0, i32 5
  %20822 = getelementptr inbounds %struct.Reg, %struct.Reg* %20821, i32 0, i32 0
  %RCX.i769 = bitcast %union.anon* %20822 to i64*
  %20823 = load i64, i64* %RCX.i769
  %20824 = add i64 %20823, 12099168
  %20825 = load i64, i64* %PC.i767
  %20826 = add i64 %20825, 8
  store i64 %20826, i64* %PC.i767
  %20827 = inttoptr i64 %20824 to i8*
  %20828 = load i8, i8* %20827
  %20829 = zext i8 %20828 to i64
  store i64 %20829, i64* %RAX.i768, align 8
  store %struct.Memory* %loadMem_4768cb, %struct.Memory** %MEMORY
  %loadMem_4768d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20831 = getelementptr inbounds %struct.GPR, %struct.GPR* %20830, i32 0, i32 33
  %20832 = getelementptr inbounds %struct.Reg, %struct.Reg* %20831, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %20832 to i64*
  %20833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20834 = getelementptr inbounds %struct.GPR, %struct.GPR* %20833, i32 0, i32 1
  %20835 = getelementptr inbounds %struct.Reg, %struct.Reg* %20834, i32 0, i32 0
  %EAX.i766 = bitcast %union.anon* %20835 to i32*
  %20836 = load i32, i32* %EAX.i766
  %20837 = zext i32 %20836 to i64
  %20838 = load i64, i64* %PC.i765
  %20839 = add i64 %20838, 3
  store i64 %20839, i64* %PC.i765
  %20840 = sub i32 %20836, 3
  %20841 = icmp ult i32 %20836, 3
  %20842 = zext i1 %20841 to i8
  %20843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20842, i8* %20843, align 1
  %20844 = and i32 %20840, 255
  %20845 = call i32 @llvm.ctpop.i32(i32 %20844)
  %20846 = trunc i32 %20845 to i8
  %20847 = and i8 %20846, 1
  %20848 = xor i8 %20847, 1
  %20849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20848, i8* %20849, align 1
  %20850 = xor i64 3, %20837
  %20851 = trunc i64 %20850 to i32
  %20852 = xor i32 %20851, %20840
  %20853 = lshr i32 %20852, 4
  %20854 = trunc i32 %20853 to i8
  %20855 = and i8 %20854, 1
  %20856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20855, i8* %20856, align 1
  %20857 = icmp eq i32 %20840, 0
  %20858 = zext i1 %20857 to i8
  %20859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20858, i8* %20859, align 1
  %20860 = lshr i32 %20840, 31
  %20861 = trunc i32 %20860 to i8
  %20862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20861, i8* %20862, align 1
  %20863 = lshr i32 %20836, 31
  %20864 = xor i32 %20860, %20863
  %20865 = add i32 %20864, %20863
  %20866 = icmp eq i32 %20865, 2
  %20867 = zext i1 %20866 to i8
  %20868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20867, i8* %20868, align 1
  store %struct.Memory* %loadMem_4768d3, %struct.Memory** %MEMORY
  %loadMem_4768d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20870 = getelementptr inbounds %struct.GPR, %struct.GPR* %20869, i32 0, i32 33
  %20871 = getelementptr inbounds %struct.Reg, %struct.Reg* %20870, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %20871 to i64*
  %20872 = load i64, i64* %PC.i764
  %20873 = add i64 %20872, 189
  %20874 = load i64, i64* %PC.i764
  %20875 = add i64 %20874, 6
  %20876 = load i64, i64* %PC.i764
  %20877 = add i64 %20876, 6
  store i64 %20877, i64* %PC.i764
  %20878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20879 = load i8, i8* %20878, align 1
  store i8 %20879, i8* %BRANCH_TAKEN, align 1
  %20880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20881 = icmp ne i8 %20879, 0
  %20882 = select i1 %20881, i64 %20873, i64 %20875
  store i64 %20882, i64* %20880, align 8
  store %struct.Memory* %loadMem_4768d6, %struct.Memory** %MEMORY
  %loadBr_4768d6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4768d6 = icmp eq i8 %loadBr_4768d6, 1
  br i1 %cmpBr_4768d6, label %block_.L_476993, label %block_4768dc

block_4768dc:                                     ; preds = %block_4768bf
  %loadMem_4768dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %20883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20884 = getelementptr inbounds %struct.GPR, %struct.GPR* %20883, i32 0, i32 33
  %20885 = getelementptr inbounds %struct.Reg, %struct.Reg* %20884, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %20885 to i64*
  %20886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20887 = getelementptr inbounds %struct.GPR, %struct.GPR* %20886, i32 0, i32 1
  %20888 = getelementptr inbounds %struct.Reg, %struct.Reg* %20887, i32 0, i32 0
  %RAX.i762 = bitcast %union.anon* %20888 to i64*
  %20889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20890 = getelementptr inbounds %struct.GPR, %struct.GPR* %20889, i32 0, i32 15
  %20891 = getelementptr inbounds %struct.Reg, %struct.Reg* %20890, i32 0, i32 0
  %RBP.i763 = bitcast %union.anon* %20891 to i64*
  %20892 = load i64, i64* %RBP.i763
  %20893 = sub i64 %20892, 48
  %20894 = load i64, i64* %PC.i761
  %20895 = add i64 %20894, 3
  store i64 %20895, i64* %PC.i761
  %20896 = inttoptr i64 %20893 to i32*
  %20897 = load i32, i32* %20896
  %20898 = zext i32 %20897 to i64
  store i64 %20898, i64* %RAX.i762, align 8
  store %struct.Memory* %loadMem_4768dc, %struct.Memory** %MEMORY
  %loadMem_4768df = load %struct.Memory*, %struct.Memory** %MEMORY
  %20899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20900 = getelementptr inbounds %struct.GPR, %struct.GPR* %20899, i32 0, i32 33
  %20901 = getelementptr inbounds %struct.Reg, %struct.Reg* %20900, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %20901 to i64*
  %20902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20903 = getelementptr inbounds %struct.GPR, %struct.GPR* %20902, i32 0, i32 1
  %20904 = getelementptr inbounds %struct.Reg, %struct.Reg* %20903, i32 0, i32 0
  %RAX.i760 = bitcast %union.anon* %20904 to i64*
  %20905 = load i64, i64* %RAX.i760
  %20906 = load i64, i64* %PC.i759
  %20907 = add i64 %20906, 3
  store i64 %20907, i64* %PC.i759
  %20908 = trunc i64 %20905 to i32
  %20909 = add i32 20, %20908
  %20910 = zext i32 %20909 to i64
  store i64 %20910, i64* %RAX.i760, align 8
  %20911 = icmp ult i32 %20909, %20908
  %20912 = icmp ult i32 %20909, 20
  %20913 = or i1 %20911, %20912
  %20914 = zext i1 %20913 to i8
  %20915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20914, i8* %20915, align 1
  %20916 = and i32 %20909, 255
  %20917 = call i32 @llvm.ctpop.i32(i32 %20916)
  %20918 = trunc i32 %20917 to i8
  %20919 = and i8 %20918, 1
  %20920 = xor i8 %20919, 1
  %20921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20920, i8* %20921, align 1
  %20922 = xor i64 20, %20905
  %20923 = trunc i64 %20922 to i32
  %20924 = xor i32 %20923, %20909
  %20925 = lshr i32 %20924, 4
  %20926 = trunc i32 %20925 to i8
  %20927 = and i8 %20926, 1
  %20928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20927, i8* %20928, align 1
  %20929 = icmp eq i32 %20909, 0
  %20930 = zext i1 %20929 to i8
  %20931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20930, i8* %20931, align 1
  %20932 = lshr i32 %20909, 31
  %20933 = trunc i32 %20932 to i8
  %20934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20933, i8* %20934, align 1
  %20935 = lshr i32 %20908, 31
  %20936 = xor i32 %20932, %20935
  %20937 = add i32 %20936, %20932
  %20938 = icmp eq i32 %20937, 2
  %20939 = zext i1 %20938 to i8
  %20940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20939, i8* %20940, align 1
  store %struct.Memory* %loadMem_4768df, %struct.Memory** %MEMORY
  %loadMem_4768e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20942 = getelementptr inbounds %struct.GPR, %struct.GPR* %20941, i32 0, i32 33
  %20943 = getelementptr inbounds %struct.Reg, %struct.Reg* %20942, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %20943 to i64*
  %20944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20945 = getelementptr inbounds %struct.GPR, %struct.GPR* %20944, i32 0, i32 1
  %20946 = getelementptr inbounds %struct.Reg, %struct.Reg* %20945, i32 0, i32 0
  %RAX.i758 = bitcast %union.anon* %20946 to i64*
  %20947 = load i64, i64* %RAX.i758
  %20948 = load i64, i64* %PC.i757
  %20949 = add i64 %20948, 3
  store i64 %20949, i64* %PC.i757
  %20950 = trunc i64 %20947 to i32
  %20951 = add i32 20, %20950
  %20952 = zext i32 %20951 to i64
  store i64 %20952, i64* %RAX.i758, align 8
  %20953 = icmp ult i32 %20951, %20950
  %20954 = icmp ult i32 %20951, 20
  %20955 = or i1 %20953, %20954
  %20956 = zext i1 %20955 to i8
  %20957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20956, i8* %20957, align 1
  %20958 = and i32 %20951, 255
  %20959 = call i32 @llvm.ctpop.i32(i32 %20958)
  %20960 = trunc i32 %20959 to i8
  %20961 = and i8 %20960, 1
  %20962 = xor i8 %20961, 1
  %20963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20962, i8* %20963, align 1
  %20964 = xor i64 20, %20947
  %20965 = trunc i64 %20964 to i32
  %20966 = xor i32 %20965, %20951
  %20967 = lshr i32 %20966, 4
  %20968 = trunc i32 %20967 to i8
  %20969 = and i8 %20968, 1
  %20970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20969, i8* %20970, align 1
  %20971 = icmp eq i32 %20951, 0
  %20972 = zext i1 %20971 to i8
  %20973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20972, i8* %20973, align 1
  %20974 = lshr i32 %20951, 31
  %20975 = trunc i32 %20974 to i8
  %20976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20975, i8* %20976, align 1
  %20977 = lshr i32 %20950, 31
  %20978 = xor i32 %20974, %20977
  %20979 = add i32 %20978, %20974
  %20980 = icmp eq i32 %20979, 2
  %20981 = zext i1 %20980 to i8
  %20982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20981, i8* %20982, align 1
  store %struct.Memory* %loadMem_4768e2, %struct.Memory** %MEMORY
  %loadMem_4768e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20984 = getelementptr inbounds %struct.GPR, %struct.GPR* %20983, i32 0, i32 33
  %20985 = getelementptr inbounds %struct.Reg, %struct.Reg* %20984, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %20985 to i64*
  %20986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20987 = getelementptr inbounds %struct.GPR, %struct.GPR* %20986, i32 0, i32 1
  %20988 = getelementptr inbounds %struct.Reg, %struct.Reg* %20987, i32 0, i32 0
  %EAX.i755 = bitcast %union.anon* %20988 to i32*
  %20989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20990 = getelementptr inbounds %struct.GPR, %struct.GPR* %20989, i32 0, i32 5
  %20991 = getelementptr inbounds %struct.Reg, %struct.Reg* %20990, i32 0, i32 0
  %RCX.i756 = bitcast %union.anon* %20991 to i64*
  %20992 = load i32, i32* %EAX.i755
  %20993 = zext i32 %20992 to i64
  %20994 = load i64, i64* %PC.i754
  %20995 = add i64 %20994, 3
  store i64 %20995, i64* %PC.i754
  %20996 = shl i64 %20993, 32
  %20997 = ashr exact i64 %20996, 32
  store i64 %20997, i64* %RCX.i756, align 8
  store %struct.Memory* %loadMem_4768e5, %struct.Memory** %MEMORY
  %loadMem_4768e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20999 = getelementptr inbounds %struct.GPR, %struct.GPR* %20998, i32 0, i32 33
  %21000 = getelementptr inbounds %struct.Reg, %struct.Reg* %20999, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %21000 to i64*
  %21001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21002 = getelementptr inbounds %struct.GPR, %struct.GPR* %21001, i32 0, i32 1
  %21003 = getelementptr inbounds %struct.Reg, %struct.Reg* %21002, i32 0, i32 0
  %RAX.i752 = bitcast %union.anon* %21003 to i64*
  %21004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21005 = getelementptr inbounds %struct.GPR, %struct.GPR* %21004, i32 0, i32 5
  %21006 = getelementptr inbounds %struct.Reg, %struct.Reg* %21005, i32 0, i32 0
  %RCX.i753 = bitcast %union.anon* %21006 to i64*
  %21007 = load i64, i64* %RCX.i753
  %21008 = add i64 %21007, 12099168
  %21009 = load i64, i64* %PC.i751
  %21010 = add i64 %21009, 8
  store i64 %21010, i64* %PC.i751
  %21011 = inttoptr i64 %21008 to i8*
  %21012 = load i8, i8* %21011
  %21013 = zext i8 %21012 to i64
  store i64 %21013, i64* %RAX.i752, align 8
  store %struct.Memory* %loadMem_4768e8, %struct.Memory** %MEMORY
  %loadMem_4768f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21015 = getelementptr inbounds %struct.GPR, %struct.GPR* %21014, i32 0, i32 33
  %21016 = getelementptr inbounds %struct.Reg, %struct.Reg* %21015, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %21016 to i64*
  %21017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21018 = getelementptr inbounds %struct.GPR, %struct.GPR* %21017, i32 0, i32 1
  %21019 = getelementptr inbounds %struct.Reg, %struct.Reg* %21018, i32 0, i32 0
  %EAX.i749 = bitcast %union.anon* %21019 to i32*
  %21020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21021 = getelementptr inbounds %struct.GPR, %struct.GPR* %21020, i32 0, i32 15
  %21022 = getelementptr inbounds %struct.Reg, %struct.Reg* %21021, i32 0, i32 0
  %RBP.i750 = bitcast %union.anon* %21022 to i64*
  %21023 = load i32, i32* %EAX.i749
  %21024 = zext i32 %21023 to i64
  %21025 = load i64, i64* %RBP.i750
  %21026 = sub i64 %21025, 228
  %21027 = load i64, i64* %PC.i748
  %21028 = add i64 %21027, 6
  store i64 %21028, i64* %PC.i748
  %21029 = inttoptr i64 %21026 to i32*
  %21030 = load i32, i32* %21029
  %21031 = sub i32 %21023, %21030
  %21032 = icmp ult i32 %21023, %21030
  %21033 = zext i1 %21032 to i8
  %21034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21033, i8* %21034, align 1
  %21035 = and i32 %21031, 255
  %21036 = call i32 @llvm.ctpop.i32(i32 %21035)
  %21037 = trunc i32 %21036 to i8
  %21038 = and i8 %21037, 1
  %21039 = xor i8 %21038, 1
  %21040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21039, i8* %21040, align 1
  %21041 = xor i32 %21030, %21023
  %21042 = xor i32 %21041, %21031
  %21043 = lshr i32 %21042, 4
  %21044 = trunc i32 %21043 to i8
  %21045 = and i8 %21044, 1
  %21046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21045, i8* %21046, align 1
  %21047 = icmp eq i32 %21031, 0
  %21048 = zext i1 %21047 to i8
  %21049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21048, i8* %21049, align 1
  %21050 = lshr i32 %21031, 31
  %21051 = trunc i32 %21050 to i8
  %21052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21051, i8* %21052, align 1
  %21053 = lshr i32 %21023, 31
  %21054 = lshr i32 %21030, 31
  %21055 = xor i32 %21054, %21053
  %21056 = xor i32 %21050, %21053
  %21057 = add i32 %21056, %21055
  %21058 = icmp eq i32 %21057, 2
  %21059 = zext i1 %21058 to i8
  %21060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21059, i8* %21060, align 1
  store %struct.Memory* %loadMem_4768f0, %struct.Memory** %MEMORY
  %loadMem_4768f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21062 = getelementptr inbounds %struct.GPR, %struct.GPR* %21061, i32 0, i32 33
  %21063 = getelementptr inbounds %struct.Reg, %struct.Reg* %21062, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %21063 to i64*
  %21064 = load i64, i64* %PC.i747
  %21065 = add i64 %21064, 157
  %21066 = load i64, i64* %PC.i747
  %21067 = add i64 %21066, 6
  %21068 = load i64, i64* %PC.i747
  %21069 = add i64 %21068, 6
  store i64 %21069, i64* %PC.i747
  %21070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21071 = load i8, i8* %21070, align 1
  %21072 = icmp eq i8 %21071, 0
  %21073 = zext i1 %21072 to i8
  store i8 %21073, i8* %BRANCH_TAKEN, align 1
  %21074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21075 = select i1 %21072, i64 %21065, i64 %21067
  store i64 %21075, i64* %21074, align 8
  store %struct.Memory* %loadMem_4768f6, %struct.Memory** %MEMORY
  %loadBr_4768f6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4768f6 = icmp eq i8 %loadBr_4768f6, 1
  br i1 %cmpBr_4768f6, label %block_.L_476993, label %block_4768fc

block_4768fc:                                     ; preds = %block_4768dc
  %loadMem_4768fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %21076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21077 = getelementptr inbounds %struct.GPR, %struct.GPR* %21076, i32 0, i32 33
  %21078 = getelementptr inbounds %struct.Reg, %struct.Reg* %21077, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %21078 to i64*
  %21079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21080 = getelementptr inbounds %struct.GPR, %struct.GPR* %21079, i32 0, i32 1
  %21081 = getelementptr inbounds %struct.Reg, %struct.Reg* %21080, i32 0, i32 0
  %RAX.i745 = bitcast %union.anon* %21081 to i64*
  %21082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21083 = getelementptr inbounds %struct.GPR, %struct.GPR* %21082, i32 0, i32 15
  %21084 = getelementptr inbounds %struct.Reg, %struct.Reg* %21083, i32 0, i32 0
  %RBP.i746 = bitcast %union.anon* %21084 to i64*
  %21085 = load i64, i64* %RBP.i746
  %21086 = sub i64 %21085, 48
  %21087 = load i64, i64* %PC.i744
  %21088 = add i64 %21087, 3
  store i64 %21088, i64* %PC.i744
  %21089 = inttoptr i64 %21086 to i32*
  %21090 = load i32, i32* %21089
  %21091 = zext i32 %21090 to i64
  store i64 %21091, i64* %RAX.i745, align 8
  store %struct.Memory* %loadMem_4768fc, %struct.Memory** %MEMORY
  %loadMem_4768ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %21092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21093 = getelementptr inbounds %struct.GPR, %struct.GPR* %21092, i32 0, i32 33
  %21094 = getelementptr inbounds %struct.Reg, %struct.Reg* %21093, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %21094 to i64*
  %21095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21096 = getelementptr inbounds %struct.GPR, %struct.GPR* %21095, i32 0, i32 1
  %21097 = getelementptr inbounds %struct.Reg, %struct.Reg* %21096, i32 0, i32 0
  %RAX.i743 = bitcast %union.anon* %21097 to i64*
  %21098 = load i64, i64* %RAX.i743
  %21099 = load i64, i64* %PC.i742
  %21100 = add i64 %21099, 3
  store i64 %21100, i64* %PC.i742
  %21101 = trunc i64 %21098 to i32
  %21102 = add i32 20, %21101
  %21103 = zext i32 %21102 to i64
  store i64 %21103, i64* %RAX.i743, align 8
  %21104 = icmp ult i32 %21102, %21101
  %21105 = icmp ult i32 %21102, 20
  %21106 = or i1 %21104, %21105
  %21107 = zext i1 %21106 to i8
  %21108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21107, i8* %21108, align 1
  %21109 = and i32 %21102, 255
  %21110 = call i32 @llvm.ctpop.i32(i32 %21109)
  %21111 = trunc i32 %21110 to i8
  %21112 = and i8 %21111, 1
  %21113 = xor i8 %21112, 1
  %21114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21113, i8* %21114, align 1
  %21115 = xor i64 20, %21098
  %21116 = trunc i64 %21115 to i32
  %21117 = xor i32 %21116, %21102
  %21118 = lshr i32 %21117, 4
  %21119 = trunc i32 %21118 to i8
  %21120 = and i8 %21119, 1
  %21121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21120, i8* %21121, align 1
  %21122 = icmp eq i32 %21102, 0
  %21123 = zext i1 %21122 to i8
  %21124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21123, i8* %21124, align 1
  %21125 = lshr i32 %21102, 31
  %21126 = trunc i32 %21125 to i8
  %21127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21126, i8* %21127, align 1
  %21128 = lshr i32 %21101, 31
  %21129 = xor i32 %21125, %21128
  %21130 = add i32 %21129, %21125
  %21131 = icmp eq i32 %21130, 2
  %21132 = zext i1 %21131 to i8
  %21133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21132, i8* %21133, align 1
  store %struct.Memory* %loadMem_4768ff, %struct.Memory** %MEMORY
  %loadMem_476902 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21135 = getelementptr inbounds %struct.GPR, %struct.GPR* %21134, i32 0, i32 33
  %21136 = getelementptr inbounds %struct.Reg, %struct.Reg* %21135, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %21136 to i64*
  %21137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21138 = getelementptr inbounds %struct.GPR, %struct.GPR* %21137, i32 0, i32 1
  %21139 = getelementptr inbounds %struct.Reg, %struct.Reg* %21138, i32 0, i32 0
  %RAX.i741 = bitcast %union.anon* %21139 to i64*
  %21140 = load i64, i64* %RAX.i741
  %21141 = load i64, i64* %PC.i740
  %21142 = add i64 %21141, 3
  store i64 %21142, i64* %PC.i740
  %21143 = trunc i64 %21140 to i32
  %21144 = add i32 20, %21143
  %21145 = zext i32 %21144 to i64
  store i64 %21145, i64* %RAX.i741, align 8
  %21146 = icmp ult i32 %21144, %21143
  %21147 = icmp ult i32 %21144, 20
  %21148 = or i1 %21146, %21147
  %21149 = zext i1 %21148 to i8
  %21150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21149, i8* %21150, align 1
  %21151 = and i32 %21144, 255
  %21152 = call i32 @llvm.ctpop.i32(i32 %21151)
  %21153 = trunc i32 %21152 to i8
  %21154 = and i8 %21153, 1
  %21155 = xor i8 %21154, 1
  %21156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21155, i8* %21156, align 1
  %21157 = xor i64 20, %21140
  %21158 = trunc i64 %21157 to i32
  %21159 = xor i32 %21158, %21144
  %21160 = lshr i32 %21159, 4
  %21161 = trunc i32 %21160 to i8
  %21162 = and i8 %21161, 1
  %21163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21162, i8* %21163, align 1
  %21164 = icmp eq i32 %21144, 0
  %21165 = zext i1 %21164 to i8
  %21166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21165, i8* %21166, align 1
  %21167 = lshr i32 %21144, 31
  %21168 = trunc i32 %21167 to i8
  %21169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21168, i8* %21169, align 1
  %21170 = lshr i32 %21143, 31
  %21171 = xor i32 %21167, %21170
  %21172 = add i32 %21171, %21167
  %21173 = icmp eq i32 %21172, 2
  %21174 = zext i1 %21173 to i8
  %21175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21174, i8* %21175, align 1
  store %struct.Memory* %loadMem_476902, %struct.Memory** %MEMORY
  %loadMem_476905 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21177 = getelementptr inbounds %struct.GPR, %struct.GPR* %21176, i32 0, i32 33
  %21178 = getelementptr inbounds %struct.Reg, %struct.Reg* %21177, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %21178 to i64*
  %21179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21180 = getelementptr inbounds %struct.GPR, %struct.GPR* %21179, i32 0, i32 1
  %21181 = getelementptr inbounds %struct.Reg, %struct.Reg* %21180, i32 0, i32 0
  %EAX.i738 = bitcast %union.anon* %21181 to i32*
  %21182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21183 = getelementptr inbounds %struct.GPR, %struct.GPR* %21182, i32 0, i32 5
  %21184 = getelementptr inbounds %struct.Reg, %struct.Reg* %21183, i32 0, i32 0
  %RCX.i739 = bitcast %union.anon* %21184 to i64*
  %21185 = load i32, i32* %EAX.i738
  %21186 = zext i32 %21185 to i64
  %21187 = load i64, i64* %PC.i737
  %21188 = add i64 %21187, 3
  store i64 %21188, i64* %PC.i737
  %21189 = shl i64 %21186, 32
  %21190 = ashr exact i64 %21189, 32
  store i64 %21190, i64* %RCX.i739, align 8
  store %struct.Memory* %loadMem_476905, %struct.Memory** %MEMORY
  %loadMem_476908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21192 = getelementptr inbounds %struct.GPR, %struct.GPR* %21191, i32 0, i32 33
  %21193 = getelementptr inbounds %struct.Reg, %struct.Reg* %21192, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %21193 to i64*
  %21194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21195 = getelementptr inbounds %struct.GPR, %struct.GPR* %21194, i32 0, i32 1
  %21196 = getelementptr inbounds %struct.Reg, %struct.Reg* %21195, i32 0, i32 0
  %RAX.i734 = bitcast %union.anon* %21196 to i64*
  %21197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21198 = getelementptr inbounds %struct.GPR, %struct.GPR* %21197, i32 0, i32 5
  %21199 = getelementptr inbounds %struct.Reg, %struct.Reg* %21198, i32 0, i32 0
  %RCX.i735 = bitcast %union.anon* %21199 to i64*
  %21200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21201 = getelementptr inbounds %struct.GPR, %struct.GPR* %21200, i32 0, i32 15
  %21202 = getelementptr inbounds %struct.Reg, %struct.Reg* %21201, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %21202 to i64*
  %21203 = load i64, i64* %RBP.i736
  %21204 = load i64, i64* %RCX.i735
  %21205 = add i64 %21203, -1040
  %21206 = add i64 %21205, %21204
  %21207 = load i64, i64* %PC.i733
  %21208 = add i64 %21207, 8
  store i64 %21208, i64* %PC.i733
  %21209 = inttoptr i64 %21206 to i8*
  %21210 = load i8, i8* %21209
  %21211 = sext i8 %21210 to i64
  %21212 = and i64 %21211, 4294967295
  store i64 %21212, i64* %RAX.i734, align 8
  store %struct.Memory* %loadMem_476908, %struct.Memory** %MEMORY
  %loadMem_476910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21214 = getelementptr inbounds %struct.GPR, %struct.GPR* %21213, i32 0, i32 33
  %21215 = getelementptr inbounds %struct.Reg, %struct.Reg* %21214, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %21215 to i64*
  %21216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21217 = getelementptr inbounds %struct.GPR, %struct.GPR* %21216, i32 0, i32 1
  %21218 = getelementptr inbounds %struct.Reg, %struct.Reg* %21217, i32 0, i32 0
  %EAX.i732 = bitcast %union.anon* %21218 to i32*
  %21219 = load i32, i32* %EAX.i732
  %21220 = zext i32 %21219 to i64
  %21221 = load i64, i64* %PC.i731
  %21222 = add i64 %21221, 3
  store i64 %21222, i64* %PC.i731
  %21223 = sub i32 %21219, 1
  %21224 = icmp ult i32 %21219, 1
  %21225 = zext i1 %21224 to i8
  %21226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21225, i8* %21226, align 1
  %21227 = and i32 %21223, 255
  %21228 = call i32 @llvm.ctpop.i32(i32 %21227)
  %21229 = trunc i32 %21228 to i8
  %21230 = and i8 %21229, 1
  %21231 = xor i8 %21230, 1
  %21232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21231, i8* %21232, align 1
  %21233 = xor i64 1, %21220
  %21234 = trunc i64 %21233 to i32
  %21235 = xor i32 %21234, %21223
  %21236 = lshr i32 %21235, 4
  %21237 = trunc i32 %21236 to i8
  %21238 = and i8 %21237, 1
  %21239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21238, i8* %21239, align 1
  %21240 = icmp eq i32 %21223, 0
  %21241 = zext i1 %21240 to i8
  %21242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21241, i8* %21242, align 1
  %21243 = lshr i32 %21223, 31
  %21244 = trunc i32 %21243 to i8
  %21245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21244, i8* %21245, align 1
  %21246 = lshr i32 %21219, 31
  %21247 = xor i32 %21243, %21246
  %21248 = add i32 %21247, %21246
  %21249 = icmp eq i32 %21248, 2
  %21250 = zext i1 %21249 to i8
  %21251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21250, i8* %21251, align 1
  store %struct.Memory* %loadMem_476910, %struct.Memory** %MEMORY
  %loadMem_476913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21253 = getelementptr inbounds %struct.GPR, %struct.GPR* %21252, i32 0, i32 33
  %21254 = getelementptr inbounds %struct.Reg, %struct.Reg* %21253, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %21254 to i64*
  %21255 = load i64, i64* %PC.i730
  %21256 = add i64 %21255, 128
  %21257 = load i64, i64* %PC.i730
  %21258 = add i64 %21257, 6
  %21259 = load i64, i64* %PC.i730
  %21260 = add i64 %21259, 6
  store i64 %21260, i64* %PC.i730
  %21261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21262 = load i8, i8* %21261, align 1
  store i8 %21262, i8* %BRANCH_TAKEN, align 1
  %21263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21264 = icmp ne i8 %21262, 0
  %21265 = select i1 %21264, i64 %21256, i64 %21258
  store i64 %21265, i64* %21263, align 8
  store %struct.Memory* %loadMem_476913, %struct.Memory** %MEMORY
  %loadBr_476913 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476913 = icmp eq i8 %loadBr_476913, 1
  br i1 %cmpBr_476913, label %block_.L_476993, label %block_476919

block_476919:                                     ; preds = %block_4768fc
  %loadMem_476919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21267 = getelementptr inbounds %struct.GPR, %struct.GPR* %21266, i32 0, i32 33
  %21268 = getelementptr inbounds %struct.Reg, %struct.Reg* %21267, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %21268 to i64*
  %21269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21270 = getelementptr inbounds %struct.GPR, %struct.GPR* %21269, i32 0, i32 1
  %21271 = getelementptr inbounds %struct.Reg, %struct.Reg* %21270, i32 0, i32 0
  %RAX.i728 = bitcast %union.anon* %21271 to i64*
  %21272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21273 = getelementptr inbounds %struct.GPR, %struct.GPR* %21272, i32 0, i32 15
  %21274 = getelementptr inbounds %struct.Reg, %struct.Reg* %21273, i32 0, i32 0
  %RBP.i729 = bitcast %union.anon* %21274 to i64*
  %21275 = load i64, i64* %RBP.i729
  %21276 = sub i64 %21275, 48
  %21277 = load i64, i64* %PC.i727
  %21278 = add i64 %21277, 3
  store i64 %21278, i64* %PC.i727
  %21279 = inttoptr i64 %21276 to i32*
  %21280 = load i32, i32* %21279
  %21281 = zext i32 %21280 to i64
  store i64 %21281, i64* %RAX.i728, align 8
  store %struct.Memory* %loadMem_476919, %struct.Memory** %MEMORY
  %loadMem_47691c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21283 = getelementptr inbounds %struct.GPR, %struct.GPR* %21282, i32 0, i32 33
  %21284 = getelementptr inbounds %struct.Reg, %struct.Reg* %21283, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %21284 to i64*
  %21285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21286 = getelementptr inbounds %struct.GPR, %struct.GPR* %21285, i32 0, i32 1
  %21287 = getelementptr inbounds %struct.Reg, %struct.Reg* %21286, i32 0, i32 0
  %RAX.i726 = bitcast %union.anon* %21287 to i64*
  %21288 = load i64, i64* %RAX.i726
  %21289 = load i64, i64* %PC.i725
  %21290 = add i64 %21289, 3
  store i64 %21290, i64* %PC.i725
  %21291 = trunc i64 %21288 to i32
  %21292 = add i32 20, %21291
  %21293 = zext i32 %21292 to i64
  store i64 %21293, i64* %RAX.i726, align 8
  %21294 = icmp ult i32 %21292, %21291
  %21295 = icmp ult i32 %21292, 20
  %21296 = or i1 %21294, %21295
  %21297 = zext i1 %21296 to i8
  %21298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21297, i8* %21298, align 1
  %21299 = and i32 %21292, 255
  %21300 = call i32 @llvm.ctpop.i32(i32 %21299)
  %21301 = trunc i32 %21300 to i8
  %21302 = and i8 %21301, 1
  %21303 = xor i8 %21302, 1
  %21304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21303, i8* %21304, align 1
  %21305 = xor i64 20, %21288
  %21306 = trunc i64 %21305 to i32
  %21307 = xor i32 %21306, %21292
  %21308 = lshr i32 %21307, 4
  %21309 = trunc i32 %21308 to i8
  %21310 = and i8 %21309, 1
  %21311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21310, i8* %21311, align 1
  %21312 = icmp eq i32 %21292, 0
  %21313 = zext i1 %21312 to i8
  %21314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21313, i8* %21314, align 1
  %21315 = lshr i32 %21292, 31
  %21316 = trunc i32 %21315 to i8
  %21317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21316, i8* %21317, align 1
  %21318 = lshr i32 %21291, 31
  %21319 = xor i32 %21315, %21318
  %21320 = add i32 %21319, %21315
  %21321 = icmp eq i32 %21320, 2
  %21322 = zext i1 %21321 to i8
  %21323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21322, i8* %21323, align 1
  store %struct.Memory* %loadMem_47691c, %struct.Memory** %MEMORY
  %loadMem_47691f = load %struct.Memory*, %struct.Memory** %MEMORY
  %21324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21325 = getelementptr inbounds %struct.GPR, %struct.GPR* %21324, i32 0, i32 33
  %21326 = getelementptr inbounds %struct.Reg, %struct.Reg* %21325, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %21326 to i64*
  %21327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21328 = getelementptr inbounds %struct.GPR, %struct.GPR* %21327, i32 0, i32 1
  %21329 = getelementptr inbounds %struct.Reg, %struct.Reg* %21328, i32 0, i32 0
  %RAX.i724 = bitcast %union.anon* %21329 to i64*
  %21330 = load i64, i64* %RAX.i724
  %21331 = load i64, i64* %PC.i723
  %21332 = add i64 %21331, 3
  store i64 %21332, i64* %PC.i723
  %21333 = trunc i64 %21330 to i32
  %21334 = add i32 1, %21333
  %21335 = zext i32 %21334 to i64
  store i64 %21335, i64* %RAX.i724, align 8
  %21336 = icmp ult i32 %21334, %21333
  %21337 = icmp ult i32 %21334, 1
  %21338 = or i1 %21336, %21337
  %21339 = zext i1 %21338 to i8
  %21340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21339, i8* %21340, align 1
  %21341 = and i32 %21334, 255
  %21342 = call i32 @llvm.ctpop.i32(i32 %21341)
  %21343 = trunc i32 %21342 to i8
  %21344 = and i8 %21343, 1
  %21345 = xor i8 %21344, 1
  %21346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21345, i8* %21346, align 1
  %21347 = xor i64 1, %21330
  %21348 = trunc i64 %21347 to i32
  %21349 = xor i32 %21348, %21334
  %21350 = lshr i32 %21349, 4
  %21351 = trunc i32 %21350 to i8
  %21352 = and i8 %21351, 1
  %21353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21352, i8* %21353, align 1
  %21354 = icmp eq i32 %21334, 0
  %21355 = zext i1 %21354 to i8
  %21356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21355, i8* %21356, align 1
  %21357 = lshr i32 %21334, 31
  %21358 = trunc i32 %21357 to i8
  %21359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21358, i8* %21359, align 1
  %21360 = lshr i32 %21333, 31
  %21361 = xor i32 %21357, %21360
  %21362 = add i32 %21361, %21357
  %21363 = icmp eq i32 %21362, 2
  %21364 = zext i1 %21363 to i8
  %21365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21364, i8* %21365, align 1
  store %struct.Memory* %loadMem_47691f, %struct.Memory** %MEMORY
  %loadMem_476922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21367 = getelementptr inbounds %struct.GPR, %struct.GPR* %21366, i32 0, i32 33
  %21368 = getelementptr inbounds %struct.Reg, %struct.Reg* %21367, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %21368 to i64*
  %21369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21370 = getelementptr inbounds %struct.GPR, %struct.GPR* %21369, i32 0, i32 1
  %21371 = getelementptr inbounds %struct.Reg, %struct.Reg* %21370, i32 0, i32 0
  %EAX.i721 = bitcast %union.anon* %21371 to i32*
  %21372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21373 = getelementptr inbounds %struct.GPR, %struct.GPR* %21372, i32 0, i32 5
  %21374 = getelementptr inbounds %struct.Reg, %struct.Reg* %21373, i32 0, i32 0
  %RCX.i722 = bitcast %union.anon* %21374 to i64*
  %21375 = load i32, i32* %EAX.i721
  %21376 = zext i32 %21375 to i64
  %21377 = load i64, i64* %PC.i720
  %21378 = add i64 %21377, 3
  store i64 %21378, i64* %PC.i720
  %21379 = shl i64 %21376, 32
  %21380 = ashr exact i64 %21379, 32
  store i64 %21380, i64* %RCX.i722, align 8
  store %struct.Memory* %loadMem_476922, %struct.Memory** %MEMORY
  %loadMem_476925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21382 = getelementptr inbounds %struct.GPR, %struct.GPR* %21381, i32 0, i32 33
  %21383 = getelementptr inbounds %struct.Reg, %struct.Reg* %21382, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %21383 to i64*
  %21384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21385 = getelementptr inbounds %struct.GPR, %struct.GPR* %21384, i32 0, i32 1
  %21386 = getelementptr inbounds %struct.Reg, %struct.Reg* %21385, i32 0, i32 0
  %RAX.i718 = bitcast %union.anon* %21386 to i64*
  %21387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21388 = getelementptr inbounds %struct.GPR, %struct.GPR* %21387, i32 0, i32 5
  %21389 = getelementptr inbounds %struct.Reg, %struct.Reg* %21388, i32 0, i32 0
  %RCX.i719 = bitcast %union.anon* %21389 to i64*
  %21390 = load i64, i64* %RCX.i719
  %21391 = add i64 %21390, 12099168
  %21392 = load i64, i64* %PC.i717
  %21393 = add i64 %21392, 8
  store i64 %21393, i64* %PC.i717
  %21394 = inttoptr i64 %21391 to i8*
  %21395 = load i8, i8* %21394
  %21396 = zext i8 %21395 to i64
  store i64 %21396, i64* %RAX.i718, align 8
  store %struct.Memory* %loadMem_476925, %struct.Memory** %MEMORY
  %loadMem_47692d = load %struct.Memory*, %struct.Memory** %MEMORY
  %21397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21398 = getelementptr inbounds %struct.GPR, %struct.GPR* %21397, i32 0, i32 33
  %21399 = getelementptr inbounds %struct.Reg, %struct.Reg* %21398, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %21399 to i64*
  %21400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21401 = getelementptr inbounds %struct.GPR, %struct.GPR* %21400, i32 0, i32 1
  %21402 = getelementptr inbounds %struct.Reg, %struct.Reg* %21401, i32 0, i32 0
  %EAX.i716 = bitcast %union.anon* %21402 to i32*
  %21403 = load i32, i32* %EAX.i716
  %21404 = zext i32 %21403 to i64
  %21405 = load i64, i64* %PC.i715
  %21406 = add i64 %21405, 3
  store i64 %21406, i64* %PC.i715
  %21407 = sub i32 %21403, 3
  %21408 = icmp ult i32 %21403, 3
  %21409 = zext i1 %21408 to i8
  %21410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21409, i8* %21410, align 1
  %21411 = and i32 %21407, 255
  %21412 = call i32 @llvm.ctpop.i32(i32 %21411)
  %21413 = trunc i32 %21412 to i8
  %21414 = and i8 %21413, 1
  %21415 = xor i8 %21414, 1
  %21416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21415, i8* %21416, align 1
  %21417 = xor i64 3, %21404
  %21418 = trunc i64 %21417 to i32
  %21419 = xor i32 %21418, %21407
  %21420 = lshr i32 %21419, 4
  %21421 = trunc i32 %21420 to i8
  %21422 = and i8 %21421, 1
  %21423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21422, i8* %21423, align 1
  %21424 = icmp eq i32 %21407, 0
  %21425 = zext i1 %21424 to i8
  %21426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21425, i8* %21426, align 1
  %21427 = lshr i32 %21407, 31
  %21428 = trunc i32 %21427 to i8
  %21429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21428, i8* %21429, align 1
  %21430 = lshr i32 %21403, 31
  %21431 = xor i32 %21427, %21430
  %21432 = add i32 %21431, %21430
  %21433 = icmp eq i32 %21432, 2
  %21434 = zext i1 %21433 to i8
  %21435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21434, i8* %21435, align 1
  store %struct.Memory* %loadMem_47692d, %struct.Memory** %MEMORY
  %loadMem_476930 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21437 = getelementptr inbounds %struct.GPR, %struct.GPR* %21436, i32 0, i32 33
  %21438 = getelementptr inbounds %struct.Reg, %struct.Reg* %21437, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %21438 to i64*
  %21439 = load i64, i64* %PC.i714
  %21440 = add i64 %21439, 99
  %21441 = load i64, i64* %PC.i714
  %21442 = add i64 %21441, 6
  %21443 = load i64, i64* %PC.i714
  %21444 = add i64 %21443, 6
  store i64 %21444, i64* %PC.i714
  %21445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21446 = load i8, i8* %21445, align 1
  store i8 %21446, i8* %BRANCH_TAKEN, align 1
  %21447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21448 = icmp ne i8 %21446, 0
  %21449 = select i1 %21448, i64 %21440, i64 %21442
  store i64 %21449, i64* %21447, align 8
  store %struct.Memory* %loadMem_476930, %struct.Memory** %MEMORY
  %loadBr_476930 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476930 = icmp eq i8 %loadBr_476930, 1
  br i1 %cmpBr_476930, label %block_.L_476993, label %block_476936

block_476936:                                     ; preds = %block_476919
  %loadMem_476936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21451 = getelementptr inbounds %struct.GPR, %struct.GPR* %21450, i32 0, i32 33
  %21452 = getelementptr inbounds %struct.Reg, %struct.Reg* %21451, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %21452 to i64*
  %21453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21454 = getelementptr inbounds %struct.GPR, %struct.GPR* %21453, i32 0, i32 1
  %21455 = getelementptr inbounds %struct.Reg, %struct.Reg* %21454, i32 0, i32 0
  %RAX.i712 = bitcast %union.anon* %21455 to i64*
  %21456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21457 = getelementptr inbounds %struct.GPR, %struct.GPR* %21456, i32 0, i32 15
  %21458 = getelementptr inbounds %struct.Reg, %struct.Reg* %21457, i32 0, i32 0
  %RBP.i713 = bitcast %union.anon* %21458 to i64*
  %21459 = load i64, i64* %RBP.i713
  %21460 = sub i64 %21459, 48
  %21461 = load i64, i64* %PC.i711
  %21462 = add i64 %21461, 3
  store i64 %21462, i64* %PC.i711
  %21463 = inttoptr i64 %21460 to i32*
  %21464 = load i32, i32* %21463
  %21465 = zext i32 %21464 to i64
  store i64 %21465, i64* %RAX.i712, align 8
  store %struct.Memory* %loadMem_476936, %struct.Memory** %MEMORY
  %loadMem_476939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21467 = getelementptr inbounds %struct.GPR, %struct.GPR* %21466, i32 0, i32 33
  %21468 = getelementptr inbounds %struct.Reg, %struct.Reg* %21467, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %21468 to i64*
  %21469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21470 = getelementptr inbounds %struct.GPR, %struct.GPR* %21469, i32 0, i32 1
  %21471 = getelementptr inbounds %struct.Reg, %struct.Reg* %21470, i32 0, i32 0
  %RAX.i710 = bitcast %union.anon* %21471 to i64*
  %21472 = load i64, i64* %RAX.i710
  %21473 = load i64, i64* %PC.i709
  %21474 = add i64 %21473, 3
  store i64 %21474, i64* %PC.i709
  %21475 = trunc i64 %21472 to i32
  %21476 = add i32 20, %21475
  %21477 = zext i32 %21476 to i64
  store i64 %21477, i64* %RAX.i710, align 8
  %21478 = icmp ult i32 %21476, %21475
  %21479 = icmp ult i32 %21476, 20
  %21480 = or i1 %21478, %21479
  %21481 = zext i1 %21480 to i8
  %21482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21481, i8* %21482, align 1
  %21483 = and i32 %21476, 255
  %21484 = call i32 @llvm.ctpop.i32(i32 %21483)
  %21485 = trunc i32 %21484 to i8
  %21486 = and i8 %21485, 1
  %21487 = xor i8 %21486, 1
  %21488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21487, i8* %21488, align 1
  %21489 = xor i64 20, %21472
  %21490 = trunc i64 %21489 to i32
  %21491 = xor i32 %21490, %21476
  %21492 = lshr i32 %21491, 4
  %21493 = trunc i32 %21492 to i8
  %21494 = and i8 %21493, 1
  %21495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21494, i8* %21495, align 1
  %21496 = icmp eq i32 %21476, 0
  %21497 = zext i1 %21496 to i8
  %21498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21497, i8* %21498, align 1
  %21499 = lshr i32 %21476, 31
  %21500 = trunc i32 %21499 to i8
  %21501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21500, i8* %21501, align 1
  %21502 = lshr i32 %21475, 31
  %21503 = xor i32 %21499, %21502
  %21504 = add i32 %21503, %21499
  %21505 = icmp eq i32 %21504, 2
  %21506 = zext i1 %21505 to i8
  %21507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21506, i8* %21507, align 1
  store %struct.Memory* %loadMem_476939, %struct.Memory** %MEMORY
  %loadMem_47693c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21509 = getelementptr inbounds %struct.GPR, %struct.GPR* %21508, i32 0, i32 33
  %21510 = getelementptr inbounds %struct.Reg, %struct.Reg* %21509, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %21510 to i64*
  %21511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21512 = getelementptr inbounds %struct.GPR, %struct.GPR* %21511, i32 0, i32 1
  %21513 = getelementptr inbounds %struct.Reg, %struct.Reg* %21512, i32 0, i32 0
  %RAX.i708 = bitcast %union.anon* %21513 to i64*
  %21514 = load i64, i64* %RAX.i708
  %21515 = load i64, i64* %PC.i707
  %21516 = add i64 %21515, 3
  store i64 %21516, i64* %PC.i707
  %21517 = trunc i64 %21514 to i32
  %21518 = add i32 1, %21517
  %21519 = zext i32 %21518 to i64
  store i64 %21519, i64* %RAX.i708, align 8
  %21520 = icmp ult i32 %21518, %21517
  %21521 = icmp ult i32 %21518, 1
  %21522 = or i1 %21520, %21521
  %21523 = zext i1 %21522 to i8
  %21524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21523, i8* %21524, align 1
  %21525 = and i32 %21518, 255
  %21526 = call i32 @llvm.ctpop.i32(i32 %21525)
  %21527 = trunc i32 %21526 to i8
  %21528 = and i8 %21527, 1
  %21529 = xor i8 %21528, 1
  %21530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21529, i8* %21530, align 1
  %21531 = xor i64 1, %21514
  %21532 = trunc i64 %21531 to i32
  %21533 = xor i32 %21532, %21518
  %21534 = lshr i32 %21533, 4
  %21535 = trunc i32 %21534 to i8
  %21536 = and i8 %21535, 1
  %21537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21536, i8* %21537, align 1
  %21538 = icmp eq i32 %21518, 0
  %21539 = zext i1 %21538 to i8
  %21540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21539, i8* %21540, align 1
  %21541 = lshr i32 %21518, 31
  %21542 = trunc i32 %21541 to i8
  %21543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21542, i8* %21543, align 1
  %21544 = lshr i32 %21517, 31
  %21545 = xor i32 %21541, %21544
  %21546 = add i32 %21545, %21541
  %21547 = icmp eq i32 %21546, 2
  %21548 = zext i1 %21547 to i8
  %21549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21548, i8* %21549, align 1
  store %struct.Memory* %loadMem_47693c, %struct.Memory** %MEMORY
  %loadMem_47693f = load %struct.Memory*, %struct.Memory** %MEMORY
  %21550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21551 = getelementptr inbounds %struct.GPR, %struct.GPR* %21550, i32 0, i32 33
  %21552 = getelementptr inbounds %struct.Reg, %struct.Reg* %21551, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %21552 to i64*
  %21553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21554 = getelementptr inbounds %struct.GPR, %struct.GPR* %21553, i32 0, i32 1
  %21555 = getelementptr inbounds %struct.Reg, %struct.Reg* %21554, i32 0, i32 0
  %EAX.i705 = bitcast %union.anon* %21555 to i32*
  %21556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21557 = getelementptr inbounds %struct.GPR, %struct.GPR* %21556, i32 0, i32 5
  %21558 = getelementptr inbounds %struct.Reg, %struct.Reg* %21557, i32 0, i32 0
  %RCX.i706 = bitcast %union.anon* %21558 to i64*
  %21559 = load i32, i32* %EAX.i705
  %21560 = zext i32 %21559 to i64
  %21561 = load i64, i64* %PC.i704
  %21562 = add i64 %21561, 3
  store i64 %21562, i64* %PC.i704
  %21563 = shl i64 %21560, 32
  %21564 = ashr exact i64 %21563, 32
  store i64 %21564, i64* %RCX.i706, align 8
  store %struct.Memory* %loadMem_47693f, %struct.Memory** %MEMORY
  %loadMem_476942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21566 = getelementptr inbounds %struct.GPR, %struct.GPR* %21565, i32 0, i32 33
  %21567 = getelementptr inbounds %struct.Reg, %struct.Reg* %21566, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %21567 to i64*
  %21568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21569 = getelementptr inbounds %struct.GPR, %struct.GPR* %21568, i32 0, i32 1
  %21570 = getelementptr inbounds %struct.Reg, %struct.Reg* %21569, i32 0, i32 0
  %RAX.i702 = bitcast %union.anon* %21570 to i64*
  %21571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21572 = getelementptr inbounds %struct.GPR, %struct.GPR* %21571, i32 0, i32 5
  %21573 = getelementptr inbounds %struct.Reg, %struct.Reg* %21572, i32 0, i32 0
  %RCX.i703 = bitcast %union.anon* %21573 to i64*
  %21574 = load i64, i64* %RCX.i703
  %21575 = add i64 %21574, 12099168
  %21576 = load i64, i64* %PC.i701
  %21577 = add i64 %21576, 8
  store i64 %21577, i64* %PC.i701
  %21578 = inttoptr i64 %21575 to i8*
  %21579 = load i8, i8* %21578
  %21580 = zext i8 %21579 to i64
  store i64 %21580, i64* %RAX.i702, align 8
  store %struct.Memory* %loadMem_476942, %struct.Memory** %MEMORY
  %loadMem_47694a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21582 = getelementptr inbounds %struct.GPR, %struct.GPR* %21581, i32 0, i32 33
  %21583 = getelementptr inbounds %struct.Reg, %struct.Reg* %21582, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %21583 to i64*
  %21584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21585 = getelementptr inbounds %struct.GPR, %struct.GPR* %21584, i32 0, i32 1
  %21586 = getelementptr inbounds %struct.Reg, %struct.Reg* %21585, i32 0, i32 0
  %EAX.i699 = bitcast %union.anon* %21586 to i32*
  %21587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21588 = getelementptr inbounds %struct.GPR, %struct.GPR* %21587, i32 0, i32 15
  %21589 = getelementptr inbounds %struct.Reg, %struct.Reg* %21588, i32 0, i32 0
  %RBP.i700 = bitcast %union.anon* %21589 to i64*
  %21590 = load i32, i32* %EAX.i699
  %21591 = zext i32 %21590 to i64
  %21592 = load i64, i64* %RBP.i700
  %21593 = sub i64 %21592, 232
  %21594 = load i64, i64* %PC.i698
  %21595 = add i64 %21594, 6
  store i64 %21595, i64* %PC.i698
  %21596 = inttoptr i64 %21593 to i32*
  %21597 = load i32, i32* %21596
  %21598 = sub i32 %21590, %21597
  %21599 = icmp ult i32 %21590, %21597
  %21600 = zext i1 %21599 to i8
  %21601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21600, i8* %21601, align 1
  %21602 = and i32 %21598, 255
  %21603 = call i32 @llvm.ctpop.i32(i32 %21602)
  %21604 = trunc i32 %21603 to i8
  %21605 = and i8 %21604, 1
  %21606 = xor i8 %21605, 1
  %21607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21606, i8* %21607, align 1
  %21608 = xor i32 %21597, %21590
  %21609 = xor i32 %21608, %21598
  %21610 = lshr i32 %21609, 4
  %21611 = trunc i32 %21610 to i8
  %21612 = and i8 %21611, 1
  %21613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21612, i8* %21613, align 1
  %21614 = icmp eq i32 %21598, 0
  %21615 = zext i1 %21614 to i8
  %21616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21615, i8* %21616, align 1
  %21617 = lshr i32 %21598, 31
  %21618 = trunc i32 %21617 to i8
  %21619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21618, i8* %21619, align 1
  %21620 = lshr i32 %21590, 31
  %21621 = lshr i32 %21597, 31
  %21622 = xor i32 %21621, %21620
  %21623 = xor i32 %21617, %21620
  %21624 = add i32 %21623, %21622
  %21625 = icmp eq i32 %21624, 2
  %21626 = zext i1 %21625 to i8
  %21627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21626, i8* %21627, align 1
  store %struct.Memory* %loadMem_47694a, %struct.Memory** %MEMORY
  %loadMem_476950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21629 = getelementptr inbounds %struct.GPR, %struct.GPR* %21628, i32 0, i32 33
  %21630 = getelementptr inbounds %struct.Reg, %struct.Reg* %21629, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %21630 to i64*
  %21631 = load i64, i64* %PC.i697
  %21632 = add i64 %21631, 67
  %21633 = load i64, i64* %PC.i697
  %21634 = add i64 %21633, 6
  %21635 = load i64, i64* %PC.i697
  %21636 = add i64 %21635, 6
  store i64 %21636, i64* %PC.i697
  %21637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21638 = load i8, i8* %21637, align 1
  store i8 %21638, i8* %BRANCH_TAKEN, align 1
  %21639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21640 = icmp ne i8 %21638, 0
  %21641 = select i1 %21640, i64 %21632, i64 %21634
  store i64 %21641, i64* %21639, align 8
  store %struct.Memory* %loadMem_476950, %struct.Memory** %MEMORY
  %loadBr_476950 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476950 = icmp eq i8 %loadBr_476950, 1
  br i1 %cmpBr_476950, label %block_.L_476993, label %block_476956

block_476956:                                     ; preds = %block_476936
  %loadMem_476956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21643 = getelementptr inbounds %struct.GPR, %struct.GPR* %21642, i32 0, i32 33
  %21644 = getelementptr inbounds %struct.Reg, %struct.Reg* %21643, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %21644 to i64*
  %21645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21646 = getelementptr inbounds %struct.GPR, %struct.GPR* %21645, i32 0, i32 1
  %21647 = getelementptr inbounds %struct.Reg, %struct.Reg* %21646, i32 0, i32 0
  %RAX.i695 = bitcast %union.anon* %21647 to i64*
  %21648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21649 = getelementptr inbounds %struct.GPR, %struct.GPR* %21648, i32 0, i32 15
  %21650 = getelementptr inbounds %struct.Reg, %struct.Reg* %21649, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %21650 to i64*
  %21651 = load i64, i64* %RBP.i696
  %21652 = sub i64 %21651, 48
  %21653 = load i64, i64* %PC.i694
  %21654 = add i64 %21653, 3
  store i64 %21654, i64* %PC.i694
  %21655 = inttoptr i64 %21652 to i32*
  %21656 = load i32, i32* %21655
  %21657 = zext i32 %21656 to i64
  store i64 %21657, i64* %RAX.i695, align 8
  store %struct.Memory* %loadMem_476956, %struct.Memory** %MEMORY
  %loadMem_476959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21659 = getelementptr inbounds %struct.GPR, %struct.GPR* %21658, i32 0, i32 33
  %21660 = getelementptr inbounds %struct.Reg, %struct.Reg* %21659, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %21660 to i64*
  %21661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21662 = getelementptr inbounds %struct.GPR, %struct.GPR* %21661, i32 0, i32 1
  %21663 = getelementptr inbounds %struct.Reg, %struct.Reg* %21662, i32 0, i32 0
  %RAX.i693 = bitcast %union.anon* %21663 to i64*
  %21664 = load i64, i64* %RAX.i693
  %21665 = load i64, i64* %PC.i692
  %21666 = add i64 %21665, 3
  store i64 %21666, i64* %PC.i692
  %21667 = trunc i64 %21664 to i32
  %21668 = add i32 20, %21667
  %21669 = zext i32 %21668 to i64
  store i64 %21669, i64* %RAX.i693, align 8
  %21670 = icmp ult i32 %21668, %21667
  %21671 = icmp ult i32 %21668, 20
  %21672 = or i1 %21670, %21671
  %21673 = zext i1 %21672 to i8
  %21674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21673, i8* %21674, align 1
  %21675 = and i32 %21668, 255
  %21676 = call i32 @llvm.ctpop.i32(i32 %21675)
  %21677 = trunc i32 %21676 to i8
  %21678 = and i8 %21677, 1
  %21679 = xor i8 %21678, 1
  %21680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21679, i8* %21680, align 1
  %21681 = xor i64 20, %21664
  %21682 = trunc i64 %21681 to i32
  %21683 = xor i32 %21682, %21668
  %21684 = lshr i32 %21683, 4
  %21685 = trunc i32 %21684 to i8
  %21686 = and i8 %21685, 1
  %21687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21686, i8* %21687, align 1
  %21688 = icmp eq i32 %21668, 0
  %21689 = zext i1 %21688 to i8
  %21690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21689, i8* %21690, align 1
  %21691 = lshr i32 %21668, 31
  %21692 = trunc i32 %21691 to i8
  %21693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21692, i8* %21693, align 1
  %21694 = lshr i32 %21667, 31
  %21695 = xor i32 %21691, %21694
  %21696 = add i32 %21695, %21691
  %21697 = icmp eq i32 %21696, 2
  %21698 = zext i1 %21697 to i8
  %21699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21698, i8* %21699, align 1
  store %struct.Memory* %loadMem_476959, %struct.Memory** %MEMORY
  %loadMem_47695c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21701 = getelementptr inbounds %struct.GPR, %struct.GPR* %21700, i32 0, i32 33
  %21702 = getelementptr inbounds %struct.Reg, %struct.Reg* %21701, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %21702 to i64*
  %21703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21704 = getelementptr inbounds %struct.GPR, %struct.GPR* %21703, i32 0, i32 1
  %21705 = getelementptr inbounds %struct.Reg, %struct.Reg* %21704, i32 0, i32 0
  %RAX.i691 = bitcast %union.anon* %21705 to i64*
  %21706 = load i64, i64* %RAX.i691
  %21707 = load i64, i64* %PC.i690
  %21708 = add i64 %21707, 3
  store i64 %21708, i64* %PC.i690
  %21709 = trunc i64 %21706 to i32
  %21710 = sub i32 %21709, 1
  %21711 = zext i32 %21710 to i64
  store i64 %21711, i64* %RAX.i691, align 8
  %21712 = icmp ult i32 %21709, 1
  %21713 = zext i1 %21712 to i8
  %21714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21713, i8* %21714, align 1
  %21715 = and i32 %21710, 255
  %21716 = call i32 @llvm.ctpop.i32(i32 %21715)
  %21717 = trunc i32 %21716 to i8
  %21718 = and i8 %21717, 1
  %21719 = xor i8 %21718, 1
  %21720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21719, i8* %21720, align 1
  %21721 = xor i64 1, %21706
  %21722 = trunc i64 %21721 to i32
  %21723 = xor i32 %21722, %21710
  %21724 = lshr i32 %21723, 4
  %21725 = trunc i32 %21724 to i8
  %21726 = and i8 %21725, 1
  %21727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21726, i8* %21727, align 1
  %21728 = icmp eq i32 %21710, 0
  %21729 = zext i1 %21728 to i8
  %21730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21729, i8* %21730, align 1
  %21731 = lshr i32 %21710, 31
  %21732 = trunc i32 %21731 to i8
  %21733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21732, i8* %21733, align 1
  %21734 = lshr i32 %21709, 31
  %21735 = xor i32 %21731, %21734
  %21736 = add i32 %21735, %21734
  %21737 = icmp eq i32 %21736, 2
  %21738 = zext i1 %21737 to i8
  %21739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21738, i8* %21739, align 1
  store %struct.Memory* %loadMem_47695c, %struct.Memory** %MEMORY
  %loadMem_47695f = load %struct.Memory*, %struct.Memory** %MEMORY
  %21740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21741 = getelementptr inbounds %struct.GPR, %struct.GPR* %21740, i32 0, i32 33
  %21742 = getelementptr inbounds %struct.Reg, %struct.Reg* %21741, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %21742 to i64*
  %21743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21744 = getelementptr inbounds %struct.GPR, %struct.GPR* %21743, i32 0, i32 1
  %21745 = getelementptr inbounds %struct.Reg, %struct.Reg* %21744, i32 0, i32 0
  %EAX.i688 = bitcast %union.anon* %21745 to i32*
  %21746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21747 = getelementptr inbounds %struct.GPR, %struct.GPR* %21746, i32 0, i32 5
  %21748 = getelementptr inbounds %struct.Reg, %struct.Reg* %21747, i32 0, i32 0
  %RCX.i689 = bitcast %union.anon* %21748 to i64*
  %21749 = load i32, i32* %EAX.i688
  %21750 = zext i32 %21749 to i64
  %21751 = load i64, i64* %PC.i687
  %21752 = add i64 %21751, 3
  store i64 %21752, i64* %PC.i687
  %21753 = shl i64 %21750, 32
  %21754 = ashr exact i64 %21753, 32
  store i64 %21754, i64* %RCX.i689, align 8
  store %struct.Memory* %loadMem_47695f, %struct.Memory** %MEMORY
  %loadMem_476962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21756 = getelementptr inbounds %struct.GPR, %struct.GPR* %21755, i32 0, i32 33
  %21757 = getelementptr inbounds %struct.Reg, %struct.Reg* %21756, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %21757 to i64*
  %21758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21759 = getelementptr inbounds %struct.GPR, %struct.GPR* %21758, i32 0, i32 1
  %21760 = getelementptr inbounds %struct.Reg, %struct.Reg* %21759, i32 0, i32 0
  %RAX.i685 = bitcast %union.anon* %21760 to i64*
  %21761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21762 = getelementptr inbounds %struct.GPR, %struct.GPR* %21761, i32 0, i32 5
  %21763 = getelementptr inbounds %struct.Reg, %struct.Reg* %21762, i32 0, i32 0
  %RCX.i686 = bitcast %union.anon* %21763 to i64*
  %21764 = load i64, i64* %RCX.i686
  %21765 = add i64 %21764, 12099168
  %21766 = load i64, i64* %PC.i684
  %21767 = add i64 %21766, 8
  store i64 %21767, i64* %PC.i684
  %21768 = inttoptr i64 %21765 to i8*
  %21769 = load i8, i8* %21768
  %21770 = zext i8 %21769 to i64
  store i64 %21770, i64* %RAX.i685, align 8
  store %struct.Memory* %loadMem_476962, %struct.Memory** %MEMORY
  %loadMem_47696a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21772 = getelementptr inbounds %struct.GPR, %struct.GPR* %21771, i32 0, i32 33
  %21773 = getelementptr inbounds %struct.Reg, %struct.Reg* %21772, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %21773 to i64*
  %21774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21775 = getelementptr inbounds %struct.GPR, %struct.GPR* %21774, i32 0, i32 1
  %21776 = getelementptr inbounds %struct.Reg, %struct.Reg* %21775, i32 0, i32 0
  %EAX.i683 = bitcast %union.anon* %21776 to i32*
  %21777 = load i32, i32* %EAX.i683
  %21778 = zext i32 %21777 to i64
  %21779 = load i64, i64* %PC.i682
  %21780 = add i64 %21779, 3
  store i64 %21780, i64* %PC.i682
  %21781 = sub i32 %21777, 3
  %21782 = icmp ult i32 %21777, 3
  %21783 = zext i1 %21782 to i8
  %21784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21783, i8* %21784, align 1
  %21785 = and i32 %21781, 255
  %21786 = call i32 @llvm.ctpop.i32(i32 %21785)
  %21787 = trunc i32 %21786 to i8
  %21788 = and i8 %21787, 1
  %21789 = xor i8 %21788, 1
  %21790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21789, i8* %21790, align 1
  %21791 = xor i64 3, %21778
  %21792 = trunc i64 %21791 to i32
  %21793 = xor i32 %21792, %21781
  %21794 = lshr i32 %21793, 4
  %21795 = trunc i32 %21794 to i8
  %21796 = and i8 %21795, 1
  %21797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21796, i8* %21797, align 1
  %21798 = icmp eq i32 %21781, 0
  %21799 = zext i1 %21798 to i8
  %21800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21799, i8* %21800, align 1
  %21801 = lshr i32 %21781, 31
  %21802 = trunc i32 %21801 to i8
  %21803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21802, i8* %21803, align 1
  %21804 = lshr i32 %21777, 31
  %21805 = xor i32 %21801, %21804
  %21806 = add i32 %21805, %21804
  %21807 = icmp eq i32 %21806, 2
  %21808 = zext i1 %21807 to i8
  %21809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21808, i8* %21809, align 1
  store %struct.Memory* %loadMem_47696a, %struct.Memory** %MEMORY
  %loadMem_47696d = load %struct.Memory*, %struct.Memory** %MEMORY
  %21810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21811 = getelementptr inbounds %struct.GPR, %struct.GPR* %21810, i32 0, i32 33
  %21812 = getelementptr inbounds %struct.Reg, %struct.Reg* %21811, i32 0, i32 0
  %PC.i681 = bitcast %union.anon* %21812 to i64*
  %21813 = load i64, i64* %PC.i681
  %21814 = add i64 %21813, 38
  %21815 = load i64, i64* %PC.i681
  %21816 = add i64 %21815, 6
  %21817 = load i64, i64* %PC.i681
  %21818 = add i64 %21817, 6
  store i64 %21818, i64* %PC.i681
  %21819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21820 = load i8, i8* %21819, align 1
  store i8 %21820, i8* %BRANCH_TAKEN, align 1
  %21821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21822 = icmp ne i8 %21820, 0
  %21823 = select i1 %21822, i64 %21814, i64 %21816
  store i64 %21823, i64* %21821, align 8
  store %struct.Memory* %loadMem_47696d, %struct.Memory** %MEMORY
  %loadBr_47696d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47696d = icmp eq i8 %loadBr_47696d, 1
  br i1 %cmpBr_47696d, label %block_.L_476993, label %block_476973

block_476973:                                     ; preds = %block_476956
  %loadMem_476973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21825 = getelementptr inbounds %struct.GPR, %struct.GPR* %21824, i32 0, i32 33
  %21826 = getelementptr inbounds %struct.Reg, %struct.Reg* %21825, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %21826 to i64*
  %21827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21828 = getelementptr inbounds %struct.GPR, %struct.GPR* %21827, i32 0, i32 1
  %21829 = getelementptr inbounds %struct.Reg, %struct.Reg* %21828, i32 0, i32 0
  %RAX.i679 = bitcast %union.anon* %21829 to i64*
  %21830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21831 = getelementptr inbounds %struct.GPR, %struct.GPR* %21830, i32 0, i32 15
  %21832 = getelementptr inbounds %struct.Reg, %struct.Reg* %21831, i32 0, i32 0
  %RBP.i680 = bitcast %union.anon* %21832 to i64*
  %21833 = load i64, i64* %RBP.i680
  %21834 = sub i64 %21833, 48
  %21835 = load i64, i64* %PC.i678
  %21836 = add i64 %21835, 3
  store i64 %21836, i64* %PC.i678
  %21837 = inttoptr i64 %21834 to i32*
  %21838 = load i32, i32* %21837
  %21839 = zext i32 %21838 to i64
  store i64 %21839, i64* %RAX.i679, align 8
  store %struct.Memory* %loadMem_476973, %struct.Memory** %MEMORY
  %loadMem_476976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21841 = getelementptr inbounds %struct.GPR, %struct.GPR* %21840, i32 0, i32 33
  %21842 = getelementptr inbounds %struct.Reg, %struct.Reg* %21841, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %21842 to i64*
  %21843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21844 = getelementptr inbounds %struct.GPR, %struct.GPR* %21843, i32 0, i32 1
  %21845 = getelementptr inbounds %struct.Reg, %struct.Reg* %21844, i32 0, i32 0
  %RAX.i677 = bitcast %union.anon* %21845 to i64*
  %21846 = load i64, i64* %RAX.i677
  %21847 = load i64, i64* %PC.i676
  %21848 = add i64 %21847, 3
  store i64 %21848, i64* %PC.i676
  %21849 = trunc i64 %21846 to i32
  %21850 = add i32 20, %21849
  %21851 = zext i32 %21850 to i64
  store i64 %21851, i64* %RAX.i677, align 8
  %21852 = icmp ult i32 %21850, %21849
  %21853 = icmp ult i32 %21850, 20
  %21854 = or i1 %21852, %21853
  %21855 = zext i1 %21854 to i8
  %21856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21855, i8* %21856, align 1
  %21857 = and i32 %21850, 255
  %21858 = call i32 @llvm.ctpop.i32(i32 %21857)
  %21859 = trunc i32 %21858 to i8
  %21860 = and i8 %21859, 1
  %21861 = xor i8 %21860, 1
  %21862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21861, i8* %21862, align 1
  %21863 = xor i64 20, %21846
  %21864 = trunc i64 %21863 to i32
  %21865 = xor i32 %21864, %21850
  %21866 = lshr i32 %21865, 4
  %21867 = trunc i32 %21866 to i8
  %21868 = and i8 %21867, 1
  %21869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21868, i8* %21869, align 1
  %21870 = icmp eq i32 %21850, 0
  %21871 = zext i1 %21870 to i8
  %21872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21871, i8* %21872, align 1
  %21873 = lshr i32 %21850, 31
  %21874 = trunc i32 %21873 to i8
  %21875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21874, i8* %21875, align 1
  %21876 = lshr i32 %21849, 31
  %21877 = xor i32 %21873, %21876
  %21878 = add i32 %21877, %21873
  %21879 = icmp eq i32 %21878, 2
  %21880 = zext i1 %21879 to i8
  %21881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21880, i8* %21881, align 1
  store %struct.Memory* %loadMem_476976, %struct.Memory** %MEMORY
  %loadMem_476979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21883 = getelementptr inbounds %struct.GPR, %struct.GPR* %21882, i32 0, i32 33
  %21884 = getelementptr inbounds %struct.Reg, %struct.Reg* %21883, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %21884 to i64*
  %21885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21886 = getelementptr inbounds %struct.GPR, %struct.GPR* %21885, i32 0, i32 1
  %21887 = getelementptr inbounds %struct.Reg, %struct.Reg* %21886, i32 0, i32 0
  %RAX.i675 = bitcast %union.anon* %21887 to i64*
  %21888 = load i64, i64* %RAX.i675
  %21889 = load i64, i64* %PC.i674
  %21890 = add i64 %21889, 3
  store i64 %21890, i64* %PC.i674
  %21891 = trunc i64 %21888 to i32
  %21892 = sub i32 %21891, 1
  %21893 = zext i32 %21892 to i64
  store i64 %21893, i64* %RAX.i675, align 8
  %21894 = icmp ult i32 %21891, 1
  %21895 = zext i1 %21894 to i8
  %21896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21895, i8* %21896, align 1
  %21897 = and i32 %21892, 255
  %21898 = call i32 @llvm.ctpop.i32(i32 %21897)
  %21899 = trunc i32 %21898 to i8
  %21900 = and i8 %21899, 1
  %21901 = xor i8 %21900, 1
  %21902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21901, i8* %21902, align 1
  %21903 = xor i64 1, %21888
  %21904 = trunc i64 %21903 to i32
  %21905 = xor i32 %21904, %21892
  %21906 = lshr i32 %21905, 4
  %21907 = trunc i32 %21906 to i8
  %21908 = and i8 %21907, 1
  %21909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21908, i8* %21909, align 1
  %21910 = icmp eq i32 %21892, 0
  %21911 = zext i1 %21910 to i8
  %21912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21911, i8* %21912, align 1
  %21913 = lshr i32 %21892, 31
  %21914 = trunc i32 %21913 to i8
  %21915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21914, i8* %21915, align 1
  %21916 = lshr i32 %21891, 31
  %21917 = xor i32 %21913, %21916
  %21918 = add i32 %21917, %21916
  %21919 = icmp eq i32 %21918, 2
  %21920 = zext i1 %21919 to i8
  %21921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21920, i8* %21921, align 1
  store %struct.Memory* %loadMem_476979, %struct.Memory** %MEMORY
  %loadMem_47697c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21923 = getelementptr inbounds %struct.GPR, %struct.GPR* %21922, i32 0, i32 33
  %21924 = getelementptr inbounds %struct.Reg, %struct.Reg* %21923, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %21924 to i64*
  %21925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21926 = getelementptr inbounds %struct.GPR, %struct.GPR* %21925, i32 0, i32 1
  %21927 = getelementptr inbounds %struct.Reg, %struct.Reg* %21926, i32 0, i32 0
  %EAX.i672 = bitcast %union.anon* %21927 to i32*
  %21928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21929 = getelementptr inbounds %struct.GPR, %struct.GPR* %21928, i32 0, i32 5
  %21930 = getelementptr inbounds %struct.Reg, %struct.Reg* %21929, i32 0, i32 0
  %RCX.i673 = bitcast %union.anon* %21930 to i64*
  %21931 = load i32, i32* %EAX.i672
  %21932 = zext i32 %21931 to i64
  %21933 = load i64, i64* %PC.i671
  %21934 = add i64 %21933, 3
  store i64 %21934, i64* %PC.i671
  %21935 = shl i64 %21932, 32
  %21936 = ashr exact i64 %21935, 32
  store i64 %21936, i64* %RCX.i673, align 8
  store %struct.Memory* %loadMem_47697c, %struct.Memory** %MEMORY
  %loadMem_47697f = load %struct.Memory*, %struct.Memory** %MEMORY
  %21937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21938 = getelementptr inbounds %struct.GPR, %struct.GPR* %21937, i32 0, i32 33
  %21939 = getelementptr inbounds %struct.Reg, %struct.Reg* %21938, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %21939 to i64*
  %21940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21941 = getelementptr inbounds %struct.GPR, %struct.GPR* %21940, i32 0, i32 1
  %21942 = getelementptr inbounds %struct.Reg, %struct.Reg* %21941, i32 0, i32 0
  %RAX.i669 = bitcast %union.anon* %21942 to i64*
  %21943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21944 = getelementptr inbounds %struct.GPR, %struct.GPR* %21943, i32 0, i32 5
  %21945 = getelementptr inbounds %struct.Reg, %struct.Reg* %21944, i32 0, i32 0
  %RCX.i670 = bitcast %union.anon* %21945 to i64*
  %21946 = load i64, i64* %RCX.i670
  %21947 = add i64 %21946, 12099168
  %21948 = load i64, i64* %PC.i668
  %21949 = add i64 %21948, 8
  store i64 %21949, i64* %PC.i668
  %21950 = inttoptr i64 %21947 to i8*
  %21951 = load i8, i8* %21950
  %21952 = zext i8 %21951 to i64
  store i64 %21952, i64* %RAX.i669, align 8
  store %struct.Memory* %loadMem_47697f, %struct.Memory** %MEMORY
  %loadMem_476987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21954 = getelementptr inbounds %struct.GPR, %struct.GPR* %21953, i32 0, i32 33
  %21955 = getelementptr inbounds %struct.Reg, %struct.Reg* %21954, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %21955 to i64*
  %21956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21957 = getelementptr inbounds %struct.GPR, %struct.GPR* %21956, i32 0, i32 1
  %21958 = getelementptr inbounds %struct.Reg, %struct.Reg* %21957, i32 0, i32 0
  %EAX.i666 = bitcast %union.anon* %21958 to i32*
  %21959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21960 = getelementptr inbounds %struct.GPR, %struct.GPR* %21959, i32 0, i32 15
  %21961 = getelementptr inbounds %struct.Reg, %struct.Reg* %21960, i32 0, i32 0
  %RBP.i667 = bitcast %union.anon* %21961 to i64*
  %21962 = load i32, i32* %EAX.i666
  %21963 = zext i32 %21962 to i64
  %21964 = load i64, i64* %RBP.i667
  %21965 = sub i64 %21964, 232
  %21966 = load i64, i64* %PC.i665
  %21967 = add i64 %21966, 6
  store i64 %21967, i64* %PC.i665
  %21968 = inttoptr i64 %21965 to i32*
  %21969 = load i32, i32* %21968
  %21970 = sub i32 %21962, %21969
  %21971 = icmp ult i32 %21962, %21969
  %21972 = zext i1 %21971 to i8
  %21973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21972, i8* %21973, align 1
  %21974 = and i32 %21970, 255
  %21975 = call i32 @llvm.ctpop.i32(i32 %21974)
  %21976 = trunc i32 %21975 to i8
  %21977 = and i8 %21976, 1
  %21978 = xor i8 %21977, 1
  %21979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21978, i8* %21979, align 1
  %21980 = xor i32 %21969, %21962
  %21981 = xor i32 %21980, %21970
  %21982 = lshr i32 %21981, 4
  %21983 = trunc i32 %21982 to i8
  %21984 = and i8 %21983, 1
  %21985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21984, i8* %21985, align 1
  %21986 = icmp eq i32 %21970, 0
  %21987 = zext i1 %21986 to i8
  %21988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21987, i8* %21988, align 1
  %21989 = lshr i32 %21970, 31
  %21990 = trunc i32 %21989 to i8
  %21991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21990, i8* %21991, align 1
  %21992 = lshr i32 %21962, 31
  %21993 = lshr i32 %21969, 31
  %21994 = xor i32 %21993, %21992
  %21995 = xor i32 %21989, %21992
  %21996 = add i32 %21995, %21994
  %21997 = icmp eq i32 %21996, 2
  %21998 = zext i1 %21997 to i8
  %21999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21998, i8* %21999, align 1
  store %struct.Memory* %loadMem_476987, %struct.Memory** %MEMORY
  %loadMem_47698d = load %struct.Memory*, %struct.Memory** %MEMORY
  %22000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22001 = getelementptr inbounds %struct.GPR, %struct.GPR* %22000, i32 0, i32 33
  %22002 = getelementptr inbounds %struct.Reg, %struct.Reg* %22001, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %22002 to i64*
  %22003 = load i64, i64* %PC.i664
  %22004 = add i64 %22003, 534
  %22005 = load i64, i64* %PC.i664
  %22006 = add i64 %22005, 6
  %22007 = load i64, i64* %PC.i664
  %22008 = add i64 %22007, 6
  store i64 %22008, i64* %PC.i664
  %22009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22010 = load i8, i8* %22009, align 1
  %22011 = icmp eq i8 %22010, 0
  %22012 = zext i1 %22011 to i8
  store i8 %22012, i8* %BRANCH_TAKEN, align 1
  %22013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22014 = select i1 %22011, i64 %22004, i64 %22006
  store i64 %22014, i64* %22013, align 8
  store %struct.Memory* %loadMem_47698d, %struct.Memory** %MEMORY
  %loadBr_47698d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47698d = icmp eq i8 %loadBr_47698d, 1
  br i1 %cmpBr_47698d, label %block_.L_476ba3, label %block_.L_476993

block_.L_476993:                                  ; preds = %block_476973, %block_476956, %block_476936, %block_476919, %block_4768fc, %block_4768dc, %block_4768bf, %block_4768a5, %block_.L_47688b
  %loadMem_476993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22016 = getelementptr inbounds %struct.GPR, %struct.GPR* %22015, i32 0, i32 33
  %22017 = getelementptr inbounds %struct.Reg, %struct.Reg* %22016, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %22017 to i64*
  %22018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22019 = getelementptr inbounds %struct.GPR, %struct.GPR* %22018, i32 0, i32 1
  %22020 = getelementptr inbounds %struct.Reg, %struct.Reg* %22019, i32 0, i32 0
  %RAX.i662 = bitcast %union.anon* %22020 to i64*
  %22021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22022 = getelementptr inbounds %struct.GPR, %struct.GPR* %22021, i32 0, i32 15
  %22023 = getelementptr inbounds %struct.Reg, %struct.Reg* %22022, i32 0, i32 0
  %RBP.i663 = bitcast %union.anon* %22023 to i64*
  %22024 = load i64, i64* %RBP.i663
  %22025 = sub i64 %22024, 48
  %22026 = load i64, i64* %PC.i661
  %22027 = add i64 %22026, 3
  store i64 %22027, i64* %PC.i661
  %22028 = inttoptr i64 %22025 to i32*
  %22029 = load i32, i32* %22028
  %22030 = zext i32 %22029 to i64
  store i64 %22030, i64* %RAX.i662, align 8
  store %struct.Memory* %loadMem_476993, %struct.Memory** %MEMORY
  %loadMem_476996 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22032 = getelementptr inbounds %struct.GPR, %struct.GPR* %22031, i32 0, i32 33
  %22033 = getelementptr inbounds %struct.Reg, %struct.Reg* %22032, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %22033 to i64*
  %22034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22035 = getelementptr inbounds %struct.GPR, %struct.GPR* %22034, i32 0, i32 1
  %22036 = getelementptr inbounds %struct.Reg, %struct.Reg* %22035, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %22036 to i64*
  %22037 = load i64, i64* %RAX.i660
  %22038 = load i64, i64* %PC.i659
  %22039 = add i64 %22038, 3
  store i64 %22039, i64* %PC.i659
  %22040 = trunc i64 %22037 to i32
  %22041 = add i32 1, %22040
  %22042 = zext i32 %22041 to i64
  store i64 %22042, i64* %RAX.i660, align 8
  %22043 = icmp ult i32 %22041, %22040
  %22044 = icmp ult i32 %22041, 1
  %22045 = or i1 %22043, %22044
  %22046 = zext i1 %22045 to i8
  %22047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22046, i8* %22047, align 1
  %22048 = and i32 %22041, 255
  %22049 = call i32 @llvm.ctpop.i32(i32 %22048)
  %22050 = trunc i32 %22049 to i8
  %22051 = and i8 %22050, 1
  %22052 = xor i8 %22051, 1
  %22053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22052, i8* %22053, align 1
  %22054 = xor i64 1, %22037
  %22055 = trunc i64 %22054 to i32
  %22056 = xor i32 %22055, %22041
  %22057 = lshr i32 %22056, 4
  %22058 = trunc i32 %22057 to i8
  %22059 = and i8 %22058, 1
  %22060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22059, i8* %22060, align 1
  %22061 = icmp eq i32 %22041, 0
  %22062 = zext i1 %22061 to i8
  %22063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22062, i8* %22063, align 1
  %22064 = lshr i32 %22041, 31
  %22065 = trunc i32 %22064 to i8
  %22066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22065, i8* %22066, align 1
  %22067 = lshr i32 %22040, 31
  %22068 = xor i32 %22064, %22067
  %22069 = add i32 %22068, %22064
  %22070 = icmp eq i32 %22069, 2
  %22071 = zext i1 %22070 to i8
  %22072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22071, i8* %22072, align 1
  store %struct.Memory* %loadMem_476996, %struct.Memory** %MEMORY
  %loadMem_476999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22074 = getelementptr inbounds %struct.GPR, %struct.GPR* %22073, i32 0, i32 33
  %22075 = getelementptr inbounds %struct.Reg, %struct.Reg* %22074, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %22075 to i64*
  %22076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22077 = getelementptr inbounds %struct.GPR, %struct.GPR* %22076, i32 0, i32 1
  %22078 = getelementptr inbounds %struct.Reg, %struct.Reg* %22077, i32 0, i32 0
  %EAX.i657 = bitcast %union.anon* %22078 to i32*
  %22079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22080 = getelementptr inbounds %struct.GPR, %struct.GPR* %22079, i32 0, i32 5
  %22081 = getelementptr inbounds %struct.Reg, %struct.Reg* %22080, i32 0, i32 0
  %RCX.i658 = bitcast %union.anon* %22081 to i64*
  %22082 = load i32, i32* %EAX.i657
  %22083 = zext i32 %22082 to i64
  %22084 = load i64, i64* %PC.i656
  %22085 = add i64 %22084, 3
  store i64 %22085, i64* %PC.i656
  %22086 = shl i64 %22083, 32
  %22087 = ashr exact i64 %22086, 32
  store i64 %22087, i64* %RCX.i658, align 8
  store %struct.Memory* %loadMem_476999, %struct.Memory** %MEMORY
  %loadMem_47699c = load %struct.Memory*, %struct.Memory** %MEMORY
  %22088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22089 = getelementptr inbounds %struct.GPR, %struct.GPR* %22088, i32 0, i32 33
  %22090 = getelementptr inbounds %struct.Reg, %struct.Reg* %22089, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %22090 to i64*
  %22091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22092 = getelementptr inbounds %struct.GPR, %struct.GPR* %22091, i32 0, i32 1
  %22093 = getelementptr inbounds %struct.Reg, %struct.Reg* %22092, i32 0, i32 0
  %RAX.i654 = bitcast %union.anon* %22093 to i64*
  %22094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22095 = getelementptr inbounds %struct.GPR, %struct.GPR* %22094, i32 0, i32 5
  %22096 = getelementptr inbounds %struct.Reg, %struct.Reg* %22095, i32 0, i32 0
  %RCX.i655 = bitcast %union.anon* %22096 to i64*
  %22097 = load i64, i64* %RCX.i655
  %22098 = add i64 %22097, 12099168
  %22099 = load i64, i64* %PC.i653
  %22100 = add i64 %22099, 8
  store i64 %22100, i64* %PC.i653
  %22101 = inttoptr i64 %22098 to i8*
  %22102 = load i8, i8* %22101
  %22103 = zext i8 %22102 to i64
  store i64 %22103, i64* %RAX.i654, align 8
  store %struct.Memory* %loadMem_47699c, %struct.Memory** %MEMORY
  %loadMem_4769a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22105 = getelementptr inbounds %struct.GPR, %struct.GPR* %22104, i32 0, i32 33
  %22106 = getelementptr inbounds %struct.Reg, %struct.Reg* %22105, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %22106 to i64*
  %22107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22108 = getelementptr inbounds %struct.GPR, %struct.GPR* %22107, i32 0, i32 1
  %22109 = getelementptr inbounds %struct.Reg, %struct.Reg* %22108, i32 0, i32 0
  %EAX.i652 = bitcast %union.anon* %22109 to i32*
  %22110 = load i32, i32* %EAX.i652
  %22111 = zext i32 %22110 to i64
  %22112 = load i64, i64* %PC.i651
  %22113 = add i64 %22112, 3
  store i64 %22113, i64* %PC.i651
  %22114 = sub i32 %22110, 3
  %22115 = icmp ult i32 %22110, 3
  %22116 = zext i1 %22115 to i8
  %22117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22116, i8* %22117, align 1
  %22118 = and i32 %22114, 255
  %22119 = call i32 @llvm.ctpop.i32(i32 %22118)
  %22120 = trunc i32 %22119 to i8
  %22121 = and i8 %22120, 1
  %22122 = xor i8 %22121, 1
  %22123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22122, i8* %22123, align 1
  %22124 = xor i64 3, %22111
  %22125 = trunc i64 %22124 to i32
  %22126 = xor i32 %22125, %22114
  %22127 = lshr i32 %22126, 4
  %22128 = trunc i32 %22127 to i8
  %22129 = and i8 %22128, 1
  %22130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22129, i8* %22130, align 1
  %22131 = icmp eq i32 %22114, 0
  %22132 = zext i1 %22131 to i8
  %22133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22132, i8* %22133, align 1
  %22134 = lshr i32 %22114, 31
  %22135 = trunc i32 %22134 to i8
  %22136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22135, i8* %22136, align 1
  %22137 = lshr i32 %22110, 31
  %22138 = xor i32 %22134, %22137
  %22139 = add i32 %22138, %22137
  %22140 = icmp eq i32 %22139, 2
  %22141 = zext i1 %22140 to i8
  %22142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22141, i8* %22142, align 1
  store %struct.Memory* %loadMem_4769a4, %struct.Memory** %MEMORY
  %loadMem_4769a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22144 = getelementptr inbounds %struct.GPR, %struct.GPR* %22143, i32 0, i32 33
  %22145 = getelementptr inbounds %struct.Reg, %struct.Reg* %22144, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %22145 to i64*
  %22146 = load i64, i64* %PC.i650
  %22147 = add i64 %22146, 244
  %22148 = load i64, i64* %PC.i650
  %22149 = add i64 %22148, 6
  %22150 = load i64, i64* %PC.i650
  %22151 = add i64 %22150, 6
  store i64 %22151, i64* %PC.i650
  %22152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22153 = load i8, i8* %22152, align 1
  store i8 %22153, i8* %BRANCH_TAKEN, align 1
  %22154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22155 = icmp ne i8 %22153, 0
  %22156 = select i1 %22155, i64 %22147, i64 %22149
  store i64 %22156, i64* %22154, align 8
  store %struct.Memory* %loadMem_4769a7, %struct.Memory** %MEMORY
  %loadBr_4769a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4769a7 = icmp eq i8 %loadBr_4769a7, 1
  br i1 %cmpBr_4769a7, label %block_.L_476a9b, label %block_4769ad

block_4769ad:                                     ; preds = %block_.L_476993
  %loadMem_4769ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %22157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22158 = getelementptr inbounds %struct.GPR, %struct.GPR* %22157, i32 0, i32 33
  %22159 = getelementptr inbounds %struct.Reg, %struct.Reg* %22158, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %22159 to i64*
  %22160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22161 = getelementptr inbounds %struct.GPR, %struct.GPR* %22160, i32 0, i32 1
  %22162 = getelementptr inbounds %struct.Reg, %struct.Reg* %22161, i32 0, i32 0
  %RAX.i648 = bitcast %union.anon* %22162 to i64*
  %22163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22164 = getelementptr inbounds %struct.GPR, %struct.GPR* %22163, i32 0, i32 15
  %22165 = getelementptr inbounds %struct.Reg, %struct.Reg* %22164, i32 0, i32 0
  %RBP.i649 = bitcast %union.anon* %22165 to i64*
  %22166 = load i64, i64* %RBP.i649
  %22167 = sub i64 %22166, 48
  %22168 = load i64, i64* %PC.i647
  %22169 = add i64 %22168, 3
  store i64 %22169, i64* %PC.i647
  %22170 = inttoptr i64 %22167 to i32*
  %22171 = load i32, i32* %22170
  %22172 = zext i32 %22171 to i64
  store i64 %22172, i64* %RAX.i648, align 8
  store %struct.Memory* %loadMem_4769ad, %struct.Memory** %MEMORY
  %loadMem_4769b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22174 = getelementptr inbounds %struct.GPR, %struct.GPR* %22173, i32 0, i32 33
  %22175 = getelementptr inbounds %struct.Reg, %struct.Reg* %22174, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %22175 to i64*
  %22176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22177 = getelementptr inbounds %struct.GPR, %struct.GPR* %22176, i32 0, i32 1
  %22178 = getelementptr inbounds %struct.Reg, %struct.Reg* %22177, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %22178 to i64*
  %22179 = load i64, i64* %RAX.i646
  %22180 = load i64, i64* %PC.i645
  %22181 = add i64 %22180, 3
  store i64 %22181, i64* %PC.i645
  %22182 = trunc i64 %22179 to i32
  %22183 = add i32 1, %22182
  %22184 = zext i32 %22183 to i64
  store i64 %22184, i64* %RAX.i646, align 8
  %22185 = icmp ult i32 %22183, %22182
  %22186 = icmp ult i32 %22183, 1
  %22187 = or i1 %22185, %22186
  %22188 = zext i1 %22187 to i8
  %22189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22188, i8* %22189, align 1
  %22190 = and i32 %22183, 255
  %22191 = call i32 @llvm.ctpop.i32(i32 %22190)
  %22192 = trunc i32 %22191 to i8
  %22193 = and i8 %22192, 1
  %22194 = xor i8 %22193, 1
  %22195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22194, i8* %22195, align 1
  %22196 = xor i64 1, %22179
  %22197 = trunc i64 %22196 to i32
  %22198 = xor i32 %22197, %22183
  %22199 = lshr i32 %22198, 4
  %22200 = trunc i32 %22199 to i8
  %22201 = and i8 %22200, 1
  %22202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22201, i8* %22202, align 1
  %22203 = icmp eq i32 %22183, 0
  %22204 = zext i1 %22203 to i8
  %22205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22204, i8* %22205, align 1
  %22206 = lshr i32 %22183, 31
  %22207 = trunc i32 %22206 to i8
  %22208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22207, i8* %22208, align 1
  %22209 = lshr i32 %22182, 31
  %22210 = xor i32 %22206, %22209
  %22211 = add i32 %22210, %22206
  %22212 = icmp eq i32 %22211, 2
  %22213 = zext i1 %22212 to i8
  %22214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22213, i8* %22214, align 1
  store %struct.Memory* %loadMem_4769b0, %struct.Memory** %MEMORY
  %loadMem_4769b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22216 = getelementptr inbounds %struct.GPR, %struct.GPR* %22215, i32 0, i32 33
  %22217 = getelementptr inbounds %struct.Reg, %struct.Reg* %22216, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %22217 to i64*
  %22218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22219 = getelementptr inbounds %struct.GPR, %struct.GPR* %22218, i32 0, i32 1
  %22220 = getelementptr inbounds %struct.Reg, %struct.Reg* %22219, i32 0, i32 0
  %EAX.i643 = bitcast %union.anon* %22220 to i32*
  %22221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22222 = getelementptr inbounds %struct.GPR, %struct.GPR* %22221, i32 0, i32 5
  %22223 = getelementptr inbounds %struct.Reg, %struct.Reg* %22222, i32 0, i32 0
  %RCX.i644 = bitcast %union.anon* %22223 to i64*
  %22224 = load i32, i32* %EAX.i643
  %22225 = zext i32 %22224 to i64
  %22226 = load i64, i64* %PC.i642
  %22227 = add i64 %22226, 3
  store i64 %22227, i64* %PC.i642
  %22228 = shl i64 %22225, 32
  %22229 = ashr exact i64 %22228, 32
  store i64 %22229, i64* %RCX.i644, align 8
  store %struct.Memory* %loadMem_4769b3, %struct.Memory** %MEMORY
  %loadMem_4769b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22231 = getelementptr inbounds %struct.GPR, %struct.GPR* %22230, i32 0, i32 33
  %22232 = getelementptr inbounds %struct.Reg, %struct.Reg* %22231, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %22232 to i64*
  %22233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22234 = getelementptr inbounds %struct.GPR, %struct.GPR* %22233, i32 0, i32 1
  %22235 = getelementptr inbounds %struct.Reg, %struct.Reg* %22234, i32 0, i32 0
  %RAX.i640 = bitcast %union.anon* %22235 to i64*
  %22236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22237 = getelementptr inbounds %struct.GPR, %struct.GPR* %22236, i32 0, i32 5
  %22238 = getelementptr inbounds %struct.Reg, %struct.Reg* %22237, i32 0, i32 0
  %RCX.i641 = bitcast %union.anon* %22238 to i64*
  %22239 = load i64, i64* %RCX.i641
  %22240 = add i64 %22239, 12099168
  %22241 = load i64, i64* %PC.i639
  %22242 = add i64 %22241, 8
  store i64 %22242, i64* %PC.i639
  %22243 = inttoptr i64 %22240 to i8*
  %22244 = load i8, i8* %22243
  %22245 = zext i8 %22244 to i64
  store i64 %22245, i64* %RAX.i640, align 8
  store %struct.Memory* %loadMem_4769b6, %struct.Memory** %MEMORY
  %loadMem_4769be = load %struct.Memory*, %struct.Memory** %MEMORY
  %22246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22247 = getelementptr inbounds %struct.GPR, %struct.GPR* %22246, i32 0, i32 33
  %22248 = getelementptr inbounds %struct.Reg, %struct.Reg* %22247, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %22248 to i64*
  %22249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22250 = getelementptr inbounds %struct.GPR, %struct.GPR* %22249, i32 0, i32 1
  %22251 = getelementptr inbounds %struct.Reg, %struct.Reg* %22250, i32 0, i32 0
  %EAX.i638 = bitcast %union.anon* %22251 to i32*
  %22252 = load i32, i32* %EAX.i638
  %22253 = zext i32 %22252 to i64
  %22254 = load i64, i64* %PC.i637
  %22255 = add i64 %22254, 3
  store i64 %22255, i64* %PC.i637
  %22256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %22256, align 1
  %22257 = and i32 %22252, 255
  %22258 = call i32 @llvm.ctpop.i32(i32 %22257)
  %22259 = trunc i32 %22258 to i8
  %22260 = and i8 %22259, 1
  %22261 = xor i8 %22260, 1
  %22262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22261, i8* %22262, align 1
  %22263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22263, align 1
  %22264 = icmp eq i32 %22252, 0
  %22265 = zext i1 %22264 to i8
  %22266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22265, i8* %22266, align 1
  %22267 = lshr i32 %22252, 31
  %22268 = trunc i32 %22267 to i8
  %22269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22268, i8* %22269, align 1
  %22270 = lshr i32 %22252, 31
  %22271 = xor i32 %22267, %22270
  %22272 = add i32 %22271, %22270
  %22273 = icmp eq i32 %22272, 2
  %22274 = zext i1 %22273 to i8
  %22275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22274, i8* %22275, align 1
  store %struct.Memory* %loadMem_4769be, %struct.Memory** %MEMORY
  %loadMem_4769c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22277 = getelementptr inbounds %struct.GPR, %struct.GPR* %22276, i32 0, i32 33
  %22278 = getelementptr inbounds %struct.Reg, %struct.Reg* %22277, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %22278 to i64*
  %22279 = load i64, i64* %PC.i636
  %22280 = add i64 %22279, 218
  %22281 = load i64, i64* %PC.i636
  %22282 = add i64 %22281, 6
  %22283 = load i64, i64* %PC.i636
  %22284 = add i64 %22283, 6
  store i64 %22284, i64* %PC.i636
  %22285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22286 = load i8, i8* %22285, align 1
  %22287 = icmp eq i8 %22286, 0
  %22288 = zext i1 %22287 to i8
  store i8 %22288, i8* %BRANCH_TAKEN, align 1
  %22289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22290 = select i1 %22287, i64 %22280, i64 %22282
  store i64 %22290, i64* %22289, align 8
  store %struct.Memory* %loadMem_4769c1, %struct.Memory** %MEMORY
  %loadBr_4769c1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4769c1 = icmp eq i8 %loadBr_4769c1, 1
  br i1 %cmpBr_4769c1, label %block_.L_476a9b, label %block_4769c7

block_4769c7:                                     ; preds = %block_4769ad
  %loadMem_4769c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22292 = getelementptr inbounds %struct.GPR, %struct.GPR* %22291, i32 0, i32 33
  %22293 = getelementptr inbounds %struct.Reg, %struct.Reg* %22292, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %22293 to i64*
  %22294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22295 = getelementptr inbounds %struct.GPR, %struct.GPR* %22294, i32 0, i32 1
  %22296 = getelementptr inbounds %struct.Reg, %struct.Reg* %22295, i32 0, i32 0
  %RAX.i634 = bitcast %union.anon* %22296 to i64*
  %22297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22298 = getelementptr inbounds %struct.GPR, %struct.GPR* %22297, i32 0, i32 15
  %22299 = getelementptr inbounds %struct.Reg, %struct.Reg* %22298, i32 0, i32 0
  %RBP.i635 = bitcast %union.anon* %22299 to i64*
  %22300 = load i64, i64* %RBP.i635
  %22301 = sub i64 %22300, 48
  %22302 = load i64, i64* %PC.i633
  %22303 = add i64 %22302, 3
  store i64 %22303, i64* %PC.i633
  %22304 = inttoptr i64 %22301 to i32*
  %22305 = load i32, i32* %22304
  %22306 = zext i32 %22305 to i64
  store i64 %22306, i64* %RAX.i634, align 8
  store %struct.Memory* %loadMem_4769c7, %struct.Memory** %MEMORY
  %loadMem_4769ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %22307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22308 = getelementptr inbounds %struct.GPR, %struct.GPR* %22307, i32 0, i32 33
  %22309 = getelementptr inbounds %struct.Reg, %struct.Reg* %22308, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %22309 to i64*
  %22310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22311 = getelementptr inbounds %struct.GPR, %struct.GPR* %22310, i32 0, i32 1
  %22312 = getelementptr inbounds %struct.Reg, %struct.Reg* %22311, i32 0, i32 0
  %RAX.i632 = bitcast %union.anon* %22312 to i64*
  %22313 = load i64, i64* %RAX.i632
  %22314 = load i64, i64* %PC.i631
  %22315 = add i64 %22314, 3
  store i64 %22315, i64* %PC.i631
  %22316 = trunc i64 %22313 to i32
  %22317 = add i32 1, %22316
  %22318 = zext i32 %22317 to i64
  store i64 %22318, i64* %RAX.i632, align 8
  %22319 = icmp ult i32 %22317, %22316
  %22320 = icmp ult i32 %22317, 1
  %22321 = or i1 %22319, %22320
  %22322 = zext i1 %22321 to i8
  %22323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22322, i8* %22323, align 1
  %22324 = and i32 %22317, 255
  %22325 = call i32 @llvm.ctpop.i32(i32 %22324)
  %22326 = trunc i32 %22325 to i8
  %22327 = and i8 %22326, 1
  %22328 = xor i8 %22327, 1
  %22329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22328, i8* %22329, align 1
  %22330 = xor i64 1, %22313
  %22331 = trunc i64 %22330 to i32
  %22332 = xor i32 %22331, %22317
  %22333 = lshr i32 %22332, 4
  %22334 = trunc i32 %22333 to i8
  %22335 = and i8 %22334, 1
  %22336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22335, i8* %22336, align 1
  %22337 = icmp eq i32 %22317, 0
  %22338 = zext i1 %22337 to i8
  %22339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22338, i8* %22339, align 1
  %22340 = lshr i32 %22317, 31
  %22341 = trunc i32 %22340 to i8
  %22342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22341, i8* %22342, align 1
  %22343 = lshr i32 %22316, 31
  %22344 = xor i32 %22340, %22343
  %22345 = add i32 %22344, %22340
  %22346 = icmp eq i32 %22345, 2
  %22347 = zext i1 %22346 to i8
  %22348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22347, i8* %22348, align 1
  store %struct.Memory* %loadMem_4769ca, %struct.Memory** %MEMORY
  %loadMem_4769cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %22349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22350 = getelementptr inbounds %struct.GPR, %struct.GPR* %22349, i32 0, i32 33
  %22351 = getelementptr inbounds %struct.Reg, %struct.Reg* %22350, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %22351 to i64*
  %22352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22353 = getelementptr inbounds %struct.GPR, %struct.GPR* %22352, i32 0, i32 1
  %22354 = getelementptr inbounds %struct.Reg, %struct.Reg* %22353, i32 0, i32 0
  %RAX.i630 = bitcast %union.anon* %22354 to i64*
  %22355 = load i64, i64* %RAX.i630
  %22356 = load i64, i64* %PC.i629
  %22357 = add i64 %22356, 3
  store i64 %22357, i64* %PC.i629
  %22358 = trunc i64 %22355 to i32
  %22359 = add i32 1, %22358
  %22360 = zext i32 %22359 to i64
  store i64 %22360, i64* %RAX.i630, align 8
  %22361 = icmp ult i32 %22359, %22358
  %22362 = icmp ult i32 %22359, 1
  %22363 = or i1 %22361, %22362
  %22364 = zext i1 %22363 to i8
  %22365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22364, i8* %22365, align 1
  %22366 = and i32 %22359, 255
  %22367 = call i32 @llvm.ctpop.i32(i32 %22366)
  %22368 = trunc i32 %22367 to i8
  %22369 = and i8 %22368, 1
  %22370 = xor i8 %22369, 1
  %22371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22370, i8* %22371, align 1
  %22372 = xor i64 1, %22355
  %22373 = trunc i64 %22372 to i32
  %22374 = xor i32 %22373, %22359
  %22375 = lshr i32 %22374, 4
  %22376 = trunc i32 %22375 to i8
  %22377 = and i8 %22376, 1
  %22378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22377, i8* %22378, align 1
  %22379 = icmp eq i32 %22359, 0
  %22380 = zext i1 %22379 to i8
  %22381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22380, i8* %22381, align 1
  %22382 = lshr i32 %22359, 31
  %22383 = trunc i32 %22382 to i8
  %22384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22383, i8* %22384, align 1
  %22385 = lshr i32 %22358, 31
  %22386 = xor i32 %22382, %22385
  %22387 = add i32 %22386, %22382
  %22388 = icmp eq i32 %22387, 2
  %22389 = zext i1 %22388 to i8
  %22390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22389, i8* %22390, align 1
  store %struct.Memory* %loadMem_4769cd, %struct.Memory** %MEMORY
  %loadMem_4769d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22392 = getelementptr inbounds %struct.GPR, %struct.GPR* %22391, i32 0, i32 33
  %22393 = getelementptr inbounds %struct.Reg, %struct.Reg* %22392, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %22393 to i64*
  %22394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22395 = getelementptr inbounds %struct.GPR, %struct.GPR* %22394, i32 0, i32 1
  %22396 = getelementptr inbounds %struct.Reg, %struct.Reg* %22395, i32 0, i32 0
  %EAX.i627 = bitcast %union.anon* %22396 to i32*
  %22397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22398 = getelementptr inbounds %struct.GPR, %struct.GPR* %22397, i32 0, i32 5
  %22399 = getelementptr inbounds %struct.Reg, %struct.Reg* %22398, i32 0, i32 0
  %RCX.i628 = bitcast %union.anon* %22399 to i64*
  %22400 = load i32, i32* %EAX.i627
  %22401 = zext i32 %22400 to i64
  %22402 = load i64, i64* %PC.i626
  %22403 = add i64 %22402, 3
  store i64 %22403, i64* %PC.i626
  %22404 = shl i64 %22401, 32
  %22405 = ashr exact i64 %22404, 32
  store i64 %22405, i64* %RCX.i628, align 8
  store %struct.Memory* %loadMem_4769d0, %struct.Memory** %MEMORY
  %loadMem_4769d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22407 = getelementptr inbounds %struct.GPR, %struct.GPR* %22406, i32 0, i32 33
  %22408 = getelementptr inbounds %struct.Reg, %struct.Reg* %22407, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %22408 to i64*
  %22409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22410 = getelementptr inbounds %struct.GPR, %struct.GPR* %22409, i32 0, i32 1
  %22411 = getelementptr inbounds %struct.Reg, %struct.Reg* %22410, i32 0, i32 0
  %RAX.i624 = bitcast %union.anon* %22411 to i64*
  %22412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22413 = getelementptr inbounds %struct.GPR, %struct.GPR* %22412, i32 0, i32 5
  %22414 = getelementptr inbounds %struct.Reg, %struct.Reg* %22413, i32 0, i32 0
  %RCX.i625 = bitcast %union.anon* %22414 to i64*
  %22415 = load i64, i64* %RCX.i625
  %22416 = add i64 %22415, 12099168
  %22417 = load i64, i64* %PC.i623
  %22418 = add i64 %22417, 8
  store i64 %22418, i64* %PC.i623
  %22419 = inttoptr i64 %22416 to i8*
  %22420 = load i8, i8* %22419
  %22421 = zext i8 %22420 to i64
  store i64 %22421, i64* %RAX.i624, align 8
  store %struct.Memory* %loadMem_4769d3, %struct.Memory** %MEMORY
  %loadMem_4769db = load %struct.Memory*, %struct.Memory** %MEMORY
  %22422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22423 = getelementptr inbounds %struct.GPR, %struct.GPR* %22422, i32 0, i32 33
  %22424 = getelementptr inbounds %struct.Reg, %struct.Reg* %22423, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %22424 to i64*
  %22425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22426 = getelementptr inbounds %struct.GPR, %struct.GPR* %22425, i32 0, i32 1
  %22427 = getelementptr inbounds %struct.Reg, %struct.Reg* %22426, i32 0, i32 0
  %EAX.i622 = bitcast %union.anon* %22427 to i32*
  %22428 = load i32, i32* %EAX.i622
  %22429 = zext i32 %22428 to i64
  %22430 = load i64, i64* %PC.i621
  %22431 = add i64 %22430, 3
  store i64 %22431, i64* %PC.i621
  %22432 = sub i32 %22428, 3
  %22433 = icmp ult i32 %22428, 3
  %22434 = zext i1 %22433 to i8
  %22435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22434, i8* %22435, align 1
  %22436 = and i32 %22432, 255
  %22437 = call i32 @llvm.ctpop.i32(i32 %22436)
  %22438 = trunc i32 %22437 to i8
  %22439 = and i8 %22438, 1
  %22440 = xor i8 %22439, 1
  %22441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22440, i8* %22441, align 1
  %22442 = xor i64 3, %22429
  %22443 = trunc i64 %22442 to i32
  %22444 = xor i32 %22443, %22432
  %22445 = lshr i32 %22444, 4
  %22446 = trunc i32 %22445 to i8
  %22447 = and i8 %22446, 1
  %22448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22447, i8* %22448, align 1
  %22449 = icmp eq i32 %22432, 0
  %22450 = zext i1 %22449 to i8
  %22451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22450, i8* %22451, align 1
  %22452 = lshr i32 %22432, 31
  %22453 = trunc i32 %22452 to i8
  %22454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22453, i8* %22454, align 1
  %22455 = lshr i32 %22428, 31
  %22456 = xor i32 %22452, %22455
  %22457 = add i32 %22456, %22455
  %22458 = icmp eq i32 %22457, 2
  %22459 = zext i1 %22458 to i8
  %22460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22459, i8* %22460, align 1
  store %struct.Memory* %loadMem_4769db, %struct.Memory** %MEMORY
  %loadMem_4769de = load %struct.Memory*, %struct.Memory** %MEMORY
  %22461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22462 = getelementptr inbounds %struct.GPR, %struct.GPR* %22461, i32 0, i32 33
  %22463 = getelementptr inbounds %struct.Reg, %struct.Reg* %22462, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %22463 to i64*
  %22464 = load i64, i64* %PC.i620
  %22465 = add i64 %22464, 189
  %22466 = load i64, i64* %PC.i620
  %22467 = add i64 %22466, 6
  %22468 = load i64, i64* %PC.i620
  %22469 = add i64 %22468, 6
  store i64 %22469, i64* %PC.i620
  %22470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22471 = load i8, i8* %22470, align 1
  store i8 %22471, i8* %BRANCH_TAKEN, align 1
  %22472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22473 = icmp ne i8 %22471, 0
  %22474 = select i1 %22473, i64 %22465, i64 %22467
  store i64 %22474, i64* %22472, align 8
  store %struct.Memory* %loadMem_4769de, %struct.Memory** %MEMORY
  %loadBr_4769de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4769de = icmp eq i8 %loadBr_4769de, 1
  br i1 %cmpBr_4769de, label %block_.L_476a9b, label %block_4769e4

block_4769e4:                                     ; preds = %block_4769c7
  %loadMem_4769e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22476 = getelementptr inbounds %struct.GPR, %struct.GPR* %22475, i32 0, i32 33
  %22477 = getelementptr inbounds %struct.Reg, %struct.Reg* %22476, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %22477 to i64*
  %22478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22479 = getelementptr inbounds %struct.GPR, %struct.GPR* %22478, i32 0, i32 1
  %22480 = getelementptr inbounds %struct.Reg, %struct.Reg* %22479, i32 0, i32 0
  %RAX.i618 = bitcast %union.anon* %22480 to i64*
  %22481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22482 = getelementptr inbounds %struct.GPR, %struct.GPR* %22481, i32 0, i32 15
  %22483 = getelementptr inbounds %struct.Reg, %struct.Reg* %22482, i32 0, i32 0
  %RBP.i619 = bitcast %union.anon* %22483 to i64*
  %22484 = load i64, i64* %RBP.i619
  %22485 = sub i64 %22484, 48
  %22486 = load i64, i64* %PC.i617
  %22487 = add i64 %22486, 3
  store i64 %22487, i64* %PC.i617
  %22488 = inttoptr i64 %22485 to i32*
  %22489 = load i32, i32* %22488
  %22490 = zext i32 %22489 to i64
  store i64 %22490, i64* %RAX.i618, align 8
  store %struct.Memory* %loadMem_4769e4, %struct.Memory** %MEMORY
  %loadMem_4769e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22492 = getelementptr inbounds %struct.GPR, %struct.GPR* %22491, i32 0, i32 33
  %22493 = getelementptr inbounds %struct.Reg, %struct.Reg* %22492, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %22493 to i64*
  %22494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22495 = getelementptr inbounds %struct.GPR, %struct.GPR* %22494, i32 0, i32 1
  %22496 = getelementptr inbounds %struct.Reg, %struct.Reg* %22495, i32 0, i32 0
  %RAX.i616 = bitcast %union.anon* %22496 to i64*
  %22497 = load i64, i64* %RAX.i616
  %22498 = load i64, i64* %PC.i615
  %22499 = add i64 %22498, 3
  store i64 %22499, i64* %PC.i615
  %22500 = trunc i64 %22497 to i32
  %22501 = add i32 1, %22500
  %22502 = zext i32 %22501 to i64
  store i64 %22502, i64* %RAX.i616, align 8
  %22503 = icmp ult i32 %22501, %22500
  %22504 = icmp ult i32 %22501, 1
  %22505 = or i1 %22503, %22504
  %22506 = zext i1 %22505 to i8
  %22507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22506, i8* %22507, align 1
  %22508 = and i32 %22501, 255
  %22509 = call i32 @llvm.ctpop.i32(i32 %22508)
  %22510 = trunc i32 %22509 to i8
  %22511 = and i8 %22510, 1
  %22512 = xor i8 %22511, 1
  %22513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22512, i8* %22513, align 1
  %22514 = xor i64 1, %22497
  %22515 = trunc i64 %22514 to i32
  %22516 = xor i32 %22515, %22501
  %22517 = lshr i32 %22516, 4
  %22518 = trunc i32 %22517 to i8
  %22519 = and i8 %22518, 1
  %22520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22519, i8* %22520, align 1
  %22521 = icmp eq i32 %22501, 0
  %22522 = zext i1 %22521 to i8
  %22523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22522, i8* %22523, align 1
  %22524 = lshr i32 %22501, 31
  %22525 = trunc i32 %22524 to i8
  %22526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22525, i8* %22526, align 1
  %22527 = lshr i32 %22500, 31
  %22528 = xor i32 %22524, %22527
  %22529 = add i32 %22528, %22524
  %22530 = icmp eq i32 %22529, 2
  %22531 = zext i1 %22530 to i8
  %22532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22531, i8* %22532, align 1
  store %struct.Memory* %loadMem_4769e7, %struct.Memory** %MEMORY
  %loadMem_4769ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %22533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22534 = getelementptr inbounds %struct.GPR, %struct.GPR* %22533, i32 0, i32 33
  %22535 = getelementptr inbounds %struct.Reg, %struct.Reg* %22534, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %22535 to i64*
  %22536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22537 = getelementptr inbounds %struct.GPR, %struct.GPR* %22536, i32 0, i32 1
  %22538 = getelementptr inbounds %struct.Reg, %struct.Reg* %22537, i32 0, i32 0
  %RAX.i614 = bitcast %union.anon* %22538 to i64*
  %22539 = load i64, i64* %RAX.i614
  %22540 = load i64, i64* %PC.i613
  %22541 = add i64 %22540, 3
  store i64 %22541, i64* %PC.i613
  %22542 = trunc i64 %22539 to i32
  %22543 = add i32 1, %22542
  %22544 = zext i32 %22543 to i64
  store i64 %22544, i64* %RAX.i614, align 8
  %22545 = icmp ult i32 %22543, %22542
  %22546 = icmp ult i32 %22543, 1
  %22547 = or i1 %22545, %22546
  %22548 = zext i1 %22547 to i8
  %22549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22548, i8* %22549, align 1
  %22550 = and i32 %22543, 255
  %22551 = call i32 @llvm.ctpop.i32(i32 %22550)
  %22552 = trunc i32 %22551 to i8
  %22553 = and i8 %22552, 1
  %22554 = xor i8 %22553, 1
  %22555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22554, i8* %22555, align 1
  %22556 = xor i64 1, %22539
  %22557 = trunc i64 %22556 to i32
  %22558 = xor i32 %22557, %22543
  %22559 = lshr i32 %22558, 4
  %22560 = trunc i32 %22559 to i8
  %22561 = and i8 %22560, 1
  %22562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22561, i8* %22562, align 1
  %22563 = icmp eq i32 %22543, 0
  %22564 = zext i1 %22563 to i8
  %22565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22564, i8* %22565, align 1
  %22566 = lshr i32 %22543, 31
  %22567 = trunc i32 %22566 to i8
  %22568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22567, i8* %22568, align 1
  %22569 = lshr i32 %22542, 31
  %22570 = xor i32 %22566, %22569
  %22571 = add i32 %22570, %22566
  %22572 = icmp eq i32 %22571, 2
  %22573 = zext i1 %22572 to i8
  %22574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22573, i8* %22574, align 1
  store %struct.Memory* %loadMem_4769ea, %struct.Memory** %MEMORY
  %loadMem_4769ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %22575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22576 = getelementptr inbounds %struct.GPR, %struct.GPR* %22575, i32 0, i32 33
  %22577 = getelementptr inbounds %struct.Reg, %struct.Reg* %22576, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %22577 to i64*
  %22578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22579 = getelementptr inbounds %struct.GPR, %struct.GPR* %22578, i32 0, i32 1
  %22580 = getelementptr inbounds %struct.Reg, %struct.Reg* %22579, i32 0, i32 0
  %EAX.i611 = bitcast %union.anon* %22580 to i32*
  %22581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22582 = getelementptr inbounds %struct.GPR, %struct.GPR* %22581, i32 0, i32 5
  %22583 = getelementptr inbounds %struct.Reg, %struct.Reg* %22582, i32 0, i32 0
  %RCX.i612 = bitcast %union.anon* %22583 to i64*
  %22584 = load i32, i32* %EAX.i611
  %22585 = zext i32 %22584 to i64
  %22586 = load i64, i64* %PC.i610
  %22587 = add i64 %22586, 3
  store i64 %22587, i64* %PC.i610
  %22588 = shl i64 %22585, 32
  %22589 = ashr exact i64 %22588, 32
  store i64 %22589, i64* %RCX.i612, align 8
  store %struct.Memory* %loadMem_4769ed, %struct.Memory** %MEMORY
  %loadMem_4769f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22591 = getelementptr inbounds %struct.GPR, %struct.GPR* %22590, i32 0, i32 33
  %22592 = getelementptr inbounds %struct.Reg, %struct.Reg* %22591, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %22592 to i64*
  %22593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22594 = getelementptr inbounds %struct.GPR, %struct.GPR* %22593, i32 0, i32 1
  %22595 = getelementptr inbounds %struct.Reg, %struct.Reg* %22594, i32 0, i32 0
  %RAX.i608 = bitcast %union.anon* %22595 to i64*
  %22596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22597 = getelementptr inbounds %struct.GPR, %struct.GPR* %22596, i32 0, i32 5
  %22598 = getelementptr inbounds %struct.Reg, %struct.Reg* %22597, i32 0, i32 0
  %RCX.i609 = bitcast %union.anon* %22598 to i64*
  %22599 = load i64, i64* %RCX.i609
  %22600 = add i64 %22599, 12099168
  %22601 = load i64, i64* %PC.i607
  %22602 = add i64 %22601, 8
  store i64 %22602, i64* %PC.i607
  %22603 = inttoptr i64 %22600 to i8*
  %22604 = load i8, i8* %22603
  %22605 = zext i8 %22604 to i64
  store i64 %22605, i64* %RAX.i608, align 8
  store %struct.Memory* %loadMem_4769f0, %struct.Memory** %MEMORY
  %loadMem_4769f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22607 = getelementptr inbounds %struct.GPR, %struct.GPR* %22606, i32 0, i32 33
  %22608 = getelementptr inbounds %struct.Reg, %struct.Reg* %22607, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %22608 to i64*
  %22609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22610 = getelementptr inbounds %struct.GPR, %struct.GPR* %22609, i32 0, i32 1
  %22611 = getelementptr inbounds %struct.Reg, %struct.Reg* %22610, i32 0, i32 0
  %EAX.i605 = bitcast %union.anon* %22611 to i32*
  %22612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22613 = getelementptr inbounds %struct.GPR, %struct.GPR* %22612, i32 0, i32 15
  %22614 = getelementptr inbounds %struct.Reg, %struct.Reg* %22613, i32 0, i32 0
  %RBP.i606 = bitcast %union.anon* %22614 to i64*
  %22615 = load i32, i32* %EAX.i605
  %22616 = zext i32 %22615 to i64
  %22617 = load i64, i64* %RBP.i606
  %22618 = sub i64 %22617, 228
  %22619 = load i64, i64* %PC.i604
  %22620 = add i64 %22619, 6
  store i64 %22620, i64* %PC.i604
  %22621 = inttoptr i64 %22618 to i32*
  %22622 = load i32, i32* %22621
  %22623 = sub i32 %22615, %22622
  %22624 = icmp ult i32 %22615, %22622
  %22625 = zext i1 %22624 to i8
  %22626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22625, i8* %22626, align 1
  %22627 = and i32 %22623, 255
  %22628 = call i32 @llvm.ctpop.i32(i32 %22627)
  %22629 = trunc i32 %22628 to i8
  %22630 = and i8 %22629, 1
  %22631 = xor i8 %22630, 1
  %22632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22631, i8* %22632, align 1
  %22633 = xor i32 %22622, %22615
  %22634 = xor i32 %22633, %22623
  %22635 = lshr i32 %22634, 4
  %22636 = trunc i32 %22635 to i8
  %22637 = and i8 %22636, 1
  %22638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22637, i8* %22638, align 1
  %22639 = icmp eq i32 %22623, 0
  %22640 = zext i1 %22639 to i8
  %22641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22640, i8* %22641, align 1
  %22642 = lshr i32 %22623, 31
  %22643 = trunc i32 %22642 to i8
  %22644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22643, i8* %22644, align 1
  %22645 = lshr i32 %22615, 31
  %22646 = lshr i32 %22622, 31
  %22647 = xor i32 %22646, %22645
  %22648 = xor i32 %22642, %22645
  %22649 = add i32 %22648, %22647
  %22650 = icmp eq i32 %22649, 2
  %22651 = zext i1 %22650 to i8
  %22652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22651, i8* %22652, align 1
  store %struct.Memory* %loadMem_4769f8, %struct.Memory** %MEMORY
  %loadMem_4769fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %22653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22654 = getelementptr inbounds %struct.GPR, %struct.GPR* %22653, i32 0, i32 33
  %22655 = getelementptr inbounds %struct.Reg, %struct.Reg* %22654, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %22655 to i64*
  %22656 = load i64, i64* %PC.i603
  %22657 = add i64 %22656, 157
  %22658 = load i64, i64* %PC.i603
  %22659 = add i64 %22658, 6
  %22660 = load i64, i64* %PC.i603
  %22661 = add i64 %22660, 6
  store i64 %22661, i64* %PC.i603
  %22662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22663 = load i8, i8* %22662, align 1
  %22664 = icmp eq i8 %22663, 0
  %22665 = zext i1 %22664 to i8
  store i8 %22665, i8* %BRANCH_TAKEN, align 1
  %22666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22667 = select i1 %22664, i64 %22657, i64 %22659
  store i64 %22667, i64* %22666, align 8
  store %struct.Memory* %loadMem_4769fe, %struct.Memory** %MEMORY
  %loadBr_4769fe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4769fe = icmp eq i8 %loadBr_4769fe, 1
  br i1 %cmpBr_4769fe, label %block_.L_476a9b, label %block_476a04

block_476a04:                                     ; preds = %block_4769e4
  %loadMem_476a04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22669 = getelementptr inbounds %struct.GPR, %struct.GPR* %22668, i32 0, i32 33
  %22670 = getelementptr inbounds %struct.Reg, %struct.Reg* %22669, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %22670 to i64*
  %22671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22672 = getelementptr inbounds %struct.GPR, %struct.GPR* %22671, i32 0, i32 1
  %22673 = getelementptr inbounds %struct.Reg, %struct.Reg* %22672, i32 0, i32 0
  %RAX.i601 = bitcast %union.anon* %22673 to i64*
  %22674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22675 = getelementptr inbounds %struct.GPR, %struct.GPR* %22674, i32 0, i32 15
  %22676 = getelementptr inbounds %struct.Reg, %struct.Reg* %22675, i32 0, i32 0
  %RBP.i602 = bitcast %union.anon* %22676 to i64*
  %22677 = load i64, i64* %RBP.i602
  %22678 = sub i64 %22677, 48
  %22679 = load i64, i64* %PC.i600
  %22680 = add i64 %22679, 3
  store i64 %22680, i64* %PC.i600
  %22681 = inttoptr i64 %22678 to i32*
  %22682 = load i32, i32* %22681
  %22683 = zext i32 %22682 to i64
  store i64 %22683, i64* %RAX.i601, align 8
  store %struct.Memory* %loadMem_476a04, %struct.Memory** %MEMORY
  %loadMem_476a07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22685 = getelementptr inbounds %struct.GPR, %struct.GPR* %22684, i32 0, i32 33
  %22686 = getelementptr inbounds %struct.Reg, %struct.Reg* %22685, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %22686 to i64*
  %22687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22688 = getelementptr inbounds %struct.GPR, %struct.GPR* %22687, i32 0, i32 1
  %22689 = getelementptr inbounds %struct.Reg, %struct.Reg* %22688, i32 0, i32 0
  %RAX.i599 = bitcast %union.anon* %22689 to i64*
  %22690 = load i64, i64* %RAX.i599
  %22691 = load i64, i64* %PC.i598
  %22692 = add i64 %22691, 3
  store i64 %22692, i64* %PC.i598
  %22693 = trunc i64 %22690 to i32
  %22694 = add i32 1, %22693
  %22695 = zext i32 %22694 to i64
  store i64 %22695, i64* %RAX.i599, align 8
  %22696 = icmp ult i32 %22694, %22693
  %22697 = icmp ult i32 %22694, 1
  %22698 = or i1 %22696, %22697
  %22699 = zext i1 %22698 to i8
  %22700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22699, i8* %22700, align 1
  %22701 = and i32 %22694, 255
  %22702 = call i32 @llvm.ctpop.i32(i32 %22701)
  %22703 = trunc i32 %22702 to i8
  %22704 = and i8 %22703, 1
  %22705 = xor i8 %22704, 1
  %22706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22705, i8* %22706, align 1
  %22707 = xor i64 1, %22690
  %22708 = trunc i64 %22707 to i32
  %22709 = xor i32 %22708, %22694
  %22710 = lshr i32 %22709, 4
  %22711 = trunc i32 %22710 to i8
  %22712 = and i8 %22711, 1
  %22713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22712, i8* %22713, align 1
  %22714 = icmp eq i32 %22694, 0
  %22715 = zext i1 %22714 to i8
  %22716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22715, i8* %22716, align 1
  %22717 = lshr i32 %22694, 31
  %22718 = trunc i32 %22717 to i8
  %22719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22718, i8* %22719, align 1
  %22720 = lshr i32 %22693, 31
  %22721 = xor i32 %22717, %22720
  %22722 = add i32 %22721, %22717
  %22723 = icmp eq i32 %22722, 2
  %22724 = zext i1 %22723 to i8
  %22725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22724, i8* %22725, align 1
  store %struct.Memory* %loadMem_476a07, %struct.Memory** %MEMORY
  %loadMem_476a0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %22726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22727 = getelementptr inbounds %struct.GPR, %struct.GPR* %22726, i32 0, i32 33
  %22728 = getelementptr inbounds %struct.Reg, %struct.Reg* %22727, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %22728 to i64*
  %22729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22730 = getelementptr inbounds %struct.GPR, %struct.GPR* %22729, i32 0, i32 1
  %22731 = getelementptr inbounds %struct.Reg, %struct.Reg* %22730, i32 0, i32 0
  %RAX.i597 = bitcast %union.anon* %22731 to i64*
  %22732 = load i64, i64* %RAX.i597
  %22733 = load i64, i64* %PC.i596
  %22734 = add i64 %22733, 3
  store i64 %22734, i64* %PC.i596
  %22735 = trunc i64 %22732 to i32
  %22736 = add i32 1, %22735
  %22737 = zext i32 %22736 to i64
  store i64 %22737, i64* %RAX.i597, align 8
  %22738 = icmp ult i32 %22736, %22735
  %22739 = icmp ult i32 %22736, 1
  %22740 = or i1 %22738, %22739
  %22741 = zext i1 %22740 to i8
  %22742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22741, i8* %22742, align 1
  %22743 = and i32 %22736, 255
  %22744 = call i32 @llvm.ctpop.i32(i32 %22743)
  %22745 = trunc i32 %22744 to i8
  %22746 = and i8 %22745, 1
  %22747 = xor i8 %22746, 1
  %22748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22747, i8* %22748, align 1
  %22749 = xor i64 1, %22732
  %22750 = trunc i64 %22749 to i32
  %22751 = xor i32 %22750, %22736
  %22752 = lshr i32 %22751, 4
  %22753 = trunc i32 %22752 to i8
  %22754 = and i8 %22753, 1
  %22755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22754, i8* %22755, align 1
  %22756 = icmp eq i32 %22736, 0
  %22757 = zext i1 %22756 to i8
  %22758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22757, i8* %22758, align 1
  %22759 = lshr i32 %22736, 31
  %22760 = trunc i32 %22759 to i8
  %22761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22760, i8* %22761, align 1
  %22762 = lshr i32 %22735, 31
  %22763 = xor i32 %22759, %22762
  %22764 = add i32 %22763, %22759
  %22765 = icmp eq i32 %22764, 2
  %22766 = zext i1 %22765 to i8
  %22767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22766, i8* %22767, align 1
  store %struct.Memory* %loadMem_476a0a, %struct.Memory** %MEMORY
  %loadMem_476a0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %22768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22769 = getelementptr inbounds %struct.GPR, %struct.GPR* %22768, i32 0, i32 33
  %22770 = getelementptr inbounds %struct.Reg, %struct.Reg* %22769, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %22770 to i64*
  %22771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22772 = getelementptr inbounds %struct.GPR, %struct.GPR* %22771, i32 0, i32 1
  %22773 = getelementptr inbounds %struct.Reg, %struct.Reg* %22772, i32 0, i32 0
  %EAX.i594 = bitcast %union.anon* %22773 to i32*
  %22774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22775 = getelementptr inbounds %struct.GPR, %struct.GPR* %22774, i32 0, i32 5
  %22776 = getelementptr inbounds %struct.Reg, %struct.Reg* %22775, i32 0, i32 0
  %RCX.i595 = bitcast %union.anon* %22776 to i64*
  %22777 = load i32, i32* %EAX.i594
  %22778 = zext i32 %22777 to i64
  %22779 = load i64, i64* %PC.i593
  %22780 = add i64 %22779, 3
  store i64 %22780, i64* %PC.i593
  %22781 = shl i64 %22778, 32
  %22782 = ashr exact i64 %22781, 32
  store i64 %22782, i64* %RCX.i595, align 8
  store %struct.Memory* %loadMem_476a0d, %struct.Memory** %MEMORY
  %loadMem_476a10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22784 = getelementptr inbounds %struct.GPR, %struct.GPR* %22783, i32 0, i32 33
  %22785 = getelementptr inbounds %struct.Reg, %struct.Reg* %22784, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %22785 to i64*
  %22786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22787 = getelementptr inbounds %struct.GPR, %struct.GPR* %22786, i32 0, i32 1
  %22788 = getelementptr inbounds %struct.Reg, %struct.Reg* %22787, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %22788 to i64*
  %22789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22790 = getelementptr inbounds %struct.GPR, %struct.GPR* %22789, i32 0, i32 5
  %22791 = getelementptr inbounds %struct.Reg, %struct.Reg* %22790, i32 0, i32 0
  %RCX.i591 = bitcast %union.anon* %22791 to i64*
  %22792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22793 = getelementptr inbounds %struct.GPR, %struct.GPR* %22792, i32 0, i32 15
  %22794 = getelementptr inbounds %struct.Reg, %struct.Reg* %22793, i32 0, i32 0
  %RBP.i592 = bitcast %union.anon* %22794 to i64*
  %22795 = load i64, i64* %RBP.i592
  %22796 = load i64, i64* %RCX.i591
  %22797 = add i64 %22795, -1040
  %22798 = add i64 %22797, %22796
  %22799 = load i64, i64* %PC.i589
  %22800 = add i64 %22799, 8
  store i64 %22800, i64* %PC.i589
  %22801 = inttoptr i64 %22798 to i8*
  %22802 = load i8, i8* %22801
  %22803 = sext i8 %22802 to i64
  %22804 = and i64 %22803, 4294967295
  store i64 %22804, i64* %RAX.i590, align 8
  store %struct.Memory* %loadMem_476a10, %struct.Memory** %MEMORY
  %loadMem_476a18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22806 = getelementptr inbounds %struct.GPR, %struct.GPR* %22805, i32 0, i32 33
  %22807 = getelementptr inbounds %struct.Reg, %struct.Reg* %22806, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %22807 to i64*
  %22808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22809 = getelementptr inbounds %struct.GPR, %struct.GPR* %22808, i32 0, i32 1
  %22810 = getelementptr inbounds %struct.Reg, %struct.Reg* %22809, i32 0, i32 0
  %EAX.i588 = bitcast %union.anon* %22810 to i32*
  %22811 = load i32, i32* %EAX.i588
  %22812 = zext i32 %22811 to i64
  %22813 = load i64, i64* %PC.i587
  %22814 = add i64 %22813, 3
  store i64 %22814, i64* %PC.i587
  %22815 = sub i32 %22811, 1
  %22816 = icmp ult i32 %22811, 1
  %22817 = zext i1 %22816 to i8
  %22818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22817, i8* %22818, align 1
  %22819 = and i32 %22815, 255
  %22820 = call i32 @llvm.ctpop.i32(i32 %22819)
  %22821 = trunc i32 %22820 to i8
  %22822 = and i8 %22821, 1
  %22823 = xor i8 %22822, 1
  %22824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22823, i8* %22824, align 1
  %22825 = xor i64 1, %22812
  %22826 = trunc i64 %22825 to i32
  %22827 = xor i32 %22826, %22815
  %22828 = lshr i32 %22827, 4
  %22829 = trunc i32 %22828 to i8
  %22830 = and i8 %22829, 1
  %22831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22830, i8* %22831, align 1
  %22832 = icmp eq i32 %22815, 0
  %22833 = zext i1 %22832 to i8
  %22834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22833, i8* %22834, align 1
  %22835 = lshr i32 %22815, 31
  %22836 = trunc i32 %22835 to i8
  %22837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22836, i8* %22837, align 1
  %22838 = lshr i32 %22811, 31
  %22839 = xor i32 %22835, %22838
  %22840 = add i32 %22839, %22838
  %22841 = icmp eq i32 %22840, 2
  %22842 = zext i1 %22841 to i8
  %22843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22842, i8* %22843, align 1
  store %struct.Memory* %loadMem_476a18, %struct.Memory** %MEMORY
  %loadMem_476a1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %22844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22845 = getelementptr inbounds %struct.GPR, %struct.GPR* %22844, i32 0, i32 33
  %22846 = getelementptr inbounds %struct.Reg, %struct.Reg* %22845, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %22846 to i64*
  %22847 = load i64, i64* %PC.i586
  %22848 = add i64 %22847, 128
  %22849 = load i64, i64* %PC.i586
  %22850 = add i64 %22849, 6
  %22851 = load i64, i64* %PC.i586
  %22852 = add i64 %22851, 6
  store i64 %22852, i64* %PC.i586
  %22853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22854 = load i8, i8* %22853, align 1
  store i8 %22854, i8* %BRANCH_TAKEN, align 1
  %22855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22856 = icmp ne i8 %22854, 0
  %22857 = select i1 %22856, i64 %22848, i64 %22850
  store i64 %22857, i64* %22855, align 8
  store %struct.Memory* %loadMem_476a1b, %struct.Memory** %MEMORY
  %loadBr_476a1b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476a1b = icmp eq i8 %loadBr_476a1b, 1
  br i1 %cmpBr_476a1b, label %block_.L_476a9b, label %block_476a21

block_476a21:                                     ; preds = %block_476a04
  %loadMem_476a21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22859 = getelementptr inbounds %struct.GPR, %struct.GPR* %22858, i32 0, i32 33
  %22860 = getelementptr inbounds %struct.Reg, %struct.Reg* %22859, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %22860 to i64*
  %22861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22862 = getelementptr inbounds %struct.GPR, %struct.GPR* %22861, i32 0, i32 1
  %22863 = getelementptr inbounds %struct.Reg, %struct.Reg* %22862, i32 0, i32 0
  %RAX.i584 = bitcast %union.anon* %22863 to i64*
  %22864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22865 = getelementptr inbounds %struct.GPR, %struct.GPR* %22864, i32 0, i32 15
  %22866 = getelementptr inbounds %struct.Reg, %struct.Reg* %22865, i32 0, i32 0
  %RBP.i585 = bitcast %union.anon* %22866 to i64*
  %22867 = load i64, i64* %RBP.i585
  %22868 = sub i64 %22867, 48
  %22869 = load i64, i64* %PC.i583
  %22870 = add i64 %22869, 3
  store i64 %22870, i64* %PC.i583
  %22871 = inttoptr i64 %22868 to i32*
  %22872 = load i32, i32* %22871
  %22873 = zext i32 %22872 to i64
  store i64 %22873, i64* %RAX.i584, align 8
  store %struct.Memory* %loadMem_476a21, %struct.Memory** %MEMORY
  %loadMem_476a24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22875 = getelementptr inbounds %struct.GPR, %struct.GPR* %22874, i32 0, i32 33
  %22876 = getelementptr inbounds %struct.Reg, %struct.Reg* %22875, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %22876 to i64*
  %22877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22878 = getelementptr inbounds %struct.GPR, %struct.GPR* %22877, i32 0, i32 1
  %22879 = getelementptr inbounds %struct.Reg, %struct.Reg* %22878, i32 0, i32 0
  %RAX.i582 = bitcast %union.anon* %22879 to i64*
  %22880 = load i64, i64* %RAX.i582
  %22881 = load i64, i64* %PC.i581
  %22882 = add i64 %22881, 3
  store i64 %22882, i64* %PC.i581
  %22883 = trunc i64 %22880 to i32
  %22884 = add i32 1, %22883
  %22885 = zext i32 %22884 to i64
  store i64 %22885, i64* %RAX.i582, align 8
  %22886 = icmp ult i32 %22884, %22883
  %22887 = icmp ult i32 %22884, 1
  %22888 = or i1 %22886, %22887
  %22889 = zext i1 %22888 to i8
  %22890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22889, i8* %22890, align 1
  %22891 = and i32 %22884, 255
  %22892 = call i32 @llvm.ctpop.i32(i32 %22891)
  %22893 = trunc i32 %22892 to i8
  %22894 = and i8 %22893, 1
  %22895 = xor i8 %22894, 1
  %22896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22895, i8* %22896, align 1
  %22897 = xor i64 1, %22880
  %22898 = trunc i64 %22897 to i32
  %22899 = xor i32 %22898, %22884
  %22900 = lshr i32 %22899, 4
  %22901 = trunc i32 %22900 to i8
  %22902 = and i8 %22901, 1
  %22903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22902, i8* %22903, align 1
  %22904 = icmp eq i32 %22884, 0
  %22905 = zext i1 %22904 to i8
  %22906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22905, i8* %22906, align 1
  %22907 = lshr i32 %22884, 31
  %22908 = trunc i32 %22907 to i8
  %22909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22908, i8* %22909, align 1
  %22910 = lshr i32 %22883, 31
  %22911 = xor i32 %22907, %22910
  %22912 = add i32 %22911, %22907
  %22913 = icmp eq i32 %22912, 2
  %22914 = zext i1 %22913 to i8
  %22915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22914, i8* %22915, align 1
  store %struct.Memory* %loadMem_476a24, %struct.Memory** %MEMORY
  %loadMem_476a27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22917 = getelementptr inbounds %struct.GPR, %struct.GPR* %22916, i32 0, i32 33
  %22918 = getelementptr inbounds %struct.Reg, %struct.Reg* %22917, i32 0, i32 0
  %PC.i579 = bitcast %union.anon* %22918 to i64*
  %22919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22920 = getelementptr inbounds %struct.GPR, %struct.GPR* %22919, i32 0, i32 1
  %22921 = getelementptr inbounds %struct.Reg, %struct.Reg* %22920, i32 0, i32 0
  %RAX.i580 = bitcast %union.anon* %22921 to i64*
  %22922 = load i64, i64* %RAX.i580
  %22923 = load i64, i64* %PC.i579
  %22924 = add i64 %22923, 3
  store i64 %22924, i64* %PC.i579
  %22925 = trunc i64 %22922 to i32
  %22926 = sub i32 %22925, 20
  %22927 = zext i32 %22926 to i64
  store i64 %22927, i64* %RAX.i580, align 8
  %22928 = icmp ult i32 %22925, 20
  %22929 = zext i1 %22928 to i8
  %22930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22929, i8* %22930, align 1
  %22931 = and i32 %22926, 255
  %22932 = call i32 @llvm.ctpop.i32(i32 %22931)
  %22933 = trunc i32 %22932 to i8
  %22934 = and i8 %22933, 1
  %22935 = xor i8 %22934, 1
  %22936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22935, i8* %22936, align 1
  %22937 = xor i64 20, %22922
  %22938 = trunc i64 %22937 to i32
  %22939 = xor i32 %22938, %22926
  %22940 = lshr i32 %22939, 4
  %22941 = trunc i32 %22940 to i8
  %22942 = and i8 %22941, 1
  %22943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22942, i8* %22943, align 1
  %22944 = icmp eq i32 %22926, 0
  %22945 = zext i1 %22944 to i8
  %22946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22945, i8* %22946, align 1
  %22947 = lshr i32 %22926, 31
  %22948 = trunc i32 %22947 to i8
  %22949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22948, i8* %22949, align 1
  %22950 = lshr i32 %22925, 31
  %22951 = xor i32 %22947, %22950
  %22952 = add i32 %22951, %22950
  %22953 = icmp eq i32 %22952, 2
  %22954 = zext i1 %22953 to i8
  %22955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22954, i8* %22955, align 1
  store %struct.Memory* %loadMem_476a27, %struct.Memory** %MEMORY
  %loadMem_476a2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %22956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22957 = getelementptr inbounds %struct.GPR, %struct.GPR* %22956, i32 0, i32 33
  %22958 = getelementptr inbounds %struct.Reg, %struct.Reg* %22957, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %22958 to i64*
  %22959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22960 = getelementptr inbounds %struct.GPR, %struct.GPR* %22959, i32 0, i32 1
  %22961 = getelementptr inbounds %struct.Reg, %struct.Reg* %22960, i32 0, i32 0
  %EAX.i577 = bitcast %union.anon* %22961 to i32*
  %22962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22963 = getelementptr inbounds %struct.GPR, %struct.GPR* %22962, i32 0, i32 5
  %22964 = getelementptr inbounds %struct.Reg, %struct.Reg* %22963, i32 0, i32 0
  %RCX.i578 = bitcast %union.anon* %22964 to i64*
  %22965 = load i32, i32* %EAX.i577
  %22966 = zext i32 %22965 to i64
  %22967 = load i64, i64* %PC.i576
  %22968 = add i64 %22967, 3
  store i64 %22968, i64* %PC.i576
  %22969 = shl i64 %22966, 32
  %22970 = ashr exact i64 %22969, 32
  store i64 %22970, i64* %RCX.i578, align 8
  store %struct.Memory* %loadMem_476a2a, %struct.Memory** %MEMORY
  %loadMem_476a2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %22971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22972 = getelementptr inbounds %struct.GPR, %struct.GPR* %22971, i32 0, i32 33
  %22973 = getelementptr inbounds %struct.Reg, %struct.Reg* %22972, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %22973 to i64*
  %22974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22975 = getelementptr inbounds %struct.GPR, %struct.GPR* %22974, i32 0, i32 1
  %22976 = getelementptr inbounds %struct.Reg, %struct.Reg* %22975, i32 0, i32 0
  %RAX.i574 = bitcast %union.anon* %22976 to i64*
  %22977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22978 = getelementptr inbounds %struct.GPR, %struct.GPR* %22977, i32 0, i32 5
  %22979 = getelementptr inbounds %struct.Reg, %struct.Reg* %22978, i32 0, i32 0
  %RCX.i575 = bitcast %union.anon* %22979 to i64*
  %22980 = load i64, i64* %RCX.i575
  %22981 = add i64 %22980, 12099168
  %22982 = load i64, i64* %PC.i573
  %22983 = add i64 %22982, 8
  store i64 %22983, i64* %PC.i573
  %22984 = inttoptr i64 %22981 to i8*
  %22985 = load i8, i8* %22984
  %22986 = zext i8 %22985 to i64
  store i64 %22986, i64* %RAX.i574, align 8
  store %struct.Memory* %loadMem_476a2d, %struct.Memory** %MEMORY
  %loadMem_476a35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22988 = getelementptr inbounds %struct.GPR, %struct.GPR* %22987, i32 0, i32 33
  %22989 = getelementptr inbounds %struct.Reg, %struct.Reg* %22988, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %22989 to i64*
  %22990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22991 = getelementptr inbounds %struct.GPR, %struct.GPR* %22990, i32 0, i32 1
  %22992 = getelementptr inbounds %struct.Reg, %struct.Reg* %22991, i32 0, i32 0
  %EAX.i572 = bitcast %union.anon* %22992 to i32*
  %22993 = load i32, i32* %EAX.i572
  %22994 = zext i32 %22993 to i64
  %22995 = load i64, i64* %PC.i571
  %22996 = add i64 %22995, 3
  store i64 %22996, i64* %PC.i571
  %22997 = sub i32 %22993, 3
  %22998 = icmp ult i32 %22993, 3
  %22999 = zext i1 %22998 to i8
  %23000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22999, i8* %23000, align 1
  %23001 = and i32 %22997, 255
  %23002 = call i32 @llvm.ctpop.i32(i32 %23001)
  %23003 = trunc i32 %23002 to i8
  %23004 = and i8 %23003, 1
  %23005 = xor i8 %23004, 1
  %23006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23005, i8* %23006, align 1
  %23007 = xor i64 3, %22994
  %23008 = trunc i64 %23007 to i32
  %23009 = xor i32 %23008, %22997
  %23010 = lshr i32 %23009, 4
  %23011 = trunc i32 %23010 to i8
  %23012 = and i8 %23011, 1
  %23013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23012, i8* %23013, align 1
  %23014 = icmp eq i32 %22997, 0
  %23015 = zext i1 %23014 to i8
  %23016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23015, i8* %23016, align 1
  %23017 = lshr i32 %22997, 31
  %23018 = trunc i32 %23017 to i8
  %23019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23018, i8* %23019, align 1
  %23020 = lshr i32 %22993, 31
  %23021 = xor i32 %23017, %23020
  %23022 = add i32 %23021, %23020
  %23023 = icmp eq i32 %23022, 2
  %23024 = zext i1 %23023 to i8
  %23025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23024, i8* %23025, align 1
  store %struct.Memory* %loadMem_476a35, %struct.Memory** %MEMORY
  %loadMem_476a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23027 = getelementptr inbounds %struct.GPR, %struct.GPR* %23026, i32 0, i32 33
  %23028 = getelementptr inbounds %struct.Reg, %struct.Reg* %23027, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %23028 to i64*
  %23029 = load i64, i64* %PC.i570
  %23030 = add i64 %23029, 99
  %23031 = load i64, i64* %PC.i570
  %23032 = add i64 %23031, 6
  %23033 = load i64, i64* %PC.i570
  %23034 = add i64 %23033, 6
  store i64 %23034, i64* %PC.i570
  %23035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23036 = load i8, i8* %23035, align 1
  store i8 %23036, i8* %BRANCH_TAKEN, align 1
  %23037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %23038 = icmp ne i8 %23036, 0
  %23039 = select i1 %23038, i64 %23030, i64 %23032
  store i64 %23039, i64* %23037, align 8
  store %struct.Memory* %loadMem_476a38, %struct.Memory** %MEMORY
  %loadBr_476a38 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476a38 = icmp eq i8 %loadBr_476a38, 1
  br i1 %cmpBr_476a38, label %block_.L_476a9b, label %block_476a3e

block_476a3e:                                     ; preds = %block_476a21
  %loadMem_476a3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23041 = getelementptr inbounds %struct.GPR, %struct.GPR* %23040, i32 0, i32 33
  %23042 = getelementptr inbounds %struct.Reg, %struct.Reg* %23041, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %23042 to i64*
  %23043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23044 = getelementptr inbounds %struct.GPR, %struct.GPR* %23043, i32 0, i32 1
  %23045 = getelementptr inbounds %struct.Reg, %struct.Reg* %23044, i32 0, i32 0
  %RAX.i568 = bitcast %union.anon* %23045 to i64*
  %23046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23047 = getelementptr inbounds %struct.GPR, %struct.GPR* %23046, i32 0, i32 15
  %23048 = getelementptr inbounds %struct.Reg, %struct.Reg* %23047, i32 0, i32 0
  %RBP.i569 = bitcast %union.anon* %23048 to i64*
  %23049 = load i64, i64* %RBP.i569
  %23050 = sub i64 %23049, 48
  %23051 = load i64, i64* %PC.i567
  %23052 = add i64 %23051, 3
  store i64 %23052, i64* %PC.i567
  %23053 = inttoptr i64 %23050 to i32*
  %23054 = load i32, i32* %23053
  %23055 = zext i32 %23054 to i64
  store i64 %23055, i64* %RAX.i568, align 8
  store %struct.Memory* %loadMem_476a3e, %struct.Memory** %MEMORY
  %loadMem_476a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23057 = getelementptr inbounds %struct.GPR, %struct.GPR* %23056, i32 0, i32 33
  %23058 = getelementptr inbounds %struct.Reg, %struct.Reg* %23057, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %23058 to i64*
  %23059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23060 = getelementptr inbounds %struct.GPR, %struct.GPR* %23059, i32 0, i32 1
  %23061 = getelementptr inbounds %struct.Reg, %struct.Reg* %23060, i32 0, i32 0
  %RAX.i566 = bitcast %union.anon* %23061 to i64*
  %23062 = load i64, i64* %RAX.i566
  %23063 = load i64, i64* %PC.i565
  %23064 = add i64 %23063, 3
  store i64 %23064, i64* %PC.i565
  %23065 = trunc i64 %23062 to i32
  %23066 = add i32 1, %23065
  %23067 = zext i32 %23066 to i64
  store i64 %23067, i64* %RAX.i566, align 8
  %23068 = icmp ult i32 %23066, %23065
  %23069 = icmp ult i32 %23066, 1
  %23070 = or i1 %23068, %23069
  %23071 = zext i1 %23070 to i8
  %23072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23071, i8* %23072, align 1
  %23073 = and i32 %23066, 255
  %23074 = call i32 @llvm.ctpop.i32(i32 %23073)
  %23075 = trunc i32 %23074 to i8
  %23076 = and i8 %23075, 1
  %23077 = xor i8 %23076, 1
  %23078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23077, i8* %23078, align 1
  %23079 = xor i64 1, %23062
  %23080 = trunc i64 %23079 to i32
  %23081 = xor i32 %23080, %23066
  %23082 = lshr i32 %23081, 4
  %23083 = trunc i32 %23082 to i8
  %23084 = and i8 %23083, 1
  %23085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23084, i8* %23085, align 1
  %23086 = icmp eq i32 %23066, 0
  %23087 = zext i1 %23086 to i8
  %23088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23087, i8* %23088, align 1
  %23089 = lshr i32 %23066, 31
  %23090 = trunc i32 %23089 to i8
  %23091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23090, i8* %23091, align 1
  %23092 = lshr i32 %23065, 31
  %23093 = xor i32 %23089, %23092
  %23094 = add i32 %23093, %23089
  %23095 = icmp eq i32 %23094, 2
  %23096 = zext i1 %23095 to i8
  %23097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23096, i8* %23097, align 1
  store %struct.Memory* %loadMem_476a41, %struct.Memory** %MEMORY
  %loadMem_476a44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23099 = getelementptr inbounds %struct.GPR, %struct.GPR* %23098, i32 0, i32 33
  %23100 = getelementptr inbounds %struct.Reg, %struct.Reg* %23099, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %23100 to i64*
  %23101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23102 = getelementptr inbounds %struct.GPR, %struct.GPR* %23101, i32 0, i32 1
  %23103 = getelementptr inbounds %struct.Reg, %struct.Reg* %23102, i32 0, i32 0
  %RAX.i564 = bitcast %union.anon* %23103 to i64*
  %23104 = load i64, i64* %RAX.i564
  %23105 = load i64, i64* %PC.i563
  %23106 = add i64 %23105, 3
  store i64 %23106, i64* %PC.i563
  %23107 = trunc i64 %23104 to i32
  %23108 = sub i32 %23107, 20
  %23109 = zext i32 %23108 to i64
  store i64 %23109, i64* %RAX.i564, align 8
  %23110 = icmp ult i32 %23107, 20
  %23111 = zext i1 %23110 to i8
  %23112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23111, i8* %23112, align 1
  %23113 = and i32 %23108, 255
  %23114 = call i32 @llvm.ctpop.i32(i32 %23113)
  %23115 = trunc i32 %23114 to i8
  %23116 = and i8 %23115, 1
  %23117 = xor i8 %23116, 1
  %23118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23117, i8* %23118, align 1
  %23119 = xor i64 20, %23104
  %23120 = trunc i64 %23119 to i32
  %23121 = xor i32 %23120, %23108
  %23122 = lshr i32 %23121, 4
  %23123 = trunc i32 %23122 to i8
  %23124 = and i8 %23123, 1
  %23125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23124, i8* %23125, align 1
  %23126 = icmp eq i32 %23108, 0
  %23127 = zext i1 %23126 to i8
  %23128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23127, i8* %23128, align 1
  %23129 = lshr i32 %23108, 31
  %23130 = trunc i32 %23129 to i8
  %23131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23130, i8* %23131, align 1
  %23132 = lshr i32 %23107, 31
  %23133 = xor i32 %23129, %23132
  %23134 = add i32 %23133, %23132
  %23135 = icmp eq i32 %23134, 2
  %23136 = zext i1 %23135 to i8
  %23137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23136, i8* %23137, align 1
  store %struct.Memory* %loadMem_476a44, %struct.Memory** %MEMORY
  %loadMem_476a47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23139 = getelementptr inbounds %struct.GPR, %struct.GPR* %23138, i32 0, i32 33
  %23140 = getelementptr inbounds %struct.Reg, %struct.Reg* %23139, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %23140 to i64*
  %23141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23142 = getelementptr inbounds %struct.GPR, %struct.GPR* %23141, i32 0, i32 1
  %23143 = getelementptr inbounds %struct.Reg, %struct.Reg* %23142, i32 0, i32 0
  %EAX.i561 = bitcast %union.anon* %23143 to i32*
  %23144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23145 = getelementptr inbounds %struct.GPR, %struct.GPR* %23144, i32 0, i32 5
  %23146 = getelementptr inbounds %struct.Reg, %struct.Reg* %23145, i32 0, i32 0
  %RCX.i562 = bitcast %union.anon* %23146 to i64*
  %23147 = load i32, i32* %EAX.i561
  %23148 = zext i32 %23147 to i64
  %23149 = load i64, i64* %PC.i560
  %23150 = add i64 %23149, 3
  store i64 %23150, i64* %PC.i560
  %23151 = shl i64 %23148, 32
  %23152 = ashr exact i64 %23151, 32
  store i64 %23152, i64* %RCX.i562, align 8
  store %struct.Memory* %loadMem_476a47, %struct.Memory** %MEMORY
  %loadMem_476a4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %23153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23154 = getelementptr inbounds %struct.GPR, %struct.GPR* %23153, i32 0, i32 33
  %23155 = getelementptr inbounds %struct.Reg, %struct.Reg* %23154, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %23155 to i64*
  %23156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23157 = getelementptr inbounds %struct.GPR, %struct.GPR* %23156, i32 0, i32 1
  %23158 = getelementptr inbounds %struct.Reg, %struct.Reg* %23157, i32 0, i32 0
  %RAX.i558 = bitcast %union.anon* %23158 to i64*
  %23159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23160 = getelementptr inbounds %struct.GPR, %struct.GPR* %23159, i32 0, i32 5
  %23161 = getelementptr inbounds %struct.Reg, %struct.Reg* %23160, i32 0, i32 0
  %RCX.i559 = bitcast %union.anon* %23161 to i64*
  %23162 = load i64, i64* %RCX.i559
  %23163 = add i64 %23162, 12099168
  %23164 = load i64, i64* %PC.i557
  %23165 = add i64 %23164, 8
  store i64 %23165, i64* %PC.i557
  %23166 = inttoptr i64 %23163 to i8*
  %23167 = load i8, i8* %23166
  %23168 = zext i8 %23167 to i64
  store i64 %23168, i64* %RAX.i558, align 8
  store %struct.Memory* %loadMem_476a4a, %struct.Memory** %MEMORY
  %loadMem_476a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23170 = getelementptr inbounds %struct.GPR, %struct.GPR* %23169, i32 0, i32 33
  %23171 = getelementptr inbounds %struct.Reg, %struct.Reg* %23170, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %23171 to i64*
  %23172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23173 = getelementptr inbounds %struct.GPR, %struct.GPR* %23172, i32 0, i32 1
  %23174 = getelementptr inbounds %struct.Reg, %struct.Reg* %23173, i32 0, i32 0
  %EAX.i555 = bitcast %union.anon* %23174 to i32*
  %23175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23176 = getelementptr inbounds %struct.GPR, %struct.GPR* %23175, i32 0, i32 15
  %23177 = getelementptr inbounds %struct.Reg, %struct.Reg* %23176, i32 0, i32 0
  %RBP.i556 = bitcast %union.anon* %23177 to i64*
  %23178 = load i32, i32* %EAX.i555
  %23179 = zext i32 %23178 to i64
  %23180 = load i64, i64* %RBP.i556
  %23181 = sub i64 %23180, 232
  %23182 = load i64, i64* %PC.i554
  %23183 = add i64 %23182, 6
  store i64 %23183, i64* %PC.i554
  %23184 = inttoptr i64 %23181 to i32*
  %23185 = load i32, i32* %23184
  %23186 = sub i32 %23178, %23185
  %23187 = icmp ult i32 %23178, %23185
  %23188 = zext i1 %23187 to i8
  %23189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23188, i8* %23189, align 1
  %23190 = and i32 %23186, 255
  %23191 = call i32 @llvm.ctpop.i32(i32 %23190)
  %23192 = trunc i32 %23191 to i8
  %23193 = and i8 %23192, 1
  %23194 = xor i8 %23193, 1
  %23195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23194, i8* %23195, align 1
  %23196 = xor i32 %23185, %23178
  %23197 = xor i32 %23196, %23186
  %23198 = lshr i32 %23197, 4
  %23199 = trunc i32 %23198 to i8
  %23200 = and i8 %23199, 1
  %23201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23200, i8* %23201, align 1
  %23202 = icmp eq i32 %23186, 0
  %23203 = zext i1 %23202 to i8
  %23204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23203, i8* %23204, align 1
  %23205 = lshr i32 %23186, 31
  %23206 = trunc i32 %23205 to i8
  %23207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23206, i8* %23207, align 1
  %23208 = lshr i32 %23178, 31
  %23209 = lshr i32 %23185, 31
  %23210 = xor i32 %23209, %23208
  %23211 = xor i32 %23205, %23208
  %23212 = add i32 %23211, %23210
  %23213 = icmp eq i32 %23212, 2
  %23214 = zext i1 %23213 to i8
  %23215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23214, i8* %23215, align 1
  store %struct.Memory* %loadMem_476a52, %struct.Memory** %MEMORY
  %loadMem_476a58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23217 = getelementptr inbounds %struct.GPR, %struct.GPR* %23216, i32 0, i32 33
  %23218 = getelementptr inbounds %struct.Reg, %struct.Reg* %23217, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %23218 to i64*
  %23219 = load i64, i64* %PC.i553
  %23220 = add i64 %23219, 67
  %23221 = load i64, i64* %PC.i553
  %23222 = add i64 %23221, 6
  %23223 = load i64, i64* %PC.i553
  %23224 = add i64 %23223, 6
  store i64 %23224, i64* %PC.i553
  %23225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23226 = load i8, i8* %23225, align 1
  store i8 %23226, i8* %BRANCH_TAKEN, align 1
  %23227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %23228 = icmp ne i8 %23226, 0
  %23229 = select i1 %23228, i64 %23220, i64 %23222
  store i64 %23229, i64* %23227, align 8
  store %struct.Memory* %loadMem_476a58, %struct.Memory** %MEMORY
  %loadBr_476a58 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476a58 = icmp eq i8 %loadBr_476a58, 1
  br i1 %cmpBr_476a58, label %block_.L_476a9b, label %block_476a5e

block_476a5e:                                     ; preds = %block_476a3e
  %loadMem_476a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23231 = getelementptr inbounds %struct.GPR, %struct.GPR* %23230, i32 0, i32 33
  %23232 = getelementptr inbounds %struct.Reg, %struct.Reg* %23231, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %23232 to i64*
  %23233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23234 = getelementptr inbounds %struct.GPR, %struct.GPR* %23233, i32 0, i32 1
  %23235 = getelementptr inbounds %struct.Reg, %struct.Reg* %23234, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %23235 to i64*
  %23236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23237 = getelementptr inbounds %struct.GPR, %struct.GPR* %23236, i32 0, i32 15
  %23238 = getelementptr inbounds %struct.Reg, %struct.Reg* %23237, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %23238 to i64*
  %23239 = load i64, i64* %RBP.i552
  %23240 = sub i64 %23239, 48
  %23241 = load i64, i64* %PC.i550
  %23242 = add i64 %23241, 3
  store i64 %23242, i64* %PC.i550
  %23243 = inttoptr i64 %23240 to i32*
  %23244 = load i32, i32* %23243
  %23245 = zext i32 %23244 to i64
  store i64 %23245, i64* %RAX.i551, align 8
  store %struct.Memory* %loadMem_476a5e, %struct.Memory** %MEMORY
  %loadMem_476a61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23247 = getelementptr inbounds %struct.GPR, %struct.GPR* %23246, i32 0, i32 33
  %23248 = getelementptr inbounds %struct.Reg, %struct.Reg* %23247, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %23248 to i64*
  %23249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23250 = getelementptr inbounds %struct.GPR, %struct.GPR* %23249, i32 0, i32 1
  %23251 = getelementptr inbounds %struct.Reg, %struct.Reg* %23250, i32 0, i32 0
  %RAX.i549 = bitcast %union.anon* %23251 to i64*
  %23252 = load i64, i64* %RAX.i549
  %23253 = load i64, i64* %PC.i548
  %23254 = add i64 %23253, 3
  store i64 %23254, i64* %PC.i548
  %23255 = trunc i64 %23252 to i32
  %23256 = add i32 1, %23255
  %23257 = zext i32 %23256 to i64
  store i64 %23257, i64* %RAX.i549, align 8
  %23258 = icmp ult i32 %23256, %23255
  %23259 = icmp ult i32 %23256, 1
  %23260 = or i1 %23258, %23259
  %23261 = zext i1 %23260 to i8
  %23262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23261, i8* %23262, align 1
  %23263 = and i32 %23256, 255
  %23264 = call i32 @llvm.ctpop.i32(i32 %23263)
  %23265 = trunc i32 %23264 to i8
  %23266 = and i8 %23265, 1
  %23267 = xor i8 %23266, 1
  %23268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23267, i8* %23268, align 1
  %23269 = xor i64 1, %23252
  %23270 = trunc i64 %23269 to i32
  %23271 = xor i32 %23270, %23256
  %23272 = lshr i32 %23271, 4
  %23273 = trunc i32 %23272 to i8
  %23274 = and i8 %23273, 1
  %23275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23274, i8* %23275, align 1
  %23276 = icmp eq i32 %23256, 0
  %23277 = zext i1 %23276 to i8
  %23278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23277, i8* %23278, align 1
  %23279 = lshr i32 %23256, 31
  %23280 = trunc i32 %23279 to i8
  %23281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23280, i8* %23281, align 1
  %23282 = lshr i32 %23255, 31
  %23283 = xor i32 %23279, %23282
  %23284 = add i32 %23283, %23279
  %23285 = icmp eq i32 %23284, 2
  %23286 = zext i1 %23285 to i8
  %23287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23286, i8* %23287, align 1
  store %struct.Memory* %loadMem_476a61, %struct.Memory** %MEMORY
  %loadMem_476a64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23289 = getelementptr inbounds %struct.GPR, %struct.GPR* %23288, i32 0, i32 33
  %23290 = getelementptr inbounds %struct.Reg, %struct.Reg* %23289, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %23290 to i64*
  %23291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23292 = getelementptr inbounds %struct.GPR, %struct.GPR* %23291, i32 0, i32 1
  %23293 = getelementptr inbounds %struct.Reg, %struct.Reg* %23292, i32 0, i32 0
  %RAX.i547 = bitcast %union.anon* %23293 to i64*
  %23294 = load i64, i64* %RAX.i547
  %23295 = load i64, i64* %PC.i546
  %23296 = add i64 %23295, 3
  store i64 %23296, i64* %PC.i546
  %23297 = trunc i64 %23294 to i32
  %23298 = add i32 20, %23297
  %23299 = zext i32 %23298 to i64
  store i64 %23299, i64* %RAX.i547, align 8
  %23300 = icmp ult i32 %23298, %23297
  %23301 = icmp ult i32 %23298, 20
  %23302 = or i1 %23300, %23301
  %23303 = zext i1 %23302 to i8
  %23304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23303, i8* %23304, align 1
  %23305 = and i32 %23298, 255
  %23306 = call i32 @llvm.ctpop.i32(i32 %23305)
  %23307 = trunc i32 %23306 to i8
  %23308 = and i8 %23307, 1
  %23309 = xor i8 %23308, 1
  %23310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23309, i8* %23310, align 1
  %23311 = xor i64 20, %23294
  %23312 = trunc i64 %23311 to i32
  %23313 = xor i32 %23312, %23298
  %23314 = lshr i32 %23313, 4
  %23315 = trunc i32 %23314 to i8
  %23316 = and i8 %23315, 1
  %23317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23316, i8* %23317, align 1
  %23318 = icmp eq i32 %23298, 0
  %23319 = zext i1 %23318 to i8
  %23320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23319, i8* %23320, align 1
  %23321 = lshr i32 %23298, 31
  %23322 = trunc i32 %23321 to i8
  %23323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23322, i8* %23323, align 1
  %23324 = lshr i32 %23297, 31
  %23325 = xor i32 %23321, %23324
  %23326 = add i32 %23325, %23321
  %23327 = icmp eq i32 %23326, 2
  %23328 = zext i1 %23327 to i8
  %23329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23328, i8* %23329, align 1
  store %struct.Memory* %loadMem_476a64, %struct.Memory** %MEMORY
  %loadMem_476a67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23331 = getelementptr inbounds %struct.GPR, %struct.GPR* %23330, i32 0, i32 33
  %23332 = getelementptr inbounds %struct.Reg, %struct.Reg* %23331, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %23332 to i64*
  %23333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23334 = getelementptr inbounds %struct.GPR, %struct.GPR* %23333, i32 0, i32 1
  %23335 = getelementptr inbounds %struct.Reg, %struct.Reg* %23334, i32 0, i32 0
  %EAX.i544 = bitcast %union.anon* %23335 to i32*
  %23336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23337 = getelementptr inbounds %struct.GPR, %struct.GPR* %23336, i32 0, i32 5
  %23338 = getelementptr inbounds %struct.Reg, %struct.Reg* %23337, i32 0, i32 0
  %RCX.i545 = bitcast %union.anon* %23338 to i64*
  %23339 = load i32, i32* %EAX.i544
  %23340 = zext i32 %23339 to i64
  %23341 = load i64, i64* %PC.i543
  %23342 = add i64 %23341, 3
  store i64 %23342, i64* %PC.i543
  %23343 = shl i64 %23340, 32
  %23344 = ashr exact i64 %23343, 32
  store i64 %23344, i64* %RCX.i545, align 8
  store %struct.Memory* %loadMem_476a67, %struct.Memory** %MEMORY
  %loadMem_476a6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %23345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23346 = getelementptr inbounds %struct.GPR, %struct.GPR* %23345, i32 0, i32 33
  %23347 = getelementptr inbounds %struct.Reg, %struct.Reg* %23346, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %23347 to i64*
  %23348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23349 = getelementptr inbounds %struct.GPR, %struct.GPR* %23348, i32 0, i32 1
  %23350 = getelementptr inbounds %struct.Reg, %struct.Reg* %23349, i32 0, i32 0
  %RAX.i541 = bitcast %union.anon* %23350 to i64*
  %23351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23352 = getelementptr inbounds %struct.GPR, %struct.GPR* %23351, i32 0, i32 5
  %23353 = getelementptr inbounds %struct.Reg, %struct.Reg* %23352, i32 0, i32 0
  %RCX.i542 = bitcast %union.anon* %23353 to i64*
  %23354 = load i64, i64* %RCX.i542
  %23355 = add i64 %23354, 12099168
  %23356 = load i64, i64* %PC.i540
  %23357 = add i64 %23356, 8
  store i64 %23357, i64* %PC.i540
  %23358 = inttoptr i64 %23355 to i8*
  %23359 = load i8, i8* %23358
  %23360 = zext i8 %23359 to i64
  store i64 %23360, i64* %RAX.i541, align 8
  store %struct.Memory* %loadMem_476a6a, %struct.Memory** %MEMORY
  %loadMem_476a72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23362 = getelementptr inbounds %struct.GPR, %struct.GPR* %23361, i32 0, i32 33
  %23363 = getelementptr inbounds %struct.Reg, %struct.Reg* %23362, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %23363 to i64*
  %23364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23365 = getelementptr inbounds %struct.GPR, %struct.GPR* %23364, i32 0, i32 1
  %23366 = getelementptr inbounds %struct.Reg, %struct.Reg* %23365, i32 0, i32 0
  %EAX.i539 = bitcast %union.anon* %23366 to i32*
  %23367 = load i32, i32* %EAX.i539
  %23368 = zext i32 %23367 to i64
  %23369 = load i64, i64* %PC.i538
  %23370 = add i64 %23369, 3
  store i64 %23370, i64* %PC.i538
  %23371 = sub i32 %23367, 3
  %23372 = icmp ult i32 %23367, 3
  %23373 = zext i1 %23372 to i8
  %23374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23373, i8* %23374, align 1
  %23375 = and i32 %23371, 255
  %23376 = call i32 @llvm.ctpop.i32(i32 %23375)
  %23377 = trunc i32 %23376 to i8
  %23378 = and i8 %23377, 1
  %23379 = xor i8 %23378, 1
  %23380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23379, i8* %23380, align 1
  %23381 = xor i64 3, %23368
  %23382 = trunc i64 %23381 to i32
  %23383 = xor i32 %23382, %23371
  %23384 = lshr i32 %23383, 4
  %23385 = trunc i32 %23384 to i8
  %23386 = and i8 %23385, 1
  %23387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23386, i8* %23387, align 1
  %23388 = icmp eq i32 %23371, 0
  %23389 = zext i1 %23388 to i8
  %23390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23389, i8* %23390, align 1
  %23391 = lshr i32 %23371, 31
  %23392 = trunc i32 %23391 to i8
  %23393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23392, i8* %23393, align 1
  %23394 = lshr i32 %23367, 31
  %23395 = xor i32 %23391, %23394
  %23396 = add i32 %23395, %23394
  %23397 = icmp eq i32 %23396, 2
  %23398 = zext i1 %23397 to i8
  %23399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23398, i8* %23399, align 1
  store %struct.Memory* %loadMem_476a72, %struct.Memory** %MEMORY
  %loadMem_476a75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23401 = getelementptr inbounds %struct.GPR, %struct.GPR* %23400, i32 0, i32 33
  %23402 = getelementptr inbounds %struct.Reg, %struct.Reg* %23401, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %23402 to i64*
  %23403 = load i64, i64* %PC.i537
  %23404 = add i64 %23403, 38
  %23405 = load i64, i64* %PC.i537
  %23406 = add i64 %23405, 6
  %23407 = load i64, i64* %PC.i537
  %23408 = add i64 %23407, 6
  store i64 %23408, i64* %PC.i537
  %23409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23410 = load i8, i8* %23409, align 1
  store i8 %23410, i8* %BRANCH_TAKEN, align 1
  %23411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %23412 = icmp ne i8 %23410, 0
  %23413 = select i1 %23412, i64 %23404, i64 %23406
  store i64 %23413, i64* %23411, align 8
  store %struct.Memory* %loadMem_476a75, %struct.Memory** %MEMORY
  %loadBr_476a75 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476a75 = icmp eq i8 %loadBr_476a75, 1
  br i1 %cmpBr_476a75, label %block_.L_476a9b, label %block_476a7b

block_476a7b:                                     ; preds = %block_476a5e
  %loadMem_476a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %23414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23415 = getelementptr inbounds %struct.GPR, %struct.GPR* %23414, i32 0, i32 33
  %23416 = getelementptr inbounds %struct.Reg, %struct.Reg* %23415, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %23416 to i64*
  %23417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23418 = getelementptr inbounds %struct.GPR, %struct.GPR* %23417, i32 0, i32 1
  %23419 = getelementptr inbounds %struct.Reg, %struct.Reg* %23418, i32 0, i32 0
  %RAX.i535 = bitcast %union.anon* %23419 to i64*
  %23420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23421 = getelementptr inbounds %struct.GPR, %struct.GPR* %23420, i32 0, i32 15
  %23422 = getelementptr inbounds %struct.Reg, %struct.Reg* %23421, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %23422 to i64*
  %23423 = load i64, i64* %RBP.i536
  %23424 = sub i64 %23423, 48
  %23425 = load i64, i64* %PC.i534
  %23426 = add i64 %23425, 3
  store i64 %23426, i64* %PC.i534
  %23427 = inttoptr i64 %23424 to i32*
  %23428 = load i32, i32* %23427
  %23429 = zext i32 %23428 to i64
  store i64 %23429, i64* %RAX.i535, align 8
  store %struct.Memory* %loadMem_476a7b, %struct.Memory** %MEMORY
  %loadMem_476a7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23431 = getelementptr inbounds %struct.GPR, %struct.GPR* %23430, i32 0, i32 33
  %23432 = getelementptr inbounds %struct.Reg, %struct.Reg* %23431, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %23432 to i64*
  %23433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23434 = getelementptr inbounds %struct.GPR, %struct.GPR* %23433, i32 0, i32 1
  %23435 = getelementptr inbounds %struct.Reg, %struct.Reg* %23434, i32 0, i32 0
  %RAX.i533 = bitcast %union.anon* %23435 to i64*
  %23436 = load i64, i64* %RAX.i533
  %23437 = load i64, i64* %PC.i532
  %23438 = add i64 %23437, 3
  store i64 %23438, i64* %PC.i532
  %23439 = trunc i64 %23436 to i32
  %23440 = add i32 1, %23439
  %23441 = zext i32 %23440 to i64
  store i64 %23441, i64* %RAX.i533, align 8
  %23442 = icmp ult i32 %23440, %23439
  %23443 = icmp ult i32 %23440, 1
  %23444 = or i1 %23442, %23443
  %23445 = zext i1 %23444 to i8
  %23446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23445, i8* %23446, align 1
  %23447 = and i32 %23440, 255
  %23448 = call i32 @llvm.ctpop.i32(i32 %23447)
  %23449 = trunc i32 %23448 to i8
  %23450 = and i8 %23449, 1
  %23451 = xor i8 %23450, 1
  %23452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23451, i8* %23452, align 1
  %23453 = xor i64 1, %23436
  %23454 = trunc i64 %23453 to i32
  %23455 = xor i32 %23454, %23440
  %23456 = lshr i32 %23455, 4
  %23457 = trunc i32 %23456 to i8
  %23458 = and i8 %23457, 1
  %23459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23458, i8* %23459, align 1
  %23460 = icmp eq i32 %23440, 0
  %23461 = zext i1 %23460 to i8
  %23462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23461, i8* %23462, align 1
  %23463 = lshr i32 %23440, 31
  %23464 = trunc i32 %23463 to i8
  %23465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23464, i8* %23465, align 1
  %23466 = lshr i32 %23439, 31
  %23467 = xor i32 %23463, %23466
  %23468 = add i32 %23467, %23463
  %23469 = icmp eq i32 %23468, 2
  %23470 = zext i1 %23469 to i8
  %23471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23470, i8* %23471, align 1
  store %struct.Memory* %loadMem_476a7e, %struct.Memory** %MEMORY
  %loadMem_476a81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23473 = getelementptr inbounds %struct.GPR, %struct.GPR* %23472, i32 0, i32 33
  %23474 = getelementptr inbounds %struct.Reg, %struct.Reg* %23473, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %23474 to i64*
  %23475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23476 = getelementptr inbounds %struct.GPR, %struct.GPR* %23475, i32 0, i32 1
  %23477 = getelementptr inbounds %struct.Reg, %struct.Reg* %23476, i32 0, i32 0
  %RAX.i531 = bitcast %union.anon* %23477 to i64*
  %23478 = load i64, i64* %RAX.i531
  %23479 = load i64, i64* %PC.i530
  %23480 = add i64 %23479, 3
  store i64 %23480, i64* %PC.i530
  %23481 = trunc i64 %23478 to i32
  %23482 = add i32 20, %23481
  %23483 = zext i32 %23482 to i64
  store i64 %23483, i64* %RAX.i531, align 8
  %23484 = icmp ult i32 %23482, %23481
  %23485 = icmp ult i32 %23482, 20
  %23486 = or i1 %23484, %23485
  %23487 = zext i1 %23486 to i8
  %23488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23487, i8* %23488, align 1
  %23489 = and i32 %23482, 255
  %23490 = call i32 @llvm.ctpop.i32(i32 %23489)
  %23491 = trunc i32 %23490 to i8
  %23492 = and i8 %23491, 1
  %23493 = xor i8 %23492, 1
  %23494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23493, i8* %23494, align 1
  %23495 = xor i64 20, %23478
  %23496 = trunc i64 %23495 to i32
  %23497 = xor i32 %23496, %23482
  %23498 = lshr i32 %23497, 4
  %23499 = trunc i32 %23498 to i8
  %23500 = and i8 %23499, 1
  %23501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23500, i8* %23501, align 1
  %23502 = icmp eq i32 %23482, 0
  %23503 = zext i1 %23502 to i8
  %23504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23503, i8* %23504, align 1
  %23505 = lshr i32 %23482, 31
  %23506 = trunc i32 %23505 to i8
  %23507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23506, i8* %23507, align 1
  %23508 = lshr i32 %23481, 31
  %23509 = xor i32 %23505, %23508
  %23510 = add i32 %23509, %23505
  %23511 = icmp eq i32 %23510, 2
  %23512 = zext i1 %23511 to i8
  %23513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23512, i8* %23513, align 1
  store %struct.Memory* %loadMem_476a81, %struct.Memory** %MEMORY
  %loadMem_476a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23515 = getelementptr inbounds %struct.GPR, %struct.GPR* %23514, i32 0, i32 33
  %23516 = getelementptr inbounds %struct.Reg, %struct.Reg* %23515, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %23516 to i64*
  %23517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23518 = getelementptr inbounds %struct.GPR, %struct.GPR* %23517, i32 0, i32 1
  %23519 = getelementptr inbounds %struct.Reg, %struct.Reg* %23518, i32 0, i32 0
  %EAX.i528 = bitcast %union.anon* %23519 to i32*
  %23520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23521 = getelementptr inbounds %struct.GPR, %struct.GPR* %23520, i32 0, i32 5
  %23522 = getelementptr inbounds %struct.Reg, %struct.Reg* %23521, i32 0, i32 0
  %RCX.i529 = bitcast %union.anon* %23522 to i64*
  %23523 = load i32, i32* %EAX.i528
  %23524 = zext i32 %23523 to i64
  %23525 = load i64, i64* %PC.i527
  %23526 = add i64 %23525, 3
  store i64 %23526, i64* %PC.i527
  %23527 = shl i64 %23524, 32
  %23528 = ashr exact i64 %23527, 32
  store i64 %23528, i64* %RCX.i529, align 8
  store %struct.Memory* %loadMem_476a84, %struct.Memory** %MEMORY
  %loadMem_476a87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23530 = getelementptr inbounds %struct.GPR, %struct.GPR* %23529, i32 0, i32 33
  %23531 = getelementptr inbounds %struct.Reg, %struct.Reg* %23530, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %23531 to i64*
  %23532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23533 = getelementptr inbounds %struct.GPR, %struct.GPR* %23532, i32 0, i32 1
  %23534 = getelementptr inbounds %struct.Reg, %struct.Reg* %23533, i32 0, i32 0
  %RAX.i525 = bitcast %union.anon* %23534 to i64*
  %23535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23536 = getelementptr inbounds %struct.GPR, %struct.GPR* %23535, i32 0, i32 5
  %23537 = getelementptr inbounds %struct.Reg, %struct.Reg* %23536, i32 0, i32 0
  %RCX.i526 = bitcast %union.anon* %23537 to i64*
  %23538 = load i64, i64* %RCX.i526
  %23539 = add i64 %23538, 12099168
  %23540 = load i64, i64* %PC.i524
  %23541 = add i64 %23540, 8
  store i64 %23541, i64* %PC.i524
  %23542 = inttoptr i64 %23539 to i8*
  %23543 = load i8, i8* %23542
  %23544 = zext i8 %23543 to i64
  store i64 %23544, i64* %RAX.i525, align 8
  store %struct.Memory* %loadMem_476a87, %struct.Memory** %MEMORY
  %loadMem_476a8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %23545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23546 = getelementptr inbounds %struct.GPR, %struct.GPR* %23545, i32 0, i32 33
  %23547 = getelementptr inbounds %struct.Reg, %struct.Reg* %23546, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %23547 to i64*
  %23548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23549 = getelementptr inbounds %struct.GPR, %struct.GPR* %23548, i32 0, i32 1
  %23550 = getelementptr inbounds %struct.Reg, %struct.Reg* %23549, i32 0, i32 0
  %EAX.i522 = bitcast %union.anon* %23550 to i32*
  %23551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23552 = getelementptr inbounds %struct.GPR, %struct.GPR* %23551, i32 0, i32 15
  %23553 = getelementptr inbounds %struct.Reg, %struct.Reg* %23552, i32 0, i32 0
  %RBP.i523 = bitcast %union.anon* %23553 to i64*
  %23554 = load i32, i32* %EAX.i522
  %23555 = zext i32 %23554 to i64
  %23556 = load i64, i64* %RBP.i523
  %23557 = sub i64 %23556, 232
  %23558 = load i64, i64* %PC.i521
  %23559 = add i64 %23558, 6
  store i64 %23559, i64* %PC.i521
  %23560 = inttoptr i64 %23557 to i32*
  %23561 = load i32, i32* %23560
  %23562 = sub i32 %23554, %23561
  %23563 = icmp ult i32 %23554, %23561
  %23564 = zext i1 %23563 to i8
  %23565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23564, i8* %23565, align 1
  %23566 = and i32 %23562, 255
  %23567 = call i32 @llvm.ctpop.i32(i32 %23566)
  %23568 = trunc i32 %23567 to i8
  %23569 = and i8 %23568, 1
  %23570 = xor i8 %23569, 1
  %23571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23570, i8* %23571, align 1
  %23572 = xor i32 %23561, %23554
  %23573 = xor i32 %23572, %23562
  %23574 = lshr i32 %23573, 4
  %23575 = trunc i32 %23574 to i8
  %23576 = and i8 %23575, 1
  %23577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23576, i8* %23577, align 1
  %23578 = icmp eq i32 %23562, 0
  %23579 = zext i1 %23578 to i8
  %23580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23579, i8* %23580, align 1
  %23581 = lshr i32 %23562, 31
  %23582 = trunc i32 %23581 to i8
  %23583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23582, i8* %23583, align 1
  %23584 = lshr i32 %23554, 31
  %23585 = lshr i32 %23561, 31
  %23586 = xor i32 %23585, %23584
  %23587 = xor i32 %23581, %23584
  %23588 = add i32 %23587, %23586
  %23589 = icmp eq i32 %23588, 2
  %23590 = zext i1 %23589 to i8
  %23591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23590, i8* %23591, align 1
  store %struct.Memory* %loadMem_476a8f, %struct.Memory** %MEMORY
  %loadMem_476a95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23593 = getelementptr inbounds %struct.GPR, %struct.GPR* %23592, i32 0, i32 33
  %23594 = getelementptr inbounds %struct.Reg, %struct.Reg* %23593, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %23594 to i64*
  %23595 = load i64, i64* %PC.i520
  %23596 = add i64 %23595, 270
  %23597 = load i64, i64* %PC.i520
  %23598 = add i64 %23597, 6
  %23599 = load i64, i64* %PC.i520
  %23600 = add i64 %23599, 6
  store i64 %23600, i64* %PC.i520
  %23601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23602 = load i8, i8* %23601, align 1
  %23603 = icmp eq i8 %23602, 0
  %23604 = zext i1 %23603 to i8
  store i8 %23604, i8* %BRANCH_TAKEN, align 1
  %23605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %23606 = select i1 %23603, i64 %23596, i64 %23598
  store i64 %23606, i64* %23605, align 8
  store %struct.Memory* %loadMem_476a95, %struct.Memory** %MEMORY
  %loadBr_476a95 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476a95 = icmp eq i8 %loadBr_476a95, 1
  br i1 %cmpBr_476a95, label %block_.L_476ba3, label %block_.L_476a9b

block_.L_476a9b:                                  ; preds = %block_476a7b, %block_476a5e, %block_476a3e, %block_476a21, %block_476a04, %block_4769e4, %block_4769c7, %block_4769ad, %block_.L_476993
  %loadMem_476a9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %23607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23608 = getelementptr inbounds %struct.GPR, %struct.GPR* %23607, i32 0, i32 33
  %23609 = getelementptr inbounds %struct.Reg, %struct.Reg* %23608, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %23609 to i64*
  %23610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23611 = getelementptr inbounds %struct.GPR, %struct.GPR* %23610, i32 0, i32 1
  %23612 = getelementptr inbounds %struct.Reg, %struct.Reg* %23611, i32 0, i32 0
  %RAX.i518 = bitcast %union.anon* %23612 to i64*
  %23613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23614 = getelementptr inbounds %struct.GPR, %struct.GPR* %23613, i32 0, i32 15
  %23615 = getelementptr inbounds %struct.Reg, %struct.Reg* %23614, i32 0, i32 0
  %RBP.i519 = bitcast %union.anon* %23615 to i64*
  %23616 = load i64, i64* %RBP.i519
  %23617 = sub i64 %23616, 48
  %23618 = load i64, i64* %PC.i517
  %23619 = add i64 %23618, 3
  store i64 %23619, i64* %PC.i517
  %23620 = inttoptr i64 %23617 to i32*
  %23621 = load i32, i32* %23620
  %23622 = zext i32 %23621 to i64
  store i64 %23622, i64* %RAX.i518, align 8
  store %struct.Memory* %loadMem_476a9b, %struct.Memory** %MEMORY
  %loadMem_476a9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23624 = getelementptr inbounds %struct.GPR, %struct.GPR* %23623, i32 0, i32 33
  %23625 = getelementptr inbounds %struct.Reg, %struct.Reg* %23624, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %23625 to i64*
  %23626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23627 = getelementptr inbounds %struct.GPR, %struct.GPR* %23626, i32 0, i32 1
  %23628 = getelementptr inbounds %struct.Reg, %struct.Reg* %23627, i32 0, i32 0
  %RAX.i516 = bitcast %union.anon* %23628 to i64*
  %23629 = load i64, i64* %RAX.i516
  %23630 = load i64, i64* %PC.i515
  %23631 = add i64 %23630, 3
  store i64 %23631, i64* %PC.i515
  %23632 = trunc i64 %23629 to i32
  %23633 = sub i32 %23632, 1
  %23634 = zext i32 %23633 to i64
  store i64 %23634, i64* %RAX.i516, align 8
  %23635 = icmp ult i32 %23632, 1
  %23636 = zext i1 %23635 to i8
  %23637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23636, i8* %23637, align 1
  %23638 = and i32 %23633, 255
  %23639 = call i32 @llvm.ctpop.i32(i32 %23638)
  %23640 = trunc i32 %23639 to i8
  %23641 = and i8 %23640, 1
  %23642 = xor i8 %23641, 1
  %23643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23642, i8* %23643, align 1
  %23644 = xor i64 1, %23629
  %23645 = trunc i64 %23644 to i32
  %23646 = xor i32 %23645, %23633
  %23647 = lshr i32 %23646, 4
  %23648 = trunc i32 %23647 to i8
  %23649 = and i8 %23648, 1
  %23650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23649, i8* %23650, align 1
  %23651 = icmp eq i32 %23633, 0
  %23652 = zext i1 %23651 to i8
  %23653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23652, i8* %23653, align 1
  %23654 = lshr i32 %23633, 31
  %23655 = trunc i32 %23654 to i8
  %23656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23655, i8* %23656, align 1
  %23657 = lshr i32 %23632, 31
  %23658 = xor i32 %23654, %23657
  %23659 = add i32 %23658, %23657
  %23660 = icmp eq i32 %23659, 2
  %23661 = zext i1 %23660 to i8
  %23662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23661, i8* %23662, align 1
  store %struct.Memory* %loadMem_476a9e, %struct.Memory** %MEMORY
  %loadMem_476aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23664 = getelementptr inbounds %struct.GPR, %struct.GPR* %23663, i32 0, i32 33
  %23665 = getelementptr inbounds %struct.Reg, %struct.Reg* %23664, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %23665 to i64*
  %23666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23667 = getelementptr inbounds %struct.GPR, %struct.GPR* %23666, i32 0, i32 1
  %23668 = getelementptr inbounds %struct.Reg, %struct.Reg* %23667, i32 0, i32 0
  %EAX.i513 = bitcast %union.anon* %23668 to i32*
  %23669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23670 = getelementptr inbounds %struct.GPR, %struct.GPR* %23669, i32 0, i32 5
  %23671 = getelementptr inbounds %struct.Reg, %struct.Reg* %23670, i32 0, i32 0
  %RCX.i514 = bitcast %union.anon* %23671 to i64*
  %23672 = load i32, i32* %EAX.i513
  %23673 = zext i32 %23672 to i64
  %23674 = load i64, i64* %PC.i512
  %23675 = add i64 %23674, 3
  store i64 %23675, i64* %PC.i512
  %23676 = shl i64 %23673, 32
  %23677 = ashr exact i64 %23676, 32
  store i64 %23677, i64* %RCX.i514, align 8
  store %struct.Memory* %loadMem_476aa1, %struct.Memory** %MEMORY
  %loadMem_476aa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23679 = getelementptr inbounds %struct.GPR, %struct.GPR* %23678, i32 0, i32 33
  %23680 = getelementptr inbounds %struct.Reg, %struct.Reg* %23679, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %23680 to i64*
  %23681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23682 = getelementptr inbounds %struct.GPR, %struct.GPR* %23681, i32 0, i32 1
  %23683 = getelementptr inbounds %struct.Reg, %struct.Reg* %23682, i32 0, i32 0
  %RAX.i510 = bitcast %union.anon* %23683 to i64*
  %23684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23685 = getelementptr inbounds %struct.GPR, %struct.GPR* %23684, i32 0, i32 5
  %23686 = getelementptr inbounds %struct.Reg, %struct.Reg* %23685, i32 0, i32 0
  %RCX.i511 = bitcast %union.anon* %23686 to i64*
  %23687 = load i64, i64* %RCX.i511
  %23688 = add i64 %23687, 12099168
  %23689 = load i64, i64* %PC.i509
  %23690 = add i64 %23689, 8
  store i64 %23690, i64* %PC.i509
  %23691 = inttoptr i64 %23688 to i8*
  %23692 = load i8, i8* %23691
  %23693 = zext i8 %23692 to i64
  store i64 %23693, i64* %RAX.i510, align 8
  store %struct.Memory* %loadMem_476aa4, %struct.Memory** %MEMORY
  %loadMem_476aac = load %struct.Memory*, %struct.Memory** %MEMORY
  %23694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23695 = getelementptr inbounds %struct.GPR, %struct.GPR* %23694, i32 0, i32 33
  %23696 = getelementptr inbounds %struct.Reg, %struct.Reg* %23695, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %23696 to i64*
  %23697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23698 = getelementptr inbounds %struct.GPR, %struct.GPR* %23697, i32 0, i32 1
  %23699 = getelementptr inbounds %struct.Reg, %struct.Reg* %23698, i32 0, i32 0
  %EAX.i508 = bitcast %union.anon* %23699 to i32*
  %23700 = load i32, i32* %EAX.i508
  %23701 = zext i32 %23700 to i64
  %23702 = load i64, i64* %PC.i507
  %23703 = add i64 %23702, 3
  store i64 %23703, i64* %PC.i507
  %23704 = sub i32 %23700, 3
  %23705 = icmp ult i32 %23700, 3
  %23706 = zext i1 %23705 to i8
  %23707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23706, i8* %23707, align 1
  %23708 = and i32 %23704, 255
  %23709 = call i32 @llvm.ctpop.i32(i32 %23708)
  %23710 = trunc i32 %23709 to i8
  %23711 = and i8 %23710, 1
  %23712 = xor i8 %23711, 1
  %23713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23712, i8* %23713, align 1
  %23714 = xor i64 3, %23701
  %23715 = trunc i64 %23714 to i32
  %23716 = xor i32 %23715, %23704
  %23717 = lshr i32 %23716, 4
  %23718 = trunc i32 %23717 to i8
  %23719 = and i8 %23718, 1
  %23720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23719, i8* %23720, align 1
  %23721 = icmp eq i32 %23704, 0
  %23722 = zext i1 %23721 to i8
  %23723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23722, i8* %23723, align 1
  %23724 = lshr i32 %23704, 31
  %23725 = trunc i32 %23724 to i8
  %23726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23725, i8* %23726, align 1
  %23727 = lshr i32 %23700, 31
  %23728 = xor i32 %23724, %23727
  %23729 = add i32 %23728, %23727
  %23730 = icmp eq i32 %23729, 2
  %23731 = zext i1 %23730 to i8
  %23732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23731, i8* %23732, align 1
  store %struct.Memory* %loadMem_476aac, %struct.Memory** %MEMORY
  %loadMem_476aaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %23733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23734 = getelementptr inbounds %struct.GPR, %struct.GPR* %23733, i32 0, i32 33
  %23735 = getelementptr inbounds %struct.Reg, %struct.Reg* %23734, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %23735 to i64*
  %23736 = load i64, i64* %PC.i506
  %23737 = add i64 %23736, 251
  %23738 = load i64, i64* %PC.i506
  %23739 = add i64 %23738, 6
  %23740 = load i64, i64* %PC.i506
  %23741 = add i64 %23740, 6
  store i64 %23741, i64* %PC.i506
  %23742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23743 = load i8, i8* %23742, align 1
  store i8 %23743, i8* %BRANCH_TAKEN, align 1
  %23744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %23745 = icmp ne i8 %23743, 0
  %23746 = select i1 %23745, i64 %23737, i64 %23739
  store i64 %23746, i64* %23744, align 8
  store %struct.Memory* %loadMem_476aaf, %struct.Memory** %MEMORY
  %loadBr_476aaf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476aaf = icmp eq i8 %loadBr_476aaf, 1
  br i1 %cmpBr_476aaf, label %block_.L_476baa, label %block_476ab5

block_476ab5:                                     ; preds = %block_.L_476a9b
  %loadMem_476ab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23748 = getelementptr inbounds %struct.GPR, %struct.GPR* %23747, i32 0, i32 33
  %23749 = getelementptr inbounds %struct.Reg, %struct.Reg* %23748, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %23749 to i64*
  %23750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23751 = getelementptr inbounds %struct.GPR, %struct.GPR* %23750, i32 0, i32 1
  %23752 = getelementptr inbounds %struct.Reg, %struct.Reg* %23751, i32 0, i32 0
  %RAX.i504 = bitcast %union.anon* %23752 to i64*
  %23753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23754 = getelementptr inbounds %struct.GPR, %struct.GPR* %23753, i32 0, i32 15
  %23755 = getelementptr inbounds %struct.Reg, %struct.Reg* %23754, i32 0, i32 0
  %RBP.i505 = bitcast %union.anon* %23755 to i64*
  %23756 = load i64, i64* %RBP.i505
  %23757 = sub i64 %23756, 48
  %23758 = load i64, i64* %PC.i503
  %23759 = add i64 %23758, 3
  store i64 %23759, i64* %PC.i503
  %23760 = inttoptr i64 %23757 to i32*
  %23761 = load i32, i32* %23760
  %23762 = zext i32 %23761 to i64
  store i64 %23762, i64* %RAX.i504, align 8
  store %struct.Memory* %loadMem_476ab5, %struct.Memory** %MEMORY
  %loadMem_476ab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23764 = getelementptr inbounds %struct.GPR, %struct.GPR* %23763, i32 0, i32 33
  %23765 = getelementptr inbounds %struct.Reg, %struct.Reg* %23764, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %23765 to i64*
  %23766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23767 = getelementptr inbounds %struct.GPR, %struct.GPR* %23766, i32 0, i32 1
  %23768 = getelementptr inbounds %struct.Reg, %struct.Reg* %23767, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %23768 to i64*
  %23769 = load i64, i64* %RAX.i502
  %23770 = load i64, i64* %PC.i501
  %23771 = add i64 %23770, 3
  store i64 %23771, i64* %PC.i501
  %23772 = trunc i64 %23769 to i32
  %23773 = sub i32 %23772, 1
  %23774 = zext i32 %23773 to i64
  store i64 %23774, i64* %RAX.i502, align 8
  %23775 = icmp ult i32 %23772, 1
  %23776 = zext i1 %23775 to i8
  %23777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23776, i8* %23777, align 1
  %23778 = and i32 %23773, 255
  %23779 = call i32 @llvm.ctpop.i32(i32 %23778)
  %23780 = trunc i32 %23779 to i8
  %23781 = and i8 %23780, 1
  %23782 = xor i8 %23781, 1
  %23783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23782, i8* %23783, align 1
  %23784 = xor i64 1, %23769
  %23785 = trunc i64 %23784 to i32
  %23786 = xor i32 %23785, %23773
  %23787 = lshr i32 %23786, 4
  %23788 = trunc i32 %23787 to i8
  %23789 = and i8 %23788, 1
  %23790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23789, i8* %23790, align 1
  %23791 = icmp eq i32 %23773, 0
  %23792 = zext i1 %23791 to i8
  %23793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23792, i8* %23793, align 1
  %23794 = lshr i32 %23773, 31
  %23795 = trunc i32 %23794 to i8
  %23796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23795, i8* %23796, align 1
  %23797 = lshr i32 %23772, 31
  %23798 = xor i32 %23794, %23797
  %23799 = add i32 %23798, %23797
  %23800 = icmp eq i32 %23799, 2
  %23801 = zext i1 %23800 to i8
  %23802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23801, i8* %23802, align 1
  store %struct.Memory* %loadMem_476ab8, %struct.Memory** %MEMORY
  %loadMem_476abb = load %struct.Memory*, %struct.Memory** %MEMORY
  %23803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23804 = getelementptr inbounds %struct.GPR, %struct.GPR* %23803, i32 0, i32 33
  %23805 = getelementptr inbounds %struct.Reg, %struct.Reg* %23804, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %23805 to i64*
  %23806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23807 = getelementptr inbounds %struct.GPR, %struct.GPR* %23806, i32 0, i32 1
  %23808 = getelementptr inbounds %struct.Reg, %struct.Reg* %23807, i32 0, i32 0
  %EAX.i499 = bitcast %union.anon* %23808 to i32*
  %23809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23810 = getelementptr inbounds %struct.GPR, %struct.GPR* %23809, i32 0, i32 5
  %23811 = getelementptr inbounds %struct.Reg, %struct.Reg* %23810, i32 0, i32 0
  %RCX.i500 = bitcast %union.anon* %23811 to i64*
  %23812 = load i32, i32* %EAX.i499
  %23813 = zext i32 %23812 to i64
  %23814 = load i64, i64* %PC.i498
  %23815 = add i64 %23814, 3
  store i64 %23815, i64* %PC.i498
  %23816 = shl i64 %23813, 32
  %23817 = ashr exact i64 %23816, 32
  store i64 %23817, i64* %RCX.i500, align 8
  store %struct.Memory* %loadMem_476abb, %struct.Memory** %MEMORY
  %loadMem_476abe = load %struct.Memory*, %struct.Memory** %MEMORY
  %23818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23819 = getelementptr inbounds %struct.GPR, %struct.GPR* %23818, i32 0, i32 33
  %23820 = getelementptr inbounds %struct.Reg, %struct.Reg* %23819, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %23820 to i64*
  %23821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23822 = getelementptr inbounds %struct.GPR, %struct.GPR* %23821, i32 0, i32 1
  %23823 = getelementptr inbounds %struct.Reg, %struct.Reg* %23822, i32 0, i32 0
  %RAX.i496 = bitcast %union.anon* %23823 to i64*
  %23824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23825 = getelementptr inbounds %struct.GPR, %struct.GPR* %23824, i32 0, i32 5
  %23826 = getelementptr inbounds %struct.Reg, %struct.Reg* %23825, i32 0, i32 0
  %RCX.i497 = bitcast %union.anon* %23826 to i64*
  %23827 = load i64, i64* %RCX.i497
  %23828 = add i64 %23827, 12099168
  %23829 = load i64, i64* %PC.i495
  %23830 = add i64 %23829, 8
  store i64 %23830, i64* %PC.i495
  %23831 = inttoptr i64 %23828 to i8*
  %23832 = load i8, i8* %23831
  %23833 = zext i8 %23832 to i64
  store i64 %23833, i64* %RAX.i496, align 8
  store %struct.Memory* %loadMem_476abe, %struct.Memory** %MEMORY
  %loadMem_476ac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23835 = getelementptr inbounds %struct.GPR, %struct.GPR* %23834, i32 0, i32 33
  %23836 = getelementptr inbounds %struct.Reg, %struct.Reg* %23835, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %23836 to i64*
  %23837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23838 = getelementptr inbounds %struct.GPR, %struct.GPR* %23837, i32 0, i32 1
  %23839 = getelementptr inbounds %struct.Reg, %struct.Reg* %23838, i32 0, i32 0
  %EAX.i494 = bitcast %union.anon* %23839 to i32*
  %23840 = load i32, i32* %EAX.i494
  %23841 = zext i32 %23840 to i64
  %23842 = load i64, i64* %PC.i493
  %23843 = add i64 %23842, 3
  store i64 %23843, i64* %PC.i493
  %23844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %23844, align 1
  %23845 = and i32 %23840, 255
  %23846 = call i32 @llvm.ctpop.i32(i32 %23845)
  %23847 = trunc i32 %23846 to i8
  %23848 = and i8 %23847, 1
  %23849 = xor i8 %23848, 1
  %23850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23849, i8* %23850, align 1
  %23851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23851, align 1
  %23852 = icmp eq i32 %23840, 0
  %23853 = zext i1 %23852 to i8
  %23854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23853, i8* %23854, align 1
  %23855 = lshr i32 %23840, 31
  %23856 = trunc i32 %23855 to i8
  %23857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23856, i8* %23857, align 1
  %23858 = lshr i32 %23840, 31
  %23859 = xor i32 %23855, %23858
  %23860 = add i32 %23859, %23858
  %23861 = icmp eq i32 %23860, 2
  %23862 = zext i1 %23861 to i8
  %23863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23862, i8* %23863, align 1
  store %struct.Memory* %loadMem_476ac6, %struct.Memory** %MEMORY
  %loadMem_476ac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23865 = getelementptr inbounds %struct.GPR, %struct.GPR* %23864, i32 0, i32 33
  %23866 = getelementptr inbounds %struct.Reg, %struct.Reg* %23865, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %23866 to i64*
  %23867 = load i64, i64* %PC.i492
  %23868 = add i64 %23867, 225
  %23869 = load i64, i64* %PC.i492
  %23870 = add i64 %23869, 6
  %23871 = load i64, i64* %PC.i492
  %23872 = add i64 %23871, 6
  store i64 %23872, i64* %PC.i492
  %23873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23874 = load i8, i8* %23873, align 1
  %23875 = icmp eq i8 %23874, 0
  %23876 = zext i1 %23875 to i8
  store i8 %23876, i8* %BRANCH_TAKEN, align 1
  %23877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %23878 = select i1 %23875, i64 %23868, i64 %23870
  store i64 %23878, i64* %23877, align 8
  store %struct.Memory* %loadMem_476ac9, %struct.Memory** %MEMORY
  %loadBr_476ac9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476ac9 = icmp eq i8 %loadBr_476ac9, 1
  br i1 %cmpBr_476ac9, label %block_.L_476baa, label %block_476acf

block_476acf:                                     ; preds = %block_476ab5
  %loadMem_476acf = load %struct.Memory*, %struct.Memory** %MEMORY
  %23879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23880 = getelementptr inbounds %struct.GPR, %struct.GPR* %23879, i32 0, i32 33
  %23881 = getelementptr inbounds %struct.Reg, %struct.Reg* %23880, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %23881 to i64*
  %23882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23883 = getelementptr inbounds %struct.GPR, %struct.GPR* %23882, i32 0, i32 1
  %23884 = getelementptr inbounds %struct.Reg, %struct.Reg* %23883, i32 0, i32 0
  %RAX.i490 = bitcast %union.anon* %23884 to i64*
  %23885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23886 = getelementptr inbounds %struct.GPR, %struct.GPR* %23885, i32 0, i32 15
  %23887 = getelementptr inbounds %struct.Reg, %struct.Reg* %23886, i32 0, i32 0
  %RBP.i491 = bitcast %union.anon* %23887 to i64*
  %23888 = load i64, i64* %RBP.i491
  %23889 = sub i64 %23888, 48
  %23890 = load i64, i64* %PC.i489
  %23891 = add i64 %23890, 3
  store i64 %23891, i64* %PC.i489
  %23892 = inttoptr i64 %23889 to i32*
  %23893 = load i32, i32* %23892
  %23894 = zext i32 %23893 to i64
  store i64 %23894, i64* %RAX.i490, align 8
  store %struct.Memory* %loadMem_476acf, %struct.Memory** %MEMORY
  %loadMem_476ad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23896 = getelementptr inbounds %struct.GPR, %struct.GPR* %23895, i32 0, i32 33
  %23897 = getelementptr inbounds %struct.Reg, %struct.Reg* %23896, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %23897 to i64*
  %23898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23899 = getelementptr inbounds %struct.GPR, %struct.GPR* %23898, i32 0, i32 1
  %23900 = getelementptr inbounds %struct.Reg, %struct.Reg* %23899, i32 0, i32 0
  %RAX.i488 = bitcast %union.anon* %23900 to i64*
  %23901 = load i64, i64* %RAX.i488
  %23902 = load i64, i64* %PC.i487
  %23903 = add i64 %23902, 3
  store i64 %23903, i64* %PC.i487
  %23904 = trunc i64 %23901 to i32
  %23905 = sub i32 %23904, 1
  %23906 = zext i32 %23905 to i64
  store i64 %23906, i64* %RAX.i488, align 8
  %23907 = icmp ult i32 %23904, 1
  %23908 = zext i1 %23907 to i8
  %23909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23908, i8* %23909, align 1
  %23910 = and i32 %23905, 255
  %23911 = call i32 @llvm.ctpop.i32(i32 %23910)
  %23912 = trunc i32 %23911 to i8
  %23913 = and i8 %23912, 1
  %23914 = xor i8 %23913, 1
  %23915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23914, i8* %23915, align 1
  %23916 = xor i64 1, %23901
  %23917 = trunc i64 %23916 to i32
  %23918 = xor i32 %23917, %23905
  %23919 = lshr i32 %23918, 4
  %23920 = trunc i32 %23919 to i8
  %23921 = and i8 %23920, 1
  %23922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23921, i8* %23922, align 1
  %23923 = icmp eq i32 %23905, 0
  %23924 = zext i1 %23923 to i8
  %23925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23924, i8* %23925, align 1
  %23926 = lshr i32 %23905, 31
  %23927 = trunc i32 %23926 to i8
  %23928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23927, i8* %23928, align 1
  %23929 = lshr i32 %23904, 31
  %23930 = xor i32 %23926, %23929
  %23931 = add i32 %23930, %23929
  %23932 = icmp eq i32 %23931, 2
  %23933 = zext i1 %23932 to i8
  %23934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23933, i8* %23934, align 1
  store %struct.Memory* %loadMem_476ad2, %struct.Memory** %MEMORY
  %loadMem_476ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23936 = getelementptr inbounds %struct.GPR, %struct.GPR* %23935, i32 0, i32 33
  %23937 = getelementptr inbounds %struct.Reg, %struct.Reg* %23936, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %23937 to i64*
  %23938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23939 = getelementptr inbounds %struct.GPR, %struct.GPR* %23938, i32 0, i32 1
  %23940 = getelementptr inbounds %struct.Reg, %struct.Reg* %23939, i32 0, i32 0
  %RAX.i486 = bitcast %union.anon* %23940 to i64*
  %23941 = load i64, i64* %RAX.i486
  %23942 = load i64, i64* %PC.i485
  %23943 = add i64 %23942, 3
  store i64 %23943, i64* %PC.i485
  %23944 = trunc i64 %23941 to i32
  %23945 = sub i32 %23944, 1
  %23946 = zext i32 %23945 to i64
  store i64 %23946, i64* %RAX.i486, align 8
  %23947 = icmp ult i32 %23944, 1
  %23948 = zext i1 %23947 to i8
  %23949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23948, i8* %23949, align 1
  %23950 = and i32 %23945, 255
  %23951 = call i32 @llvm.ctpop.i32(i32 %23950)
  %23952 = trunc i32 %23951 to i8
  %23953 = and i8 %23952, 1
  %23954 = xor i8 %23953, 1
  %23955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23954, i8* %23955, align 1
  %23956 = xor i64 1, %23941
  %23957 = trunc i64 %23956 to i32
  %23958 = xor i32 %23957, %23945
  %23959 = lshr i32 %23958, 4
  %23960 = trunc i32 %23959 to i8
  %23961 = and i8 %23960, 1
  %23962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23961, i8* %23962, align 1
  %23963 = icmp eq i32 %23945, 0
  %23964 = zext i1 %23963 to i8
  %23965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23964, i8* %23965, align 1
  %23966 = lshr i32 %23945, 31
  %23967 = trunc i32 %23966 to i8
  %23968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23967, i8* %23968, align 1
  %23969 = lshr i32 %23944, 31
  %23970 = xor i32 %23966, %23969
  %23971 = add i32 %23970, %23969
  %23972 = icmp eq i32 %23971, 2
  %23973 = zext i1 %23972 to i8
  %23974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23973, i8* %23974, align 1
  store %struct.Memory* %loadMem_476ad5, %struct.Memory** %MEMORY
  %loadMem_476ad8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23976 = getelementptr inbounds %struct.GPR, %struct.GPR* %23975, i32 0, i32 33
  %23977 = getelementptr inbounds %struct.Reg, %struct.Reg* %23976, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %23977 to i64*
  %23978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23979 = getelementptr inbounds %struct.GPR, %struct.GPR* %23978, i32 0, i32 1
  %23980 = getelementptr inbounds %struct.Reg, %struct.Reg* %23979, i32 0, i32 0
  %EAX.i483 = bitcast %union.anon* %23980 to i32*
  %23981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23982 = getelementptr inbounds %struct.GPR, %struct.GPR* %23981, i32 0, i32 5
  %23983 = getelementptr inbounds %struct.Reg, %struct.Reg* %23982, i32 0, i32 0
  %RCX.i484 = bitcast %union.anon* %23983 to i64*
  %23984 = load i32, i32* %EAX.i483
  %23985 = zext i32 %23984 to i64
  %23986 = load i64, i64* %PC.i482
  %23987 = add i64 %23986, 3
  store i64 %23987, i64* %PC.i482
  %23988 = shl i64 %23985, 32
  %23989 = ashr exact i64 %23988, 32
  store i64 %23989, i64* %RCX.i484, align 8
  store %struct.Memory* %loadMem_476ad8, %struct.Memory** %MEMORY
  %loadMem_476adb = load %struct.Memory*, %struct.Memory** %MEMORY
  %23990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23991 = getelementptr inbounds %struct.GPR, %struct.GPR* %23990, i32 0, i32 33
  %23992 = getelementptr inbounds %struct.Reg, %struct.Reg* %23991, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %23992 to i64*
  %23993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23994 = getelementptr inbounds %struct.GPR, %struct.GPR* %23993, i32 0, i32 1
  %23995 = getelementptr inbounds %struct.Reg, %struct.Reg* %23994, i32 0, i32 0
  %RAX.i480 = bitcast %union.anon* %23995 to i64*
  %23996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23997 = getelementptr inbounds %struct.GPR, %struct.GPR* %23996, i32 0, i32 5
  %23998 = getelementptr inbounds %struct.Reg, %struct.Reg* %23997, i32 0, i32 0
  %RCX.i481 = bitcast %union.anon* %23998 to i64*
  %23999 = load i64, i64* %RCX.i481
  %24000 = add i64 %23999, 12099168
  %24001 = load i64, i64* %PC.i479
  %24002 = add i64 %24001, 8
  store i64 %24002, i64* %PC.i479
  %24003 = inttoptr i64 %24000 to i8*
  %24004 = load i8, i8* %24003
  %24005 = zext i8 %24004 to i64
  store i64 %24005, i64* %RAX.i480, align 8
  store %struct.Memory* %loadMem_476adb, %struct.Memory** %MEMORY
  %loadMem_476ae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24007 = getelementptr inbounds %struct.GPR, %struct.GPR* %24006, i32 0, i32 33
  %24008 = getelementptr inbounds %struct.Reg, %struct.Reg* %24007, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %24008 to i64*
  %24009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24010 = getelementptr inbounds %struct.GPR, %struct.GPR* %24009, i32 0, i32 1
  %24011 = getelementptr inbounds %struct.Reg, %struct.Reg* %24010, i32 0, i32 0
  %EAX.i478 = bitcast %union.anon* %24011 to i32*
  %24012 = load i32, i32* %EAX.i478
  %24013 = zext i32 %24012 to i64
  %24014 = load i64, i64* %PC.i477
  %24015 = add i64 %24014, 3
  store i64 %24015, i64* %PC.i477
  %24016 = sub i32 %24012, 3
  %24017 = icmp ult i32 %24012, 3
  %24018 = zext i1 %24017 to i8
  %24019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24018, i8* %24019, align 1
  %24020 = and i32 %24016, 255
  %24021 = call i32 @llvm.ctpop.i32(i32 %24020)
  %24022 = trunc i32 %24021 to i8
  %24023 = and i8 %24022, 1
  %24024 = xor i8 %24023, 1
  %24025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24024, i8* %24025, align 1
  %24026 = xor i64 3, %24013
  %24027 = trunc i64 %24026 to i32
  %24028 = xor i32 %24027, %24016
  %24029 = lshr i32 %24028, 4
  %24030 = trunc i32 %24029 to i8
  %24031 = and i8 %24030, 1
  %24032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24031, i8* %24032, align 1
  %24033 = icmp eq i32 %24016, 0
  %24034 = zext i1 %24033 to i8
  %24035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24034, i8* %24035, align 1
  %24036 = lshr i32 %24016, 31
  %24037 = trunc i32 %24036 to i8
  %24038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24037, i8* %24038, align 1
  %24039 = lshr i32 %24012, 31
  %24040 = xor i32 %24036, %24039
  %24041 = add i32 %24040, %24039
  %24042 = icmp eq i32 %24041, 2
  %24043 = zext i1 %24042 to i8
  %24044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24043, i8* %24044, align 1
  store %struct.Memory* %loadMem_476ae3, %struct.Memory** %MEMORY
  %loadMem_476ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24046 = getelementptr inbounds %struct.GPR, %struct.GPR* %24045, i32 0, i32 33
  %24047 = getelementptr inbounds %struct.Reg, %struct.Reg* %24046, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %24047 to i64*
  %24048 = load i64, i64* %PC.i476
  %24049 = add i64 %24048, 196
  %24050 = load i64, i64* %PC.i476
  %24051 = add i64 %24050, 6
  %24052 = load i64, i64* %PC.i476
  %24053 = add i64 %24052, 6
  store i64 %24053, i64* %PC.i476
  %24054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24055 = load i8, i8* %24054, align 1
  store i8 %24055, i8* %BRANCH_TAKEN, align 1
  %24056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24057 = icmp ne i8 %24055, 0
  %24058 = select i1 %24057, i64 %24049, i64 %24051
  store i64 %24058, i64* %24056, align 8
  store %struct.Memory* %loadMem_476ae6, %struct.Memory** %MEMORY
  %loadBr_476ae6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476ae6 = icmp eq i8 %loadBr_476ae6, 1
  br i1 %cmpBr_476ae6, label %block_.L_476baa, label %block_476aec

block_476aec:                                     ; preds = %block_476acf
  %loadMem_476aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %24059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24060 = getelementptr inbounds %struct.GPR, %struct.GPR* %24059, i32 0, i32 33
  %24061 = getelementptr inbounds %struct.Reg, %struct.Reg* %24060, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %24061 to i64*
  %24062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24063 = getelementptr inbounds %struct.GPR, %struct.GPR* %24062, i32 0, i32 1
  %24064 = getelementptr inbounds %struct.Reg, %struct.Reg* %24063, i32 0, i32 0
  %RAX.i474 = bitcast %union.anon* %24064 to i64*
  %24065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24066 = getelementptr inbounds %struct.GPR, %struct.GPR* %24065, i32 0, i32 15
  %24067 = getelementptr inbounds %struct.Reg, %struct.Reg* %24066, i32 0, i32 0
  %RBP.i475 = bitcast %union.anon* %24067 to i64*
  %24068 = load i64, i64* %RBP.i475
  %24069 = sub i64 %24068, 48
  %24070 = load i64, i64* %PC.i473
  %24071 = add i64 %24070, 3
  store i64 %24071, i64* %PC.i473
  %24072 = inttoptr i64 %24069 to i32*
  %24073 = load i32, i32* %24072
  %24074 = zext i32 %24073 to i64
  store i64 %24074, i64* %RAX.i474, align 8
  store %struct.Memory* %loadMem_476aec, %struct.Memory** %MEMORY
  %loadMem_476aef = load %struct.Memory*, %struct.Memory** %MEMORY
  %24075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24076 = getelementptr inbounds %struct.GPR, %struct.GPR* %24075, i32 0, i32 33
  %24077 = getelementptr inbounds %struct.Reg, %struct.Reg* %24076, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %24077 to i64*
  %24078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24079 = getelementptr inbounds %struct.GPR, %struct.GPR* %24078, i32 0, i32 1
  %24080 = getelementptr inbounds %struct.Reg, %struct.Reg* %24079, i32 0, i32 0
  %RAX.i472 = bitcast %union.anon* %24080 to i64*
  %24081 = load i64, i64* %RAX.i472
  %24082 = load i64, i64* %PC.i471
  %24083 = add i64 %24082, 3
  store i64 %24083, i64* %PC.i471
  %24084 = trunc i64 %24081 to i32
  %24085 = sub i32 %24084, 1
  %24086 = zext i32 %24085 to i64
  store i64 %24086, i64* %RAX.i472, align 8
  %24087 = icmp ult i32 %24084, 1
  %24088 = zext i1 %24087 to i8
  %24089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24088, i8* %24089, align 1
  %24090 = and i32 %24085, 255
  %24091 = call i32 @llvm.ctpop.i32(i32 %24090)
  %24092 = trunc i32 %24091 to i8
  %24093 = and i8 %24092, 1
  %24094 = xor i8 %24093, 1
  %24095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24094, i8* %24095, align 1
  %24096 = xor i64 1, %24081
  %24097 = trunc i64 %24096 to i32
  %24098 = xor i32 %24097, %24085
  %24099 = lshr i32 %24098, 4
  %24100 = trunc i32 %24099 to i8
  %24101 = and i8 %24100, 1
  %24102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24101, i8* %24102, align 1
  %24103 = icmp eq i32 %24085, 0
  %24104 = zext i1 %24103 to i8
  %24105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24104, i8* %24105, align 1
  %24106 = lshr i32 %24085, 31
  %24107 = trunc i32 %24106 to i8
  %24108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24107, i8* %24108, align 1
  %24109 = lshr i32 %24084, 31
  %24110 = xor i32 %24106, %24109
  %24111 = add i32 %24110, %24109
  %24112 = icmp eq i32 %24111, 2
  %24113 = zext i1 %24112 to i8
  %24114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24113, i8* %24114, align 1
  store %struct.Memory* %loadMem_476aef, %struct.Memory** %MEMORY
  %loadMem_476af2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24116 = getelementptr inbounds %struct.GPR, %struct.GPR* %24115, i32 0, i32 33
  %24117 = getelementptr inbounds %struct.Reg, %struct.Reg* %24116, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %24117 to i64*
  %24118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24119 = getelementptr inbounds %struct.GPR, %struct.GPR* %24118, i32 0, i32 1
  %24120 = getelementptr inbounds %struct.Reg, %struct.Reg* %24119, i32 0, i32 0
  %RAX.i470 = bitcast %union.anon* %24120 to i64*
  %24121 = load i64, i64* %RAX.i470
  %24122 = load i64, i64* %PC.i469
  %24123 = add i64 %24122, 3
  store i64 %24123, i64* %PC.i469
  %24124 = trunc i64 %24121 to i32
  %24125 = sub i32 %24124, 1
  %24126 = zext i32 %24125 to i64
  store i64 %24126, i64* %RAX.i470, align 8
  %24127 = icmp ult i32 %24124, 1
  %24128 = zext i1 %24127 to i8
  %24129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24128, i8* %24129, align 1
  %24130 = and i32 %24125, 255
  %24131 = call i32 @llvm.ctpop.i32(i32 %24130)
  %24132 = trunc i32 %24131 to i8
  %24133 = and i8 %24132, 1
  %24134 = xor i8 %24133, 1
  %24135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24134, i8* %24135, align 1
  %24136 = xor i64 1, %24121
  %24137 = trunc i64 %24136 to i32
  %24138 = xor i32 %24137, %24125
  %24139 = lshr i32 %24138, 4
  %24140 = trunc i32 %24139 to i8
  %24141 = and i8 %24140, 1
  %24142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24141, i8* %24142, align 1
  %24143 = icmp eq i32 %24125, 0
  %24144 = zext i1 %24143 to i8
  %24145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24144, i8* %24145, align 1
  %24146 = lshr i32 %24125, 31
  %24147 = trunc i32 %24146 to i8
  %24148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24147, i8* %24148, align 1
  %24149 = lshr i32 %24124, 31
  %24150 = xor i32 %24146, %24149
  %24151 = add i32 %24150, %24149
  %24152 = icmp eq i32 %24151, 2
  %24153 = zext i1 %24152 to i8
  %24154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24153, i8* %24154, align 1
  store %struct.Memory* %loadMem_476af2, %struct.Memory** %MEMORY
  %loadMem_476af5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24156 = getelementptr inbounds %struct.GPR, %struct.GPR* %24155, i32 0, i32 33
  %24157 = getelementptr inbounds %struct.Reg, %struct.Reg* %24156, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %24157 to i64*
  %24158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24159 = getelementptr inbounds %struct.GPR, %struct.GPR* %24158, i32 0, i32 1
  %24160 = getelementptr inbounds %struct.Reg, %struct.Reg* %24159, i32 0, i32 0
  %EAX.i467 = bitcast %union.anon* %24160 to i32*
  %24161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24162 = getelementptr inbounds %struct.GPR, %struct.GPR* %24161, i32 0, i32 5
  %24163 = getelementptr inbounds %struct.Reg, %struct.Reg* %24162, i32 0, i32 0
  %RCX.i468 = bitcast %union.anon* %24163 to i64*
  %24164 = load i32, i32* %EAX.i467
  %24165 = zext i32 %24164 to i64
  %24166 = load i64, i64* %PC.i466
  %24167 = add i64 %24166, 3
  store i64 %24167, i64* %PC.i466
  %24168 = shl i64 %24165, 32
  %24169 = ashr exact i64 %24168, 32
  store i64 %24169, i64* %RCX.i468, align 8
  store %struct.Memory* %loadMem_476af5, %struct.Memory** %MEMORY
  %loadMem_476af8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24171 = getelementptr inbounds %struct.GPR, %struct.GPR* %24170, i32 0, i32 33
  %24172 = getelementptr inbounds %struct.Reg, %struct.Reg* %24171, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %24172 to i64*
  %24173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24174 = getelementptr inbounds %struct.GPR, %struct.GPR* %24173, i32 0, i32 1
  %24175 = getelementptr inbounds %struct.Reg, %struct.Reg* %24174, i32 0, i32 0
  %RAX.i464 = bitcast %union.anon* %24175 to i64*
  %24176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24177 = getelementptr inbounds %struct.GPR, %struct.GPR* %24176, i32 0, i32 5
  %24178 = getelementptr inbounds %struct.Reg, %struct.Reg* %24177, i32 0, i32 0
  %RCX.i465 = bitcast %union.anon* %24178 to i64*
  %24179 = load i64, i64* %RCX.i465
  %24180 = add i64 %24179, 12099168
  %24181 = load i64, i64* %PC.i463
  %24182 = add i64 %24181, 8
  store i64 %24182, i64* %PC.i463
  %24183 = inttoptr i64 %24180 to i8*
  %24184 = load i8, i8* %24183
  %24185 = zext i8 %24184 to i64
  store i64 %24185, i64* %RAX.i464, align 8
  store %struct.Memory* %loadMem_476af8, %struct.Memory** %MEMORY
  %loadMem_476b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24187 = getelementptr inbounds %struct.GPR, %struct.GPR* %24186, i32 0, i32 33
  %24188 = getelementptr inbounds %struct.Reg, %struct.Reg* %24187, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %24188 to i64*
  %24189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24190 = getelementptr inbounds %struct.GPR, %struct.GPR* %24189, i32 0, i32 1
  %24191 = getelementptr inbounds %struct.Reg, %struct.Reg* %24190, i32 0, i32 0
  %EAX.i461 = bitcast %union.anon* %24191 to i32*
  %24192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24193 = getelementptr inbounds %struct.GPR, %struct.GPR* %24192, i32 0, i32 15
  %24194 = getelementptr inbounds %struct.Reg, %struct.Reg* %24193, i32 0, i32 0
  %RBP.i462 = bitcast %union.anon* %24194 to i64*
  %24195 = load i32, i32* %EAX.i461
  %24196 = zext i32 %24195 to i64
  %24197 = load i64, i64* %RBP.i462
  %24198 = sub i64 %24197, 228
  %24199 = load i64, i64* %PC.i460
  %24200 = add i64 %24199, 6
  store i64 %24200, i64* %PC.i460
  %24201 = inttoptr i64 %24198 to i32*
  %24202 = load i32, i32* %24201
  %24203 = sub i32 %24195, %24202
  %24204 = icmp ult i32 %24195, %24202
  %24205 = zext i1 %24204 to i8
  %24206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24205, i8* %24206, align 1
  %24207 = and i32 %24203, 255
  %24208 = call i32 @llvm.ctpop.i32(i32 %24207)
  %24209 = trunc i32 %24208 to i8
  %24210 = and i8 %24209, 1
  %24211 = xor i8 %24210, 1
  %24212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24211, i8* %24212, align 1
  %24213 = xor i32 %24202, %24195
  %24214 = xor i32 %24213, %24203
  %24215 = lshr i32 %24214, 4
  %24216 = trunc i32 %24215 to i8
  %24217 = and i8 %24216, 1
  %24218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24217, i8* %24218, align 1
  %24219 = icmp eq i32 %24203, 0
  %24220 = zext i1 %24219 to i8
  %24221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24220, i8* %24221, align 1
  %24222 = lshr i32 %24203, 31
  %24223 = trunc i32 %24222 to i8
  %24224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24223, i8* %24224, align 1
  %24225 = lshr i32 %24195, 31
  %24226 = lshr i32 %24202, 31
  %24227 = xor i32 %24226, %24225
  %24228 = xor i32 %24222, %24225
  %24229 = add i32 %24228, %24227
  %24230 = icmp eq i32 %24229, 2
  %24231 = zext i1 %24230 to i8
  %24232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24231, i8* %24232, align 1
  store %struct.Memory* %loadMem_476b00, %struct.Memory** %MEMORY
  %loadMem_476b06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24234 = getelementptr inbounds %struct.GPR, %struct.GPR* %24233, i32 0, i32 33
  %24235 = getelementptr inbounds %struct.Reg, %struct.Reg* %24234, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %24235 to i64*
  %24236 = load i64, i64* %PC.i459
  %24237 = add i64 %24236, 164
  %24238 = load i64, i64* %PC.i459
  %24239 = add i64 %24238, 6
  %24240 = load i64, i64* %PC.i459
  %24241 = add i64 %24240, 6
  store i64 %24241, i64* %PC.i459
  %24242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24243 = load i8, i8* %24242, align 1
  %24244 = icmp eq i8 %24243, 0
  %24245 = zext i1 %24244 to i8
  store i8 %24245, i8* %BRANCH_TAKEN, align 1
  %24246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24247 = select i1 %24244, i64 %24237, i64 %24239
  store i64 %24247, i64* %24246, align 8
  store %struct.Memory* %loadMem_476b06, %struct.Memory** %MEMORY
  %loadBr_476b06 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476b06 = icmp eq i8 %loadBr_476b06, 1
  br i1 %cmpBr_476b06, label %block_.L_476baa, label %block_476b0c

block_476b0c:                                     ; preds = %block_476aec
  %loadMem_476b0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %24248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24249 = getelementptr inbounds %struct.GPR, %struct.GPR* %24248, i32 0, i32 33
  %24250 = getelementptr inbounds %struct.Reg, %struct.Reg* %24249, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %24250 to i64*
  %24251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24252 = getelementptr inbounds %struct.GPR, %struct.GPR* %24251, i32 0, i32 1
  %24253 = getelementptr inbounds %struct.Reg, %struct.Reg* %24252, i32 0, i32 0
  %RAX.i457 = bitcast %union.anon* %24253 to i64*
  %24254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24255 = getelementptr inbounds %struct.GPR, %struct.GPR* %24254, i32 0, i32 15
  %24256 = getelementptr inbounds %struct.Reg, %struct.Reg* %24255, i32 0, i32 0
  %RBP.i458 = bitcast %union.anon* %24256 to i64*
  %24257 = load i64, i64* %RBP.i458
  %24258 = sub i64 %24257, 48
  %24259 = load i64, i64* %PC.i456
  %24260 = add i64 %24259, 3
  store i64 %24260, i64* %PC.i456
  %24261 = inttoptr i64 %24258 to i32*
  %24262 = load i32, i32* %24261
  %24263 = zext i32 %24262 to i64
  store i64 %24263, i64* %RAX.i457, align 8
  store %struct.Memory* %loadMem_476b0c, %struct.Memory** %MEMORY
  %loadMem_476b0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24265 = getelementptr inbounds %struct.GPR, %struct.GPR* %24264, i32 0, i32 33
  %24266 = getelementptr inbounds %struct.Reg, %struct.Reg* %24265, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %24266 to i64*
  %24267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24268 = getelementptr inbounds %struct.GPR, %struct.GPR* %24267, i32 0, i32 1
  %24269 = getelementptr inbounds %struct.Reg, %struct.Reg* %24268, i32 0, i32 0
  %RAX.i455 = bitcast %union.anon* %24269 to i64*
  %24270 = load i64, i64* %RAX.i455
  %24271 = load i64, i64* %PC.i454
  %24272 = add i64 %24271, 3
  store i64 %24272, i64* %PC.i454
  %24273 = trunc i64 %24270 to i32
  %24274 = sub i32 %24273, 1
  %24275 = zext i32 %24274 to i64
  store i64 %24275, i64* %RAX.i455, align 8
  %24276 = icmp ult i32 %24273, 1
  %24277 = zext i1 %24276 to i8
  %24278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24277, i8* %24278, align 1
  %24279 = and i32 %24274, 255
  %24280 = call i32 @llvm.ctpop.i32(i32 %24279)
  %24281 = trunc i32 %24280 to i8
  %24282 = and i8 %24281, 1
  %24283 = xor i8 %24282, 1
  %24284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24283, i8* %24284, align 1
  %24285 = xor i64 1, %24270
  %24286 = trunc i64 %24285 to i32
  %24287 = xor i32 %24286, %24274
  %24288 = lshr i32 %24287, 4
  %24289 = trunc i32 %24288 to i8
  %24290 = and i8 %24289, 1
  %24291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24290, i8* %24291, align 1
  %24292 = icmp eq i32 %24274, 0
  %24293 = zext i1 %24292 to i8
  %24294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24293, i8* %24294, align 1
  %24295 = lshr i32 %24274, 31
  %24296 = trunc i32 %24295 to i8
  %24297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24296, i8* %24297, align 1
  %24298 = lshr i32 %24273, 31
  %24299 = xor i32 %24295, %24298
  %24300 = add i32 %24299, %24298
  %24301 = icmp eq i32 %24300, 2
  %24302 = zext i1 %24301 to i8
  %24303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24302, i8* %24303, align 1
  store %struct.Memory* %loadMem_476b0f, %struct.Memory** %MEMORY
  %loadMem_476b12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24305 = getelementptr inbounds %struct.GPR, %struct.GPR* %24304, i32 0, i32 33
  %24306 = getelementptr inbounds %struct.Reg, %struct.Reg* %24305, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %24306 to i64*
  %24307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24308 = getelementptr inbounds %struct.GPR, %struct.GPR* %24307, i32 0, i32 1
  %24309 = getelementptr inbounds %struct.Reg, %struct.Reg* %24308, i32 0, i32 0
  %RAX.i453 = bitcast %union.anon* %24309 to i64*
  %24310 = load i64, i64* %RAX.i453
  %24311 = load i64, i64* %PC.i452
  %24312 = add i64 %24311, 3
  store i64 %24312, i64* %PC.i452
  %24313 = trunc i64 %24310 to i32
  %24314 = sub i32 %24313, 1
  %24315 = zext i32 %24314 to i64
  store i64 %24315, i64* %RAX.i453, align 8
  %24316 = icmp ult i32 %24313, 1
  %24317 = zext i1 %24316 to i8
  %24318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24317, i8* %24318, align 1
  %24319 = and i32 %24314, 255
  %24320 = call i32 @llvm.ctpop.i32(i32 %24319)
  %24321 = trunc i32 %24320 to i8
  %24322 = and i8 %24321, 1
  %24323 = xor i8 %24322, 1
  %24324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24323, i8* %24324, align 1
  %24325 = xor i64 1, %24310
  %24326 = trunc i64 %24325 to i32
  %24327 = xor i32 %24326, %24314
  %24328 = lshr i32 %24327, 4
  %24329 = trunc i32 %24328 to i8
  %24330 = and i8 %24329, 1
  %24331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24330, i8* %24331, align 1
  %24332 = icmp eq i32 %24314, 0
  %24333 = zext i1 %24332 to i8
  %24334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24333, i8* %24334, align 1
  %24335 = lshr i32 %24314, 31
  %24336 = trunc i32 %24335 to i8
  %24337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24336, i8* %24337, align 1
  %24338 = lshr i32 %24313, 31
  %24339 = xor i32 %24335, %24338
  %24340 = add i32 %24339, %24338
  %24341 = icmp eq i32 %24340, 2
  %24342 = zext i1 %24341 to i8
  %24343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24342, i8* %24343, align 1
  store %struct.Memory* %loadMem_476b12, %struct.Memory** %MEMORY
  %loadMem_476b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24345 = getelementptr inbounds %struct.GPR, %struct.GPR* %24344, i32 0, i32 33
  %24346 = getelementptr inbounds %struct.Reg, %struct.Reg* %24345, i32 0, i32 0
  %PC.i449 = bitcast %union.anon* %24346 to i64*
  %24347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24348 = getelementptr inbounds %struct.GPR, %struct.GPR* %24347, i32 0, i32 1
  %24349 = getelementptr inbounds %struct.Reg, %struct.Reg* %24348, i32 0, i32 0
  %EAX.i450 = bitcast %union.anon* %24349 to i32*
  %24350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24351 = getelementptr inbounds %struct.GPR, %struct.GPR* %24350, i32 0, i32 5
  %24352 = getelementptr inbounds %struct.Reg, %struct.Reg* %24351, i32 0, i32 0
  %RCX.i451 = bitcast %union.anon* %24352 to i64*
  %24353 = load i32, i32* %EAX.i450
  %24354 = zext i32 %24353 to i64
  %24355 = load i64, i64* %PC.i449
  %24356 = add i64 %24355, 3
  store i64 %24356, i64* %PC.i449
  %24357 = shl i64 %24354, 32
  %24358 = ashr exact i64 %24357, 32
  store i64 %24358, i64* %RCX.i451, align 8
  store %struct.Memory* %loadMem_476b15, %struct.Memory** %MEMORY
  %loadMem_476b18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24360 = getelementptr inbounds %struct.GPR, %struct.GPR* %24359, i32 0, i32 33
  %24361 = getelementptr inbounds %struct.Reg, %struct.Reg* %24360, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %24361 to i64*
  %24362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24363 = getelementptr inbounds %struct.GPR, %struct.GPR* %24362, i32 0, i32 1
  %24364 = getelementptr inbounds %struct.Reg, %struct.Reg* %24363, i32 0, i32 0
  %RAX.i446 = bitcast %union.anon* %24364 to i64*
  %24365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24366 = getelementptr inbounds %struct.GPR, %struct.GPR* %24365, i32 0, i32 5
  %24367 = getelementptr inbounds %struct.Reg, %struct.Reg* %24366, i32 0, i32 0
  %RCX.i447 = bitcast %union.anon* %24367 to i64*
  %24368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24369 = getelementptr inbounds %struct.GPR, %struct.GPR* %24368, i32 0, i32 15
  %24370 = getelementptr inbounds %struct.Reg, %struct.Reg* %24369, i32 0, i32 0
  %RBP.i448 = bitcast %union.anon* %24370 to i64*
  %24371 = load i64, i64* %RBP.i448
  %24372 = load i64, i64* %RCX.i447
  %24373 = add i64 %24371, -1040
  %24374 = add i64 %24373, %24372
  %24375 = load i64, i64* %PC.i445
  %24376 = add i64 %24375, 8
  store i64 %24376, i64* %PC.i445
  %24377 = inttoptr i64 %24374 to i8*
  %24378 = load i8, i8* %24377
  %24379 = sext i8 %24378 to i64
  %24380 = and i64 %24379, 4294967295
  store i64 %24380, i64* %RAX.i446, align 8
  store %struct.Memory* %loadMem_476b18, %struct.Memory** %MEMORY
  %loadMem_476b20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24382 = getelementptr inbounds %struct.GPR, %struct.GPR* %24381, i32 0, i32 33
  %24383 = getelementptr inbounds %struct.Reg, %struct.Reg* %24382, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %24383 to i64*
  %24384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24385 = getelementptr inbounds %struct.GPR, %struct.GPR* %24384, i32 0, i32 1
  %24386 = getelementptr inbounds %struct.Reg, %struct.Reg* %24385, i32 0, i32 0
  %EAX.i444 = bitcast %union.anon* %24386 to i32*
  %24387 = load i32, i32* %EAX.i444
  %24388 = zext i32 %24387 to i64
  %24389 = load i64, i64* %PC.i443
  %24390 = add i64 %24389, 3
  store i64 %24390, i64* %PC.i443
  %24391 = sub i32 %24387, 1
  %24392 = icmp ult i32 %24387, 1
  %24393 = zext i1 %24392 to i8
  %24394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24393, i8* %24394, align 1
  %24395 = and i32 %24391, 255
  %24396 = call i32 @llvm.ctpop.i32(i32 %24395)
  %24397 = trunc i32 %24396 to i8
  %24398 = and i8 %24397, 1
  %24399 = xor i8 %24398, 1
  %24400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24399, i8* %24400, align 1
  %24401 = xor i64 1, %24388
  %24402 = trunc i64 %24401 to i32
  %24403 = xor i32 %24402, %24391
  %24404 = lshr i32 %24403, 4
  %24405 = trunc i32 %24404 to i8
  %24406 = and i8 %24405, 1
  %24407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24406, i8* %24407, align 1
  %24408 = icmp eq i32 %24391, 0
  %24409 = zext i1 %24408 to i8
  %24410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24409, i8* %24410, align 1
  %24411 = lshr i32 %24391, 31
  %24412 = trunc i32 %24411 to i8
  %24413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24412, i8* %24413, align 1
  %24414 = lshr i32 %24387, 31
  %24415 = xor i32 %24411, %24414
  %24416 = add i32 %24415, %24414
  %24417 = icmp eq i32 %24416, 2
  %24418 = zext i1 %24417 to i8
  %24419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24418, i8* %24419, align 1
  store %struct.Memory* %loadMem_476b20, %struct.Memory** %MEMORY
  %loadMem_476b23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24421 = getelementptr inbounds %struct.GPR, %struct.GPR* %24420, i32 0, i32 33
  %24422 = getelementptr inbounds %struct.Reg, %struct.Reg* %24421, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %24422 to i64*
  %24423 = load i64, i64* %PC.i442
  %24424 = add i64 %24423, 135
  %24425 = load i64, i64* %PC.i442
  %24426 = add i64 %24425, 6
  %24427 = load i64, i64* %PC.i442
  %24428 = add i64 %24427, 6
  store i64 %24428, i64* %PC.i442
  %24429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24430 = load i8, i8* %24429, align 1
  store i8 %24430, i8* %BRANCH_TAKEN, align 1
  %24431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24432 = icmp ne i8 %24430, 0
  %24433 = select i1 %24432, i64 %24424, i64 %24426
  store i64 %24433, i64* %24431, align 8
  store %struct.Memory* %loadMem_476b23, %struct.Memory** %MEMORY
  %loadBr_476b23 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476b23 = icmp eq i8 %loadBr_476b23, 1
  br i1 %cmpBr_476b23, label %block_.L_476baa, label %block_476b29

block_476b29:                                     ; preds = %block_476b0c
  %loadMem_476b29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24435 = getelementptr inbounds %struct.GPR, %struct.GPR* %24434, i32 0, i32 33
  %24436 = getelementptr inbounds %struct.Reg, %struct.Reg* %24435, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %24436 to i64*
  %24437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24438 = getelementptr inbounds %struct.GPR, %struct.GPR* %24437, i32 0, i32 1
  %24439 = getelementptr inbounds %struct.Reg, %struct.Reg* %24438, i32 0, i32 0
  %RAX.i440 = bitcast %union.anon* %24439 to i64*
  %24440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24441 = getelementptr inbounds %struct.GPR, %struct.GPR* %24440, i32 0, i32 15
  %24442 = getelementptr inbounds %struct.Reg, %struct.Reg* %24441, i32 0, i32 0
  %RBP.i441 = bitcast %union.anon* %24442 to i64*
  %24443 = load i64, i64* %RBP.i441
  %24444 = sub i64 %24443, 48
  %24445 = load i64, i64* %PC.i439
  %24446 = add i64 %24445, 3
  store i64 %24446, i64* %PC.i439
  %24447 = inttoptr i64 %24444 to i32*
  %24448 = load i32, i32* %24447
  %24449 = zext i32 %24448 to i64
  store i64 %24449, i64* %RAX.i440, align 8
  store %struct.Memory* %loadMem_476b29, %struct.Memory** %MEMORY
  %loadMem_476b2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %24450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24451 = getelementptr inbounds %struct.GPR, %struct.GPR* %24450, i32 0, i32 33
  %24452 = getelementptr inbounds %struct.Reg, %struct.Reg* %24451, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %24452 to i64*
  %24453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24454 = getelementptr inbounds %struct.GPR, %struct.GPR* %24453, i32 0, i32 1
  %24455 = getelementptr inbounds %struct.Reg, %struct.Reg* %24454, i32 0, i32 0
  %RAX.i438 = bitcast %union.anon* %24455 to i64*
  %24456 = load i64, i64* %RAX.i438
  %24457 = load i64, i64* %PC.i437
  %24458 = add i64 %24457, 3
  store i64 %24458, i64* %PC.i437
  %24459 = trunc i64 %24456 to i32
  %24460 = sub i32 %24459, 1
  %24461 = zext i32 %24460 to i64
  store i64 %24461, i64* %RAX.i438, align 8
  %24462 = icmp ult i32 %24459, 1
  %24463 = zext i1 %24462 to i8
  %24464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24463, i8* %24464, align 1
  %24465 = and i32 %24460, 255
  %24466 = call i32 @llvm.ctpop.i32(i32 %24465)
  %24467 = trunc i32 %24466 to i8
  %24468 = and i8 %24467, 1
  %24469 = xor i8 %24468, 1
  %24470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24469, i8* %24470, align 1
  %24471 = xor i64 1, %24456
  %24472 = trunc i64 %24471 to i32
  %24473 = xor i32 %24472, %24460
  %24474 = lshr i32 %24473, 4
  %24475 = trunc i32 %24474 to i8
  %24476 = and i8 %24475, 1
  %24477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24476, i8* %24477, align 1
  %24478 = icmp eq i32 %24460, 0
  %24479 = zext i1 %24478 to i8
  %24480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24479, i8* %24480, align 1
  %24481 = lshr i32 %24460, 31
  %24482 = trunc i32 %24481 to i8
  %24483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24482, i8* %24483, align 1
  %24484 = lshr i32 %24459, 31
  %24485 = xor i32 %24481, %24484
  %24486 = add i32 %24485, %24484
  %24487 = icmp eq i32 %24486, 2
  %24488 = zext i1 %24487 to i8
  %24489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24488, i8* %24489, align 1
  store %struct.Memory* %loadMem_476b2c, %struct.Memory** %MEMORY
  %loadMem_476b2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24491 = getelementptr inbounds %struct.GPR, %struct.GPR* %24490, i32 0, i32 33
  %24492 = getelementptr inbounds %struct.Reg, %struct.Reg* %24491, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %24492 to i64*
  %24493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24494 = getelementptr inbounds %struct.GPR, %struct.GPR* %24493, i32 0, i32 1
  %24495 = getelementptr inbounds %struct.Reg, %struct.Reg* %24494, i32 0, i32 0
  %RAX.i436 = bitcast %union.anon* %24495 to i64*
  %24496 = load i64, i64* %RAX.i436
  %24497 = load i64, i64* %PC.i435
  %24498 = add i64 %24497, 3
  store i64 %24498, i64* %PC.i435
  %24499 = trunc i64 %24496 to i32
  %24500 = sub i32 %24499, 20
  %24501 = zext i32 %24500 to i64
  store i64 %24501, i64* %RAX.i436, align 8
  %24502 = icmp ult i32 %24499, 20
  %24503 = zext i1 %24502 to i8
  %24504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24503, i8* %24504, align 1
  %24505 = and i32 %24500, 255
  %24506 = call i32 @llvm.ctpop.i32(i32 %24505)
  %24507 = trunc i32 %24506 to i8
  %24508 = and i8 %24507, 1
  %24509 = xor i8 %24508, 1
  %24510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24509, i8* %24510, align 1
  %24511 = xor i64 20, %24496
  %24512 = trunc i64 %24511 to i32
  %24513 = xor i32 %24512, %24500
  %24514 = lshr i32 %24513, 4
  %24515 = trunc i32 %24514 to i8
  %24516 = and i8 %24515, 1
  %24517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24516, i8* %24517, align 1
  %24518 = icmp eq i32 %24500, 0
  %24519 = zext i1 %24518 to i8
  %24520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24519, i8* %24520, align 1
  %24521 = lshr i32 %24500, 31
  %24522 = trunc i32 %24521 to i8
  %24523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24522, i8* %24523, align 1
  %24524 = lshr i32 %24499, 31
  %24525 = xor i32 %24521, %24524
  %24526 = add i32 %24525, %24524
  %24527 = icmp eq i32 %24526, 2
  %24528 = zext i1 %24527 to i8
  %24529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24528, i8* %24529, align 1
  store %struct.Memory* %loadMem_476b2f, %struct.Memory** %MEMORY
  %loadMem_476b32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24531 = getelementptr inbounds %struct.GPR, %struct.GPR* %24530, i32 0, i32 33
  %24532 = getelementptr inbounds %struct.Reg, %struct.Reg* %24531, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %24532 to i64*
  %24533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24534 = getelementptr inbounds %struct.GPR, %struct.GPR* %24533, i32 0, i32 1
  %24535 = getelementptr inbounds %struct.Reg, %struct.Reg* %24534, i32 0, i32 0
  %EAX.i433 = bitcast %union.anon* %24535 to i32*
  %24536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24537 = getelementptr inbounds %struct.GPR, %struct.GPR* %24536, i32 0, i32 5
  %24538 = getelementptr inbounds %struct.Reg, %struct.Reg* %24537, i32 0, i32 0
  %RCX.i434 = bitcast %union.anon* %24538 to i64*
  %24539 = load i32, i32* %EAX.i433
  %24540 = zext i32 %24539 to i64
  %24541 = load i64, i64* %PC.i432
  %24542 = add i64 %24541, 3
  store i64 %24542, i64* %PC.i432
  %24543 = shl i64 %24540, 32
  %24544 = ashr exact i64 %24543, 32
  store i64 %24544, i64* %RCX.i434, align 8
  store %struct.Memory* %loadMem_476b32, %struct.Memory** %MEMORY
  %loadMem_476b35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24546 = getelementptr inbounds %struct.GPR, %struct.GPR* %24545, i32 0, i32 33
  %24547 = getelementptr inbounds %struct.Reg, %struct.Reg* %24546, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %24547 to i64*
  %24548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24549 = getelementptr inbounds %struct.GPR, %struct.GPR* %24548, i32 0, i32 1
  %24550 = getelementptr inbounds %struct.Reg, %struct.Reg* %24549, i32 0, i32 0
  %RAX.i430 = bitcast %union.anon* %24550 to i64*
  %24551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24552 = getelementptr inbounds %struct.GPR, %struct.GPR* %24551, i32 0, i32 5
  %24553 = getelementptr inbounds %struct.Reg, %struct.Reg* %24552, i32 0, i32 0
  %RCX.i431 = bitcast %union.anon* %24553 to i64*
  %24554 = load i64, i64* %RCX.i431
  %24555 = add i64 %24554, 12099168
  %24556 = load i64, i64* %PC.i429
  %24557 = add i64 %24556, 8
  store i64 %24557, i64* %PC.i429
  %24558 = inttoptr i64 %24555 to i8*
  %24559 = load i8, i8* %24558
  %24560 = zext i8 %24559 to i64
  store i64 %24560, i64* %RAX.i430, align 8
  store %struct.Memory* %loadMem_476b35, %struct.Memory** %MEMORY
  %loadMem_476b3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %24561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24562 = getelementptr inbounds %struct.GPR, %struct.GPR* %24561, i32 0, i32 33
  %24563 = getelementptr inbounds %struct.Reg, %struct.Reg* %24562, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %24563 to i64*
  %24564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24565 = getelementptr inbounds %struct.GPR, %struct.GPR* %24564, i32 0, i32 1
  %24566 = getelementptr inbounds %struct.Reg, %struct.Reg* %24565, i32 0, i32 0
  %EAX.i428 = bitcast %union.anon* %24566 to i32*
  %24567 = load i32, i32* %EAX.i428
  %24568 = zext i32 %24567 to i64
  %24569 = load i64, i64* %PC.i427
  %24570 = add i64 %24569, 3
  store i64 %24570, i64* %PC.i427
  %24571 = sub i32 %24567, 3
  %24572 = icmp ult i32 %24567, 3
  %24573 = zext i1 %24572 to i8
  %24574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24573, i8* %24574, align 1
  %24575 = and i32 %24571, 255
  %24576 = call i32 @llvm.ctpop.i32(i32 %24575)
  %24577 = trunc i32 %24576 to i8
  %24578 = and i8 %24577, 1
  %24579 = xor i8 %24578, 1
  %24580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24579, i8* %24580, align 1
  %24581 = xor i64 3, %24568
  %24582 = trunc i64 %24581 to i32
  %24583 = xor i32 %24582, %24571
  %24584 = lshr i32 %24583, 4
  %24585 = trunc i32 %24584 to i8
  %24586 = and i8 %24585, 1
  %24587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24586, i8* %24587, align 1
  %24588 = icmp eq i32 %24571, 0
  %24589 = zext i1 %24588 to i8
  %24590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24589, i8* %24590, align 1
  %24591 = lshr i32 %24571, 31
  %24592 = trunc i32 %24591 to i8
  %24593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24592, i8* %24593, align 1
  %24594 = lshr i32 %24567, 31
  %24595 = xor i32 %24591, %24594
  %24596 = add i32 %24595, %24594
  %24597 = icmp eq i32 %24596, 2
  %24598 = zext i1 %24597 to i8
  %24599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24598, i8* %24599, align 1
  store %struct.Memory* %loadMem_476b3d, %struct.Memory** %MEMORY
  %loadMem_476b40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24601 = getelementptr inbounds %struct.GPR, %struct.GPR* %24600, i32 0, i32 33
  %24602 = getelementptr inbounds %struct.Reg, %struct.Reg* %24601, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %24602 to i64*
  %24603 = load i64, i64* %PC.i426
  %24604 = add i64 %24603, 106
  %24605 = load i64, i64* %PC.i426
  %24606 = add i64 %24605, 6
  %24607 = load i64, i64* %PC.i426
  %24608 = add i64 %24607, 6
  store i64 %24608, i64* %PC.i426
  %24609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24610 = load i8, i8* %24609, align 1
  store i8 %24610, i8* %BRANCH_TAKEN, align 1
  %24611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24612 = icmp ne i8 %24610, 0
  %24613 = select i1 %24612, i64 %24604, i64 %24606
  store i64 %24613, i64* %24611, align 8
  store %struct.Memory* %loadMem_476b40, %struct.Memory** %MEMORY
  %loadBr_476b40 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476b40 = icmp eq i8 %loadBr_476b40, 1
  br i1 %cmpBr_476b40, label %block_.L_476baa, label %block_476b46

block_476b46:                                     ; preds = %block_476b29
  %loadMem_476b46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24615 = getelementptr inbounds %struct.GPR, %struct.GPR* %24614, i32 0, i32 33
  %24616 = getelementptr inbounds %struct.Reg, %struct.Reg* %24615, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %24616 to i64*
  %24617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24618 = getelementptr inbounds %struct.GPR, %struct.GPR* %24617, i32 0, i32 1
  %24619 = getelementptr inbounds %struct.Reg, %struct.Reg* %24618, i32 0, i32 0
  %RAX.i424 = bitcast %union.anon* %24619 to i64*
  %24620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24621 = getelementptr inbounds %struct.GPR, %struct.GPR* %24620, i32 0, i32 15
  %24622 = getelementptr inbounds %struct.Reg, %struct.Reg* %24621, i32 0, i32 0
  %RBP.i425 = bitcast %union.anon* %24622 to i64*
  %24623 = load i64, i64* %RBP.i425
  %24624 = sub i64 %24623, 48
  %24625 = load i64, i64* %PC.i423
  %24626 = add i64 %24625, 3
  store i64 %24626, i64* %PC.i423
  %24627 = inttoptr i64 %24624 to i32*
  %24628 = load i32, i32* %24627
  %24629 = zext i32 %24628 to i64
  store i64 %24629, i64* %RAX.i424, align 8
  store %struct.Memory* %loadMem_476b46, %struct.Memory** %MEMORY
  %loadMem_476b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24631 = getelementptr inbounds %struct.GPR, %struct.GPR* %24630, i32 0, i32 33
  %24632 = getelementptr inbounds %struct.Reg, %struct.Reg* %24631, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %24632 to i64*
  %24633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24634 = getelementptr inbounds %struct.GPR, %struct.GPR* %24633, i32 0, i32 1
  %24635 = getelementptr inbounds %struct.Reg, %struct.Reg* %24634, i32 0, i32 0
  %RAX.i422 = bitcast %union.anon* %24635 to i64*
  %24636 = load i64, i64* %RAX.i422
  %24637 = load i64, i64* %PC.i421
  %24638 = add i64 %24637, 3
  store i64 %24638, i64* %PC.i421
  %24639 = trunc i64 %24636 to i32
  %24640 = sub i32 %24639, 1
  %24641 = zext i32 %24640 to i64
  store i64 %24641, i64* %RAX.i422, align 8
  %24642 = icmp ult i32 %24639, 1
  %24643 = zext i1 %24642 to i8
  %24644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24643, i8* %24644, align 1
  %24645 = and i32 %24640, 255
  %24646 = call i32 @llvm.ctpop.i32(i32 %24645)
  %24647 = trunc i32 %24646 to i8
  %24648 = and i8 %24647, 1
  %24649 = xor i8 %24648, 1
  %24650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24649, i8* %24650, align 1
  %24651 = xor i64 1, %24636
  %24652 = trunc i64 %24651 to i32
  %24653 = xor i32 %24652, %24640
  %24654 = lshr i32 %24653, 4
  %24655 = trunc i32 %24654 to i8
  %24656 = and i8 %24655, 1
  %24657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24656, i8* %24657, align 1
  %24658 = icmp eq i32 %24640, 0
  %24659 = zext i1 %24658 to i8
  %24660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24659, i8* %24660, align 1
  %24661 = lshr i32 %24640, 31
  %24662 = trunc i32 %24661 to i8
  %24663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24662, i8* %24663, align 1
  %24664 = lshr i32 %24639, 31
  %24665 = xor i32 %24661, %24664
  %24666 = add i32 %24665, %24664
  %24667 = icmp eq i32 %24666, 2
  %24668 = zext i1 %24667 to i8
  %24669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24668, i8* %24669, align 1
  store %struct.Memory* %loadMem_476b49, %struct.Memory** %MEMORY
  %loadMem_476b4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %24670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24671 = getelementptr inbounds %struct.GPR, %struct.GPR* %24670, i32 0, i32 33
  %24672 = getelementptr inbounds %struct.Reg, %struct.Reg* %24671, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %24672 to i64*
  %24673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24674 = getelementptr inbounds %struct.GPR, %struct.GPR* %24673, i32 0, i32 1
  %24675 = getelementptr inbounds %struct.Reg, %struct.Reg* %24674, i32 0, i32 0
  %RAX.i420 = bitcast %union.anon* %24675 to i64*
  %24676 = load i64, i64* %RAX.i420
  %24677 = load i64, i64* %PC.i419
  %24678 = add i64 %24677, 3
  store i64 %24678, i64* %PC.i419
  %24679 = trunc i64 %24676 to i32
  %24680 = sub i32 %24679, 20
  %24681 = zext i32 %24680 to i64
  store i64 %24681, i64* %RAX.i420, align 8
  %24682 = icmp ult i32 %24679, 20
  %24683 = zext i1 %24682 to i8
  %24684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24683, i8* %24684, align 1
  %24685 = and i32 %24680, 255
  %24686 = call i32 @llvm.ctpop.i32(i32 %24685)
  %24687 = trunc i32 %24686 to i8
  %24688 = and i8 %24687, 1
  %24689 = xor i8 %24688, 1
  %24690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24689, i8* %24690, align 1
  %24691 = xor i64 20, %24676
  %24692 = trunc i64 %24691 to i32
  %24693 = xor i32 %24692, %24680
  %24694 = lshr i32 %24693, 4
  %24695 = trunc i32 %24694 to i8
  %24696 = and i8 %24695, 1
  %24697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24696, i8* %24697, align 1
  %24698 = icmp eq i32 %24680, 0
  %24699 = zext i1 %24698 to i8
  %24700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24699, i8* %24700, align 1
  %24701 = lshr i32 %24680, 31
  %24702 = trunc i32 %24701 to i8
  %24703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24702, i8* %24703, align 1
  %24704 = lshr i32 %24679, 31
  %24705 = xor i32 %24701, %24704
  %24706 = add i32 %24705, %24704
  %24707 = icmp eq i32 %24706, 2
  %24708 = zext i1 %24707 to i8
  %24709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24708, i8* %24709, align 1
  store %struct.Memory* %loadMem_476b4c, %struct.Memory** %MEMORY
  %loadMem_476b4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24711 = getelementptr inbounds %struct.GPR, %struct.GPR* %24710, i32 0, i32 33
  %24712 = getelementptr inbounds %struct.Reg, %struct.Reg* %24711, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %24712 to i64*
  %24713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24714 = getelementptr inbounds %struct.GPR, %struct.GPR* %24713, i32 0, i32 1
  %24715 = getelementptr inbounds %struct.Reg, %struct.Reg* %24714, i32 0, i32 0
  %EAX.i417 = bitcast %union.anon* %24715 to i32*
  %24716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24717 = getelementptr inbounds %struct.GPR, %struct.GPR* %24716, i32 0, i32 5
  %24718 = getelementptr inbounds %struct.Reg, %struct.Reg* %24717, i32 0, i32 0
  %RCX.i418 = bitcast %union.anon* %24718 to i64*
  %24719 = load i32, i32* %EAX.i417
  %24720 = zext i32 %24719 to i64
  %24721 = load i64, i64* %PC.i416
  %24722 = add i64 %24721, 3
  store i64 %24722, i64* %PC.i416
  %24723 = shl i64 %24720, 32
  %24724 = ashr exact i64 %24723, 32
  store i64 %24724, i64* %RCX.i418, align 8
  store %struct.Memory* %loadMem_476b4f, %struct.Memory** %MEMORY
  %loadMem_476b52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24726 = getelementptr inbounds %struct.GPR, %struct.GPR* %24725, i32 0, i32 33
  %24727 = getelementptr inbounds %struct.Reg, %struct.Reg* %24726, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %24727 to i64*
  %24728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24729 = getelementptr inbounds %struct.GPR, %struct.GPR* %24728, i32 0, i32 1
  %24730 = getelementptr inbounds %struct.Reg, %struct.Reg* %24729, i32 0, i32 0
  %RAX.i414 = bitcast %union.anon* %24730 to i64*
  %24731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24732 = getelementptr inbounds %struct.GPR, %struct.GPR* %24731, i32 0, i32 5
  %24733 = getelementptr inbounds %struct.Reg, %struct.Reg* %24732, i32 0, i32 0
  %RCX.i415 = bitcast %union.anon* %24733 to i64*
  %24734 = load i64, i64* %RCX.i415
  %24735 = add i64 %24734, 12099168
  %24736 = load i64, i64* %PC.i413
  %24737 = add i64 %24736, 8
  store i64 %24737, i64* %PC.i413
  %24738 = inttoptr i64 %24735 to i8*
  %24739 = load i8, i8* %24738
  %24740 = zext i8 %24739 to i64
  store i64 %24740, i64* %RAX.i414, align 8
  store %struct.Memory* %loadMem_476b52, %struct.Memory** %MEMORY
  %loadMem_476b5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %24741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24742 = getelementptr inbounds %struct.GPR, %struct.GPR* %24741, i32 0, i32 33
  %24743 = getelementptr inbounds %struct.Reg, %struct.Reg* %24742, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %24743 to i64*
  %24744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24745 = getelementptr inbounds %struct.GPR, %struct.GPR* %24744, i32 0, i32 1
  %24746 = getelementptr inbounds %struct.Reg, %struct.Reg* %24745, i32 0, i32 0
  %EAX.i411 = bitcast %union.anon* %24746 to i32*
  %24747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24748 = getelementptr inbounds %struct.GPR, %struct.GPR* %24747, i32 0, i32 15
  %24749 = getelementptr inbounds %struct.Reg, %struct.Reg* %24748, i32 0, i32 0
  %RBP.i412 = bitcast %union.anon* %24749 to i64*
  %24750 = load i32, i32* %EAX.i411
  %24751 = zext i32 %24750 to i64
  %24752 = load i64, i64* %RBP.i412
  %24753 = sub i64 %24752, 232
  %24754 = load i64, i64* %PC.i410
  %24755 = add i64 %24754, 6
  store i64 %24755, i64* %PC.i410
  %24756 = inttoptr i64 %24753 to i32*
  %24757 = load i32, i32* %24756
  %24758 = sub i32 %24750, %24757
  %24759 = icmp ult i32 %24750, %24757
  %24760 = zext i1 %24759 to i8
  %24761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24760, i8* %24761, align 1
  %24762 = and i32 %24758, 255
  %24763 = call i32 @llvm.ctpop.i32(i32 %24762)
  %24764 = trunc i32 %24763 to i8
  %24765 = and i8 %24764, 1
  %24766 = xor i8 %24765, 1
  %24767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24766, i8* %24767, align 1
  %24768 = xor i32 %24757, %24750
  %24769 = xor i32 %24768, %24758
  %24770 = lshr i32 %24769, 4
  %24771 = trunc i32 %24770 to i8
  %24772 = and i8 %24771, 1
  %24773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24772, i8* %24773, align 1
  %24774 = icmp eq i32 %24758, 0
  %24775 = zext i1 %24774 to i8
  %24776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24775, i8* %24776, align 1
  %24777 = lshr i32 %24758, 31
  %24778 = trunc i32 %24777 to i8
  %24779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24778, i8* %24779, align 1
  %24780 = lshr i32 %24750, 31
  %24781 = lshr i32 %24757, 31
  %24782 = xor i32 %24781, %24780
  %24783 = xor i32 %24777, %24780
  %24784 = add i32 %24783, %24782
  %24785 = icmp eq i32 %24784, 2
  %24786 = zext i1 %24785 to i8
  %24787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24786, i8* %24787, align 1
  store %struct.Memory* %loadMem_476b5a, %struct.Memory** %MEMORY
  %loadMem_476b60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24789 = getelementptr inbounds %struct.GPR, %struct.GPR* %24788, i32 0, i32 33
  %24790 = getelementptr inbounds %struct.Reg, %struct.Reg* %24789, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %24790 to i64*
  %24791 = load i64, i64* %PC.i409
  %24792 = add i64 %24791, 74
  %24793 = load i64, i64* %PC.i409
  %24794 = add i64 %24793, 6
  %24795 = load i64, i64* %PC.i409
  %24796 = add i64 %24795, 6
  store i64 %24796, i64* %PC.i409
  %24797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24798 = load i8, i8* %24797, align 1
  store i8 %24798, i8* %BRANCH_TAKEN, align 1
  %24799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24800 = icmp ne i8 %24798, 0
  %24801 = select i1 %24800, i64 %24792, i64 %24794
  store i64 %24801, i64* %24799, align 8
  store %struct.Memory* %loadMem_476b60, %struct.Memory** %MEMORY
  %loadBr_476b60 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476b60 = icmp eq i8 %loadBr_476b60, 1
  br i1 %cmpBr_476b60, label %block_.L_476baa, label %block_476b66

block_476b66:                                     ; preds = %block_476b46
  %loadMem_476b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24803 = getelementptr inbounds %struct.GPR, %struct.GPR* %24802, i32 0, i32 33
  %24804 = getelementptr inbounds %struct.Reg, %struct.Reg* %24803, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %24804 to i64*
  %24805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24806 = getelementptr inbounds %struct.GPR, %struct.GPR* %24805, i32 0, i32 1
  %24807 = getelementptr inbounds %struct.Reg, %struct.Reg* %24806, i32 0, i32 0
  %RAX.i407 = bitcast %union.anon* %24807 to i64*
  %24808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24809 = getelementptr inbounds %struct.GPR, %struct.GPR* %24808, i32 0, i32 15
  %24810 = getelementptr inbounds %struct.Reg, %struct.Reg* %24809, i32 0, i32 0
  %RBP.i408 = bitcast %union.anon* %24810 to i64*
  %24811 = load i64, i64* %RBP.i408
  %24812 = sub i64 %24811, 48
  %24813 = load i64, i64* %PC.i406
  %24814 = add i64 %24813, 3
  store i64 %24814, i64* %PC.i406
  %24815 = inttoptr i64 %24812 to i32*
  %24816 = load i32, i32* %24815
  %24817 = zext i32 %24816 to i64
  store i64 %24817, i64* %RAX.i407, align 8
  store %struct.Memory* %loadMem_476b66, %struct.Memory** %MEMORY
  %loadMem_476b69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24819 = getelementptr inbounds %struct.GPR, %struct.GPR* %24818, i32 0, i32 33
  %24820 = getelementptr inbounds %struct.Reg, %struct.Reg* %24819, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %24820 to i64*
  %24821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24822 = getelementptr inbounds %struct.GPR, %struct.GPR* %24821, i32 0, i32 1
  %24823 = getelementptr inbounds %struct.Reg, %struct.Reg* %24822, i32 0, i32 0
  %RAX.i405 = bitcast %union.anon* %24823 to i64*
  %24824 = load i64, i64* %RAX.i405
  %24825 = load i64, i64* %PC.i404
  %24826 = add i64 %24825, 3
  store i64 %24826, i64* %PC.i404
  %24827 = trunc i64 %24824 to i32
  %24828 = sub i32 %24827, 1
  %24829 = zext i32 %24828 to i64
  store i64 %24829, i64* %RAX.i405, align 8
  %24830 = icmp ult i32 %24827, 1
  %24831 = zext i1 %24830 to i8
  %24832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24831, i8* %24832, align 1
  %24833 = and i32 %24828, 255
  %24834 = call i32 @llvm.ctpop.i32(i32 %24833)
  %24835 = trunc i32 %24834 to i8
  %24836 = and i8 %24835, 1
  %24837 = xor i8 %24836, 1
  %24838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24837, i8* %24838, align 1
  %24839 = xor i64 1, %24824
  %24840 = trunc i64 %24839 to i32
  %24841 = xor i32 %24840, %24828
  %24842 = lshr i32 %24841, 4
  %24843 = trunc i32 %24842 to i8
  %24844 = and i8 %24843, 1
  %24845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24844, i8* %24845, align 1
  %24846 = icmp eq i32 %24828, 0
  %24847 = zext i1 %24846 to i8
  %24848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24847, i8* %24848, align 1
  %24849 = lshr i32 %24828, 31
  %24850 = trunc i32 %24849 to i8
  %24851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24850, i8* %24851, align 1
  %24852 = lshr i32 %24827, 31
  %24853 = xor i32 %24849, %24852
  %24854 = add i32 %24853, %24852
  %24855 = icmp eq i32 %24854, 2
  %24856 = zext i1 %24855 to i8
  %24857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24856, i8* %24857, align 1
  store %struct.Memory* %loadMem_476b69, %struct.Memory** %MEMORY
  %loadMem_476b6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %24858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24859 = getelementptr inbounds %struct.GPR, %struct.GPR* %24858, i32 0, i32 33
  %24860 = getelementptr inbounds %struct.Reg, %struct.Reg* %24859, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %24860 to i64*
  %24861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24862 = getelementptr inbounds %struct.GPR, %struct.GPR* %24861, i32 0, i32 1
  %24863 = getelementptr inbounds %struct.Reg, %struct.Reg* %24862, i32 0, i32 0
  %RAX.i403 = bitcast %union.anon* %24863 to i64*
  %24864 = load i64, i64* %RAX.i403
  %24865 = load i64, i64* %PC.i402
  %24866 = add i64 %24865, 3
  store i64 %24866, i64* %PC.i402
  %24867 = trunc i64 %24864 to i32
  %24868 = add i32 20, %24867
  %24869 = zext i32 %24868 to i64
  store i64 %24869, i64* %RAX.i403, align 8
  %24870 = icmp ult i32 %24868, %24867
  %24871 = icmp ult i32 %24868, 20
  %24872 = or i1 %24870, %24871
  %24873 = zext i1 %24872 to i8
  %24874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24873, i8* %24874, align 1
  %24875 = and i32 %24868, 255
  %24876 = call i32 @llvm.ctpop.i32(i32 %24875)
  %24877 = trunc i32 %24876 to i8
  %24878 = and i8 %24877, 1
  %24879 = xor i8 %24878, 1
  %24880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24879, i8* %24880, align 1
  %24881 = xor i64 20, %24864
  %24882 = trunc i64 %24881 to i32
  %24883 = xor i32 %24882, %24868
  %24884 = lshr i32 %24883, 4
  %24885 = trunc i32 %24884 to i8
  %24886 = and i8 %24885, 1
  %24887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24886, i8* %24887, align 1
  %24888 = icmp eq i32 %24868, 0
  %24889 = zext i1 %24888 to i8
  %24890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24889, i8* %24890, align 1
  %24891 = lshr i32 %24868, 31
  %24892 = trunc i32 %24891 to i8
  %24893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24892, i8* %24893, align 1
  %24894 = lshr i32 %24867, 31
  %24895 = xor i32 %24891, %24894
  %24896 = add i32 %24895, %24891
  %24897 = icmp eq i32 %24896, 2
  %24898 = zext i1 %24897 to i8
  %24899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24898, i8* %24899, align 1
  store %struct.Memory* %loadMem_476b6c, %struct.Memory** %MEMORY
  %loadMem_476b6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24901 = getelementptr inbounds %struct.GPR, %struct.GPR* %24900, i32 0, i32 33
  %24902 = getelementptr inbounds %struct.Reg, %struct.Reg* %24901, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %24902 to i64*
  %24903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24904 = getelementptr inbounds %struct.GPR, %struct.GPR* %24903, i32 0, i32 1
  %24905 = getelementptr inbounds %struct.Reg, %struct.Reg* %24904, i32 0, i32 0
  %EAX.i400 = bitcast %union.anon* %24905 to i32*
  %24906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24907 = getelementptr inbounds %struct.GPR, %struct.GPR* %24906, i32 0, i32 5
  %24908 = getelementptr inbounds %struct.Reg, %struct.Reg* %24907, i32 0, i32 0
  %RCX.i401 = bitcast %union.anon* %24908 to i64*
  %24909 = load i32, i32* %EAX.i400
  %24910 = zext i32 %24909 to i64
  %24911 = load i64, i64* %PC.i399
  %24912 = add i64 %24911, 3
  store i64 %24912, i64* %PC.i399
  %24913 = shl i64 %24910, 32
  %24914 = ashr exact i64 %24913, 32
  store i64 %24914, i64* %RCX.i401, align 8
  store %struct.Memory* %loadMem_476b6f, %struct.Memory** %MEMORY
  %loadMem_476b72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24916 = getelementptr inbounds %struct.GPR, %struct.GPR* %24915, i32 0, i32 33
  %24917 = getelementptr inbounds %struct.Reg, %struct.Reg* %24916, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %24917 to i64*
  %24918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24919 = getelementptr inbounds %struct.GPR, %struct.GPR* %24918, i32 0, i32 1
  %24920 = getelementptr inbounds %struct.Reg, %struct.Reg* %24919, i32 0, i32 0
  %RAX.i397 = bitcast %union.anon* %24920 to i64*
  %24921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24922 = getelementptr inbounds %struct.GPR, %struct.GPR* %24921, i32 0, i32 5
  %24923 = getelementptr inbounds %struct.Reg, %struct.Reg* %24922, i32 0, i32 0
  %RCX.i398 = bitcast %union.anon* %24923 to i64*
  %24924 = load i64, i64* %RCX.i398
  %24925 = add i64 %24924, 12099168
  %24926 = load i64, i64* %PC.i396
  %24927 = add i64 %24926, 8
  store i64 %24927, i64* %PC.i396
  %24928 = inttoptr i64 %24925 to i8*
  %24929 = load i8, i8* %24928
  %24930 = zext i8 %24929 to i64
  store i64 %24930, i64* %RAX.i397, align 8
  store %struct.Memory* %loadMem_476b72, %struct.Memory** %MEMORY
  %loadMem_476b7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %24931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24932 = getelementptr inbounds %struct.GPR, %struct.GPR* %24931, i32 0, i32 33
  %24933 = getelementptr inbounds %struct.Reg, %struct.Reg* %24932, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %24933 to i64*
  %24934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24935 = getelementptr inbounds %struct.GPR, %struct.GPR* %24934, i32 0, i32 1
  %24936 = getelementptr inbounds %struct.Reg, %struct.Reg* %24935, i32 0, i32 0
  %EAX.i395 = bitcast %union.anon* %24936 to i32*
  %24937 = load i32, i32* %EAX.i395
  %24938 = zext i32 %24937 to i64
  %24939 = load i64, i64* %PC.i394
  %24940 = add i64 %24939, 3
  store i64 %24940, i64* %PC.i394
  %24941 = sub i32 %24937, 3
  %24942 = icmp ult i32 %24937, 3
  %24943 = zext i1 %24942 to i8
  %24944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24943, i8* %24944, align 1
  %24945 = and i32 %24941, 255
  %24946 = call i32 @llvm.ctpop.i32(i32 %24945)
  %24947 = trunc i32 %24946 to i8
  %24948 = and i8 %24947, 1
  %24949 = xor i8 %24948, 1
  %24950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24949, i8* %24950, align 1
  %24951 = xor i64 3, %24938
  %24952 = trunc i64 %24951 to i32
  %24953 = xor i32 %24952, %24941
  %24954 = lshr i32 %24953, 4
  %24955 = trunc i32 %24954 to i8
  %24956 = and i8 %24955, 1
  %24957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24956, i8* %24957, align 1
  %24958 = icmp eq i32 %24941, 0
  %24959 = zext i1 %24958 to i8
  %24960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24959, i8* %24960, align 1
  %24961 = lshr i32 %24941, 31
  %24962 = trunc i32 %24961 to i8
  %24963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24962, i8* %24963, align 1
  %24964 = lshr i32 %24937, 31
  %24965 = xor i32 %24961, %24964
  %24966 = add i32 %24965, %24964
  %24967 = icmp eq i32 %24966, 2
  %24968 = zext i1 %24967 to i8
  %24969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24968, i8* %24969, align 1
  store %struct.Memory* %loadMem_476b7a, %struct.Memory** %MEMORY
  %loadMem_476b7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %24970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24971 = getelementptr inbounds %struct.GPR, %struct.GPR* %24970, i32 0, i32 33
  %24972 = getelementptr inbounds %struct.Reg, %struct.Reg* %24971, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %24972 to i64*
  %24973 = load i64, i64* %PC.i393
  %24974 = add i64 %24973, 45
  %24975 = load i64, i64* %PC.i393
  %24976 = add i64 %24975, 6
  %24977 = load i64, i64* %PC.i393
  %24978 = add i64 %24977, 6
  store i64 %24978, i64* %PC.i393
  %24979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24980 = load i8, i8* %24979, align 1
  store i8 %24980, i8* %BRANCH_TAKEN, align 1
  %24981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24982 = icmp ne i8 %24980, 0
  %24983 = select i1 %24982, i64 %24974, i64 %24976
  store i64 %24983, i64* %24981, align 8
  store %struct.Memory* %loadMem_476b7d, %struct.Memory** %MEMORY
  %loadBr_476b7d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476b7d = icmp eq i8 %loadBr_476b7d, 1
  br i1 %cmpBr_476b7d, label %block_.L_476baa, label %block_476b83

block_476b83:                                     ; preds = %block_476b66
  %loadMem_476b83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24985 = getelementptr inbounds %struct.GPR, %struct.GPR* %24984, i32 0, i32 33
  %24986 = getelementptr inbounds %struct.Reg, %struct.Reg* %24985, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %24986 to i64*
  %24987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24988 = getelementptr inbounds %struct.GPR, %struct.GPR* %24987, i32 0, i32 1
  %24989 = getelementptr inbounds %struct.Reg, %struct.Reg* %24988, i32 0, i32 0
  %RAX.i391 = bitcast %union.anon* %24989 to i64*
  %24990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24991 = getelementptr inbounds %struct.GPR, %struct.GPR* %24990, i32 0, i32 15
  %24992 = getelementptr inbounds %struct.Reg, %struct.Reg* %24991, i32 0, i32 0
  %RBP.i392 = bitcast %union.anon* %24992 to i64*
  %24993 = load i64, i64* %RBP.i392
  %24994 = sub i64 %24993, 48
  %24995 = load i64, i64* %PC.i390
  %24996 = add i64 %24995, 3
  store i64 %24996, i64* %PC.i390
  %24997 = inttoptr i64 %24994 to i32*
  %24998 = load i32, i32* %24997
  %24999 = zext i32 %24998 to i64
  store i64 %24999, i64* %RAX.i391, align 8
  store %struct.Memory* %loadMem_476b83, %struct.Memory** %MEMORY
  %loadMem_476b86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25001 = getelementptr inbounds %struct.GPR, %struct.GPR* %25000, i32 0, i32 33
  %25002 = getelementptr inbounds %struct.Reg, %struct.Reg* %25001, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %25002 to i64*
  %25003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25004 = getelementptr inbounds %struct.GPR, %struct.GPR* %25003, i32 0, i32 1
  %25005 = getelementptr inbounds %struct.Reg, %struct.Reg* %25004, i32 0, i32 0
  %RAX.i389 = bitcast %union.anon* %25005 to i64*
  %25006 = load i64, i64* %RAX.i389
  %25007 = load i64, i64* %PC.i388
  %25008 = add i64 %25007, 3
  store i64 %25008, i64* %PC.i388
  %25009 = trunc i64 %25006 to i32
  %25010 = sub i32 %25009, 1
  %25011 = zext i32 %25010 to i64
  store i64 %25011, i64* %RAX.i389, align 8
  %25012 = icmp ult i32 %25009, 1
  %25013 = zext i1 %25012 to i8
  %25014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25013, i8* %25014, align 1
  %25015 = and i32 %25010, 255
  %25016 = call i32 @llvm.ctpop.i32(i32 %25015)
  %25017 = trunc i32 %25016 to i8
  %25018 = and i8 %25017, 1
  %25019 = xor i8 %25018, 1
  %25020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25019, i8* %25020, align 1
  %25021 = xor i64 1, %25006
  %25022 = trunc i64 %25021 to i32
  %25023 = xor i32 %25022, %25010
  %25024 = lshr i32 %25023, 4
  %25025 = trunc i32 %25024 to i8
  %25026 = and i8 %25025, 1
  %25027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25026, i8* %25027, align 1
  %25028 = icmp eq i32 %25010, 0
  %25029 = zext i1 %25028 to i8
  %25030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25029, i8* %25030, align 1
  %25031 = lshr i32 %25010, 31
  %25032 = trunc i32 %25031 to i8
  %25033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25032, i8* %25033, align 1
  %25034 = lshr i32 %25009, 31
  %25035 = xor i32 %25031, %25034
  %25036 = add i32 %25035, %25034
  %25037 = icmp eq i32 %25036, 2
  %25038 = zext i1 %25037 to i8
  %25039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25038, i8* %25039, align 1
  store %struct.Memory* %loadMem_476b86, %struct.Memory** %MEMORY
  %loadMem_476b89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25041 = getelementptr inbounds %struct.GPR, %struct.GPR* %25040, i32 0, i32 33
  %25042 = getelementptr inbounds %struct.Reg, %struct.Reg* %25041, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %25042 to i64*
  %25043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25044 = getelementptr inbounds %struct.GPR, %struct.GPR* %25043, i32 0, i32 1
  %25045 = getelementptr inbounds %struct.Reg, %struct.Reg* %25044, i32 0, i32 0
  %RAX.i387 = bitcast %union.anon* %25045 to i64*
  %25046 = load i64, i64* %RAX.i387
  %25047 = load i64, i64* %PC.i386
  %25048 = add i64 %25047, 3
  store i64 %25048, i64* %PC.i386
  %25049 = trunc i64 %25046 to i32
  %25050 = add i32 20, %25049
  %25051 = zext i32 %25050 to i64
  store i64 %25051, i64* %RAX.i387, align 8
  %25052 = icmp ult i32 %25050, %25049
  %25053 = icmp ult i32 %25050, 20
  %25054 = or i1 %25052, %25053
  %25055 = zext i1 %25054 to i8
  %25056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25055, i8* %25056, align 1
  %25057 = and i32 %25050, 255
  %25058 = call i32 @llvm.ctpop.i32(i32 %25057)
  %25059 = trunc i32 %25058 to i8
  %25060 = and i8 %25059, 1
  %25061 = xor i8 %25060, 1
  %25062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25061, i8* %25062, align 1
  %25063 = xor i64 20, %25046
  %25064 = trunc i64 %25063 to i32
  %25065 = xor i32 %25064, %25050
  %25066 = lshr i32 %25065, 4
  %25067 = trunc i32 %25066 to i8
  %25068 = and i8 %25067, 1
  %25069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25068, i8* %25069, align 1
  %25070 = icmp eq i32 %25050, 0
  %25071 = zext i1 %25070 to i8
  %25072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25071, i8* %25072, align 1
  %25073 = lshr i32 %25050, 31
  %25074 = trunc i32 %25073 to i8
  %25075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25074, i8* %25075, align 1
  %25076 = lshr i32 %25049, 31
  %25077 = xor i32 %25073, %25076
  %25078 = add i32 %25077, %25073
  %25079 = icmp eq i32 %25078, 2
  %25080 = zext i1 %25079 to i8
  %25081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25080, i8* %25081, align 1
  store %struct.Memory* %loadMem_476b89, %struct.Memory** %MEMORY
  %loadMem_476b8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %25082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25083 = getelementptr inbounds %struct.GPR, %struct.GPR* %25082, i32 0, i32 33
  %25084 = getelementptr inbounds %struct.Reg, %struct.Reg* %25083, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %25084 to i64*
  %25085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25086 = getelementptr inbounds %struct.GPR, %struct.GPR* %25085, i32 0, i32 1
  %25087 = getelementptr inbounds %struct.Reg, %struct.Reg* %25086, i32 0, i32 0
  %EAX.i384 = bitcast %union.anon* %25087 to i32*
  %25088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25089 = getelementptr inbounds %struct.GPR, %struct.GPR* %25088, i32 0, i32 5
  %25090 = getelementptr inbounds %struct.Reg, %struct.Reg* %25089, i32 0, i32 0
  %RCX.i385 = bitcast %union.anon* %25090 to i64*
  %25091 = load i32, i32* %EAX.i384
  %25092 = zext i32 %25091 to i64
  %25093 = load i64, i64* %PC.i383
  %25094 = add i64 %25093, 3
  store i64 %25094, i64* %PC.i383
  %25095 = shl i64 %25092, 32
  %25096 = ashr exact i64 %25095, 32
  store i64 %25096, i64* %RCX.i385, align 8
  store %struct.Memory* %loadMem_476b8c, %struct.Memory** %MEMORY
  %loadMem_476b8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %25097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25098 = getelementptr inbounds %struct.GPR, %struct.GPR* %25097, i32 0, i32 33
  %25099 = getelementptr inbounds %struct.Reg, %struct.Reg* %25098, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %25099 to i64*
  %25100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25101 = getelementptr inbounds %struct.GPR, %struct.GPR* %25100, i32 0, i32 1
  %25102 = getelementptr inbounds %struct.Reg, %struct.Reg* %25101, i32 0, i32 0
  %RAX.i381 = bitcast %union.anon* %25102 to i64*
  %25103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25104 = getelementptr inbounds %struct.GPR, %struct.GPR* %25103, i32 0, i32 5
  %25105 = getelementptr inbounds %struct.Reg, %struct.Reg* %25104, i32 0, i32 0
  %RCX.i382 = bitcast %union.anon* %25105 to i64*
  %25106 = load i64, i64* %RCX.i382
  %25107 = add i64 %25106, 12099168
  %25108 = load i64, i64* %PC.i380
  %25109 = add i64 %25108, 8
  store i64 %25109, i64* %PC.i380
  %25110 = inttoptr i64 %25107 to i8*
  %25111 = load i8, i8* %25110
  %25112 = zext i8 %25111 to i64
  store i64 %25112, i64* %RAX.i381, align 8
  store %struct.Memory* %loadMem_476b8f, %struct.Memory** %MEMORY
  %loadMem_476b97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25114 = getelementptr inbounds %struct.GPR, %struct.GPR* %25113, i32 0, i32 33
  %25115 = getelementptr inbounds %struct.Reg, %struct.Reg* %25114, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %25115 to i64*
  %25116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25117 = getelementptr inbounds %struct.GPR, %struct.GPR* %25116, i32 0, i32 1
  %25118 = getelementptr inbounds %struct.Reg, %struct.Reg* %25117, i32 0, i32 0
  %EAX.i378 = bitcast %union.anon* %25118 to i32*
  %25119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25120 = getelementptr inbounds %struct.GPR, %struct.GPR* %25119, i32 0, i32 15
  %25121 = getelementptr inbounds %struct.Reg, %struct.Reg* %25120, i32 0, i32 0
  %RBP.i379 = bitcast %union.anon* %25121 to i64*
  %25122 = load i32, i32* %EAX.i378
  %25123 = zext i32 %25122 to i64
  %25124 = load i64, i64* %RBP.i379
  %25125 = sub i64 %25124, 232
  %25126 = load i64, i64* %PC.i377
  %25127 = add i64 %25126, 6
  store i64 %25127, i64* %PC.i377
  %25128 = inttoptr i64 %25125 to i32*
  %25129 = load i32, i32* %25128
  %25130 = sub i32 %25122, %25129
  %25131 = icmp ult i32 %25122, %25129
  %25132 = zext i1 %25131 to i8
  %25133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25132, i8* %25133, align 1
  %25134 = and i32 %25130, 255
  %25135 = call i32 @llvm.ctpop.i32(i32 %25134)
  %25136 = trunc i32 %25135 to i8
  %25137 = and i8 %25136, 1
  %25138 = xor i8 %25137, 1
  %25139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25138, i8* %25139, align 1
  %25140 = xor i32 %25129, %25122
  %25141 = xor i32 %25140, %25130
  %25142 = lshr i32 %25141, 4
  %25143 = trunc i32 %25142 to i8
  %25144 = and i8 %25143, 1
  %25145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25144, i8* %25145, align 1
  %25146 = icmp eq i32 %25130, 0
  %25147 = zext i1 %25146 to i8
  %25148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25147, i8* %25148, align 1
  %25149 = lshr i32 %25130, 31
  %25150 = trunc i32 %25149 to i8
  %25151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25150, i8* %25151, align 1
  %25152 = lshr i32 %25122, 31
  %25153 = lshr i32 %25129, 31
  %25154 = xor i32 %25153, %25152
  %25155 = xor i32 %25149, %25152
  %25156 = add i32 %25155, %25154
  %25157 = icmp eq i32 %25156, 2
  %25158 = zext i1 %25157 to i8
  %25159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25158, i8* %25159, align 1
  store %struct.Memory* %loadMem_476b97, %struct.Memory** %MEMORY
  %loadMem_476b9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %25160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25161 = getelementptr inbounds %struct.GPR, %struct.GPR* %25160, i32 0, i32 33
  %25162 = getelementptr inbounds %struct.Reg, %struct.Reg* %25161, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %25162 to i64*
  %25163 = load i64, i64* %PC.i376
  %25164 = add i64 %25163, 13
  %25165 = load i64, i64* %PC.i376
  %25166 = add i64 %25165, 6
  %25167 = load i64, i64* %PC.i376
  %25168 = add i64 %25167, 6
  store i64 %25168, i64* %PC.i376
  %25169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25170 = load i8, i8* %25169, align 1
  store i8 %25170, i8* %BRANCH_TAKEN, align 1
  %25171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25172 = icmp ne i8 %25170, 0
  %25173 = select i1 %25172, i64 %25164, i64 %25166
  store i64 %25173, i64* %25171, align 8
  store %struct.Memory* %loadMem_476b9d, %struct.Memory** %MEMORY
  %loadBr_476b9d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476b9d = icmp eq i8 %loadBr_476b9d, 1
  br i1 %cmpBr_476b9d, label %block_.L_476baa, label %block_.L_476ba3

block_.L_476ba3:                                  ; preds = %block_476b83, %block_476a7b, %block_476973, %block_47686b
  %loadMem_476ba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25175 = getelementptr inbounds %struct.GPR, %struct.GPR* %25174, i32 0, i32 33
  %25176 = getelementptr inbounds %struct.Reg, %struct.Reg* %25175, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %25176 to i64*
  %25177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25178 = getelementptr inbounds %struct.GPR, %struct.GPR* %25177, i32 0, i32 15
  %25179 = getelementptr inbounds %struct.Reg, %struct.Reg* %25178, i32 0, i32 0
  %RBP.i375 = bitcast %union.anon* %25179 to i64*
  %25180 = load i64, i64* %RBP.i375
  %25181 = sub i64 %25180, 52
  %25182 = load i64, i64* %PC.i374
  %25183 = add i64 %25182, 7
  store i64 %25183, i64* %PC.i374
  %25184 = inttoptr i64 %25181 to i32*
  store i32 0, i32* %25184
  store %struct.Memory* %loadMem_476ba3, %struct.Memory** %MEMORY
  br label %block_.L_476baa

block_.L_476baa:                                  ; preds = %block_.L_476ba3, %block_476b83, %block_476b66, %block_476b46, %block_476b29, %block_476b0c, %block_476aec, %block_476acf, %block_476ab5, %block_.L_476a9b
  %loadMem_476baa = load %struct.Memory*, %struct.Memory** %MEMORY
  %25185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25186 = getelementptr inbounds %struct.GPR, %struct.GPR* %25185, i32 0, i32 33
  %25187 = getelementptr inbounds %struct.Reg, %struct.Reg* %25186, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %25187 to i64*
  %25188 = load i64, i64* %PC.i373
  %25189 = add i64 %25188, 5
  %25190 = load i64, i64* %PC.i373
  %25191 = add i64 %25190, 5
  store i64 %25191, i64* %PC.i373
  %25192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25189, i64* %25192, align 8
  store %struct.Memory* %loadMem_476baa, %struct.Memory** %MEMORY
  br label %block_.L_476baf

block_.L_476baf:                                  ; preds = %block_.L_476baa, %block_47676e, %block_.L_476759
  %loadMem_476baf = load %struct.Memory*, %struct.Memory** %MEMORY
  %25193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25194 = getelementptr inbounds %struct.GPR, %struct.GPR* %25193, i32 0, i32 33
  %25195 = getelementptr inbounds %struct.Reg, %struct.Reg* %25194, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %25195 to i64*
  %25196 = load i64, i64* %PC.i372
  %25197 = add i64 %25196, 5
  %25198 = load i64, i64* %PC.i372
  %25199 = add i64 %25198, 5
  store i64 %25199, i64* %PC.i372
  %25200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25197, i64* %25200, align 8
  store %struct.Memory* %loadMem_476baf, %struct.Memory** %MEMORY
  br label %block_.L_476bb4

block_.L_476bb4:                                  ; preds = %block_.L_476baf
  %loadMem_476bb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25202 = getelementptr inbounds %struct.GPR, %struct.GPR* %25201, i32 0, i32 33
  %25203 = getelementptr inbounds %struct.Reg, %struct.Reg* %25202, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %25203 to i64*
  %25204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25205 = getelementptr inbounds %struct.GPR, %struct.GPR* %25204, i32 0, i32 1
  %25206 = getelementptr inbounds %struct.Reg, %struct.Reg* %25205, i32 0, i32 0
  %RAX.i370 = bitcast %union.anon* %25206 to i64*
  %25207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25208 = getelementptr inbounds %struct.GPR, %struct.GPR* %25207, i32 0, i32 15
  %25209 = getelementptr inbounds %struct.Reg, %struct.Reg* %25208, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %25209 to i64*
  %25210 = load i64, i64* %RBP.i371
  %25211 = sub i64 %25210, 48
  %25212 = load i64, i64* %PC.i369
  %25213 = add i64 %25212, 3
  store i64 %25213, i64* %PC.i369
  %25214 = inttoptr i64 %25211 to i32*
  %25215 = load i32, i32* %25214
  %25216 = zext i32 %25215 to i64
  store i64 %25216, i64* %RAX.i370, align 8
  store %struct.Memory* %loadMem_476bb4, %struct.Memory** %MEMORY
  %loadMem_476bb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25218 = getelementptr inbounds %struct.GPR, %struct.GPR* %25217, i32 0, i32 33
  %25219 = getelementptr inbounds %struct.Reg, %struct.Reg* %25218, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %25219 to i64*
  %25220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25221 = getelementptr inbounds %struct.GPR, %struct.GPR* %25220, i32 0, i32 1
  %25222 = getelementptr inbounds %struct.Reg, %struct.Reg* %25221, i32 0, i32 0
  %RAX.i368 = bitcast %union.anon* %25222 to i64*
  %25223 = load i64, i64* %RAX.i368
  %25224 = load i64, i64* %PC.i367
  %25225 = add i64 %25224, 3
  store i64 %25225, i64* %PC.i367
  %25226 = trunc i64 %25223 to i32
  %25227 = add i32 1, %25226
  %25228 = zext i32 %25227 to i64
  store i64 %25228, i64* %RAX.i368, align 8
  %25229 = icmp ult i32 %25227, %25226
  %25230 = icmp ult i32 %25227, 1
  %25231 = or i1 %25229, %25230
  %25232 = zext i1 %25231 to i8
  %25233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25232, i8* %25233, align 1
  %25234 = and i32 %25227, 255
  %25235 = call i32 @llvm.ctpop.i32(i32 %25234)
  %25236 = trunc i32 %25235 to i8
  %25237 = and i8 %25236, 1
  %25238 = xor i8 %25237, 1
  %25239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25238, i8* %25239, align 1
  %25240 = xor i64 1, %25223
  %25241 = trunc i64 %25240 to i32
  %25242 = xor i32 %25241, %25227
  %25243 = lshr i32 %25242, 4
  %25244 = trunc i32 %25243 to i8
  %25245 = and i8 %25244, 1
  %25246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25245, i8* %25246, align 1
  %25247 = icmp eq i32 %25227, 0
  %25248 = zext i1 %25247 to i8
  %25249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25248, i8* %25249, align 1
  %25250 = lshr i32 %25227, 31
  %25251 = trunc i32 %25250 to i8
  %25252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25251, i8* %25252, align 1
  %25253 = lshr i32 %25226, 31
  %25254 = xor i32 %25250, %25253
  %25255 = add i32 %25254, %25250
  %25256 = icmp eq i32 %25255, 2
  %25257 = zext i1 %25256 to i8
  %25258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25257, i8* %25258, align 1
  store %struct.Memory* %loadMem_476bb7, %struct.Memory** %MEMORY
  %loadMem_476bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %25259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25260 = getelementptr inbounds %struct.GPR, %struct.GPR* %25259, i32 0, i32 33
  %25261 = getelementptr inbounds %struct.Reg, %struct.Reg* %25260, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %25261 to i64*
  %25262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25263 = getelementptr inbounds %struct.GPR, %struct.GPR* %25262, i32 0, i32 1
  %25264 = getelementptr inbounds %struct.Reg, %struct.Reg* %25263, i32 0, i32 0
  %EAX.i365 = bitcast %union.anon* %25264 to i32*
  %25265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25266 = getelementptr inbounds %struct.GPR, %struct.GPR* %25265, i32 0, i32 15
  %25267 = getelementptr inbounds %struct.Reg, %struct.Reg* %25266, i32 0, i32 0
  %RBP.i366 = bitcast %union.anon* %25267 to i64*
  %25268 = load i64, i64* %RBP.i366
  %25269 = sub i64 %25268, 48
  %25270 = load i32, i32* %EAX.i365
  %25271 = zext i32 %25270 to i64
  %25272 = load i64, i64* %PC.i364
  %25273 = add i64 %25272, 3
  store i64 %25273, i64* %PC.i364
  %25274 = inttoptr i64 %25269 to i32*
  store i32 %25270, i32* %25274
  store %struct.Memory* %loadMem_476bba, %struct.Memory** %MEMORY
  %loadMem_476bbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %25275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25276 = getelementptr inbounds %struct.GPR, %struct.GPR* %25275, i32 0, i32 33
  %25277 = getelementptr inbounds %struct.Reg, %struct.Reg* %25276, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %25277 to i64*
  %25278 = load i64, i64* %PC.i363
  %25279 = add i64 %25278, -1179
  %25280 = load i64, i64* %PC.i363
  %25281 = add i64 %25280, 5
  store i64 %25281, i64* %PC.i363
  %25282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25279, i64* %25282, align 8
  store %struct.Memory* %loadMem_476bbd, %struct.Memory** %MEMORY
  br label %block_.L_476722

block_.L_476bc2:                                  ; preds = %block_476754
  %loadMem_476bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25284 = getelementptr inbounds %struct.GPR, %struct.GPR* %25283, i32 0, i32 33
  %25285 = getelementptr inbounds %struct.Reg, %struct.Reg* %25284, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %25285 to i64*
  %25286 = load i64, i64* %PC.i362
  %25287 = add i64 %25286, 5
  %25288 = load i64, i64* %PC.i362
  %25289 = add i64 %25288, 5
  store i64 %25289, i64* %PC.i362
  %25290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25287, i64* %25290, align 8
  store %struct.Memory* %loadMem_476bc2, %struct.Memory** %MEMORY
  br label %block_.L_476bc7

block_.L_476bc7:                                  ; preds = %block_.L_476bc2, %block_.L_476711
  %loadMem_476bc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25292 = getelementptr inbounds %struct.GPR, %struct.GPR* %25291, i32 0, i32 33
  %25293 = getelementptr inbounds %struct.Reg, %struct.Reg* %25292, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %25293 to i64*
  %25294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25295 = getelementptr inbounds %struct.GPR, %struct.GPR* %25294, i32 0, i32 15
  %25296 = getelementptr inbounds %struct.Reg, %struct.Reg* %25295, i32 0, i32 0
  %RBP.i361 = bitcast %union.anon* %25296 to i64*
  %25297 = load i64, i64* %RBP.i361
  %25298 = sub i64 %25297, 16
  %25299 = load i64, i64* %PC.i360
  %25300 = add i64 %25299, 4
  store i64 %25300, i64* %PC.i360
  %25301 = inttoptr i64 %25298 to i32*
  %25302 = load i32, i32* %25301
  %25303 = sub i32 %25302, 1
  %25304 = icmp ult i32 %25302, 1
  %25305 = zext i1 %25304 to i8
  %25306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25305, i8* %25306, align 1
  %25307 = and i32 %25303, 255
  %25308 = call i32 @llvm.ctpop.i32(i32 %25307)
  %25309 = trunc i32 %25308 to i8
  %25310 = and i8 %25309, 1
  %25311 = xor i8 %25310, 1
  %25312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25311, i8* %25312, align 1
  %25313 = xor i32 %25302, 1
  %25314 = xor i32 %25313, %25303
  %25315 = lshr i32 %25314, 4
  %25316 = trunc i32 %25315 to i8
  %25317 = and i8 %25316, 1
  %25318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25317, i8* %25318, align 1
  %25319 = icmp eq i32 %25303, 0
  %25320 = zext i1 %25319 to i8
  %25321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25320, i8* %25321, align 1
  %25322 = lshr i32 %25303, 31
  %25323 = trunc i32 %25322 to i8
  %25324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25323, i8* %25324, align 1
  %25325 = lshr i32 %25302, 31
  %25326 = xor i32 %25322, %25325
  %25327 = add i32 %25326, %25325
  %25328 = icmp eq i32 %25327, 2
  %25329 = zext i1 %25328 to i8
  %25330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25329, i8* %25330, align 1
  store %struct.Memory* %loadMem_476bc7, %struct.Memory** %MEMORY
  %loadMem_476bcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %25331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25332 = getelementptr inbounds %struct.GPR, %struct.GPR* %25331, i32 0, i32 33
  %25333 = getelementptr inbounds %struct.Reg, %struct.Reg* %25332, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %25333 to i64*
  %25334 = load i64, i64* %PC.i359
  %25335 = add i64 %25334, 26
  %25336 = load i64, i64* %PC.i359
  %25337 = add i64 %25336, 6
  %25338 = load i64, i64* %PC.i359
  %25339 = add i64 %25338, 6
  store i64 %25339, i64* %PC.i359
  %25340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25341 = load i8, i8* %25340, align 1
  store i8 %25341, i8* %BRANCH_TAKEN, align 1
  %25342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25343 = icmp ne i8 %25341, 0
  %25344 = select i1 %25343, i64 %25335, i64 %25337
  store i64 %25344, i64* %25342, align 8
  store %struct.Memory* %loadMem_476bcb, %struct.Memory** %MEMORY
  %loadBr_476bcb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476bcb = icmp eq i8 %loadBr_476bcb, 1
  br i1 %cmpBr_476bcb, label %block_.L_476be5, label %block_476bd1

block_476bd1:                                     ; preds = %block_.L_476bc7
  %loadMem_476bd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25346 = getelementptr inbounds %struct.GPR, %struct.GPR* %25345, i32 0, i32 33
  %25347 = getelementptr inbounds %struct.Reg, %struct.Reg* %25346, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %25347 to i64*
  %25348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25349 = getelementptr inbounds %struct.GPR, %struct.GPR* %25348, i32 0, i32 15
  %25350 = getelementptr inbounds %struct.Reg, %struct.Reg* %25349, i32 0, i32 0
  %RBP.i358 = bitcast %union.anon* %25350 to i64*
  %25351 = load i64, i64* %RBP.i358
  %25352 = sub i64 %25351, 16
  %25353 = load i64, i64* %PC.i357
  %25354 = add i64 %25353, 4
  store i64 %25354, i64* %PC.i357
  %25355 = inttoptr i64 %25352 to i32*
  %25356 = load i32, i32* %25355
  %25357 = sub i32 %25356, 2
  %25358 = icmp ult i32 %25356, 2
  %25359 = zext i1 %25358 to i8
  %25360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25359, i8* %25360, align 1
  %25361 = and i32 %25357, 255
  %25362 = call i32 @llvm.ctpop.i32(i32 %25361)
  %25363 = trunc i32 %25362 to i8
  %25364 = and i8 %25363, 1
  %25365 = xor i8 %25364, 1
  %25366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25365, i8* %25366, align 1
  %25367 = xor i32 %25356, 2
  %25368 = xor i32 %25367, %25357
  %25369 = lshr i32 %25368, 4
  %25370 = trunc i32 %25369 to i8
  %25371 = and i8 %25370, 1
  %25372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25371, i8* %25372, align 1
  %25373 = icmp eq i32 %25357, 0
  %25374 = zext i1 %25373 to i8
  %25375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25374, i8* %25375, align 1
  %25376 = lshr i32 %25357, 31
  %25377 = trunc i32 %25376 to i8
  %25378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25377, i8* %25378, align 1
  %25379 = lshr i32 %25356, 31
  %25380 = xor i32 %25376, %25379
  %25381 = add i32 %25380, %25379
  %25382 = icmp eq i32 %25381, 2
  %25383 = zext i1 %25382 to i8
  %25384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25383, i8* %25384, align 1
  store %struct.Memory* %loadMem_476bd1, %struct.Memory** %MEMORY
  %loadMem_476bd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25386 = getelementptr inbounds %struct.GPR, %struct.GPR* %25385, i32 0, i32 33
  %25387 = getelementptr inbounds %struct.Reg, %struct.Reg* %25386, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %25387 to i64*
  %25388 = load i64, i64* %PC.i356
  %25389 = add i64 %25388, 527
  %25390 = load i64, i64* %PC.i356
  %25391 = add i64 %25390, 6
  %25392 = load i64, i64* %PC.i356
  %25393 = add i64 %25392, 6
  store i64 %25393, i64* %PC.i356
  %25394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25395 = load i8, i8* %25394, align 1
  %25396 = icmp eq i8 %25395, 0
  %25397 = zext i1 %25396 to i8
  store i8 %25397, i8* %BRANCH_TAKEN, align 1
  %25398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25399 = select i1 %25396, i64 %25389, i64 %25391
  store i64 %25399, i64* %25398, align 8
  store %struct.Memory* %loadMem_476bd5, %struct.Memory** %MEMORY
  %loadBr_476bd5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476bd5 = icmp eq i8 %loadBr_476bd5, 1
  br i1 %cmpBr_476bd5, label %block_.L_476de4, label %block_476bdb

block_476bdb:                                     ; preds = %block_476bd1
  %loadMem_476bdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %25400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25401 = getelementptr inbounds %struct.GPR, %struct.GPR* %25400, i32 0, i32 33
  %25402 = getelementptr inbounds %struct.Reg, %struct.Reg* %25401, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %25402 to i64*
  %25403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25404 = getelementptr inbounds %struct.GPR, %struct.GPR* %25403, i32 0, i32 15
  %25405 = getelementptr inbounds %struct.Reg, %struct.Reg* %25404, i32 0, i32 0
  %RBP.i355 = bitcast %union.anon* %25405 to i64*
  %25406 = load i64, i64* %RBP.i355
  %25407 = sub i64 %25406, 52
  %25408 = load i64, i64* %PC.i354
  %25409 = add i64 %25408, 4
  store i64 %25409, i64* %PC.i354
  %25410 = inttoptr i64 %25407 to i32*
  %25411 = load i32, i32* %25410
  %25412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %25412, align 1
  %25413 = and i32 %25411, 255
  %25414 = call i32 @llvm.ctpop.i32(i32 %25413)
  %25415 = trunc i32 %25414 to i8
  %25416 = and i8 %25415, 1
  %25417 = xor i8 %25416, 1
  %25418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25417, i8* %25418, align 1
  %25419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25419, align 1
  %25420 = icmp eq i32 %25411, 0
  %25421 = zext i1 %25420 to i8
  %25422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25421, i8* %25422, align 1
  %25423 = lshr i32 %25411, 31
  %25424 = trunc i32 %25423 to i8
  %25425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25424, i8* %25425, align 1
  %25426 = lshr i32 %25411, 31
  %25427 = xor i32 %25423, %25426
  %25428 = add i32 %25427, %25426
  %25429 = icmp eq i32 %25428, 2
  %25430 = zext i1 %25429 to i8
  %25431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25430, i8* %25431, align 1
  store %struct.Memory* %loadMem_476bdb, %struct.Memory** %MEMORY
  %loadMem_476bdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %25432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25433 = getelementptr inbounds %struct.GPR, %struct.GPR* %25432, i32 0, i32 33
  %25434 = getelementptr inbounds %struct.Reg, %struct.Reg* %25433, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %25434 to i64*
  %25435 = load i64, i64* %PC.i353
  %25436 = add i64 %25435, 517
  %25437 = load i64, i64* %PC.i353
  %25438 = add i64 %25437, 6
  %25439 = load i64, i64* %PC.i353
  %25440 = add i64 %25439, 6
  store i64 %25440, i64* %PC.i353
  %25441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25442 = load i8, i8* %25441, align 1
  store i8 %25442, i8* %BRANCH_TAKEN, align 1
  %25443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25444 = icmp ne i8 %25442, 0
  %25445 = select i1 %25444, i64 %25436, i64 %25438
  store i64 %25445, i64* %25443, align 8
  store %struct.Memory* %loadMem_476bdf, %struct.Memory** %MEMORY
  %loadBr_476bdf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476bdf = icmp eq i8 %loadBr_476bdf, 1
  br i1 %cmpBr_476bdf, label %block_.L_476de4, label %block_.L_476be5

block_.L_476be5:                                  ; preds = %block_476bdb, %block_.L_476bc7
  %loadMem1_476be5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25447 = getelementptr inbounds %struct.GPR, %struct.GPR* %25446, i32 0, i32 33
  %25448 = getelementptr inbounds %struct.Reg, %struct.Reg* %25447, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %25448 to i64*
  %25449 = load i64, i64* %PC.i352
  %25450 = add i64 %25449, -8821
  %25451 = load i64, i64* %PC.i352
  %25452 = add i64 %25451, 5
  %25453 = load i64, i64* %PC.i352
  %25454 = add i64 %25453, 5
  store i64 %25454, i64* %PC.i352
  %25455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %25456 = load i64, i64* %25455, align 8
  %25457 = add i64 %25456, -8
  %25458 = inttoptr i64 %25457 to i64*
  store i64 %25452, i64* %25458
  store i64 %25457, i64* %25455, align 8
  %25459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25450, i64* %25459, align 8
  store %struct.Memory* %loadMem1_476be5, %struct.Memory** %MEMORY
  %loadMem2_476be5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_476be5 = load i64, i64* %3
  %call2_476be5 = call %struct.Memory* @sub_474970.start_draw_board(%struct.State* %0, i64 %loadPC_476be5, %struct.Memory* %loadMem2_476be5)
  store %struct.Memory* %call2_476be5, %struct.Memory** %MEMORY
  %loadMem_476bea = load %struct.Memory*, %struct.Memory** %MEMORY
  %25460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25461 = getelementptr inbounds %struct.GPR, %struct.GPR* %25460, i32 0, i32 33
  %25462 = getelementptr inbounds %struct.Reg, %struct.Reg* %25461, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %25462 to i64*
  %25463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25464 = getelementptr inbounds %struct.GPR, %struct.GPR* %25463, i32 0, i32 15
  %25465 = getelementptr inbounds %struct.Reg, %struct.Reg* %25464, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %25465 to i64*
  %25466 = load i64, i64* %RBP.i351
  %25467 = sub i64 %25466, 36
  %25468 = load i64, i64* %PC.i350
  %25469 = add i64 %25468, 7
  store i64 %25469, i64* %PC.i350
  %25470 = inttoptr i64 %25467 to i32*
  store i32 0, i32* %25470
  store %struct.Memory* %loadMem_476bea, %struct.Memory** %MEMORY
  br label %block_.L_476bf1

block_.L_476bf1:                                  ; preds = %block_.L_476dd1, %block_.L_476be5
  %loadMem_476bf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25472 = getelementptr inbounds %struct.GPR, %struct.GPR* %25471, i32 0, i32 33
  %25473 = getelementptr inbounds %struct.Reg, %struct.Reg* %25472, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %25473 to i64*
  %25474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25475 = getelementptr inbounds %struct.GPR, %struct.GPR* %25474, i32 0, i32 1
  %25476 = getelementptr inbounds %struct.Reg, %struct.Reg* %25475, i32 0, i32 0
  %RAX.i348 = bitcast %union.anon* %25476 to i64*
  %25477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25478 = getelementptr inbounds %struct.GPR, %struct.GPR* %25477, i32 0, i32 15
  %25479 = getelementptr inbounds %struct.Reg, %struct.Reg* %25478, i32 0, i32 0
  %RBP.i349 = bitcast %union.anon* %25479 to i64*
  %25480 = load i64, i64* %RBP.i349
  %25481 = sub i64 %25480, 36
  %25482 = load i64, i64* %PC.i347
  %25483 = add i64 %25482, 3
  store i64 %25483, i64* %PC.i347
  %25484 = inttoptr i64 %25481 to i32*
  %25485 = load i32, i32* %25484
  %25486 = zext i32 %25485 to i64
  store i64 %25486, i64* %RAX.i348, align 8
  store %struct.Memory* %loadMem_476bf1, %struct.Memory** %MEMORY
  %loadMem_476bf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25488 = getelementptr inbounds %struct.GPR, %struct.GPR* %25487, i32 0, i32 33
  %25489 = getelementptr inbounds %struct.Reg, %struct.Reg* %25488, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %25489 to i64*
  %25490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25491 = getelementptr inbounds %struct.GPR, %struct.GPR* %25490, i32 0, i32 1
  %25492 = getelementptr inbounds %struct.Reg, %struct.Reg* %25491, i32 0, i32 0
  %EAX.i346 = bitcast %union.anon* %25492 to i32*
  %25493 = load i32, i32* %EAX.i346
  %25494 = zext i32 %25493 to i64
  %25495 = load i64, i64* %PC.i345
  %25496 = add i64 %25495, 7
  store i64 %25496, i64* %PC.i345
  %25497 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %25498 = sub i32 %25493, %25497
  %25499 = icmp ult i32 %25493, %25497
  %25500 = zext i1 %25499 to i8
  %25501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25500, i8* %25501, align 1
  %25502 = and i32 %25498, 255
  %25503 = call i32 @llvm.ctpop.i32(i32 %25502)
  %25504 = trunc i32 %25503 to i8
  %25505 = and i8 %25504, 1
  %25506 = xor i8 %25505, 1
  %25507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25506, i8* %25507, align 1
  %25508 = xor i32 %25497, %25493
  %25509 = xor i32 %25508, %25498
  %25510 = lshr i32 %25509, 4
  %25511 = trunc i32 %25510 to i8
  %25512 = and i8 %25511, 1
  %25513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25512, i8* %25513, align 1
  %25514 = icmp eq i32 %25498, 0
  %25515 = zext i1 %25514 to i8
  %25516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25515, i8* %25516, align 1
  %25517 = lshr i32 %25498, 31
  %25518 = trunc i32 %25517 to i8
  %25519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25518, i8* %25519, align 1
  %25520 = lshr i32 %25493, 31
  %25521 = lshr i32 %25497, 31
  %25522 = xor i32 %25521, %25520
  %25523 = xor i32 %25517, %25520
  %25524 = add i32 %25523, %25522
  %25525 = icmp eq i32 %25524, 2
  %25526 = zext i1 %25525 to i8
  %25527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25526, i8* %25527, align 1
  store %struct.Memory* %loadMem_476bf4, %struct.Memory** %MEMORY
  %loadMem_476bfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %25528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25529 = getelementptr inbounds %struct.GPR, %struct.GPR* %25528, i32 0, i32 33
  %25530 = getelementptr inbounds %struct.Reg, %struct.Reg* %25529, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %25530 to i64*
  %25531 = load i64, i64* %PC.i344
  %25532 = add i64 %25531, 484
  %25533 = load i64, i64* %PC.i344
  %25534 = add i64 %25533, 6
  %25535 = load i64, i64* %PC.i344
  %25536 = add i64 %25535, 6
  store i64 %25536, i64* %PC.i344
  %25537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25538 = load i8, i8* %25537, align 1
  %25539 = icmp ne i8 %25538, 0
  %25540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %25541 = load i8, i8* %25540, align 1
  %25542 = icmp ne i8 %25541, 0
  %25543 = xor i1 %25539, %25542
  %25544 = xor i1 %25543, true
  %25545 = zext i1 %25544 to i8
  store i8 %25545, i8* %BRANCH_TAKEN, align 1
  %25546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25547 = select i1 %25543, i64 %25534, i64 %25532
  store i64 %25547, i64* %25546, align 8
  store %struct.Memory* %loadMem_476bfb, %struct.Memory** %MEMORY
  %loadBr_476bfb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476bfb = icmp eq i8 %loadBr_476bfb, 1
  br i1 %cmpBr_476bfb, label %block_.L_476ddf, label %block_476c01

block_476c01:                                     ; preds = %block_.L_476bf1
  %loadMem_476c01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25549 = getelementptr inbounds %struct.GPR, %struct.GPR* %25548, i32 0, i32 33
  %25550 = getelementptr inbounds %struct.Reg, %struct.Reg* %25549, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %25550 to i64*
  %25551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25552 = getelementptr inbounds %struct.GPR, %struct.GPR* %25551, i32 0, i32 15
  %25553 = getelementptr inbounds %struct.Reg, %struct.Reg* %25552, i32 0, i32 0
  %RBP.i343 = bitcast %union.anon* %25553 to i64*
  %25554 = load i64, i64* %RBP.i343
  %25555 = sub i64 %25554, 40
  %25556 = load i64, i64* %PC.i342
  %25557 = add i64 %25556, 7
  store i64 %25557, i64* %PC.i342
  %25558 = inttoptr i64 %25555 to i32*
  store i32 0, i32* %25558
  store %struct.Memory* %loadMem_476c01, %struct.Memory** %MEMORY
  br label %block_.L_476c08

block_.L_476c08:                                  ; preds = %block_.L_476da7, %block_476c01
  %loadMem_476c08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25560 = getelementptr inbounds %struct.GPR, %struct.GPR* %25559, i32 0, i32 33
  %25561 = getelementptr inbounds %struct.Reg, %struct.Reg* %25560, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %25561 to i64*
  %25562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25563 = getelementptr inbounds %struct.GPR, %struct.GPR* %25562, i32 0, i32 1
  %25564 = getelementptr inbounds %struct.Reg, %struct.Reg* %25563, i32 0, i32 0
  %RAX.i340 = bitcast %union.anon* %25564 to i64*
  %25565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25566 = getelementptr inbounds %struct.GPR, %struct.GPR* %25565, i32 0, i32 15
  %25567 = getelementptr inbounds %struct.Reg, %struct.Reg* %25566, i32 0, i32 0
  %RBP.i341 = bitcast %union.anon* %25567 to i64*
  %25568 = load i64, i64* %RBP.i341
  %25569 = sub i64 %25568, 40
  %25570 = load i64, i64* %PC.i339
  %25571 = add i64 %25570, 3
  store i64 %25571, i64* %PC.i339
  %25572 = inttoptr i64 %25569 to i32*
  %25573 = load i32, i32* %25572
  %25574 = zext i32 %25573 to i64
  store i64 %25574, i64* %RAX.i340, align 8
  store %struct.Memory* %loadMem_476c08, %struct.Memory** %MEMORY
  %loadMem_476c0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %25575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25576 = getelementptr inbounds %struct.GPR, %struct.GPR* %25575, i32 0, i32 33
  %25577 = getelementptr inbounds %struct.Reg, %struct.Reg* %25576, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %25577 to i64*
  %25578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25579 = getelementptr inbounds %struct.GPR, %struct.GPR* %25578, i32 0, i32 1
  %25580 = getelementptr inbounds %struct.Reg, %struct.Reg* %25579, i32 0, i32 0
  %EAX.i338 = bitcast %union.anon* %25580 to i32*
  %25581 = load i32, i32* %EAX.i338
  %25582 = zext i32 %25581 to i64
  %25583 = load i64, i64* %PC.i337
  %25584 = add i64 %25583, 7
  store i64 %25584, i64* %PC.i337
  %25585 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %25586 = sub i32 %25581, %25585
  %25587 = icmp ult i32 %25581, %25585
  %25588 = zext i1 %25587 to i8
  %25589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25588, i8* %25589, align 1
  %25590 = and i32 %25586, 255
  %25591 = call i32 @llvm.ctpop.i32(i32 %25590)
  %25592 = trunc i32 %25591 to i8
  %25593 = and i8 %25592, 1
  %25594 = xor i8 %25593, 1
  %25595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25594, i8* %25595, align 1
  %25596 = xor i32 %25585, %25581
  %25597 = xor i32 %25596, %25586
  %25598 = lshr i32 %25597, 4
  %25599 = trunc i32 %25598 to i8
  %25600 = and i8 %25599, 1
  %25601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25600, i8* %25601, align 1
  %25602 = icmp eq i32 %25586, 0
  %25603 = zext i1 %25602 to i8
  %25604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25603, i8* %25604, align 1
  %25605 = lshr i32 %25586, 31
  %25606 = trunc i32 %25605 to i8
  %25607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25606, i8* %25607, align 1
  %25608 = lshr i32 %25581, 31
  %25609 = lshr i32 %25585, 31
  %25610 = xor i32 %25609, %25608
  %25611 = xor i32 %25605, %25608
  %25612 = add i32 %25611, %25610
  %25613 = icmp eq i32 %25612, 2
  %25614 = zext i1 %25613 to i8
  %25615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25614, i8* %25615, align 1
  store %struct.Memory* %loadMem_476c0b, %struct.Memory** %MEMORY
  %loadMem_476c12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25617 = getelementptr inbounds %struct.GPR, %struct.GPR* %25616, i32 0, i32 33
  %25618 = getelementptr inbounds %struct.Reg, %struct.Reg* %25617, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %25618 to i64*
  %25619 = load i64, i64* %PC.i336
  %25620 = add i64 %25619, 442
  %25621 = load i64, i64* %PC.i336
  %25622 = add i64 %25621, 6
  %25623 = load i64, i64* %PC.i336
  %25624 = add i64 %25623, 6
  store i64 %25624, i64* %PC.i336
  %25625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25626 = load i8, i8* %25625, align 1
  %25627 = icmp ne i8 %25626, 0
  %25628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %25629 = load i8, i8* %25628, align 1
  %25630 = icmp ne i8 %25629, 0
  %25631 = xor i1 %25627, %25630
  %25632 = xor i1 %25631, true
  %25633 = zext i1 %25632 to i8
  store i8 %25633, i8* %BRANCH_TAKEN, align 1
  %25634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25635 = select i1 %25631, i64 %25622, i64 %25620
  store i64 %25635, i64* %25634, align 8
  store %struct.Memory* %loadMem_476c12, %struct.Memory** %MEMORY
  %loadBr_476c12 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476c12 = icmp eq i8 %loadBr_476c12, 1
  br i1 %cmpBr_476c12, label %block_.L_476dcc, label %block_476c18

block_476c18:                                     ; preds = %block_.L_476c08
  %loadMem_476c18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25637 = getelementptr inbounds %struct.GPR, %struct.GPR* %25636, i32 0, i32 33
  %25638 = getelementptr inbounds %struct.Reg, %struct.Reg* %25637, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %25638 to i64*
  %25639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25640 = getelementptr inbounds %struct.GPR, %struct.GPR* %25639, i32 0, i32 1
  %25641 = getelementptr inbounds %struct.Reg, %struct.Reg* %25640, i32 0, i32 0
  %RAX.i334 = bitcast %union.anon* %25641 to i64*
  %25642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25643 = getelementptr inbounds %struct.GPR, %struct.GPR* %25642, i32 0, i32 15
  %25644 = getelementptr inbounds %struct.Reg, %struct.Reg* %25643, i32 0, i32 0
  %RBP.i335 = bitcast %union.anon* %25644 to i64*
  %25645 = load i64, i64* %RBP.i335
  %25646 = sub i64 %25645, 36
  %25647 = load i64, i64* %PC.i333
  %25648 = add i64 %25647, 4
  store i64 %25648, i64* %PC.i333
  %25649 = inttoptr i64 %25646 to i32*
  %25650 = load i32, i32* %25649
  %25651 = sext i32 %25650 to i64
  %25652 = mul i64 %25651, 20
  %25653 = trunc i64 %25652 to i32
  %25654 = and i64 %25652, 4294967295
  store i64 %25654, i64* %RAX.i334, align 8
  %25655 = shl i64 %25652, 32
  %25656 = ashr exact i64 %25655, 32
  %25657 = icmp ne i64 %25656, %25652
  %25658 = zext i1 %25657 to i8
  %25659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25658, i8* %25659, align 1
  %25660 = and i32 %25653, 255
  %25661 = call i32 @llvm.ctpop.i32(i32 %25660)
  %25662 = trunc i32 %25661 to i8
  %25663 = and i8 %25662, 1
  %25664 = xor i8 %25663, 1
  %25665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25664, i8* %25665, align 1
  %25666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25666, align 1
  %25667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %25667, align 1
  %25668 = lshr i32 %25653, 31
  %25669 = trunc i32 %25668 to i8
  %25670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25669, i8* %25670, align 1
  %25671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25658, i8* %25671, align 1
  store %struct.Memory* %loadMem_476c18, %struct.Memory** %MEMORY
  %loadMem_476c1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %25672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25673 = getelementptr inbounds %struct.GPR, %struct.GPR* %25672, i32 0, i32 33
  %25674 = getelementptr inbounds %struct.Reg, %struct.Reg* %25673, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %25674 to i64*
  %25675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25676 = getelementptr inbounds %struct.GPR, %struct.GPR* %25675, i32 0, i32 1
  %25677 = getelementptr inbounds %struct.Reg, %struct.Reg* %25676, i32 0, i32 0
  %RAX.i332 = bitcast %union.anon* %25677 to i64*
  %25678 = load i64, i64* %RAX.i332
  %25679 = load i64, i64* %PC.i331
  %25680 = add i64 %25679, 3
  store i64 %25680, i64* %PC.i331
  %25681 = trunc i64 %25678 to i32
  %25682 = add i32 21, %25681
  %25683 = zext i32 %25682 to i64
  store i64 %25683, i64* %RAX.i332, align 8
  %25684 = icmp ult i32 %25682, %25681
  %25685 = icmp ult i32 %25682, 21
  %25686 = or i1 %25684, %25685
  %25687 = zext i1 %25686 to i8
  %25688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25687, i8* %25688, align 1
  %25689 = and i32 %25682, 255
  %25690 = call i32 @llvm.ctpop.i32(i32 %25689)
  %25691 = trunc i32 %25690 to i8
  %25692 = and i8 %25691, 1
  %25693 = xor i8 %25692, 1
  %25694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25693, i8* %25694, align 1
  %25695 = xor i64 21, %25678
  %25696 = trunc i64 %25695 to i32
  %25697 = xor i32 %25696, %25682
  %25698 = lshr i32 %25697, 4
  %25699 = trunc i32 %25698 to i8
  %25700 = and i8 %25699, 1
  %25701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25700, i8* %25701, align 1
  %25702 = icmp eq i32 %25682, 0
  %25703 = zext i1 %25702 to i8
  %25704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25703, i8* %25704, align 1
  %25705 = lshr i32 %25682, 31
  %25706 = trunc i32 %25705 to i8
  %25707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25706, i8* %25707, align 1
  %25708 = lshr i32 %25681, 31
  %25709 = xor i32 %25705, %25708
  %25710 = add i32 %25709, %25705
  %25711 = icmp eq i32 %25710, 2
  %25712 = zext i1 %25711 to i8
  %25713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25712, i8* %25713, align 1
  store %struct.Memory* %loadMem_476c1c, %struct.Memory** %MEMORY
  %loadMem_476c1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %25714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25715 = getelementptr inbounds %struct.GPR, %struct.GPR* %25714, i32 0, i32 33
  %25716 = getelementptr inbounds %struct.Reg, %struct.Reg* %25715, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %25716 to i64*
  %25717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25718 = getelementptr inbounds %struct.GPR, %struct.GPR* %25717, i32 0, i32 1
  %25719 = getelementptr inbounds %struct.Reg, %struct.Reg* %25718, i32 0, i32 0
  %RAX.i329 = bitcast %union.anon* %25719 to i64*
  %25720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25721 = getelementptr inbounds %struct.GPR, %struct.GPR* %25720, i32 0, i32 15
  %25722 = getelementptr inbounds %struct.Reg, %struct.Reg* %25721, i32 0, i32 0
  %RBP.i330 = bitcast %union.anon* %25722 to i64*
  %25723 = load i64, i64* %RAX.i329
  %25724 = load i64, i64* %RBP.i330
  %25725 = sub i64 %25724, 40
  %25726 = load i64, i64* %PC.i328
  %25727 = add i64 %25726, 3
  store i64 %25727, i64* %PC.i328
  %25728 = trunc i64 %25723 to i32
  %25729 = inttoptr i64 %25725 to i32*
  %25730 = load i32, i32* %25729
  %25731 = add i32 %25730, %25728
  %25732 = zext i32 %25731 to i64
  store i64 %25732, i64* %RAX.i329, align 8
  %25733 = icmp ult i32 %25731, %25728
  %25734 = icmp ult i32 %25731, %25730
  %25735 = or i1 %25733, %25734
  %25736 = zext i1 %25735 to i8
  %25737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25736, i8* %25737, align 1
  %25738 = and i32 %25731, 255
  %25739 = call i32 @llvm.ctpop.i32(i32 %25738)
  %25740 = trunc i32 %25739 to i8
  %25741 = and i8 %25740, 1
  %25742 = xor i8 %25741, 1
  %25743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25742, i8* %25743, align 1
  %25744 = xor i32 %25730, %25728
  %25745 = xor i32 %25744, %25731
  %25746 = lshr i32 %25745, 4
  %25747 = trunc i32 %25746 to i8
  %25748 = and i8 %25747, 1
  %25749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25748, i8* %25749, align 1
  %25750 = icmp eq i32 %25731, 0
  %25751 = zext i1 %25750 to i8
  %25752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25751, i8* %25752, align 1
  %25753 = lshr i32 %25731, 31
  %25754 = trunc i32 %25753 to i8
  %25755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25754, i8* %25755, align 1
  %25756 = lshr i32 %25728, 31
  %25757 = lshr i32 %25730, 31
  %25758 = xor i32 %25753, %25756
  %25759 = xor i32 %25753, %25757
  %25760 = add i32 %25758, %25759
  %25761 = icmp eq i32 %25760, 2
  %25762 = zext i1 %25761 to i8
  %25763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25762, i8* %25763, align 1
  store %struct.Memory* %loadMem_476c1f, %struct.Memory** %MEMORY
  %loadMem_476c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25765 = getelementptr inbounds %struct.GPR, %struct.GPR* %25764, i32 0, i32 33
  %25766 = getelementptr inbounds %struct.Reg, %struct.Reg* %25765, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %25766 to i64*
  %25767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25768 = getelementptr inbounds %struct.GPR, %struct.GPR* %25767, i32 0, i32 1
  %25769 = getelementptr inbounds %struct.Reg, %struct.Reg* %25768, i32 0, i32 0
  %EAX.i326 = bitcast %union.anon* %25769 to i32*
  %25770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25771 = getelementptr inbounds %struct.GPR, %struct.GPR* %25770, i32 0, i32 5
  %25772 = getelementptr inbounds %struct.Reg, %struct.Reg* %25771, i32 0, i32 0
  %RCX.i327 = bitcast %union.anon* %25772 to i64*
  %25773 = load i32, i32* %EAX.i326
  %25774 = zext i32 %25773 to i64
  %25775 = load i64, i64* %PC.i325
  %25776 = add i64 %25775, 3
  store i64 %25776, i64* %PC.i325
  %25777 = shl i64 %25774, 32
  %25778 = ashr exact i64 %25777, 32
  store i64 %25778, i64* %RCX.i327, align 8
  store %struct.Memory* %loadMem_476c22, %struct.Memory** %MEMORY
  %loadMem_476c25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25780 = getelementptr inbounds %struct.GPR, %struct.GPR* %25779, i32 0, i32 33
  %25781 = getelementptr inbounds %struct.Reg, %struct.Reg* %25780, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %25781 to i64*
  %25782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25783 = getelementptr inbounds %struct.GPR, %struct.GPR* %25782, i32 0, i32 5
  %25784 = getelementptr inbounds %struct.Reg, %struct.Reg* %25783, i32 0, i32 0
  %RCX.i323 = bitcast %union.anon* %25784 to i64*
  %25785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25786 = getelementptr inbounds %struct.GPR, %struct.GPR* %25785, i32 0, i32 15
  %25787 = getelementptr inbounds %struct.Reg, %struct.Reg* %25786, i32 0, i32 0
  %RBP.i324 = bitcast %union.anon* %25787 to i64*
  %25788 = load i64, i64* %RBP.i324
  %25789 = load i64, i64* %RCX.i323
  %25790 = add i64 %25788, -640
  %25791 = add i64 %25790, %25789
  %25792 = load i64, i64* %PC.i322
  %25793 = add i64 %25792, 8
  store i64 %25793, i64* %PC.i322
  %25794 = inttoptr i64 %25791 to i8*
  %25795 = load i8, i8* %25794
  %25796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %25796, align 1
  %25797 = zext i8 %25795 to i32
  %25798 = call i32 @llvm.ctpop.i32(i32 %25797)
  %25799 = trunc i32 %25798 to i8
  %25800 = and i8 %25799, 1
  %25801 = xor i8 %25800, 1
  %25802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25801, i8* %25802, align 1
  %25803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25803, align 1
  %25804 = icmp eq i8 %25795, 0
  %25805 = zext i1 %25804 to i8
  %25806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25805, i8* %25806, align 1
  %25807 = lshr i8 %25795, 7
  %25808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25807, i8* %25808, align 1
  %25809 = lshr i8 %25795, 7
  %25810 = xor i8 %25807, %25809
  %25811 = add i8 %25810, %25809
  %25812 = icmp eq i8 %25811, 2
  %25813 = zext i1 %25812 to i8
  %25814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25813, i8* %25814, align 1
  store %struct.Memory* %loadMem_476c25, %struct.Memory** %MEMORY
  %loadMem_476c2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %25815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25816 = getelementptr inbounds %struct.GPR, %struct.GPR* %25815, i32 0, i32 33
  %25817 = getelementptr inbounds %struct.Reg, %struct.Reg* %25816, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %25817 to i64*
  %25818 = load i64, i64* %PC.i321
  %25819 = add i64 %25818, 116
  %25820 = load i64, i64* %PC.i321
  %25821 = add i64 %25820, 6
  %25822 = load i64, i64* %PC.i321
  %25823 = add i64 %25822, 6
  store i64 %25823, i64* %PC.i321
  %25824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25825 = load i8, i8* %25824, align 1
  store i8 %25825, i8* %BRANCH_TAKEN, align 1
  %25826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25827 = icmp ne i8 %25825, 0
  %25828 = select i1 %25827, i64 %25819, i64 %25821
  store i64 %25828, i64* %25826, align 8
  store %struct.Memory* %loadMem_476c2d, %struct.Memory** %MEMORY
  %loadBr_476c2d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476c2d = icmp eq i8 %loadBr_476c2d, 1
  br i1 %cmpBr_476c2d, label %block_.L_476ca1, label %block_476c33

block_476c33:                                     ; preds = %block_476c18
  %loadMem_476c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25830 = getelementptr inbounds %struct.GPR, %struct.GPR* %25829, i32 0, i32 33
  %25831 = getelementptr inbounds %struct.Reg, %struct.Reg* %25830, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %25831 to i64*
  %25832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25833 = getelementptr inbounds %struct.GPR, %struct.GPR* %25832, i32 0, i32 1
  %25834 = getelementptr inbounds %struct.Reg, %struct.Reg* %25833, i32 0, i32 0
  %RAX.i319 = bitcast %union.anon* %25834 to i64*
  %25835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25836 = getelementptr inbounds %struct.GPR, %struct.GPR* %25835, i32 0, i32 15
  %25837 = getelementptr inbounds %struct.Reg, %struct.Reg* %25836, i32 0, i32 0
  %RBP.i320 = bitcast %union.anon* %25837 to i64*
  %25838 = load i64, i64* %RBP.i320
  %25839 = sub i64 %25838, 36
  %25840 = load i64, i64* %PC.i318
  %25841 = add i64 %25840, 4
  store i64 %25841, i64* %PC.i318
  %25842 = inttoptr i64 %25839 to i32*
  %25843 = load i32, i32* %25842
  %25844 = sext i32 %25843 to i64
  %25845 = mul i64 %25844, 20
  %25846 = trunc i64 %25845 to i32
  %25847 = and i64 %25845, 4294967295
  store i64 %25847, i64* %RAX.i319, align 8
  %25848 = shl i64 %25845, 32
  %25849 = ashr exact i64 %25848, 32
  %25850 = icmp ne i64 %25849, %25845
  %25851 = zext i1 %25850 to i8
  %25852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25851, i8* %25852, align 1
  %25853 = and i32 %25846, 255
  %25854 = call i32 @llvm.ctpop.i32(i32 %25853)
  %25855 = trunc i32 %25854 to i8
  %25856 = and i8 %25855, 1
  %25857 = xor i8 %25856, 1
  %25858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25857, i8* %25858, align 1
  %25859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25859, align 1
  %25860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %25860, align 1
  %25861 = lshr i32 %25846, 31
  %25862 = trunc i32 %25861 to i8
  %25863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25862, i8* %25863, align 1
  %25864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25851, i8* %25864, align 1
  store %struct.Memory* %loadMem_476c33, %struct.Memory** %MEMORY
  %loadMem_476c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25866 = getelementptr inbounds %struct.GPR, %struct.GPR* %25865, i32 0, i32 33
  %25867 = getelementptr inbounds %struct.Reg, %struct.Reg* %25866, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %25867 to i64*
  %25868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25869 = getelementptr inbounds %struct.GPR, %struct.GPR* %25868, i32 0, i32 1
  %25870 = getelementptr inbounds %struct.Reg, %struct.Reg* %25869, i32 0, i32 0
  %RAX.i317 = bitcast %union.anon* %25870 to i64*
  %25871 = load i64, i64* %RAX.i317
  %25872 = load i64, i64* %PC.i316
  %25873 = add i64 %25872, 3
  store i64 %25873, i64* %PC.i316
  %25874 = trunc i64 %25871 to i32
  %25875 = add i32 21, %25874
  %25876 = zext i32 %25875 to i64
  store i64 %25876, i64* %RAX.i317, align 8
  %25877 = icmp ult i32 %25875, %25874
  %25878 = icmp ult i32 %25875, 21
  %25879 = or i1 %25877, %25878
  %25880 = zext i1 %25879 to i8
  %25881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25880, i8* %25881, align 1
  %25882 = and i32 %25875, 255
  %25883 = call i32 @llvm.ctpop.i32(i32 %25882)
  %25884 = trunc i32 %25883 to i8
  %25885 = and i8 %25884, 1
  %25886 = xor i8 %25885, 1
  %25887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25886, i8* %25887, align 1
  %25888 = xor i64 21, %25871
  %25889 = trunc i64 %25888 to i32
  %25890 = xor i32 %25889, %25875
  %25891 = lshr i32 %25890, 4
  %25892 = trunc i32 %25891 to i8
  %25893 = and i8 %25892, 1
  %25894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25893, i8* %25894, align 1
  %25895 = icmp eq i32 %25875, 0
  %25896 = zext i1 %25895 to i8
  %25897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25896, i8* %25897, align 1
  %25898 = lshr i32 %25875, 31
  %25899 = trunc i32 %25898 to i8
  %25900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25899, i8* %25900, align 1
  %25901 = lshr i32 %25874, 31
  %25902 = xor i32 %25898, %25901
  %25903 = add i32 %25902, %25898
  %25904 = icmp eq i32 %25903, 2
  %25905 = zext i1 %25904 to i8
  %25906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25905, i8* %25906, align 1
  store %struct.Memory* %loadMem_476c37, %struct.Memory** %MEMORY
  %loadMem_476c3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %25907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25908 = getelementptr inbounds %struct.GPR, %struct.GPR* %25907, i32 0, i32 33
  %25909 = getelementptr inbounds %struct.Reg, %struct.Reg* %25908, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %25909 to i64*
  %25910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25911 = getelementptr inbounds %struct.GPR, %struct.GPR* %25910, i32 0, i32 1
  %25912 = getelementptr inbounds %struct.Reg, %struct.Reg* %25911, i32 0, i32 0
  %RAX.i314 = bitcast %union.anon* %25912 to i64*
  %25913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25914 = getelementptr inbounds %struct.GPR, %struct.GPR* %25913, i32 0, i32 15
  %25915 = getelementptr inbounds %struct.Reg, %struct.Reg* %25914, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %25915 to i64*
  %25916 = load i64, i64* %RAX.i314
  %25917 = load i64, i64* %RBP.i315
  %25918 = sub i64 %25917, 40
  %25919 = load i64, i64* %PC.i313
  %25920 = add i64 %25919, 3
  store i64 %25920, i64* %PC.i313
  %25921 = trunc i64 %25916 to i32
  %25922 = inttoptr i64 %25918 to i32*
  %25923 = load i32, i32* %25922
  %25924 = add i32 %25923, %25921
  %25925 = zext i32 %25924 to i64
  store i64 %25925, i64* %RAX.i314, align 8
  %25926 = icmp ult i32 %25924, %25921
  %25927 = icmp ult i32 %25924, %25923
  %25928 = or i1 %25926, %25927
  %25929 = zext i1 %25928 to i8
  %25930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25929, i8* %25930, align 1
  %25931 = and i32 %25924, 255
  %25932 = call i32 @llvm.ctpop.i32(i32 %25931)
  %25933 = trunc i32 %25932 to i8
  %25934 = and i8 %25933, 1
  %25935 = xor i8 %25934, 1
  %25936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25935, i8* %25936, align 1
  %25937 = xor i32 %25923, %25921
  %25938 = xor i32 %25937, %25924
  %25939 = lshr i32 %25938, 4
  %25940 = trunc i32 %25939 to i8
  %25941 = and i8 %25940, 1
  %25942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25941, i8* %25942, align 1
  %25943 = icmp eq i32 %25924, 0
  %25944 = zext i1 %25943 to i8
  %25945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25944, i8* %25945, align 1
  %25946 = lshr i32 %25924, 31
  %25947 = trunc i32 %25946 to i8
  %25948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25947, i8* %25948, align 1
  %25949 = lshr i32 %25921, 31
  %25950 = lshr i32 %25923, 31
  %25951 = xor i32 %25946, %25949
  %25952 = xor i32 %25946, %25950
  %25953 = add i32 %25951, %25952
  %25954 = icmp eq i32 %25953, 2
  %25955 = zext i1 %25954 to i8
  %25956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25955, i8* %25956, align 1
  store %struct.Memory* %loadMem_476c3a, %struct.Memory** %MEMORY
  %loadMem_476c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %25957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25958 = getelementptr inbounds %struct.GPR, %struct.GPR* %25957, i32 0, i32 33
  %25959 = getelementptr inbounds %struct.Reg, %struct.Reg* %25958, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %25959 to i64*
  %25960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25961 = getelementptr inbounds %struct.GPR, %struct.GPR* %25960, i32 0, i32 1
  %25962 = getelementptr inbounds %struct.Reg, %struct.Reg* %25961, i32 0, i32 0
  %EAX.i311 = bitcast %union.anon* %25962 to i32*
  %25963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25964 = getelementptr inbounds %struct.GPR, %struct.GPR* %25963, i32 0, i32 5
  %25965 = getelementptr inbounds %struct.Reg, %struct.Reg* %25964, i32 0, i32 0
  %RCX.i312 = bitcast %union.anon* %25965 to i64*
  %25966 = load i32, i32* %EAX.i311
  %25967 = zext i32 %25966 to i64
  %25968 = load i64, i64* %PC.i310
  %25969 = add i64 %25968, 3
  store i64 %25969, i64* %PC.i310
  %25970 = shl i64 %25967, 32
  %25971 = ashr exact i64 %25970, 32
  store i64 %25971, i64* %RCX.i312, align 8
  store %struct.Memory* %loadMem_476c3d, %struct.Memory** %MEMORY
  %loadMem_476c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25973 = getelementptr inbounds %struct.GPR, %struct.GPR* %25972, i32 0, i32 33
  %25974 = getelementptr inbounds %struct.Reg, %struct.Reg* %25973, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %25974 to i64*
  %25975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25976 = getelementptr inbounds %struct.GPR, %struct.GPR* %25975, i32 0, i32 1
  %25977 = getelementptr inbounds %struct.Reg, %struct.Reg* %25976, i32 0, i32 0
  %RAX.i307 = bitcast %union.anon* %25977 to i64*
  %25978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25979 = getelementptr inbounds %struct.GPR, %struct.GPR* %25978, i32 0, i32 5
  %25980 = getelementptr inbounds %struct.Reg, %struct.Reg* %25979, i32 0, i32 0
  %RCX.i308 = bitcast %union.anon* %25980 to i64*
  %25981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25982 = getelementptr inbounds %struct.GPR, %struct.GPR* %25981, i32 0, i32 15
  %25983 = getelementptr inbounds %struct.Reg, %struct.Reg* %25982, i32 0, i32 0
  %RBP.i309 = bitcast %union.anon* %25983 to i64*
  %25984 = load i64, i64* %RBP.i309
  %25985 = load i64, i64* %RCX.i308
  %25986 = add i64 %25984, -1040
  %25987 = add i64 %25986, %25985
  %25988 = load i64, i64* %PC.i306
  %25989 = add i64 %25988, 8
  store i64 %25989, i64* %PC.i306
  %25990 = inttoptr i64 %25987 to i8*
  %25991 = load i8, i8* %25990
  %25992 = sext i8 %25991 to i64
  %25993 = and i64 %25992, 4294967295
  store i64 %25993, i64* %RAX.i307, align 8
  store %struct.Memory* %loadMem_476c40, %struct.Memory** %MEMORY
  %loadMem_476c48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25995 = getelementptr inbounds %struct.GPR, %struct.GPR* %25994, i32 0, i32 33
  %25996 = getelementptr inbounds %struct.Reg, %struct.Reg* %25995, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %25996 to i64*
  %25997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25998 = getelementptr inbounds %struct.GPR, %struct.GPR* %25997, i32 0, i32 1
  %25999 = getelementptr inbounds %struct.Reg, %struct.Reg* %25998, i32 0, i32 0
  %EAX.i305 = bitcast %union.anon* %25999 to i32*
  %26000 = load i32, i32* %EAX.i305
  %26001 = zext i32 %26000 to i64
  %26002 = load i64, i64* %PC.i304
  %26003 = add i64 %26002, 3
  store i64 %26003, i64* %PC.i304
  %26004 = sub i32 %26000, 1
  %26005 = icmp ult i32 %26000, 1
  %26006 = zext i1 %26005 to i8
  %26007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26006, i8* %26007, align 1
  %26008 = and i32 %26004, 255
  %26009 = call i32 @llvm.ctpop.i32(i32 %26008)
  %26010 = trunc i32 %26009 to i8
  %26011 = and i8 %26010, 1
  %26012 = xor i8 %26011, 1
  %26013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26012, i8* %26013, align 1
  %26014 = xor i64 1, %26001
  %26015 = trunc i64 %26014 to i32
  %26016 = xor i32 %26015, %26004
  %26017 = lshr i32 %26016, 4
  %26018 = trunc i32 %26017 to i8
  %26019 = and i8 %26018, 1
  %26020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26019, i8* %26020, align 1
  %26021 = icmp eq i32 %26004, 0
  %26022 = zext i1 %26021 to i8
  %26023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26022, i8* %26023, align 1
  %26024 = lshr i32 %26004, 31
  %26025 = trunc i32 %26024 to i8
  %26026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26025, i8* %26026, align 1
  %26027 = lshr i32 %26000, 31
  %26028 = xor i32 %26024, %26027
  %26029 = add i32 %26028, %26027
  %26030 = icmp eq i32 %26029, 2
  %26031 = zext i1 %26030 to i8
  %26032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26031, i8* %26032, align 1
  store %struct.Memory* %loadMem_476c48, %struct.Memory** %MEMORY
  %loadMem_476c4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %26033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26034 = getelementptr inbounds %struct.GPR, %struct.GPR* %26033, i32 0, i32 33
  %26035 = getelementptr inbounds %struct.Reg, %struct.Reg* %26034, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %26035 to i64*
  %26036 = load i64, i64* %PC.i303
  %26037 = add i64 %26036, 21
  %26038 = load i64, i64* %PC.i303
  %26039 = add i64 %26038, 6
  %26040 = load i64, i64* %PC.i303
  %26041 = add i64 %26040, 6
  store i64 %26041, i64* %PC.i303
  %26042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26043 = load i8, i8* %26042, align 1
  %26044 = icmp eq i8 %26043, 0
  %26045 = zext i1 %26044 to i8
  store i8 %26045, i8* %BRANCH_TAKEN, align 1
  %26046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26047 = select i1 %26044, i64 %26037, i64 %26039
  store i64 %26047, i64* %26046, align 8
  store %struct.Memory* %loadMem_476c4b, %struct.Memory** %MEMORY
  %loadBr_476c4b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476c4b = icmp eq i8 %loadBr_476c4b, 1
  br i1 %cmpBr_476c4b, label %block_.L_476c60, label %block_476c51

block_476c51:                                     ; preds = %block_476c33
  %loadMem_476c51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26049 = getelementptr inbounds %struct.GPR, %struct.GPR* %26048, i32 0, i32 33
  %26050 = getelementptr inbounds %struct.Reg, %struct.Reg* %26049, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %26050 to i64*
  %26051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26052 = getelementptr inbounds %struct.GPR, %struct.GPR* %26051, i32 0, i32 15
  %26053 = getelementptr inbounds %struct.Reg, %struct.Reg* %26052, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %26053 to i64*
  %26054 = load i64, i64* %RBP.i302
  %26055 = sub i64 %26054, 1132
  %26056 = load i64, i64* %PC.i301
  %26057 = add i64 %26056, 10
  store i64 %26057, i64* %PC.i301
  %26058 = inttoptr i64 %26055 to i32*
  store i32 1, i32* %26058
  store %struct.Memory* %loadMem_476c51, %struct.Memory** %MEMORY
  %loadMem_476c5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %26059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26060 = getelementptr inbounds %struct.GPR, %struct.GPR* %26059, i32 0, i32 33
  %26061 = getelementptr inbounds %struct.Reg, %struct.Reg* %26060, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %26061 to i64*
  %26062 = load i64, i64* %PC.i300
  %26063 = add i64 %26062, 65
  %26064 = load i64, i64* %PC.i300
  %26065 = add i64 %26064, 5
  store i64 %26065, i64* %PC.i300
  %26066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %26063, i64* %26066, align 8
  store %struct.Memory* %loadMem_476c5b, %struct.Memory** %MEMORY
  br label %block_.L_476c9c

block_.L_476c60:                                  ; preds = %block_476c33
  %loadMem_476c60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26068 = getelementptr inbounds %struct.GPR, %struct.GPR* %26067, i32 0, i32 33
  %26069 = getelementptr inbounds %struct.Reg, %struct.Reg* %26068, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %26069 to i64*
  %26070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26071 = getelementptr inbounds %struct.GPR, %struct.GPR* %26070, i32 0, i32 1
  %26072 = getelementptr inbounds %struct.Reg, %struct.Reg* %26071, i32 0, i32 0
  %RAX.i298 = bitcast %union.anon* %26072 to i64*
  %26073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26074 = getelementptr inbounds %struct.GPR, %struct.GPR* %26073, i32 0, i32 15
  %26075 = getelementptr inbounds %struct.Reg, %struct.Reg* %26074, i32 0, i32 0
  %RBP.i299 = bitcast %union.anon* %26075 to i64*
  %26076 = load i64, i64* %RBP.i299
  %26077 = sub i64 %26076, 36
  %26078 = load i64, i64* %PC.i297
  %26079 = add i64 %26078, 4
  store i64 %26079, i64* %PC.i297
  %26080 = inttoptr i64 %26077 to i32*
  %26081 = load i32, i32* %26080
  %26082 = sext i32 %26081 to i64
  %26083 = mul i64 %26082, 20
  %26084 = trunc i64 %26083 to i32
  %26085 = and i64 %26083, 4294967295
  store i64 %26085, i64* %RAX.i298, align 8
  %26086 = shl i64 %26083, 32
  %26087 = ashr exact i64 %26086, 32
  %26088 = icmp ne i64 %26087, %26083
  %26089 = zext i1 %26088 to i8
  %26090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26089, i8* %26090, align 1
  %26091 = and i32 %26084, 255
  %26092 = call i32 @llvm.ctpop.i32(i32 %26091)
  %26093 = trunc i32 %26092 to i8
  %26094 = and i8 %26093, 1
  %26095 = xor i8 %26094, 1
  %26096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26095, i8* %26096, align 1
  %26097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26097, align 1
  %26098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %26098, align 1
  %26099 = lshr i32 %26084, 31
  %26100 = trunc i32 %26099 to i8
  %26101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26100, i8* %26101, align 1
  %26102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26089, i8* %26102, align 1
  store %struct.Memory* %loadMem_476c60, %struct.Memory** %MEMORY
  %loadMem_476c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26104 = getelementptr inbounds %struct.GPR, %struct.GPR* %26103, i32 0, i32 33
  %26105 = getelementptr inbounds %struct.Reg, %struct.Reg* %26104, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %26105 to i64*
  %26106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26107 = getelementptr inbounds %struct.GPR, %struct.GPR* %26106, i32 0, i32 1
  %26108 = getelementptr inbounds %struct.Reg, %struct.Reg* %26107, i32 0, i32 0
  %RAX.i296 = bitcast %union.anon* %26108 to i64*
  %26109 = load i64, i64* %RAX.i296
  %26110 = load i64, i64* %PC.i295
  %26111 = add i64 %26110, 3
  store i64 %26111, i64* %PC.i295
  %26112 = trunc i64 %26109 to i32
  %26113 = add i32 21, %26112
  %26114 = zext i32 %26113 to i64
  store i64 %26114, i64* %RAX.i296, align 8
  %26115 = icmp ult i32 %26113, %26112
  %26116 = icmp ult i32 %26113, 21
  %26117 = or i1 %26115, %26116
  %26118 = zext i1 %26117 to i8
  %26119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26118, i8* %26119, align 1
  %26120 = and i32 %26113, 255
  %26121 = call i32 @llvm.ctpop.i32(i32 %26120)
  %26122 = trunc i32 %26121 to i8
  %26123 = and i8 %26122, 1
  %26124 = xor i8 %26123, 1
  %26125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26124, i8* %26125, align 1
  %26126 = xor i64 21, %26109
  %26127 = trunc i64 %26126 to i32
  %26128 = xor i32 %26127, %26113
  %26129 = lshr i32 %26128, 4
  %26130 = trunc i32 %26129 to i8
  %26131 = and i8 %26130, 1
  %26132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26131, i8* %26132, align 1
  %26133 = icmp eq i32 %26113, 0
  %26134 = zext i1 %26133 to i8
  %26135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26134, i8* %26135, align 1
  %26136 = lshr i32 %26113, 31
  %26137 = trunc i32 %26136 to i8
  %26138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26137, i8* %26138, align 1
  %26139 = lshr i32 %26112, 31
  %26140 = xor i32 %26136, %26139
  %26141 = add i32 %26140, %26136
  %26142 = icmp eq i32 %26141, 2
  %26143 = zext i1 %26142 to i8
  %26144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26143, i8* %26144, align 1
  store %struct.Memory* %loadMem_476c64, %struct.Memory** %MEMORY
  %loadMem_476c67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26146 = getelementptr inbounds %struct.GPR, %struct.GPR* %26145, i32 0, i32 33
  %26147 = getelementptr inbounds %struct.Reg, %struct.Reg* %26146, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %26147 to i64*
  %26148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26149 = getelementptr inbounds %struct.GPR, %struct.GPR* %26148, i32 0, i32 1
  %26150 = getelementptr inbounds %struct.Reg, %struct.Reg* %26149, i32 0, i32 0
  %RAX.i293 = bitcast %union.anon* %26150 to i64*
  %26151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26152 = getelementptr inbounds %struct.GPR, %struct.GPR* %26151, i32 0, i32 15
  %26153 = getelementptr inbounds %struct.Reg, %struct.Reg* %26152, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %26153 to i64*
  %26154 = load i64, i64* %RAX.i293
  %26155 = load i64, i64* %RBP.i294
  %26156 = sub i64 %26155, 40
  %26157 = load i64, i64* %PC.i292
  %26158 = add i64 %26157, 3
  store i64 %26158, i64* %PC.i292
  %26159 = trunc i64 %26154 to i32
  %26160 = inttoptr i64 %26156 to i32*
  %26161 = load i32, i32* %26160
  %26162 = add i32 %26161, %26159
  %26163 = zext i32 %26162 to i64
  store i64 %26163, i64* %RAX.i293, align 8
  %26164 = icmp ult i32 %26162, %26159
  %26165 = icmp ult i32 %26162, %26161
  %26166 = or i1 %26164, %26165
  %26167 = zext i1 %26166 to i8
  %26168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26167, i8* %26168, align 1
  %26169 = and i32 %26162, 255
  %26170 = call i32 @llvm.ctpop.i32(i32 %26169)
  %26171 = trunc i32 %26170 to i8
  %26172 = and i8 %26171, 1
  %26173 = xor i8 %26172, 1
  %26174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26173, i8* %26174, align 1
  %26175 = xor i32 %26161, %26159
  %26176 = xor i32 %26175, %26162
  %26177 = lshr i32 %26176, 4
  %26178 = trunc i32 %26177 to i8
  %26179 = and i8 %26178, 1
  %26180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26179, i8* %26180, align 1
  %26181 = icmp eq i32 %26162, 0
  %26182 = zext i1 %26181 to i8
  %26183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26182, i8* %26183, align 1
  %26184 = lshr i32 %26162, 31
  %26185 = trunc i32 %26184 to i8
  %26186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26185, i8* %26186, align 1
  %26187 = lshr i32 %26159, 31
  %26188 = lshr i32 %26161, 31
  %26189 = xor i32 %26184, %26187
  %26190 = xor i32 %26184, %26188
  %26191 = add i32 %26189, %26190
  %26192 = icmp eq i32 %26191, 2
  %26193 = zext i1 %26192 to i8
  %26194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26193, i8* %26194, align 1
  store %struct.Memory* %loadMem_476c67, %struct.Memory** %MEMORY
  %loadMem_476c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %26195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26196 = getelementptr inbounds %struct.GPR, %struct.GPR* %26195, i32 0, i32 33
  %26197 = getelementptr inbounds %struct.Reg, %struct.Reg* %26196, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %26197 to i64*
  %26198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26199 = getelementptr inbounds %struct.GPR, %struct.GPR* %26198, i32 0, i32 1
  %26200 = getelementptr inbounds %struct.Reg, %struct.Reg* %26199, i32 0, i32 0
  %EAX.i290 = bitcast %union.anon* %26200 to i32*
  %26201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26202 = getelementptr inbounds %struct.GPR, %struct.GPR* %26201, i32 0, i32 5
  %26203 = getelementptr inbounds %struct.Reg, %struct.Reg* %26202, i32 0, i32 0
  %RCX.i291 = bitcast %union.anon* %26203 to i64*
  %26204 = load i32, i32* %EAX.i290
  %26205 = zext i32 %26204 to i64
  %26206 = load i64, i64* %PC.i289
  %26207 = add i64 %26206, 3
  store i64 %26207, i64* %PC.i289
  %26208 = shl i64 %26205, 32
  %26209 = ashr exact i64 %26208, 32
  store i64 %26209, i64* %RCX.i291, align 8
  store %struct.Memory* %loadMem_476c6a, %struct.Memory** %MEMORY
  %loadMem_476c6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %26210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26211 = getelementptr inbounds %struct.GPR, %struct.GPR* %26210, i32 0, i32 33
  %26212 = getelementptr inbounds %struct.Reg, %struct.Reg* %26211, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %26212 to i64*
  %26213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26214 = getelementptr inbounds %struct.GPR, %struct.GPR* %26213, i32 0, i32 1
  %26215 = getelementptr inbounds %struct.Reg, %struct.Reg* %26214, i32 0, i32 0
  %RAX.i286 = bitcast %union.anon* %26215 to i64*
  %26216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26217 = getelementptr inbounds %struct.GPR, %struct.GPR* %26216, i32 0, i32 5
  %26218 = getelementptr inbounds %struct.Reg, %struct.Reg* %26217, i32 0, i32 0
  %RCX.i287 = bitcast %union.anon* %26218 to i64*
  %26219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26220 = getelementptr inbounds %struct.GPR, %struct.GPR* %26219, i32 0, i32 15
  %26221 = getelementptr inbounds %struct.Reg, %struct.Reg* %26220, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %26221 to i64*
  %26222 = load i64, i64* %RBP.i288
  %26223 = load i64, i64* %RCX.i287
  %26224 = add i64 %26222, -1040
  %26225 = add i64 %26224, %26223
  %26226 = load i64, i64* %PC.i285
  %26227 = add i64 %26226, 8
  store i64 %26227, i64* %PC.i285
  %26228 = inttoptr i64 %26225 to i8*
  %26229 = load i8, i8* %26228
  %26230 = sext i8 %26229 to i64
  %26231 = and i64 %26230, 4294967295
  store i64 %26231, i64* %RAX.i286, align 8
  store %struct.Memory* %loadMem_476c6d, %struct.Memory** %MEMORY
  %loadMem_476c75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26233 = getelementptr inbounds %struct.GPR, %struct.GPR* %26232, i32 0, i32 33
  %26234 = getelementptr inbounds %struct.Reg, %struct.Reg* %26233, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %26234 to i64*
  %26235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26236 = getelementptr inbounds %struct.GPR, %struct.GPR* %26235, i32 0, i32 1
  %26237 = getelementptr inbounds %struct.Reg, %struct.Reg* %26236, i32 0, i32 0
  %EAX.i284 = bitcast %union.anon* %26237 to i32*
  %26238 = load i32, i32* %EAX.i284
  %26239 = zext i32 %26238 to i64
  %26240 = load i64, i64* %PC.i283
  %26241 = add i64 %26240, 3
  store i64 %26241, i64* %PC.i283
  %26242 = sub i32 %26238, 2
  %26243 = icmp ult i32 %26238, 2
  %26244 = zext i1 %26243 to i8
  %26245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26244, i8* %26245, align 1
  %26246 = and i32 %26242, 255
  %26247 = call i32 @llvm.ctpop.i32(i32 %26246)
  %26248 = trunc i32 %26247 to i8
  %26249 = and i8 %26248, 1
  %26250 = xor i8 %26249, 1
  %26251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26250, i8* %26251, align 1
  %26252 = xor i64 2, %26239
  %26253 = trunc i64 %26252 to i32
  %26254 = xor i32 %26253, %26242
  %26255 = lshr i32 %26254, 4
  %26256 = trunc i32 %26255 to i8
  %26257 = and i8 %26256, 1
  %26258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26257, i8* %26258, align 1
  %26259 = icmp eq i32 %26242, 0
  %26260 = zext i1 %26259 to i8
  %26261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26260, i8* %26261, align 1
  %26262 = lshr i32 %26242, 31
  %26263 = trunc i32 %26262 to i8
  %26264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26263, i8* %26264, align 1
  %26265 = lshr i32 %26238, 31
  %26266 = xor i32 %26262, %26265
  %26267 = add i32 %26266, %26265
  %26268 = icmp eq i32 %26267, 2
  %26269 = zext i1 %26268 to i8
  %26270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26269, i8* %26270, align 1
  store %struct.Memory* %loadMem_476c75, %struct.Memory** %MEMORY
  %loadMem_476c78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26272 = getelementptr inbounds %struct.GPR, %struct.GPR* %26271, i32 0, i32 33
  %26273 = getelementptr inbounds %struct.Reg, %struct.Reg* %26272, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %26273 to i64*
  %26274 = load i64, i64* %PC.i282
  %26275 = add i64 %26274, 21
  %26276 = load i64, i64* %PC.i282
  %26277 = add i64 %26276, 6
  %26278 = load i64, i64* %PC.i282
  %26279 = add i64 %26278, 6
  store i64 %26279, i64* %PC.i282
  %26280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26281 = load i8, i8* %26280, align 1
  %26282 = icmp eq i8 %26281, 0
  %26283 = zext i1 %26282 to i8
  store i8 %26283, i8* %BRANCH_TAKEN, align 1
  %26284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26285 = select i1 %26282, i64 %26275, i64 %26277
  store i64 %26285, i64* %26284, align 8
  store %struct.Memory* %loadMem_476c78, %struct.Memory** %MEMORY
  %loadBr_476c78 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476c78 = icmp eq i8 %loadBr_476c78, 1
  br i1 %cmpBr_476c78, label %block_.L_476c8d, label %block_476c7e

block_476c7e:                                     ; preds = %block_.L_476c60
  %loadMem_476c7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %26286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26287 = getelementptr inbounds %struct.GPR, %struct.GPR* %26286, i32 0, i32 33
  %26288 = getelementptr inbounds %struct.Reg, %struct.Reg* %26287, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %26288 to i64*
  %26289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26290 = getelementptr inbounds %struct.GPR, %struct.GPR* %26289, i32 0, i32 15
  %26291 = getelementptr inbounds %struct.Reg, %struct.Reg* %26290, i32 0, i32 0
  %RBP.i281 = bitcast %union.anon* %26291 to i64*
  %26292 = load i64, i64* %RBP.i281
  %26293 = sub i64 %26292, 1132
  %26294 = load i64, i64* %PC.i280
  %26295 = add i64 %26294, 10
  store i64 %26295, i64* %PC.i280
  %26296 = inttoptr i64 %26293 to i32*
  store i32 3, i32* %26296
  store %struct.Memory* %loadMem_476c7e, %struct.Memory** %MEMORY
  %loadMem_476c88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26298 = getelementptr inbounds %struct.GPR, %struct.GPR* %26297, i32 0, i32 33
  %26299 = getelementptr inbounds %struct.Reg, %struct.Reg* %26298, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %26299 to i64*
  %26300 = load i64, i64* %PC.i279
  %26301 = add i64 %26300, 15
  %26302 = load i64, i64* %PC.i279
  %26303 = add i64 %26302, 5
  store i64 %26303, i64* %PC.i279
  %26304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %26301, i64* %26304, align 8
  store %struct.Memory* %loadMem_476c88, %struct.Memory** %MEMORY
  br label %block_.L_476c97

block_.L_476c8d:                                  ; preds = %block_.L_476c60
  %loadMem_476c8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %26305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26306 = getelementptr inbounds %struct.GPR, %struct.GPR* %26305, i32 0, i32 33
  %26307 = getelementptr inbounds %struct.Reg, %struct.Reg* %26306, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %26307 to i64*
  %26308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26309 = getelementptr inbounds %struct.GPR, %struct.GPR* %26308, i32 0, i32 15
  %26310 = getelementptr inbounds %struct.Reg, %struct.Reg* %26309, i32 0, i32 0
  %RBP.i278 = bitcast %union.anon* %26310 to i64*
  %26311 = load i64, i64* %RBP.i278
  %26312 = sub i64 %26311, 1132
  %26313 = load i64, i64* %PC.i277
  %26314 = add i64 %26313, 10
  store i64 %26314, i64* %PC.i277
  %26315 = inttoptr i64 %26312 to i32*
  store i32 2, i32* %26315
  store %struct.Memory* %loadMem_476c8d, %struct.Memory** %MEMORY
  br label %block_.L_476c97

block_.L_476c97:                                  ; preds = %block_.L_476c8d, %block_476c7e
  %loadMem_476c97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26317 = getelementptr inbounds %struct.GPR, %struct.GPR* %26316, i32 0, i32 33
  %26318 = getelementptr inbounds %struct.Reg, %struct.Reg* %26317, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %26318 to i64*
  %26319 = load i64, i64* %PC.i276
  %26320 = add i64 %26319, 5
  %26321 = load i64, i64* %PC.i276
  %26322 = add i64 %26321, 5
  store i64 %26322, i64* %PC.i276
  %26323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %26320, i64* %26323, align 8
  store %struct.Memory* %loadMem_476c97, %struct.Memory** %MEMORY
  br label %block_.L_476c9c

block_.L_476c9c:                                  ; preds = %block_.L_476c97, %block_476c51
  %loadMem_476c9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %26324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26325 = getelementptr inbounds %struct.GPR, %struct.GPR* %26324, i32 0, i32 33
  %26326 = getelementptr inbounds %struct.Reg, %struct.Reg* %26325, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %26326 to i64*
  %26327 = load i64, i64* %PC.i275
  %26328 = add i64 %26327, 115
  %26329 = load i64, i64* %PC.i275
  %26330 = add i64 %26329, 5
  store i64 %26330, i64* %PC.i275
  %26331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %26328, i64* %26331, align 8
  store %struct.Memory* %loadMem_476c9c, %struct.Memory** %MEMORY
  br label %block_.L_476d0f

block_.L_476ca1:                                  ; preds = %block_476c18
  %loadMem_476ca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26333 = getelementptr inbounds %struct.GPR, %struct.GPR* %26332, i32 0, i32 33
  %26334 = getelementptr inbounds %struct.Reg, %struct.Reg* %26333, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %26334 to i64*
  %26335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26336 = getelementptr inbounds %struct.GPR, %struct.GPR* %26335, i32 0, i32 1
  %26337 = getelementptr inbounds %struct.Reg, %struct.Reg* %26336, i32 0, i32 0
  %RAX.i273 = bitcast %union.anon* %26337 to i64*
  %26338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26339 = getelementptr inbounds %struct.GPR, %struct.GPR* %26338, i32 0, i32 15
  %26340 = getelementptr inbounds %struct.Reg, %struct.Reg* %26339, i32 0, i32 0
  %RBP.i274 = bitcast %union.anon* %26340 to i64*
  %26341 = load i64, i64* %RBP.i274
  %26342 = sub i64 %26341, 36
  %26343 = load i64, i64* %PC.i272
  %26344 = add i64 %26343, 4
  store i64 %26344, i64* %PC.i272
  %26345 = inttoptr i64 %26342 to i32*
  %26346 = load i32, i32* %26345
  %26347 = sext i32 %26346 to i64
  %26348 = mul i64 %26347, 20
  %26349 = trunc i64 %26348 to i32
  %26350 = and i64 %26348, 4294967295
  store i64 %26350, i64* %RAX.i273, align 8
  %26351 = shl i64 %26348, 32
  %26352 = ashr exact i64 %26351, 32
  %26353 = icmp ne i64 %26352, %26348
  %26354 = zext i1 %26353 to i8
  %26355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26354, i8* %26355, align 1
  %26356 = and i32 %26349, 255
  %26357 = call i32 @llvm.ctpop.i32(i32 %26356)
  %26358 = trunc i32 %26357 to i8
  %26359 = and i8 %26358, 1
  %26360 = xor i8 %26359, 1
  %26361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26360, i8* %26361, align 1
  %26362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26362, align 1
  %26363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %26363, align 1
  %26364 = lshr i32 %26349, 31
  %26365 = trunc i32 %26364 to i8
  %26366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26365, i8* %26366, align 1
  %26367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26354, i8* %26367, align 1
  store %struct.Memory* %loadMem_476ca1, %struct.Memory** %MEMORY
  %loadMem_476ca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26369 = getelementptr inbounds %struct.GPR, %struct.GPR* %26368, i32 0, i32 33
  %26370 = getelementptr inbounds %struct.Reg, %struct.Reg* %26369, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %26370 to i64*
  %26371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26372 = getelementptr inbounds %struct.GPR, %struct.GPR* %26371, i32 0, i32 1
  %26373 = getelementptr inbounds %struct.Reg, %struct.Reg* %26372, i32 0, i32 0
  %RAX.i271 = bitcast %union.anon* %26373 to i64*
  %26374 = load i64, i64* %RAX.i271
  %26375 = load i64, i64* %PC.i270
  %26376 = add i64 %26375, 3
  store i64 %26376, i64* %PC.i270
  %26377 = trunc i64 %26374 to i32
  %26378 = add i32 21, %26377
  %26379 = zext i32 %26378 to i64
  store i64 %26379, i64* %RAX.i271, align 8
  %26380 = icmp ult i32 %26378, %26377
  %26381 = icmp ult i32 %26378, 21
  %26382 = or i1 %26380, %26381
  %26383 = zext i1 %26382 to i8
  %26384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26383, i8* %26384, align 1
  %26385 = and i32 %26378, 255
  %26386 = call i32 @llvm.ctpop.i32(i32 %26385)
  %26387 = trunc i32 %26386 to i8
  %26388 = and i8 %26387, 1
  %26389 = xor i8 %26388, 1
  %26390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26389, i8* %26390, align 1
  %26391 = xor i64 21, %26374
  %26392 = trunc i64 %26391 to i32
  %26393 = xor i32 %26392, %26378
  %26394 = lshr i32 %26393, 4
  %26395 = trunc i32 %26394 to i8
  %26396 = and i8 %26395, 1
  %26397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26396, i8* %26397, align 1
  %26398 = icmp eq i32 %26378, 0
  %26399 = zext i1 %26398 to i8
  %26400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26399, i8* %26400, align 1
  %26401 = lshr i32 %26378, 31
  %26402 = trunc i32 %26401 to i8
  %26403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26402, i8* %26403, align 1
  %26404 = lshr i32 %26377, 31
  %26405 = xor i32 %26401, %26404
  %26406 = add i32 %26405, %26401
  %26407 = icmp eq i32 %26406, 2
  %26408 = zext i1 %26407 to i8
  %26409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26408, i8* %26409, align 1
  store %struct.Memory* %loadMem_476ca5, %struct.Memory** %MEMORY
  %loadMem_476ca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26411 = getelementptr inbounds %struct.GPR, %struct.GPR* %26410, i32 0, i32 33
  %26412 = getelementptr inbounds %struct.Reg, %struct.Reg* %26411, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %26412 to i64*
  %26413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26414 = getelementptr inbounds %struct.GPR, %struct.GPR* %26413, i32 0, i32 1
  %26415 = getelementptr inbounds %struct.Reg, %struct.Reg* %26414, i32 0, i32 0
  %RAX.i268 = bitcast %union.anon* %26415 to i64*
  %26416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26417 = getelementptr inbounds %struct.GPR, %struct.GPR* %26416, i32 0, i32 15
  %26418 = getelementptr inbounds %struct.Reg, %struct.Reg* %26417, i32 0, i32 0
  %RBP.i269 = bitcast %union.anon* %26418 to i64*
  %26419 = load i64, i64* %RAX.i268
  %26420 = load i64, i64* %RBP.i269
  %26421 = sub i64 %26420, 40
  %26422 = load i64, i64* %PC.i267
  %26423 = add i64 %26422, 3
  store i64 %26423, i64* %PC.i267
  %26424 = trunc i64 %26419 to i32
  %26425 = inttoptr i64 %26421 to i32*
  %26426 = load i32, i32* %26425
  %26427 = add i32 %26426, %26424
  %26428 = zext i32 %26427 to i64
  store i64 %26428, i64* %RAX.i268, align 8
  %26429 = icmp ult i32 %26427, %26424
  %26430 = icmp ult i32 %26427, %26426
  %26431 = or i1 %26429, %26430
  %26432 = zext i1 %26431 to i8
  %26433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26432, i8* %26433, align 1
  %26434 = and i32 %26427, 255
  %26435 = call i32 @llvm.ctpop.i32(i32 %26434)
  %26436 = trunc i32 %26435 to i8
  %26437 = and i8 %26436, 1
  %26438 = xor i8 %26437, 1
  %26439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26438, i8* %26439, align 1
  %26440 = xor i32 %26426, %26424
  %26441 = xor i32 %26440, %26427
  %26442 = lshr i32 %26441, 4
  %26443 = trunc i32 %26442 to i8
  %26444 = and i8 %26443, 1
  %26445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26444, i8* %26445, align 1
  %26446 = icmp eq i32 %26427, 0
  %26447 = zext i1 %26446 to i8
  %26448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26447, i8* %26448, align 1
  %26449 = lshr i32 %26427, 31
  %26450 = trunc i32 %26449 to i8
  %26451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26450, i8* %26451, align 1
  %26452 = lshr i32 %26424, 31
  %26453 = lshr i32 %26426, 31
  %26454 = xor i32 %26449, %26452
  %26455 = xor i32 %26449, %26453
  %26456 = add i32 %26454, %26455
  %26457 = icmp eq i32 %26456, 2
  %26458 = zext i1 %26457 to i8
  %26459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26458, i8* %26459, align 1
  store %struct.Memory* %loadMem_476ca8, %struct.Memory** %MEMORY
  %loadMem_476cab = load %struct.Memory*, %struct.Memory** %MEMORY
  %26460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26461 = getelementptr inbounds %struct.GPR, %struct.GPR* %26460, i32 0, i32 33
  %26462 = getelementptr inbounds %struct.Reg, %struct.Reg* %26461, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %26462 to i64*
  %26463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26464 = getelementptr inbounds %struct.GPR, %struct.GPR* %26463, i32 0, i32 1
  %26465 = getelementptr inbounds %struct.Reg, %struct.Reg* %26464, i32 0, i32 0
  %EAX.i265 = bitcast %union.anon* %26465 to i32*
  %26466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26467 = getelementptr inbounds %struct.GPR, %struct.GPR* %26466, i32 0, i32 5
  %26468 = getelementptr inbounds %struct.Reg, %struct.Reg* %26467, i32 0, i32 0
  %RCX.i266 = bitcast %union.anon* %26468 to i64*
  %26469 = load i32, i32* %EAX.i265
  %26470 = zext i32 %26469 to i64
  %26471 = load i64, i64* %PC.i264
  %26472 = add i64 %26471, 3
  store i64 %26472, i64* %PC.i264
  %26473 = shl i64 %26470, 32
  %26474 = ashr exact i64 %26473, 32
  store i64 %26474, i64* %RCX.i266, align 8
  store %struct.Memory* %loadMem_476cab, %struct.Memory** %MEMORY
  %loadMem_476cae = load %struct.Memory*, %struct.Memory** %MEMORY
  %26475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26476 = getelementptr inbounds %struct.GPR, %struct.GPR* %26475, i32 0, i32 33
  %26477 = getelementptr inbounds %struct.Reg, %struct.Reg* %26476, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %26477 to i64*
  %26478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26479 = getelementptr inbounds %struct.GPR, %struct.GPR* %26478, i32 0, i32 1
  %26480 = getelementptr inbounds %struct.Reg, %struct.Reg* %26479, i32 0, i32 0
  %RAX.i261 = bitcast %union.anon* %26480 to i64*
  %26481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26482 = getelementptr inbounds %struct.GPR, %struct.GPR* %26481, i32 0, i32 5
  %26483 = getelementptr inbounds %struct.Reg, %struct.Reg* %26482, i32 0, i32 0
  %RCX.i262 = bitcast %union.anon* %26483 to i64*
  %26484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26485 = getelementptr inbounds %struct.GPR, %struct.GPR* %26484, i32 0, i32 15
  %26486 = getelementptr inbounds %struct.Reg, %struct.Reg* %26485, i32 0, i32 0
  %RBP.i263 = bitcast %union.anon* %26486 to i64*
  %26487 = load i64, i64* %RBP.i263
  %26488 = load i64, i64* %RCX.i262
  %26489 = add i64 %26487, -1040
  %26490 = add i64 %26489, %26488
  %26491 = load i64, i64* %PC.i260
  %26492 = add i64 %26491, 8
  store i64 %26492, i64* %PC.i260
  %26493 = inttoptr i64 %26490 to i8*
  %26494 = load i8, i8* %26493
  %26495 = sext i8 %26494 to i64
  %26496 = and i64 %26495, 4294967295
  store i64 %26496, i64* %RAX.i261, align 8
  store %struct.Memory* %loadMem_476cae, %struct.Memory** %MEMORY
  %loadMem_476cb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26498 = getelementptr inbounds %struct.GPR, %struct.GPR* %26497, i32 0, i32 33
  %26499 = getelementptr inbounds %struct.Reg, %struct.Reg* %26498, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %26499 to i64*
  %26500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26501 = getelementptr inbounds %struct.GPR, %struct.GPR* %26500, i32 0, i32 1
  %26502 = getelementptr inbounds %struct.Reg, %struct.Reg* %26501, i32 0, i32 0
  %EAX.i259 = bitcast %union.anon* %26502 to i32*
  %26503 = load i32, i32* %EAX.i259
  %26504 = zext i32 %26503 to i64
  %26505 = load i64, i64* %PC.i258
  %26506 = add i64 %26505, 3
  store i64 %26506, i64* %PC.i258
  %26507 = sub i32 %26503, 1
  %26508 = icmp ult i32 %26503, 1
  %26509 = zext i1 %26508 to i8
  %26510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26509, i8* %26510, align 1
  %26511 = and i32 %26507, 255
  %26512 = call i32 @llvm.ctpop.i32(i32 %26511)
  %26513 = trunc i32 %26512 to i8
  %26514 = and i8 %26513, 1
  %26515 = xor i8 %26514, 1
  %26516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26515, i8* %26516, align 1
  %26517 = xor i64 1, %26504
  %26518 = trunc i64 %26517 to i32
  %26519 = xor i32 %26518, %26507
  %26520 = lshr i32 %26519, 4
  %26521 = trunc i32 %26520 to i8
  %26522 = and i8 %26521, 1
  %26523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26522, i8* %26523, align 1
  %26524 = icmp eq i32 %26507, 0
  %26525 = zext i1 %26524 to i8
  %26526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26525, i8* %26526, align 1
  %26527 = lshr i32 %26507, 31
  %26528 = trunc i32 %26527 to i8
  %26529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26528, i8* %26529, align 1
  %26530 = lshr i32 %26503, 31
  %26531 = xor i32 %26527, %26530
  %26532 = add i32 %26531, %26530
  %26533 = icmp eq i32 %26532, 2
  %26534 = zext i1 %26533 to i8
  %26535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26534, i8* %26535, align 1
  store %struct.Memory* %loadMem_476cb6, %struct.Memory** %MEMORY
  %loadMem_476cb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26537 = getelementptr inbounds %struct.GPR, %struct.GPR* %26536, i32 0, i32 33
  %26538 = getelementptr inbounds %struct.Reg, %struct.Reg* %26537, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %26538 to i64*
  %26539 = load i64, i64* %PC.i257
  %26540 = add i64 %26539, 21
  %26541 = load i64, i64* %PC.i257
  %26542 = add i64 %26541, 6
  %26543 = load i64, i64* %PC.i257
  %26544 = add i64 %26543, 6
  store i64 %26544, i64* %PC.i257
  %26545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26546 = load i8, i8* %26545, align 1
  %26547 = icmp eq i8 %26546, 0
  %26548 = zext i1 %26547 to i8
  store i8 %26548, i8* %BRANCH_TAKEN, align 1
  %26549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26550 = select i1 %26547, i64 %26540, i64 %26542
  store i64 %26550, i64* %26549, align 8
  store %struct.Memory* %loadMem_476cb9, %struct.Memory** %MEMORY
  %loadBr_476cb9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476cb9 = icmp eq i8 %loadBr_476cb9, 1
  br i1 %cmpBr_476cb9, label %block_.L_476cce, label %block_476cbf

block_476cbf:                                     ; preds = %block_.L_476ca1
  %loadMem_476cbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %26551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26552 = getelementptr inbounds %struct.GPR, %struct.GPR* %26551, i32 0, i32 33
  %26553 = getelementptr inbounds %struct.Reg, %struct.Reg* %26552, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %26553 to i64*
  %26554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26555 = getelementptr inbounds %struct.GPR, %struct.GPR* %26554, i32 0, i32 15
  %26556 = getelementptr inbounds %struct.Reg, %struct.Reg* %26555, i32 0, i32 0
  %RBP.i256 = bitcast %union.anon* %26556 to i64*
  %26557 = load i64, i64* %RBP.i256
  %26558 = sub i64 %26557, 1132
  %26559 = load i64, i64* %PC.i255
  %26560 = add i64 %26559, 10
  store i64 %26560, i64* %PC.i255
  %26561 = inttoptr i64 %26558 to i32*
  store i32 4, i32* %26561
  store %struct.Memory* %loadMem_476cbf, %struct.Memory** %MEMORY
  %loadMem_476cc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26563 = getelementptr inbounds %struct.GPR, %struct.GPR* %26562, i32 0, i32 33
  %26564 = getelementptr inbounds %struct.Reg, %struct.Reg* %26563, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %26564 to i64*
  %26565 = load i64, i64* %PC.i254
  %26566 = add i64 %26565, 65
  %26567 = load i64, i64* %PC.i254
  %26568 = add i64 %26567, 5
  store i64 %26568, i64* %PC.i254
  %26569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %26566, i64* %26569, align 8
  store %struct.Memory* %loadMem_476cc9, %struct.Memory** %MEMORY
  br label %block_.L_476d0a

block_.L_476cce:                                  ; preds = %block_.L_476ca1
  %loadMem_476cce = load %struct.Memory*, %struct.Memory** %MEMORY
  %26570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26571 = getelementptr inbounds %struct.GPR, %struct.GPR* %26570, i32 0, i32 33
  %26572 = getelementptr inbounds %struct.Reg, %struct.Reg* %26571, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %26572 to i64*
  %26573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26574 = getelementptr inbounds %struct.GPR, %struct.GPR* %26573, i32 0, i32 1
  %26575 = getelementptr inbounds %struct.Reg, %struct.Reg* %26574, i32 0, i32 0
  %RAX.i252 = bitcast %union.anon* %26575 to i64*
  %26576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26577 = getelementptr inbounds %struct.GPR, %struct.GPR* %26576, i32 0, i32 15
  %26578 = getelementptr inbounds %struct.Reg, %struct.Reg* %26577, i32 0, i32 0
  %RBP.i253 = bitcast %union.anon* %26578 to i64*
  %26579 = load i64, i64* %RBP.i253
  %26580 = sub i64 %26579, 36
  %26581 = load i64, i64* %PC.i251
  %26582 = add i64 %26581, 4
  store i64 %26582, i64* %PC.i251
  %26583 = inttoptr i64 %26580 to i32*
  %26584 = load i32, i32* %26583
  %26585 = sext i32 %26584 to i64
  %26586 = mul i64 %26585, 20
  %26587 = trunc i64 %26586 to i32
  %26588 = and i64 %26586, 4294967295
  store i64 %26588, i64* %RAX.i252, align 8
  %26589 = shl i64 %26586, 32
  %26590 = ashr exact i64 %26589, 32
  %26591 = icmp ne i64 %26590, %26586
  %26592 = zext i1 %26591 to i8
  %26593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26592, i8* %26593, align 1
  %26594 = and i32 %26587, 255
  %26595 = call i32 @llvm.ctpop.i32(i32 %26594)
  %26596 = trunc i32 %26595 to i8
  %26597 = and i8 %26596, 1
  %26598 = xor i8 %26597, 1
  %26599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26598, i8* %26599, align 1
  %26600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26600, align 1
  %26601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %26601, align 1
  %26602 = lshr i32 %26587, 31
  %26603 = trunc i32 %26602 to i8
  %26604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26603, i8* %26604, align 1
  %26605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26592, i8* %26605, align 1
  store %struct.Memory* %loadMem_476cce, %struct.Memory** %MEMORY
  %loadMem_476cd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26607 = getelementptr inbounds %struct.GPR, %struct.GPR* %26606, i32 0, i32 33
  %26608 = getelementptr inbounds %struct.Reg, %struct.Reg* %26607, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %26608 to i64*
  %26609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26610 = getelementptr inbounds %struct.GPR, %struct.GPR* %26609, i32 0, i32 1
  %26611 = getelementptr inbounds %struct.Reg, %struct.Reg* %26610, i32 0, i32 0
  %RAX.i250 = bitcast %union.anon* %26611 to i64*
  %26612 = load i64, i64* %RAX.i250
  %26613 = load i64, i64* %PC.i249
  %26614 = add i64 %26613, 3
  store i64 %26614, i64* %PC.i249
  %26615 = trunc i64 %26612 to i32
  %26616 = add i32 21, %26615
  %26617 = zext i32 %26616 to i64
  store i64 %26617, i64* %RAX.i250, align 8
  %26618 = icmp ult i32 %26616, %26615
  %26619 = icmp ult i32 %26616, 21
  %26620 = or i1 %26618, %26619
  %26621 = zext i1 %26620 to i8
  %26622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26621, i8* %26622, align 1
  %26623 = and i32 %26616, 255
  %26624 = call i32 @llvm.ctpop.i32(i32 %26623)
  %26625 = trunc i32 %26624 to i8
  %26626 = and i8 %26625, 1
  %26627 = xor i8 %26626, 1
  %26628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26627, i8* %26628, align 1
  %26629 = xor i64 21, %26612
  %26630 = trunc i64 %26629 to i32
  %26631 = xor i32 %26630, %26616
  %26632 = lshr i32 %26631, 4
  %26633 = trunc i32 %26632 to i8
  %26634 = and i8 %26633, 1
  %26635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26634, i8* %26635, align 1
  %26636 = icmp eq i32 %26616, 0
  %26637 = zext i1 %26636 to i8
  %26638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26637, i8* %26638, align 1
  %26639 = lshr i32 %26616, 31
  %26640 = trunc i32 %26639 to i8
  %26641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26640, i8* %26641, align 1
  %26642 = lshr i32 %26615, 31
  %26643 = xor i32 %26639, %26642
  %26644 = add i32 %26643, %26639
  %26645 = icmp eq i32 %26644, 2
  %26646 = zext i1 %26645 to i8
  %26647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26646, i8* %26647, align 1
  store %struct.Memory* %loadMem_476cd2, %struct.Memory** %MEMORY
  %loadMem_476cd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26649 = getelementptr inbounds %struct.GPR, %struct.GPR* %26648, i32 0, i32 33
  %26650 = getelementptr inbounds %struct.Reg, %struct.Reg* %26649, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %26650 to i64*
  %26651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26652 = getelementptr inbounds %struct.GPR, %struct.GPR* %26651, i32 0, i32 1
  %26653 = getelementptr inbounds %struct.Reg, %struct.Reg* %26652, i32 0, i32 0
  %RAX.i247 = bitcast %union.anon* %26653 to i64*
  %26654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26655 = getelementptr inbounds %struct.GPR, %struct.GPR* %26654, i32 0, i32 15
  %26656 = getelementptr inbounds %struct.Reg, %struct.Reg* %26655, i32 0, i32 0
  %RBP.i248 = bitcast %union.anon* %26656 to i64*
  %26657 = load i64, i64* %RAX.i247
  %26658 = load i64, i64* %RBP.i248
  %26659 = sub i64 %26658, 40
  %26660 = load i64, i64* %PC.i246
  %26661 = add i64 %26660, 3
  store i64 %26661, i64* %PC.i246
  %26662 = trunc i64 %26657 to i32
  %26663 = inttoptr i64 %26659 to i32*
  %26664 = load i32, i32* %26663
  %26665 = add i32 %26664, %26662
  %26666 = zext i32 %26665 to i64
  store i64 %26666, i64* %RAX.i247, align 8
  %26667 = icmp ult i32 %26665, %26662
  %26668 = icmp ult i32 %26665, %26664
  %26669 = or i1 %26667, %26668
  %26670 = zext i1 %26669 to i8
  %26671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26670, i8* %26671, align 1
  %26672 = and i32 %26665, 255
  %26673 = call i32 @llvm.ctpop.i32(i32 %26672)
  %26674 = trunc i32 %26673 to i8
  %26675 = and i8 %26674, 1
  %26676 = xor i8 %26675, 1
  %26677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26676, i8* %26677, align 1
  %26678 = xor i32 %26664, %26662
  %26679 = xor i32 %26678, %26665
  %26680 = lshr i32 %26679, 4
  %26681 = trunc i32 %26680 to i8
  %26682 = and i8 %26681, 1
  %26683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26682, i8* %26683, align 1
  %26684 = icmp eq i32 %26665, 0
  %26685 = zext i1 %26684 to i8
  %26686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26685, i8* %26686, align 1
  %26687 = lshr i32 %26665, 31
  %26688 = trunc i32 %26687 to i8
  %26689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26688, i8* %26689, align 1
  %26690 = lshr i32 %26662, 31
  %26691 = lshr i32 %26664, 31
  %26692 = xor i32 %26687, %26690
  %26693 = xor i32 %26687, %26691
  %26694 = add i32 %26692, %26693
  %26695 = icmp eq i32 %26694, 2
  %26696 = zext i1 %26695 to i8
  %26697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26696, i8* %26697, align 1
  store %struct.Memory* %loadMem_476cd5, %struct.Memory** %MEMORY
  %loadMem_476cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26699 = getelementptr inbounds %struct.GPR, %struct.GPR* %26698, i32 0, i32 33
  %26700 = getelementptr inbounds %struct.Reg, %struct.Reg* %26699, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %26700 to i64*
  %26701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26702 = getelementptr inbounds %struct.GPR, %struct.GPR* %26701, i32 0, i32 1
  %26703 = getelementptr inbounds %struct.Reg, %struct.Reg* %26702, i32 0, i32 0
  %EAX.i244 = bitcast %union.anon* %26703 to i32*
  %26704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26705 = getelementptr inbounds %struct.GPR, %struct.GPR* %26704, i32 0, i32 5
  %26706 = getelementptr inbounds %struct.Reg, %struct.Reg* %26705, i32 0, i32 0
  %RCX.i245 = bitcast %union.anon* %26706 to i64*
  %26707 = load i32, i32* %EAX.i244
  %26708 = zext i32 %26707 to i64
  %26709 = load i64, i64* %PC.i243
  %26710 = add i64 %26709, 3
  store i64 %26710, i64* %PC.i243
  %26711 = shl i64 %26708, 32
  %26712 = ashr exact i64 %26711, 32
  store i64 %26712, i64* %RCX.i245, align 8
  store %struct.Memory* %loadMem_476cd8, %struct.Memory** %MEMORY
  %loadMem_476cdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %26713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26714 = getelementptr inbounds %struct.GPR, %struct.GPR* %26713, i32 0, i32 33
  %26715 = getelementptr inbounds %struct.Reg, %struct.Reg* %26714, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %26715 to i64*
  %26716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26717 = getelementptr inbounds %struct.GPR, %struct.GPR* %26716, i32 0, i32 1
  %26718 = getelementptr inbounds %struct.Reg, %struct.Reg* %26717, i32 0, i32 0
  %RAX.i240 = bitcast %union.anon* %26718 to i64*
  %26719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26720 = getelementptr inbounds %struct.GPR, %struct.GPR* %26719, i32 0, i32 5
  %26721 = getelementptr inbounds %struct.Reg, %struct.Reg* %26720, i32 0, i32 0
  %RCX.i241 = bitcast %union.anon* %26721 to i64*
  %26722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26723 = getelementptr inbounds %struct.GPR, %struct.GPR* %26722, i32 0, i32 15
  %26724 = getelementptr inbounds %struct.Reg, %struct.Reg* %26723, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %26724 to i64*
  %26725 = load i64, i64* %RBP.i242
  %26726 = load i64, i64* %RCX.i241
  %26727 = add i64 %26725, -1040
  %26728 = add i64 %26727, %26726
  %26729 = load i64, i64* %PC.i239
  %26730 = add i64 %26729, 8
  store i64 %26730, i64* %PC.i239
  %26731 = inttoptr i64 %26728 to i8*
  %26732 = load i8, i8* %26731
  %26733 = sext i8 %26732 to i64
  %26734 = and i64 %26733, 4294967295
  store i64 %26734, i64* %RAX.i240, align 8
  store %struct.Memory* %loadMem_476cdb, %struct.Memory** %MEMORY
  %loadMem_476ce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26736 = getelementptr inbounds %struct.GPR, %struct.GPR* %26735, i32 0, i32 33
  %26737 = getelementptr inbounds %struct.Reg, %struct.Reg* %26736, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %26737 to i64*
  %26738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26739 = getelementptr inbounds %struct.GPR, %struct.GPR* %26738, i32 0, i32 1
  %26740 = getelementptr inbounds %struct.Reg, %struct.Reg* %26739, i32 0, i32 0
  %EAX.i238 = bitcast %union.anon* %26740 to i32*
  %26741 = load i32, i32* %EAX.i238
  %26742 = zext i32 %26741 to i64
  %26743 = load i64, i64* %PC.i237
  %26744 = add i64 %26743, 3
  store i64 %26744, i64* %PC.i237
  %26745 = sub i32 %26741, 2
  %26746 = icmp ult i32 %26741, 2
  %26747 = zext i1 %26746 to i8
  %26748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26747, i8* %26748, align 1
  %26749 = and i32 %26745, 255
  %26750 = call i32 @llvm.ctpop.i32(i32 %26749)
  %26751 = trunc i32 %26750 to i8
  %26752 = and i8 %26751, 1
  %26753 = xor i8 %26752, 1
  %26754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26753, i8* %26754, align 1
  %26755 = xor i64 2, %26742
  %26756 = trunc i64 %26755 to i32
  %26757 = xor i32 %26756, %26745
  %26758 = lshr i32 %26757, 4
  %26759 = trunc i32 %26758 to i8
  %26760 = and i8 %26759, 1
  %26761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26760, i8* %26761, align 1
  %26762 = icmp eq i32 %26745, 0
  %26763 = zext i1 %26762 to i8
  %26764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26763, i8* %26764, align 1
  %26765 = lshr i32 %26745, 31
  %26766 = trunc i32 %26765 to i8
  %26767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26766, i8* %26767, align 1
  %26768 = lshr i32 %26741, 31
  %26769 = xor i32 %26765, %26768
  %26770 = add i32 %26769, %26768
  %26771 = icmp eq i32 %26770, 2
  %26772 = zext i1 %26771 to i8
  %26773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26772, i8* %26773, align 1
  store %struct.Memory* %loadMem_476ce3, %struct.Memory** %MEMORY
  %loadMem_476ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26775 = getelementptr inbounds %struct.GPR, %struct.GPR* %26774, i32 0, i32 33
  %26776 = getelementptr inbounds %struct.Reg, %struct.Reg* %26775, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %26776 to i64*
  %26777 = load i64, i64* %PC.i236
  %26778 = add i64 %26777, 21
  %26779 = load i64, i64* %PC.i236
  %26780 = add i64 %26779, 6
  %26781 = load i64, i64* %PC.i236
  %26782 = add i64 %26781, 6
  store i64 %26782, i64* %PC.i236
  %26783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26784 = load i8, i8* %26783, align 1
  %26785 = icmp eq i8 %26784, 0
  %26786 = zext i1 %26785 to i8
  store i8 %26786, i8* %BRANCH_TAKEN, align 1
  %26787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26788 = select i1 %26785, i64 %26778, i64 %26780
  store i64 %26788, i64* %26787, align 8
  store %struct.Memory* %loadMem_476ce6, %struct.Memory** %MEMORY
  %loadBr_476ce6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476ce6 = icmp eq i8 %loadBr_476ce6, 1
  br i1 %cmpBr_476ce6, label %block_.L_476cfb, label %block_476cec

block_476cec:                                     ; preds = %block_.L_476cce
  %loadMem_476cec = load %struct.Memory*, %struct.Memory** %MEMORY
  %26789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26790 = getelementptr inbounds %struct.GPR, %struct.GPR* %26789, i32 0, i32 33
  %26791 = getelementptr inbounds %struct.Reg, %struct.Reg* %26790, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %26791 to i64*
  %26792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26793 = getelementptr inbounds %struct.GPR, %struct.GPR* %26792, i32 0, i32 15
  %26794 = getelementptr inbounds %struct.Reg, %struct.Reg* %26793, i32 0, i32 0
  %RBP.i235 = bitcast %union.anon* %26794 to i64*
  %26795 = load i64, i64* %RBP.i235
  %26796 = sub i64 %26795, 1132
  %26797 = load i64, i64* %PC.i234
  %26798 = add i64 %26797, 10
  store i64 %26798, i64* %PC.i234
  %26799 = inttoptr i64 %26796 to i32*
  store i32 6, i32* %26799
  store %struct.Memory* %loadMem_476cec, %struct.Memory** %MEMORY
  %loadMem_476cf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26801 = getelementptr inbounds %struct.GPR, %struct.GPR* %26800, i32 0, i32 33
  %26802 = getelementptr inbounds %struct.Reg, %struct.Reg* %26801, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %26802 to i64*
  %26803 = load i64, i64* %PC.i233
  %26804 = add i64 %26803, 15
  %26805 = load i64, i64* %PC.i233
  %26806 = add i64 %26805, 5
  store i64 %26806, i64* %PC.i233
  %26807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %26804, i64* %26807, align 8
  store %struct.Memory* %loadMem_476cf6, %struct.Memory** %MEMORY
  br label %block_.L_476d05

block_.L_476cfb:                                  ; preds = %block_.L_476cce
  %loadMem_476cfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %26808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26809 = getelementptr inbounds %struct.GPR, %struct.GPR* %26808, i32 0, i32 33
  %26810 = getelementptr inbounds %struct.Reg, %struct.Reg* %26809, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %26810 to i64*
  %26811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26812 = getelementptr inbounds %struct.GPR, %struct.GPR* %26811, i32 0, i32 15
  %26813 = getelementptr inbounds %struct.Reg, %struct.Reg* %26812, i32 0, i32 0
  %RBP.i232 = bitcast %union.anon* %26813 to i64*
  %26814 = load i64, i64* %RBP.i232
  %26815 = sub i64 %26814, 1132
  %26816 = load i64, i64* %PC.i231
  %26817 = add i64 %26816, 10
  store i64 %26817, i64* %PC.i231
  %26818 = inttoptr i64 %26815 to i32*
  store i32 0, i32* %26818
  store %struct.Memory* %loadMem_476cfb, %struct.Memory** %MEMORY
  br label %block_.L_476d05

block_.L_476d05:                                  ; preds = %block_.L_476cfb, %block_476cec
  %loadMem_476d05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26820 = getelementptr inbounds %struct.GPR, %struct.GPR* %26819, i32 0, i32 33
  %26821 = getelementptr inbounds %struct.Reg, %struct.Reg* %26820, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %26821 to i64*
  %26822 = load i64, i64* %PC.i230
  %26823 = add i64 %26822, 5
  %26824 = load i64, i64* %PC.i230
  %26825 = add i64 %26824, 5
  store i64 %26825, i64* %PC.i230
  %26826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %26823, i64* %26826, align 8
  store %struct.Memory* %loadMem_476d05, %struct.Memory** %MEMORY
  br label %block_.L_476d0a

block_.L_476d0a:                                  ; preds = %block_.L_476d05, %block_476cbf
  %loadMem_476d0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %26827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26828 = getelementptr inbounds %struct.GPR, %struct.GPR* %26827, i32 0, i32 33
  %26829 = getelementptr inbounds %struct.Reg, %struct.Reg* %26828, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %26829 to i64*
  %26830 = load i64, i64* %PC.i229
  %26831 = add i64 %26830, 5
  %26832 = load i64, i64* %PC.i229
  %26833 = add i64 %26832, 5
  store i64 %26833, i64* %PC.i229
  %26834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %26831, i64* %26834, align 8
  store %struct.Memory* %loadMem_476d0a, %struct.Memory** %MEMORY
  br label %block_.L_476d0f

block_.L_476d0f:                                  ; preds = %block_.L_476d0a, %block_.L_476c9c
  %loadMem_476d0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %26835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26836 = getelementptr inbounds %struct.GPR, %struct.GPR* %26835, i32 0, i32 33
  %26837 = getelementptr inbounds %struct.Reg, %struct.Reg* %26836, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %26837 to i64*
  %26838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26839 = getelementptr inbounds %struct.GPR, %struct.GPR* %26838, i32 0, i32 1
  %26840 = getelementptr inbounds %struct.Reg, %struct.Reg* %26839, i32 0, i32 0
  %RAX.i227 = bitcast %union.anon* %26840 to i64*
  %26841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26842 = getelementptr inbounds %struct.GPR, %struct.GPR* %26841, i32 0, i32 15
  %26843 = getelementptr inbounds %struct.Reg, %struct.Reg* %26842, i32 0, i32 0
  %RBP.i228 = bitcast %union.anon* %26843 to i64*
  %26844 = load i64, i64* %RBP.i228
  %26845 = sub i64 %26844, 36
  %26846 = load i64, i64* %PC.i226
  %26847 = add i64 %26846, 4
  store i64 %26847, i64* %PC.i226
  %26848 = inttoptr i64 %26845 to i32*
  %26849 = load i32, i32* %26848
  %26850 = sext i32 %26849 to i64
  %26851 = mul i64 %26850, 20
  %26852 = trunc i64 %26851 to i32
  %26853 = and i64 %26851, 4294967295
  store i64 %26853, i64* %RAX.i227, align 8
  %26854 = shl i64 %26851, 32
  %26855 = ashr exact i64 %26854, 32
  %26856 = icmp ne i64 %26855, %26851
  %26857 = zext i1 %26856 to i8
  %26858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26857, i8* %26858, align 1
  %26859 = and i32 %26852, 255
  %26860 = call i32 @llvm.ctpop.i32(i32 %26859)
  %26861 = trunc i32 %26860 to i8
  %26862 = and i8 %26861, 1
  %26863 = xor i8 %26862, 1
  %26864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26863, i8* %26864, align 1
  %26865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26865, align 1
  %26866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %26866, align 1
  %26867 = lshr i32 %26852, 31
  %26868 = trunc i32 %26867 to i8
  %26869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26868, i8* %26869, align 1
  %26870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26857, i8* %26870, align 1
  store %struct.Memory* %loadMem_476d0f, %struct.Memory** %MEMORY
  %loadMem_476d13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26872 = getelementptr inbounds %struct.GPR, %struct.GPR* %26871, i32 0, i32 33
  %26873 = getelementptr inbounds %struct.Reg, %struct.Reg* %26872, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %26873 to i64*
  %26874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26875 = getelementptr inbounds %struct.GPR, %struct.GPR* %26874, i32 0, i32 1
  %26876 = getelementptr inbounds %struct.Reg, %struct.Reg* %26875, i32 0, i32 0
  %RAX.i225 = bitcast %union.anon* %26876 to i64*
  %26877 = load i64, i64* %RAX.i225
  %26878 = load i64, i64* %PC.i224
  %26879 = add i64 %26878, 3
  store i64 %26879, i64* %PC.i224
  %26880 = trunc i64 %26877 to i32
  %26881 = add i32 21, %26880
  %26882 = zext i32 %26881 to i64
  store i64 %26882, i64* %RAX.i225, align 8
  %26883 = icmp ult i32 %26881, %26880
  %26884 = icmp ult i32 %26881, 21
  %26885 = or i1 %26883, %26884
  %26886 = zext i1 %26885 to i8
  %26887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26886, i8* %26887, align 1
  %26888 = and i32 %26881, 255
  %26889 = call i32 @llvm.ctpop.i32(i32 %26888)
  %26890 = trunc i32 %26889 to i8
  %26891 = and i8 %26890, 1
  %26892 = xor i8 %26891, 1
  %26893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26892, i8* %26893, align 1
  %26894 = xor i64 21, %26877
  %26895 = trunc i64 %26894 to i32
  %26896 = xor i32 %26895, %26881
  %26897 = lshr i32 %26896, 4
  %26898 = trunc i32 %26897 to i8
  %26899 = and i8 %26898, 1
  %26900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26899, i8* %26900, align 1
  %26901 = icmp eq i32 %26881, 0
  %26902 = zext i1 %26901 to i8
  %26903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26902, i8* %26903, align 1
  %26904 = lshr i32 %26881, 31
  %26905 = trunc i32 %26904 to i8
  %26906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26905, i8* %26906, align 1
  %26907 = lshr i32 %26880, 31
  %26908 = xor i32 %26904, %26907
  %26909 = add i32 %26908, %26904
  %26910 = icmp eq i32 %26909, 2
  %26911 = zext i1 %26910 to i8
  %26912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26911, i8* %26912, align 1
  store %struct.Memory* %loadMem_476d13, %struct.Memory** %MEMORY
  %loadMem_476d16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26914 = getelementptr inbounds %struct.GPR, %struct.GPR* %26913, i32 0, i32 33
  %26915 = getelementptr inbounds %struct.Reg, %struct.Reg* %26914, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %26915 to i64*
  %26916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26917 = getelementptr inbounds %struct.GPR, %struct.GPR* %26916, i32 0, i32 1
  %26918 = getelementptr inbounds %struct.Reg, %struct.Reg* %26917, i32 0, i32 0
  %RAX.i222 = bitcast %union.anon* %26918 to i64*
  %26919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26920 = getelementptr inbounds %struct.GPR, %struct.GPR* %26919, i32 0, i32 15
  %26921 = getelementptr inbounds %struct.Reg, %struct.Reg* %26920, i32 0, i32 0
  %RBP.i223 = bitcast %union.anon* %26921 to i64*
  %26922 = load i64, i64* %RAX.i222
  %26923 = load i64, i64* %RBP.i223
  %26924 = sub i64 %26923, 40
  %26925 = load i64, i64* %PC.i221
  %26926 = add i64 %26925, 3
  store i64 %26926, i64* %PC.i221
  %26927 = trunc i64 %26922 to i32
  %26928 = inttoptr i64 %26924 to i32*
  %26929 = load i32, i32* %26928
  %26930 = add i32 %26929, %26927
  %26931 = zext i32 %26930 to i64
  store i64 %26931, i64* %RAX.i222, align 8
  %26932 = icmp ult i32 %26930, %26927
  %26933 = icmp ult i32 %26930, %26929
  %26934 = or i1 %26932, %26933
  %26935 = zext i1 %26934 to i8
  %26936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26935, i8* %26936, align 1
  %26937 = and i32 %26930, 255
  %26938 = call i32 @llvm.ctpop.i32(i32 %26937)
  %26939 = trunc i32 %26938 to i8
  %26940 = and i8 %26939, 1
  %26941 = xor i8 %26940, 1
  %26942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26941, i8* %26942, align 1
  %26943 = xor i32 %26929, %26927
  %26944 = xor i32 %26943, %26930
  %26945 = lshr i32 %26944, 4
  %26946 = trunc i32 %26945 to i8
  %26947 = and i8 %26946, 1
  %26948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26947, i8* %26948, align 1
  %26949 = icmp eq i32 %26930, 0
  %26950 = zext i1 %26949 to i8
  %26951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26950, i8* %26951, align 1
  %26952 = lshr i32 %26930, 31
  %26953 = trunc i32 %26952 to i8
  %26954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26953, i8* %26954, align 1
  %26955 = lshr i32 %26927, 31
  %26956 = lshr i32 %26929, 31
  %26957 = xor i32 %26952, %26955
  %26958 = xor i32 %26952, %26956
  %26959 = add i32 %26957, %26958
  %26960 = icmp eq i32 %26959, 2
  %26961 = zext i1 %26960 to i8
  %26962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26961, i8* %26962, align 1
  store %struct.Memory* %loadMem_476d16, %struct.Memory** %MEMORY
  %loadMem_476d19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26964 = getelementptr inbounds %struct.GPR, %struct.GPR* %26963, i32 0, i32 33
  %26965 = getelementptr inbounds %struct.Reg, %struct.Reg* %26964, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %26965 to i64*
  %26966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26967 = getelementptr inbounds %struct.GPR, %struct.GPR* %26966, i32 0, i32 1
  %26968 = getelementptr inbounds %struct.Reg, %struct.Reg* %26967, i32 0, i32 0
  %EAX.i219 = bitcast %union.anon* %26968 to i32*
  %26969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26970 = getelementptr inbounds %struct.GPR, %struct.GPR* %26969, i32 0, i32 5
  %26971 = getelementptr inbounds %struct.Reg, %struct.Reg* %26970, i32 0, i32 0
  %RCX.i220 = bitcast %union.anon* %26971 to i64*
  %26972 = load i32, i32* %EAX.i219
  %26973 = zext i32 %26972 to i64
  %26974 = load i64, i64* %PC.i218
  %26975 = add i64 %26974, 3
  store i64 %26975, i64* %PC.i218
  %26976 = shl i64 %26973, 32
  %26977 = ashr exact i64 %26976, 32
  store i64 %26977, i64* %RCX.i220, align 8
  store %struct.Memory* %loadMem_476d19, %struct.Memory** %MEMORY
  %loadMem_476d1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %26978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26979 = getelementptr inbounds %struct.GPR, %struct.GPR* %26978, i32 0, i32 33
  %26980 = getelementptr inbounds %struct.Reg, %struct.Reg* %26979, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %26980 to i64*
  %26981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26982 = getelementptr inbounds %struct.GPR, %struct.GPR* %26981, i32 0, i32 1
  %26983 = getelementptr inbounds %struct.Reg, %struct.Reg* %26982, i32 0, i32 0
  %RAX.i216 = bitcast %union.anon* %26983 to i64*
  %26984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26985 = getelementptr inbounds %struct.GPR, %struct.GPR* %26984, i32 0, i32 5
  %26986 = getelementptr inbounds %struct.Reg, %struct.Reg* %26985, i32 0, i32 0
  %RCX.i217 = bitcast %union.anon* %26986 to i64*
  %26987 = load i64, i64* %RCX.i217
  %26988 = add i64 %26987, 12099168
  %26989 = load i64, i64* %PC.i215
  %26990 = add i64 %26989, 8
  store i64 %26990, i64* %PC.i215
  %26991 = inttoptr i64 %26988 to i8*
  %26992 = load i8, i8* %26991
  %26993 = zext i8 %26992 to i64
  store i64 %26993, i64* %RAX.i216, align 8
  store %struct.Memory* %loadMem_476d1c, %struct.Memory** %MEMORY
  %loadMem_476d24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26995 = getelementptr inbounds %struct.GPR, %struct.GPR* %26994, i32 0, i32 33
  %26996 = getelementptr inbounds %struct.Reg, %struct.Reg* %26995, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %26996 to i64*
  %26997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26998 = getelementptr inbounds %struct.GPR, %struct.GPR* %26997, i32 0, i32 1
  %26999 = getelementptr inbounds %struct.Reg, %struct.Reg* %26998, i32 0, i32 0
  %EAX.i214 = bitcast %union.anon* %26999 to i32*
  %27000 = load i32, i32* %EAX.i214
  %27001 = zext i32 %27000 to i64
  %27002 = load i64, i64* %PC.i213
  %27003 = add i64 %27002, 3
  store i64 %27003, i64* %PC.i213
  %27004 = sub i32 %27000, 2
  %27005 = icmp ult i32 %27000, 2
  %27006 = zext i1 %27005 to i8
  %27007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27006, i8* %27007, align 1
  %27008 = and i32 %27004, 255
  %27009 = call i32 @llvm.ctpop.i32(i32 %27008)
  %27010 = trunc i32 %27009 to i8
  %27011 = and i8 %27010, 1
  %27012 = xor i8 %27011, 1
  %27013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27012, i8* %27013, align 1
  %27014 = xor i64 2, %27001
  %27015 = trunc i64 %27014 to i32
  %27016 = xor i32 %27015, %27004
  %27017 = lshr i32 %27016, 4
  %27018 = trunc i32 %27017 to i8
  %27019 = and i8 %27018, 1
  %27020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27019, i8* %27020, align 1
  %27021 = icmp eq i32 %27004, 0
  %27022 = zext i1 %27021 to i8
  %27023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27022, i8* %27023, align 1
  %27024 = lshr i32 %27004, 31
  %27025 = trunc i32 %27024 to i8
  %27026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27025, i8* %27026, align 1
  %27027 = lshr i32 %27000, 31
  %27028 = xor i32 %27024, %27027
  %27029 = add i32 %27028, %27027
  %27030 = icmp eq i32 %27029, 2
  %27031 = zext i1 %27030 to i8
  %27032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27031, i8* %27032, align 1
  store %struct.Memory* %loadMem_476d24, %struct.Memory** %MEMORY
  %loadMem_476d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27034 = getelementptr inbounds %struct.GPR, %struct.GPR* %27033, i32 0, i32 33
  %27035 = getelementptr inbounds %struct.Reg, %struct.Reg* %27034, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %27035 to i64*
  %27036 = load i64, i64* %PC.i212
  %27037 = add i64 %27036, 21
  %27038 = load i64, i64* %PC.i212
  %27039 = add i64 %27038, 6
  %27040 = load i64, i64* %PC.i212
  %27041 = add i64 %27040, 6
  store i64 %27041, i64* %PC.i212
  %27042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27043 = load i8, i8* %27042, align 1
  %27044 = icmp eq i8 %27043, 0
  %27045 = zext i1 %27044 to i8
  store i8 %27045, i8* %BRANCH_TAKEN, align 1
  %27046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %27047 = select i1 %27044, i64 %27037, i64 %27039
  store i64 %27047, i64* %27046, align 8
  store %struct.Memory* %loadMem_476d27, %struct.Memory** %MEMORY
  %loadBr_476d27 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476d27 = icmp eq i8 %loadBr_476d27, 1
  br i1 %cmpBr_476d27, label %block_.L_476d3c, label %block_476d2d

block_476d2d:                                     ; preds = %block_.L_476d0f
  %loadMem_476d2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %27048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27049 = getelementptr inbounds %struct.GPR, %struct.GPR* %27048, i32 0, i32 33
  %27050 = getelementptr inbounds %struct.Reg, %struct.Reg* %27049, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %27050 to i64*
  %27051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27052 = getelementptr inbounds %struct.GPR, %struct.GPR* %27051, i32 0, i32 15
  %27053 = getelementptr inbounds %struct.Reg, %struct.Reg* %27052, i32 0, i32 0
  %RBP.i211 = bitcast %union.anon* %27053 to i64*
  %27054 = load i64, i64* %RBP.i211
  %27055 = sub i64 %27054, 1136
  %27056 = load i64, i64* %PC.i210
  %27057 = add i64 %27056, 10
  store i64 %27057, i64* %PC.i210
  %27058 = inttoptr i64 %27055 to i32*
  store i32 88, i32* %27058
  store %struct.Memory* %loadMem_476d2d, %struct.Memory** %MEMORY
  %loadMem_476d37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27060 = getelementptr inbounds %struct.GPR, %struct.GPR* %27059, i32 0, i32 33
  %27061 = getelementptr inbounds %struct.Reg, %struct.Reg* %27060, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %27061 to i64*
  %27062 = load i64, i64* %PC.i209
  %27063 = add i64 %27062, 112
  %27064 = load i64, i64* %PC.i209
  %27065 = add i64 %27064, 5
  store i64 %27065, i64* %PC.i209
  %27066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27063, i64* %27066, align 8
  store %struct.Memory* %loadMem_476d37, %struct.Memory** %MEMORY
  br label %block_.L_476da7

block_.L_476d3c:                                  ; preds = %block_.L_476d0f
  %loadMem_476d3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %27067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27068 = getelementptr inbounds %struct.GPR, %struct.GPR* %27067, i32 0, i32 33
  %27069 = getelementptr inbounds %struct.Reg, %struct.Reg* %27068, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %27069 to i64*
  %27070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27071 = getelementptr inbounds %struct.GPR, %struct.GPR* %27070, i32 0, i32 1
  %27072 = getelementptr inbounds %struct.Reg, %struct.Reg* %27071, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %27072 to i64*
  %27073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27074 = getelementptr inbounds %struct.GPR, %struct.GPR* %27073, i32 0, i32 15
  %27075 = getelementptr inbounds %struct.Reg, %struct.Reg* %27074, i32 0, i32 0
  %RBP.i208 = bitcast %union.anon* %27075 to i64*
  %27076 = load i64, i64* %RBP.i208
  %27077 = sub i64 %27076, 36
  %27078 = load i64, i64* %PC.i206
  %27079 = add i64 %27078, 4
  store i64 %27079, i64* %PC.i206
  %27080 = inttoptr i64 %27077 to i32*
  %27081 = load i32, i32* %27080
  %27082 = sext i32 %27081 to i64
  %27083 = mul i64 %27082, 20
  %27084 = trunc i64 %27083 to i32
  %27085 = and i64 %27083, 4294967295
  store i64 %27085, i64* %RAX.i207, align 8
  %27086 = shl i64 %27083, 32
  %27087 = ashr exact i64 %27086, 32
  %27088 = icmp ne i64 %27087, %27083
  %27089 = zext i1 %27088 to i8
  %27090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27089, i8* %27090, align 1
  %27091 = and i32 %27084, 255
  %27092 = call i32 @llvm.ctpop.i32(i32 %27091)
  %27093 = trunc i32 %27092 to i8
  %27094 = and i8 %27093, 1
  %27095 = xor i8 %27094, 1
  %27096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27095, i8* %27096, align 1
  %27097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27097, align 1
  %27098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %27098, align 1
  %27099 = lshr i32 %27084, 31
  %27100 = trunc i32 %27099 to i8
  %27101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27100, i8* %27101, align 1
  %27102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27089, i8* %27102, align 1
  store %struct.Memory* %loadMem_476d3c, %struct.Memory** %MEMORY
  %loadMem_476d40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27104 = getelementptr inbounds %struct.GPR, %struct.GPR* %27103, i32 0, i32 33
  %27105 = getelementptr inbounds %struct.Reg, %struct.Reg* %27104, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %27105 to i64*
  %27106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27107 = getelementptr inbounds %struct.GPR, %struct.GPR* %27106, i32 0, i32 1
  %27108 = getelementptr inbounds %struct.Reg, %struct.Reg* %27107, i32 0, i32 0
  %RAX.i205 = bitcast %union.anon* %27108 to i64*
  %27109 = load i64, i64* %RAX.i205
  %27110 = load i64, i64* %PC.i204
  %27111 = add i64 %27110, 3
  store i64 %27111, i64* %PC.i204
  %27112 = trunc i64 %27109 to i32
  %27113 = add i32 21, %27112
  %27114 = zext i32 %27113 to i64
  store i64 %27114, i64* %RAX.i205, align 8
  %27115 = icmp ult i32 %27113, %27112
  %27116 = icmp ult i32 %27113, 21
  %27117 = or i1 %27115, %27116
  %27118 = zext i1 %27117 to i8
  %27119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27118, i8* %27119, align 1
  %27120 = and i32 %27113, 255
  %27121 = call i32 @llvm.ctpop.i32(i32 %27120)
  %27122 = trunc i32 %27121 to i8
  %27123 = and i8 %27122, 1
  %27124 = xor i8 %27123, 1
  %27125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27124, i8* %27125, align 1
  %27126 = xor i64 21, %27109
  %27127 = trunc i64 %27126 to i32
  %27128 = xor i32 %27127, %27113
  %27129 = lshr i32 %27128, 4
  %27130 = trunc i32 %27129 to i8
  %27131 = and i8 %27130, 1
  %27132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27131, i8* %27132, align 1
  %27133 = icmp eq i32 %27113, 0
  %27134 = zext i1 %27133 to i8
  %27135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27134, i8* %27135, align 1
  %27136 = lshr i32 %27113, 31
  %27137 = trunc i32 %27136 to i8
  %27138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27137, i8* %27138, align 1
  %27139 = lshr i32 %27112, 31
  %27140 = xor i32 %27136, %27139
  %27141 = add i32 %27140, %27136
  %27142 = icmp eq i32 %27141, 2
  %27143 = zext i1 %27142 to i8
  %27144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27143, i8* %27144, align 1
  store %struct.Memory* %loadMem_476d40, %struct.Memory** %MEMORY
  %loadMem_476d43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27146 = getelementptr inbounds %struct.GPR, %struct.GPR* %27145, i32 0, i32 33
  %27147 = getelementptr inbounds %struct.Reg, %struct.Reg* %27146, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %27147 to i64*
  %27148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27149 = getelementptr inbounds %struct.GPR, %struct.GPR* %27148, i32 0, i32 1
  %27150 = getelementptr inbounds %struct.Reg, %struct.Reg* %27149, i32 0, i32 0
  %RAX.i202 = bitcast %union.anon* %27150 to i64*
  %27151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27152 = getelementptr inbounds %struct.GPR, %struct.GPR* %27151, i32 0, i32 15
  %27153 = getelementptr inbounds %struct.Reg, %struct.Reg* %27152, i32 0, i32 0
  %RBP.i203 = bitcast %union.anon* %27153 to i64*
  %27154 = load i64, i64* %RAX.i202
  %27155 = load i64, i64* %RBP.i203
  %27156 = sub i64 %27155, 40
  %27157 = load i64, i64* %PC.i201
  %27158 = add i64 %27157, 3
  store i64 %27158, i64* %PC.i201
  %27159 = trunc i64 %27154 to i32
  %27160 = inttoptr i64 %27156 to i32*
  %27161 = load i32, i32* %27160
  %27162 = add i32 %27161, %27159
  %27163 = zext i32 %27162 to i64
  store i64 %27163, i64* %RAX.i202, align 8
  %27164 = icmp ult i32 %27162, %27159
  %27165 = icmp ult i32 %27162, %27161
  %27166 = or i1 %27164, %27165
  %27167 = zext i1 %27166 to i8
  %27168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27167, i8* %27168, align 1
  %27169 = and i32 %27162, 255
  %27170 = call i32 @llvm.ctpop.i32(i32 %27169)
  %27171 = trunc i32 %27170 to i8
  %27172 = and i8 %27171, 1
  %27173 = xor i8 %27172, 1
  %27174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27173, i8* %27174, align 1
  %27175 = xor i32 %27161, %27159
  %27176 = xor i32 %27175, %27162
  %27177 = lshr i32 %27176, 4
  %27178 = trunc i32 %27177 to i8
  %27179 = and i8 %27178, 1
  %27180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27179, i8* %27180, align 1
  %27181 = icmp eq i32 %27162, 0
  %27182 = zext i1 %27181 to i8
  %27183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27182, i8* %27183, align 1
  %27184 = lshr i32 %27162, 31
  %27185 = trunc i32 %27184 to i8
  %27186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27185, i8* %27186, align 1
  %27187 = lshr i32 %27159, 31
  %27188 = lshr i32 %27161, 31
  %27189 = xor i32 %27184, %27187
  %27190 = xor i32 %27184, %27188
  %27191 = add i32 %27189, %27190
  %27192 = icmp eq i32 %27191, 2
  %27193 = zext i1 %27192 to i8
  %27194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27193, i8* %27194, align 1
  store %struct.Memory* %loadMem_476d43, %struct.Memory** %MEMORY
  %loadMem_476d46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27196 = getelementptr inbounds %struct.GPR, %struct.GPR* %27195, i32 0, i32 33
  %27197 = getelementptr inbounds %struct.Reg, %struct.Reg* %27196, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %27197 to i64*
  %27198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27199 = getelementptr inbounds %struct.GPR, %struct.GPR* %27198, i32 0, i32 1
  %27200 = getelementptr inbounds %struct.Reg, %struct.Reg* %27199, i32 0, i32 0
  %EAX.i199 = bitcast %union.anon* %27200 to i32*
  %27201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27202 = getelementptr inbounds %struct.GPR, %struct.GPR* %27201, i32 0, i32 5
  %27203 = getelementptr inbounds %struct.Reg, %struct.Reg* %27202, i32 0, i32 0
  %RCX.i200 = bitcast %union.anon* %27203 to i64*
  %27204 = load i32, i32* %EAX.i199
  %27205 = zext i32 %27204 to i64
  %27206 = load i64, i64* %PC.i198
  %27207 = add i64 %27206, 3
  store i64 %27207, i64* %PC.i198
  %27208 = shl i64 %27205, 32
  %27209 = ashr exact i64 %27208, 32
  store i64 %27209, i64* %RCX.i200, align 8
  store %struct.Memory* %loadMem_476d46, %struct.Memory** %MEMORY
  %loadMem_476d49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27211 = getelementptr inbounds %struct.GPR, %struct.GPR* %27210, i32 0, i32 33
  %27212 = getelementptr inbounds %struct.Reg, %struct.Reg* %27211, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %27212 to i64*
  %27213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27214 = getelementptr inbounds %struct.GPR, %struct.GPR* %27213, i32 0, i32 1
  %27215 = getelementptr inbounds %struct.Reg, %struct.Reg* %27214, i32 0, i32 0
  %RAX.i196 = bitcast %union.anon* %27215 to i64*
  %27216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27217 = getelementptr inbounds %struct.GPR, %struct.GPR* %27216, i32 0, i32 5
  %27218 = getelementptr inbounds %struct.Reg, %struct.Reg* %27217, i32 0, i32 0
  %RCX.i197 = bitcast %union.anon* %27218 to i64*
  %27219 = load i64, i64* %RCX.i197
  %27220 = add i64 %27219, 12099168
  %27221 = load i64, i64* %PC.i195
  %27222 = add i64 %27221, 8
  store i64 %27222, i64* %PC.i195
  %27223 = inttoptr i64 %27220 to i8*
  %27224 = load i8, i8* %27223
  %27225 = zext i8 %27224 to i64
  store i64 %27225, i64* %RAX.i196, align 8
  store %struct.Memory* %loadMem_476d49, %struct.Memory** %MEMORY
  %loadMem_476d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27227 = getelementptr inbounds %struct.GPR, %struct.GPR* %27226, i32 0, i32 33
  %27228 = getelementptr inbounds %struct.Reg, %struct.Reg* %27227, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %27228 to i64*
  %27229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27230 = getelementptr inbounds %struct.GPR, %struct.GPR* %27229, i32 0, i32 1
  %27231 = getelementptr inbounds %struct.Reg, %struct.Reg* %27230, i32 0, i32 0
  %EAX.i194 = bitcast %union.anon* %27231 to i32*
  %27232 = load i32, i32* %EAX.i194
  %27233 = zext i32 %27232 to i64
  %27234 = load i64, i64* %PC.i193
  %27235 = add i64 %27234, 3
  store i64 %27235, i64* %PC.i193
  %27236 = sub i32 %27232, 1
  %27237 = icmp ult i32 %27232, 1
  %27238 = zext i1 %27237 to i8
  %27239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27238, i8* %27239, align 1
  %27240 = and i32 %27236, 255
  %27241 = call i32 @llvm.ctpop.i32(i32 %27240)
  %27242 = trunc i32 %27241 to i8
  %27243 = and i8 %27242, 1
  %27244 = xor i8 %27243, 1
  %27245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27244, i8* %27245, align 1
  %27246 = xor i64 1, %27233
  %27247 = trunc i64 %27246 to i32
  %27248 = xor i32 %27247, %27236
  %27249 = lshr i32 %27248, 4
  %27250 = trunc i32 %27249 to i8
  %27251 = and i8 %27250, 1
  %27252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27251, i8* %27252, align 1
  %27253 = icmp eq i32 %27236, 0
  %27254 = zext i1 %27253 to i8
  %27255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27254, i8* %27255, align 1
  %27256 = lshr i32 %27236, 31
  %27257 = trunc i32 %27256 to i8
  %27258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27257, i8* %27258, align 1
  %27259 = lshr i32 %27232, 31
  %27260 = xor i32 %27256, %27259
  %27261 = add i32 %27260, %27259
  %27262 = icmp eq i32 %27261, 2
  %27263 = zext i1 %27262 to i8
  %27264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27263, i8* %27264, align 1
  store %struct.Memory* %loadMem_476d51, %struct.Memory** %MEMORY
  %loadMem_476d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27266 = getelementptr inbounds %struct.GPR, %struct.GPR* %27265, i32 0, i32 33
  %27267 = getelementptr inbounds %struct.Reg, %struct.Reg* %27266, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %27267 to i64*
  %27268 = load i64, i64* %PC.i192
  %27269 = add i64 %27268, 21
  %27270 = load i64, i64* %PC.i192
  %27271 = add i64 %27270, 6
  %27272 = load i64, i64* %PC.i192
  %27273 = add i64 %27272, 6
  store i64 %27273, i64* %PC.i192
  %27274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27275 = load i8, i8* %27274, align 1
  %27276 = icmp eq i8 %27275, 0
  %27277 = zext i1 %27276 to i8
  store i8 %27277, i8* %BRANCH_TAKEN, align 1
  %27278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %27279 = select i1 %27276, i64 %27269, i64 %27271
  store i64 %27279, i64* %27278, align 8
  store %struct.Memory* %loadMem_476d54, %struct.Memory** %MEMORY
  %loadBr_476d54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476d54 = icmp eq i8 %loadBr_476d54, 1
  br i1 %cmpBr_476d54, label %block_.L_476d69, label %block_476d5a

block_476d5a:                                     ; preds = %block_.L_476d3c
  %loadMem_476d5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %27280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27281 = getelementptr inbounds %struct.GPR, %struct.GPR* %27280, i32 0, i32 33
  %27282 = getelementptr inbounds %struct.Reg, %struct.Reg* %27281, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %27282 to i64*
  %27283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27284 = getelementptr inbounds %struct.GPR, %struct.GPR* %27283, i32 0, i32 15
  %27285 = getelementptr inbounds %struct.Reg, %struct.Reg* %27284, i32 0, i32 0
  %RBP.i191 = bitcast %union.anon* %27285 to i64*
  %27286 = load i64, i64* %RBP.i191
  %27287 = sub i64 %27286, 1136
  %27288 = load i64, i64* %PC.i190
  %27289 = add i64 %27288, 10
  store i64 %27289, i64* %PC.i190
  %27290 = inttoptr i64 %27287 to i32*
  store i32 79, i32* %27290
  store %struct.Memory* %loadMem_476d5a, %struct.Memory** %MEMORY
  %loadMem_476d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27292 = getelementptr inbounds %struct.GPR, %struct.GPR* %27291, i32 0, i32 33
  %27293 = getelementptr inbounds %struct.Reg, %struct.Reg* %27292, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %27293 to i64*
  %27294 = load i64, i64* %PC.i189
  %27295 = add i64 %27294, 62
  %27296 = load i64, i64* %PC.i189
  %27297 = add i64 %27296, 5
  store i64 %27297, i64* %PC.i189
  %27298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27295, i64* %27298, align 8
  store %struct.Memory* %loadMem_476d64, %struct.Memory** %MEMORY
  br label %block_.L_476da2

block_.L_476d69:                                  ; preds = %block_.L_476d3c
  %loadMem_476d69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27300 = getelementptr inbounds %struct.GPR, %struct.GPR* %27299, i32 0, i32 33
  %27301 = getelementptr inbounds %struct.Reg, %struct.Reg* %27300, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %27301 to i64*
  %27302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27303 = getelementptr inbounds %struct.GPR, %struct.GPR* %27302, i32 0, i32 1
  %27304 = getelementptr inbounds %struct.Reg, %struct.Reg* %27303, i32 0, i32 0
  %RAX.i187 = bitcast %union.anon* %27304 to i64*
  %27305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27306 = getelementptr inbounds %struct.GPR, %struct.GPR* %27305, i32 0, i32 15
  %27307 = getelementptr inbounds %struct.Reg, %struct.Reg* %27306, i32 0, i32 0
  %RBP.i188 = bitcast %union.anon* %27307 to i64*
  %27308 = load i64, i64* %RBP.i188
  %27309 = sub i64 %27308, 36
  %27310 = load i64, i64* %PC.i186
  %27311 = add i64 %27310, 4
  store i64 %27311, i64* %PC.i186
  %27312 = inttoptr i64 %27309 to i32*
  %27313 = load i32, i32* %27312
  %27314 = sext i32 %27313 to i64
  %27315 = mul i64 %27314, 20
  %27316 = trunc i64 %27315 to i32
  %27317 = and i64 %27315, 4294967295
  store i64 %27317, i64* %RAX.i187, align 8
  %27318 = shl i64 %27315, 32
  %27319 = ashr exact i64 %27318, 32
  %27320 = icmp ne i64 %27319, %27315
  %27321 = zext i1 %27320 to i8
  %27322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27321, i8* %27322, align 1
  %27323 = and i32 %27316, 255
  %27324 = call i32 @llvm.ctpop.i32(i32 %27323)
  %27325 = trunc i32 %27324 to i8
  %27326 = and i8 %27325, 1
  %27327 = xor i8 %27326, 1
  %27328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27327, i8* %27328, align 1
  %27329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27329, align 1
  %27330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %27330, align 1
  %27331 = lshr i32 %27316, 31
  %27332 = trunc i32 %27331 to i8
  %27333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27332, i8* %27333, align 1
  %27334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27321, i8* %27334, align 1
  store %struct.Memory* %loadMem_476d69, %struct.Memory** %MEMORY
  %loadMem_476d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %27335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27336 = getelementptr inbounds %struct.GPR, %struct.GPR* %27335, i32 0, i32 33
  %27337 = getelementptr inbounds %struct.Reg, %struct.Reg* %27336, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %27337 to i64*
  %27338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27339 = getelementptr inbounds %struct.GPR, %struct.GPR* %27338, i32 0, i32 1
  %27340 = getelementptr inbounds %struct.Reg, %struct.Reg* %27339, i32 0, i32 0
  %RAX.i185 = bitcast %union.anon* %27340 to i64*
  %27341 = load i64, i64* %RAX.i185
  %27342 = load i64, i64* %PC.i184
  %27343 = add i64 %27342, 3
  store i64 %27343, i64* %PC.i184
  %27344 = trunc i64 %27341 to i32
  %27345 = add i32 21, %27344
  %27346 = zext i32 %27345 to i64
  store i64 %27346, i64* %RAX.i185, align 8
  %27347 = icmp ult i32 %27345, %27344
  %27348 = icmp ult i32 %27345, 21
  %27349 = or i1 %27347, %27348
  %27350 = zext i1 %27349 to i8
  %27351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27350, i8* %27351, align 1
  %27352 = and i32 %27345, 255
  %27353 = call i32 @llvm.ctpop.i32(i32 %27352)
  %27354 = trunc i32 %27353 to i8
  %27355 = and i8 %27354, 1
  %27356 = xor i8 %27355, 1
  %27357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27356, i8* %27357, align 1
  %27358 = xor i64 21, %27341
  %27359 = trunc i64 %27358 to i32
  %27360 = xor i32 %27359, %27345
  %27361 = lshr i32 %27360, 4
  %27362 = trunc i32 %27361 to i8
  %27363 = and i8 %27362, 1
  %27364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27363, i8* %27364, align 1
  %27365 = icmp eq i32 %27345, 0
  %27366 = zext i1 %27365 to i8
  %27367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27366, i8* %27367, align 1
  %27368 = lshr i32 %27345, 31
  %27369 = trunc i32 %27368 to i8
  %27370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27369, i8* %27370, align 1
  %27371 = lshr i32 %27344, 31
  %27372 = xor i32 %27368, %27371
  %27373 = add i32 %27372, %27368
  %27374 = icmp eq i32 %27373, 2
  %27375 = zext i1 %27374 to i8
  %27376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27375, i8* %27376, align 1
  store %struct.Memory* %loadMem_476d6d, %struct.Memory** %MEMORY
  %loadMem_476d70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27378 = getelementptr inbounds %struct.GPR, %struct.GPR* %27377, i32 0, i32 33
  %27379 = getelementptr inbounds %struct.Reg, %struct.Reg* %27378, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %27379 to i64*
  %27380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27381 = getelementptr inbounds %struct.GPR, %struct.GPR* %27380, i32 0, i32 1
  %27382 = getelementptr inbounds %struct.Reg, %struct.Reg* %27381, i32 0, i32 0
  %RAX.i182 = bitcast %union.anon* %27382 to i64*
  %27383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27384 = getelementptr inbounds %struct.GPR, %struct.GPR* %27383, i32 0, i32 15
  %27385 = getelementptr inbounds %struct.Reg, %struct.Reg* %27384, i32 0, i32 0
  %RBP.i183 = bitcast %union.anon* %27385 to i64*
  %27386 = load i64, i64* %RAX.i182
  %27387 = load i64, i64* %RBP.i183
  %27388 = sub i64 %27387, 40
  %27389 = load i64, i64* %PC.i181
  %27390 = add i64 %27389, 3
  store i64 %27390, i64* %PC.i181
  %27391 = trunc i64 %27386 to i32
  %27392 = inttoptr i64 %27388 to i32*
  %27393 = load i32, i32* %27392
  %27394 = add i32 %27393, %27391
  %27395 = zext i32 %27394 to i64
  store i64 %27395, i64* %RAX.i182, align 8
  %27396 = icmp ult i32 %27394, %27391
  %27397 = icmp ult i32 %27394, %27393
  %27398 = or i1 %27396, %27397
  %27399 = zext i1 %27398 to i8
  %27400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27399, i8* %27400, align 1
  %27401 = and i32 %27394, 255
  %27402 = call i32 @llvm.ctpop.i32(i32 %27401)
  %27403 = trunc i32 %27402 to i8
  %27404 = and i8 %27403, 1
  %27405 = xor i8 %27404, 1
  %27406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27405, i8* %27406, align 1
  %27407 = xor i32 %27393, %27391
  %27408 = xor i32 %27407, %27394
  %27409 = lshr i32 %27408, 4
  %27410 = trunc i32 %27409 to i8
  %27411 = and i8 %27410, 1
  %27412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27411, i8* %27412, align 1
  %27413 = icmp eq i32 %27394, 0
  %27414 = zext i1 %27413 to i8
  %27415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27414, i8* %27415, align 1
  %27416 = lshr i32 %27394, 31
  %27417 = trunc i32 %27416 to i8
  %27418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27417, i8* %27418, align 1
  %27419 = lshr i32 %27391, 31
  %27420 = lshr i32 %27393, 31
  %27421 = xor i32 %27416, %27419
  %27422 = xor i32 %27416, %27420
  %27423 = add i32 %27421, %27422
  %27424 = icmp eq i32 %27423, 2
  %27425 = zext i1 %27424 to i8
  %27426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27425, i8* %27426, align 1
  store %struct.Memory* %loadMem_476d70, %struct.Memory** %MEMORY
  %loadMem_476d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27428 = getelementptr inbounds %struct.GPR, %struct.GPR* %27427, i32 0, i32 33
  %27429 = getelementptr inbounds %struct.Reg, %struct.Reg* %27428, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %27429 to i64*
  %27430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27431 = getelementptr inbounds %struct.GPR, %struct.GPR* %27430, i32 0, i32 1
  %27432 = getelementptr inbounds %struct.Reg, %struct.Reg* %27431, i32 0, i32 0
  %EAX.i179 = bitcast %union.anon* %27432 to i32*
  %27433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27434 = getelementptr inbounds %struct.GPR, %struct.GPR* %27433, i32 0, i32 5
  %27435 = getelementptr inbounds %struct.Reg, %struct.Reg* %27434, i32 0, i32 0
  %RCX.i180 = bitcast %union.anon* %27435 to i64*
  %27436 = load i32, i32* %EAX.i179
  %27437 = zext i32 %27436 to i64
  %27438 = load i64, i64* %PC.i178
  %27439 = add i64 %27438, 3
  store i64 %27439, i64* %PC.i178
  %27440 = shl i64 %27437, 32
  %27441 = ashr exact i64 %27440, 32
  store i64 %27441, i64* %RCX.i180, align 8
  store %struct.Memory* %loadMem_476d73, %struct.Memory** %MEMORY
  %loadMem_476d76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27443 = getelementptr inbounds %struct.GPR, %struct.GPR* %27442, i32 0, i32 33
  %27444 = getelementptr inbounds %struct.Reg, %struct.Reg* %27443, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %27444 to i64*
  %27445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27446 = getelementptr inbounds %struct.GPR, %struct.GPR* %27445, i32 0, i32 5
  %27447 = getelementptr inbounds %struct.Reg, %struct.Reg* %27446, i32 0, i32 0
  %RCX.i176 = bitcast %union.anon* %27447 to i64*
  %27448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27449 = getelementptr inbounds %struct.GPR, %struct.GPR* %27448, i32 0, i32 15
  %27450 = getelementptr inbounds %struct.Reg, %struct.Reg* %27449, i32 0, i32 0
  %RBP.i177 = bitcast %union.anon* %27450 to i64*
  %27451 = load i64, i64* %RBP.i177
  %27452 = load i64, i64* %RCX.i176
  %27453 = add i64 %27451, -1040
  %27454 = add i64 %27453, %27452
  %27455 = load i64, i64* %PC.i175
  %27456 = add i64 %27455, 8
  store i64 %27456, i64* %PC.i175
  %27457 = inttoptr i64 %27454 to i8*
  %27458 = load i8, i8* %27457
  %27459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %27459, align 1
  %27460 = zext i8 %27458 to i32
  %27461 = call i32 @llvm.ctpop.i32(i32 %27460)
  %27462 = trunc i32 %27461 to i8
  %27463 = and i8 %27462, 1
  %27464 = xor i8 %27463, 1
  %27465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27464, i8* %27465, align 1
  %27466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27466, align 1
  %27467 = icmp eq i8 %27458, 0
  %27468 = zext i1 %27467 to i8
  %27469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27468, i8* %27469, align 1
  %27470 = lshr i8 %27458, 7
  %27471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27470, i8* %27471, align 1
  %27472 = lshr i8 %27458, 7
  %27473 = xor i8 %27470, %27472
  %27474 = add i8 %27473, %27472
  %27475 = icmp eq i8 %27474, 2
  %27476 = zext i1 %27475 to i8
  %27477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27476, i8* %27477, align 1
  store %struct.Memory* %loadMem_476d76, %struct.Memory** %MEMORY
  %loadMem_476d7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %27478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27479 = getelementptr inbounds %struct.GPR, %struct.GPR* %27478, i32 0, i32 33
  %27480 = getelementptr inbounds %struct.Reg, %struct.Reg* %27479, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %27480 to i64*
  %27481 = load i64, i64* %PC.i174
  %27482 = add i64 %27481, 21
  %27483 = load i64, i64* %PC.i174
  %27484 = add i64 %27483, 6
  %27485 = load i64, i64* %PC.i174
  %27486 = add i64 %27485, 6
  store i64 %27486, i64* %PC.i174
  %27487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27488 = load i8, i8* %27487, align 1
  store i8 %27488, i8* %BRANCH_TAKEN, align 1
  %27489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %27490 = icmp ne i8 %27488, 0
  %27491 = select i1 %27490, i64 %27482, i64 %27484
  store i64 %27491, i64* %27489, align 8
  store %struct.Memory* %loadMem_476d7e, %struct.Memory** %MEMORY
  %loadBr_476d7e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476d7e = icmp eq i8 %loadBr_476d7e, 1
  br i1 %cmpBr_476d7e, label %block_.L_476d93, label %block_476d84

block_476d84:                                     ; preds = %block_.L_476d69
  %loadMem_476d84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27493 = getelementptr inbounds %struct.GPR, %struct.GPR* %27492, i32 0, i32 33
  %27494 = getelementptr inbounds %struct.Reg, %struct.Reg* %27493, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %27494 to i64*
  %27495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27496 = getelementptr inbounds %struct.GPR, %struct.GPR* %27495, i32 0, i32 15
  %27497 = getelementptr inbounds %struct.Reg, %struct.Reg* %27496, i32 0, i32 0
  %RBP.i173 = bitcast %union.anon* %27497 to i64*
  %27498 = load i64, i64* %RBP.i173
  %27499 = sub i64 %27498, 1136
  %27500 = load i64, i64* %PC.i172
  %27501 = add i64 %27500, 10
  store i64 %27501, i64* %PC.i172
  %27502 = inttoptr i64 %27499 to i32*
  store i32 42, i32* %27502
  store %struct.Memory* %loadMem_476d84, %struct.Memory** %MEMORY
  %loadMem_476d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %27503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27504 = getelementptr inbounds %struct.GPR, %struct.GPR* %27503, i32 0, i32 33
  %27505 = getelementptr inbounds %struct.Reg, %struct.Reg* %27504, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %27505 to i64*
  %27506 = load i64, i64* %PC.i171
  %27507 = add i64 %27506, 15
  %27508 = load i64, i64* %PC.i171
  %27509 = add i64 %27508, 5
  store i64 %27509, i64* %PC.i171
  %27510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27507, i64* %27510, align 8
  store %struct.Memory* %loadMem_476d8e, %struct.Memory** %MEMORY
  br label %block_.L_476d9d

block_.L_476d93:                                  ; preds = %block_.L_476d69
  %loadMem_476d93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27512 = getelementptr inbounds %struct.GPR, %struct.GPR* %27511, i32 0, i32 33
  %27513 = getelementptr inbounds %struct.Reg, %struct.Reg* %27512, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %27513 to i64*
  %27514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27515 = getelementptr inbounds %struct.GPR, %struct.GPR* %27514, i32 0, i32 15
  %27516 = getelementptr inbounds %struct.Reg, %struct.Reg* %27515, i32 0, i32 0
  %RBP.i170 = bitcast %union.anon* %27516 to i64*
  %27517 = load i64, i64* %RBP.i170
  %27518 = sub i64 %27517, 1136
  %27519 = load i64, i64* %PC.i169
  %27520 = add i64 %27519, 10
  store i64 %27520, i64* %PC.i169
  %27521 = inttoptr i64 %27518 to i32*
  store i32 46, i32* %27521
  store %struct.Memory* %loadMem_476d93, %struct.Memory** %MEMORY
  br label %block_.L_476d9d

block_.L_476d9d:                                  ; preds = %block_.L_476d93, %block_476d84
  %loadMem_476d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %27522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27523 = getelementptr inbounds %struct.GPR, %struct.GPR* %27522, i32 0, i32 33
  %27524 = getelementptr inbounds %struct.Reg, %struct.Reg* %27523, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %27524 to i64*
  %27525 = load i64, i64* %PC.i168
  %27526 = add i64 %27525, 5
  %27527 = load i64, i64* %PC.i168
  %27528 = add i64 %27527, 5
  store i64 %27528, i64* %PC.i168
  %27529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27526, i64* %27529, align 8
  store %struct.Memory* %loadMem_476d9d, %struct.Memory** %MEMORY
  br label %block_.L_476da2

block_.L_476da2:                                  ; preds = %block_.L_476d9d, %block_476d5a
  %loadMem_476da2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27531 = getelementptr inbounds %struct.GPR, %struct.GPR* %27530, i32 0, i32 33
  %27532 = getelementptr inbounds %struct.Reg, %struct.Reg* %27531, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %27532 to i64*
  %27533 = load i64, i64* %PC.i167
  %27534 = add i64 %27533, 5
  %27535 = load i64, i64* %PC.i167
  %27536 = add i64 %27535, 5
  store i64 %27536, i64* %PC.i167
  %27537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27534, i64* %27537, align 8
  store %struct.Memory* %loadMem_476da2, %struct.Memory** %MEMORY
  br label %block_.L_476da7

block_.L_476da7:                                  ; preds = %block_.L_476da2, %block_476d2d
  %loadMem_476da7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27539 = getelementptr inbounds %struct.GPR, %struct.GPR* %27538, i32 0, i32 33
  %27540 = getelementptr inbounds %struct.Reg, %struct.Reg* %27539, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %27540 to i64*
  %27541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27542 = getelementptr inbounds %struct.GPR, %struct.GPR* %27541, i32 0, i32 11
  %27543 = getelementptr inbounds %struct.Reg, %struct.Reg* %27542, i32 0, i32 0
  %RDI.i165 = bitcast %union.anon* %27543 to i64*
  %27544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27545 = getelementptr inbounds %struct.GPR, %struct.GPR* %27544, i32 0, i32 15
  %27546 = getelementptr inbounds %struct.Reg, %struct.Reg* %27545, i32 0, i32 0
  %RBP.i166 = bitcast %union.anon* %27546 to i64*
  %27547 = load i64, i64* %RBP.i166
  %27548 = sub i64 %27547, 36
  %27549 = load i64, i64* %PC.i164
  %27550 = add i64 %27549, 3
  store i64 %27550, i64* %PC.i164
  %27551 = inttoptr i64 %27548 to i32*
  %27552 = load i32, i32* %27551
  %27553 = zext i32 %27552 to i64
  store i64 %27553, i64* %RDI.i165, align 8
  store %struct.Memory* %loadMem_476da7, %struct.Memory** %MEMORY
  %loadMem_476daa = load %struct.Memory*, %struct.Memory** %MEMORY
  %27554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27555 = getelementptr inbounds %struct.GPR, %struct.GPR* %27554, i32 0, i32 33
  %27556 = getelementptr inbounds %struct.Reg, %struct.Reg* %27555, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %27556 to i64*
  %27557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27558 = getelementptr inbounds %struct.GPR, %struct.GPR* %27557, i32 0, i32 9
  %27559 = getelementptr inbounds %struct.Reg, %struct.Reg* %27558, i32 0, i32 0
  %RSI.i162 = bitcast %union.anon* %27559 to i64*
  %27560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27561 = getelementptr inbounds %struct.GPR, %struct.GPR* %27560, i32 0, i32 15
  %27562 = getelementptr inbounds %struct.Reg, %struct.Reg* %27561, i32 0, i32 0
  %RBP.i163 = bitcast %union.anon* %27562 to i64*
  %27563 = load i64, i64* %RBP.i163
  %27564 = sub i64 %27563, 40
  %27565 = load i64, i64* %PC.i161
  %27566 = add i64 %27565, 3
  store i64 %27566, i64* %PC.i161
  %27567 = inttoptr i64 %27564 to i32*
  %27568 = load i32, i32* %27567
  %27569 = zext i32 %27568 to i64
  store i64 %27569, i64* %RSI.i162, align 8
  store %struct.Memory* %loadMem_476daa, %struct.Memory** %MEMORY
  %loadMem_476dad = load %struct.Memory*, %struct.Memory** %MEMORY
  %27570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27571 = getelementptr inbounds %struct.GPR, %struct.GPR* %27570, i32 0, i32 33
  %27572 = getelementptr inbounds %struct.Reg, %struct.Reg* %27571, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %27572 to i64*
  %27573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27574 = getelementptr inbounds %struct.GPR, %struct.GPR* %27573, i32 0, i32 7
  %27575 = getelementptr inbounds %struct.Reg, %struct.Reg* %27574, i32 0, i32 0
  %RDX.i159 = bitcast %union.anon* %27575 to i64*
  %27576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27577 = getelementptr inbounds %struct.GPR, %struct.GPR* %27576, i32 0, i32 15
  %27578 = getelementptr inbounds %struct.Reg, %struct.Reg* %27577, i32 0, i32 0
  %RBP.i160 = bitcast %union.anon* %27578 to i64*
  %27579 = load i64, i64* %RBP.i160
  %27580 = sub i64 %27579, 1136
  %27581 = load i64, i64* %PC.i158
  %27582 = add i64 %27581, 6
  store i64 %27582, i64* %PC.i158
  %27583 = inttoptr i64 %27580 to i32*
  %27584 = load i32, i32* %27583
  %27585 = zext i32 %27584 to i64
  store i64 %27585, i64* %RDX.i159, align 8
  store %struct.Memory* %loadMem_476dad, %struct.Memory** %MEMORY
  %loadMem_476db3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27587 = getelementptr inbounds %struct.GPR, %struct.GPR* %27586, i32 0, i32 33
  %27588 = getelementptr inbounds %struct.Reg, %struct.Reg* %27587, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %27588 to i64*
  %27589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27590 = getelementptr inbounds %struct.GPR, %struct.GPR* %27589, i32 0, i32 5
  %27591 = getelementptr inbounds %struct.Reg, %struct.Reg* %27590, i32 0, i32 0
  %RCX.i156 = bitcast %union.anon* %27591 to i64*
  %27592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27593 = getelementptr inbounds %struct.GPR, %struct.GPR* %27592, i32 0, i32 15
  %27594 = getelementptr inbounds %struct.Reg, %struct.Reg* %27593, i32 0, i32 0
  %RBP.i157 = bitcast %union.anon* %27594 to i64*
  %27595 = load i64, i64* %RBP.i157
  %27596 = sub i64 %27595, 1132
  %27597 = load i64, i64* %PC.i155
  %27598 = add i64 %27597, 6
  store i64 %27598, i64* %PC.i155
  %27599 = inttoptr i64 %27596 to i32*
  %27600 = load i32, i32* %27599
  %27601 = zext i32 %27600 to i64
  store i64 %27601, i64* %RCX.i156, align 8
  store %struct.Memory* %loadMem_476db3, %struct.Memory** %MEMORY
  %loadMem1_476db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27603 = getelementptr inbounds %struct.GPR, %struct.GPR* %27602, i32 0, i32 33
  %27604 = getelementptr inbounds %struct.Reg, %struct.Reg* %27603, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %27604 to i64*
  %27605 = load i64, i64* %PC.i154
  %27606 = add i64 %27605, -9113
  %27607 = load i64, i64* %PC.i154
  %27608 = add i64 %27607, 5
  %27609 = load i64, i64* %PC.i154
  %27610 = add i64 %27609, 5
  store i64 %27610, i64* %PC.i154
  %27611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %27612 = load i64, i64* %27611, align 8
  %27613 = add i64 %27612, -8
  %27614 = inttoptr i64 %27613 to i64*
  store i64 %27608, i64* %27614
  store i64 %27613, i64* %27611, align 8
  %27615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27606, i64* %27615, align 8
  store %struct.Memory* %loadMem1_476db9, %struct.Memory** %MEMORY
  %loadMem2_476db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_476db9 = load i64, i64* %3
  %call2_476db9 = call %struct.Memory* @sub_474a20.draw_color_char(%struct.State* %0, i64 %loadPC_476db9, %struct.Memory* %loadMem2_476db9)
  store %struct.Memory* %call2_476db9, %struct.Memory** %MEMORY
  %loadMem_476dbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %27616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27617 = getelementptr inbounds %struct.GPR, %struct.GPR* %27616, i32 0, i32 33
  %27618 = getelementptr inbounds %struct.Reg, %struct.Reg* %27617, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %27618 to i64*
  %27619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27620 = getelementptr inbounds %struct.GPR, %struct.GPR* %27619, i32 0, i32 1
  %27621 = getelementptr inbounds %struct.Reg, %struct.Reg* %27620, i32 0, i32 0
  %RAX.i152 = bitcast %union.anon* %27621 to i64*
  %27622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27623 = getelementptr inbounds %struct.GPR, %struct.GPR* %27622, i32 0, i32 15
  %27624 = getelementptr inbounds %struct.Reg, %struct.Reg* %27623, i32 0, i32 0
  %RBP.i153 = bitcast %union.anon* %27624 to i64*
  %27625 = load i64, i64* %RBP.i153
  %27626 = sub i64 %27625, 40
  %27627 = load i64, i64* %PC.i151
  %27628 = add i64 %27627, 3
  store i64 %27628, i64* %PC.i151
  %27629 = inttoptr i64 %27626 to i32*
  %27630 = load i32, i32* %27629
  %27631 = zext i32 %27630 to i64
  store i64 %27631, i64* %RAX.i152, align 8
  store %struct.Memory* %loadMem_476dbe, %struct.Memory** %MEMORY
  %loadMem_476dc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27633 = getelementptr inbounds %struct.GPR, %struct.GPR* %27632, i32 0, i32 33
  %27634 = getelementptr inbounds %struct.Reg, %struct.Reg* %27633, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %27634 to i64*
  %27635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27636 = getelementptr inbounds %struct.GPR, %struct.GPR* %27635, i32 0, i32 1
  %27637 = getelementptr inbounds %struct.Reg, %struct.Reg* %27636, i32 0, i32 0
  %RAX.i150 = bitcast %union.anon* %27637 to i64*
  %27638 = load i64, i64* %RAX.i150
  %27639 = load i64, i64* %PC.i149
  %27640 = add i64 %27639, 3
  store i64 %27640, i64* %PC.i149
  %27641 = trunc i64 %27638 to i32
  %27642 = add i32 1, %27641
  %27643 = zext i32 %27642 to i64
  store i64 %27643, i64* %RAX.i150, align 8
  %27644 = icmp ult i32 %27642, %27641
  %27645 = icmp ult i32 %27642, 1
  %27646 = or i1 %27644, %27645
  %27647 = zext i1 %27646 to i8
  %27648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27647, i8* %27648, align 1
  %27649 = and i32 %27642, 255
  %27650 = call i32 @llvm.ctpop.i32(i32 %27649)
  %27651 = trunc i32 %27650 to i8
  %27652 = and i8 %27651, 1
  %27653 = xor i8 %27652, 1
  %27654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27653, i8* %27654, align 1
  %27655 = xor i64 1, %27638
  %27656 = trunc i64 %27655 to i32
  %27657 = xor i32 %27656, %27642
  %27658 = lshr i32 %27657, 4
  %27659 = trunc i32 %27658 to i8
  %27660 = and i8 %27659, 1
  %27661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27660, i8* %27661, align 1
  %27662 = icmp eq i32 %27642, 0
  %27663 = zext i1 %27662 to i8
  %27664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27663, i8* %27664, align 1
  %27665 = lshr i32 %27642, 31
  %27666 = trunc i32 %27665 to i8
  %27667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27666, i8* %27667, align 1
  %27668 = lshr i32 %27641, 31
  %27669 = xor i32 %27665, %27668
  %27670 = add i32 %27669, %27665
  %27671 = icmp eq i32 %27670, 2
  %27672 = zext i1 %27671 to i8
  %27673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27672, i8* %27673, align 1
  store %struct.Memory* %loadMem_476dc1, %struct.Memory** %MEMORY
  %loadMem_476dc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27675 = getelementptr inbounds %struct.GPR, %struct.GPR* %27674, i32 0, i32 33
  %27676 = getelementptr inbounds %struct.Reg, %struct.Reg* %27675, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %27676 to i64*
  %27677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27678 = getelementptr inbounds %struct.GPR, %struct.GPR* %27677, i32 0, i32 1
  %27679 = getelementptr inbounds %struct.Reg, %struct.Reg* %27678, i32 0, i32 0
  %EAX.i147 = bitcast %union.anon* %27679 to i32*
  %27680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27681 = getelementptr inbounds %struct.GPR, %struct.GPR* %27680, i32 0, i32 15
  %27682 = getelementptr inbounds %struct.Reg, %struct.Reg* %27681, i32 0, i32 0
  %RBP.i148 = bitcast %union.anon* %27682 to i64*
  %27683 = load i64, i64* %RBP.i148
  %27684 = sub i64 %27683, 40
  %27685 = load i32, i32* %EAX.i147
  %27686 = zext i32 %27685 to i64
  %27687 = load i64, i64* %PC.i146
  %27688 = add i64 %27687, 3
  store i64 %27688, i64* %PC.i146
  %27689 = inttoptr i64 %27684 to i32*
  store i32 %27685, i32* %27689
  store %struct.Memory* %loadMem_476dc4, %struct.Memory** %MEMORY
  %loadMem_476dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27691 = getelementptr inbounds %struct.GPR, %struct.GPR* %27690, i32 0, i32 33
  %27692 = getelementptr inbounds %struct.Reg, %struct.Reg* %27691, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %27692 to i64*
  %27693 = load i64, i64* %PC.i145
  %27694 = add i64 %27693, -447
  %27695 = load i64, i64* %PC.i145
  %27696 = add i64 %27695, 5
  store i64 %27696, i64* %PC.i145
  %27697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27694, i64* %27697, align 8
  store %struct.Memory* %loadMem_476dc7, %struct.Memory** %MEMORY
  br label %block_.L_476c08

block_.L_476dcc:                                  ; preds = %block_.L_476c08
  %loadMem_476dcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %27698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27699 = getelementptr inbounds %struct.GPR, %struct.GPR* %27698, i32 0, i32 33
  %27700 = getelementptr inbounds %struct.Reg, %struct.Reg* %27699, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %27700 to i64*
  %27701 = load i64, i64* %PC.i144
  %27702 = add i64 %27701, 5
  %27703 = load i64, i64* %PC.i144
  %27704 = add i64 %27703, 5
  store i64 %27704, i64* %PC.i144
  %27705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27702, i64* %27705, align 8
  store %struct.Memory* %loadMem_476dcc, %struct.Memory** %MEMORY
  br label %block_.L_476dd1

block_.L_476dd1:                                  ; preds = %block_.L_476dcc
  %loadMem_476dd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27707 = getelementptr inbounds %struct.GPR, %struct.GPR* %27706, i32 0, i32 33
  %27708 = getelementptr inbounds %struct.Reg, %struct.Reg* %27707, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %27708 to i64*
  %27709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27710 = getelementptr inbounds %struct.GPR, %struct.GPR* %27709, i32 0, i32 1
  %27711 = getelementptr inbounds %struct.Reg, %struct.Reg* %27710, i32 0, i32 0
  %RAX.i142 = bitcast %union.anon* %27711 to i64*
  %27712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27713 = getelementptr inbounds %struct.GPR, %struct.GPR* %27712, i32 0, i32 15
  %27714 = getelementptr inbounds %struct.Reg, %struct.Reg* %27713, i32 0, i32 0
  %RBP.i143 = bitcast %union.anon* %27714 to i64*
  %27715 = load i64, i64* %RBP.i143
  %27716 = sub i64 %27715, 36
  %27717 = load i64, i64* %PC.i141
  %27718 = add i64 %27717, 3
  store i64 %27718, i64* %PC.i141
  %27719 = inttoptr i64 %27716 to i32*
  %27720 = load i32, i32* %27719
  %27721 = zext i32 %27720 to i64
  store i64 %27721, i64* %RAX.i142, align 8
  store %struct.Memory* %loadMem_476dd1, %struct.Memory** %MEMORY
  %loadMem_476dd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27723 = getelementptr inbounds %struct.GPR, %struct.GPR* %27722, i32 0, i32 33
  %27724 = getelementptr inbounds %struct.Reg, %struct.Reg* %27723, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %27724 to i64*
  %27725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27726 = getelementptr inbounds %struct.GPR, %struct.GPR* %27725, i32 0, i32 1
  %27727 = getelementptr inbounds %struct.Reg, %struct.Reg* %27726, i32 0, i32 0
  %RAX.i140 = bitcast %union.anon* %27727 to i64*
  %27728 = load i64, i64* %RAX.i140
  %27729 = load i64, i64* %PC.i139
  %27730 = add i64 %27729, 3
  store i64 %27730, i64* %PC.i139
  %27731 = trunc i64 %27728 to i32
  %27732 = add i32 1, %27731
  %27733 = zext i32 %27732 to i64
  store i64 %27733, i64* %RAX.i140, align 8
  %27734 = icmp ult i32 %27732, %27731
  %27735 = icmp ult i32 %27732, 1
  %27736 = or i1 %27734, %27735
  %27737 = zext i1 %27736 to i8
  %27738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27737, i8* %27738, align 1
  %27739 = and i32 %27732, 255
  %27740 = call i32 @llvm.ctpop.i32(i32 %27739)
  %27741 = trunc i32 %27740 to i8
  %27742 = and i8 %27741, 1
  %27743 = xor i8 %27742, 1
  %27744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27743, i8* %27744, align 1
  %27745 = xor i64 1, %27728
  %27746 = trunc i64 %27745 to i32
  %27747 = xor i32 %27746, %27732
  %27748 = lshr i32 %27747, 4
  %27749 = trunc i32 %27748 to i8
  %27750 = and i8 %27749, 1
  %27751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27750, i8* %27751, align 1
  %27752 = icmp eq i32 %27732, 0
  %27753 = zext i1 %27752 to i8
  %27754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27753, i8* %27754, align 1
  %27755 = lshr i32 %27732, 31
  %27756 = trunc i32 %27755 to i8
  %27757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27756, i8* %27757, align 1
  %27758 = lshr i32 %27731, 31
  %27759 = xor i32 %27755, %27758
  %27760 = add i32 %27759, %27755
  %27761 = icmp eq i32 %27760, 2
  %27762 = zext i1 %27761 to i8
  %27763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27762, i8* %27763, align 1
  store %struct.Memory* %loadMem_476dd4, %struct.Memory** %MEMORY
  %loadMem_476dd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27765 = getelementptr inbounds %struct.GPR, %struct.GPR* %27764, i32 0, i32 33
  %27766 = getelementptr inbounds %struct.Reg, %struct.Reg* %27765, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %27766 to i64*
  %27767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27768 = getelementptr inbounds %struct.GPR, %struct.GPR* %27767, i32 0, i32 1
  %27769 = getelementptr inbounds %struct.Reg, %struct.Reg* %27768, i32 0, i32 0
  %EAX.i137 = bitcast %union.anon* %27769 to i32*
  %27770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27771 = getelementptr inbounds %struct.GPR, %struct.GPR* %27770, i32 0, i32 15
  %27772 = getelementptr inbounds %struct.Reg, %struct.Reg* %27771, i32 0, i32 0
  %RBP.i138 = bitcast %union.anon* %27772 to i64*
  %27773 = load i64, i64* %RBP.i138
  %27774 = sub i64 %27773, 36
  %27775 = load i32, i32* %EAX.i137
  %27776 = zext i32 %27775 to i64
  %27777 = load i64, i64* %PC.i136
  %27778 = add i64 %27777, 3
  store i64 %27778, i64* %PC.i136
  %27779 = inttoptr i64 %27774 to i32*
  store i32 %27775, i32* %27779
  store %struct.Memory* %loadMem_476dd7, %struct.Memory** %MEMORY
  %loadMem_476dda = load %struct.Memory*, %struct.Memory** %MEMORY
  %27780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27781 = getelementptr inbounds %struct.GPR, %struct.GPR* %27780, i32 0, i32 33
  %27782 = getelementptr inbounds %struct.Reg, %struct.Reg* %27781, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %27782 to i64*
  %27783 = load i64, i64* %PC.i135
  %27784 = add i64 %27783, -489
  %27785 = load i64, i64* %PC.i135
  %27786 = add i64 %27785, 5
  store i64 %27786, i64* %PC.i135
  %27787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27784, i64* %27787, align 8
  store %struct.Memory* %loadMem_476dda, %struct.Memory** %MEMORY
  br label %block_.L_476bf1

block_.L_476ddf:                                  ; preds = %block_.L_476bf1
  %loadMem1_476ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %27788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27789 = getelementptr inbounds %struct.GPR, %struct.GPR* %27788, i32 0, i32 33
  %27790 = getelementptr inbounds %struct.Reg, %struct.Reg* %27789, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %27790 to i64*
  %27791 = load i64, i64* %PC.i134
  %27792 = add i64 %27791, -8255
  %27793 = load i64, i64* %PC.i134
  %27794 = add i64 %27793, 5
  %27795 = load i64, i64* %PC.i134
  %27796 = add i64 %27795, 5
  store i64 %27796, i64* %PC.i134
  %27797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %27798 = load i64, i64* %27797, align 8
  %27799 = add i64 %27798, -8
  %27800 = inttoptr i64 %27799 to i64*
  store i64 %27794, i64* %27800
  store i64 %27799, i64* %27797, align 8
  %27801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27792, i64* %27801, align 8
  store %struct.Memory* %loadMem1_476ddf, %struct.Memory** %MEMORY
  %loadMem2_476ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_476ddf = load i64, i64* %3
  %call2_476ddf = call %struct.Memory* @sub_474da0.end_draw_board(%struct.State* %0, i64 %loadPC_476ddf, %struct.Memory* %loadMem2_476ddf)
  store %struct.Memory* %call2_476ddf, %struct.Memory** %MEMORY
  br label %block_.L_476de4

block_.L_476de4:                                  ; preds = %block_.L_476ddf, %block_476bdb, %block_476bd1
  %loadMem_476de4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27803 = getelementptr inbounds %struct.GPR, %struct.GPR* %27802, i32 0, i32 33
  %27804 = getelementptr inbounds %struct.Reg, %struct.Reg* %27803, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %27804 to i64*
  %27805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27806 = getelementptr inbounds %struct.GPR, %struct.GPR* %27805, i32 0, i32 15
  %27807 = getelementptr inbounds %struct.Reg, %struct.Reg* %27806, i32 0, i32 0
  %RBP.i133 = bitcast %union.anon* %27807 to i64*
  %27808 = load i64, i64* %RBP.i133
  %27809 = sub i64 %27808, 12
  %27810 = load i64, i64* %PC.i132
  %27811 = add i64 %27810, 4
  store i64 %27811, i64* %PC.i132
  %27812 = inttoptr i64 %27809 to i32*
  %27813 = load i32, i32* %27812
  %27814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %27814, align 1
  %27815 = and i32 %27813, 255
  %27816 = call i32 @llvm.ctpop.i32(i32 %27815)
  %27817 = trunc i32 %27816 to i8
  %27818 = and i8 %27817, 1
  %27819 = xor i8 %27818, 1
  %27820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27819, i8* %27820, align 1
  %27821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27821, align 1
  %27822 = icmp eq i32 %27813, 0
  %27823 = zext i1 %27822 to i8
  %27824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27823, i8* %27824, align 1
  %27825 = lshr i32 %27813, 31
  %27826 = trunc i32 %27825 to i8
  %27827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27826, i8* %27827, align 1
  %27828 = lshr i32 %27813, 31
  %27829 = xor i32 %27825, %27828
  %27830 = add i32 %27829, %27828
  %27831 = icmp eq i32 %27830, 2
  %27832 = zext i1 %27831 to i8
  %27833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27832, i8* %27833, align 1
  store %struct.Memory* %loadMem_476de4, %struct.Memory** %MEMORY
  %loadMem_476de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27835 = getelementptr inbounds %struct.GPR, %struct.GPR* %27834, i32 0, i32 33
  %27836 = getelementptr inbounds %struct.Reg, %struct.Reg* %27835, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %27836 to i64*
  %27837 = load i64, i64* %PC.i131
  %27838 = add i64 %27837, 179
  %27839 = load i64, i64* %PC.i131
  %27840 = add i64 %27839, 6
  %27841 = load i64, i64* %PC.i131
  %27842 = add i64 %27841, 6
  store i64 %27842, i64* %PC.i131
  %27843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27844 = load i8, i8* %27843, align 1
  %27845 = icmp eq i8 %27844, 0
  %27846 = zext i1 %27845 to i8
  store i8 %27846, i8* %BRANCH_TAKEN, align 1
  %27847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %27848 = select i1 %27845, i64 %27838, i64 %27840
  store i64 %27848, i64* %27847, align 8
  store %struct.Memory* %loadMem_476de8, %struct.Memory** %MEMORY
  %loadBr_476de8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476de8 = icmp eq i8 %loadBr_476de8, 1
  br i1 %cmpBr_476de8, label %block_.L_476e9b, label %block_476dee

block_476dee:                                     ; preds = %block_.L_476de4
  %loadMem_476dee = load %struct.Memory*, %struct.Memory** %MEMORY
  %27849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27850 = getelementptr inbounds %struct.GPR, %struct.GPR* %27849, i32 0, i32 33
  %27851 = getelementptr inbounds %struct.Reg, %struct.Reg* %27850, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %27851 to i64*
  %27852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27853 = getelementptr inbounds %struct.GPR, %struct.GPR* %27852, i32 0, i32 15
  %27854 = getelementptr inbounds %struct.Reg, %struct.Reg* %27853, i32 0, i32 0
  %RBP.i130 = bitcast %union.anon* %27854 to i64*
  %27855 = load i64, i64* %RBP.i130
  %27856 = sub i64 %27855, 52
  %27857 = load i64, i64* %PC.i129
  %27858 = add i64 %27857, 4
  store i64 %27858, i64* %PC.i129
  %27859 = inttoptr i64 %27856 to i32*
  %27860 = load i32, i32* %27859
  %27861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %27861, align 1
  %27862 = and i32 %27860, 255
  %27863 = call i32 @llvm.ctpop.i32(i32 %27862)
  %27864 = trunc i32 %27863 to i8
  %27865 = and i8 %27864, 1
  %27866 = xor i8 %27865, 1
  %27867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27866, i8* %27867, align 1
  %27868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27868, align 1
  %27869 = icmp eq i32 %27860, 0
  %27870 = zext i1 %27869 to i8
  %27871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27870, i8* %27871, align 1
  %27872 = lshr i32 %27860, 31
  %27873 = trunc i32 %27872 to i8
  %27874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27873, i8* %27874, align 1
  %27875 = lshr i32 %27860, 31
  %27876 = xor i32 %27872, %27875
  %27877 = add i32 %27876, %27875
  %27878 = icmp eq i32 %27877, 2
  %27879 = zext i1 %27878 to i8
  %27880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27879, i8* %27880, align 1
  store %struct.Memory* %loadMem_476dee, %struct.Memory** %MEMORY
  %loadMem_476df2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27882 = getelementptr inbounds %struct.GPR, %struct.GPR* %27881, i32 0, i32 33
  %27883 = getelementptr inbounds %struct.Reg, %struct.Reg* %27882, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %27883 to i64*
  %27884 = load i64, i64* %PC.i128
  %27885 = add i64 %27884, 169
  %27886 = load i64, i64* %PC.i128
  %27887 = add i64 %27886, 6
  %27888 = load i64, i64* %PC.i128
  %27889 = add i64 %27888, 6
  store i64 %27889, i64* %PC.i128
  %27890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27891 = load i8, i8* %27890, align 1
  store i8 %27891, i8* %BRANCH_TAKEN, align 1
  %27892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %27893 = icmp ne i8 %27891, 0
  %27894 = select i1 %27893, i64 %27885, i64 %27887
  store i64 %27894, i64* %27892, align 8
  store %struct.Memory* %loadMem_476df2, %struct.Memory** %MEMORY
  %loadBr_476df2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476df2 = icmp eq i8 %loadBr_476df2, 1
  br i1 %cmpBr_476df2, label %block_.L_476e9b, label %block_476df8

block_476df8:                                     ; preds = %block_476dee
  %loadMem_476df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27896 = getelementptr inbounds %struct.GPR, %struct.GPR* %27895, i32 0, i32 33
  %27897 = getelementptr inbounds %struct.Reg, %struct.Reg* %27896, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %27897 to i64*
  %27898 = load i64, i64* %PC.i127
  %27899 = add i64 %27898, 8
  store i64 %27899, i64* %PC.i127
  %27900 = load i32, i32* bitcast (%G_0xb63050_type* @G_0xb63050 to i32*)
  %27901 = sub i32 %27900, 10
  %27902 = icmp ult i32 %27900, 10
  %27903 = zext i1 %27902 to i8
  %27904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27903, i8* %27904, align 1
  %27905 = and i32 %27901, 255
  %27906 = call i32 @llvm.ctpop.i32(i32 %27905)
  %27907 = trunc i32 %27906 to i8
  %27908 = and i8 %27907, 1
  %27909 = xor i8 %27908, 1
  %27910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27909, i8* %27910, align 1
  %27911 = xor i32 %27900, 10
  %27912 = xor i32 %27911, %27901
  %27913 = lshr i32 %27912, 4
  %27914 = trunc i32 %27913 to i8
  %27915 = and i8 %27914, 1
  %27916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27915, i8* %27916, align 1
  %27917 = icmp eq i32 %27901, 0
  %27918 = zext i1 %27917 to i8
  %27919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27918, i8* %27919, align 1
  %27920 = lshr i32 %27901, 31
  %27921 = trunc i32 %27920 to i8
  %27922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27921, i8* %27922, align 1
  %27923 = lshr i32 %27900, 31
  %27924 = xor i32 %27920, %27923
  %27925 = add i32 %27924, %27923
  %27926 = icmp eq i32 %27925, 2
  %27927 = zext i1 %27926 to i8
  %27928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27927, i8* %27928, align 1
  store %struct.Memory* %loadMem_476df8, %struct.Memory** %MEMORY
  %loadMem_476e00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27930 = getelementptr inbounds %struct.GPR, %struct.GPR* %27929, i32 0, i32 33
  %27931 = getelementptr inbounds %struct.Reg, %struct.Reg* %27930, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %27931 to i64*
  %27932 = load i64, i64* %PC.i126
  %27933 = add i64 %27932, 155
  %27934 = load i64, i64* %PC.i126
  %27935 = add i64 %27934, 6
  %27936 = load i64, i64* %PC.i126
  %27937 = add i64 %27936, 6
  store i64 %27937, i64* %PC.i126
  %27938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %27939 = load i8, i8* %27938, align 1
  %27940 = icmp ne i8 %27939, 0
  %27941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %27942 = load i8, i8* %27941, align 1
  %27943 = icmp ne i8 %27942, 0
  %27944 = xor i1 %27940, %27943
  %27945 = xor i1 %27944, true
  %27946 = zext i1 %27945 to i8
  store i8 %27946, i8* %BRANCH_TAKEN, align 1
  %27947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %27948 = select i1 %27944, i64 %27935, i64 %27933
  store i64 %27948, i64* %27947, align 8
  store %struct.Memory* %loadMem_476e00, %struct.Memory** %MEMORY
  %loadBr_476e00 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476e00 = icmp eq i8 %loadBr_476e00, 1
  br i1 %cmpBr_476e00, label %block_.L_476e9b, label %block_476e06

block_476e06:                                     ; preds = %block_476df8
  %loadMem_476e06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27950 = getelementptr inbounds %struct.GPR, %struct.GPR* %27949, i32 0, i32 33
  %27951 = getelementptr inbounds %struct.Reg, %struct.Reg* %27950, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %27951 to i64*
  %27952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27953 = getelementptr inbounds %struct.GPR, %struct.GPR* %27952, i32 0, i32 1
  %27954 = getelementptr inbounds %struct.Reg, %struct.Reg* %27953, i32 0, i32 0
  %RAX.i125 = bitcast %union.anon* %27954 to i64*
  %27955 = load i64, i64* %PC.i124
  %27956 = add i64 %27955, 10
  store i64 %27956, i64* %PC.i124
  store i64 ptrtoint (%G__0xb44530_type* @G__0xb44530 to i64), i64* %RAX.i125, align 8
  store %struct.Memory* %loadMem_476e06, %struct.Memory** %MEMORY
  %loadMem_476e10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27958 = getelementptr inbounds %struct.GPR, %struct.GPR* %27957, i32 0, i32 33
  %27959 = getelementptr inbounds %struct.Reg, %struct.Reg* %27958, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %27959 to i64*
  %27960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27961 = getelementptr inbounds %struct.GPR, %struct.GPR* %27960, i32 0, i32 5
  %27962 = getelementptr inbounds %struct.Reg, %struct.Reg* %27961, i32 0, i32 0
  %RCX.i123 = bitcast %union.anon* %27962 to i64*
  %27963 = load i64, i64* %PC.i122
  %27964 = add i64 %27963, 10
  store i64 %27964, i64* %PC.i122
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RCX.i123, align 8
  store %struct.Memory* %loadMem_476e10, %struct.Memory** %MEMORY
  %loadMem_476e1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %27965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27966 = getelementptr inbounds %struct.GPR, %struct.GPR* %27965, i32 0, i32 33
  %27967 = getelementptr inbounds %struct.Reg, %struct.Reg* %27966, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %27967 to i64*
  %27968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27969 = getelementptr inbounds %struct.GPR, %struct.GPR* %27968, i32 0, i32 7
  %27970 = getelementptr inbounds %struct.Reg, %struct.Reg* %27969, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %27970 to i64*
  %27971 = load i64, i64* %PC.i121
  %27972 = add i64 %27971, 5
  store i64 %27972, i64* %PC.i121
  store i64 400, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_476e1a, %struct.Memory** %MEMORY
  %loadMem_476e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %27973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27974 = getelementptr inbounds %struct.GPR, %struct.GPR* %27973, i32 0, i32 33
  %27975 = getelementptr inbounds %struct.Reg, %struct.Reg* %27974, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %27975 to i64*
  %27976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27977 = getelementptr inbounds %struct.GPR, %struct.GPR* %27976, i32 0, i32 9
  %27978 = getelementptr inbounds %struct.Reg, %struct.Reg* %27977, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %27978 to i64*
  %27979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27980 = getelementptr inbounds %struct.GPR, %struct.GPR* %27979, i32 0, i32 15
  %27981 = getelementptr inbounds %struct.Reg, %struct.Reg* %27980, i32 0, i32 0
  %RBP.i120 = bitcast %union.anon* %27981 to i64*
  %27982 = load i64, i64* %RBP.i120
  %27983 = sub i64 %27982, 1040
  %27984 = load i64, i64* %PC.i119
  %27985 = add i64 %27984, 7
  store i64 %27985, i64* %PC.i119
  store i64 %27983, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_476e1f, %struct.Memory** %MEMORY
  %loadMem_476e26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27987 = getelementptr inbounds %struct.GPR, %struct.GPR* %27986, i32 0, i32 33
  %27988 = getelementptr inbounds %struct.Reg, %struct.Reg* %27987, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %27988 to i64*
  %27989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27990 = getelementptr inbounds %struct.GPR, %struct.GPR* %27989, i32 0, i32 11
  %27991 = getelementptr inbounds %struct.Reg, %struct.Reg* %27990, i32 0, i32 0
  %RDI.i118 = bitcast %union.anon* %27991 to i64*
  %27992 = load i64, i64* %PC.i117
  %27993 = add i64 %27992, 8
  store i64 %27993, i64* %PC.i117
  %27994 = load i32, i32* bitcast (%G_0xb63050_type* @G_0xb63050 to i32*)
  %27995 = sext i32 %27994 to i64
  store i64 %27995, i64* %RDI.i118, align 8
  store %struct.Memory* %loadMem_476e26, %struct.Memory** %MEMORY
  %loadMem_476e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %27996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27997 = getelementptr inbounds %struct.GPR, %struct.GPR* %27996, i32 0, i32 33
  %27998 = getelementptr inbounds %struct.Reg, %struct.Reg* %27997, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %27998 to i64*
  %27999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28000 = getelementptr inbounds %struct.GPR, %struct.GPR* %27999, i32 0, i32 11
  %28001 = getelementptr inbounds %struct.Reg, %struct.Reg* %28000, i32 0, i32 0
  %RDI.i116 = bitcast %union.anon* %28001 to i64*
  %28002 = load i64, i64* %RDI.i116
  %28003 = load i64, i64* %PC.i115
  %28004 = add i64 %28003, 7
  store i64 %28004, i64* %PC.i115
  %28005 = sext i64 %28002 to i128
  %28006 = and i128 %28005, -18446744073709551616
  %28007 = zext i64 %28002 to i128
  %28008 = or i128 %28006, %28007
  %28009 = mul i128 404, %28008
  %28010 = trunc i128 %28009 to i64
  store i64 %28010, i64* %RDI.i116, align 8
  %28011 = sext i64 %28010 to i128
  %28012 = icmp ne i128 %28011, %28009
  %28013 = zext i1 %28012 to i8
  %28014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28013, i8* %28014, align 1
  %28015 = trunc i128 %28009 to i32
  %28016 = and i32 %28015, 255
  %28017 = call i32 @llvm.ctpop.i32(i32 %28016)
  %28018 = trunc i32 %28017 to i8
  %28019 = and i8 %28018, 1
  %28020 = xor i8 %28019, 1
  %28021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28020, i8* %28021, align 1
  %28022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28022, align 1
  %28023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %28023, align 1
  %28024 = lshr i64 %28010, 63
  %28025 = trunc i64 %28024 to i8
  %28026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28025, i8* %28026, align 1
  %28027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28013, i8* %28027, align 1
  store %struct.Memory* %loadMem_476e2e, %struct.Memory** %MEMORY
  %loadMem_476e35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28029 = getelementptr inbounds %struct.GPR, %struct.GPR* %28028, i32 0, i32 33
  %28030 = getelementptr inbounds %struct.Reg, %struct.Reg* %28029, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %28030 to i64*
  %28031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28032 = getelementptr inbounds %struct.GPR, %struct.GPR* %28031, i32 0, i32 1
  %28033 = getelementptr inbounds %struct.Reg, %struct.Reg* %28032, i32 0, i32 0
  %RAX.i113 = bitcast %union.anon* %28033 to i64*
  %28034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28035 = getelementptr inbounds %struct.GPR, %struct.GPR* %28034, i32 0, i32 17
  %28036 = getelementptr inbounds %struct.Reg, %struct.Reg* %28035, i32 0, i32 0
  %R8.i114 = bitcast %union.anon* %28036 to i64*
  %28037 = load i64, i64* %RAX.i113
  %28038 = load i64, i64* %PC.i112
  %28039 = add i64 %28038, 3
  store i64 %28039, i64* %PC.i112
  store i64 %28037, i64* %R8.i114, align 8
  store %struct.Memory* %loadMem_476e35, %struct.Memory** %MEMORY
  %loadMem_476e38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28041 = getelementptr inbounds %struct.GPR, %struct.GPR* %28040, i32 0, i32 33
  %28042 = getelementptr inbounds %struct.Reg, %struct.Reg* %28041, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %28042 to i64*
  %28043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28044 = getelementptr inbounds %struct.GPR, %struct.GPR* %28043, i32 0, i32 11
  %28045 = getelementptr inbounds %struct.Reg, %struct.Reg* %28044, i32 0, i32 0
  %RDI.i110 = bitcast %union.anon* %28045 to i64*
  %28046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28047 = getelementptr inbounds %struct.GPR, %struct.GPR* %28046, i32 0, i32 17
  %28048 = getelementptr inbounds %struct.Reg, %struct.Reg* %28047, i32 0, i32 0
  %R8.i111 = bitcast %union.anon* %28048 to i64*
  %28049 = load i64, i64* %R8.i111
  %28050 = load i64, i64* %RDI.i110
  %28051 = load i64, i64* %PC.i109
  %28052 = add i64 %28051, 3
  store i64 %28052, i64* %PC.i109
  %28053 = add i64 %28050, %28049
  store i64 %28053, i64* %R8.i111, align 8
  %28054 = icmp ult i64 %28053, %28049
  %28055 = icmp ult i64 %28053, %28050
  %28056 = or i1 %28054, %28055
  %28057 = zext i1 %28056 to i8
  %28058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28057, i8* %28058, align 1
  %28059 = trunc i64 %28053 to i32
  %28060 = and i32 %28059, 255
  %28061 = call i32 @llvm.ctpop.i32(i32 %28060)
  %28062 = trunc i32 %28061 to i8
  %28063 = and i8 %28062, 1
  %28064 = xor i8 %28063, 1
  %28065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28064, i8* %28065, align 1
  %28066 = xor i64 %28050, %28049
  %28067 = xor i64 %28066, %28053
  %28068 = lshr i64 %28067, 4
  %28069 = trunc i64 %28068 to i8
  %28070 = and i8 %28069, 1
  %28071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28070, i8* %28071, align 1
  %28072 = icmp eq i64 %28053, 0
  %28073 = zext i1 %28072 to i8
  %28074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28073, i8* %28074, align 1
  %28075 = lshr i64 %28053, 63
  %28076 = trunc i64 %28075 to i8
  %28077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28076, i8* %28077, align 1
  %28078 = lshr i64 %28049, 63
  %28079 = lshr i64 %28050, 63
  %28080 = xor i64 %28075, %28078
  %28081 = xor i64 %28075, %28079
  %28082 = add i64 %28080, %28081
  %28083 = icmp eq i64 %28082, 2
  %28084 = zext i1 %28083 to i8
  %28085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28084, i8* %28085, align 1
  store %struct.Memory* %loadMem_476e38, %struct.Memory** %MEMORY
  %loadMem_476e3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %28086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28087 = getelementptr inbounds %struct.GPR, %struct.GPR* %28086, i32 0, i32 33
  %28088 = getelementptr inbounds %struct.Reg, %struct.Reg* %28087, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %28088 to i64*
  %28089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28090 = getelementptr inbounds %struct.GPR, %struct.GPR* %28089, i32 0, i32 17
  %28091 = getelementptr inbounds %struct.Reg, %struct.Reg* %28090, i32 0, i32 0
  %R8.i108 = bitcast %union.anon* %28091 to i64*
  %28092 = load i64, i64* %R8.i108
  %28093 = load i64, i64* %PC.i107
  %28094 = add i64 %28093, 4
  store i64 %28094, i64* %PC.i107
  %28095 = add i64 4, %28092
  store i64 %28095, i64* %R8.i108, align 8
  %28096 = icmp ult i64 %28095, %28092
  %28097 = icmp ult i64 %28095, 4
  %28098 = or i1 %28096, %28097
  %28099 = zext i1 %28098 to i8
  %28100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28099, i8* %28100, align 1
  %28101 = trunc i64 %28095 to i32
  %28102 = and i32 %28101, 255
  %28103 = call i32 @llvm.ctpop.i32(i32 %28102)
  %28104 = trunc i32 %28103 to i8
  %28105 = and i8 %28104, 1
  %28106 = xor i8 %28105, 1
  %28107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28106, i8* %28107, align 1
  %28108 = xor i64 4, %28092
  %28109 = xor i64 %28108, %28095
  %28110 = lshr i64 %28109, 4
  %28111 = trunc i64 %28110 to i8
  %28112 = and i8 %28111, 1
  %28113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28112, i8* %28113, align 1
  %28114 = icmp eq i64 %28095, 0
  %28115 = zext i1 %28114 to i8
  %28116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28115, i8* %28116, align 1
  %28117 = lshr i64 %28095, 63
  %28118 = trunc i64 %28117 to i8
  %28119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28118, i8* %28119, align 1
  %28120 = lshr i64 %28092, 63
  %28121 = xor i64 %28117, %28120
  %28122 = add i64 %28121, %28117
  %28123 = icmp eq i64 %28122, 2
  %28124 = zext i1 %28123 to i8
  %28125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28124, i8* %28125, align 1
  store %struct.Memory* %loadMem_476e3b, %struct.Memory** %MEMORY
  %loadMem_476e3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %28126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28127 = getelementptr inbounds %struct.GPR, %struct.GPR* %28126, i32 0, i32 33
  %28128 = getelementptr inbounds %struct.Reg, %struct.Reg* %28127, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %28128 to i64*
  %28129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28130 = getelementptr inbounds %struct.GPR, %struct.GPR* %28129, i32 0, i32 11
  %28131 = getelementptr inbounds %struct.Reg, %struct.Reg* %28130, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %28131 to i64*
  %28132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28133 = getelementptr inbounds %struct.GPR, %struct.GPR* %28132, i32 0, i32 17
  %28134 = getelementptr inbounds %struct.Reg, %struct.Reg* %28133, i32 0, i32 0
  %R8.i = bitcast %union.anon* %28134 to i64*
  %28135 = load i64, i64* %R8.i
  %28136 = load i64, i64* %PC.i106
  %28137 = add i64 %28136, 3
  store i64 %28137, i64* %PC.i106
  store i64 %28135, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_476e3f, %struct.Memory** %MEMORY
  %loadMem_476e42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28139 = getelementptr inbounds %struct.GPR, %struct.GPR* %28138, i32 0, i32 33
  %28140 = getelementptr inbounds %struct.Reg, %struct.Reg* %28139, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %28140 to i64*
  %28141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28142 = getelementptr inbounds %struct.GPR, %struct.GPR* %28141, i32 0, i32 1
  %28143 = getelementptr inbounds %struct.Reg, %struct.Reg* %28142, i32 0, i32 0
  %RAX.i104 = bitcast %union.anon* %28143 to i64*
  %28144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28145 = getelementptr inbounds %struct.GPR, %struct.GPR* %28144, i32 0, i32 15
  %28146 = getelementptr inbounds %struct.Reg, %struct.Reg* %28145, i32 0, i32 0
  %RBP.i105 = bitcast %union.anon* %28146 to i64*
  %28147 = load i64, i64* %RBP.i105
  %28148 = sub i64 %28147, 1224
  %28149 = load i64, i64* %RAX.i104
  %28150 = load i64, i64* %PC.i103
  %28151 = add i64 %28150, 7
  store i64 %28151, i64* %PC.i103
  %28152 = inttoptr i64 %28148 to i64*
  store i64 %28149, i64* %28152
  store %struct.Memory* %loadMem_476e42, %struct.Memory** %MEMORY
  %loadMem_476e49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28154 = getelementptr inbounds %struct.GPR, %struct.GPR* %28153, i32 0, i32 33
  %28155 = getelementptr inbounds %struct.Reg, %struct.Reg* %28154, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %28155 to i64*
  %28156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28157 = getelementptr inbounds %struct.GPR, %struct.GPR* %28156, i32 0, i32 5
  %28158 = getelementptr inbounds %struct.Reg, %struct.Reg* %28157, i32 0, i32 0
  %RCX.i101 = bitcast %union.anon* %28158 to i64*
  %28159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28160 = getelementptr inbounds %struct.GPR, %struct.GPR* %28159, i32 0, i32 15
  %28161 = getelementptr inbounds %struct.Reg, %struct.Reg* %28160, i32 0, i32 0
  %RBP.i102 = bitcast %union.anon* %28161 to i64*
  %28162 = load i64, i64* %RBP.i102
  %28163 = sub i64 %28162, 1232
  %28164 = load i64, i64* %RCX.i101
  %28165 = load i64, i64* %PC.i100
  %28166 = add i64 %28165, 7
  store i64 %28166, i64* %PC.i100
  %28167 = inttoptr i64 %28163 to i64*
  store i64 %28164, i64* %28167
  store %struct.Memory* %loadMem_476e49, %struct.Memory** %MEMORY
  %loadMem1_476e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28169 = getelementptr inbounds %struct.GPR, %struct.GPR* %28168, i32 0, i32 33
  %28170 = getelementptr inbounds %struct.Reg, %struct.Reg* %28169, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %28170 to i64*
  %28171 = load i64, i64* %PC.i99
  %28172 = add i64 %28171, -482656
  %28173 = load i64, i64* %PC.i99
  %28174 = add i64 %28173, 5
  %28175 = load i64, i64* %PC.i99
  %28176 = add i64 %28175, 5
  store i64 %28176, i64* %PC.i99
  %28177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %28178 = load i64, i64* %28177, align 8
  %28179 = add i64 %28178, -8
  %28180 = inttoptr i64 %28179 to i64*
  store i64 %28174, i64* %28180
  store i64 %28179, i64* %28177, align 8
  %28181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %28172, i64* %28181, align 8
  store %struct.Memory* %loadMem1_476e50, %struct.Memory** %MEMORY
  %loadMem2_476e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_476e50 = load i64, i64* %3
  %28182 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %loadMem2_476e50)
  store %struct.Memory* %28182, %struct.Memory** %MEMORY
  %loadMem_476e55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28184 = getelementptr inbounds %struct.GPR, %struct.GPR* %28183, i32 0, i32 33
  %28185 = getelementptr inbounds %struct.Reg, %struct.Reg* %28184, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %28185 to i64*
  %28186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28187 = getelementptr inbounds %struct.GPR, %struct.GPR* %28186, i32 0, i32 1
  %28188 = getelementptr inbounds %struct.Reg, %struct.Reg* %28187, i32 0, i32 0
  %RAX.i94 = bitcast %union.anon* %28188 to i64*
  %28189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28190 = getelementptr inbounds %struct.GPR, %struct.GPR* %28189, i32 0, i32 15
  %28191 = getelementptr inbounds %struct.Reg, %struct.Reg* %28190, i32 0, i32 0
  %RBP.i95 = bitcast %union.anon* %28191 to i64*
  %28192 = load i64, i64* %RBP.i95
  %28193 = sub i64 %28192, 8
  %28194 = load i64, i64* %PC.i93
  %28195 = add i64 %28194, 4
  store i64 %28195, i64* %PC.i93
  %28196 = inttoptr i64 %28193 to i32*
  %28197 = load i32, i32* %28196
  %28198 = sext i32 %28197 to i64
  store i64 %28198, i64* %RAX.i94, align 8
  store %struct.Memory* %loadMem_476e55, %struct.Memory** %MEMORY
  %loadMem_476e59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28200 = getelementptr inbounds %struct.GPR, %struct.GPR* %28199, i32 0, i32 33
  %28201 = getelementptr inbounds %struct.Reg, %struct.Reg* %28200, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %28201 to i64*
  %28202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28203 = getelementptr inbounds %struct.GPR, %struct.GPR* %28202, i32 0, i32 1
  %28204 = getelementptr inbounds %struct.Reg, %struct.Reg* %28203, i32 0, i32 0
  %RAX.i92 = bitcast %union.anon* %28204 to i64*
  %28205 = load i64, i64* %RAX.i92
  %28206 = load i64, i64* %PC.i91
  %28207 = add i64 %28206, 4
  store i64 %28207, i64* %PC.i91
  %28208 = sext i64 %28205 to i128
  %28209 = and i128 %28208, -18446744073709551616
  %28210 = zext i64 %28205 to i128
  %28211 = or i128 %28209, %28210
  %28212 = mul i128 76, %28211
  %28213 = trunc i128 %28212 to i64
  store i64 %28213, i64* %RAX.i92, align 8
  %28214 = sext i64 %28213 to i128
  %28215 = icmp ne i128 %28214, %28212
  %28216 = zext i1 %28215 to i8
  %28217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28216, i8* %28217, align 1
  %28218 = trunc i128 %28212 to i32
  %28219 = and i32 %28218, 255
  %28220 = call i32 @llvm.ctpop.i32(i32 %28219)
  %28221 = trunc i32 %28220 to i8
  %28222 = and i8 %28221, 1
  %28223 = xor i8 %28222, 1
  %28224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28223, i8* %28224, align 1
  %28225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28225, align 1
  %28226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %28226, align 1
  %28227 = lshr i64 %28213, 63
  %28228 = trunc i64 %28227 to i8
  %28229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28228, i8* %28229, align 1
  %28230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28216, i8* %28230, align 1
  store %struct.Memory* %loadMem_476e59, %struct.Memory** %MEMORY
  %loadMem_476e5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %28231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28232 = getelementptr inbounds %struct.GPR, %struct.GPR* %28231, i32 0, i32 33
  %28233 = getelementptr inbounds %struct.Reg, %struct.Reg* %28232, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %28233 to i64*
  %28234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28235 = getelementptr inbounds %struct.GPR, %struct.GPR* %28234, i32 0, i32 5
  %28236 = getelementptr inbounds %struct.Reg, %struct.Reg* %28235, i32 0, i32 0
  %RCX.i89 = bitcast %union.anon* %28236 to i64*
  %28237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28238 = getelementptr inbounds %struct.GPR, %struct.GPR* %28237, i32 0, i32 15
  %28239 = getelementptr inbounds %struct.Reg, %struct.Reg* %28238, i32 0, i32 0
  %RBP.i90 = bitcast %union.anon* %28239 to i64*
  %28240 = load i64, i64* %RBP.i90
  %28241 = sub i64 %28240, 1232
  %28242 = load i64, i64* %PC.i88
  %28243 = add i64 %28242, 7
  store i64 %28243, i64* %PC.i88
  %28244 = inttoptr i64 %28241 to i64*
  %28245 = load i64, i64* %28244
  store i64 %28245, i64* %RCX.i89, align 8
  store %struct.Memory* %loadMem_476e5d, %struct.Memory** %MEMORY
  %loadMem_476e64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28247 = getelementptr inbounds %struct.GPR, %struct.GPR* %28246, i32 0, i32 33
  %28248 = getelementptr inbounds %struct.Reg, %struct.Reg* %28247, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %28248 to i64*
  %28249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28250 = getelementptr inbounds %struct.GPR, %struct.GPR* %28249, i32 0, i32 1
  %28251 = getelementptr inbounds %struct.Reg, %struct.Reg* %28250, i32 0, i32 0
  %RAX.i86 = bitcast %union.anon* %28251 to i64*
  %28252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28253 = getelementptr inbounds %struct.GPR, %struct.GPR* %28252, i32 0, i32 5
  %28254 = getelementptr inbounds %struct.Reg, %struct.Reg* %28253, i32 0, i32 0
  %RCX.i87 = bitcast %union.anon* %28254 to i64*
  %28255 = load i64, i64* %RCX.i87
  %28256 = load i64, i64* %RAX.i86
  %28257 = load i64, i64* %PC.i85
  %28258 = add i64 %28257, 3
  store i64 %28258, i64* %PC.i85
  %28259 = add i64 %28256, %28255
  store i64 %28259, i64* %RCX.i87, align 8
  %28260 = icmp ult i64 %28259, %28255
  %28261 = icmp ult i64 %28259, %28256
  %28262 = or i1 %28260, %28261
  %28263 = zext i1 %28262 to i8
  %28264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28263, i8* %28264, align 1
  %28265 = trunc i64 %28259 to i32
  %28266 = and i32 %28265, 255
  %28267 = call i32 @llvm.ctpop.i32(i32 %28266)
  %28268 = trunc i32 %28267 to i8
  %28269 = and i8 %28268, 1
  %28270 = xor i8 %28269, 1
  %28271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28270, i8* %28271, align 1
  %28272 = xor i64 %28256, %28255
  %28273 = xor i64 %28272, %28259
  %28274 = lshr i64 %28273, 4
  %28275 = trunc i64 %28274 to i8
  %28276 = and i8 %28275, 1
  %28277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28276, i8* %28277, align 1
  %28278 = icmp eq i64 %28259, 0
  %28279 = zext i1 %28278 to i8
  %28280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28279, i8* %28280, align 1
  %28281 = lshr i64 %28259, 63
  %28282 = trunc i64 %28281 to i8
  %28283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28282, i8* %28283, align 1
  %28284 = lshr i64 %28255, 63
  %28285 = lshr i64 %28256, 63
  %28286 = xor i64 %28281, %28284
  %28287 = xor i64 %28281, %28285
  %28288 = add i64 %28286, %28287
  %28289 = icmp eq i64 %28288, 2
  %28290 = zext i1 %28289 to i8
  %28291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28290, i8* %28291, align 1
  store %struct.Memory* %loadMem_476e64, %struct.Memory** %MEMORY
  %loadMem_476e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28293 = getelementptr inbounds %struct.GPR, %struct.GPR* %28292, i32 0, i32 33
  %28294 = getelementptr inbounds %struct.Reg, %struct.Reg* %28293, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %28294 to i64*
  %28295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28296 = getelementptr inbounds %struct.GPR, %struct.GPR* %28295, i32 0, i32 19
  %28297 = getelementptr inbounds %struct.Reg, %struct.Reg* %28296, i32 0, i32 0
  %R9D.i83 = bitcast %union.anon* %28297 to i32*
  %28298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28299 = getelementptr inbounds %struct.GPR, %struct.GPR* %28298, i32 0, i32 5
  %28300 = getelementptr inbounds %struct.Reg, %struct.Reg* %28299, i32 0, i32 0
  %RCX.i84 = bitcast %union.anon* %28300 to i64*
  %28301 = bitcast i32* %R9D.i83 to i64*
  %28302 = load i64, i64* %RCX.i84
  %28303 = add i64 %28302, 4
  %28304 = load i64, i64* %PC.i82
  %28305 = add i64 %28304, 4
  store i64 %28305, i64* %PC.i82
  %28306 = inttoptr i64 %28303 to i32*
  %28307 = load i32, i32* %28306
  %28308 = zext i32 %28307 to i64
  store i64 %28308, i64* %28301, align 8
  store %struct.Memory* %loadMem_476e67, %struct.Memory** %MEMORY
  %loadMem_476e6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %28309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28310 = getelementptr inbounds %struct.GPR, %struct.GPR* %28309, i32 0, i32 33
  %28311 = getelementptr inbounds %struct.Reg, %struct.Reg* %28310, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %28311 to i64*
  %28312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28313 = getelementptr inbounds %struct.GPR, %struct.GPR* %28312, i32 0, i32 1
  %28314 = getelementptr inbounds %struct.Reg, %struct.Reg* %28313, i32 0, i32 0
  %RAX.i81 = bitcast %union.anon* %28314 to i64*
  %28315 = load i64, i64* %PC.i80
  %28316 = add i64 %28315, 8
  store i64 %28316, i64* %PC.i80
  %28317 = load i32, i32* bitcast (%G_0xb63050_type* @G_0xb63050 to i32*)
  %28318 = sext i32 %28317 to i64
  store i64 %28318, i64* %RAX.i81, align 8
  store %struct.Memory* %loadMem_476e6b, %struct.Memory** %MEMORY
  %loadMem_476e73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28320 = getelementptr inbounds %struct.GPR, %struct.GPR* %28319, i32 0, i32 33
  %28321 = getelementptr inbounds %struct.Reg, %struct.Reg* %28320, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %28321 to i64*
  %28322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28323 = getelementptr inbounds %struct.GPR, %struct.GPR* %28322, i32 0, i32 1
  %28324 = getelementptr inbounds %struct.Reg, %struct.Reg* %28323, i32 0, i32 0
  %RAX.i79 = bitcast %union.anon* %28324 to i64*
  %28325 = load i64, i64* %RAX.i79
  %28326 = load i64, i64* %PC.i78
  %28327 = add i64 %28326, 7
  store i64 %28327, i64* %PC.i78
  %28328 = sext i64 %28325 to i128
  %28329 = and i128 %28328, -18446744073709551616
  %28330 = zext i64 %28325 to i128
  %28331 = or i128 %28329, %28330
  %28332 = mul i128 404, %28331
  %28333 = trunc i128 %28332 to i64
  store i64 %28333, i64* %RAX.i79, align 8
  %28334 = sext i64 %28333 to i128
  %28335 = icmp ne i128 %28334, %28332
  %28336 = zext i1 %28335 to i8
  %28337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28336, i8* %28337, align 1
  %28338 = trunc i128 %28332 to i32
  %28339 = and i32 %28338, 255
  %28340 = call i32 @llvm.ctpop.i32(i32 %28339)
  %28341 = trunc i32 %28340 to i8
  %28342 = and i8 %28341, 1
  %28343 = xor i8 %28342, 1
  %28344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28343, i8* %28344, align 1
  %28345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28345, align 1
  %28346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %28346, align 1
  %28347 = lshr i64 %28333, 63
  %28348 = trunc i64 %28347 to i8
  %28349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28348, i8* %28349, align 1
  %28350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28336, i8* %28350, align 1
  store %struct.Memory* %loadMem_476e73, %struct.Memory** %MEMORY
  %loadMem_476e7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %28351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28352 = getelementptr inbounds %struct.GPR, %struct.GPR* %28351, i32 0, i32 33
  %28353 = getelementptr inbounds %struct.Reg, %struct.Reg* %28352, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %28353 to i64*
  %28354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28355 = getelementptr inbounds %struct.GPR, %struct.GPR* %28354, i32 0, i32 5
  %28356 = getelementptr inbounds %struct.Reg, %struct.Reg* %28355, i32 0, i32 0
  %RCX.i76 = bitcast %union.anon* %28356 to i64*
  %28357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28358 = getelementptr inbounds %struct.GPR, %struct.GPR* %28357, i32 0, i32 15
  %28359 = getelementptr inbounds %struct.Reg, %struct.Reg* %28358, i32 0, i32 0
  %RBP.i77 = bitcast %union.anon* %28359 to i64*
  %28360 = load i64, i64* %RBP.i77
  %28361 = sub i64 %28360, 1224
  %28362 = load i64, i64* %PC.i75
  %28363 = add i64 %28362, 7
  store i64 %28363, i64* %PC.i75
  %28364 = inttoptr i64 %28361 to i64*
  %28365 = load i64, i64* %28364
  store i64 %28365, i64* %RCX.i76, align 8
  store %struct.Memory* %loadMem_476e7a, %struct.Memory** %MEMORY
  %loadMem_476e81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28367 = getelementptr inbounds %struct.GPR, %struct.GPR* %28366, i32 0, i32 33
  %28368 = getelementptr inbounds %struct.Reg, %struct.Reg* %28367, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %28368 to i64*
  %28369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28370 = getelementptr inbounds %struct.GPR, %struct.GPR* %28369, i32 0, i32 1
  %28371 = getelementptr inbounds %struct.Reg, %struct.Reg* %28370, i32 0, i32 0
  %RAX.i73 = bitcast %union.anon* %28371 to i64*
  %28372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28373 = getelementptr inbounds %struct.GPR, %struct.GPR* %28372, i32 0, i32 5
  %28374 = getelementptr inbounds %struct.Reg, %struct.Reg* %28373, i32 0, i32 0
  %RCX.i74 = bitcast %union.anon* %28374 to i64*
  %28375 = load i64, i64* %RCX.i74
  %28376 = load i64, i64* %RAX.i73
  %28377 = load i64, i64* %PC.i72
  %28378 = add i64 %28377, 3
  store i64 %28378, i64* %PC.i72
  %28379 = add i64 %28376, %28375
  store i64 %28379, i64* %RCX.i74, align 8
  %28380 = icmp ult i64 %28379, %28375
  %28381 = icmp ult i64 %28379, %28376
  %28382 = or i1 %28380, %28381
  %28383 = zext i1 %28382 to i8
  %28384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28383, i8* %28384, align 1
  %28385 = trunc i64 %28379 to i32
  %28386 = and i32 %28385, 255
  %28387 = call i32 @llvm.ctpop.i32(i32 %28386)
  %28388 = trunc i32 %28387 to i8
  %28389 = and i8 %28388, 1
  %28390 = xor i8 %28389, 1
  %28391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28390, i8* %28391, align 1
  %28392 = xor i64 %28376, %28375
  %28393 = xor i64 %28392, %28379
  %28394 = lshr i64 %28393, 4
  %28395 = trunc i64 %28394 to i8
  %28396 = and i8 %28395, 1
  %28397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28396, i8* %28397, align 1
  %28398 = icmp eq i64 %28379, 0
  %28399 = zext i1 %28398 to i8
  %28400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28399, i8* %28400, align 1
  %28401 = lshr i64 %28379, 63
  %28402 = trunc i64 %28401 to i8
  %28403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28402, i8* %28403, align 1
  %28404 = lshr i64 %28375, 63
  %28405 = lshr i64 %28376, 63
  %28406 = xor i64 %28401, %28404
  %28407 = xor i64 %28401, %28405
  %28408 = add i64 %28406, %28407
  %28409 = icmp eq i64 %28408, 2
  %28410 = zext i1 %28409 to i8
  %28411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28410, i8* %28411, align 1
  store %struct.Memory* %loadMem_476e81, %struct.Memory** %MEMORY
  %loadMem_476e84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28413 = getelementptr inbounds %struct.GPR, %struct.GPR* %28412, i32 0, i32 33
  %28414 = getelementptr inbounds %struct.Reg, %struct.Reg* %28413, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %28414 to i64*
  %28415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28416 = getelementptr inbounds %struct.GPR, %struct.GPR* %28415, i32 0, i32 19
  %28417 = getelementptr inbounds %struct.Reg, %struct.Reg* %28416, i32 0, i32 0
  %R9D.i70 = bitcast %union.anon* %28417 to i32*
  %28418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28419 = getelementptr inbounds %struct.GPR, %struct.GPR* %28418, i32 0, i32 5
  %28420 = getelementptr inbounds %struct.Reg, %struct.Reg* %28419, i32 0, i32 0
  %RCX.i71 = bitcast %union.anon* %28420 to i64*
  %28421 = load i64, i64* %RCX.i71
  %28422 = load i32, i32* %R9D.i70
  %28423 = zext i32 %28422 to i64
  %28424 = load i64, i64* %PC.i69
  %28425 = add i64 %28424, 3
  store i64 %28425, i64* %PC.i69
  %28426 = inttoptr i64 %28421 to i32*
  store i32 %28422, i32* %28426
  store %struct.Memory* %loadMem_476e84, %struct.Memory** %MEMORY
  %loadMem_476e87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28428 = getelementptr inbounds %struct.GPR, %struct.GPR* %28427, i32 0, i32 33
  %28429 = getelementptr inbounds %struct.Reg, %struct.Reg* %28428, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %28429 to i64*
  %28430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28431 = getelementptr inbounds %struct.GPR, %struct.GPR* %28430, i32 0, i32 19
  %28432 = getelementptr inbounds %struct.Reg, %struct.Reg* %28431, i32 0, i32 0
  %R9D.i68 = bitcast %union.anon* %28432 to i32*
  %28433 = bitcast i32* %R9D.i68 to i64*
  %28434 = load i64, i64* %PC.i67
  %28435 = add i64 %28434, 8
  store i64 %28435, i64* %PC.i67
  %28436 = load i32, i32* bitcast (%G_0xb63050_type* @G_0xb63050 to i32*)
  %28437 = zext i32 %28436 to i64
  store i64 %28437, i64* %28433, align 8
  store %struct.Memory* %loadMem_476e87, %struct.Memory** %MEMORY
  %loadMem_476e8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %28438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28439 = getelementptr inbounds %struct.GPR, %struct.GPR* %28438, i32 0, i32 33
  %28440 = getelementptr inbounds %struct.Reg, %struct.Reg* %28439, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %28440 to i64*
  %28441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28442 = getelementptr inbounds %struct.GPR, %struct.GPR* %28441, i32 0, i32 19
  %28443 = getelementptr inbounds %struct.Reg, %struct.Reg* %28442, i32 0, i32 0
  %R9D.i66 = bitcast %union.anon* %28443 to i32*
  %28444 = bitcast i32* %R9D.i66 to i64*
  %28445 = load i32, i32* %R9D.i66
  %28446 = zext i32 %28445 to i64
  %28447 = load i64, i64* %PC.i65
  %28448 = add i64 %28447, 4
  store i64 %28448, i64* %PC.i65
  %28449 = add i32 1, %28445
  %28450 = zext i32 %28449 to i64
  store i64 %28450, i64* %28444, align 8
  %28451 = icmp ult i32 %28449, %28445
  %28452 = icmp ult i32 %28449, 1
  %28453 = or i1 %28451, %28452
  %28454 = zext i1 %28453 to i8
  %28455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28454, i8* %28455, align 1
  %28456 = and i32 %28449, 255
  %28457 = call i32 @llvm.ctpop.i32(i32 %28456)
  %28458 = trunc i32 %28457 to i8
  %28459 = and i8 %28458, 1
  %28460 = xor i8 %28459, 1
  %28461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28460, i8* %28461, align 1
  %28462 = xor i64 1, %28446
  %28463 = trunc i64 %28462 to i32
  %28464 = xor i32 %28463, %28449
  %28465 = lshr i32 %28464, 4
  %28466 = trunc i32 %28465 to i8
  %28467 = and i8 %28466, 1
  %28468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28467, i8* %28468, align 1
  %28469 = icmp eq i32 %28449, 0
  %28470 = zext i1 %28469 to i8
  %28471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28470, i8* %28471, align 1
  %28472 = lshr i32 %28449, 31
  %28473 = trunc i32 %28472 to i8
  %28474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28473, i8* %28474, align 1
  %28475 = lshr i32 %28445, 31
  %28476 = xor i32 %28472, %28475
  %28477 = add i32 %28476, %28472
  %28478 = icmp eq i32 %28477, 2
  %28479 = zext i1 %28478 to i8
  %28480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28479, i8* %28480, align 1
  store %struct.Memory* %loadMem_476e8f, %struct.Memory** %MEMORY
  %loadMem_476e93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28482 = getelementptr inbounds %struct.GPR, %struct.GPR* %28481, i32 0, i32 33
  %28483 = getelementptr inbounds %struct.Reg, %struct.Reg* %28482, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %28483 to i64*
  %28484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28485 = getelementptr inbounds %struct.GPR, %struct.GPR* %28484, i32 0, i32 19
  %28486 = getelementptr inbounds %struct.Reg, %struct.Reg* %28485, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %28486 to i32*
  %28487 = load i32, i32* %R9D.i
  %28488 = zext i32 %28487 to i64
  %28489 = load i64, i64* %PC.i64
  %28490 = add i64 %28489, 8
  store i64 %28490, i64* %PC.i64
  store i32 %28487, i32* bitcast (%G_0xb63050_type* @G_0xb63050 to i32*)
  store %struct.Memory* %loadMem_476e93, %struct.Memory** %MEMORY
  br label %block_.L_476e9b

block_.L_476e9b:                                  ; preds = %block_476e06, %block_476df8, %block_476dee, %block_.L_476de4
  %loadMem_476e9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %28491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28492 = getelementptr inbounds %struct.GPR, %struct.GPR* %28491, i32 0, i32 33
  %28493 = getelementptr inbounds %struct.Reg, %struct.Reg* %28492, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %28493 to i64*
  %28494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28495 = getelementptr inbounds %struct.GPR, %struct.GPR* %28494, i32 0, i32 15
  %28496 = getelementptr inbounds %struct.Reg, %struct.Reg* %28495, i32 0, i32 0
  %RBP.i63 = bitcast %union.anon* %28496 to i64*
  %28497 = load i64, i64* %RBP.i63
  %28498 = sub i64 %28497, 24
  %28499 = load i64, i64* %PC.i62
  %28500 = add i64 %28499, 5
  store i64 %28500, i64* %PC.i62
  %28501 = inttoptr i64 %28498 to i64*
  %28502 = load i64, i64* %28501
  %28503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %28503, align 1
  %28504 = trunc i64 %28502 to i32
  %28505 = and i32 %28504, 255
  %28506 = call i32 @llvm.ctpop.i32(i32 %28505)
  %28507 = trunc i32 %28506 to i8
  %28508 = and i8 %28507, 1
  %28509 = xor i8 %28508, 1
  %28510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28509, i8* %28510, align 1
  %28511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28511, align 1
  %28512 = icmp eq i64 %28502, 0
  %28513 = zext i1 %28512 to i8
  %28514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28513, i8* %28514, align 1
  %28515 = lshr i64 %28502, 63
  %28516 = trunc i64 %28515 to i8
  %28517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28516, i8* %28517, align 1
  %28518 = lshr i64 %28502, 63
  %28519 = xor i64 %28515, %28518
  %28520 = add i64 %28519, %28518
  %28521 = icmp eq i64 %28520, 2
  %28522 = zext i1 %28521 to i8
  %28523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28522, i8* %28523, align 1
  store %struct.Memory* %loadMem_476e9b, %struct.Memory** %MEMORY
  %loadMem_476ea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28525 = getelementptr inbounds %struct.GPR, %struct.GPR* %28524, i32 0, i32 33
  %28526 = getelementptr inbounds %struct.Reg, %struct.Reg* %28525, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %28526 to i64*
  %28527 = load i64, i64* %PC.i61
  %28528 = add i64 %28527, 131
  %28529 = load i64, i64* %PC.i61
  %28530 = add i64 %28529, 6
  %28531 = load i64, i64* %PC.i61
  %28532 = add i64 %28531, 6
  store i64 %28532, i64* %PC.i61
  %28533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28534 = load i8, i8* %28533, align 1
  store i8 %28534, i8* %BRANCH_TAKEN, align 1
  %28535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %28536 = icmp ne i8 %28534, 0
  %28537 = select i1 %28536, i64 %28528, i64 %28530
  store i64 %28537, i64* %28535, align 8
  store %struct.Memory* %loadMem_476ea0, %struct.Memory** %MEMORY
  %loadBr_476ea0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476ea0 = icmp eq i8 %loadBr_476ea0, 1
  br i1 %cmpBr_476ea0, label %block_.L_476f23, label %block_476ea6

block_476ea6:                                     ; preds = %block_.L_476e9b
  %loadMem_476ea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28539 = getelementptr inbounds %struct.GPR, %struct.GPR* %28538, i32 0, i32 33
  %28540 = getelementptr inbounds %struct.Reg, %struct.Reg* %28539, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %28540 to i64*
  %28541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28542 = getelementptr inbounds %struct.GPR, %struct.GPR* %28541, i32 0, i32 1
  %28543 = getelementptr inbounds %struct.Reg, %struct.Reg* %28542, i32 0, i32 0
  %RAX.i59 = bitcast %union.anon* %28543 to i64*
  %28544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28545 = getelementptr inbounds %struct.GPR, %struct.GPR* %28544, i32 0, i32 15
  %28546 = getelementptr inbounds %struct.Reg, %struct.Reg* %28545, i32 0, i32 0
  %RBP.i60 = bitcast %union.anon* %28546 to i64*
  %28547 = load i64, i64* %RBP.i60
  %28548 = sub i64 %28547, 24
  %28549 = load i64, i64* %PC.i58
  %28550 = add i64 %28549, 4
  store i64 %28550, i64* %PC.i58
  %28551 = inttoptr i64 %28548 to i64*
  %28552 = load i64, i64* %28551
  store i64 %28552, i64* %RAX.i59, align 8
  store %struct.Memory* %loadMem_476ea6, %struct.Memory** %MEMORY
  %loadMem_476eaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %28553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28554 = getelementptr inbounds %struct.GPR, %struct.GPR* %28553, i32 0, i32 33
  %28555 = getelementptr inbounds %struct.Reg, %struct.Reg* %28554, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %28555 to i64*
  %28556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28557 = getelementptr inbounds %struct.GPR, %struct.GPR* %28556, i32 0, i32 1
  %28558 = getelementptr inbounds %struct.Reg, %struct.Reg* %28557, i32 0, i32 0
  %RAX.i57 = bitcast %union.anon* %28558 to i64*
  %28559 = load i64, i64* %RAX.i57
  %28560 = load i64, i64* %PC.i56
  %28561 = add i64 %28560, 6
  store i64 %28561, i64* %PC.i56
  %28562 = inttoptr i64 %28559 to i32*
  store i32 0, i32* %28562
  store %struct.Memory* %loadMem_476eaa, %struct.Memory** %MEMORY
  %loadMem_476eb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28564 = getelementptr inbounds %struct.GPR, %struct.GPR* %28563, i32 0, i32 33
  %28565 = getelementptr inbounds %struct.Reg, %struct.Reg* %28564, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %28565 to i64*
  %28566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28567 = getelementptr inbounds %struct.GPR, %struct.GPR* %28566, i32 0, i32 15
  %28568 = getelementptr inbounds %struct.Reg, %struct.Reg* %28567, i32 0, i32 0
  %RBP.i55 = bitcast %union.anon* %28568 to i64*
  %28569 = load i64, i64* %RBP.i55
  %28570 = sub i64 %28569, 1140
  %28571 = load i64, i64* %PC.i54
  %28572 = add i64 %28571, 10
  store i64 %28572, i64* %PC.i54
  %28573 = inttoptr i64 %28570 to i32*
  store i32 21, i32* %28573
  store %struct.Memory* %loadMem_476eb0, %struct.Memory** %MEMORY
  br label %block_.L_476eba

block_.L_476eba:                                  ; preds = %block_.L_476f0a, %block_476ea6
  %loadMem_476eba = load %struct.Memory*, %struct.Memory** %MEMORY
  %28574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28575 = getelementptr inbounds %struct.GPR, %struct.GPR* %28574, i32 0, i32 33
  %28576 = getelementptr inbounds %struct.Reg, %struct.Reg* %28575, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %28576 to i64*
  %28577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28578 = getelementptr inbounds %struct.GPR, %struct.GPR* %28577, i32 0, i32 15
  %28579 = getelementptr inbounds %struct.Reg, %struct.Reg* %28578, i32 0, i32 0
  %RBP.i53 = bitcast %union.anon* %28579 to i64*
  %28580 = load i64, i64* %RBP.i53
  %28581 = sub i64 %28580, 1140
  %28582 = load i64, i64* %PC.i52
  %28583 = add i64 %28582, 10
  store i64 %28583, i64* %PC.i52
  %28584 = inttoptr i64 %28581 to i32*
  %28585 = load i32, i32* %28584
  %28586 = sub i32 %28585, 400
  %28587 = icmp ult i32 %28585, 400
  %28588 = zext i1 %28587 to i8
  %28589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28588, i8* %28589, align 1
  %28590 = and i32 %28586, 255
  %28591 = call i32 @llvm.ctpop.i32(i32 %28590)
  %28592 = trunc i32 %28591 to i8
  %28593 = and i8 %28592, 1
  %28594 = xor i8 %28593, 1
  %28595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28594, i8* %28595, align 1
  %28596 = xor i32 %28585, 400
  %28597 = xor i32 %28596, %28586
  %28598 = lshr i32 %28597, 4
  %28599 = trunc i32 %28598 to i8
  %28600 = and i8 %28599, 1
  %28601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28600, i8* %28601, align 1
  %28602 = icmp eq i32 %28586, 0
  %28603 = zext i1 %28602 to i8
  %28604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28603, i8* %28604, align 1
  %28605 = lshr i32 %28586, 31
  %28606 = trunc i32 %28605 to i8
  %28607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28606, i8* %28607, align 1
  %28608 = lshr i32 %28585, 31
  %28609 = xor i32 %28605, %28608
  %28610 = add i32 %28609, %28608
  %28611 = icmp eq i32 %28610, 2
  %28612 = zext i1 %28611 to i8
  %28613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28612, i8* %28613, align 1
  store %struct.Memory* %loadMem_476eba, %struct.Memory** %MEMORY
  %loadMem_476ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28615 = getelementptr inbounds %struct.GPR, %struct.GPR* %28614, i32 0, i32 33
  %28616 = getelementptr inbounds %struct.Reg, %struct.Reg* %28615, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %28616 to i64*
  %28617 = load i64, i64* %PC.i51
  %28618 = add i64 %28617, 90
  %28619 = load i64, i64* %PC.i51
  %28620 = add i64 %28619, 6
  %28621 = load i64, i64* %PC.i51
  %28622 = add i64 %28621, 6
  store i64 %28622, i64* %PC.i51
  %28623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %28624 = load i8, i8* %28623, align 1
  %28625 = icmp ne i8 %28624, 0
  %28626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %28627 = load i8, i8* %28626, align 1
  %28628 = icmp ne i8 %28627, 0
  %28629 = xor i1 %28625, %28628
  %28630 = xor i1 %28629, true
  %28631 = zext i1 %28630 to i8
  store i8 %28631, i8* %BRANCH_TAKEN, align 1
  %28632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %28633 = select i1 %28629, i64 %28620, i64 %28618
  store i64 %28633, i64* %28632, align 8
  store %struct.Memory* %loadMem_476ec4, %struct.Memory** %MEMORY
  %loadBr_476ec4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476ec4 = icmp eq i8 %loadBr_476ec4, 1
  br i1 %cmpBr_476ec4, label %block_.L_476f1e, label %block_476eca

block_476eca:                                     ; preds = %block_.L_476eba
  %loadMem_476eca = load %struct.Memory*, %struct.Memory** %MEMORY
  %28634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28635 = getelementptr inbounds %struct.GPR, %struct.GPR* %28634, i32 0, i32 33
  %28636 = getelementptr inbounds %struct.Reg, %struct.Reg* %28635, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %28636 to i64*
  %28637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28638 = getelementptr inbounds %struct.GPR, %struct.GPR* %28637, i32 0, i32 1
  %28639 = getelementptr inbounds %struct.Reg, %struct.Reg* %28638, i32 0, i32 0
  %RAX.i49 = bitcast %union.anon* %28639 to i64*
  %28640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28641 = getelementptr inbounds %struct.GPR, %struct.GPR* %28640, i32 0, i32 15
  %28642 = getelementptr inbounds %struct.Reg, %struct.Reg* %28641, i32 0, i32 0
  %RBP.i50 = bitcast %union.anon* %28642 to i64*
  %28643 = load i64, i64* %RBP.i50
  %28644 = sub i64 %28643, 1140
  %28645 = load i64, i64* %PC.i48
  %28646 = add i64 %28645, 7
  store i64 %28646, i64* %PC.i48
  %28647 = inttoptr i64 %28644 to i32*
  %28648 = load i32, i32* %28647
  %28649 = sext i32 %28648 to i64
  store i64 %28649, i64* %RAX.i49, align 8
  store %struct.Memory* %loadMem_476eca, %struct.Memory** %MEMORY
  %loadMem_476ed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28651 = getelementptr inbounds %struct.GPR, %struct.GPR* %28650, i32 0, i32 33
  %28652 = getelementptr inbounds %struct.Reg, %struct.Reg* %28651, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %28652 to i64*
  %28653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28654 = getelementptr inbounds %struct.GPR, %struct.GPR* %28653, i32 0, i32 1
  %28655 = getelementptr inbounds %struct.Reg, %struct.Reg* %28654, i32 0, i32 0
  %RAX.i46 = bitcast %union.anon* %28655 to i64*
  %28656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28657 = getelementptr inbounds %struct.GPR, %struct.GPR* %28656, i32 0, i32 5
  %28658 = getelementptr inbounds %struct.Reg, %struct.Reg* %28657, i32 0, i32 0
  %RCX.i47 = bitcast %union.anon* %28658 to i64*
  %28659 = load i64, i64* %RAX.i46
  %28660 = add i64 %28659, 12099168
  %28661 = load i64, i64* %PC.i45
  %28662 = add i64 %28661, 8
  store i64 %28662, i64* %PC.i45
  %28663 = inttoptr i64 %28660 to i8*
  %28664 = load i8, i8* %28663
  %28665 = zext i8 %28664 to i64
  store i64 %28665, i64* %RCX.i47, align 8
  store %struct.Memory* %loadMem_476ed1, %struct.Memory** %MEMORY
  %loadMem_476ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28667 = getelementptr inbounds %struct.GPR, %struct.GPR* %28666, i32 0, i32 33
  %28668 = getelementptr inbounds %struct.Reg, %struct.Reg* %28667, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %28668 to i64*
  %28669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28670 = getelementptr inbounds %struct.GPR, %struct.GPR* %28669, i32 0, i32 5
  %28671 = getelementptr inbounds %struct.Reg, %struct.Reg* %28670, i32 0, i32 0
  %ECX.i44 = bitcast %union.anon* %28671 to i32*
  %28672 = load i32, i32* %ECX.i44
  %28673 = zext i32 %28672 to i64
  %28674 = load i64, i64* %PC.i43
  %28675 = add i64 %28674, 3
  store i64 %28675, i64* %PC.i43
  %28676 = sub i32 %28672, 3
  %28677 = icmp ult i32 %28672, 3
  %28678 = zext i1 %28677 to i8
  %28679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28678, i8* %28679, align 1
  %28680 = and i32 %28676, 255
  %28681 = call i32 @llvm.ctpop.i32(i32 %28680)
  %28682 = trunc i32 %28681 to i8
  %28683 = and i8 %28682, 1
  %28684 = xor i8 %28683, 1
  %28685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28684, i8* %28685, align 1
  %28686 = xor i64 3, %28673
  %28687 = trunc i64 %28686 to i32
  %28688 = xor i32 %28687, %28676
  %28689 = lshr i32 %28688, 4
  %28690 = trunc i32 %28689 to i8
  %28691 = and i8 %28690, 1
  %28692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28691, i8* %28692, align 1
  %28693 = icmp eq i32 %28676, 0
  %28694 = zext i1 %28693 to i8
  %28695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28694, i8* %28695, align 1
  %28696 = lshr i32 %28676, 31
  %28697 = trunc i32 %28696 to i8
  %28698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28697, i8* %28698, align 1
  %28699 = lshr i32 %28672, 31
  %28700 = xor i32 %28696, %28699
  %28701 = add i32 %28700, %28699
  %28702 = icmp eq i32 %28701, 2
  %28703 = zext i1 %28702 to i8
  %28704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28703, i8* %28704, align 1
  store %struct.Memory* %loadMem_476ed9, %struct.Memory** %MEMORY
  %loadMem_476edc = load %struct.Memory*, %struct.Memory** %MEMORY
  %28705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28706 = getelementptr inbounds %struct.GPR, %struct.GPR* %28705, i32 0, i32 33
  %28707 = getelementptr inbounds %struct.Reg, %struct.Reg* %28706, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %28707 to i64*
  %28708 = load i64, i64* %PC.i42
  %28709 = add i64 %28708, 41
  %28710 = load i64, i64* %PC.i42
  %28711 = add i64 %28710, 6
  %28712 = load i64, i64* %PC.i42
  %28713 = add i64 %28712, 6
  store i64 %28713, i64* %PC.i42
  %28714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28715 = load i8, i8* %28714, align 1
  store i8 %28715, i8* %BRANCH_TAKEN, align 1
  %28716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %28717 = icmp ne i8 %28715, 0
  %28718 = select i1 %28717, i64 %28709, i64 %28711
  store i64 %28718, i64* %28716, align 8
  store %struct.Memory* %loadMem_476edc, %struct.Memory** %MEMORY
  %loadBr_476edc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476edc = icmp eq i8 %loadBr_476edc, 1
  br i1 %cmpBr_476edc, label %block_.L_476f05, label %block_476ee2

block_476ee2:                                     ; preds = %block_476eca
  %loadMem_476ee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28720 = getelementptr inbounds %struct.GPR, %struct.GPR* %28719, i32 0, i32 33
  %28721 = getelementptr inbounds %struct.Reg, %struct.Reg* %28720, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %28721 to i64*
  %28722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28723 = getelementptr inbounds %struct.GPR, %struct.GPR* %28722, i32 0, i32 1
  %28724 = getelementptr inbounds %struct.Reg, %struct.Reg* %28723, i32 0, i32 0
  %RAX.i40 = bitcast %union.anon* %28724 to i64*
  %28725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28726 = getelementptr inbounds %struct.GPR, %struct.GPR* %28725, i32 0, i32 15
  %28727 = getelementptr inbounds %struct.Reg, %struct.Reg* %28726, i32 0, i32 0
  %RBP.i41 = bitcast %union.anon* %28727 to i64*
  %28728 = load i64, i64* %RBP.i41
  %28729 = sub i64 %28728, 1140
  %28730 = load i64, i64* %PC.i39
  %28731 = add i64 %28730, 7
  store i64 %28731, i64* %PC.i39
  %28732 = inttoptr i64 %28729 to i32*
  %28733 = load i32, i32* %28732
  %28734 = sext i32 %28733 to i64
  store i64 %28734, i64* %RAX.i40, align 8
  store %struct.Memory* %loadMem_476ee2, %struct.Memory** %MEMORY
  %loadMem_476ee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28736 = getelementptr inbounds %struct.GPR, %struct.GPR* %28735, i32 0, i32 33
  %28737 = getelementptr inbounds %struct.Reg, %struct.Reg* %28736, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %28737 to i64*
  %28738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28739 = getelementptr inbounds %struct.GPR, %struct.GPR* %28738, i32 0, i32 1
  %28740 = getelementptr inbounds %struct.Reg, %struct.Reg* %28739, i32 0, i32 0
  %RAX.i36 = bitcast %union.anon* %28740 to i64*
  %28741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28742 = getelementptr inbounds %struct.GPR, %struct.GPR* %28741, i32 0, i32 5
  %28743 = getelementptr inbounds %struct.Reg, %struct.Reg* %28742, i32 0, i32 0
  %RCX.i37 = bitcast %union.anon* %28743 to i64*
  %28744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28745 = getelementptr inbounds %struct.GPR, %struct.GPR* %28744, i32 0, i32 15
  %28746 = getelementptr inbounds %struct.Reg, %struct.Reg* %28745, i32 0, i32 0
  %RBP.i38 = bitcast %union.anon* %28746 to i64*
  %28747 = load i64, i64* %RBP.i38
  %28748 = load i64, i64* %RAX.i36
  %28749 = add i64 %28747, -1040
  %28750 = add i64 %28749, %28748
  %28751 = load i64, i64* %PC.i35
  %28752 = add i64 %28751, 8
  store i64 %28752, i64* %PC.i35
  %28753 = inttoptr i64 %28750 to i8*
  %28754 = load i8, i8* %28753
  %28755 = sext i8 %28754 to i64
  %28756 = and i64 %28755, 4294967295
  store i64 %28756, i64* %RCX.i37, align 8
  store %struct.Memory* %loadMem_476ee9, %struct.Memory** %MEMORY
  %loadMem_476ef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28758 = getelementptr inbounds %struct.GPR, %struct.GPR* %28757, i32 0, i32 33
  %28759 = getelementptr inbounds %struct.Reg, %struct.Reg* %28758, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %28759 to i64*
  %28760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28761 = getelementptr inbounds %struct.GPR, %struct.GPR* %28760, i32 0, i32 5
  %28762 = getelementptr inbounds %struct.Reg, %struct.Reg* %28761, i32 0, i32 0
  %ECX.i34 = bitcast %union.anon* %28762 to i32*
  %28763 = load i32, i32* %ECX.i34
  %28764 = zext i32 %28763 to i64
  %28765 = load i64, i64* %PC.i33
  %28766 = add i64 %28765, 3
  store i64 %28766, i64* %PC.i33
  %28767 = sub i32 %28763, 1
  %28768 = icmp ult i32 %28763, 1
  %28769 = zext i1 %28768 to i8
  %28770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28769, i8* %28770, align 1
  %28771 = and i32 %28767, 255
  %28772 = call i32 @llvm.ctpop.i32(i32 %28771)
  %28773 = trunc i32 %28772 to i8
  %28774 = and i8 %28773, 1
  %28775 = xor i8 %28774, 1
  %28776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28775, i8* %28776, align 1
  %28777 = xor i64 1, %28764
  %28778 = trunc i64 %28777 to i32
  %28779 = xor i32 %28778, %28767
  %28780 = lshr i32 %28779, 4
  %28781 = trunc i32 %28780 to i8
  %28782 = and i8 %28781, 1
  %28783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28782, i8* %28783, align 1
  %28784 = icmp eq i32 %28767, 0
  %28785 = zext i1 %28784 to i8
  %28786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28785, i8* %28786, align 1
  %28787 = lshr i32 %28767, 31
  %28788 = trunc i32 %28787 to i8
  %28789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28788, i8* %28789, align 1
  %28790 = lshr i32 %28763, 31
  %28791 = xor i32 %28787, %28790
  %28792 = add i32 %28791, %28790
  %28793 = icmp eq i32 %28792, 2
  %28794 = zext i1 %28793 to i8
  %28795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28794, i8* %28795, align 1
  store %struct.Memory* %loadMem_476ef1, %struct.Memory** %MEMORY
  %loadMem_476ef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28797 = getelementptr inbounds %struct.GPR, %struct.GPR* %28796, i32 0, i32 33
  %28798 = getelementptr inbounds %struct.Reg, %struct.Reg* %28797, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %28798 to i64*
  %28799 = load i64, i64* %PC.i32
  %28800 = add i64 %28799, 17
  %28801 = load i64, i64* %PC.i32
  %28802 = add i64 %28801, 6
  %28803 = load i64, i64* %PC.i32
  %28804 = add i64 %28803, 6
  store i64 %28804, i64* %PC.i32
  %28805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28806 = load i8, i8* %28805, align 1
  %28807 = icmp eq i8 %28806, 0
  %28808 = zext i1 %28807 to i8
  store i8 %28808, i8* %BRANCH_TAKEN, align 1
  %28809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %28810 = select i1 %28807, i64 %28800, i64 %28802
  store i64 %28810, i64* %28809, align 8
  store %struct.Memory* %loadMem_476ef4, %struct.Memory** %MEMORY
  %loadBr_476ef4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_476ef4 = icmp eq i8 %loadBr_476ef4, 1
  br i1 %cmpBr_476ef4, label %block_.L_476f05, label %block_476efa

block_476efa:                                     ; preds = %block_476ee2
  %loadMem_476efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %28811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28812 = getelementptr inbounds %struct.GPR, %struct.GPR* %28811, i32 0, i32 33
  %28813 = getelementptr inbounds %struct.Reg, %struct.Reg* %28812, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %28813 to i64*
  %28814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28815 = getelementptr inbounds %struct.GPR, %struct.GPR* %28814, i32 0, i32 1
  %28816 = getelementptr inbounds %struct.Reg, %struct.Reg* %28815, i32 0, i32 0
  %RAX.i30 = bitcast %union.anon* %28816 to i64*
  %28817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28818 = getelementptr inbounds %struct.GPR, %struct.GPR* %28817, i32 0, i32 15
  %28819 = getelementptr inbounds %struct.Reg, %struct.Reg* %28818, i32 0, i32 0
  %RBP.i31 = bitcast %union.anon* %28819 to i64*
  %28820 = load i64, i64* %RBP.i31
  %28821 = sub i64 %28820, 24
  %28822 = load i64, i64* %PC.i29
  %28823 = add i64 %28822, 4
  store i64 %28823, i64* %PC.i29
  %28824 = inttoptr i64 %28821 to i64*
  %28825 = load i64, i64* %28824
  store i64 %28825, i64* %RAX.i30, align 8
  store %struct.Memory* %loadMem_476efa, %struct.Memory** %MEMORY
  %loadMem_476efe = load %struct.Memory*, %struct.Memory** %MEMORY
  %28826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28827 = getelementptr inbounds %struct.GPR, %struct.GPR* %28826, i32 0, i32 33
  %28828 = getelementptr inbounds %struct.Reg, %struct.Reg* %28827, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %28828 to i64*
  %28829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28830 = getelementptr inbounds %struct.GPR, %struct.GPR* %28829, i32 0, i32 1
  %28831 = getelementptr inbounds %struct.Reg, %struct.Reg* %28830, i32 0, i32 0
  %RAX.i27 = bitcast %union.anon* %28831 to i64*
  %28832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28833 = getelementptr inbounds %struct.GPR, %struct.GPR* %28832, i32 0, i32 5
  %28834 = getelementptr inbounds %struct.Reg, %struct.Reg* %28833, i32 0, i32 0
  %RCX.i28 = bitcast %union.anon* %28834 to i64*
  %28835 = load i64, i64* %RAX.i27
  %28836 = load i64, i64* %PC.i26
  %28837 = add i64 %28836, 2
  store i64 %28837, i64* %PC.i26
  %28838 = inttoptr i64 %28835 to i32*
  %28839 = load i32, i32* %28838
  %28840 = zext i32 %28839 to i64
  store i64 %28840, i64* %RCX.i28, align 8
  store %struct.Memory* %loadMem_476efe, %struct.Memory** %MEMORY
  %loadMem_476f00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28842 = getelementptr inbounds %struct.GPR, %struct.GPR* %28841, i32 0, i32 33
  %28843 = getelementptr inbounds %struct.Reg, %struct.Reg* %28842, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %28843 to i64*
  %28844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28845 = getelementptr inbounds %struct.GPR, %struct.GPR* %28844, i32 0, i32 5
  %28846 = getelementptr inbounds %struct.Reg, %struct.Reg* %28845, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %28846 to i64*
  %28847 = load i64, i64* %RCX.i
  %28848 = load i64, i64* %PC.i25
  %28849 = add i64 %28848, 3
  store i64 %28849, i64* %PC.i25
  %28850 = trunc i64 %28847 to i32
  %28851 = add i32 1, %28850
  %28852 = zext i32 %28851 to i64
  store i64 %28852, i64* %RCX.i, align 8
  %28853 = icmp ult i32 %28851, %28850
  %28854 = icmp ult i32 %28851, 1
  %28855 = or i1 %28853, %28854
  %28856 = zext i1 %28855 to i8
  %28857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28856, i8* %28857, align 1
  %28858 = and i32 %28851, 255
  %28859 = call i32 @llvm.ctpop.i32(i32 %28858)
  %28860 = trunc i32 %28859 to i8
  %28861 = and i8 %28860, 1
  %28862 = xor i8 %28861, 1
  %28863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28862, i8* %28863, align 1
  %28864 = xor i64 1, %28847
  %28865 = trunc i64 %28864 to i32
  %28866 = xor i32 %28865, %28851
  %28867 = lshr i32 %28866, 4
  %28868 = trunc i32 %28867 to i8
  %28869 = and i8 %28868, 1
  %28870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28869, i8* %28870, align 1
  %28871 = icmp eq i32 %28851, 0
  %28872 = zext i1 %28871 to i8
  %28873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28872, i8* %28873, align 1
  %28874 = lshr i32 %28851, 31
  %28875 = trunc i32 %28874 to i8
  %28876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28875, i8* %28876, align 1
  %28877 = lshr i32 %28850, 31
  %28878 = xor i32 %28874, %28877
  %28879 = add i32 %28878, %28874
  %28880 = icmp eq i32 %28879, 2
  %28881 = zext i1 %28880 to i8
  %28882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28881, i8* %28882, align 1
  store %struct.Memory* %loadMem_476f00, %struct.Memory** %MEMORY
  %loadMem_476f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28884 = getelementptr inbounds %struct.GPR, %struct.GPR* %28883, i32 0, i32 33
  %28885 = getelementptr inbounds %struct.Reg, %struct.Reg* %28884, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %28885 to i64*
  %28886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28887 = getelementptr inbounds %struct.GPR, %struct.GPR* %28886, i32 0, i32 5
  %28888 = getelementptr inbounds %struct.Reg, %struct.Reg* %28887, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %28888 to i32*
  %28889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28890 = getelementptr inbounds %struct.GPR, %struct.GPR* %28889, i32 0, i32 1
  %28891 = getelementptr inbounds %struct.Reg, %struct.Reg* %28890, i32 0, i32 0
  %RAX.i24 = bitcast %union.anon* %28891 to i64*
  %28892 = load i64, i64* %RAX.i24
  %28893 = load i32, i32* %ECX.i
  %28894 = zext i32 %28893 to i64
  %28895 = load i64, i64* %PC.i23
  %28896 = add i64 %28895, 2
  store i64 %28896, i64* %PC.i23
  %28897 = inttoptr i64 %28892 to i32*
  store i32 %28893, i32* %28897
  store %struct.Memory* %loadMem_476f03, %struct.Memory** %MEMORY
  br label %block_.L_476f05

block_.L_476f05:                                  ; preds = %block_476efa, %block_476ee2, %block_476eca
  %loadMem_476f05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28899 = getelementptr inbounds %struct.GPR, %struct.GPR* %28898, i32 0, i32 33
  %28900 = getelementptr inbounds %struct.Reg, %struct.Reg* %28899, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %28900 to i64*
  %28901 = load i64, i64* %PC.i22
  %28902 = add i64 %28901, 5
  %28903 = load i64, i64* %PC.i22
  %28904 = add i64 %28903, 5
  store i64 %28904, i64* %PC.i22
  %28905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %28902, i64* %28905, align 8
  store %struct.Memory* %loadMem_476f05, %struct.Memory** %MEMORY
  br label %block_.L_476f0a

block_.L_476f0a:                                  ; preds = %block_.L_476f05
  %loadMem_476f0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %28906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28907 = getelementptr inbounds %struct.GPR, %struct.GPR* %28906, i32 0, i32 33
  %28908 = getelementptr inbounds %struct.Reg, %struct.Reg* %28907, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %28908 to i64*
  %28909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28910 = getelementptr inbounds %struct.GPR, %struct.GPR* %28909, i32 0, i32 1
  %28911 = getelementptr inbounds %struct.Reg, %struct.Reg* %28910, i32 0, i32 0
  %RAX.i20 = bitcast %union.anon* %28911 to i64*
  %28912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28913 = getelementptr inbounds %struct.GPR, %struct.GPR* %28912, i32 0, i32 15
  %28914 = getelementptr inbounds %struct.Reg, %struct.Reg* %28913, i32 0, i32 0
  %RBP.i21 = bitcast %union.anon* %28914 to i64*
  %28915 = load i64, i64* %RBP.i21
  %28916 = sub i64 %28915, 1140
  %28917 = load i64, i64* %PC.i19
  %28918 = add i64 %28917, 6
  store i64 %28918, i64* %PC.i19
  %28919 = inttoptr i64 %28916 to i32*
  %28920 = load i32, i32* %28919
  %28921 = zext i32 %28920 to i64
  store i64 %28921, i64* %RAX.i20, align 8
  store %struct.Memory* %loadMem_476f0a, %struct.Memory** %MEMORY
  %loadMem_476f10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28923 = getelementptr inbounds %struct.GPR, %struct.GPR* %28922, i32 0, i32 33
  %28924 = getelementptr inbounds %struct.Reg, %struct.Reg* %28923, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %28924 to i64*
  %28925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28926 = getelementptr inbounds %struct.GPR, %struct.GPR* %28925, i32 0, i32 1
  %28927 = getelementptr inbounds %struct.Reg, %struct.Reg* %28926, i32 0, i32 0
  %RAX.i18 = bitcast %union.anon* %28927 to i64*
  %28928 = load i64, i64* %RAX.i18
  %28929 = load i64, i64* %PC.i17
  %28930 = add i64 %28929, 3
  store i64 %28930, i64* %PC.i17
  %28931 = trunc i64 %28928 to i32
  %28932 = add i32 1, %28931
  %28933 = zext i32 %28932 to i64
  store i64 %28933, i64* %RAX.i18, align 8
  %28934 = icmp ult i32 %28932, %28931
  %28935 = icmp ult i32 %28932, 1
  %28936 = or i1 %28934, %28935
  %28937 = zext i1 %28936 to i8
  %28938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28937, i8* %28938, align 1
  %28939 = and i32 %28932, 255
  %28940 = call i32 @llvm.ctpop.i32(i32 %28939)
  %28941 = trunc i32 %28940 to i8
  %28942 = and i8 %28941, 1
  %28943 = xor i8 %28942, 1
  %28944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28943, i8* %28944, align 1
  %28945 = xor i64 1, %28928
  %28946 = trunc i64 %28945 to i32
  %28947 = xor i32 %28946, %28932
  %28948 = lshr i32 %28947, 4
  %28949 = trunc i32 %28948 to i8
  %28950 = and i8 %28949, 1
  %28951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28950, i8* %28951, align 1
  %28952 = icmp eq i32 %28932, 0
  %28953 = zext i1 %28952 to i8
  %28954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28953, i8* %28954, align 1
  %28955 = lshr i32 %28932, 31
  %28956 = trunc i32 %28955 to i8
  %28957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28956, i8* %28957, align 1
  %28958 = lshr i32 %28931, 31
  %28959 = xor i32 %28955, %28958
  %28960 = add i32 %28959, %28955
  %28961 = icmp eq i32 %28960, 2
  %28962 = zext i1 %28961 to i8
  %28963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28962, i8* %28963, align 1
  store %struct.Memory* %loadMem_476f10, %struct.Memory** %MEMORY
  %loadMem_476f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28965 = getelementptr inbounds %struct.GPR, %struct.GPR* %28964, i32 0, i32 33
  %28966 = getelementptr inbounds %struct.Reg, %struct.Reg* %28965, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %28966 to i64*
  %28967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28968 = getelementptr inbounds %struct.GPR, %struct.GPR* %28967, i32 0, i32 1
  %28969 = getelementptr inbounds %struct.Reg, %struct.Reg* %28968, i32 0, i32 0
  %EAX.i15 = bitcast %union.anon* %28969 to i32*
  %28970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28971 = getelementptr inbounds %struct.GPR, %struct.GPR* %28970, i32 0, i32 15
  %28972 = getelementptr inbounds %struct.Reg, %struct.Reg* %28971, i32 0, i32 0
  %RBP.i16 = bitcast %union.anon* %28972 to i64*
  %28973 = load i64, i64* %RBP.i16
  %28974 = sub i64 %28973, 1140
  %28975 = load i32, i32* %EAX.i15
  %28976 = zext i32 %28975 to i64
  %28977 = load i64, i64* %PC.i14
  %28978 = add i64 %28977, 6
  store i64 %28978, i64* %PC.i14
  %28979 = inttoptr i64 %28974 to i32*
  store i32 %28975, i32* %28979
  store %struct.Memory* %loadMem_476f13, %struct.Memory** %MEMORY
  %loadMem_476f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28981 = getelementptr inbounds %struct.GPR, %struct.GPR* %28980, i32 0, i32 33
  %28982 = getelementptr inbounds %struct.Reg, %struct.Reg* %28981, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %28982 to i64*
  %28983 = load i64, i64* %PC.i13
  %28984 = add i64 %28983, -95
  %28985 = load i64, i64* %PC.i13
  %28986 = add i64 %28985, 5
  store i64 %28986, i64* %PC.i13
  %28987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %28984, i64* %28987, align 8
  store %struct.Memory* %loadMem_476f19, %struct.Memory** %MEMORY
  br label %block_.L_476eba

block_.L_476f1e:                                  ; preds = %block_.L_476eba
  %loadMem_476f1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %28988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28989 = getelementptr inbounds %struct.GPR, %struct.GPR* %28988, i32 0, i32 33
  %28990 = getelementptr inbounds %struct.Reg, %struct.Reg* %28989, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %28990 to i64*
  %28991 = load i64, i64* %PC.i12
  %28992 = add i64 %28991, 5
  %28993 = load i64, i64* %PC.i12
  %28994 = add i64 %28993, 5
  store i64 %28994, i64* %PC.i12
  %28995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %28992, i64* %28995, align 8
  store %struct.Memory* %loadMem_476f1e, %struct.Memory** %MEMORY
  br label %block_.L_476f23

block_.L_476f23:                                  ; preds = %block_.L_476f1e, %block_.L_476e9b
  %loadMem_476f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %28996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28997 = getelementptr inbounds %struct.GPR, %struct.GPR* %28996, i32 0, i32 33
  %28998 = getelementptr inbounds %struct.Reg, %struct.Reg* %28997, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %28998 to i64*
  %28999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29000 = getelementptr inbounds %struct.GPR, %struct.GPR* %28999, i32 0, i32 1
  %29001 = getelementptr inbounds %struct.Reg, %struct.Reg* %29000, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %29001 to i64*
  %29002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29003 = getelementptr inbounds %struct.GPR, %struct.GPR* %29002, i32 0, i32 15
  %29004 = getelementptr inbounds %struct.Reg, %struct.Reg* %29003, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %29004 to i64*
  %29005 = load i64, i64* %RBP.i11
  %29006 = sub i64 %29005, 52
  %29007 = load i64, i64* %PC.i9
  %29008 = add i64 %29007, 3
  store i64 %29008, i64* %PC.i9
  %29009 = inttoptr i64 %29006 to i32*
  %29010 = load i32, i32* %29009
  %29011 = zext i32 %29010 to i64
  store i64 %29011, i64* %RAX.i10, align 8
  store %struct.Memory* %loadMem_476f23, %struct.Memory** %MEMORY
  %loadMem_476f26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29013 = getelementptr inbounds %struct.GPR, %struct.GPR* %29012, i32 0, i32 33
  %29014 = getelementptr inbounds %struct.Reg, %struct.Reg* %29013, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %29014 to i64*
  %29015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29016 = getelementptr inbounds %struct.GPR, %struct.GPR* %29015, i32 0, i32 1
  %29017 = getelementptr inbounds %struct.Reg, %struct.Reg* %29016, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %29017 to i32*
  %29018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29019 = getelementptr inbounds %struct.GPR, %struct.GPR* %29018, i32 0, i32 15
  %29020 = getelementptr inbounds %struct.Reg, %struct.Reg* %29019, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %29020 to i64*
  %29021 = load i64, i64* %RBP.i8
  %29022 = sub i64 %29021, 4
  %29023 = load i32, i32* %EAX.i
  %29024 = zext i32 %29023 to i64
  %29025 = load i64, i64* %PC.i7
  %29026 = add i64 %29025, 3
  store i64 %29026, i64* %PC.i7
  %29027 = inttoptr i64 %29022 to i32*
  store i32 %29023, i32* %29027
  store %struct.Memory* %loadMem_476f26, %struct.Memory** %MEMORY
  br label %block_.L_476f29

block_.L_476f29:                                  ; preds = %block_.L_476f23, %block_47592f
  %loadMem_476f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29029 = getelementptr inbounds %struct.GPR, %struct.GPR* %29028, i32 0, i32 33
  %29030 = getelementptr inbounds %struct.Reg, %struct.Reg* %29029, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %29030 to i64*
  %29031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29032 = getelementptr inbounds %struct.GPR, %struct.GPR* %29031, i32 0, i32 1
  %29033 = getelementptr inbounds %struct.Reg, %struct.Reg* %29032, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %29033 to i64*
  %29034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29035 = getelementptr inbounds %struct.GPR, %struct.GPR* %29034, i32 0, i32 15
  %29036 = getelementptr inbounds %struct.Reg, %struct.Reg* %29035, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %29036 to i64*
  %29037 = load i64, i64* %RBP.i6
  %29038 = sub i64 %29037, 4
  %29039 = load i64, i64* %PC.i5
  %29040 = add i64 %29039, 3
  store i64 %29040, i64* %PC.i5
  %29041 = inttoptr i64 %29038 to i32*
  %29042 = load i32, i32* %29041
  %29043 = zext i32 %29042 to i64
  store i64 %29043, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_476f29, %struct.Memory** %MEMORY
  %loadMem_476f2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %29044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29045 = getelementptr inbounds %struct.GPR, %struct.GPR* %29044, i32 0, i32 33
  %29046 = getelementptr inbounds %struct.Reg, %struct.Reg* %29045, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %29046 to i64*
  %29047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29048 = getelementptr inbounds %struct.GPR, %struct.GPR* %29047, i32 0, i32 13
  %29049 = getelementptr inbounds %struct.Reg, %struct.Reg* %29048, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %29049 to i64*
  %29050 = load i64, i64* %RSP.i
  %29051 = load i64, i64* %PC.i4
  %29052 = add i64 %29051, 7
  store i64 %29052, i64* %PC.i4
  %29053 = add i64 1232, %29050
  store i64 %29053, i64* %RSP.i, align 8
  %29054 = icmp ult i64 %29053, %29050
  %29055 = icmp ult i64 %29053, 1232
  %29056 = or i1 %29054, %29055
  %29057 = zext i1 %29056 to i8
  %29058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29057, i8* %29058, align 1
  %29059 = trunc i64 %29053 to i32
  %29060 = and i32 %29059, 255
  %29061 = call i32 @llvm.ctpop.i32(i32 %29060)
  %29062 = trunc i32 %29061 to i8
  %29063 = and i8 %29062, 1
  %29064 = xor i8 %29063, 1
  %29065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29064, i8* %29065, align 1
  %29066 = xor i64 1232, %29050
  %29067 = xor i64 %29066, %29053
  %29068 = lshr i64 %29067, 4
  %29069 = trunc i64 %29068 to i8
  %29070 = and i8 %29069, 1
  %29071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29070, i8* %29071, align 1
  %29072 = icmp eq i64 %29053, 0
  %29073 = zext i1 %29072 to i8
  %29074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29073, i8* %29074, align 1
  %29075 = lshr i64 %29053, 63
  %29076 = trunc i64 %29075 to i8
  %29077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29076, i8* %29077, align 1
  %29078 = lshr i64 %29050, 63
  %29079 = xor i64 %29075, %29078
  %29080 = add i64 %29079, %29075
  %29081 = icmp eq i64 %29080, 2
  %29082 = zext i1 %29081 to i8
  %29083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %29082, i8* %29083, align 1
  store %struct.Memory* %loadMem_476f2c, %struct.Memory** %MEMORY
  %loadMem_476f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29085 = getelementptr inbounds %struct.GPR, %struct.GPR* %29084, i32 0, i32 33
  %29086 = getelementptr inbounds %struct.Reg, %struct.Reg* %29085, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %29086 to i64*
  %29087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29088 = getelementptr inbounds %struct.GPR, %struct.GPR* %29087, i32 0, i32 15
  %29089 = getelementptr inbounds %struct.Reg, %struct.Reg* %29088, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %29089 to i64*
  %29090 = load i64, i64* %PC.i2
  %29091 = add i64 %29090, 1
  store i64 %29091, i64* %PC.i2
  %29092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %29093 = load i64, i64* %29092, align 8
  %29094 = add i64 %29093, 8
  %29095 = inttoptr i64 %29093 to i64*
  %29096 = load i64, i64* %29095
  store i64 %29096, i64* %RBP.i3, align 8
  store i64 %29094, i64* %29092, align 8
  store %struct.Memory* %loadMem_476f33, %struct.Memory** %MEMORY
  %loadMem_476f34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29098 = getelementptr inbounds %struct.GPR, %struct.GPR* %29097, i32 0, i32 33
  %29099 = getelementptr inbounds %struct.Reg, %struct.Reg* %29098, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %29099 to i64*
  %29100 = load i64, i64* %PC.i1
  %29101 = add i64 %29100, 1
  store i64 %29101, i64* %PC.i1
  %29102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %29104 = load i64, i64* %29103, align 8
  %29105 = inttoptr i64 %29104 to i64*
  %29106 = load i64, i64* %29105
  store i64 %29106, i64* %29102, align 8
  %29107 = add i64 %29104, 8
  store i64 %29107, i64* %29103, align 8
  store %struct.Memory* %loadMem_476f34, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_476f34
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x4d0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 1232
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 1232
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1232, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x190___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  store i64 400, i64* %9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x410__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1040
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x280__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  store i64 3, i64* %9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 212
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 216
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xe4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0xe4__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 228
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %13, %20
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %12, align 8
  %23 = icmp ult i32 %13, %20
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %21, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %20, %13
  %33 = xor i32 %32, %21
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %21, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %21, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %13, 31
  %45 = lshr i32 %20, 31
  %46 = xor i32 %45, %44
  %47 = xor i32 %41, %44
  %48 = add i32 %47, %46
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0xe8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r11___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r9___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r10__MINUS0x480__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1152
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r9__MINUS0x488__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1160
  %14 = load i64, i64* %R9
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.memset_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x480__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x488__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 400
  %16 = icmp ult i32 %14, 400
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 400
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4758fd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4758ea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb0eff0_type* @G__0xb0eff0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 380, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x30__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 48
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4758ea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.is_same_dragon(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x280__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.mark_string(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4758ef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47587c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb4bd20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xab0fe0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x4c___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 76, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x4__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x68___rax___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 104, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x30__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47593b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476f29(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0xab0fe0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0xab0fe0_type* @G_0xab0fe0 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x4c___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 76, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x2c__rdx____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RDX
  %15 = add i64 %14, 44
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_475a8e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x4__rdi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x68___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 104, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x4__rdx__rsi_4____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 4
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 5
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x68___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 104, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x4c___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 76, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rax____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x414__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1044
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x414__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1044
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 12099168
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 9
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xe4__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 228
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475a7b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_475a76(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475a63(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_475a63(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x414__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1044
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x410__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1040
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475a68(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4759f2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475a7b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475a80(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475942(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475ae6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475ab2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475ada(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x58192c___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x58192c_type* @G__0x58192c to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x7c___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 124, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x5819e3___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x5819e3_type* @G__0x5819e3 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967295, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abortgo(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1__MINUS0x410__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -1040
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 1, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0xdc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 220
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_475b8c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0xdc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 220
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, -1
  %16 = icmp ult i32 %14, -1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, -1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %37, 1
  %39 = xor i32 %34, %37
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475b19(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475b8c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_475b79(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x14__MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 20
  %20 = trunc i64 %19 to i32
  %21 = and i64 %19, 4294967295
  store i64 %21, i64* %RAX, align 8
  %22 = shl i64 %19, 32
  %23 = ashr exact i64 %22, 32
  %24 = icmp ne i64 %23, %19
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x15___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 21, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 21
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 21, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpb__0x0__MINUS0x410__rbp__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = add i64 %12, -1040
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  %19 = load i8, i8* %18
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = zext i8 %19 to i32
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = icmp eq i8 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i8 %19, 7
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i8 %19, 7
  %34 = xor i8 %31, %33
  %35 = add i8 %34, %33
  %36 = icmp eq i8 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475b66(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475b79(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475b6b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475b20(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475b7e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475af7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7ae438___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_475c25(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 224
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, -1
  %16 = icmp ult i32 %14, -1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, -1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %37, 1
  %39 = xor i32 %34, %37
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475bbf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475c25(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_475c12(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475bff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475c12(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475c04(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475bc6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475c17(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475ba3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 212
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 20, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x490__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1168
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x490__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_cmpl_MINUS0xe0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 224
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_475e12(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = getelementptr inbounds i8, i8* %12, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = xor i64 %21, %16
  %26 = xor i64 %24, %19
  %27 = trunc i64 %25 to i32
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast i8* %10 to i32*
  store i32 %27, i32* %30, align 1
  %31 = getelementptr inbounds i8, i8* %10, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %29, i32* %32, align 1
  %33 = trunc i64 %26 to i32
  %34 = getelementptr inbounds i8, i8* %10, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  %36 = lshr i64 %26, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x418__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1048
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x41c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1052
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x494__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x494__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x420__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1056
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp__rsi_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x424__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1060
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x420__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1056
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_475da8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_475d95(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x14__MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 20
  %20 = trunc i64 %19 to i32
  %21 = and i64 %19, 4294967295
  store i64 %21, i64* %RAX, align 8
  %22 = shl i64 %19, 32
  %23 = ashr exact i64 %22, 32
  %24 = icmp ne i64 %23, %19
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475d82(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x424__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1060
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssl__eax___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x i32>*
  %17 = load <2 x i32>, <2 x i32>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i32>*
  %20 = load <2 x i32>, <2 x i32>* %19, align 1
  %21 = sitofp i32 %12 to float
  %22 = bitcast i8* %11 to float*
  store float %21, float* %22, align 1
  %23 = extractelement <2 x i32> %17, i32 1
  %24 = getelementptr inbounds i8, i8* %11, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  %26 = extractelement <2 x i32> %20, i32 0
  %27 = bitcast i8* %18 to i32*
  store i32 %26, i32* %27, align 1
  %28 = extractelement <2 x i32> %20, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x420__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1056
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x i32>*
  %17 = load <2 x i32>, <2 x i32>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i32>*
  %20 = load <2 x i32>, <2 x i32>* %19, align 1
  %21 = sitofp i32 %12 to float
  %22 = bitcast i8* %11 to float*
  store float %21, float* %22, align 1
  %23 = extractelement <2 x i32> %17, i32 1
  %24 = getelementptr inbounds i8, i8* %11, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  %26 = extractelement <2 x i32> %20, i32 0
  %27 = bitcast i8* %18 to i32*
  store i32 %26, i32* %27, align 1
  %28 = extractelement <2 x i32> %20, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fdiv float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x428__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1064
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x418__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1048
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475d5d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x428__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1064
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x41c__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1052
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomiss__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = bitcast i8* %11 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = extractelement <2 x float> %18, i32 0
  %20 = fcmp uno float %16, %19
  br i1 %20, label %21, label %33

; <label>:21:                                     ; preds = %block_400488
  %22 = fadd float %16, %19
  %23 = bitcast float %22 to i32
  %24 = and i32 %23, 2143289344
  %25 = icmp eq i32 %24, 2139095040
  %26 = and i32 %23, 4194303
  %27 = icmp ne i32 %26, 0
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %39

; <label>:29:                                     ; preds = %21
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = fcmp ogt float %16, %19
  br i1 %34, label %39, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp olt float %16, %19
  br i1 %36, label %39, label %37

; <label>:37:                                     ; preds = %35
  %38 = fcmp oeq float %16, %19
  br i1 %38, label %39, label %46

; <label>:39:                                     ; preds = %37, %35, %33, %21
  %40 = phi i8 [ 0, %33 ], [ 0, %35 ], [ 1, %37 ], [ 1, %21 ]
  %41 = phi i8 [ 0, %33 ], [ 0, %35 ], [ 0, %37 ], [ 1, %21 ]
  %42 = phi i8 [ 0, %33 ], [ 1, %35 ], [ 0, %37 ], [ 1, %21 ]
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %41, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %42, i8* %45, align 1
  br label %46

; <label>:46:                                     ; preds = %39, %37
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %49, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %29, %46
  %50 = phi %struct.Memory* [ %32, %29 ], [ %2, %46 ]
  ret %struct.Memory* %50
}

define %struct.Memory* @routine_jbe_.L_475d7d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x418__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1048
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475d82(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475d87(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475ce6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475d9a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475cd0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x418__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1048
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475dc5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475ded(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xaf___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 175, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x5819f6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x5819f6_type* @G__0x5819f6 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x418__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1048
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xd4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475c2f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_475e72(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x14__MINUS0xdc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 20
  %20 = trunc i64 %19 to i32
  %21 = and i64 %19, 4294967295
  store i64 %21, i64* %RAX, align 8
  %22 = shl i64 %19, 32
  %23 = ashr exact i64 %22, 32
  %24 = icmp ne i64 %23, %19
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475e5f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475e72(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475e64(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475e1f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 216
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd0__rbp__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x498__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1176
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x498__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_476067(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x42c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1068
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x430__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1072
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x49c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x49c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x434__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1076
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd0__rbp__rsi_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x438__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1080
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x434__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1076
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_475ffa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_475fe7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475fd4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x438__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1080
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x434__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1076
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm0__MINUS0x43c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1084
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x42c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1068
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_475faf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x43c__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1084
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomiss_MINUS0x430__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1072
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %13 to float*
  %20 = load float, float* %19
  %21 = fcmp uno float %18, %20
  br i1 %21, label %22, label %34

; <label>:22:                                     ; preds = %block_400488
  %23 = fadd float %18, %20
  %24 = bitcast float %23 to i32
  %25 = and i32 %24, 2143289344
  %26 = icmp eq i32 %25, 2139095040
  %27 = and i32 %24, 4194303
  %28 = icmp ne i32 %27, 0
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %40

; <label>:30:                                     ; preds = %22
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = fcmp ogt float %18, %20
  br i1 %35, label %40, label %36

; <label>:36:                                     ; preds = %34
  %37 = fcmp olt float %18, %20
  br i1 %37, label %40, label %38

; <label>:38:                                     ; preds = %36
  %39 = fcmp oeq float %18, %20
  br i1 %39, label %40, label %47

; <label>:40:                                     ; preds = %38, %36, %34, %22
  %41 = phi i8 [ 0, %34 ], [ 0, %36 ], [ 1, %38 ], [ 1, %22 ]
  %42 = phi i8 [ 0, %34 ], [ 0, %36 ], [ 0, %38 ], [ 1, %22 ]
  %43 = phi i8 [ 0, %34 ], [ 1, %36 ], [ 0, %38 ], [ 1, %22 ]
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %42, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %43, i8* %46, align 1
  br label %47

; <label>:47:                                     ; preds = %40, %38
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISSI2VnI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_.exit: ; preds = %30, %47
  %51 = phi %struct.Memory* [ %33, %30 ], [ %2, %47 ]
  ret %struct.Memory* %51
}

define %struct.Memory* @routine_jbe_.L_475fcf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x42c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1068
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475fd4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475fd9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475f42(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475fec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475f26(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x42c__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1068
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476017(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47603f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xcf___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 207, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x42c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1068
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xd8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_475e7c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4a0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4a0__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd0__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4a4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4a4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4760d6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1__MINUS0x410__rbp__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = add i64 %12, -1040
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 1, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476086(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4a8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4a8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd0__rbp__rsi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4ac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1196
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4ac__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_jg_.L_47615f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x14__MINUS0xe0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 20
  %20 = trunc i64 %19 to i32
  %21 = and i64 %19, 4294967295
  store i64 %21, i64* %RAX, align 8
  %22 = shl i64 %19, 32
  %23 = ashr exact i64 %22, 32
  %24 = icmp ne i64 %23, %19
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %34, align 1
  %35 = lshr i32 %20, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476102(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xdc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_476469(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x440__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1088
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x444__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1092
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xd4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 212
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4762cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4b0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1200
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4b0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 36
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4762ba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6cea2__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x6cea2__rip__type* @G_0x6cea2__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1204
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4b4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x448__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1096
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssl__edx___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x i32>*
  %17 = load <2 x i32>, <2 x i32>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i32>*
  %20 = load <2 x i32>, <2 x i32>* %19, align 1
  %21 = sitofp i32 %12 to float
  %22 = bitcast i8* %11 to float*
  store float %21, float* %22, align 1
  %23 = extractelement <2 x i32> %17, i32 1
  %24 = getelementptr inbounds i8, i8* %11, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  %26 = extractelement <2 x i32> %20, i32 0
  %27 = bitcast i8* %18 to i32*
  store i32 %26, i32* %27, align 1
  %28 = extractelement <2 x i32> %20, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x44c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1100
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x80__rbp__rsi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x450__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1104
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x454__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1108
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x44c__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssl_MINUS0x24__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x i32>*
  %17 = load <2 x i32>, <2 x i32>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i32>*
  %20 = load <2 x i32>, <2 x i32>* %19, align 1
  %21 = inttoptr i64 %13 to i32*
  %22 = load i32, i32* %21
  %23 = sitofp i32 %22 to float
  %24 = bitcast i8* %11 to float*
  store float %23, float* %24, align 1
  %25 = extractelement <2 x i32> %17, i32 1
  %26 = getelementptr inbounds i8, i8* %11, i64 4
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  %28 = extractelement <2 x i32> %20, i32 0
  %29 = bitcast i8* %18 to i32*
  store i32 %28, i32* %29, align 1
  %30 = extractelement <2 x i32> %20, i32 1
  %31 = getelementptr inbounds i8, i8* %11, i64 12
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss_MINUS0x448__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1096
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fsub float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x454__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss_MINUS0x44c__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1100
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fsub float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulss__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fmul float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x450__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss_MINUS0x448__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1096
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fsub float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fdiv float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd__xmm1___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = fpext float %16 to double
  %18 = bitcast i8* %10 to double*
  store double %17, double* %18, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.ceil_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x41DFFFFFFFC00000
  %19 = fptosi double %16 to i32
  %20 = zext i32 %19 to i64
  %21 = select i1 %18, i64 2147483648, i64 %20
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x440__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1088
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4762cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4762bf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476195(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xd8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 216
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47641b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd0__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1208
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4b8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_476408(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6cd68__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x6cd68__rip__type* @G_0x6cd68__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4bc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4bc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x458__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1112
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x45c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1116
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x460__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1120
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x464__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 1124
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 1
  %18 = extractelement <2 x float> %17, i32 0
  %19 = inttoptr i64 %12 to float*
  store float %18, float* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_MINUS0x45c__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss_MINUS0x458__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1112
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fsub float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x464__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss_MINUS0x45c__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1116
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fsub float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_MINUS0x460__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = bitcast i8* %11 to float*
  store float %17, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 8
  %22 = bitcast i8* %21 to float*
  store float 0.000000e+00, float* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 12
  %24 = bitcast i8* %23 to float*
  store float 0.000000e+00, float* %24, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss_MINUS0x458__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1112
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to <2 x i32>*
  %21 = load <2 x i32>, <2 x i32>* %20, align 1
  %22 = inttoptr i64 %14 to float*
  %23 = load float, float* %22
  %24 = extractelement <2 x float> %18, i32 0
  %25 = fsub float %24, %23
  %26 = bitcast i8* %11 to float*
  store float %25, float* %26, align 1
  %27 = bitcast <2 x float> %18 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 1
  %29 = getelementptr inbounds i8, i8* %11, i64 4
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  %31 = extractelement <2 x i32> %21, i32 0
  %32 = getelementptr inbounds i8, i8* %11, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 1
  %34 = extractelement <2 x i32> %21, i32 1
  %35 = getelementptr inbounds i8, i8* %11, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.floor_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x444__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1092
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47641b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47640d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4762d4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x440__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1088
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x444__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 1092
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_476456(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476424(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47645b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47616b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47653d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47652a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = add i64 %15, -1040
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 8
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i8*
  %22 = load i8, i8* %21
  %23 = sext i8 %22 to i64
  %24 = and i64 %23, 4294967295
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1
  %14 = icmp ult i32 %9, 1
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47652a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_476525(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x7ae1b0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, 8053168
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = trunc i64 %12 to i32
  %19 = inttoptr i64 %15 to i32*
  %20 = load i32, i32* %19
  %21 = add i32 %20, %18
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %RAX, align 8
  %23 = icmp ult i32 %21, %18
  %24 = icmp ult i32 %21, %20
  %25 = or i1 %23, %24
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = and i32 %21, 255
  %29 = call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i32 %20, %18
  %35 = xor i32 %34, %21
  %36 = lshr i32 %35, 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i32 %21, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %21, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %18, 31
  %47 = lshr i32 %20, 31
  %48 = xor i32 %43, %46
  %49 = xor i32 %43, %47
  %50 = add i32 %48, %49
  %51 = icmp eq i32 %50, 2
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %52, i8* %53, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476512(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476512(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x2__MINUS0x410__rbp__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = add i64 %12, -1040
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 2, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476517(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4764ae(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47652a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47652f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476470(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_476642(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47662f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47662f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xe4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 228
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.are_neighbor_dragons(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpb__0x0__MINUS0x280__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -640
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  %19 = load i8, i8* %18
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = zext i8 %19 to i32
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = icmp eq i8 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i8 %19, 7
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i8 %19, 7
  %34 = xor i8 %31, %33
  %35 = add i8 %34, %33
  %36 = icmp eq i8 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0x468__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1128
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0x468__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1128
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 400
  %16 = icmp ult i32 %14, 400
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 400
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47662a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x468__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476611(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x468__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x2__MINUS0x280__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -640
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 2, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476616(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x468__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x468__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4765c3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47662f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476634(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476544(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_476711(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4766fe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpb__0x0__MINUS0x280__rbp__rcx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = add i64 %12, -640
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  %19 = load i8, i8* %18
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = zext i8 %19 to i32
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = icmp eq i8 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i8 %19, 7
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i8 %19, 7
  %34 = xor i8 %31, %33
  %35 = add i8 %34, %33
  %36 = icmp eq i8 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4766eb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_MINUS0x410__rbp__rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = add i64 %15, -1040
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 8
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i8*
  %22 = load i8, i8* %21
  %23 = sext i8 %22 to i64
  %24 = and i64 %23, 4294967295
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4766bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4766fe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 2
  %14 = icmp ult i32 %9, 2
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 2, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4766e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 2, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4766e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4766eb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4766f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476667(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476703(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476650(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476bc7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x4bd__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1213
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_476746(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setne__al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x4bd__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1213
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x4bd__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1213
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476759(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476bc2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476baf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_MINUS0x280__rbp__rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = add i64 %15, -640
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 8
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i8*
  %22 = load i8, i8* %21
  %23 = sext i8 %22 to i64
  %24 = and i64 %23, 4294967295
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47688b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47688b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xe4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 228
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1
  %14 = icmp ult i32 %9, 1
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xe8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 232
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476ba3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476993(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476993(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476a9b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476a9b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476baa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476baa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476baf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476bb4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476722(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476bc7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476be5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476de4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476de4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.start_draw_board(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_476ddf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_476dcc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476ca1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476c60(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x46c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476c9c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476c8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__MINUS0x46c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 3, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476c97(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__MINUS0x46c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 2, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476d0f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476cce(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4__MINUS0x46c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 4, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476d0a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476cfb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6__MINUS0x46c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 6, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476d05(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x46c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476d3c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x58__MINUS0x470__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 88, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476da7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476d69(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4f__MINUS0x470__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 79, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476da2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476d93(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2a__MINUS0x470__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 42, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476d9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2e__MINUS0x470__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 46, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x470__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x46c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.draw_color_char(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476c08(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476dd1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476bf1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.end_draw_board(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476e9b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476e9b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xa__0xb63050(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0xb63050_type* @G_0xb63050 to i32*)
  %9 = sub i32 %8, 10
  %10 = icmp ult i32 %8, 10
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 10
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_476e9b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb44530___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb44530_type* @G__0xb44530 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb4bd20___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb4bd20_type* @G__0xb4bd20 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x190___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 400, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xb63050___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xb63050_type* @G_0xb63050 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x194___rdi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 404, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R8, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x4___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 4, %9
  store i64 %12, i64* %R8, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 4
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 4, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r8___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x4c8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1224
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x4d0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1232
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x4c___rax___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 76, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x4d0__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rcx____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xb63050___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xb63050_type* @G_0xb63050 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x194___rax___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 404, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x4c8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb63050___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i32, i32* bitcast (%G_0xb63050_type* @G_0xb63050 to i32*)
  %13 = zext i32 %12 to i64
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 1, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 1
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 1, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__0xb63050(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R9D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0xb63050_type* @G_0xb63050 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = trunc i64 %14 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = icmp eq i64 %14, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %14, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %14, 63
  %31 = xor i64 %27, %30
  %32 = add i64 %31, %30
  %33 = icmp eq i64 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476f23(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 0, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0x474__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0x474__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 400
  %16 = icmp ult i32 %14, 400
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 400
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_476f1e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x474__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_476f05(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_476f05(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476f0a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x474__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x474__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476eba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_476f23(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x4d0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 1232, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1232
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1232, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
