; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x7ae438_type = type <{ [4 x i8] }>
%G_0xac5d28_type = type <{ [4 x i8] }>
%G_0xafdfb0_type = type <{ [4 x i8] }>
%G_0xb54ce4_type = type <{ [4 x i8] }>
%G_0xb8b854_type = type <{ [4 x i8] }>
%G__0x57eec5_type = type <{ [8 x i8] }>
%G__0x57f043_type = type <{ [8 x i8] }>
%G__0xac5d30_type = type <{ [8 x i8] }>
%G__0xb0eff0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x7ae438 = global %G_0x7ae438_type zeroinitializer
@G_0xac5d28 = global %G_0xac5d28_type zeroinitializer
@G_0xafdfb0 = global %G_0xafdfb0_type zeroinitializer
@G_0xb54ce4 = global %G_0xb54ce4_type zeroinitializer
@G_0xb8b854 = global %G_0xb8b854_type zeroinitializer
@G__0x57eec5 = global %G__0x57eec5_type zeroinitializer
@G__0x57f043 = global %G__0x57f043_type zeroinitializer
@G__0xac5d30 = global %G__0xac5d30_type zeroinitializer
@G__0xb0eff0 = global %G__0xb0eff0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_452090.abortgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_415df0.get_move_from_stack(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_415cb0.mark_string(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @store_persistent_reading_cache(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_44ea10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_44ea10, %struct.Memory** %MEMORY
  %loadMem_44ea11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i955 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i956 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i955
  %27 = load i64, i64* %PC.i954
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i954
  store i64 %26, i64* %RBP.i956, align 8
  store %struct.Memory* %loadMem_44ea11, %struct.Memory** %MEMORY
  %loadMem_44ea14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1094 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1094
  %36 = load i64, i64* %PC.i1093
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1093
  %38 = sub i64 %35, 496
  store i64 %38, i64* %RSP.i1094, align 8
  %39 = icmp ult i64 %35, 496
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 496, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_44ea14, %struct.Memory** %MEMORY
  %loadMem_44ea1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 11
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %72 to i32*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i1111 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i1111
  %77 = sub i64 %76, 4
  %78 = load i32, i32* %EDI.i
  %79 = zext i32 %78 to i64
  %80 = load i64, i64* %PC.i1110
  %81 = add i64 %80, 3
  store i64 %81, i64* %PC.i1110
  %82 = inttoptr i64 %77 to i32*
  store i32 %78, i32* %82
  store %struct.Memory* %loadMem_44ea1b, %struct.Memory** %MEMORY
  %loadMem_44ea1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 33
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %85 to i64*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 9
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %88 to i32*
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %90 = getelementptr inbounds %struct.GPR, %struct.GPR* %89, i32 0, i32 15
  %91 = getelementptr inbounds %struct.Reg, %struct.Reg* %90, i32 0, i32 0
  %RBP.i1168 = bitcast %union.anon* %91 to i64*
  %92 = load i64, i64* %RBP.i1168
  %93 = sub i64 %92, 8
  %94 = load i32, i32* %ESI.i
  %95 = zext i32 %94 to i64
  %96 = load i64, i64* %PC.i1167
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC.i1167
  %98 = inttoptr i64 %93 to i32*
  store i32 %94, i32* %98
  store %struct.Memory* %loadMem_44ea1e, %struct.Memory** %MEMORY
  %loadMem_44ea21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 7
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %EDX.i1165 = bitcast %union.anon* %104 to i32*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 15
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %RBP.i1166 = bitcast %union.anon* %107 to i64*
  %108 = load i64, i64* %RBP.i1166
  %109 = sub i64 %108, 12
  %110 = load i32, i32* %EDX.i1165
  %111 = zext i32 %110 to i64
  %112 = load i64, i64* %PC.i1164
  %113 = add i64 %112, 3
  store i64 %113, i64* %PC.i1164
  %114 = inttoptr i64 %109 to i32*
  store i32 %110, i32* %114
  store %struct.Memory* %loadMem_44ea21, %struct.Memory** %MEMORY
  %loadMem_44ea24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %116 = getelementptr inbounds %struct.GPR, %struct.GPR* %115, i32 0, i32 33
  %117 = getelementptr inbounds %struct.Reg, %struct.Reg* %116, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %117 to i64*
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %119 = getelementptr inbounds %struct.GPR, %struct.GPR* %118, i32 0, i32 5
  %120 = getelementptr inbounds %struct.Reg, %struct.Reg* %119, i32 0, i32 0
  %ECX.i1162 = bitcast %union.anon* %120 to i32*
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %122 = getelementptr inbounds %struct.GPR, %struct.GPR* %121, i32 0, i32 15
  %123 = getelementptr inbounds %struct.Reg, %struct.Reg* %122, i32 0, i32 0
  %RBP.i1163 = bitcast %union.anon* %123 to i64*
  %124 = load i64, i64* %RBP.i1163
  %125 = sub i64 %124, 16
  %126 = load i32, i32* %ECX.i1162
  %127 = zext i32 %126 to i64
  %128 = load i64, i64* %PC.i1161
  %129 = add i64 %128, 3
  store i64 %129, i64* %PC.i1161
  %130 = inttoptr i64 %125 to i32*
  store i32 %126, i32* %130
  store %struct.Memory* %loadMem_44ea24, %struct.Memory** %MEMORY
  %loadMem_44ea27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %132 = getelementptr inbounds %struct.GPR, %struct.GPR* %131, i32 0, i32 33
  %133 = getelementptr inbounds %struct.Reg, %struct.Reg* %132, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %133 to i64*
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 17
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %R8D.i1159 = bitcast %union.anon* %136 to i32*
  %137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %138 = getelementptr inbounds %struct.GPR, %struct.GPR* %137, i32 0, i32 15
  %139 = getelementptr inbounds %struct.Reg, %struct.Reg* %138, i32 0, i32 0
  %RBP.i1160 = bitcast %union.anon* %139 to i64*
  %140 = load i64, i64* %RBP.i1160
  %141 = sub i64 %140, 20
  %142 = load i32, i32* %R8D.i1159
  %143 = zext i32 %142 to i64
  %144 = load i64, i64* %PC.i1158
  %145 = add i64 %144, 4
  store i64 %145, i64* %PC.i1158
  %146 = inttoptr i64 %141 to i32*
  store i32 %142, i32* %146
  store %struct.Memory* %loadMem_44ea27, %struct.Memory** %MEMORY
  %loadMem_44ea2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 33
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %149 to i64*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 5
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %RCX.i1156 = bitcast %union.anon* %152 to i64*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 15
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %RBP.i1157 = bitcast %union.anon* %155 to i64*
  %156 = load i64, i64* %RBP.i1157
  %157 = sub i64 %156, 20
  %158 = load i64, i64* %PC.i1155
  %159 = add i64 %158, 3
  store i64 %159, i64* %PC.i1155
  %160 = inttoptr i64 %157 to i32*
  %161 = load i32, i32* %160
  %162 = zext i32 %161 to i64
  store i64 %162, i64* %RCX.i1156, align 8
  store %struct.Memory* %loadMem_44ea2b, %struct.Memory** %MEMORY
  %loadMem_44ea2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %164 = getelementptr inbounds %struct.GPR, %struct.GPR* %163, i32 0, i32 33
  %165 = getelementptr inbounds %struct.Reg, %struct.Reg* %164, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %165 to i64*
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %167 = getelementptr inbounds %struct.GPR, %struct.GPR* %166, i32 0, i32 5
  %168 = getelementptr inbounds %struct.Reg, %struct.Reg* %167, i32 0, i32 0
  %ECX.i1153 = bitcast %union.anon* %168 to i32*
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 15
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %RBP.i1154 = bitcast %union.anon* %171 to i64*
  %172 = load i64, i64* %RBP.i1154
  %173 = sub i64 %172, 444
  %174 = load i32, i32* %ECX.i1153
  %175 = zext i32 %174 to i64
  %176 = load i64, i64* %PC.i1152
  %177 = add i64 %176, 6
  store i64 %177, i64* %PC.i1152
  %178 = inttoptr i64 %173 to i32*
  store i32 %174, i32* %178
  store %struct.Memory* %loadMem_44ea2e, %struct.Memory** %MEMORY
  %loadMem_44ea34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %180 = getelementptr inbounds %struct.GPR, %struct.GPR* %179, i32 0, i32 33
  %181 = getelementptr inbounds %struct.Reg, %struct.Reg* %180, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %181 to i64*
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %183 = getelementptr inbounds %struct.GPR, %struct.GPR* %182, i32 0, i32 15
  %184 = getelementptr inbounds %struct.Reg, %struct.Reg* %183, i32 0, i32 0
  %RBP.i1151 = bitcast %union.anon* %184 to i64*
  %185 = load i64, i64* %RBP.i1151
  %186 = sub i64 %185, 12
  %187 = load i64, i64* %PC.i1150
  %188 = add i64 %187, 4
  store i64 %188, i64* %PC.i1150
  %189 = inttoptr i64 %186 to i32*
  %190 = load i32, i32* %189
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %191, align 1
  %192 = and i32 %190, 255
  %193 = call i32 @llvm.ctpop.i32(i32 %192)
  %194 = trunc i32 %193 to i8
  %195 = and i8 %194, 1
  %196 = xor i8 %195, 1
  %197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %196, i8* %197, align 1
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %198, align 1
  %199 = icmp eq i32 %190, 0
  %200 = zext i1 %199 to i8
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %200, i8* %201, align 1
  %202 = lshr i32 %190, 31
  %203 = trunc i32 %202 to i8
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %203, i8* %204, align 1
  %205 = lshr i32 %190, 31
  %206 = xor i32 %202, %205
  %207 = add i32 %206, %205
  %208 = icmp eq i32 %207, 2
  %209 = zext i1 %208 to i8
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %209, i8* %210, align 1
  store %struct.Memory* %loadMem_44ea34, %struct.Memory** %MEMORY
  %loadMem_44ea38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %212 = getelementptr inbounds %struct.GPR, %struct.GPR* %211, i32 0, i32 33
  %213 = getelementptr inbounds %struct.Reg, %struct.Reg* %212, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %213 to i64*
  %214 = load i64, i64* %PC.i1149
  %215 = add i64 %214, 37
  %216 = load i64, i64* %PC.i1149
  %217 = add i64 %216, 6
  %218 = load i64, i64* %PC.i1149
  %219 = add i64 %218, 6
  store i64 %219, i64* %PC.i1149
  %220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %221 = load i8, i8* %220, align 1
  store i8 %221, i8* %BRANCH_TAKEN, align 1
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %223 = icmp ne i8 %221, 0
  %224 = select i1 %223, i64 %215, i64 %217
  store i64 %224, i64* %222, align 8
  store %struct.Memory* %loadMem_44ea38, %struct.Memory** %MEMORY
  %loadBr_44ea38 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ea38 = icmp eq i8 %loadBr_44ea38, 1
  br i1 %cmpBr_44ea38, label %block_.L_44ea5d, label %block_44ea3e

block_44ea3e:                                     ; preds = %entry
  %loadMem_44ea3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 33
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 15
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %RBP.i1148 = bitcast %union.anon* %230 to i64*
  %231 = load i64, i64* %RBP.i1148
  %232 = sub i64 %231, 16
  %233 = load i64, i64* %PC.i1147
  %234 = add i64 %233, 4
  store i64 %234, i64* %PC.i1147
  %235 = inttoptr i64 %232 to i32*
  %236 = load i32, i32* %235
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %237, align 1
  %238 = and i32 %236, 255
  %239 = call i32 @llvm.ctpop.i32(i32 %238)
  %240 = trunc i32 %239 to i8
  %241 = and i8 %240, 1
  %242 = xor i8 %241, 1
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %242, i8* %243, align 1
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %244, align 1
  %245 = icmp eq i32 %236, 0
  %246 = zext i1 %245 to i8
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %246, i8* %247, align 1
  %248 = lshr i32 %236, 31
  %249 = trunc i32 %248 to i8
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %249, i8* %250, align 1
  %251 = lshr i32 %236, 31
  %252 = xor i32 %248, %251
  %253 = add i32 %252, %251
  %254 = icmp eq i32 %253, 2
  %255 = zext i1 %254 to i8
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %255, i8* %256, align 1
  store %struct.Memory* %loadMem_44ea3e, %struct.Memory** %MEMORY
  %loadMem_44ea42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %258 = getelementptr inbounds %struct.GPR, %struct.GPR* %257, i32 0, i32 33
  %259 = getelementptr inbounds %struct.Reg, %struct.Reg* %258, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %259 to i64*
  %260 = load i64, i64* %PC.i1146
  %261 = add i64 %260, 27
  %262 = load i64, i64* %PC.i1146
  %263 = add i64 %262, 6
  %264 = load i64, i64* %PC.i1146
  %265 = add i64 %264, 6
  store i64 %265, i64* %PC.i1146
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %267 = load i8, i8* %266, align 1
  store i8 %267, i8* %BRANCH_TAKEN, align 1
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %269 = icmp ne i8 %267, 0
  %270 = select i1 %269, i64 %261, i64 %263
  store i64 %270, i64* %268, align 8
  store %struct.Memory* %loadMem_44ea42, %struct.Memory** %MEMORY
  %loadBr_44ea42 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ea42 = icmp eq i8 %loadBr_44ea42, 1
  br i1 %cmpBr_44ea42, label %block_.L_44ea5d, label %block_44ea48

block_44ea48:                                     ; preds = %block_44ea3e
  %loadMem_44ea48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %272 = getelementptr inbounds %struct.GPR, %struct.GPR* %271, i32 0, i32 33
  %273 = getelementptr inbounds %struct.Reg, %struct.Reg* %272, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %273 to i64*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %275 = getelementptr inbounds %struct.GPR, %struct.GPR* %274, i32 0, i32 1
  %276 = getelementptr inbounds %struct.Reg, %struct.Reg* %275, i32 0, i32 0
  %RAX.i1144 = bitcast %union.anon* %276 to i64*
  %277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %278 = getelementptr inbounds %struct.GPR, %struct.GPR* %277, i32 0, i32 15
  %279 = getelementptr inbounds %struct.Reg, %struct.Reg* %278, i32 0, i32 0
  %RBP.i1145 = bitcast %union.anon* %279 to i64*
  %280 = load i64, i64* %RBP.i1145
  %281 = sub i64 %280, 16
  %282 = load i64, i64* %PC.i1143
  %283 = add i64 %282, 4
  store i64 %283, i64* %PC.i1143
  %284 = inttoptr i64 %281 to i32*
  %285 = load i32, i32* %284
  %286 = sext i32 %285 to i64
  store i64 %286, i64* %RAX.i1144, align 8
  store %struct.Memory* %loadMem_44ea48, %struct.Memory** %MEMORY
  %loadMem_44ea4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %288 = getelementptr inbounds %struct.GPR, %struct.GPR* %287, i32 0, i32 33
  %289 = getelementptr inbounds %struct.Reg, %struct.Reg* %288, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %289 to i64*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %291 = getelementptr inbounds %struct.GPR, %struct.GPR* %290, i32 0, i32 1
  %292 = getelementptr inbounds %struct.Reg, %struct.Reg* %291, i32 0, i32 0
  %RAX.i1141 = bitcast %union.anon* %292 to i64*
  %293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %294 = getelementptr inbounds %struct.GPR, %struct.GPR* %293, i32 0, i32 5
  %295 = getelementptr inbounds %struct.Reg, %struct.Reg* %294, i32 0, i32 0
  %RCX.i1142 = bitcast %union.anon* %295 to i64*
  %296 = load i64, i64* %RAX.i1141
  %297 = add i64 %296, 12099168
  %298 = load i64, i64* %PC.i1140
  %299 = add i64 %298, 8
  store i64 %299, i64* %PC.i1140
  %300 = inttoptr i64 %297 to i8*
  %301 = load i8, i8* %300
  %302 = zext i8 %301 to i64
  store i64 %302, i64* %RCX.i1142, align 8
  store %struct.Memory* %loadMem_44ea4c, %struct.Memory** %MEMORY
  %loadMem_44ea54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %304 = getelementptr inbounds %struct.GPR, %struct.GPR* %303, i32 0, i32 33
  %305 = getelementptr inbounds %struct.Reg, %struct.Reg* %304, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %305 to i64*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %307 = getelementptr inbounds %struct.GPR, %struct.GPR* %306, i32 0, i32 5
  %308 = getelementptr inbounds %struct.Reg, %struct.Reg* %307, i32 0, i32 0
  %ECX.i1139 = bitcast %union.anon* %308 to i32*
  %309 = load i32, i32* %ECX.i1139
  %310 = zext i32 %309 to i64
  %311 = load i64, i64* %PC.i1138
  %312 = add i64 %311, 3
  store i64 %312, i64* %PC.i1138
  %313 = sub i32 %309, 3
  %314 = icmp ult i32 %309, 3
  %315 = zext i1 %314 to i8
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %315, i8* %316, align 1
  %317 = and i32 %313, 255
  %318 = call i32 @llvm.ctpop.i32(i32 %317)
  %319 = trunc i32 %318 to i8
  %320 = and i8 %319, 1
  %321 = xor i8 %320, 1
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %321, i8* %322, align 1
  %323 = xor i64 3, %310
  %324 = trunc i64 %323 to i32
  %325 = xor i32 %324, %313
  %326 = lshr i32 %325, 4
  %327 = trunc i32 %326 to i8
  %328 = and i8 %327, 1
  %329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %328, i8* %329, align 1
  %330 = icmp eq i32 %313, 0
  %331 = zext i1 %330 to i8
  %332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %331, i8* %332, align 1
  %333 = lshr i32 %313, 31
  %334 = trunc i32 %333 to i8
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %334, i8* %335, align 1
  %336 = lshr i32 %309, 31
  %337 = xor i32 %333, %336
  %338 = add i32 %337, %336
  %339 = icmp eq i32 %338, 2
  %340 = zext i1 %339 to i8
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %340, i8* %341, align 1
  store %struct.Memory* %loadMem_44ea54, %struct.Memory** %MEMORY
  %loadMem_44ea57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %343 = getelementptr inbounds %struct.GPR, %struct.GPR* %342, i32 0, i32 33
  %344 = getelementptr inbounds %struct.Reg, %struct.Reg* %343, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %344 to i64*
  %345 = load i64, i64* %PC.i1137
  %346 = add i64 %345, 11
  %347 = load i64, i64* %PC.i1137
  %348 = add i64 %347, 6
  %349 = load i64, i64* %PC.i1137
  %350 = add i64 %349, 6
  store i64 %350, i64* %PC.i1137
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %352 = load i8, i8* %351, align 1
  store i8 %352, i8* %BRANCH_TAKEN, align 1
  %353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %354 = icmp ne i8 %352, 0
  %355 = select i1 %354, i64 %346, i64 %348
  store i64 %355, i64* %353, align 8
  store %struct.Memory* %loadMem_44ea57, %struct.Memory** %MEMORY
  %loadBr_44ea57 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ea57 = icmp eq i8 %loadBr_44ea57, 1
  br i1 %cmpBr_44ea57, label %block_.L_44ea62, label %block_.L_44ea5d

block_.L_44ea5d:                                  ; preds = %block_44ea48, %block_44ea3e, %entry
  %loadMem_44ea5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %357 = getelementptr inbounds %struct.GPR, %struct.GPR* %356, i32 0, i32 33
  %358 = getelementptr inbounds %struct.Reg, %struct.Reg* %357, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %358 to i64*
  %359 = load i64, i64* %PC.i1136
  %360 = add i64 %359, 118
  %361 = load i64, i64* %PC.i1136
  %362 = add i64 %361, 5
  store i64 %362, i64* %PC.i1136
  %363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %360, i64* %363, align 8
  store %struct.Memory* %loadMem_44ea5d, %struct.Memory** %MEMORY
  br label %block_.L_44ead3

block_.L_44ea62:                                  ; preds = %block_44ea48
  %loadMem_44ea62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %365 = getelementptr inbounds %struct.GPR, %struct.GPR* %364, i32 0, i32 33
  %366 = getelementptr inbounds %struct.Reg, %struct.Reg* %365, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %366 to i64*
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %368 = getelementptr inbounds %struct.GPR, %struct.GPR* %367, i32 0, i32 11
  %369 = getelementptr inbounds %struct.Reg, %struct.Reg* %368, i32 0, i32 0
  %RDI.i1135 = bitcast %union.anon* %369 to i64*
  %370 = load i64, i64* %PC.i1134
  %371 = add i64 %370, 10
  store i64 %371, i64* %PC.i1134
  store i64 ptrtoint (%G__0x57eec5_type* @G__0x57eec5 to i64), i64* %RDI.i1135, align 8
  store %struct.Memory* %loadMem_44ea62, %struct.Memory** %MEMORY
  %loadMem_44ea6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %373 = getelementptr inbounds %struct.GPR, %struct.GPR* %372, i32 0, i32 33
  %374 = getelementptr inbounds %struct.Reg, %struct.Reg* %373, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %374 to i64*
  %375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %376 = getelementptr inbounds %struct.GPR, %struct.GPR* %375, i32 0, i32 9
  %377 = getelementptr inbounds %struct.Reg, %struct.Reg* %376, i32 0, i32 0
  %RSI.i1133 = bitcast %union.anon* %377 to i64*
  %378 = load i64, i64* %PC.i1132
  %379 = add i64 %378, 5
  store i64 %379, i64* %PC.i1132
  store i64 369, i64* %RSI.i1133, align 8
  store %struct.Memory* %loadMem_44ea6c, %struct.Memory** %MEMORY
  %loadMem_44ea71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %381 = getelementptr inbounds %struct.GPR, %struct.GPR* %380, i32 0, i32 33
  %382 = getelementptr inbounds %struct.Reg, %struct.Reg* %381, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %382 to i64*
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %384 = getelementptr inbounds %struct.GPR, %struct.GPR* %383, i32 0, i32 7
  %385 = getelementptr inbounds %struct.Reg, %struct.Reg* %384, i32 0, i32 0
  %RDX.i1131 = bitcast %union.anon* %385 to i64*
  %386 = load i64, i64* %PC.i1130
  %387 = add i64 %386, 10
  store i64 %387, i64* %PC.i1130
  store i64 ptrtoint (%G__0x57f043_type* @G__0x57f043 to i64), i64* %RDX.i1131, align 8
  store %struct.Memory* %loadMem_44ea71, %struct.Memory** %MEMORY
  %loadMem_44ea7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %389 = getelementptr inbounds %struct.GPR, %struct.GPR* %388, i32 0, i32 33
  %390 = getelementptr inbounds %struct.Reg, %struct.Reg* %389, i32 0, i32 0
  %PC.i1128 = bitcast %union.anon* %390 to i64*
  %391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %392 = getelementptr inbounds %struct.GPR, %struct.GPR* %391, i32 0, i32 1
  %393 = getelementptr inbounds %struct.Reg, %struct.Reg* %392, i32 0, i32 0
  %RAX.i1129 = bitcast %union.anon* %393 to i64*
  %394 = load i64, i64* %PC.i1128
  %395 = add i64 %394, 5
  store i64 %395, i64* %PC.i1128
  store i64 20, i64* %RAX.i1129, align 8
  store %struct.Memory* %loadMem_44ea7b, %struct.Memory** %MEMORY
  %loadMem_44ea80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %397 = getelementptr inbounds %struct.GPR, %struct.GPR* %396, i32 0, i32 33
  %398 = getelementptr inbounds %struct.Reg, %struct.Reg* %397, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %398 to i64*
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %400 = getelementptr inbounds %struct.GPR, %struct.GPR* %399, i32 0, i32 5
  %401 = getelementptr inbounds %struct.Reg, %struct.Reg* %400, i32 0, i32 0
  %RCX.i1126 = bitcast %union.anon* %401 to i64*
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 15
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %RBP.i1127 = bitcast %union.anon* %404 to i64*
  %405 = load i64, i64* %RBP.i1127
  %406 = sub i64 %405, 16
  %407 = load i64, i64* %PC.i1125
  %408 = add i64 %407, 3
  store i64 %408, i64* %PC.i1125
  %409 = inttoptr i64 %406 to i32*
  %410 = load i32, i32* %409
  %411 = zext i32 %410 to i64
  store i64 %411, i64* %RCX.i1126, align 8
  store %struct.Memory* %loadMem_44ea80, %struct.Memory** %MEMORY
  %loadMem_44ea83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %413 = getelementptr inbounds %struct.GPR, %struct.GPR* %412, i32 0, i32 33
  %414 = getelementptr inbounds %struct.Reg, %struct.Reg* %413, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %414 to i64*
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %416 = getelementptr inbounds %struct.GPR, %struct.GPR* %415, i32 0, i32 1
  %417 = getelementptr inbounds %struct.Reg, %struct.Reg* %416, i32 0, i32 0
  %EAX.i1123 = bitcast %union.anon* %417 to i32*
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %419 = getelementptr inbounds %struct.GPR, %struct.GPR* %418, i32 0, i32 15
  %420 = getelementptr inbounds %struct.Reg, %struct.Reg* %419, i32 0, i32 0
  %RBP.i1124 = bitcast %union.anon* %420 to i64*
  %421 = load i64, i64* %RBP.i1124
  %422 = sub i64 %421, 468
  %423 = load i32, i32* %EAX.i1123
  %424 = zext i32 %423 to i64
  %425 = load i64, i64* %PC.i1122
  %426 = add i64 %425, 6
  store i64 %426, i64* %PC.i1122
  %427 = inttoptr i64 %422 to i32*
  store i32 %423, i32* %427
  store %struct.Memory* %loadMem_44ea83, %struct.Memory** %MEMORY
  %loadMem_44ea89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %429 = getelementptr inbounds %struct.GPR, %struct.GPR* %428, i32 0, i32 33
  %430 = getelementptr inbounds %struct.Reg, %struct.Reg* %429, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %430 to i64*
  %431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %432 = getelementptr inbounds %struct.GPR, %struct.GPR* %431, i32 0, i32 5
  %433 = getelementptr inbounds %struct.Reg, %struct.Reg* %432, i32 0, i32 0
  %ECX.i1120 = bitcast %union.anon* %433 to i32*
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %435 = getelementptr inbounds %struct.GPR, %struct.GPR* %434, i32 0, i32 1
  %436 = getelementptr inbounds %struct.Reg, %struct.Reg* %435, i32 0, i32 0
  %RAX.i1121 = bitcast %union.anon* %436 to i64*
  %437 = load i32, i32* %ECX.i1120
  %438 = zext i32 %437 to i64
  %439 = load i64, i64* %PC.i1119
  %440 = add i64 %439, 2
  store i64 %440, i64* %PC.i1119
  %441 = and i64 %438, 4294967295
  store i64 %441, i64* %RAX.i1121, align 8
  store %struct.Memory* %loadMem_44ea89, %struct.Memory** %MEMORY
  %loadMem_44ea8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %443 = getelementptr inbounds %struct.GPR, %struct.GPR* %442, i32 0, i32 33
  %444 = getelementptr inbounds %struct.Reg, %struct.Reg* %443, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %444 to i64*
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %446 = getelementptr inbounds %struct.GPR, %struct.GPR* %445, i32 0, i32 7
  %447 = getelementptr inbounds %struct.Reg, %struct.Reg* %446, i32 0, i32 0
  %RDX.i1117 = bitcast %union.anon* %447 to i64*
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %449 = getelementptr inbounds %struct.GPR, %struct.GPR* %448, i32 0, i32 15
  %450 = getelementptr inbounds %struct.Reg, %struct.Reg* %449, i32 0, i32 0
  %RBP.i1118 = bitcast %union.anon* %450 to i64*
  %451 = load i64, i64* %RBP.i1118
  %452 = sub i64 %451, 480
  %453 = load i64, i64* %RDX.i1117
  %454 = load i64, i64* %PC.i1116
  %455 = add i64 %454, 7
  store i64 %455, i64* %PC.i1116
  %456 = inttoptr i64 %452 to i64*
  store i64 %453, i64* %456
  store %struct.Memory* %loadMem_44ea8b, %struct.Memory** %MEMORY
  %loadMem_44ea92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %458 = getelementptr inbounds %struct.GPR, %struct.GPR* %457, i32 0, i32 33
  %459 = getelementptr inbounds %struct.Reg, %struct.Reg* %458, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %459 to i64*
  %460 = load i64, i64* %PC.i1115
  %461 = add i64 %460, 1
  store i64 %461, i64* %PC.i1115
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %464 = bitcast %union.anon* %463 to i32*
  %465 = load i32, i32* %464, align 8
  %466 = sext i32 %465 to i64
  %467 = lshr i64 %466, 32
  store i64 %467, i64* %462, align 8
  store %struct.Memory* %loadMem_44ea92, %struct.Memory** %MEMORY
  %loadMem_44ea93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %469 = getelementptr inbounds %struct.GPR, %struct.GPR* %468, i32 0, i32 33
  %470 = getelementptr inbounds %struct.Reg, %struct.Reg* %469, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %470 to i64*
  %471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %472 = getelementptr inbounds %struct.GPR, %struct.GPR* %471, i32 0, i32 5
  %473 = getelementptr inbounds %struct.Reg, %struct.Reg* %472, i32 0, i32 0
  %RCX.i1113 = bitcast %union.anon* %473 to i64*
  %474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %475 = getelementptr inbounds %struct.GPR, %struct.GPR* %474, i32 0, i32 15
  %476 = getelementptr inbounds %struct.Reg, %struct.Reg* %475, i32 0, i32 0
  %RBP.i1114 = bitcast %union.anon* %476 to i64*
  %477 = load i64, i64* %RBP.i1114
  %478 = sub i64 %477, 468
  %479 = load i64, i64* %PC.i1112
  %480 = add i64 %479, 6
  store i64 %480, i64* %PC.i1112
  %481 = inttoptr i64 %478 to i32*
  %482 = load i32, i32* %481
  %483 = zext i32 %482 to i64
  store i64 %483, i64* %RCX.i1113, align 8
  store %struct.Memory* %loadMem_44ea93, %struct.Memory** %MEMORY
  %loadMem_44ea99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %485 = getelementptr inbounds %struct.GPR, %struct.GPR* %484, i32 0, i32 33
  %486 = getelementptr inbounds %struct.Reg, %struct.Reg* %485, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %486 to i64*
  %487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %488 = getelementptr inbounds %struct.GPR, %struct.GPR* %487, i32 0, i32 5
  %489 = getelementptr inbounds %struct.Reg, %struct.Reg* %488, i32 0, i32 0
  %ECX.i1108 = bitcast %union.anon* %489 to i32*
  %490 = load i32, i32* %ECX.i1108
  %491 = zext i32 %490 to i64
  %492 = load i64, i64* %PC.i1107
  %493 = add i64 %492, 2
  store i64 %493, i64* %PC.i1107
  %494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %495 = bitcast %union.anon* %494 to i32*
  %496 = load i32, i32* %495, align 8
  %497 = zext i32 %496 to i64
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %499 = bitcast %union.anon* %498 to i32*
  %500 = load i32, i32* %499, align 8
  %501 = zext i32 %500 to i64
  %502 = shl i64 %491, 32
  %503 = ashr exact i64 %502, 32
  %504 = shl i64 %501, 32
  %505 = or i64 %504, %497
  %506 = sdiv i64 %505, %503
  %507 = shl i64 %506, 32
  %508 = ashr exact i64 %507, 32
  %509 = icmp eq i64 %506, %508
  br i1 %509, label %514, label %510

; <label>:510:                                    ; preds = %block_.L_44ea62
  %511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %512 = load i64, i64* %511, align 8
  %513 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %512, %struct.Memory* %loadMem_44ea99)
  br label %routine_idivl__ecx.exit1109

; <label>:514:                                    ; preds = %block_.L_44ea62
  %515 = srem i64 %505, %503
  %516 = getelementptr inbounds %union.anon, %union.anon* %494, i64 0, i32 0
  %517 = and i64 %506, 4294967295
  store i64 %517, i64* %516, align 8
  %518 = getelementptr inbounds %union.anon, %union.anon* %498, i64 0, i32 0
  %519 = and i64 %515, 4294967295
  store i64 %519, i64* %518, align 8
  %520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %520, align 1
  %521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %521, align 1
  %522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %522, align 1
  %523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %523, align 1
  %524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %524, align 1
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %525, align 1
  br label %routine_idivl__ecx.exit1109

routine_idivl__ecx.exit1109:                      ; preds = %510, %514
  %526 = phi %struct.Memory* [ %513, %510 ], [ %loadMem_44ea99, %514 ]
  store %struct.Memory* %526, %struct.Memory** %MEMORY
  %loadMem_44ea9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %528 = getelementptr inbounds %struct.GPR, %struct.GPR* %527, i32 0, i32 33
  %529 = getelementptr inbounds %struct.Reg, %struct.Reg* %528, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %529 to i64*
  %530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %531 = getelementptr inbounds %struct.GPR, %struct.GPR* %530, i32 0, i32 1
  %532 = getelementptr inbounds %struct.Reg, %struct.Reg* %531, i32 0, i32 0
  %RAX.i1106 = bitcast %union.anon* %532 to i64*
  %533 = load i64, i64* %RAX.i1106
  %534 = load i64, i64* %PC.i1105
  %535 = add i64 %534, 3
  store i64 %535, i64* %PC.i1105
  %536 = trunc i64 %533 to i32
  %537 = sub i32 %536, 1
  %538 = zext i32 %537 to i64
  store i64 %538, i64* %RAX.i1106, align 8
  %539 = icmp ult i32 %536, 1
  %540 = zext i1 %539 to i8
  %541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %540, i8* %541, align 1
  %542 = and i32 %537, 255
  %543 = call i32 @llvm.ctpop.i32(i32 %542)
  %544 = trunc i32 %543 to i8
  %545 = and i8 %544, 1
  %546 = xor i8 %545, 1
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %546, i8* %547, align 1
  %548 = xor i64 1, %533
  %549 = trunc i64 %548 to i32
  %550 = xor i32 %549, %537
  %551 = lshr i32 %550, 4
  %552 = trunc i32 %551 to i8
  %553 = and i8 %552, 1
  %554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %553, i8* %554, align 1
  %555 = icmp eq i32 %537, 0
  %556 = zext i1 %555 to i8
  %557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %556, i8* %557, align 1
  %558 = lshr i32 %537, 31
  %559 = trunc i32 %558 to i8
  %560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %559, i8* %560, align 1
  %561 = lshr i32 %536, 31
  %562 = xor i32 %558, %561
  %563 = add i32 %562, %561
  %564 = icmp eq i32 %563, 2
  %565 = zext i1 %564 to i8
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %565, i8* %566, align 1
  store %struct.Memory* %loadMem_44ea9b, %struct.Memory** %MEMORY
  %loadMem_44ea9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %568 = getelementptr inbounds %struct.GPR, %struct.GPR* %567, i32 0, i32 33
  %569 = getelementptr inbounds %struct.Reg, %struct.Reg* %568, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %569 to i64*
  %570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %571 = getelementptr inbounds %struct.GPR, %struct.GPR* %570, i32 0, i32 17
  %572 = getelementptr inbounds %struct.Reg, %struct.Reg* %571, i32 0, i32 0
  %R8D.i1103 = bitcast %union.anon* %572 to i32*
  %573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %574 = getelementptr inbounds %struct.GPR, %struct.GPR* %573, i32 0, i32 15
  %575 = getelementptr inbounds %struct.Reg, %struct.Reg* %574, i32 0, i32 0
  %RBP.i1104 = bitcast %union.anon* %575 to i64*
  %576 = bitcast i32* %R8D.i1103 to i64*
  %577 = load i64, i64* %RBP.i1104
  %578 = sub i64 %577, 16
  %579 = load i64, i64* %PC.i1102
  %580 = add i64 %579, 4
  store i64 %580, i64* %PC.i1102
  %581 = inttoptr i64 %578 to i32*
  %582 = load i32, i32* %581
  %583 = zext i32 %582 to i64
  store i64 %583, i64* %576, align 8
  store %struct.Memory* %loadMem_44ea9e, %struct.Memory** %MEMORY
  %loadMem_44eaa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %585 = getelementptr inbounds %struct.GPR, %struct.GPR* %584, i32 0, i32 33
  %586 = getelementptr inbounds %struct.Reg, %struct.Reg* %585, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %586 to i64*
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %588 = getelementptr inbounds %struct.GPR, %struct.GPR* %587, i32 0, i32 1
  %589 = getelementptr inbounds %struct.Reg, %struct.Reg* %588, i32 0, i32 0
  %EAX.i1100 = bitcast %union.anon* %589 to i32*
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %591 = getelementptr inbounds %struct.GPR, %struct.GPR* %590, i32 0, i32 15
  %592 = getelementptr inbounds %struct.Reg, %struct.Reg* %591, i32 0, i32 0
  %RBP.i1101 = bitcast %union.anon* %592 to i64*
  %593 = load i64, i64* %RBP.i1101
  %594 = sub i64 %593, 484
  %595 = load i32, i32* %EAX.i1100
  %596 = zext i32 %595 to i64
  %597 = load i64, i64* %PC.i1099
  %598 = add i64 %597, 6
  store i64 %598, i64* %PC.i1099
  %599 = inttoptr i64 %594 to i32*
  store i32 %595, i32* %599
  store %struct.Memory* %loadMem_44eaa2, %struct.Memory** %MEMORY
  %loadMem_44eaa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %601 = getelementptr inbounds %struct.GPR, %struct.GPR* %600, i32 0, i32 33
  %602 = getelementptr inbounds %struct.Reg, %struct.Reg* %601, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %602 to i64*
  %603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %604 = getelementptr inbounds %struct.GPR, %struct.GPR* %603, i32 0, i32 17
  %605 = getelementptr inbounds %struct.Reg, %struct.Reg* %604, i32 0, i32 0
  %R8D.i1097 = bitcast %union.anon* %605 to i32*
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %607 = getelementptr inbounds %struct.GPR, %struct.GPR* %606, i32 0, i32 1
  %608 = getelementptr inbounds %struct.Reg, %struct.Reg* %607, i32 0, i32 0
  %RAX.i1098 = bitcast %union.anon* %608 to i64*
  %609 = load i32, i32* %R8D.i1097
  %610 = zext i32 %609 to i64
  %611 = load i64, i64* %PC.i1096
  %612 = add i64 %611, 3
  store i64 %612, i64* %PC.i1096
  %613 = and i64 %610, 4294967295
  store i64 %613, i64* %RAX.i1098, align 8
  store %struct.Memory* %loadMem_44eaa8, %struct.Memory** %MEMORY
  %loadMem_44eaab = load %struct.Memory*, %struct.Memory** %MEMORY
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %615 = getelementptr inbounds %struct.GPR, %struct.GPR* %614, i32 0, i32 33
  %616 = getelementptr inbounds %struct.Reg, %struct.Reg* %615, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %616 to i64*
  %617 = load i64, i64* %PC.i1095
  %618 = add i64 %617, 1
  store i64 %618, i64* %PC.i1095
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %621 = bitcast %union.anon* %620 to i32*
  %622 = load i32, i32* %621, align 8
  %623 = sext i32 %622 to i64
  %624 = lshr i64 %623, 32
  store i64 %624, i64* %619, align 8
  store %struct.Memory* %loadMem_44eaab, %struct.Memory** %MEMORY
  %loadMem_44eaac = load %struct.Memory*, %struct.Memory** %MEMORY
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %626 = getelementptr inbounds %struct.GPR, %struct.GPR* %625, i32 0, i32 33
  %627 = getelementptr inbounds %struct.Reg, %struct.Reg* %626, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %627 to i64*
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %629 = getelementptr inbounds %struct.GPR, %struct.GPR* %628, i32 0, i32 5
  %630 = getelementptr inbounds %struct.Reg, %struct.Reg* %629, i32 0, i32 0
  %ECX.i1092 = bitcast %union.anon* %630 to i32*
  %631 = load i32, i32* %ECX.i1092
  %632 = zext i32 %631 to i64
  %633 = load i64, i64* %PC.i1091
  %634 = add i64 %633, 2
  store i64 %634, i64* %PC.i1091
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %636 = bitcast %union.anon* %635 to i32*
  %637 = load i32, i32* %636, align 8
  %638 = zext i32 %637 to i64
  %639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %640 = bitcast %union.anon* %639 to i32*
  %641 = load i32, i32* %640, align 8
  %642 = zext i32 %641 to i64
  %643 = shl i64 %632, 32
  %644 = ashr exact i64 %643, 32
  %645 = shl i64 %642, 32
  %646 = or i64 %645, %638
  %647 = sdiv i64 %646, %644
  %648 = shl i64 %647, 32
  %649 = ashr exact i64 %648, 32
  %650 = icmp eq i64 %647, %649
  br i1 %650, label %655, label %651

; <label>:651:                                    ; preds = %routine_idivl__ecx.exit1109
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %653 = load i64, i64* %652, align 8
  %654 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %653, %struct.Memory* %loadMem_44eaac)
  br label %routine_idivl__ecx.exit

; <label>:655:                                    ; preds = %routine_idivl__ecx.exit1109
  %656 = srem i64 %646, %644
  %657 = getelementptr inbounds %union.anon, %union.anon* %635, i64 0, i32 0
  %658 = and i64 %647, 4294967295
  store i64 %658, i64* %657, align 8
  %659 = getelementptr inbounds %union.anon, %union.anon* %639, i64 0, i32 0
  %660 = and i64 %656, 4294967295
  store i64 %660, i64* %659, align 8
  %661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %661, align 1
  %662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %662, align 1
  %663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %663, align 1
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %664, align 1
  %665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %665, align 1
  %666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %666, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %651, %655
  %667 = phi %struct.Memory* [ %654, %651 ], [ %loadMem_44eaac, %655 ]
  store %struct.Memory* %667, %struct.Memory** %MEMORY
  %loadMem_44eaae = load %struct.Memory*, %struct.Memory** %MEMORY
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %669 = getelementptr inbounds %struct.GPR, %struct.GPR* %668, i32 0, i32 33
  %670 = getelementptr inbounds %struct.Reg, %struct.Reg* %669, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %670 to i64*
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %672 = getelementptr inbounds %struct.GPR, %struct.GPR* %671, i32 0, i32 7
  %673 = getelementptr inbounds %struct.Reg, %struct.Reg* %672, i32 0, i32 0
  %RDX.i1090 = bitcast %union.anon* %673 to i64*
  %674 = load i64, i64* %RDX.i1090
  %675 = load i64, i64* %PC.i1089
  %676 = add i64 %675, 3
  store i64 %676, i64* %PC.i1089
  %677 = trunc i64 %674 to i32
  %678 = sub i32 %677, 1
  %679 = zext i32 %678 to i64
  store i64 %679, i64* %RDX.i1090, align 8
  %680 = icmp ult i32 %677, 1
  %681 = zext i1 %680 to i8
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %681, i8* %682, align 1
  %683 = and i32 %678, 255
  %684 = call i32 @llvm.ctpop.i32(i32 %683)
  %685 = trunc i32 %684 to i8
  %686 = and i8 %685, 1
  %687 = xor i8 %686, 1
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %687, i8* %688, align 1
  %689 = xor i64 1, %674
  %690 = trunc i64 %689 to i32
  %691 = xor i32 %690, %678
  %692 = lshr i32 %691, 4
  %693 = trunc i32 %692 to i8
  %694 = and i8 %693, 1
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %694, i8* %695, align 1
  %696 = icmp eq i32 %678, 0
  %697 = zext i1 %696 to i8
  %698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %697, i8* %698, align 1
  %699 = lshr i32 %678, 31
  %700 = trunc i32 %699 to i8
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %700, i8* %701, align 1
  %702 = lshr i32 %677, 31
  %703 = xor i32 %699, %702
  %704 = add i32 %703, %702
  %705 = icmp eq i32 %704, 2
  %706 = zext i1 %705 to i8
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %706, i8* %707, align 1
  store %struct.Memory* %loadMem_44eaae, %struct.Memory** %MEMORY
  %loadMem_44eab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %709 = getelementptr inbounds %struct.GPR, %struct.GPR* %708, i32 0, i32 33
  %710 = getelementptr inbounds %struct.Reg, %struct.Reg* %709, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %710 to i64*
  %711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %712 = getelementptr inbounds %struct.GPR, %struct.GPR* %711, i32 0, i32 15
  %713 = getelementptr inbounds %struct.Reg, %struct.Reg* %712, i32 0, i32 0
  %RBP.i1087 = bitcast %union.anon* %713 to i64*
  %714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %715 = getelementptr inbounds %struct.GPR, %struct.GPR* %714, i32 0, i32 19
  %716 = getelementptr inbounds %struct.Reg, %struct.Reg* %715, i32 0, i32 0
  %R9.i1088 = bitcast %union.anon* %716 to i64*
  %717 = load i64, i64* %RBP.i1087
  %718 = sub i64 %717, 480
  %719 = load i64, i64* %PC.i1086
  %720 = add i64 %719, 7
  store i64 %720, i64* %PC.i1086
  %721 = inttoptr i64 %718 to i64*
  %722 = load i64, i64* %721
  store i64 %722, i64* %R9.i1088, align 8
  store %struct.Memory* %loadMem_44eab1, %struct.Memory** %MEMORY
  %loadMem_44eab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %724 = getelementptr inbounds %struct.GPR, %struct.GPR* %723, i32 0, i32 33
  %725 = getelementptr inbounds %struct.Reg, %struct.Reg* %724, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %725 to i64*
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %727 = getelementptr inbounds %struct.GPR, %struct.GPR* %726, i32 0, i32 7
  %728 = getelementptr inbounds %struct.Reg, %struct.Reg* %727, i32 0, i32 0
  %EDX.i1084 = bitcast %union.anon* %728 to i32*
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %730 = getelementptr inbounds %struct.GPR, %struct.GPR* %729, i32 0, i32 15
  %731 = getelementptr inbounds %struct.Reg, %struct.Reg* %730, i32 0, i32 0
  %RBP.i1085 = bitcast %union.anon* %731 to i64*
  %732 = load i64, i64* %RBP.i1085
  %733 = sub i64 %732, 488
  %734 = load i32, i32* %EDX.i1084
  %735 = zext i32 %734 to i64
  %736 = load i64, i64* %PC.i1083
  %737 = add i64 %736, 6
  store i64 %737, i64* %PC.i1083
  %738 = inttoptr i64 %733 to i32*
  store i32 %734, i32* %738
  store %struct.Memory* %loadMem_44eab8, %struct.Memory** %MEMORY
  %loadMem_44eabe = load %struct.Memory*, %struct.Memory** %MEMORY
  %739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %740 = getelementptr inbounds %struct.GPR, %struct.GPR* %739, i32 0, i32 33
  %741 = getelementptr inbounds %struct.Reg, %struct.Reg* %740, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %741 to i64*
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %743 = getelementptr inbounds %struct.GPR, %struct.GPR* %742, i32 0, i32 7
  %744 = getelementptr inbounds %struct.Reg, %struct.Reg* %743, i32 0, i32 0
  %RDX.i1082 = bitcast %union.anon* %744 to i64*
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %746 = getelementptr inbounds %struct.GPR, %struct.GPR* %745, i32 0, i32 19
  %747 = getelementptr inbounds %struct.Reg, %struct.Reg* %746, i32 0, i32 0
  %R9.i = bitcast %union.anon* %747 to i64*
  %748 = load i64, i64* %R9.i
  %749 = load i64, i64* %PC.i1081
  %750 = add i64 %749, 3
  store i64 %750, i64* %PC.i1081
  store i64 %748, i64* %RDX.i1082, align 8
  store %struct.Memory* %loadMem_44eabe, %struct.Memory** %MEMORY
  %loadMem_44eac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %752 = getelementptr inbounds %struct.GPR, %struct.GPR* %751, i32 0, i32 33
  %753 = getelementptr inbounds %struct.Reg, %struct.Reg* %752, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %753 to i64*
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %755 = getelementptr inbounds %struct.GPR, %struct.GPR* %754, i32 0, i32 5
  %756 = getelementptr inbounds %struct.Reg, %struct.Reg* %755, i32 0, i32 0
  %RCX.i1079 = bitcast %union.anon* %756 to i64*
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %758 = getelementptr inbounds %struct.GPR, %struct.GPR* %757, i32 0, i32 15
  %759 = getelementptr inbounds %struct.Reg, %struct.Reg* %758, i32 0, i32 0
  %RBP.i1080 = bitcast %union.anon* %759 to i64*
  %760 = load i64, i64* %RBP.i1080
  %761 = sub i64 %760, 484
  %762 = load i64, i64* %PC.i1078
  %763 = add i64 %762, 6
  store i64 %763, i64* %PC.i1078
  %764 = inttoptr i64 %761 to i32*
  %765 = load i32, i32* %764
  %766 = zext i32 %765 to i64
  store i64 %766, i64* %RCX.i1079, align 8
  store %struct.Memory* %loadMem_44eac1, %struct.Memory** %MEMORY
  %loadMem_44eac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %768 = getelementptr inbounds %struct.GPR, %struct.GPR* %767, i32 0, i32 33
  %769 = getelementptr inbounds %struct.Reg, %struct.Reg* %768, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %769 to i64*
  %770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %771 = getelementptr inbounds %struct.GPR, %struct.GPR* %770, i32 0, i32 17
  %772 = getelementptr inbounds %struct.Reg, %struct.Reg* %771, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %772 to i32*
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %774 = getelementptr inbounds %struct.GPR, %struct.GPR* %773, i32 0, i32 15
  %775 = getelementptr inbounds %struct.Reg, %struct.Reg* %774, i32 0, i32 0
  %RBP.i1077 = bitcast %union.anon* %775 to i64*
  %776 = bitcast i32* %R8D.i to i64*
  %777 = load i64, i64* %RBP.i1077
  %778 = sub i64 %777, 488
  %779 = load i64, i64* %PC.i1076
  %780 = add i64 %779, 7
  store i64 %780, i64* %PC.i1076
  %781 = inttoptr i64 %778 to i32*
  %782 = load i32, i32* %781
  %783 = zext i32 %782 to i64
  store i64 %783, i64* %776, align 8
  store %struct.Memory* %loadMem_44eac7, %struct.Memory** %MEMORY
  %loadMem1_44eace = load %struct.Memory*, %struct.Memory** %MEMORY
  %784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %785 = getelementptr inbounds %struct.GPR, %struct.GPR* %784, i32 0, i32 33
  %786 = getelementptr inbounds %struct.Reg, %struct.Reg* %785, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %786 to i64*
  %787 = load i64, i64* %PC.i1075
  %788 = add i64 %787, 13762
  %789 = load i64, i64* %PC.i1075
  %790 = add i64 %789, 5
  %791 = load i64, i64* %PC.i1075
  %792 = add i64 %791, 5
  store i64 %792, i64* %PC.i1075
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %794 = load i64, i64* %793, align 8
  %795 = add i64 %794, -8
  %796 = inttoptr i64 %795 to i64*
  store i64 %790, i64* %796
  store i64 %795, i64* %793, align 8
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %788, i64* %797, align 8
  store %struct.Memory* %loadMem1_44eace, %struct.Memory** %MEMORY
  %loadMem2_44eace = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44eace = load i64, i64* %3
  %call2_44eace = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64 %loadPC_44eace, %struct.Memory* %loadMem2_44eace)
  store %struct.Memory* %call2_44eace, %struct.Memory** %MEMORY
  br label %block_.L_44ead3

block_.L_44ead3:                                  ; preds = %routine_idivl__ecx.exit, %block_.L_44ea5d
  %loadMem_44ead3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %799 = getelementptr inbounds %struct.GPR, %struct.GPR* %798, i32 0, i32 33
  %800 = getelementptr inbounds %struct.Reg, %struct.Reg* %799, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %800 to i64*
  %801 = load i64, i64* %PC.i1074
  %802 = add i64 %801, 8
  store i64 %802, i64* %PC.i1074
  %803 = load i32, i32* bitcast (%G_0xb54ce4_type* @G_0xb54ce4 to i32*)
  %804 = sub i32 %803, 5
  %805 = icmp ult i32 %803, 5
  %806 = zext i1 %805 to i8
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %806, i8* %807, align 1
  %808 = and i32 %804, 255
  %809 = call i32 @llvm.ctpop.i32(i32 %808)
  %810 = trunc i32 %809 to i8
  %811 = and i8 %810, 1
  %812 = xor i8 %811, 1
  %813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %812, i8* %813, align 1
  %814 = xor i32 %803, 5
  %815 = xor i32 %814, %804
  %816 = lshr i32 %815, 4
  %817 = trunc i32 %816 to i8
  %818 = and i8 %817, 1
  %819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %818, i8* %819, align 1
  %820 = icmp eq i32 %804, 0
  %821 = zext i1 %820 to i8
  %822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %821, i8* %822, align 1
  %823 = lshr i32 %804, 31
  %824 = trunc i32 %823 to i8
  %825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %824, i8* %825, align 1
  %826 = lshr i32 %803, 31
  %827 = xor i32 %823, %826
  %828 = add i32 %827, %826
  %829 = icmp eq i32 %828, 2
  %830 = zext i1 %829 to i8
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %830, i8* %831, align 1
  store %struct.Memory* %loadMem_44ead3, %struct.Memory** %MEMORY
  %loadMem_44eadb = load %struct.Memory*, %struct.Memory** %MEMORY
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %833 = getelementptr inbounds %struct.GPR, %struct.GPR* %832, i32 0, i32 33
  %834 = getelementptr inbounds %struct.Reg, %struct.Reg* %833, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %834 to i64*
  %835 = load i64, i64* %PC.i1073
  %836 = add i64 %835, 11
  %837 = load i64, i64* %PC.i1073
  %838 = add i64 %837, 6
  %839 = load i64, i64* %PC.i1073
  %840 = add i64 %839, 6
  store i64 %840, i64* %PC.i1073
  %841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %842 = load i8, i8* %841, align 1
  %843 = icmp ne i8 %842, 0
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %845 = load i8, i8* %844, align 1
  %846 = icmp ne i8 %845, 0
  %847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %848 = load i8, i8* %847, align 1
  %849 = icmp ne i8 %848, 0
  %850 = xor i1 %846, %849
  %851 = or i1 %843, %850
  %852 = zext i1 %851 to i8
  store i8 %852, i8* %BRANCH_TAKEN, align 1
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %854 = select i1 %851, i64 %836, i64 %838
  store i64 %854, i64* %853, align 8
  store %struct.Memory* %loadMem_44eadb, %struct.Memory** %MEMORY
  %loadBr_44eadb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44eadb = icmp eq i8 %loadBr_44eadb, 1
  br i1 %cmpBr_44eadb, label %block_.L_44eae6, label %block_44eae1

block_44eae1:                                     ; preds = %block_.L_44ead3
  %loadMem_44eae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 33
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %857 to i64*
  %858 = load i64, i64* %PC.i1072
  %859 = add i64 %858, 2572
  %860 = load i64, i64* %PC.i1072
  %861 = add i64 %860, 5
  store i64 %861, i64* %PC.i1072
  %862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %859, i64* %862, align 8
  store %struct.Memory* %loadMem_44eae1, %struct.Memory** %MEMORY
  br label %block_.L_44f4ed

block_.L_44eae6:                                  ; preds = %block_.L_44ead3
  %loadMem_44eae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %864 = getelementptr inbounds %struct.GPR, %struct.GPR* %863, i32 0, i32 33
  %865 = getelementptr inbounds %struct.Reg, %struct.Reg* %864, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %865 to i64*
  %866 = load i64, i64* %PC.i1071
  %867 = add i64 %866, 8
  store i64 %867, i64* %PC.i1071
  %868 = load i32, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  %869 = sub i32 %868, 100
  %870 = icmp ult i32 %868, 100
  %871 = zext i1 %870 to i8
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %871, i8* %872, align 1
  %873 = and i32 %869, 255
  %874 = call i32 @llvm.ctpop.i32(i32 %873)
  %875 = trunc i32 %874 to i8
  %876 = and i8 %875, 1
  %877 = xor i8 %876, 1
  %878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %877, i8* %878, align 1
  %879 = xor i32 %868, 100
  %880 = xor i32 %879, %869
  %881 = lshr i32 %880, 4
  %882 = trunc i32 %881 to i8
  %883 = and i8 %882, 1
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %883, i8* %884, align 1
  %885 = icmp eq i32 %869, 0
  %886 = zext i1 %885 to i8
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %886, i8* %887, align 1
  %888 = lshr i32 %869, 31
  %889 = trunc i32 %888 to i8
  %890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %889, i8* %890, align 1
  %891 = lshr i32 %868, 31
  %892 = xor i32 %888, %891
  %893 = add i32 %892, %891
  %894 = icmp eq i32 %893, 2
  %895 = zext i1 %894 to i8
  %896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %895, i8* %896, align 1
  store %struct.Memory* %loadMem_44eae6, %struct.Memory** %MEMORY
  %loadMem_44eaee = load %struct.Memory*, %struct.Memory** %MEMORY
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %898 = getelementptr inbounds %struct.GPR, %struct.GPR* %897, i32 0, i32 33
  %899 = getelementptr inbounds %struct.Reg, %struct.Reg* %898, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %899 to i64*
  %900 = load i64, i64* %PC.i1070
  %901 = add i64 %900, 315
  %902 = load i64, i64* %PC.i1070
  %903 = add i64 %902, 6
  %904 = load i64, i64* %PC.i1070
  %905 = add i64 %904, 6
  store i64 %905, i64* %PC.i1070
  %906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %907 = load i8, i8* %906, align 1
  %908 = icmp eq i8 %907, 0
  %909 = zext i1 %908 to i8
  store i8 %909, i8* %BRANCH_TAKEN, align 1
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %911 = select i1 %908, i64 %901, i64 %903
  store i64 %911, i64* %910, align 8
  store %struct.Memory* %loadMem_44eaee, %struct.Memory** %MEMORY
  %loadBr_44eaee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44eaee = icmp eq i8 %loadBr_44eaee, 1
  br i1 %cmpBr_44eaee, label %block_.L_44ec29, label %block_44eaf4

block_44eaf4:                                     ; preds = %block_.L_44eae6
  %loadMem_44eaf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %913 = getelementptr inbounds %struct.GPR, %struct.GPR* %912, i32 0, i32 33
  %914 = getelementptr inbounds %struct.Reg, %struct.Reg* %913, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %914 to i64*
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %916 = getelementptr inbounds %struct.GPR, %struct.GPR* %915, i32 0, i32 15
  %917 = getelementptr inbounds %struct.Reg, %struct.Reg* %916, i32 0, i32 0
  %RBP.i1069 = bitcast %union.anon* %917 to i64*
  %918 = load i64, i64* %RBP.i1069
  %919 = sub i64 %918, 460
  %920 = load i64, i64* %PC.i1068
  %921 = add i64 %920, 10
  store i64 %921, i64* %PC.i1068
  %922 = inttoptr i64 %919 to i32*
  store i32 -1, i32* %922
  store %struct.Memory* %loadMem_44eaf4, %struct.Memory** %MEMORY
  %loadMem_44eafe = load %struct.Memory*, %struct.Memory** %MEMORY
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %924 = getelementptr inbounds %struct.GPR, %struct.GPR* %923, i32 0, i32 33
  %925 = getelementptr inbounds %struct.Reg, %struct.Reg* %924, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %925 to i64*
  %926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %927 = getelementptr inbounds %struct.GPR, %struct.GPR* %926, i32 0, i32 1
  %928 = getelementptr inbounds %struct.Reg, %struct.Reg* %927, i32 0, i32 0
  %RAX.i1066 = bitcast %union.anon* %928 to i64*
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %930 = getelementptr inbounds %struct.GPR, %struct.GPR* %929, i32 0, i32 15
  %931 = getelementptr inbounds %struct.Reg, %struct.Reg* %930, i32 0, i32 0
  %RBP.i1067 = bitcast %union.anon* %931 to i64*
  %932 = load i64, i64* %RBP.i1067
  %933 = sub i64 %932, 444
  %934 = load i64, i64* %PC.i1065
  %935 = add i64 %934, 6
  store i64 %935, i64* %PC.i1065
  %936 = inttoptr i64 %933 to i32*
  %937 = load i32, i32* %936
  %938 = zext i32 %937 to i64
  store i64 %938, i64* %RAX.i1066, align 8
  store %struct.Memory* %loadMem_44eafe, %struct.Memory** %MEMORY
  %loadMem_44eb04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %940 = getelementptr inbounds %struct.GPR, %struct.GPR* %939, i32 0, i32 33
  %941 = getelementptr inbounds %struct.Reg, %struct.Reg* %940, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %941 to i64*
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %943 = getelementptr inbounds %struct.GPR, %struct.GPR* %942, i32 0, i32 1
  %944 = getelementptr inbounds %struct.Reg, %struct.Reg* %943, i32 0, i32 0
  %EAX.i1063 = bitcast %union.anon* %944 to i32*
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %946 = getelementptr inbounds %struct.GPR, %struct.GPR* %945, i32 0, i32 15
  %947 = getelementptr inbounds %struct.Reg, %struct.Reg* %946, i32 0, i32 0
  %RBP.i1064 = bitcast %union.anon* %947 to i64*
  %948 = load i64, i64* %RBP.i1064
  %949 = sub i64 %948, 464
  %950 = load i32, i32* %EAX.i1063
  %951 = zext i32 %950 to i64
  %952 = load i64, i64* %PC.i1062
  %953 = add i64 %952, 6
  store i64 %953, i64* %PC.i1062
  %954 = inttoptr i64 %949 to i32*
  store i32 %950, i32* %954
  store %struct.Memory* %loadMem_44eb04, %struct.Memory** %MEMORY
  %loadMem_44eb0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %956 = getelementptr inbounds %struct.GPR, %struct.GPR* %955, i32 0, i32 33
  %957 = getelementptr inbounds %struct.Reg, %struct.Reg* %956, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %957 to i64*
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %959 = getelementptr inbounds %struct.GPR, %struct.GPR* %958, i32 0, i32 15
  %960 = getelementptr inbounds %struct.Reg, %struct.Reg* %959, i32 0, i32 0
  %RBP.i1061 = bitcast %union.anon* %960 to i64*
  %961 = load i64, i64* %RBP.i1061
  %962 = sub i64 %961, 436
  %963 = load i64, i64* %PC.i1060
  %964 = add i64 %963, 10
  store i64 %964, i64* %PC.i1060
  %965 = inttoptr i64 %962 to i32*
  store i32 1, i32* %965
  store %struct.Memory* %loadMem_44eb0a, %struct.Memory** %MEMORY
  br label %block_.L_44eb14

block_.L_44eb14:                                  ; preds = %block_.L_44eb8c, %block_44eaf4
  %loadMem_44eb14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %967 = getelementptr inbounds %struct.GPR, %struct.GPR* %966, i32 0, i32 33
  %968 = getelementptr inbounds %struct.Reg, %struct.Reg* %967, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %968 to i64*
  %969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %970 = getelementptr inbounds %struct.GPR, %struct.GPR* %969, i32 0, i32 1
  %971 = getelementptr inbounds %struct.Reg, %struct.Reg* %970, i32 0, i32 0
  %RAX.i1058 = bitcast %union.anon* %971 to i64*
  %972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %973 = getelementptr inbounds %struct.GPR, %struct.GPR* %972, i32 0, i32 15
  %974 = getelementptr inbounds %struct.Reg, %struct.Reg* %973, i32 0, i32 0
  %RBP.i1059 = bitcast %union.anon* %974 to i64*
  %975 = load i64, i64* %RBP.i1059
  %976 = sub i64 %975, 436
  %977 = load i64, i64* %PC.i1057
  %978 = add i64 %977, 6
  store i64 %978, i64* %PC.i1057
  %979 = inttoptr i64 %976 to i32*
  %980 = load i32, i32* %979
  %981 = zext i32 %980 to i64
  store i64 %981, i64* %RAX.i1058, align 8
  store %struct.Memory* %loadMem_44eb14, %struct.Memory** %MEMORY
  %loadMem_44eb1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %983 = getelementptr inbounds %struct.GPR, %struct.GPR* %982, i32 0, i32 33
  %984 = getelementptr inbounds %struct.Reg, %struct.Reg* %983, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %984 to i64*
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %986 = getelementptr inbounds %struct.GPR, %struct.GPR* %985, i32 0, i32 1
  %987 = getelementptr inbounds %struct.Reg, %struct.Reg* %986, i32 0, i32 0
  %EAX.i1056 = bitcast %union.anon* %987 to i32*
  %988 = load i32, i32* %EAX.i1056
  %989 = zext i32 %988 to i64
  %990 = load i64, i64* %PC.i1055
  %991 = add i64 %990, 7
  store i64 %991, i64* %PC.i1055
  %992 = load i32, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  %993 = sub i32 %988, %992
  %994 = icmp ult i32 %988, %992
  %995 = zext i1 %994 to i8
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %995, i8* %996, align 1
  %997 = and i32 %993, 255
  %998 = call i32 @llvm.ctpop.i32(i32 %997)
  %999 = trunc i32 %998 to i8
  %1000 = and i8 %999, 1
  %1001 = xor i8 %1000, 1
  %1002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1001, i8* %1002, align 1
  %1003 = xor i32 %992, %988
  %1004 = xor i32 %1003, %993
  %1005 = lshr i32 %1004, 4
  %1006 = trunc i32 %1005 to i8
  %1007 = and i8 %1006, 1
  %1008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1007, i8* %1008, align 1
  %1009 = icmp eq i32 %993, 0
  %1010 = zext i1 %1009 to i8
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1010, i8* %1011, align 1
  %1012 = lshr i32 %993, 31
  %1013 = trunc i32 %1012 to i8
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1013, i8* %1014, align 1
  %1015 = lshr i32 %988, 31
  %1016 = lshr i32 %992, 31
  %1017 = xor i32 %1016, %1015
  %1018 = xor i32 %1012, %1015
  %1019 = add i32 %1018, %1017
  %1020 = icmp eq i32 %1019, 2
  %1021 = zext i1 %1020 to i8
  %1022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1021, i8* %1022, align 1
  store %struct.Memory* %loadMem_44eb1a, %struct.Memory** %MEMORY
  %loadMem_44eb21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1024 = getelementptr inbounds %struct.GPR, %struct.GPR* %1023, i32 0, i32 33
  %1025 = getelementptr inbounds %struct.Reg, %struct.Reg* %1024, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %1025 to i64*
  %1026 = load i64, i64* %PC.i1054
  %1027 = add i64 %1026, 127
  %1028 = load i64, i64* %PC.i1054
  %1029 = add i64 %1028, 6
  %1030 = load i64, i64* %PC.i1054
  %1031 = add i64 %1030, 6
  store i64 %1031, i64* %PC.i1054
  %1032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1033 = load i8, i8* %1032, align 1
  %1034 = icmp ne i8 %1033, 0
  %1035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1036 = load i8, i8* %1035, align 1
  %1037 = icmp ne i8 %1036, 0
  %1038 = xor i1 %1034, %1037
  %1039 = xor i1 %1038, true
  %1040 = zext i1 %1039 to i8
  store i8 %1040, i8* %BRANCH_TAKEN, align 1
  %1041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1042 = select i1 %1038, i64 %1029, i64 %1027
  store i64 %1042, i64* %1041, align 8
  store %struct.Memory* %loadMem_44eb21, %struct.Memory** %MEMORY
  %loadBr_44eb21 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44eb21 = icmp eq i8 %loadBr_44eb21, 1
  br i1 %cmpBr_44eb21, label %block_.L_44eba0, label %block_44eb27

block_44eb27:                                     ; preds = %block_.L_44eb14
  %loadMem_44eb27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1044 = getelementptr inbounds %struct.GPR, %struct.GPR* %1043, i32 0, i32 33
  %1045 = getelementptr inbounds %struct.Reg, %struct.Reg* %1044, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %1045 to i64*
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1047 = getelementptr inbounds %struct.GPR, %struct.GPR* %1046, i32 0, i32 1
  %1048 = getelementptr inbounds %struct.Reg, %struct.Reg* %1047, i32 0, i32 0
  %RAX.i1053 = bitcast %union.anon* %1048 to i64*
  %1049 = load i64, i64* %PC.i1052
  %1050 = add i64 %1049, 10
  store i64 %1050, i64* %PC.i1052
  store i64 ptrtoint (%G__0xac5d30_type* @G__0xac5d30 to i64), i64* %RAX.i1053, align 8
  store %struct.Memory* %loadMem_44eb27, %struct.Memory** %MEMORY
  %loadMem_44eb31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1052 = getelementptr inbounds %struct.GPR, %struct.GPR* %1051, i32 0, i32 33
  %1053 = getelementptr inbounds %struct.Reg, %struct.Reg* %1052, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %1053 to i64*
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1055 = getelementptr inbounds %struct.GPR, %struct.GPR* %1054, i32 0, i32 5
  %1056 = getelementptr inbounds %struct.Reg, %struct.Reg* %1055, i32 0, i32 0
  %RCX.i1050 = bitcast %union.anon* %1056 to i64*
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1058 = getelementptr inbounds %struct.GPR, %struct.GPR* %1057, i32 0, i32 15
  %1059 = getelementptr inbounds %struct.Reg, %struct.Reg* %1058, i32 0, i32 0
  %RBP.i1051 = bitcast %union.anon* %1059 to i64*
  %1060 = load i64, i64* %RBP.i1051
  %1061 = sub i64 %1060, 436
  %1062 = load i64, i64* %PC.i1049
  %1063 = add i64 %1062, 7
  store i64 %1063, i64* %PC.i1049
  %1064 = inttoptr i64 %1061 to i32*
  %1065 = load i32, i32* %1064
  %1066 = sext i32 %1065 to i64
  store i64 %1066, i64* %RCX.i1050, align 8
  store %struct.Memory* %loadMem_44eb31, %struct.Memory** %MEMORY
  %loadMem_44eb38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1068 = getelementptr inbounds %struct.GPR, %struct.GPR* %1067, i32 0, i32 33
  %1069 = getelementptr inbounds %struct.Reg, %struct.Reg* %1068, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %1069 to i64*
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1071 = getelementptr inbounds %struct.GPR, %struct.GPR* %1070, i32 0, i32 5
  %1072 = getelementptr inbounds %struct.Reg, %struct.Reg* %1071, i32 0, i32 0
  %RCX.i1048 = bitcast %union.anon* %1072 to i64*
  %1073 = load i64, i64* %RCX.i1048
  %1074 = load i64, i64* %PC.i1047
  %1075 = add i64 %1074, 7
  store i64 %1075, i64* %PC.i1047
  %1076 = sext i64 %1073 to i128
  %1077 = and i128 %1076, -18446744073709551616
  %1078 = zext i64 %1073 to i128
  %1079 = or i128 %1077, %1078
  %1080 = mul i128 476, %1079
  %1081 = trunc i128 %1080 to i64
  store i64 %1081, i64* %RCX.i1048, align 8
  %1082 = sext i64 %1081 to i128
  %1083 = icmp ne i128 %1082, %1080
  %1084 = zext i1 %1083 to i8
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1084, i8* %1085, align 1
  %1086 = trunc i128 %1080 to i32
  %1087 = and i32 %1086, 255
  %1088 = call i32 @llvm.ctpop.i32(i32 %1087)
  %1089 = trunc i32 %1088 to i8
  %1090 = and i8 %1089, 1
  %1091 = xor i8 %1090, 1
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1091, i8* %1092, align 1
  %1093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1093, align 1
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1094, align 1
  %1095 = lshr i64 %1081, 63
  %1096 = trunc i64 %1095 to i8
  %1097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1096, i8* %1097, align 1
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1084, i8* %1098, align 1
  store %struct.Memory* %loadMem_44eb38, %struct.Memory** %MEMORY
  %loadMem_44eb3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1100 = getelementptr inbounds %struct.GPR, %struct.GPR* %1099, i32 0, i32 33
  %1101 = getelementptr inbounds %struct.Reg, %struct.Reg* %1100, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %1101 to i64*
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1103 = getelementptr inbounds %struct.GPR, %struct.GPR* %1102, i32 0, i32 1
  %1104 = getelementptr inbounds %struct.Reg, %struct.Reg* %1103, i32 0, i32 0
  %RAX.i1045 = bitcast %union.anon* %1104 to i64*
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1106 = getelementptr inbounds %struct.GPR, %struct.GPR* %1105, i32 0, i32 5
  %1107 = getelementptr inbounds %struct.Reg, %struct.Reg* %1106, i32 0, i32 0
  %RCX.i1046 = bitcast %union.anon* %1107 to i64*
  %1108 = load i64, i64* %RAX.i1045
  %1109 = load i64, i64* %RCX.i1046
  %1110 = load i64, i64* %PC.i1044
  %1111 = add i64 %1110, 3
  store i64 %1111, i64* %PC.i1044
  %1112 = add i64 %1109, %1108
  store i64 %1112, i64* %RAX.i1045, align 8
  %1113 = icmp ult i64 %1112, %1108
  %1114 = icmp ult i64 %1112, %1109
  %1115 = or i1 %1113, %1114
  %1116 = zext i1 %1115 to i8
  %1117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1116, i8* %1117, align 1
  %1118 = trunc i64 %1112 to i32
  %1119 = and i32 %1118, 255
  %1120 = call i32 @llvm.ctpop.i32(i32 %1119)
  %1121 = trunc i32 %1120 to i8
  %1122 = and i8 %1121, 1
  %1123 = xor i8 %1122, 1
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1123, i8* %1124, align 1
  %1125 = xor i64 %1109, %1108
  %1126 = xor i64 %1125, %1112
  %1127 = lshr i64 %1126, 4
  %1128 = trunc i64 %1127 to i8
  %1129 = and i8 %1128, 1
  %1130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1129, i8* %1130, align 1
  %1131 = icmp eq i64 %1112, 0
  %1132 = zext i1 %1131 to i8
  %1133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1132, i8* %1133, align 1
  %1134 = lshr i64 %1112, 63
  %1135 = trunc i64 %1134 to i8
  %1136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1135, i8* %1136, align 1
  %1137 = lshr i64 %1108, 63
  %1138 = lshr i64 %1109, 63
  %1139 = xor i64 %1134, %1137
  %1140 = xor i64 %1134, %1138
  %1141 = add i64 %1139, %1140
  %1142 = icmp eq i64 %1141, 2
  %1143 = zext i1 %1142 to i8
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1143, i8* %1144, align 1
  store %struct.Memory* %loadMem_44eb3f, %struct.Memory** %MEMORY
  %loadMem_44eb42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1146 = getelementptr inbounds %struct.GPR, %struct.GPR* %1145, i32 0, i32 33
  %1147 = getelementptr inbounds %struct.Reg, %struct.Reg* %1146, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %1147 to i64*
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1149 = getelementptr inbounds %struct.GPR, %struct.GPR* %1148, i32 0, i32 1
  %1150 = getelementptr inbounds %struct.Reg, %struct.Reg* %1149, i32 0, i32 0
  %RAX.i1042 = bitcast %union.anon* %1150 to i64*
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1152 = getelementptr inbounds %struct.GPR, %struct.GPR* %1151, i32 0, i32 7
  %1153 = getelementptr inbounds %struct.Reg, %struct.Reg* %1152, i32 0, i32 0
  %RDX.i1043 = bitcast %union.anon* %1153 to i64*
  %1154 = load i64, i64* %RAX.i1042
  %1155 = add i64 %1154, 412
  %1156 = load i64, i64* %PC.i1041
  %1157 = add i64 %1156, 6
  store i64 %1157, i64* %PC.i1041
  %1158 = inttoptr i64 %1155 to i32*
  %1159 = load i32, i32* %1158
  %1160 = zext i32 %1159 to i64
  store i64 %1160, i64* %RDX.i1043, align 8
  store %struct.Memory* %loadMem_44eb42, %struct.Memory** %MEMORY
  %loadMem_44eb48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1162 = getelementptr inbounds %struct.GPR, %struct.GPR* %1161, i32 0, i32 33
  %1163 = getelementptr inbounds %struct.Reg, %struct.Reg* %1162, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %1163 to i64*
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1165 = getelementptr inbounds %struct.GPR, %struct.GPR* %1164, i32 0, i32 7
  %1166 = getelementptr inbounds %struct.Reg, %struct.Reg* %1165, i32 0, i32 0
  %EDX.i1039 = bitcast %union.anon* %1166 to i32*
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1168 = getelementptr inbounds %struct.GPR, %struct.GPR* %1167, i32 0, i32 15
  %1169 = getelementptr inbounds %struct.Reg, %struct.Reg* %1168, i32 0, i32 0
  %RBP.i1040 = bitcast %union.anon* %1169 to i64*
  %1170 = load i32, i32* %EDX.i1039
  %1171 = zext i32 %1170 to i64
  %1172 = load i64, i64* %RBP.i1040
  %1173 = sub i64 %1172, 464
  %1174 = load i64, i64* %PC.i1038
  %1175 = add i64 %1174, 6
  store i64 %1175, i64* %PC.i1038
  %1176 = inttoptr i64 %1173 to i32*
  %1177 = load i32, i32* %1176
  %1178 = sub i32 %1170, %1177
  %1179 = icmp ult i32 %1170, %1177
  %1180 = zext i1 %1179 to i8
  %1181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1180, i8* %1181, align 1
  %1182 = and i32 %1178, 255
  %1183 = call i32 @llvm.ctpop.i32(i32 %1182)
  %1184 = trunc i32 %1183 to i8
  %1185 = and i8 %1184, 1
  %1186 = xor i8 %1185, 1
  %1187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1186, i8* %1187, align 1
  %1188 = xor i32 %1177, %1170
  %1189 = xor i32 %1188, %1178
  %1190 = lshr i32 %1189, 4
  %1191 = trunc i32 %1190 to i8
  %1192 = and i8 %1191, 1
  %1193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1192, i8* %1193, align 1
  %1194 = icmp eq i32 %1178, 0
  %1195 = zext i1 %1194 to i8
  %1196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1195, i8* %1196, align 1
  %1197 = lshr i32 %1178, 31
  %1198 = trunc i32 %1197 to i8
  %1199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1198, i8* %1199, align 1
  %1200 = lshr i32 %1170, 31
  %1201 = lshr i32 %1177, 31
  %1202 = xor i32 %1201, %1200
  %1203 = xor i32 %1197, %1200
  %1204 = add i32 %1203, %1202
  %1205 = icmp eq i32 %1204, 2
  %1206 = zext i1 %1205 to i8
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1206, i8* %1207, align 1
  store %struct.Memory* %loadMem_44eb48, %struct.Memory** %MEMORY
  %loadMem_44eb4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1209 = getelementptr inbounds %struct.GPR, %struct.GPR* %1208, i32 0, i32 33
  %1210 = getelementptr inbounds %struct.Reg, %struct.Reg* %1209, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %1210 to i64*
  %1211 = load i64, i64* %PC.i1037
  %1212 = add i64 %1211, 57
  %1213 = load i64, i64* %PC.i1037
  %1214 = add i64 %1213, 6
  %1215 = load i64, i64* %PC.i1037
  %1216 = add i64 %1215, 6
  store i64 %1216, i64* %PC.i1037
  %1217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1218 = load i8, i8* %1217, align 1
  %1219 = icmp ne i8 %1218, 0
  %1220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1221 = load i8, i8* %1220, align 1
  %1222 = icmp ne i8 %1221, 0
  %1223 = xor i1 %1219, %1222
  %1224 = xor i1 %1223, true
  %1225 = zext i1 %1224 to i8
  store i8 %1225, i8* %BRANCH_TAKEN, align 1
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1227 = select i1 %1223, i64 %1214, i64 %1212
  store i64 %1227, i64* %1226, align 8
  store %struct.Memory* %loadMem_44eb4e, %struct.Memory** %MEMORY
  %loadBr_44eb4e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44eb4e = icmp eq i8 %loadBr_44eb4e, 1
  br i1 %cmpBr_44eb4e, label %block_.L_44eb87, label %block_44eb54

block_44eb54:                                     ; preds = %block_44eb27
  %loadMem_44eb54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1229 = getelementptr inbounds %struct.GPR, %struct.GPR* %1228, i32 0, i32 33
  %1230 = getelementptr inbounds %struct.Reg, %struct.Reg* %1229, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %1230 to i64*
  %1231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1232 = getelementptr inbounds %struct.GPR, %struct.GPR* %1231, i32 0, i32 1
  %1233 = getelementptr inbounds %struct.Reg, %struct.Reg* %1232, i32 0, i32 0
  %RAX.i1036 = bitcast %union.anon* %1233 to i64*
  %1234 = load i64, i64* %PC.i1035
  %1235 = add i64 %1234, 10
  store i64 %1235, i64* %PC.i1035
  store i64 ptrtoint (%G__0xac5d30_type* @G__0xac5d30 to i64), i64* %RAX.i1036, align 8
  store %struct.Memory* %loadMem_44eb54, %struct.Memory** %MEMORY
  %loadMem_44eb5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1237 = getelementptr inbounds %struct.GPR, %struct.GPR* %1236, i32 0, i32 33
  %1238 = getelementptr inbounds %struct.Reg, %struct.Reg* %1237, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %1238 to i64*
  %1239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1240 = getelementptr inbounds %struct.GPR, %struct.GPR* %1239, i32 0, i32 5
  %1241 = getelementptr inbounds %struct.Reg, %struct.Reg* %1240, i32 0, i32 0
  %RCX.i1033 = bitcast %union.anon* %1241 to i64*
  %1242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1243 = getelementptr inbounds %struct.GPR, %struct.GPR* %1242, i32 0, i32 15
  %1244 = getelementptr inbounds %struct.Reg, %struct.Reg* %1243, i32 0, i32 0
  %RBP.i1034 = bitcast %union.anon* %1244 to i64*
  %1245 = load i64, i64* %RBP.i1034
  %1246 = sub i64 %1245, 436
  %1247 = load i64, i64* %PC.i1032
  %1248 = add i64 %1247, 7
  store i64 %1248, i64* %PC.i1032
  %1249 = inttoptr i64 %1246 to i32*
  %1250 = load i32, i32* %1249
  %1251 = sext i32 %1250 to i64
  store i64 %1251, i64* %RCX.i1033, align 8
  store %struct.Memory* %loadMem_44eb5e, %struct.Memory** %MEMORY
  %loadMem_44eb65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1253 = getelementptr inbounds %struct.GPR, %struct.GPR* %1252, i32 0, i32 33
  %1254 = getelementptr inbounds %struct.Reg, %struct.Reg* %1253, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %1254 to i64*
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 5
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %RCX.i1031 = bitcast %union.anon* %1257 to i64*
  %1258 = load i64, i64* %RCX.i1031
  %1259 = load i64, i64* %PC.i1030
  %1260 = add i64 %1259, 7
  store i64 %1260, i64* %PC.i1030
  %1261 = sext i64 %1258 to i128
  %1262 = and i128 %1261, -18446744073709551616
  %1263 = zext i64 %1258 to i128
  %1264 = or i128 %1262, %1263
  %1265 = mul i128 476, %1264
  %1266 = trunc i128 %1265 to i64
  store i64 %1266, i64* %RCX.i1031, align 8
  %1267 = sext i64 %1266 to i128
  %1268 = icmp ne i128 %1267, %1265
  %1269 = zext i1 %1268 to i8
  %1270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1269, i8* %1270, align 1
  %1271 = trunc i128 %1265 to i32
  %1272 = and i32 %1271, 255
  %1273 = call i32 @llvm.ctpop.i32(i32 %1272)
  %1274 = trunc i32 %1273 to i8
  %1275 = and i8 %1274, 1
  %1276 = xor i8 %1275, 1
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1276, i8* %1277, align 1
  %1278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1278, align 1
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1279, align 1
  %1280 = lshr i64 %1266, 63
  %1281 = trunc i64 %1280 to i8
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1281, i8* %1282, align 1
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1269, i8* %1283, align 1
  store %struct.Memory* %loadMem_44eb65, %struct.Memory** %MEMORY
  %loadMem_44eb6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1285 = getelementptr inbounds %struct.GPR, %struct.GPR* %1284, i32 0, i32 33
  %1286 = getelementptr inbounds %struct.Reg, %struct.Reg* %1285, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %1286 to i64*
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1288 = getelementptr inbounds %struct.GPR, %struct.GPR* %1287, i32 0, i32 1
  %1289 = getelementptr inbounds %struct.Reg, %struct.Reg* %1288, i32 0, i32 0
  %RAX.i1028 = bitcast %union.anon* %1289 to i64*
  %1290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1291 = getelementptr inbounds %struct.GPR, %struct.GPR* %1290, i32 0, i32 5
  %1292 = getelementptr inbounds %struct.Reg, %struct.Reg* %1291, i32 0, i32 0
  %RCX.i1029 = bitcast %union.anon* %1292 to i64*
  %1293 = load i64, i64* %RAX.i1028
  %1294 = load i64, i64* %RCX.i1029
  %1295 = load i64, i64* %PC.i1027
  %1296 = add i64 %1295, 3
  store i64 %1296, i64* %PC.i1027
  %1297 = add i64 %1294, %1293
  store i64 %1297, i64* %RAX.i1028, align 8
  %1298 = icmp ult i64 %1297, %1293
  %1299 = icmp ult i64 %1297, %1294
  %1300 = or i1 %1298, %1299
  %1301 = zext i1 %1300 to i8
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1301, i8* %1302, align 1
  %1303 = trunc i64 %1297 to i32
  %1304 = and i32 %1303, 255
  %1305 = call i32 @llvm.ctpop.i32(i32 %1304)
  %1306 = trunc i32 %1305 to i8
  %1307 = and i8 %1306, 1
  %1308 = xor i8 %1307, 1
  %1309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1308, i8* %1309, align 1
  %1310 = xor i64 %1294, %1293
  %1311 = xor i64 %1310, %1297
  %1312 = lshr i64 %1311, 4
  %1313 = trunc i64 %1312 to i8
  %1314 = and i8 %1313, 1
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1314, i8* %1315, align 1
  %1316 = icmp eq i64 %1297, 0
  %1317 = zext i1 %1316 to i8
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1317, i8* %1318, align 1
  %1319 = lshr i64 %1297, 63
  %1320 = trunc i64 %1319 to i8
  %1321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1320, i8* %1321, align 1
  %1322 = lshr i64 %1293, 63
  %1323 = lshr i64 %1294, 63
  %1324 = xor i64 %1319, %1322
  %1325 = xor i64 %1319, %1323
  %1326 = add i64 %1324, %1325
  %1327 = icmp eq i64 %1326, 2
  %1328 = zext i1 %1327 to i8
  %1329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1328, i8* %1329, align 1
  store %struct.Memory* %loadMem_44eb6c, %struct.Memory** %MEMORY
  %loadMem_44eb6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1331 = getelementptr inbounds %struct.GPR, %struct.GPR* %1330, i32 0, i32 33
  %1332 = getelementptr inbounds %struct.Reg, %struct.Reg* %1331, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %1332 to i64*
  %1333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1334 = getelementptr inbounds %struct.GPR, %struct.GPR* %1333, i32 0, i32 1
  %1335 = getelementptr inbounds %struct.Reg, %struct.Reg* %1334, i32 0, i32 0
  %RAX.i1025 = bitcast %union.anon* %1335 to i64*
  %1336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1337 = getelementptr inbounds %struct.GPR, %struct.GPR* %1336, i32 0, i32 7
  %1338 = getelementptr inbounds %struct.Reg, %struct.Reg* %1337, i32 0, i32 0
  %RDX.i1026 = bitcast %union.anon* %1338 to i64*
  %1339 = load i64, i64* %RAX.i1025
  %1340 = add i64 %1339, 412
  %1341 = load i64, i64* %PC.i1024
  %1342 = add i64 %1341, 6
  store i64 %1342, i64* %PC.i1024
  %1343 = inttoptr i64 %1340 to i32*
  %1344 = load i32, i32* %1343
  %1345 = zext i32 %1344 to i64
  store i64 %1345, i64* %RDX.i1026, align 8
  store %struct.Memory* %loadMem_44eb6f, %struct.Memory** %MEMORY
  %loadMem_44eb75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1347 = getelementptr inbounds %struct.GPR, %struct.GPR* %1346, i32 0, i32 33
  %1348 = getelementptr inbounds %struct.Reg, %struct.Reg* %1347, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %1348 to i64*
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1350 = getelementptr inbounds %struct.GPR, %struct.GPR* %1349, i32 0, i32 7
  %1351 = getelementptr inbounds %struct.Reg, %struct.Reg* %1350, i32 0, i32 0
  %EDX.i1022 = bitcast %union.anon* %1351 to i32*
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1353 = getelementptr inbounds %struct.GPR, %struct.GPR* %1352, i32 0, i32 15
  %1354 = getelementptr inbounds %struct.Reg, %struct.Reg* %1353, i32 0, i32 0
  %RBP.i1023 = bitcast %union.anon* %1354 to i64*
  %1355 = load i64, i64* %RBP.i1023
  %1356 = sub i64 %1355, 464
  %1357 = load i32, i32* %EDX.i1022
  %1358 = zext i32 %1357 to i64
  %1359 = load i64, i64* %PC.i1021
  %1360 = add i64 %1359, 6
  store i64 %1360, i64* %PC.i1021
  %1361 = inttoptr i64 %1356 to i32*
  store i32 %1357, i32* %1361
  store %struct.Memory* %loadMem_44eb75, %struct.Memory** %MEMORY
  %loadMem_44eb7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 33
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %1364 to i64*
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1366 = getelementptr inbounds %struct.GPR, %struct.GPR* %1365, i32 0, i32 7
  %1367 = getelementptr inbounds %struct.Reg, %struct.Reg* %1366, i32 0, i32 0
  %RDX.i1019 = bitcast %union.anon* %1367 to i64*
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1369 = getelementptr inbounds %struct.GPR, %struct.GPR* %1368, i32 0, i32 15
  %1370 = getelementptr inbounds %struct.Reg, %struct.Reg* %1369, i32 0, i32 0
  %RBP.i1020 = bitcast %union.anon* %1370 to i64*
  %1371 = load i64, i64* %RBP.i1020
  %1372 = sub i64 %1371, 436
  %1373 = load i64, i64* %PC.i1018
  %1374 = add i64 %1373, 6
  store i64 %1374, i64* %PC.i1018
  %1375 = inttoptr i64 %1372 to i32*
  %1376 = load i32, i32* %1375
  %1377 = zext i32 %1376 to i64
  store i64 %1377, i64* %RDX.i1019, align 8
  store %struct.Memory* %loadMem_44eb7b, %struct.Memory** %MEMORY
  %loadMem_44eb81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1379 = getelementptr inbounds %struct.GPR, %struct.GPR* %1378, i32 0, i32 33
  %1380 = getelementptr inbounds %struct.Reg, %struct.Reg* %1379, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %1380 to i64*
  %1381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1382 = getelementptr inbounds %struct.GPR, %struct.GPR* %1381, i32 0, i32 7
  %1383 = getelementptr inbounds %struct.Reg, %struct.Reg* %1382, i32 0, i32 0
  %EDX.i1016 = bitcast %union.anon* %1383 to i32*
  %1384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1385 = getelementptr inbounds %struct.GPR, %struct.GPR* %1384, i32 0, i32 15
  %1386 = getelementptr inbounds %struct.Reg, %struct.Reg* %1385, i32 0, i32 0
  %RBP.i1017 = bitcast %union.anon* %1386 to i64*
  %1387 = load i64, i64* %RBP.i1017
  %1388 = sub i64 %1387, 460
  %1389 = load i32, i32* %EDX.i1016
  %1390 = zext i32 %1389 to i64
  %1391 = load i64, i64* %PC.i1015
  %1392 = add i64 %1391, 6
  store i64 %1392, i64* %PC.i1015
  %1393 = inttoptr i64 %1388 to i32*
  store i32 %1389, i32* %1393
  store %struct.Memory* %loadMem_44eb81, %struct.Memory** %MEMORY
  br label %block_.L_44eb87

block_.L_44eb87:                                  ; preds = %block_44eb54, %block_44eb27
  %loadMem_44eb87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1395 = getelementptr inbounds %struct.GPR, %struct.GPR* %1394, i32 0, i32 33
  %1396 = getelementptr inbounds %struct.Reg, %struct.Reg* %1395, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %1396 to i64*
  %1397 = load i64, i64* %PC.i1014
  %1398 = add i64 %1397, 5
  %1399 = load i64, i64* %PC.i1014
  %1400 = add i64 %1399, 5
  store i64 %1400, i64* %PC.i1014
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1398, i64* %1401, align 8
  store %struct.Memory* %loadMem_44eb87, %struct.Memory** %MEMORY
  br label %block_.L_44eb8c

block_.L_44eb8c:                                  ; preds = %block_.L_44eb87
  %loadMem_44eb8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1403 = getelementptr inbounds %struct.GPR, %struct.GPR* %1402, i32 0, i32 33
  %1404 = getelementptr inbounds %struct.Reg, %struct.Reg* %1403, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %1404 to i64*
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1406 = getelementptr inbounds %struct.GPR, %struct.GPR* %1405, i32 0, i32 1
  %1407 = getelementptr inbounds %struct.Reg, %struct.Reg* %1406, i32 0, i32 0
  %RAX.i1012 = bitcast %union.anon* %1407 to i64*
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 15
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %RBP.i1013 = bitcast %union.anon* %1410 to i64*
  %1411 = load i64, i64* %RBP.i1013
  %1412 = sub i64 %1411, 436
  %1413 = load i64, i64* %PC.i1011
  %1414 = add i64 %1413, 6
  store i64 %1414, i64* %PC.i1011
  %1415 = inttoptr i64 %1412 to i32*
  %1416 = load i32, i32* %1415
  %1417 = zext i32 %1416 to i64
  store i64 %1417, i64* %RAX.i1012, align 8
  store %struct.Memory* %loadMem_44eb8c, %struct.Memory** %MEMORY
  %loadMem_44eb92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1419 = getelementptr inbounds %struct.GPR, %struct.GPR* %1418, i32 0, i32 33
  %1420 = getelementptr inbounds %struct.Reg, %struct.Reg* %1419, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %1420 to i64*
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1422 = getelementptr inbounds %struct.GPR, %struct.GPR* %1421, i32 0, i32 1
  %1423 = getelementptr inbounds %struct.Reg, %struct.Reg* %1422, i32 0, i32 0
  %RAX.i1010 = bitcast %union.anon* %1423 to i64*
  %1424 = load i64, i64* %RAX.i1010
  %1425 = load i64, i64* %PC.i1009
  %1426 = add i64 %1425, 3
  store i64 %1426, i64* %PC.i1009
  %1427 = trunc i64 %1424 to i32
  %1428 = add i32 1, %1427
  %1429 = zext i32 %1428 to i64
  store i64 %1429, i64* %RAX.i1010, align 8
  %1430 = icmp ult i32 %1428, %1427
  %1431 = icmp ult i32 %1428, 1
  %1432 = or i1 %1430, %1431
  %1433 = zext i1 %1432 to i8
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1433, i8* %1434, align 1
  %1435 = and i32 %1428, 255
  %1436 = call i32 @llvm.ctpop.i32(i32 %1435)
  %1437 = trunc i32 %1436 to i8
  %1438 = and i8 %1437, 1
  %1439 = xor i8 %1438, 1
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1439, i8* %1440, align 1
  %1441 = xor i64 1, %1424
  %1442 = trunc i64 %1441 to i32
  %1443 = xor i32 %1442, %1428
  %1444 = lshr i32 %1443, 4
  %1445 = trunc i32 %1444 to i8
  %1446 = and i8 %1445, 1
  %1447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1446, i8* %1447, align 1
  %1448 = icmp eq i32 %1428, 0
  %1449 = zext i1 %1448 to i8
  %1450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1449, i8* %1450, align 1
  %1451 = lshr i32 %1428, 31
  %1452 = trunc i32 %1451 to i8
  %1453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1452, i8* %1453, align 1
  %1454 = lshr i32 %1427, 31
  %1455 = xor i32 %1451, %1454
  %1456 = add i32 %1455, %1451
  %1457 = icmp eq i32 %1456, 2
  %1458 = zext i1 %1457 to i8
  %1459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1458, i8* %1459, align 1
  store %struct.Memory* %loadMem_44eb92, %struct.Memory** %MEMORY
  %loadMem_44eb95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1461 = getelementptr inbounds %struct.GPR, %struct.GPR* %1460, i32 0, i32 33
  %1462 = getelementptr inbounds %struct.Reg, %struct.Reg* %1461, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %1462 to i64*
  %1463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1464 = getelementptr inbounds %struct.GPR, %struct.GPR* %1463, i32 0, i32 1
  %1465 = getelementptr inbounds %struct.Reg, %struct.Reg* %1464, i32 0, i32 0
  %EAX.i1007 = bitcast %union.anon* %1465 to i32*
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1467 = getelementptr inbounds %struct.GPR, %struct.GPR* %1466, i32 0, i32 15
  %1468 = getelementptr inbounds %struct.Reg, %struct.Reg* %1467, i32 0, i32 0
  %RBP.i1008 = bitcast %union.anon* %1468 to i64*
  %1469 = load i64, i64* %RBP.i1008
  %1470 = sub i64 %1469, 436
  %1471 = load i32, i32* %EAX.i1007
  %1472 = zext i32 %1471 to i64
  %1473 = load i64, i64* %PC.i1006
  %1474 = add i64 %1473, 6
  store i64 %1474, i64* %PC.i1006
  %1475 = inttoptr i64 %1470 to i32*
  store i32 %1471, i32* %1475
  store %struct.Memory* %loadMem_44eb95, %struct.Memory** %MEMORY
  %loadMem_44eb9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1477 = getelementptr inbounds %struct.GPR, %struct.GPR* %1476, i32 0, i32 33
  %1478 = getelementptr inbounds %struct.Reg, %struct.Reg* %1477, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %1478 to i64*
  %1479 = load i64, i64* %PC.i1005
  %1480 = add i64 %1479, -135
  %1481 = load i64, i64* %PC.i1005
  %1482 = add i64 %1481, 5
  store i64 %1482, i64* %PC.i1005
  %1483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1480, i64* %1483, align 8
  store %struct.Memory* %loadMem_44eb9b, %struct.Memory** %MEMORY
  br label %block_.L_44eb14

block_.L_44eba0:                                  ; preds = %block_.L_44eb14
  %loadMem_44eba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1485 = getelementptr inbounds %struct.GPR, %struct.GPR* %1484, i32 0, i32 33
  %1486 = getelementptr inbounds %struct.Reg, %struct.Reg* %1485, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %1486 to i64*
  %1487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1488 = getelementptr inbounds %struct.GPR, %struct.GPR* %1487, i32 0, i32 15
  %1489 = getelementptr inbounds %struct.Reg, %struct.Reg* %1488, i32 0, i32 0
  %RBP.i1004 = bitcast %union.anon* %1489 to i64*
  %1490 = load i64, i64* %RBP.i1004
  %1491 = sub i64 %1490, 460
  %1492 = load i64, i64* %PC.i1003
  %1493 = add i64 %1492, 7
  store i64 %1493, i64* %PC.i1003
  %1494 = inttoptr i64 %1491 to i32*
  %1495 = load i32, i32* %1494
  %1496 = sub i32 %1495, -1
  %1497 = icmp ult i32 %1495, -1
  %1498 = zext i1 %1497 to i8
  %1499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1498, i8* %1499, align 1
  %1500 = and i32 %1496, 255
  %1501 = call i32 @llvm.ctpop.i32(i32 %1500)
  %1502 = trunc i32 %1501 to i8
  %1503 = and i8 %1502, 1
  %1504 = xor i8 %1503, 1
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1504, i8* %1505, align 1
  %1506 = xor i32 %1495, -1
  %1507 = xor i32 %1506, %1496
  %1508 = lshr i32 %1507, 4
  %1509 = trunc i32 %1508 to i8
  %1510 = and i8 %1509, 1
  %1511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1510, i8* %1511, align 1
  %1512 = icmp eq i32 %1496, 0
  %1513 = zext i1 %1512 to i8
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1513, i8* %1514, align 1
  %1515 = lshr i32 %1496, 31
  %1516 = trunc i32 %1515 to i8
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1516, i8* %1517, align 1
  %1518 = lshr i32 %1495, 31
  %1519 = xor i32 %1518, 1
  %1520 = xor i32 %1515, %1518
  %1521 = add i32 %1520, %1519
  %1522 = icmp eq i32 %1521, 2
  %1523 = zext i1 %1522 to i8
  %1524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1523, i8* %1524, align 1
  store %struct.Memory* %loadMem_44eba0, %struct.Memory** %MEMORY
  %loadMem_44eba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1526 = getelementptr inbounds %struct.GPR, %struct.GPR* %1525, i32 0, i32 33
  %1527 = getelementptr inbounds %struct.Reg, %struct.Reg* %1526, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %1527 to i64*
  %1528 = load i64, i64* %PC.i1002
  %1529 = add i64 %1528, 120
  %1530 = load i64, i64* %PC.i1002
  %1531 = add i64 %1530, 6
  %1532 = load i64, i64* %PC.i1002
  %1533 = add i64 %1532, 6
  store i64 %1533, i64* %PC.i1002
  %1534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1535 = load i8, i8* %1534, align 1
  store i8 %1535, i8* %BRANCH_TAKEN, align 1
  %1536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1537 = icmp ne i8 %1535, 0
  %1538 = select i1 %1537, i64 %1529, i64 %1531
  store i64 %1538, i64* %1536, align 8
  store %struct.Memory* %loadMem_44eba7, %struct.Memory** %MEMORY
  %loadBr_44eba7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44eba7 = icmp eq i8 %loadBr_44eba7, 1
  br i1 %cmpBr_44eba7, label %block_.L_44ec1f, label %block_44ebad

block_44ebad:                                     ; preds = %block_.L_44eba0
  %loadMem_44ebad = load %struct.Memory*, %struct.Memory** %MEMORY
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1540 = getelementptr inbounds %struct.GPR, %struct.GPR* %1539, i32 0, i32 33
  %1541 = getelementptr inbounds %struct.Reg, %struct.Reg* %1540, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %1541 to i64*
  %1542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1543 = getelementptr inbounds %struct.GPR, %struct.GPR* %1542, i32 0, i32 1
  %1544 = getelementptr inbounds %struct.Reg, %struct.Reg* %1543, i32 0, i32 0
  %RAX.i1000 = bitcast %union.anon* %1544 to i64*
  %1545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1546 = getelementptr inbounds %struct.GPR, %struct.GPR* %1545, i32 0, i32 15
  %1547 = getelementptr inbounds %struct.Reg, %struct.Reg* %1546, i32 0, i32 0
  %RBP.i1001 = bitcast %union.anon* %1547 to i64*
  %1548 = load i64, i64* %RBP.i1001
  %1549 = sub i64 %1548, 460
  %1550 = load i64, i64* %PC.i999
  %1551 = add i64 %1550, 6
  store i64 %1551, i64* %PC.i999
  %1552 = inttoptr i64 %1549 to i32*
  %1553 = load i32, i32* %1552
  %1554 = zext i32 %1553 to i64
  store i64 %1554, i64* %RAX.i1000, align 8
  store %struct.Memory* %loadMem_44ebad, %struct.Memory** %MEMORY
  %loadMem_44ebb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1556 = getelementptr inbounds %struct.GPR, %struct.GPR* %1555, i32 0, i32 33
  %1557 = getelementptr inbounds %struct.Reg, %struct.Reg* %1556, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %1557 to i64*
  %1558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1559 = getelementptr inbounds %struct.GPR, %struct.GPR* %1558, i32 0, i32 5
  %1560 = getelementptr inbounds %struct.Reg, %struct.Reg* %1559, i32 0, i32 0
  %RCX.i998 = bitcast %union.anon* %1560 to i64*
  %1561 = load i64, i64* %PC.i997
  %1562 = add i64 %1561, 7
  store i64 %1562, i64* %PC.i997
  %1563 = load i32, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  %1564 = zext i32 %1563 to i64
  store i64 %1564, i64* %RCX.i998, align 8
  store %struct.Memory* %loadMem_44ebb3, %struct.Memory** %MEMORY
  %loadMem_44ebba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1566 = getelementptr inbounds %struct.GPR, %struct.GPR* %1565, i32 0, i32 33
  %1567 = getelementptr inbounds %struct.Reg, %struct.Reg* %1566, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %1567 to i64*
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1569 = getelementptr inbounds %struct.GPR, %struct.GPR* %1568, i32 0, i32 5
  %1570 = getelementptr inbounds %struct.Reg, %struct.Reg* %1569, i32 0, i32 0
  %RCX.i996 = bitcast %union.anon* %1570 to i64*
  %1571 = load i64, i64* %RCX.i996
  %1572 = load i64, i64* %PC.i995
  %1573 = add i64 %1572, 3
  store i64 %1573, i64* %PC.i995
  %1574 = trunc i64 %1571 to i32
  %1575 = sub i32 %1574, 1
  %1576 = zext i32 %1575 to i64
  store i64 %1576, i64* %RCX.i996, align 8
  %1577 = icmp ult i32 %1574, 1
  %1578 = zext i1 %1577 to i8
  %1579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1578, i8* %1579, align 1
  %1580 = and i32 %1575, 255
  %1581 = call i32 @llvm.ctpop.i32(i32 %1580)
  %1582 = trunc i32 %1581 to i8
  %1583 = and i8 %1582, 1
  %1584 = xor i8 %1583, 1
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1584, i8* %1585, align 1
  %1586 = xor i64 1, %1571
  %1587 = trunc i64 %1586 to i32
  %1588 = xor i32 %1587, %1575
  %1589 = lshr i32 %1588, 4
  %1590 = trunc i32 %1589 to i8
  %1591 = and i8 %1590, 1
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1591, i8* %1592, align 1
  %1593 = icmp eq i32 %1575, 0
  %1594 = zext i1 %1593 to i8
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1594, i8* %1595, align 1
  %1596 = lshr i32 %1575, 31
  %1597 = trunc i32 %1596 to i8
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1597, i8* %1598, align 1
  %1599 = lshr i32 %1574, 31
  %1600 = xor i32 %1596, %1599
  %1601 = add i32 %1600, %1599
  %1602 = icmp eq i32 %1601, 2
  %1603 = zext i1 %1602 to i8
  %1604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1603, i8* %1604, align 1
  store %struct.Memory* %loadMem_44ebba, %struct.Memory** %MEMORY
  %loadMem_44ebbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1606 = getelementptr inbounds %struct.GPR, %struct.GPR* %1605, i32 0, i32 33
  %1607 = getelementptr inbounds %struct.Reg, %struct.Reg* %1606, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %1607 to i64*
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1609 = getelementptr inbounds %struct.GPR, %struct.GPR* %1608, i32 0, i32 1
  %1610 = getelementptr inbounds %struct.Reg, %struct.Reg* %1609, i32 0, i32 0
  %EAX.i993 = bitcast %union.anon* %1610 to i32*
  %1611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1612 = getelementptr inbounds %struct.GPR, %struct.GPR* %1611, i32 0, i32 5
  %1613 = getelementptr inbounds %struct.Reg, %struct.Reg* %1612, i32 0, i32 0
  %ECX.i994 = bitcast %union.anon* %1613 to i32*
  %1614 = load i32, i32* %EAX.i993
  %1615 = zext i32 %1614 to i64
  %1616 = load i32, i32* %ECX.i994
  %1617 = zext i32 %1616 to i64
  %1618 = load i64, i64* %PC.i992
  %1619 = add i64 %1618, 2
  store i64 %1619, i64* %PC.i992
  %1620 = sub i32 %1614, %1616
  %1621 = icmp ult i32 %1614, %1616
  %1622 = zext i1 %1621 to i8
  %1623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1622, i8* %1623, align 1
  %1624 = and i32 %1620, 255
  %1625 = call i32 @llvm.ctpop.i32(i32 %1624)
  %1626 = trunc i32 %1625 to i8
  %1627 = and i8 %1626, 1
  %1628 = xor i8 %1627, 1
  %1629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1628, i8* %1629, align 1
  %1630 = xor i64 %1617, %1615
  %1631 = trunc i64 %1630 to i32
  %1632 = xor i32 %1631, %1620
  %1633 = lshr i32 %1632, 4
  %1634 = trunc i32 %1633 to i8
  %1635 = and i8 %1634, 1
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1635, i8* %1636, align 1
  %1637 = icmp eq i32 %1620, 0
  %1638 = zext i1 %1637 to i8
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1638, i8* %1639, align 1
  %1640 = lshr i32 %1620, 31
  %1641 = trunc i32 %1640 to i8
  %1642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1641, i8* %1642, align 1
  %1643 = lshr i32 %1614, 31
  %1644 = lshr i32 %1616, 31
  %1645 = xor i32 %1644, %1643
  %1646 = xor i32 %1640, %1643
  %1647 = add i32 %1646, %1645
  %1648 = icmp eq i32 %1647, 2
  %1649 = zext i1 %1648 to i8
  %1650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1649, i8* %1650, align 1
  store %struct.Memory* %loadMem_44ebbd, %struct.Memory** %MEMORY
  %loadMem_44ebbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1652 = getelementptr inbounds %struct.GPR, %struct.GPR* %1651, i32 0, i32 33
  %1653 = getelementptr inbounds %struct.Reg, %struct.Reg* %1652, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %1653 to i64*
  %1654 = load i64, i64* %PC.i991
  %1655 = add i64 %1654, 74
  %1656 = load i64, i64* %PC.i991
  %1657 = add i64 %1656, 6
  %1658 = load i64, i64* %PC.i991
  %1659 = add i64 %1658, 6
  store i64 %1659, i64* %PC.i991
  %1660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1661 = load i8, i8* %1660, align 1
  %1662 = icmp ne i8 %1661, 0
  %1663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1664 = load i8, i8* %1663, align 1
  %1665 = icmp ne i8 %1664, 0
  %1666 = xor i1 %1662, %1665
  %1667 = xor i1 %1666, true
  %1668 = zext i1 %1667 to i8
  store i8 %1668, i8* %BRANCH_TAKEN, align 1
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1670 = select i1 %1666, i64 %1657, i64 %1655
  store i64 %1670, i64* %1669, align 8
  store %struct.Memory* %loadMem_44ebbf, %struct.Memory** %MEMORY
  %loadBr_44ebbf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ebbf = icmp eq i8 %loadBr_44ebbf, 1
  br i1 %cmpBr_44ebbf, label %block_.L_44ec09, label %block_44ebc5

block_44ebc5:                                     ; preds = %block_44ebad
  %loadMem_44ebc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1672 = getelementptr inbounds %struct.GPR, %struct.GPR* %1671, i32 0, i32 33
  %1673 = getelementptr inbounds %struct.Reg, %struct.Reg* %1672, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %1673 to i64*
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1675 = getelementptr inbounds %struct.GPR, %struct.GPR* %1674, i32 0, i32 1
  %1676 = getelementptr inbounds %struct.Reg, %struct.Reg* %1675, i32 0, i32 0
  %RAX.i990 = bitcast %union.anon* %1676 to i64*
  %1677 = load i64, i64* %PC.i989
  %1678 = add i64 %1677, 5
  store i64 %1678, i64* %PC.i989
  store i64 476, i64* %RAX.i990, align 8
  store %struct.Memory* %loadMem_44ebc5, %struct.Memory** %MEMORY
  %loadMem_44ebca = load %struct.Memory*, %struct.Memory** %MEMORY
  %1679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1680 = getelementptr inbounds %struct.GPR, %struct.GPR* %1679, i32 0, i32 33
  %1681 = getelementptr inbounds %struct.Reg, %struct.Reg* %1680, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %1681 to i64*
  %1682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1683 = getelementptr inbounds %struct.GPR, %struct.GPR* %1682, i32 0, i32 1
  %1684 = getelementptr inbounds %struct.Reg, %struct.Reg* %1683, i32 0, i32 0
  %EAX.i987 = bitcast %union.anon* %1684 to i32*
  %1685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1686 = getelementptr inbounds %struct.GPR, %struct.GPR* %1685, i32 0, i32 7
  %1687 = getelementptr inbounds %struct.Reg, %struct.Reg* %1686, i32 0, i32 0
  %RDX.i988 = bitcast %union.anon* %1687 to i64*
  %1688 = load i32, i32* %EAX.i987
  %1689 = zext i32 %1688 to i64
  %1690 = load i64, i64* %PC.i986
  %1691 = add i64 %1690, 2
  store i64 %1691, i64* %PC.i986
  %1692 = and i64 %1689, 4294967295
  store i64 %1692, i64* %RDX.i988, align 8
  store %struct.Memory* %loadMem_44ebca, %struct.Memory** %MEMORY
  %loadMem_44ebcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1694 = getelementptr inbounds %struct.GPR, %struct.GPR* %1693, i32 0, i32 33
  %1695 = getelementptr inbounds %struct.Reg, %struct.Reg* %1694, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %1695 to i64*
  %1696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1697 = getelementptr inbounds %struct.GPR, %struct.GPR* %1696, i32 0, i32 5
  %1698 = getelementptr inbounds %struct.Reg, %struct.Reg* %1697, i32 0, i32 0
  %RCX.i985 = bitcast %union.anon* %1698 to i64*
  %1699 = load i64, i64* %PC.i984
  %1700 = add i64 %1699, 10
  store i64 %1700, i64* %PC.i984
  store i64 ptrtoint (%G__0xac5d30_type* @G__0xac5d30 to i64), i64* %RCX.i985, align 8
  store %struct.Memory* %loadMem_44ebcc, %struct.Memory** %MEMORY
  %loadMem_44ebd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1702 = getelementptr inbounds %struct.GPR, %struct.GPR* %1701, i32 0, i32 33
  %1703 = getelementptr inbounds %struct.Reg, %struct.Reg* %1702, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %1703 to i64*
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1705 = getelementptr inbounds %struct.GPR, %struct.GPR* %1704, i32 0, i32 9
  %1706 = getelementptr inbounds %struct.Reg, %struct.Reg* %1705, i32 0, i32 0
  %RSI.i982 = bitcast %union.anon* %1706 to i64*
  %1707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1708 = getelementptr inbounds %struct.GPR, %struct.GPR* %1707, i32 0, i32 15
  %1709 = getelementptr inbounds %struct.Reg, %struct.Reg* %1708, i32 0, i32 0
  %RBP.i983 = bitcast %union.anon* %1709 to i64*
  %1710 = load i64, i64* %RBP.i983
  %1711 = sub i64 %1710, 460
  %1712 = load i64, i64* %PC.i981
  %1713 = add i64 %1712, 7
  store i64 %1713, i64* %PC.i981
  %1714 = inttoptr i64 %1711 to i32*
  %1715 = load i32, i32* %1714
  %1716 = sext i32 %1715 to i64
  store i64 %1716, i64* %RSI.i982, align 8
  store %struct.Memory* %loadMem_44ebd6, %struct.Memory** %MEMORY
  %loadMem_44ebdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1718 = getelementptr inbounds %struct.GPR, %struct.GPR* %1717, i32 0, i32 33
  %1719 = getelementptr inbounds %struct.Reg, %struct.Reg* %1718, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %1719 to i64*
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1721 = getelementptr inbounds %struct.GPR, %struct.GPR* %1720, i32 0, i32 9
  %1722 = getelementptr inbounds %struct.Reg, %struct.Reg* %1721, i32 0, i32 0
  %RSI.i980 = bitcast %union.anon* %1722 to i64*
  %1723 = load i64, i64* %RSI.i980
  %1724 = load i64, i64* %PC.i979
  %1725 = add i64 %1724, 7
  store i64 %1725, i64* %PC.i979
  %1726 = sext i64 %1723 to i128
  %1727 = and i128 %1726, -18446744073709551616
  %1728 = zext i64 %1723 to i128
  %1729 = or i128 %1727, %1728
  %1730 = mul i128 476, %1729
  %1731 = trunc i128 %1730 to i64
  store i64 %1731, i64* %RSI.i980, align 8
  %1732 = sext i64 %1731 to i128
  %1733 = icmp ne i128 %1732, %1730
  %1734 = zext i1 %1733 to i8
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1734, i8* %1735, align 1
  %1736 = trunc i128 %1730 to i32
  %1737 = and i32 %1736, 255
  %1738 = call i32 @llvm.ctpop.i32(i32 %1737)
  %1739 = trunc i32 %1738 to i8
  %1740 = and i8 %1739, 1
  %1741 = xor i8 %1740, 1
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1741, i8* %1742, align 1
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1743, align 1
  %1744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1744, align 1
  %1745 = lshr i64 %1731, 63
  %1746 = trunc i64 %1745 to i8
  %1747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1746, i8* %1747, align 1
  %1748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1734, i8* %1748, align 1
  store %struct.Memory* %loadMem_44ebdd, %struct.Memory** %MEMORY
  %loadMem_44ebe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1750 = getelementptr inbounds %struct.GPR, %struct.GPR* %1749, i32 0, i32 33
  %1751 = getelementptr inbounds %struct.Reg, %struct.Reg* %1750, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %1751 to i64*
  %1752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1753 = getelementptr inbounds %struct.GPR, %struct.GPR* %1752, i32 0, i32 5
  %1754 = getelementptr inbounds %struct.Reg, %struct.Reg* %1753, i32 0, i32 0
  %RCX.i977 = bitcast %union.anon* %1754 to i64*
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1756 = getelementptr inbounds %struct.GPR, %struct.GPR* %1755, i32 0, i32 11
  %1757 = getelementptr inbounds %struct.Reg, %struct.Reg* %1756, i32 0, i32 0
  %RDI.i978 = bitcast %union.anon* %1757 to i64*
  %1758 = load i64, i64* %RCX.i977
  %1759 = load i64, i64* %PC.i976
  %1760 = add i64 %1759, 3
  store i64 %1760, i64* %PC.i976
  store i64 %1758, i64* %RDI.i978, align 8
  store %struct.Memory* %loadMem_44ebe4, %struct.Memory** %MEMORY
  %loadMem_44ebe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1762 = getelementptr inbounds %struct.GPR, %struct.GPR* %1761, i32 0, i32 33
  %1763 = getelementptr inbounds %struct.Reg, %struct.Reg* %1762, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %1763 to i64*
  %1764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1765 = getelementptr inbounds %struct.GPR, %struct.GPR* %1764, i32 0, i32 9
  %1766 = getelementptr inbounds %struct.Reg, %struct.Reg* %1765, i32 0, i32 0
  %RSI.i974 = bitcast %union.anon* %1766 to i64*
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1768 = getelementptr inbounds %struct.GPR, %struct.GPR* %1767, i32 0, i32 11
  %1769 = getelementptr inbounds %struct.Reg, %struct.Reg* %1768, i32 0, i32 0
  %RDI.i975 = bitcast %union.anon* %1769 to i64*
  %1770 = load i64, i64* %RDI.i975
  %1771 = load i64, i64* %RSI.i974
  %1772 = load i64, i64* %PC.i973
  %1773 = add i64 %1772, 3
  store i64 %1773, i64* %PC.i973
  %1774 = add i64 %1771, %1770
  store i64 %1774, i64* %RDI.i975, align 8
  %1775 = icmp ult i64 %1774, %1770
  %1776 = icmp ult i64 %1774, %1771
  %1777 = or i1 %1775, %1776
  %1778 = zext i1 %1777 to i8
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1778, i8* %1779, align 1
  %1780 = trunc i64 %1774 to i32
  %1781 = and i32 %1780, 255
  %1782 = call i32 @llvm.ctpop.i32(i32 %1781)
  %1783 = trunc i32 %1782 to i8
  %1784 = and i8 %1783, 1
  %1785 = xor i8 %1784, 1
  %1786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1785, i8* %1786, align 1
  %1787 = xor i64 %1771, %1770
  %1788 = xor i64 %1787, %1774
  %1789 = lshr i64 %1788, 4
  %1790 = trunc i64 %1789 to i8
  %1791 = and i8 %1790, 1
  %1792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1791, i8* %1792, align 1
  %1793 = icmp eq i64 %1774, 0
  %1794 = zext i1 %1793 to i8
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1794, i8* %1795, align 1
  %1796 = lshr i64 %1774, 63
  %1797 = trunc i64 %1796 to i8
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1797, i8* %1798, align 1
  %1799 = lshr i64 %1770, 63
  %1800 = lshr i64 %1771, 63
  %1801 = xor i64 %1796, %1799
  %1802 = xor i64 %1796, %1800
  %1803 = add i64 %1801, %1802
  %1804 = icmp eq i64 %1803, 2
  %1805 = zext i1 %1804 to i8
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1805, i8* %1806, align 1
  store %struct.Memory* %loadMem_44ebe7, %struct.Memory** %MEMORY
  %loadMem_44ebea = load %struct.Memory*, %struct.Memory** %MEMORY
  %1807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1808 = getelementptr inbounds %struct.GPR, %struct.GPR* %1807, i32 0, i32 33
  %1809 = getelementptr inbounds %struct.Reg, %struct.Reg* %1808, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %1809 to i64*
  %1810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1811 = getelementptr inbounds %struct.GPR, %struct.GPR* %1810, i32 0, i32 1
  %1812 = getelementptr inbounds %struct.Reg, %struct.Reg* %1811, i32 0, i32 0
  %RAX.i972 = bitcast %union.anon* %1812 to i64*
  %1813 = load i64, i64* %PC.i971
  %1814 = add i64 %1813, 7
  store i64 %1814, i64* %PC.i971
  %1815 = load i32, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  %1816 = zext i32 %1815 to i64
  store i64 %1816, i64* %RAX.i972, align 8
  store %struct.Memory* %loadMem_44ebea, %struct.Memory** %MEMORY
  %loadMem_44ebf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1818 = getelementptr inbounds %struct.GPR, %struct.GPR* %1817, i32 0, i32 33
  %1819 = getelementptr inbounds %struct.Reg, %struct.Reg* %1818, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %1819 to i64*
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1821 = getelementptr inbounds %struct.GPR, %struct.GPR* %1820, i32 0, i32 1
  %1822 = getelementptr inbounds %struct.Reg, %struct.Reg* %1821, i32 0, i32 0
  %RAX.i970 = bitcast %union.anon* %1822 to i64*
  %1823 = load i64, i64* %RAX.i970
  %1824 = load i64, i64* %PC.i969
  %1825 = add i64 %1824, 3
  store i64 %1825, i64* %PC.i969
  %1826 = trunc i64 %1823 to i32
  %1827 = sub i32 %1826, 1
  %1828 = zext i32 %1827 to i64
  store i64 %1828, i64* %RAX.i970, align 8
  %1829 = icmp ult i32 %1826, 1
  %1830 = zext i1 %1829 to i8
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1830, i8* %1831, align 1
  %1832 = and i32 %1827, 255
  %1833 = call i32 @llvm.ctpop.i32(i32 %1832)
  %1834 = trunc i32 %1833 to i8
  %1835 = and i8 %1834, 1
  %1836 = xor i8 %1835, 1
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1836, i8* %1837, align 1
  %1838 = xor i64 1, %1823
  %1839 = trunc i64 %1838 to i32
  %1840 = xor i32 %1839, %1827
  %1841 = lshr i32 %1840, 4
  %1842 = trunc i32 %1841 to i8
  %1843 = and i8 %1842, 1
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1843, i8* %1844, align 1
  %1845 = icmp eq i32 %1827, 0
  %1846 = zext i1 %1845 to i8
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1846, i8* %1847, align 1
  %1848 = lshr i32 %1827, 31
  %1849 = trunc i32 %1848 to i8
  %1850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1849, i8* %1850, align 1
  %1851 = lshr i32 %1826, 31
  %1852 = xor i32 %1848, %1851
  %1853 = add i32 %1852, %1851
  %1854 = icmp eq i32 %1853, 2
  %1855 = zext i1 %1854 to i8
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1855, i8* %1856, align 1
  store %struct.Memory* %loadMem_44ebf1, %struct.Memory** %MEMORY
  %loadMem_44ebf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1858 = getelementptr inbounds %struct.GPR, %struct.GPR* %1857, i32 0, i32 33
  %1859 = getelementptr inbounds %struct.Reg, %struct.Reg* %1858, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %1859 to i64*
  %1860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1861 = getelementptr inbounds %struct.GPR, %struct.GPR* %1860, i32 0, i32 1
  %1862 = getelementptr inbounds %struct.Reg, %struct.Reg* %1861, i32 0, i32 0
  %EAX.i967 = bitcast %union.anon* %1862 to i32*
  %1863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1864 = getelementptr inbounds %struct.GPR, %struct.GPR* %1863, i32 0, i32 9
  %1865 = getelementptr inbounds %struct.Reg, %struct.Reg* %1864, i32 0, i32 0
  %RSI.i968 = bitcast %union.anon* %1865 to i64*
  %1866 = load i32, i32* %EAX.i967
  %1867 = zext i32 %1866 to i64
  %1868 = load i64, i64* %PC.i966
  %1869 = add i64 %1868, 3
  store i64 %1869, i64* %PC.i966
  %1870 = shl i64 %1867, 32
  %1871 = ashr exact i64 %1870, 32
  store i64 %1871, i64* %RSI.i968, align 8
  store %struct.Memory* %loadMem_44ebf4, %struct.Memory** %MEMORY
  %loadMem_44ebf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1873 = getelementptr inbounds %struct.GPR, %struct.GPR* %1872, i32 0, i32 33
  %1874 = getelementptr inbounds %struct.Reg, %struct.Reg* %1873, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %1874 to i64*
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1876 = getelementptr inbounds %struct.GPR, %struct.GPR* %1875, i32 0, i32 9
  %1877 = getelementptr inbounds %struct.Reg, %struct.Reg* %1876, i32 0, i32 0
  %RSI.i965 = bitcast %union.anon* %1877 to i64*
  %1878 = load i64, i64* %RSI.i965
  %1879 = load i64, i64* %PC.i964
  %1880 = add i64 %1879, 7
  store i64 %1880, i64* %PC.i964
  %1881 = sext i64 %1878 to i128
  %1882 = and i128 %1881, -18446744073709551616
  %1883 = zext i64 %1878 to i128
  %1884 = or i128 %1882, %1883
  %1885 = mul i128 476, %1884
  %1886 = trunc i128 %1885 to i64
  store i64 %1886, i64* %RSI.i965, align 8
  %1887 = sext i64 %1886 to i128
  %1888 = icmp ne i128 %1887, %1885
  %1889 = zext i1 %1888 to i8
  %1890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1889, i8* %1890, align 1
  %1891 = trunc i128 %1885 to i32
  %1892 = and i32 %1891, 255
  %1893 = call i32 @llvm.ctpop.i32(i32 %1892)
  %1894 = trunc i32 %1893 to i8
  %1895 = and i8 %1894, 1
  %1896 = xor i8 %1895, 1
  %1897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1896, i8* %1897, align 1
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1898, align 1
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1899, align 1
  %1900 = lshr i64 %1886, 63
  %1901 = trunc i64 %1900 to i8
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1901, i8* %1902, align 1
  %1903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1889, i8* %1903, align 1
  store %struct.Memory* %loadMem_44ebf7, %struct.Memory** %MEMORY
  %loadMem_44ebfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1905 = getelementptr inbounds %struct.GPR, %struct.GPR* %1904, i32 0, i32 33
  %1906 = getelementptr inbounds %struct.Reg, %struct.Reg* %1905, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %1906 to i64*
  %1907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1908 = getelementptr inbounds %struct.GPR, %struct.GPR* %1907, i32 0, i32 5
  %1909 = getelementptr inbounds %struct.Reg, %struct.Reg* %1908, i32 0, i32 0
  %RCX.i962 = bitcast %union.anon* %1909 to i64*
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1911 = getelementptr inbounds %struct.GPR, %struct.GPR* %1910, i32 0, i32 9
  %1912 = getelementptr inbounds %struct.Reg, %struct.Reg* %1911, i32 0, i32 0
  %RSI.i963 = bitcast %union.anon* %1912 to i64*
  %1913 = load i64, i64* %RCX.i962
  %1914 = load i64, i64* %RSI.i963
  %1915 = load i64, i64* %PC.i961
  %1916 = add i64 %1915, 3
  store i64 %1916, i64* %PC.i961
  %1917 = add i64 %1914, %1913
  store i64 %1917, i64* %RCX.i962, align 8
  %1918 = icmp ult i64 %1917, %1913
  %1919 = icmp ult i64 %1917, %1914
  %1920 = or i1 %1918, %1919
  %1921 = zext i1 %1920 to i8
  %1922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1921, i8* %1922, align 1
  %1923 = trunc i64 %1917 to i32
  %1924 = and i32 %1923, 255
  %1925 = call i32 @llvm.ctpop.i32(i32 %1924)
  %1926 = trunc i32 %1925 to i8
  %1927 = and i8 %1926, 1
  %1928 = xor i8 %1927, 1
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1928, i8* %1929, align 1
  %1930 = xor i64 %1914, %1913
  %1931 = xor i64 %1930, %1917
  %1932 = lshr i64 %1931, 4
  %1933 = trunc i64 %1932 to i8
  %1934 = and i8 %1933, 1
  %1935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1934, i8* %1935, align 1
  %1936 = icmp eq i64 %1917, 0
  %1937 = zext i1 %1936 to i8
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1937, i8* %1938, align 1
  %1939 = lshr i64 %1917, 63
  %1940 = trunc i64 %1939 to i8
  %1941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1940, i8* %1941, align 1
  %1942 = lshr i64 %1913, 63
  %1943 = lshr i64 %1914, 63
  %1944 = xor i64 %1939, %1942
  %1945 = xor i64 %1939, %1943
  %1946 = add i64 %1944, %1945
  %1947 = icmp eq i64 %1946, 2
  %1948 = zext i1 %1947 to i8
  %1949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1948, i8* %1949, align 1
  store %struct.Memory* %loadMem_44ebfe, %struct.Memory** %MEMORY
  %loadMem_44ec01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1951 = getelementptr inbounds %struct.GPR, %struct.GPR* %1950, i32 0, i32 33
  %1952 = getelementptr inbounds %struct.Reg, %struct.Reg* %1951, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %1952 to i64*
  %1953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1954 = getelementptr inbounds %struct.GPR, %struct.GPR* %1953, i32 0, i32 5
  %1955 = getelementptr inbounds %struct.Reg, %struct.Reg* %1954, i32 0, i32 0
  %RCX.i959 = bitcast %union.anon* %1955 to i64*
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1957 = getelementptr inbounds %struct.GPR, %struct.GPR* %1956, i32 0, i32 9
  %1958 = getelementptr inbounds %struct.Reg, %struct.Reg* %1957, i32 0, i32 0
  %RSI.i960 = bitcast %union.anon* %1958 to i64*
  %1959 = load i64, i64* %RCX.i959
  %1960 = load i64, i64* %PC.i958
  %1961 = add i64 %1960, 3
  store i64 %1961, i64* %PC.i958
  store i64 %1959, i64* %RSI.i960, align 8
  store %struct.Memory* %loadMem_44ec01, %struct.Memory** %MEMORY
  %loadMem1_44ec04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1963 = getelementptr inbounds %struct.GPR, %struct.GPR* %1962, i32 0, i32 33
  %1964 = getelementptr inbounds %struct.Reg, %struct.Reg* %1963, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %1964 to i64*
  %1965 = load i64, i64* %PC.i957
  %1966 = add i64 %1965, -318228
  %1967 = load i64, i64* %PC.i957
  %1968 = add i64 %1967, 5
  %1969 = load i64, i64* %PC.i957
  %1970 = add i64 %1969, 5
  store i64 %1970, i64* %PC.i957
  %1971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1972 = load i64, i64* %1971, align 8
  %1973 = add i64 %1972, -8
  %1974 = inttoptr i64 %1973 to i64*
  store i64 %1968, i64* %1974
  store i64 %1973, i64* %1971, align 8
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1966, i64* %1975, align 8
  store %struct.Memory* %loadMem1_44ec04, %struct.Memory** %MEMORY
  %loadMem2_44ec04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44ec04 = load i64, i64* %3
  %1976 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %loadMem2_44ec04)
  store %struct.Memory* %1976, %struct.Memory** %MEMORY
  br label %block_.L_44ec09

block_.L_44ec09:                                  ; preds = %block_44ebc5, %block_44ebad
  %loadMem_44ec09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1978 = getelementptr inbounds %struct.GPR, %struct.GPR* %1977, i32 0, i32 33
  %1979 = getelementptr inbounds %struct.Reg, %struct.Reg* %1978, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %1979 to i64*
  %1980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1981 = getelementptr inbounds %struct.GPR, %struct.GPR* %1980, i32 0, i32 1
  %1982 = getelementptr inbounds %struct.Reg, %struct.Reg* %1981, i32 0, i32 0
  %RAX.i953 = bitcast %union.anon* %1982 to i64*
  %1983 = load i64, i64* %PC.i952
  %1984 = add i64 %1983, 7
  store i64 %1984, i64* %PC.i952
  %1985 = load i32, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  %1986 = zext i32 %1985 to i64
  store i64 %1986, i64* %RAX.i953, align 8
  store %struct.Memory* %loadMem_44ec09, %struct.Memory** %MEMORY
  %loadMem_44ec10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1988 = getelementptr inbounds %struct.GPR, %struct.GPR* %1987, i32 0, i32 33
  %1989 = getelementptr inbounds %struct.Reg, %struct.Reg* %1988, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %1989 to i64*
  %1990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1991 = getelementptr inbounds %struct.GPR, %struct.GPR* %1990, i32 0, i32 1
  %1992 = getelementptr inbounds %struct.Reg, %struct.Reg* %1991, i32 0, i32 0
  %RAX.i951 = bitcast %union.anon* %1992 to i64*
  %1993 = load i64, i64* %RAX.i951
  %1994 = load i64, i64* %PC.i950
  %1995 = add i64 %1994, 3
  store i64 %1995, i64* %PC.i950
  %1996 = trunc i64 %1993 to i32
  %1997 = add i32 -1, %1996
  %1998 = zext i32 %1997 to i64
  store i64 %1998, i64* %RAX.i951, align 8
  %1999 = icmp ult i32 %1997, %1996
  %2000 = icmp ult i32 %1997, -1
  %2001 = or i1 %1999, %2000
  %2002 = zext i1 %2001 to i8
  %2003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2002, i8* %2003, align 1
  %2004 = and i32 %1997, 255
  %2005 = call i32 @llvm.ctpop.i32(i32 %2004)
  %2006 = trunc i32 %2005 to i8
  %2007 = and i8 %2006, 1
  %2008 = xor i8 %2007, 1
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2008, i8* %2009, align 1
  %2010 = xor i64 -1, %1993
  %2011 = trunc i64 %2010 to i32
  %2012 = xor i32 %2011, %1997
  %2013 = lshr i32 %2012, 4
  %2014 = trunc i32 %2013 to i8
  %2015 = and i8 %2014, 1
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2015, i8* %2016, align 1
  %2017 = icmp eq i32 %1997, 0
  %2018 = zext i1 %2017 to i8
  %2019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2018, i8* %2019, align 1
  %2020 = lshr i32 %1997, 31
  %2021 = trunc i32 %2020 to i8
  %2022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2021, i8* %2022, align 1
  %2023 = lshr i32 %1996, 31
  %2024 = xor i32 %2020, %2023
  %2025 = xor i32 %2020, 1
  %2026 = add i32 %2024, %2025
  %2027 = icmp eq i32 %2026, 2
  %2028 = zext i1 %2027 to i8
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2028, i8* %2029, align 1
  store %struct.Memory* %loadMem_44ec10, %struct.Memory** %MEMORY
  %loadMem_44ec13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2031 = getelementptr inbounds %struct.GPR, %struct.GPR* %2030, i32 0, i32 33
  %2032 = getelementptr inbounds %struct.Reg, %struct.Reg* %2031, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %2032 to i64*
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2034 = getelementptr inbounds %struct.GPR, %struct.GPR* %2033, i32 0, i32 1
  %2035 = getelementptr inbounds %struct.Reg, %struct.Reg* %2034, i32 0, i32 0
  %EAX.i949 = bitcast %union.anon* %2035 to i32*
  %2036 = load i32, i32* %EAX.i949
  %2037 = zext i32 %2036 to i64
  %2038 = load i64, i64* %PC.i948
  %2039 = add i64 %2038, 7
  store i64 %2039, i64* %PC.i948
  store i32 %2036, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  store %struct.Memory* %loadMem_44ec13, %struct.Memory** %MEMORY
  %loadMem_44ec1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2041 = getelementptr inbounds %struct.GPR, %struct.GPR* %2040, i32 0, i32 33
  %2042 = getelementptr inbounds %struct.Reg, %struct.Reg* %2041, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %2042 to i64*
  %2043 = load i64, i64* %PC.i947
  %2044 = add i64 %2043, 10
  %2045 = load i64, i64* %PC.i947
  %2046 = add i64 %2045, 5
  store i64 %2046, i64* %PC.i947
  %2047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2044, i64* %2047, align 8
  store %struct.Memory* %loadMem_44ec1a, %struct.Memory** %MEMORY
  br label %block_.L_44ec24

block_.L_44ec1f:                                  ; preds = %block_.L_44eba0
  %loadMem_44ec1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2049 = getelementptr inbounds %struct.GPR, %struct.GPR* %2048, i32 0, i32 33
  %2050 = getelementptr inbounds %struct.Reg, %struct.Reg* %2049, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %2050 to i64*
  %2051 = load i64, i64* %PC.i946
  %2052 = add i64 %2051, 2254
  %2053 = load i64, i64* %PC.i946
  %2054 = add i64 %2053, 5
  store i64 %2054, i64* %PC.i946
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2052, i64* %2055, align 8
  store %struct.Memory* %loadMem_44ec1f, %struct.Memory** %MEMORY
  br label %block_.L_44f4ed

block_.L_44ec24:                                  ; preds = %block_.L_44ec09
  %loadMem_44ec24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2057 = getelementptr inbounds %struct.GPR, %struct.GPR* %2056, i32 0, i32 33
  %2058 = getelementptr inbounds %struct.Reg, %struct.Reg* %2057, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %2058 to i64*
  %2059 = load i64, i64* %PC.i945
  %2060 = add i64 %2059, 5
  %2061 = load i64, i64* %PC.i945
  %2062 = add i64 %2061, 5
  store i64 %2062, i64* %PC.i945
  %2063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2060, i64* %2063, align 8
  store %struct.Memory* %loadMem_44ec24, %struct.Memory** %MEMORY
  br label %block_.L_44ec29

block_.L_44ec29:                                  ; preds = %block_.L_44ec24, %block_.L_44eae6
  %loadMem_44ec29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2065 = getelementptr inbounds %struct.GPR, %struct.GPR* %2064, i32 0, i32 33
  %2066 = getelementptr inbounds %struct.Reg, %struct.Reg* %2065, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %2066 to i64*
  %2067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2068 = getelementptr inbounds %struct.GPR, %struct.GPR* %2067, i32 0, i32 1
  %2069 = getelementptr inbounds %struct.Reg, %struct.Reg* %2068, i32 0, i32 0
  %RAX.i944 = bitcast %union.anon* %2069 to i64*
  %2070 = load i64, i64* %PC.i943
  %2071 = add i64 %2070, 10
  store i64 %2071, i64* %PC.i943
  store i64 ptrtoint (%G__0xac5d30_type* @G__0xac5d30 to i64), i64* %RAX.i944, align 8
  store %struct.Memory* %loadMem_44ec29, %struct.Memory** %MEMORY
  %loadMem_44ec33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2073 = getelementptr inbounds %struct.GPR, %struct.GPR* %2072, i32 0, i32 33
  %2074 = getelementptr inbounds %struct.Reg, %struct.Reg* %2073, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %2074 to i64*
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2076 = getelementptr inbounds %struct.GPR, %struct.GPR* %2075, i32 0, i32 5
  %2077 = getelementptr inbounds %struct.Reg, %struct.Reg* %2076, i32 0, i32 0
  %RCX.i942 = bitcast %union.anon* %2077 to i64*
  %2078 = load i64, i64* %PC.i941
  %2079 = add i64 %2078, 8
  store i64 %2079, i64* %PC.i941
  %2080 = load i32, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  %2081 = sext i32 %2080 to i64
  store i64 %2081, i64* %RCX.i942, align 8
  store %struct.Memory* %loadMem_44ec33, %struct.Memory** %MEMORY
  %loadMem_44ec3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2083 = getelementptr inbounds %struct.GPR, %struct.GPR* %2082, i32 0, i32 33
  %2084 = getelementptr inbounds %struct.Reg, %struct.Reg* %2083, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %2084 to i64*
  %2085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2086 = getelementptr inbounds %struct.GPR, %struct.GPR* %2085, i32 0, i32 5
  %2087 = getelementptr inbounds %struct.Reg, %struct.Reg* %2086, i32 0, i32 0
  %RCX.i940 = bitcast %union.anon* %2087 to i64*
  %2088 = load i64, i64* %RCX.i940
  %2089 = load i64, i64* %PC.i939
  %2090 = add i64 %2089, 7
  store i64 %2090, i64* %PC.i939
  %2091 = sext i64 %2088 to i128
  %2092 = and i128 %2091, -18446744073709551616
  %2093 = zext i64 %2088 to i128
  %2094 = or i128 %2092, %2093
  %2095 = mul i128 476, %2094
  %2096 = trunc i128 %2095 to i64
  store i64 %2096, i64* %RCX.i940, align 8
  %2097 = sext i64 %2096 to i128
  %2098 = icmp ne i128 %2097, %2095
  %2099 = zext i1 %2098 to i8
  %2100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2099, i8* %2100, align 1
  %2101 = trunc i128 %2095 to i32
  %2102 = and i32 %2101, 255
  %2103 = call i32 @llvm.ctpop.i32(i32 %2102)
  %2104 = trunc i32 %2103 to i8
  %2105 = and i8 %2104, 1
  %2106 = xor i8 %2105, 1
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2106, i8* %2107, align 1
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2108, align 1
  %2109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2109, align 1
  %2110 = lshr i64 %2096, 63
  %2111 = trunc i64 %2110 to i8
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2111, i8* %2112, align 1
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2099, i8* %2113, align 1
  store %struct.Memory* %loadMem_44ec3b, %struct.Memory** %MEMORY
  %loadMem_44ec42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2115 = getelementptr inbounds %struct.GPR, %struct.GPR* %2114, i32 0, i32 33
  %2116 = getelementptr inbounds %struct.Reg, %struct.Reg* %2115, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %2116 to i64*
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2118 = getelementptr inbounds %struct.GPR, %struct.GPR* %2117, i32 0, i32 1
  %2119 = getelementptr inbounds %struct.Reg, %struct.Reg* %2118, i32 0, i32 0
  %RAX.i937 = bitcast %union.anon* %2119 to i64*
  %2120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2121 = getelementptr inbounds %struct.GPR, %struct.GPR* %2120, i32 0, i32 5
  %2122 = getelementptr inbounds %struct.Reg, %struct.Reg* %2121, i32 0, i32 0
  %RCX.i938 = bitcast %union.anon* %2122 to i64*
  %2123 = load i64, i64* %RAX.i937
  %2124 = load i64, i64* %RCX.i938
  %2125 = load i64, i64* %PC.i936
  %2126 = add i64 %2125, 3
  store i64 %2126, i64* %PC.i936
  %2127 = add i64 %2124, %2123
  store i64 %2127, i64* %RAX.i937, align 8
  %2128 = icmp ult i64 %2127, %2123
  %2129 = icmp ult i64 %2127, %2124
  %2130 = or i1 %2128, %2129
  %2131 = zext i1 %2130 to i8
  %2132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2131, i8* %2132, align 1
  %2133 = trunc i64 %2127 to i32
  %2134 = and i32 %2133, 255
  %2135 = call i32 @llvm.ctpop.i32(i32 %2134)
  %2136 = trunc i32 %2135 to i8
  %2137 = and i8 %2136, 1
  %2138 = xor i8 %2137, 1
  %2139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2138, i8* %2139, align 1
  %2140 = xor i64 %2124, %2123
  %2141 = xor i64 %2140, %2127
  %2142 = lshr i64 %2141, 4
  %2143 = trunc i64 %2142 to i8
  %2144 = and i8 %2143, 1
  %2145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2144, i8* %2145, align 1
  %2146 = icmp eq i64 %2127, 0
  %2147 = zext i1 %2146 to i8
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2147, i8* %2148, align 1
  %2149 = lshr i64 %2127, 63
  %2150 = trunc i64 %2149 to i8
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2150, i8* %2151, align 1
  %2152 = lshr i64 %2123, 63
  %2153 = lshr i64 %2124, 63
  %2154 = xor i64 %2149, %2152
  %2155 = xor i64 %2149, %2153
  %2156 = add i64 %2154, %2155
  %2157 = icmp eq i64 %2156, 2
  %2158 = zext i1 %2157 to i8
  %2159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2158, i8* %2159, align 1
  store %struct.Memory* %loadMem_44ec42, %struct.Memory** %MEMORY
  %loadMem_44ec45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2161 = getelementptr inbounds %struct.GPR, %struct.GPR* %2160, i32 0, i32 33
  %2162 = getelementptr inbounds %struct.Reg, %struct.Reg* %2161, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %2162 to i64*
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2164 = getelementptr inbounds %struct.GPR, %struct.GPR* %2163, i32 0, i32 1
  %2165 = getelementptr inbounds %struct.Reg, %struct.Reg* %2164, i32 0, i32 0
  %RAX.i934 = bitcast %union.anon* %2165 to i64*
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2167 = getelementptr inbounds %struct.GPR, %struct.GPR* %2166, i32 0, i32 15
  %2168 = getelementptr inbounds %struct.Reg, %struct.Reg* %2167, i32 0, i32 0
  %RBP.i935 = bitcast %union.anon* %2168 to i64*
  %2169 = load i64, i64* %RBP.i935
  %2170 = sub i64 %2169, 456
  %2171 = load i64, i64* %RAX.i934
  %2172 = load i64, i64* %PC.i933
  %2173 = add i64 %2172, 7
  store i64 %2173, i64* %PC.i933
  %2174 = inttoptr i64 %2170 to i64*
  store i64 %2171, i64* %2174
  store %struct.Memory* %loadMem_44ec45, %struct.Memory** %MEMORY
  %loadMem_44ec4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 33
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %2177 to i64*
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 7
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %RDX.i932 = bitcast %union.anon* %2180 to i64*
  %2181 = load i64, i64* %PC.i931
  %2182 = add i64 %2181, 7
  store i64 %2182, i64* %PC.i931
  %2183 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %2184 = zext i32 %2183 to i64
  store i64 %2184, i64* %RDX.i932, align 8
  store %struct.Memory* %loadMem_44ec4c, %struct.Memory** %MEMORY
  %loadMem_44ec53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2186 = getelementptr inbounds %struct.GPR, %struct.GPR* %2185, i32 0, i32 33
  %2187 = getelementptr inbounds %struct.Reg, %struct.Reg* %2186, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %2187 to i64*
  %2188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2189 = getelementptr inbounds %struct.GPR, %struct.GPR* %2188, i32 0, i32 1
  %2190 = getelementptr inbounds %struct.Reg, %struct.Reg* %2189, i32 0, i32 0
  %RAX.i929 = bitcast %union.anon* %2190 to i64*
  %2191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2192 = getelementptr inbounds %struct.GPR, %struct.GPR* %2191, i32 0, i32 15
  %2193 = getelementptr inbounds %struct.Reg, %struct.Reg* %2192, i32 0, i32 0
  %RBP.i930 = bitcast %union.anon* %2193 to i64*
  %2194 = load i64, i64* %RBP.i930
  %2195 = sub i64 %2194, 456
  %2196 = load i64, i64* %PC.i928
  %2197 = add i64 %2196, 7
  store i64 %2197, i64* %PC.i928
  %2198 = inttoptr i64 %2195 to i64*
  %2199 = load i64, i64* %2198
  store i64 %2199, i64* %RAX.i929, align 8
  store %struct.Memory* %loadMem_44ec53, %struct.Memory** %MEMORY
  %loadMem_44ec5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2201 = getelementptr inbounds %struct.GPR, %struct.GPR* %2200, i32 0, i32 33
  %2202 = getelementptr inbounds %struct.Reg, %struct.Reg* %2201, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %2202 to i64*
  %2203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2204 = getelementptr inbounds %struct.GPR, %struct.GPR* %2203, i32 0, i32 7
  %2205 = getelementptr inbounds %struct.Reg, %struct.Reg* %2204, i32 0, i32 0
  %EDX.i926 = bitcast %union.anon* %2205 to i32*
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2207 = getelementptr inbounds %struct.GPR, %struct.GPR* %2206, i32 0, i32 1
  %2208 = getelementptr inbounds %struct.Reg, %struct.Reg* %2207, i32 0, i32 0
  %RAX.i927 = bitcast %union.anon* %2208 to i64*
  %2209 = load i64, i64* %RAX.i927
  %2210 = load i32, i32* %EDX.i926
  %2211 = zext i32 %2210 to i64
  %2212 = load i64, i64* %PC.i925
  %2213 = add i64 %2212, 2
  store i64 %2213, i64* %PC.i925
  %2214 = inttoptr i64 %2209 to i32*
  store i32 %2210, i32* %2214
  store %struct.Memory* %loadMem_44ec5a, %struct.Memory** %MEMORY
  %loadMem_44ec5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2216 = getelementptr inbounds %struct.GPR, %struct.GPR* %2215, i32 0, i32 33
  %2217 = getelementptr inbounds %struct.Reg, %struct.Reg* %2216, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %2217 to i64*
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2219 = getelementptr inbounds %struct.GPR, %struct.GPR* %2218, i32 0, i32 7
  %2220 = getelementptr inbounds %struct.Reg, %struct.Reg* %2219, i32 0, i32 0
  %RDX.i924 = bitcast %union.anon* %2220 to i64*
  %2221 = load i64, i64* %PC.i923
  %2222 = add i64 %2221, 7
  store i64 %2222, i64* %PC.i923
  %2223 = load i32, i32* bitcast (%G_0xafdfb0_type* @G_0xafdfb0 to i32*)
  %2224 = zext i32 %2223 to i64
  store i64 %2224, i64* %RDX.i924, align 8
  store %struct.Memory* %loadMem_44ec5c, %struct.Memory** %MEMORY
  %loadMem_44ec63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2226 = getelementptr inbounds %struct.GPR, %struct.GPR* %2225, i32 0, i32 33
  %2227 = getelementptr inbounds %struct.Reg, %struct.Reg* %2226, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %2227 to i64*
  %2228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2229 = getelementptr inbounds %struct.GPR, %struct.GPR* %2228, i32 0, i32 1
  %2230 = getelementptr inbounds %struct.Reg, %struct.Reg* %2229, i32 0, i32 0
  %RAX.i921 = bitcast %union.anon* %2230 to i64*
  %2231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2232 = getelementptr inbounds %struct.GPR, %struct.GPR* %2231, i32 0, i32 15
  %2233 = getelementptr inbounds %struct.Reg, %struct.Reg* %2232, i32 0, i32 0
  %RBP.i922 = bitcast %union.anon* %2233 to i64*
  %2234 = load i64, i64* %RBP.i922
  %2235 = sub i64 %2234, 456
  %2236 = load i64, i64* %PC.i920
  %2237 = add i64 %2236, 7
  store i64 %2237, i64* %PC.i920
  %2238 = inttoptr i64 %2235 to i64*
  %2239 = load i64, i64* %2238
  store i64 %2239, i64* %RAX.i921, align 8
  store %struct.Memory* %loadMem_44ec63, %struct.Memory** %MEMORY
  %loadMem_44ec6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2241 = getelementptr inbounds %struct.GPR, %struct.GPR* %2240, i32 0, i32 33
  %2242 = getelementptr inbounds %struct.Reg, %struct.Reg* %2241, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %2242 to i64*
  %2243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2244 = getelementptr inbounds %struct.GPR, %struct.GPR* %2243, i32 0, i32 7
  %2245 = getelementptr inbounds %struct.Reg, %struct.Reg* %2244, i32 0, i32 0
  %EDX.i918 = bitcast %union.anon* %2245 to i32*
  %2246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2247 = getelementptr inbounds %struct.GPR, %struct.GPR* %2246, i32 0, i32 1
  %2248 = getelementptr inbounds %struct.Reg, %struct.Reg* %2247, i32 0, i32 0
  %RAX.i919 = bitcast %union.anon* %2248 to i64*
  %2249 = load i64, i64* %RAX.i919
  %2250 = add i64 %2249, 404
  %2251 = load i32, i32* %EDX.i918
  %2252 = zext i32 %2251 to i64
  %2253 = load i64, i64* %PC.i917
  %2254 = add i64 %2253, 6
  store i64 %2254, i64* %PC.i917
  %2255 = inttoptr i64 %2250 to i32*
  store i32 %2251, i32* %2255
  store %struct.Memory* %loadMem_44ec6a, %struct.Memory** %MEMORY
  %loadMem_44ec70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2257 = getelementptr inbounds %struct.GPR, %struct.GPR* %2256, i32 0, i32 33
  %2258 = getelementptr inbounds %struct.Reg, %struct.Reg* %2257, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %2258 to i64*
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2260 = getelementptr inbounds %struct.GPR, %struct.GPR* %2259, i32 0, i32 7
  %2261 = getelementptr inbounds %struct.Reg, %struct.Reg* %2260, i32 0, i32 0
  %RDX.i915 = bitcast %union.anon* %2261 to i64*
  %2262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2263 = getelementptr inbounds %struct.GPR, %struct.GPR* %2262, i32 0, i32 15
  %2264 = getelementptr inbounds %struct.Reg, %struct.Reg* %2263, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %2264 to i64*
  %2265 = load i64, i64* %RBP.i916
  %2266 = sub i64 %2265, 20
  %2267 = load i64, i64* %PC.i914
  %2268 = add i64 %2267, 3
  store i64 %2268, i64* %PC.i914
  %2269 = inttoptr i64 %2266 to i32*
  %2270 = load i32, i32* %2269
  %2271 = zext i32 %2270 to i64
  store i64 %2271, i64* %RDX.i915, align 8
  store %struct.Memory* %loadMem_44ec70, %struct.Memory** %MEMORY
  %loadMem_44ec73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2273 = getelementptr inbounds %struct.GPR, %struct.GPR* %2272, i32 0, i32 33
  %2274 = getelementptr inbounds %struct.Reg, %struct.Reg* %2273, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %2274 to i64*
  %2275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2276 = getelementptr inbounds %struct.GPR, %struct.GPR* %2275, i32 0, i32 1
  %2277 = getelementptr inbounds %struct.Reg, %struct.Reg* %2276, i32 0, i32 0
  %RAX.i912 = bitcast %union.anon* %2277 to i64*
  %2278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2279 = getelementptr inbounds %struct.GPR, %struct.GPR* %2278, i32 0, i32 15
  %2280 = getelementptr inbounds %struct.Reg, %struct.Reg* %2279, i32 0, i32 0
  %RBP.i913 = bitcast %union.anon* %2280 to i64*
  %2281 = load i64, i64* %RBP.i913
  %2282 = sub i64 %2281, 456
  %2283 = load i64, i64* %PC.i911
  %2284 = add i64 %2283, 7
  store i64 %2284, i64* %PC.i911
  %2285 = inttoptr i64 %2282 to i64*
  %2286 = load i64, i64* %2285
  store i64 %2286, i64* %RAX.i912, align 8
  store %struct.Memory* %loadMem_44ec73, %struct.Memory** %MEMORY
  %loadMem_44ec7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2288 = getelementptr inbounds %struct.GPR, %struct.GPR* %2287, i32 0, i32 33
  %2289 = getelementptr inbounds %struct.Reg, %struct.Reg* %2288, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %2289 to i64*
  %2290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2291 = getelementptr inbounds %struct.GPR, %struct.GPR* %2290, i32 0, i32 7
  %2292 = getelementptr inbounds %struct.Reg, %struct.Reg* %2291, i32 0, i32 0
  %EDX.i909 = bitcast %union.anon* %2292 to i32*
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2294 = getelementptr inbounds %struct.GPR, %struct.GPR* %2293, i32 0, i32 1
  %2295 = getelementptr inbounds %struct.Reg, %struct.Reg* %2294, i32 0, i32 0
  %RAX.i910 = bitcast %union.anon* %2295 to i64*
  %2296 = load i64, i64* %RAX.i910
  %2297 = add i64 %2296, 408
  %2298 = load i32, i32* %EDX.i909
  %2299 = zext i32 %2298 to i64
  %2300 = load i64, i64* %PC.i908
  %2301 = add i64 %2300, 6
  store i64 %2301, i64* %PC.i908
  %2302 = inttoptr i64 %2297 to i32*
  store i32 %2298, i32* %2302
  store %struct.Memory* %loadMem_44ec7a, %struct.Memory** %MEMORY
  %loadMem_44ec80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2304 = getelementptr inbounds %struct.GPR, %struct.GPR* %2303, i32 0, i32 33
  %2305 = getelementptr inbounds %struct.Reg, %struct.Reg* %2304, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %2305 to i64*
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2307 = getelementptr inbounds %struct.GPR, %struct.GPR* %2306, i32 0, i32 7
  %2308 = getelementptr inbounds %struct.Reg, %struct.Reg* %2307, i32 0, i32 0
  %RDX.i906 = bitcast %union.anon* %2308 to i64*
  %2309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2310 = getelementptr inbounds %struct.GPR, %struct.GPR* %2309, i32 0, i32 15
  %2311 = getelementptr inbounds %struct.Reg, %struct.Reg* %2310, i32 0, i32 0
  %RBP.i907 = bitcast %union.anon* %2311 to i64*
  %2312 = load i64, i64* %RBP.i907
  %2313 = sub i64 %2312, 444
  %2314 = load i64, i64* %PC.i905
  %2315 = add i64 %2314, 6
  store i64 %2315, i64* %PC.i905
  %2316 = inttoptr i64 %2313 to i32*
  %2317 = load i32, i32* %2316
  %2318 = zext i32 %2317 to i64
  store i64 %2318, i64* %RDX.i906, align 8
  store %struct.Memory* %loadMem_44ec80, %struct.Memory** %MEMORY
  %loadMem_44ec86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2320 = getelementptr inbounds %struct.GPR, %struct.GPR* %2319, i32 0, i32 33
  %2321 = getelementptr inbounds %struct.Reg, %struct.Reg* %2320, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %2321 to i64*
  %2322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2323 = getelementptr inbounds %struct.GPR, %struct.GPR* %2322, i32 0, i32 1
  %2324 = getelementptr inbounds %struct.Reg, %struct.Reg* %2323, i32 0, i32 0
  %RAX.i903 = bitcast %union.anon* %2324 to i64*
  %2325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2326 = getelementptr inbounds %struct.GPR, %struct.GPR* %2325, i32 0, i32 15
  %2327 = getelementptr inbounds %struct.Reg, %struct.Reg* %2326, i32 0, i32 0
  %RBP.i904 = bitcast %union.anon* %2327 to i64*
  %2328 = load i64, i64* %RBP.i904
  %2329 = sub i64 %2328, 456
  %2330 = load i64, i64* %PC.i902
  %2331 = add i64 %2330, 7
  store i64 %2331, i64* %PC.i902
  %2332 = inttoptr i64 %2329 to i64*
  %2333 = load i64, i64* %2332
  store i64 %2333, i64* %RAX.i903, align 8
  store %struct.Memory* %loadMem_44ec86, %struct.Memory** %MEMORY
  %loadMem_44ec8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2335 = getelementptr inbounds %struct.GPR, %struct.GPR* %2334, i32 0, i32 33
  %2336 = getelementptr inbounds %struct.Reg, %struct.Reg* %2335, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %2336 to i64*
  %2337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2338 = getelementptr inbounds %struct.GPR, %struct.GPR* %2337, i32 0, i32 7
  %2339 = getelementptr inbounds %struct.Reg, %struct.Reg* %2338, i32 0, i32 0
  %EDX.i900 = bitcast %union.anon* %2339 to i32*
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2341 = getelementptr inbounds %struct.GPR, %struct.GPR* %2340, i32 0, i32 1
  %2342 = getelementptr inbounds %struct.Reg, %struct.Reg* %2341, i32 0, i32 0
  %RAX.i901 = bitcast %union.anon* %2342 to i64*
  %2343 = load i64, i64* %RAX.i901
  %2344 = add i64 %2343, 412
  %2345 = load i32, i32* %EDX.i900
  %2346 = zext i32 %2345 to i64
  %2347 = load i64, i64* %PC.i899
  %2348 = add i64 %2347, 6
  store i64 %2348, i64* %PC.i899
  %2349 = inttoptr i64 %2344 to i32*
  store i32 %2345, i32* %2349
  store %struct.Memory* %loadMem_44ec8d, %struct.Memory** %MEMORY
  %loadMem_44ec93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2351 = getelementptr inbounds %struct.GPR, %struct.GPR* %2350, i32 0, i32 33
  %2352 = getelementptr inbounds %struct.Reg, %struct.Reg* %2351, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %2352 to i64*
  %2353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2354 = getelementptr inbounds %struct.GPR, %struct.GPR* %2353, i32 0, i32 7
  %2355 = getelementptr inbounds %struct.Reg, %struct.Reg* %2354, i32 0, i32 0
  %RDX.i898 = bitcast %union.anon* %2355 to i64*
  %2356 = load i64, i64* %PC.i897
  %2357 = add i64 %2356, 7
  store i64 %2357, i64* %PC.i897
  %2358 = load i32, i32* bitcast (%G_0xb8b854_type* @G_0xb8b854 to i32*)
  %2359 = zext i32 %2358 to i64
  store i64 %2359, i64* %RDX.i898, align 8
  store %struct.Memory* %loadMem_44ec93, %struct.Memory** %MEMORY
  %loadMem_44ec9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2361 = getelementptr inbounds %struct.GPR, %struct.GPR* %2360, i32 0, i32 33
  %2362 = getelementptr inbounds %struct.Reg, %struct.Reg* %2361, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %2362 to i64*
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2364 = getelementptr inbounds %struct.GPR, %struct.GPR* %2363, i32 0, i32 7
  %2365 = getelementptr inbounds %struct.Reg, %struct.Reg* %2364, i32 0, i32 0
  %RDX.i896 = bitcast %union.anon* %2365 to i64*
  %2366 = load i64, i64* %RDX.i896
  %2367 = load i64, i64* %PC.i895
  %2368 = add i64 %2367, 7
  store i64 %2368, i64* %PC.i895
  %2369 = trunc i64 %2366 to i32
  %2370 = load i32, i32* bitcast (%G_0xb54ce4_type* @G_0xb54ce4 to i32*)
  %2371 = sub i32 %2369, %2370
  %2372 = zext i32 %2371 to i64
  store i64 %2372, i64* %RDX.i896, align 8
  %2373 = icmp ult i32 %2369, %2370
  %2374 = zext i1 %2373 to i8
  %2375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2374, i8* %2375, align 1
  %2376 = and i32 %2371, 255
  %2377 = call i32 @llvm.ctpop.i32(i32 %2376)
  %2378 = trunc i32 %2377 to i8
  %2379 = and i8 %2378, 1
  %2380 = xor i8 %2379, 1
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2380, i8* %2381, align 1
  %2382 = xor i32 %2370, %2369
  %2383 = xor i32 %2382, %2371
  %2384 = lshr i32 %2383, 4
  %2385 = trunc i32 %2384 to i8
  %2386 = and i8 %2385, 1
  %2387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2386, i8* %2387, align 1
  %2388 = icmp eq i32 %2371, 0
  %2389 = zext i1 %2388 to i8
  %2390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2389, i8* %2390, align 1
  %2391 = lshr i32 %2371, 31
  %2392 = trunc i32 %2391 to i8
  %2393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2392, i8* %2393, align 1
  %2394 = lshr i32 %2369, 31
  %2395 = lshr i32 %2370, 31
  %2396 = xor i32 %2395, %2394
  %2397 = xor i32 %2391, %2394
  %2398 = add i32 %2397, %2396
  %2399 = icmp eq i32 %2398, 2
  %2400 = zext i1 %2399 to i8
  %2401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2400, i8* %2401, align 1
  store %struct.Memory* %loadMem_44ec9a, %struct.Memory** %MEMORY
  %loadMem_44eca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2403 = getelementptr inbounds %struct.GPR, %struct.GPR* %2402, i32 0, i32 33
  %2404 = getelementptr inbounds %struct.Reg, %struct.Reg* %2403, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %2404 to i64*
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2406 = getelementptr inbounds %struct.GPR, %struct.GPR* %2405, i32 0, i32 1
  %2407 = getelementptr inbounds %struct.Reg, %struct.Reg* %2406, i32 0, i32 0
  %RAX.i893 = bitcast %union.anon* %2407 to i64*
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2409 = getelementptr inbounds %struct.GPR, %struct.GPR* %2408, i32 0, i32 15
  %2410 = getelementptr inbounds %struct.Reg, %struct.Reg* %2409, i32 0, i32 0
  %RBP.i894 = bitcast %union.anon* %2410 to i64*
  %2411 = load i64, i64* %RBP.i894
  %2412 = sub i64 %2411, 456
  %2413 = load i64, i64* %PC.i892
  %2414 = add i64 %2413, 7
  store i64 %2414, i64* %PC.i892
  %2415 = inttoptr i64 %2412 to i64*
  %2416 = load i64, i64* %2415
  store i64 %2416, i64* %RAX.i893, align 8
  store %struct.Memory* %loadMem_44eca1, %struct.Memory** %MEMORY
  %loadMem_44eca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2418 = getelementptr inbounds %struct.GPR, %struct.GPR* %2417, i32 0, i32 33
  %2419 = getelementptr inbounds %struct.Reg, %struct.Reg* %2418, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %2419 to i64*
  %2420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2421 = getelementptr inbounds %struct.GPR, %struct.GPR* %2420, i32 0, i32 7
  %2422 = getelementptr inbounds %struct.Reg, %struct.Reg* %2421, i32 0, i32 0
  %EDX.i890 = bitcast %union.anon* %2422 to i32*
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2424 = getelementptr inbounds %struct.GPR, %struct.GPR* %2423, i32 0, i32 1
  %2425 = getelementptr inbounds %struct.Reg, %struct.Reg* %2424, i32 0, i32 0
  %RAX.i891 = bitcast %union.anon* %2425 to i64*
  %2426 = load i64, i64* %RAX.i891
  %2427 = add i64 %2426, 416
  %2428 = load i32, i32* %EDX.i890
  %2429 = zext i32 %2428 to i64
  %2430 = load i64, i64* %PC.i889
  %2431 = add i64 %2430, 6
  store i64 %2431, i64* %PC.i889
  %2432 = inttoptr i64 %2427 to i32*
  store i32 %2428, i32* %2432
  store %struct.Memory* %loadMem_44eca8, %struct.Memory** %MEMORY
  %loadMem_44ecae = load %struct.Memory*, %struct.Memory** %MEMORY
  %2433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2434 = getelementptr inbounds %struct.GPR, %struct.GPR* %2433, i32 0, i32 33
  %2435 = getelementptr inbounds %struct.Reg, %struct.Reg* %2434, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %2435 to i64*
  %2436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2437 = getelementptr inbounds %struct.GPR, %struct.GPR* %2436, i32 0, i32 7
  %2438 = getelementptr inbounds %struct.Reg, %struct.Reg* %2437, i32 0, i32 0
  %RDX.i887 = bitcast %union.anon* %2438 to i64*
  %2439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2440 = getelementptr inbounds %struct.GPR, %struct.GPR* %2439, i32 0, i32 15
  %2441 = getelementptr inbounds %struct.Reg, %struct.Reg* %2440, i32 0, i32 0
  %RBP.i888 = bitcast %union.anon* %2441 to i64*
  %2442 = load i64, i64* %RBP.i888
  %2443 = sub i64 %2442, 4
  %2444 = load i64, i64* %PC.i886
  %2445 = add i64 %2444, 3
  store i64 %2445, i64* %PC.i886
  %2446 = inttoptr i64 %2443 to i32*
  %2447 = load i32, i32* %2446
  %2448 = zext i32 %2447 to i64
  store i64 %2448, i64* %RDX.i887, align 8
  store %struct.Memory* %loadMem_44ecae, %struct.Memory** %MEMORY
  %loadMem_44ecb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2450 = getelementptr inbounds %struct.GPR, %struct.GPR* %2449, i32 0, i32 33
  %2451 = getelementptr inbounds %struct.Reg, %struct.Reg* %2450, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %2451 to i64*
  %2452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2453 = getelementptr inbounds %struct.GPR, %struct.GPR* %2452, i32 0, i32 1
  %2454 = getelementptr inbounds %struct.Reg, %struct.Reg* %2453, i32 0, i32 0
  %RAX.i884 = bitcast %union.anon* %2454 to i64*
  %2455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2456 = getelementptr inbounds %struct.GPR, %struct.GPR* %2455, i32 0, i32 15
  %2457 = getelementptr inbounds %struct.Reg, %struct.Reg* %2456, i32 0, i32 0
  %RBP.i885 = bitcast %union.anon* %2457 to i64*
  %2458 = load i64, i64* %RBP.i885
  %2459 = sub i64 %2458, 456
  %2460 = load i64, i64* %PC.i883
  %2461 = add i64 %2460, 7
  store i64 %2461, i64* %PC.i883
  %2462 = inttoptr i64 %2459 to i64*
  %2463 = load i64, i64* %2462
  store i64 %2463, i64* %RAX.i884, align 8
  store %struct.Memory* %loadMem_44ecb1, %struct.Memory** %MEMORY
  %loadMem_44ecb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2465 = getelementptr inbounds %struct.GPR, %struct.GPR* %2464, i32 0, i32 33
  %2466 = getelementptr inbounds %struct.Reg, %struct.Reg* %2465, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %2466 to i64*
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2468 = getelementptr inbounds %struct.GPR, %struct.GPR* %2467, i32 0, i32 7
  %2469 = getelementptr inbounds %struct.Reg, %struct.Reg* %2468, i32 0, i32 0
  %EDX.i881 = bitcast %union.anon* %2469 to i32*
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2471 = getelementptr inbounds %struct.GPR, %struct.GPR* %2470, i32 0, i32 1
  %2472 = getelementptr inbounds %struct.Reg, %struct.Reg* %2471, i32 0, i32 0
  %RAX.i882 = bitcast %union.anon* %2472 to i64*
  %2473 = load i64, i64* %RAX.i882
  %2474 = add i64 %2473, 420
  %2475 = load i32, i32* %EDX.i881
  %2476 = zext i32 %2475 to i64
  %2477 = load i64, i64* %PC.i880
  %2478 = add i64 %2477, 6
  store i64 %2478, i64* %PC.i880
  %2479 = inttoptr i64 %2474 to i32*
  store i32 %2475, i32* %2479
  store %struct.Memory* %loadMem_44ecb8, %struct.Memory** %MEMORY
  %loadMem_44ecbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2481 = getelementptr inbounds %struct.GPR, %struct.GPR* %2480, i32 0, i32 33
  %2482 = getelementptr inbounds %struct.Reg, %struct.Reg* %2481, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %2482 to i64*
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2484 = getelementptr inbounds %struct.GPR, %struct.GPR* %2483, i32 0, i32 7
  %2485 = getelementptr inbounds %struct.Reg, %struct.Reg* %2484, i32 0, i32 0
  %RDX.i878 = bitcast %union.anon* %2485 to i64*
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2487 = getelementptr inbounds %struct.GPR, %struct.GPR* %2486, i32 0, i32 15
  %2488 = getelementptr inbounds %struct.Reg, %struct.Reg* %2487, i32 0, i32 0
  %RBP.i879 = bitcast %union.anon* %2488 to i64*
  %2489 = load i64, i64* %RBP.i879
  %2490 = sub i64 %2489, 8
  %2491 = load i64, i64* %PC.i877
  %2492 = add i64 %2491, 3
  store i64 %2492, i64* %PC.i877
  %2493 = inttoptr i64 %2490 to i32*
  %2494 = load i32, i32* %2493
  %2495 = zext i32 %2494 to i64
  store i64 %2495, i64* %RDX.i878, align 8
  store %struct.Memory* %loadMem_44ecbe, %struct.Memory** %MEMORY
  %loadMem_44ecc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2497 = getelementptr inbounds %struct.GPR, %struct.GPR* %2496, i32 0, i32 33
  %2498 = getelementptr inbounds %struct.Reg, %struct.Reg* %2497, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %2498 to i64*
  %2499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2500 = getelementptr inbounds %struct.GPR, %struct.GPR* %2499, i32 0, i32 1
  %2501 = getelementptr inbounds %struct.Reg, %struct.Reg* %2500, i32 0, i32 0
  %RAX.i875 = bitcast %union.anon* %2501 to i64*
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2503 = getelementptr inbounds %struct.GPR, %struct.GPR* %2502, i32 0, i32 15
  %2504 = getelementptr inbounds %struct.Reg, %struct.Reg* %2503, i32 0, i32 0
  %RBP.i876 = bitcast %union.anon* %2504 to i64*
  %2505 = load i64, i64* %RBP.i876
  %2506 = sub i64 %2505, 456
  %2507 = load i64, i64* %PC.i874
  %2508 = add i64 %2507, 7
  store i64 %2508, i64* %PC.i874
  %2509 = inttoptr i64 %2506 to i64*
  %2510 = load i64, i64* %2509
  store i64 %2510, i64* %RAX.i875, align 8
  store %struct.Memory* %loadMem_44ecc1, %struct.Memory** %MEMORY
  %loadMem_44ecc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2512 = getelementptr inbounds %struct.GPR, %struct.GPR* %2511, i32 0, i32 33
  %2513 = getelementptr inbounds %struct.Reg, %struct.Reg* %2512, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %2513 to i64*
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2515 = getelementptr inbounds %struct.GPR, %struct.GPR* %2514, i32 0, i32 7
  %2516 = getelementptr inbounds %struct.Reg, %struct.Reg* %2515, i32 0, i32 0
  %EDX.i872 = bitcast %union.anon* %2516 to i32*
  %2517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2518 = getelementptr inbounds %struct.GPR, %struct.GPR* %2517, i32 0, i32 1
  %2519 = getelementptr inbounds %struct.Reg, %struct.Reg* %2518, i32 0, i32 0
  %RAX.i873 = bitcast %union.anon* %2519 to i64*
  %2520 = load i64, i64* %RAX.i873
  %2521 = add i64 %2520, 424
  %2522 = load i32, i32* %EDX.i872
  %2523 = zext i32 %2522 to i64
  %2524 = load i64, i64* %PC.i871
  %2525 = add i64 %2524, 6
  store i64 %2525, i64* %PC.i871
  %2526 = inttoptr i64 %2521 to i32*
  store i32 %2522, i32* %2526
  store %struct.Memory* %loadMem_44ecc8, %struct.Memory** %MEMORY
  %loadMem_44ecce = load %struct.Memory*, %struct.Memory** %MEMORY
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2528 = getelementptr inbounds %struct.GPR, %struct.GPR* %2527, i32 0, i32 33
  %2529 = getelementptr inbounds %struct.Reg, %struct.Reg* %2528, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %2529 to i64*
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2531 = getelementptr inbounds %struct.GPR, %struct.GPR* %2530, i32 0, i32 7
  %2532 = getelementptr inbounds %struct.Reg, %struct.Reg* %2531, i32 0, i32 0
  %RDX.i869 = bitcast %union.anon* %2532 to i64*
  %2533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2534 = getelementptr inbounds %struct.GPR, %struct.GPR* %2533, i32 0, i32 15
  %2535 = getelementptr inbounds %struct.Reg, %struct.Reg* %2534, i32 0, i32 0
  %RBP.i870 = bitcast %union.anon* %2535 to i64*
  %2536 = load i64, i64* %RBP.i870
  %2537 = sub i64 %2536, 12
  %2538 = load i64, i64* %PC.i868
  %2539 = add i64 %2538, 3
  store i64 %2539, i64* %PC.i868
  %2540 = inttoptr i64 %2537 to i32*
  %2541 = load i32, i32* %2540
  %2542 = zext i32 %2541 to i64
  store i64 %2542, i64* %RDX.i869, align 8
  store %struct.Memory* %loadMem_44ecce, %struct.Memory** %MEMORY
  %loadMem_44ecd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2544 = getelementptr inbounds %struct.GPR, %struct.GPR* %2543, i32 0, i32 33
  %2545 = getelementptr inbounds %struct.Reg, %struct.Reg* %2544, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %2545 to i64*
  %2546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2547 = getelementptr inbounds %struct.GPR, %struct.GPR* %2546, i32 0, i32 1
  %2548 = getelementptr inbounds %struct.Reg, %struct.Reg* %2547, i32 0, i32 0
  %RAX.i866 = bitcast %union.anon* %2548 to i64*
  %2549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2550 = getelementptr inbounds %struct.GPR, %struct.GPR* %2549, i32 0, i32 15
  %2551 = getelementptr inbounds %struct.Reg, %struct.Reg* %2550, i32 0, i32 0
  %RBP.i867 = bitcast %union.anon* %2551 to i64*
  %2552 = load i64, i64* %RBP.i867
  %2553 = sub i64 %2552, 456
  %2554 = load i64, i64* %PC.i865
  %2555 = add i64 %2554, 7
  store i64 %2555, i64* %PC.i865
  %2556 = inttoptr i64 %2553 to i64*
  %2557 = load i64, i64* %2556
  store i64 %2557, i64* %RAX.i866, align 8
  store %struct.Memory* %loadMem_44ecd1, %struct.Memory** %MEMORY
  %loadMem_44ecd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2559 = getelementptr inbounds %struct.GPR, %struct.GPR* %2558, i32 0, i32 33
  %2560 = getelementptr inbounds %struct.Reg, %struct.Reg* %2559, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %2560 to i64*
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2562 = getelementptr inbounds %struct.GPR, %struct.GPR* %2561, i32 0, i32 7
  %2563 = getelementptr inbounds %struct.Reg, %struct.Reg* %2562, i32 0, i32 0
  %EDX.i863 = bitcast %union.anon* %2563 to i32*
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2565 = getelementptr inbounds %struct.GPR, %struct.GPR* %2564, i32 0, i32 1
  %2566 = getelementptr inbounds %struct.Reg, %struct.Reg* %2565, i32 0, i32 0
  %RAX.i864 = bitcast %union.anon* %2566 to i64*
  %2567 = load i64, i64* %RAX.i864
  %2568 = add i64 %2567, 428
  %2569 = load i32, i32* %EDX.i863
  %2570 = zext i32 %2569 to i64
  %2571 = load i64, i64* %PC.i862
  %2572 = add i64 %2571, 6
  store i64 %2572, i64* %PC.i862
  %2573 = inttoptr i64 %2568 to i32*
  store i32 %2569, i32* %2573
  store %struct.Memory* %loadMem_44ecd8, %struct.Memory** %MEMORY
  %loadMem_44ecde = load %struct.Memory*, %struct.Memory** %MEMORY
  %2574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2575 = getelementptr inbounds %struct.GPR, %struct.GPR* %2574, i32 0, i32 33
  %2576 = getelementptr inbounds %struct.Reg, %struct.Reg* %2575, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %2576 to i64*
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2578 = getelementptr inbounds %struct.GPR, %struct.GPR* %2577, i32 0, i32 7
  %2579 = getelementptr inbounds %struct.Reg, %struct.Reg* %2578, i32 0, i32 0
  %RDX.i860 = bitcast %union.anon* %2579 to i64*
  %2580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2581 = getelementptr inbounds %struct.GPR, %struct.GPR* %2580, i32 0, i32 15
  %2582 = getelementptr inbounds %struct.Reg, %struct.Reg* %2581, i32 0, i32 0
  %RBP.i861 = bitcast %union.anon* %2582 to i64*
  %2583 = load i64, i64* %RBP.i861
  %2584 = sub i64 %2583, 16
  %2585 = load i64, i64* %PC.i859
  %2586 = add i64 %2585, 3
  store i64 %2586, i64* %PC.i859
  %2587 = inttoptr i64 %2584 to i32*
  %2588 = load i32, i32* %2587
  %2589 = zext i32 %2588 to i64
  store i64 %2589, i64* %RDX.i860, align 8
  store %struct.Memory* %loadMem_44ecde, %struct.Memory** %MEMORY
  %loadMem_44ece1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2591 = getelementptr inbounds %struct.GPR, %struct.GPR* %2590, i32 0, i32 33
  %2592 = getelementptr inbounds %struct.Reg, %struct.Reg* %2591, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %2592 to i64*
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2594 = getelementptr inbounds %struct.GPR, %struct.GPR* %2593, i32 0, i32 1
  %2595 = getelementptr inbounds %struct.Reg, %struct.Reg* %2594, i32 0, i32 0
  %RAX.i857 = bitcast %union.anon* %2595 to i64*
  %2596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2597 = getelementptr inbounds %struct.GPR, %struct.GPR* %2596, i32 0, i32 15
  %2598 = getelementptr inbounds %struct.Reg, %struct.Reg* %2597, i32 0, i32 0
  %RBP.i858 = bitcast %union.anon* %2598 to i64*
  %2599 = load i64, i64* %RBP.i858
  %2600 = sub i64 %2599, 456
  %2601 = load i64, i64* %PC.i856
  %2602 = add i64 %2601, 7
  store i64 %2602, i64* %PC.i856
  %2603 = inttoptr i64 %2600 to i64*
  %2604 = load i64, i64* %2603
  store i64 %2604, i64* %RAX.i857, align 8
  store %struct.Memory* %loadMem_44ece1, %struct.Memory** %MEMORY
  %loadMem_44ece8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2606 = getelementptr inbounds %struct.GPR, %struct.GPR* %2605, i32 0, i32 33
  %2607 = getelementptr inbounds %struct.Reg, %struct.Reg* %2606, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %2607 to i64*
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2609 = getelementptr inbounds %struct.GPR, %struct.GPR* %2608, i32 0, i32 7
  %2610 = getelementptr inbounds %struct.Reg, %struct.Reg* %2609, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %2610 to i32*
  %2611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2612 = getelementptr inbounds %struct.GPR, %struct.GPR* %2611, i32 0, i32 1
  %2613 = getelementptr inbounds %struct.Reg, %struct.Reg* %2612, i32 0, i32 0
  %RAX.i855 = bitcast %union.anon* %2613 to i64*
  %2614 = load i64, i64* %RAX.i855
  %2615 = add i64 %2614, 432
  %2616 = load i32, i32* %EDX.i
  %2617 = zext i32 %2616 to i64
  %2618 = load i64, i64* %PC.i854
  %2619 = add i64 %2618, 6
  store i64 %2619, i64* %PC.i854
  %2620 = inttoptr i64 %2615 to i32*
  store i32 %2616, i32* %2620
  store %struct.Memory* %loadMem_44ece8, %struct.Memory** %MEMORY
  %loadMem_44ecee = load %struct.Memory*, %struct.Memory** %MEMORY
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2622 = getelementptr inbounds %struct.GPR, %struct.GPR* %2621, i32 0, i32 33
  %2623 = getelementptr inbounds %struct.Reg, %struct.Reg* %2622, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %2623 to i64*
  %2624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2625 = getelementptr inbounds %struct.GPR, %struct.GPR* %2624, i32 0, i32 15
  %2626 = getelementptr inbounds %struct.Reg, %struct.Reg* %2625, i32 0, i32 0
  %RBP.i853 = bitcast %union.anon* %2626 to i64*
  %2627 = load i64, i64* %RBP.i853
  %2628 = sub i64 %2627, 440
  %2629 = load i64, i64* %PC.i852
  %2630 = add i64 %2629, 10
  store i64 %2630, i64* %PC.i852
  %2631 = inttoptr i64 %2628 to i32*
  store i32 0, i32* %2631
  store %struct.Memory* %loadMem_44ecee, %struct.Memory** %MEMORY
  br label %block_.L_44ecf8

block_.L_44ecf8:                                  ; preds = %block_.L_44ed9c, %block_.L_44ec29
  %loadMem_44ecf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2633 = getelementptr inbounds %struct.GPR, %struct.GPR* %2632, i32 0, i32 33
  %2634 = getelementptr inbounds %struct.Reg, %struct.Reg* %2633, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %2634 to i64*
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2636 = getelementptr inbounds %struct.GPR, %struct.GPR* %2635, i32 0, i32 15
  %2637 = getelementptr inbounds %struct.Reg, %struct.Reg* %2636, i32 0, i32 0
  %RBP.i851 = bitcast %union.anon* %2637 to i64*
  %2638 = load i64, i64* %RBP.i851
  %2639 = sub i64 %2638, 440
  %2640 = load i64, i64* %PC.i850
  %2641 = add i64 %2640, 7
  store i64 %2641, i64* %PC.i850
  %2642 = inttoptr i64 %2639 to i32*
  %2643 = load i32, i32* %2642
  %2644 = sub i32 %2643, 5
  %2645 = icmp ult i32 %2643, 5
  %2646 = zext i1 %2645 to i8
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2646, i8* %2647, align 1
  %2648 = and i32 %2644, 255
  %2649 = call i32 @llvm.ctpop.i32(i32 %2648)
  %2650 = trunc i32 %2649 to i8
  %2651 = and i8 %2650, 1
  %2652 = xor i8 %2651, 1
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2652, i8* %2653, align 1
  %2654 = xor i32 %2643, 5
  %2655 = xor i32 %2654, %2644
  %2656 = lshr i32 %2655, 4
  %2657 = trunc i32 %2656 to i8
  %2658 = and i8 %2657, 1
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2658, i8* %2659, align 1
  %2660 = icmp eq i32 %2644, 0
  %2661 = zext i1 %2660 to i8
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2661, i8* %2662, align 1
  %2663 = lshr i32 %2644, 31
  %2664 = trunc i32 %2663 to i8
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2664, i8* %2665, align 1
  %2666 = lshr i32 %2643, 31
  %2667 = xor i32 %2663, %2666
  %2668 = add i32 %2667, %2666
  %2669 = icmp eq i32 %2668, 2
  %2670 = zext i1 %2669 to i8
  %2671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2670, i8* %2671, align 1
  store %struct.Memory* %loadMem_44ecf8, %struct.Memory** %MEMORY
  %loadMem_44ecff = load %struct.Memory*, %struct.Memory** %MEMORY
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2673 = getelementptr inbounds %struct.GPR, %struct.GPR* %2672, i32 0, i32 33
  %2674 = getelementptr inbounds %struct.Reg, %struct.Reg* %2673, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %2674 to i64*
  %2675 = load i64, i64* %PC.i849
  %2676 = add i64 %2675, 177
  %2677 = load i64, i64* %PC.i849
  %2678 = add i64 %2677, 6
  %2679 = load i64, i64* %PC.i849
  %2680 = add i64 %2679, 6
  store i64 %2680, i64* %PC.i849
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2682 = load i8, i8* %2681, align 1
  %2683 = icmp ne i8 %2682, 0
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2685 = load i8, i8* %2684, align 1
  %2686 = icmp ne i8 %2685, 0
  %2687 = xor i1 %2683, %2686
  %2688 = xor i1 %2687, true
  %2689 = zext i1 %2688 to i8
  store i8 %2689, i8* %BRANCH_TAKEN, align 1
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2691 = select i1 %2687, i64 %2678, i64 %2676
  store i64 %2691, i64* %2690, align 8
  store %struct.Memory* %loadMem_44ecff, %struct.Memory** %MEMORY
  %loadBr_44ecff = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ecff = icmp eq i8 %loadBr_44ecff, 1
  br i1 %cmpBr_44ecff, label %block_.L_44edb0, label %block_44ed05

block_44ed05:                                     ; preds = %block_.L_44ecf8
  %loadMem_44ed05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2693 = getelementptr inbounds %struct.GPR, %struct.GPR* %2692, i32 0, i32 33
  %2694 = getelementptr inbounds %struct.Reg, %struct.Reg* %2693, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %2694 to i64*
  %2695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2696 = getelementptr inbounds %struct.GPR, %struct.GPR* %2695, i32 0, i32 1
  %2697 = getelementptr inbounds %struct.Reg, %struct.Reg* %2696, i32 0, i32 0
  %RAX.i847 = bitcast %union.anon* %2697 to i64*
  %2698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2699 = getelementptr inbounds %struct.GPR, %struct.GPR* %2698, i32 0, i32 15
  %2700 = getelementptr inbounds %struct.Reg, %struct.Reg* %2699, i32 0, i32 0
  %RBP.i848 = bitcast %union.anon* %2700 to i64*
  %2701 = load i64, i64* %RBP.i848
  %2702 = sub i64 %2701, 440
  %2703 = load i64, i64* %PC.i846
  %2704 = add i64 %2703, 6
  store i64 %2704, i64* %PC.i846
  %2705 = inttoptr i64 %2702 to i32*
  %2706 = load i32, i32* %2705
  %2707 = zext i32 %2706 to i64
  store i64 %2707, i64* %RAX.i847, align 8
  store %struct.Memory* %loadMem_44ed05, %struct.Memory** %MEMORY
  %loadMem_44ed0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2709 = getelementptr inbounds %struct.GPR, %struct.GPR* %2708, i32 0, i32 33
  %2710 = getelementptr inbounds %struct.Reg, %struct.Reg* %2709, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %2710 to i64*
  %2711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2712 = getelementptr inbounds %struct.GPR, %struct.GPR* %2711, i32 0, i32 1
  %2713 = getelementptr inbounds %struct.Reg, %struct.Reg* %2712, i32 0, i32 0
  %EAX.i845 = bitcast %union.anon* %2713 to i32*
  %2714 = load i32, i32* %EAX.i845
  %2715 = zext i32 %2714 to i64
  %2716 = load i64, i64* %PC.i844
  %2717 = add i64 %2716, 7
  store i64 %2717, i64* %PC.i844
  %2718 = load i32, i32* bitcast (%G_0xb54ce4_type* @G_0xb54ce4 to i32*)
  %2719 = sub i32 %2714, %2718
  %2720 = icmp ult i32 %2714, %2718
  %2721 = zext i1 %2720 to i8
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2721, i8* %2722, align 1
  %2723 = and i32 %2719, 255
  %2724 = call i32 @llvm.ctpop.i32(i32 %2723)
  %2725 = trunc i32 %2724 to i8
  %2726 = and i8 %2725, 1
  %2727 = xor i8 %2726, 1
  %2728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2727, i8* %2728, align 1
  %2729 = xor i32 %2718, %2714
  %2730 = xor i32 %2729, %2719
  %2731 = lshr i32 %2730, 4
  %2732 = trunc i32 %2731 to i8
  %2733 = and i8 %2732, 1
  %2734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2733, i8* %2734, align 1
  %2735 = icmp eq i32 %2719, 0
  %2736 = zext i1 %2735 to i8
  %2737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2736, i8* %2737, align 1
  %2738 = lshr i32 %2719, 31
  %2739 = trunc i32 %2738 to i8
  %2740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2739, i8* %2740, align 1
  %2741 = lshr i32 %2714, 31
  %2742 = lshr i32 %2718, 31
  %2743 = xor i32 %2742, %2741
  %2744 = xor i32 %2738, %2741
  %2745 = add i32 %2744, %2743
  %2746 = icmp eq i32 %2745, 2
  %2747 = zext i1 %2746 to i8
  %2748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2747, i8* %2748, align 1
  store %struct.Memory* %loadMem_44ed0b, %struct.Memory** %MEMORY
  %loadMem_44ed12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2750 = getelementptr inbounds %struct.GPR, %struct.GPR* %2749, i32 0, i32 33
  %2751 = getelementptr inbounds %struct.Reg, %struct.Reg* %2750, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %2751 to i64*
  %2752 = load i64, i64* %PC.i843
  %2753 = add i64 %2752, 83
  %2754 = load i64, i64* %PC.i843
  %2755 = add i64 %2754, 6
  %2756 = load i64, i64* %PC.i843
  %2757 = add i64 %2756, 6
  store i64 %2757, i64* %PC.i843
  %2758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2759 = load i8, i8* %2758, align 1
  %2760 = icmp ne i8 %2759, 0
  %2761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2762 = load i8, i8* %2761, align 1
  %2763 = icmp ne i8 %2762, 0
  %2764 = xor i1 %2760, %2763
  %2765 = xor i1 %2764, true
  %2766 = zext i1 %2765 to i8
  store i8 %2766, i8* %BRANCH_TAKEN, align 1
  %2767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2768 = select i1 %2764, i64 %2755, i64 %2753
  store i64 %2768, i64* %2767, align 8
  store %struct.Memory* %loadMem_44ed12, %struct.Memory** %MEMORY
  %loadBr_44ed12 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ed12 = icmp eq i8 %loadBr_44ed12, 1
  br i1 %cmpBr_44ed12, label %block_.L_44ed65, label %block_44ed18

block_44ed18:                                     ; preds = %block_44ed05
  %loadMem_44ed18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2770 = getelementptr inbounds %struct.GPR, %struct.GPR* %2769, i32 0, i32 33
  %2771 = getelementptr inbounds %struct.Reg, %struct.Reg* %2770, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %2771 to i64*
  %2772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2773 = getelementptr inbounds %struct.GPR, %struct.GPR* %2772, i32 0, i32 11
  %2774 = getelementptr inbounds %struct.Reg, %struct.Reg* %2773, i32 0, i32 0
  %RDI.i841 = bitcast %union.anon* %2774 to i64*
  %2775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2776 = getelementptr inbounds %struct.GPR, %struct.GPR* %2775, i32 0, i32 15
  %2777 = getelementptr inbounds %struct.Reg, %struct.Reg* %2776, i32 0, i32 0
  %RBP.i842 = bitcast %union.anon* %2777 to i64*
  %2778 = load i64, i64* %RBP.i842
  %2779 = sub i64 %2778, 440
  %2780 = load i64, i64* %PC.i840
  %2781 = add i64 %2780, 6
  store i64 %2781, i64* %PC.i840
  %2782 = inttoptr i64 %2779 to i32*
  %2783 = load i32, i32* %2782
  %2784 = zext i32 %2783 to i64
  store i64 %2784, i64* %RDI.i841, align 8
  store %struct.Memory* %loadMem_44ed18, %struct.Memory** %MEMORY
  %loadMem_44ed1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2786 = getelementptr inbounds %struct.GPR, %struct.GPR* %2785, i32 0, i32 33
  %2787 = getelementptr inbounds %struct.Reg, %struct.Reg* %2786, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %2787 to i64*
  %2788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2789 = getelementptr inbounds %struct.GPR, %struct.GPR* %2788, i32 0, i32 1
  %2790 = getelementptr inbounds %struct.Reg, %struct.Reg* %2789, i32 0, i32 0
  %RAX.i838 = bitcast %union.anon* %2790 to i64*
  %2791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2792 = getelementptr inbounds %struct.GPR, %struct.GPR* %2791, i32 0, i32 15
  %2793 = getelementptr inbounds %struct.Reg, %struct.Reg* %2792, i32 0, i32 0
  %RBP.i839 = bitcast %union.anon* %2793 to i64*
  %2794 = load i64, i64* %RBP.i839
  %2795 = sub i64 %2794, 456
  %2796 = load i64, i64* %PC.i837
  %2797 = add i64 %2796, 7
  store i64 %2797, i64* %PC.i837
  %2798 = inttoptr i64 %2795 to i64*
  %2799 = load i64, i64* %2798
  store i64 %2799, i64* %RAX.i838, align 8
  store %struct.Memory* %loadMem_44ed1e, %struct.Memory** %MEMORY
  %loadMem_44ed25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2801 = getelementptr inbounds %struct.GPR, %struct.GPR* %2800, i32 0, i32 33
  %2802 = getelementptr inbounds %struct.Reg, %struct.Reg* %2801, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %2802 to i64*
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2804 = getelementptr inbounds %struct.GPR, %struct.GPR* %2803, i32 0, i32 1
  %2805 = getelementptr inbounds %struct.Reg, %struct.Reg* %2804, i32 0, i32 0
  %RAX.i836 = bitcast %union.anon* %2805 to i64*
  %2806 = load i64, i64* %RAX.i836
  %2807 = load i64, i64* %PC.i835
  %2808 = add i64 %2807, 6
  store i64 %2808, i64* %PC.i835
  %2809 = add i64 436, %2806
  store i64 %2809, i64* %RAX.i836, align 8
  %2810 = icmp ult i64 %2809, %2806
  %2811 = icmp ult i64 %2809, 436
  %2812 = or i1 %2810, %2811
  %2813 = zext i1 %2812 to i8
  %2814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2813, i8* %2814, align 1
  %2815 = trunc i64 %2809 to i32
  %2816 = and i32 %2815, 255
  %2817 = call i32 @llvm.ctpop.i32(i32 %2816)
  %2818 = trunc i32 %2817 to i8
  %2819 = and i8 %2818, 1
  %2820 = xor i8 %2819, 1
  %2821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2820, i8* %2821, align 1
  %2822 = xor i64 436, %2806
  %2823 = xor i64 %2822, %2809
  %2824 = lshr i64 %2823, 4
  %2825 = trunc i64 %2824 to i8
  %2826 = and i8 %2825, 1
  %2827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2826, i8* %2827, align 1
  %2828 = icmp eq i64 %2809, 0
  %2829 = zext i1 %2828 to i8
  %2830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2829, i8* %2830, align 1
  %2831 = lshr i64 %2809, 63
  %2832 = trunc i64 %2831 to i8
  %2833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2832, i8* %2833, align 1
  %2834 = lshr i64 %2806, 63
  %2835 = xor i64 %2831, %2834
  %2836 = add i64 %2835, %2831
  %2837 = icmp eq i64 %2836, 2
  %2838 = zext i1 %2837 to i8
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2838, i8* %2839, align 1
  store %struct.Memory* %loadMem_44ed25, %struct.Memory** %MEMORY
  %loadMem_44ed2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2841 = getelementptr inbounds %struct.GPR, %struct.GPR* %2840, i32 0, i32 33
  %2842 = getelementptr inbounds %struct.Reg, %struct.Reg* %2841, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %2842 to i64*
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2844 = getelementptr inbounds %struct.GPR, %struct.GPR* %2843, i32 0, i32 5
  %2845 = getelementptr inbounds %struct.Reg, %struct.Reg* %2844, i32 0, i32 0
  %RCX.i833 = bitcast %union.anon* %2845 to i64*
  %2846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2847 = getelementptr inbounds %struct.GPR, %struct.GPR* %2846, i32 0, i32 15
  %2848 = getelementptr inbounds %struct.Reg, %struct.Reg* %2847, i32 0, i32 0
  %RBP.i834 = bitcast %union.anon* %2848 to i64*
  %2849 = load i64, i64* %RBP.i834
  %2850 = sub i64 %2849, 440
  %2851 = load i64, i64* %PC.i832
  %2852 = add i64 %2851, 7
  store i64 %2852, i64* %PC.i832
  %2853 = inttoptr i64 %2850 to i32*
  %2854 = load i32, i32* %2853
  %2855 = sext i32 %2854 to i64
  store i64 %2855, i64* %RCX.i833, align 8
  store %struct.Memory* %loadMem_44ed2b, %struct.Memory** %MEMORY
  %loadMem_44ed32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2857 = getelementptr inbounds %struct.GPR, %struct.GPR* %2856, i32 0, i32 33
  %2858 = getelementptr inbounds %struct.Reg, %struct.Reg* %2857, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %2858 to i64*
  %2859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2860 = getelementptr inbounds %struct.GPR, %struct.GPR* %2859, i32 0, i32 5
  %2861 = getelementptr inbounds %struct.Reg, %struct.Reg* %2860, i32 0, i32 0
  %RCX.i831 = bitcast %union.anon* %2861 to i64*
  %2862 = load i64, i64* %RCX.i831
  %2863 = load i64, i64* %PC.i830
  %2864 = add i64 %2863, 4
  store i64 %2864, i64* %PC.i830
  %2865 = shl i64 %2862, 1
  %2866 = icmp slt i64 %2865, 0
  %2867 = shl i64 %2865, 1
  store i64 %2867, i64* %RCX.i831, align 8
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2869 = zext i1 %2866 to i8
  store i8 %2869, i8* %2868, align 1
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2871 = trunc i64 %2867 to i32
  %2872 = and i32 %2871, 254
  %2873 = call i32 @llvm.ctpop.i32(i32 %2872)
  %2874 = trunc i32 %2873 to i8
  %2875 = and i8 %2874, 1
  %2876 = xor i8 %2875, 1
  store i8 %2876, i8* %2870, align 1
  %2877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2877, align 1
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2879 = icmp eq i64 %2867, 0
  %2880 = zext i1 %2879 to i8
  store i8 %2880, i8* %2878, align 1
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2882 = lshr i64 %2867, 63
  %2883 = trunc i64 %2882 to i8
  store i8 %2883, i8* %2881, align 1
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2884, align 1
  store %struct.Memory* %loadMem_44ed32, %struct.Memory** %MEMORY
  %loadMem_44ed36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2886 = getelementptr inbounds %struct.GPR, %struct.GPR* %2885, i32 0, i32 33
  %2887 = getelementptr inbounds %struct.Reg, %struct.Reg* %2886, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %2887 to i64*
  %2888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2889 = getelementptr inbounds %struct.GPR, %struct.GPR* %2888, i32 0, i32 1
  %2890 = getelementptr inbounds %struct.Reg, %struct.Reg* %2889, i32 0, i32 0
  %RAX.i828 = bitcast %union.anon* %2890 to i64*
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2892 = getelementptr inbounds %struct.GPR, %struct.GPR* %2891, i32 0, i32 5
  %2893 = getelementptr inbounds %struct.Reg, %struct.Reg* %2892, i32 0, i32 0
  %RCX.i829 = bitcast %union.anon* %2893 to i64*
  %2894 = load i64, i64* %RAX.i828
  %2895 = load i64, i64* %RCX.i829
  %2896 = load i64, i64* %PC.i827
  %2897 = add i64 %2896, 3
  store i64 %2897, i64* %PC.i827
  %2898 = add i64 %2895, %2894
  store i64 %2898, i64* %RAX.i828, align 8
  %2899 = icmp ult i64 %2898, %2894
  %2900 = icmp ult i64 %2898, %2895
  %2901 = or i1 %2899, %2900
  %2902 = zext i1 %2901 to i8
  %2903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2902, i8* %2903, align 1
  %2904 = trunc i64 %2898 to i32
  %2905 = and i32 %2904, 255
  %2906 = call i32 @llvm.ctpop.i32(i32 %2905)
  %2907 = trunc i32 %2906 to i8
  %2908 = and i8 %2907, 1
  %2909 = xor i8 %2908, 1
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2909, i8* %2910, align 1
  %2911 = xor i64 %2895, %2894
  %2912 = xor i64 %2911, %2898
  %2913 = lshr i64 %2912, 4
  %2914 = trunc i64 %2913 to i8
  %2915 = and i8 %2914, 1
  %2916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2915, i8* %2916, align 1
  %2917 = icmp eq i64 %2898, 0
  %2918 = zext i1 %2917 to i8
  %2919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2918, i8* %2919, align 1
  %2920 = lshr i64 %2898, 63
  %2921 = trunc i64 %2920 to i8
  %2922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2921, i8* %2922, align 1
  %2923 = lshr i64 %2894, 63
  %2924 = lshr i64 %2895, 63
  %2925 = xor i64 %2920, %2923
  %2926 = xor i64 %2920, %2924
  %2927 = add i64 %2925, %2926
  %2928 = icmp eq i64 %2927, 2
  %2929 = zext i1 %2928 to i8
  %2930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2929, i8* %2930, align 1
  store %struct.Memory* %loadMem_44ed36, %struct.Memory** %MEMORY
  %loadMem_44ed39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2932 = getelementptr inbounds %struct.GPR, %struct.GPR* %2931, i32 0, i32 33
  %2933 = getelementptr inbounds %struct.Reg, %struct.Reg* %2932, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %2933 to i64*
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2935 = getelementptr inbounds %struct.GPR, %struct.GPR* %2934, i32 0, i32 5
  %2936 = getelementptr inbounds %struct.Reg, %struct.Reg* %2935, i32 0, i32 0
  %RCX.i825 = bitcast %union.anon* %2936 to i64*
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2938 = getelementptr inbounds %struct.GPR, %struct.GPR* %2937, i32 0, i32 15
  %2939 = getelementptr inbounds %struct.Reg, %struct.Reg* %2938, i32 0, i32 0
  %RBP.i826 = bitcast %union.anon* %2939 to i64*
  %2940 = load i64, i64* %RBP.i826
  %2941 = sub i64 %2940, 456
  %2942 = load i64, i64* %PC.i824
  %2943 = add i64 %2942, 7
  store i64 %2943, i64* %PC.i824
  %2944 = inttoptr i64 %2941 to i64*
  %2945 = load i64, i64* %2944
  store i64 %2945, i64* %RCX.i825, align 8
  store %struct.Memory* %loadMem_44ed39, %struct.Memory** %MEMORY
  %loadMem_44ed40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2947 = getelementptr inbounds %struct.GPR, %struct.GPR* %2946, i32 0, i32 33
  %2948 = getelementptr inbounds %struct.Reg, %struct.Reg* %2947, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %2948 to i64*
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2950 = getelementptr inbounds %struct.GPR, %struct.GPR* %2949, i32 0, i32 5
  %2951 = getelementptr inbounds %struct.Reg, %struct.Reg* %2950, i32 0, i32 0
  %RCX.i823 = bitcast %union.anon* %2951 to i64*
  %2952 = load i64, i64* %RCX.i823
  %2953 = load i64, i64* %PC.i822
  %2954 = add i64 %2953, 7
  store i64 %2954, i64* %PC.i822
  %2955 = add i64 456, %2952
  store i64 %2955, i64* %RCX.i823, align 8
  %2956 = icmp ult i64 %2955, %2952
  %2957 = icmp ult i64 %2955, 456
  %2958 = or i1 %2956, %2957
  %2959 = zext i1 %2958 to i8
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2959, i8* %2960, align 1
  %2961 = trunc i64 %2955 to i32
  %2962 = and i32 %2961, 255
  %2963 = call i32 @llvm.ctpop.i32(i32 %2962)
  %2964 = trunc i32 %2963 to i8
  %2965 = and i8 %2964, 1
  %2966 = xor i8 %2965, 1
  %2967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2966, i8* %2967, align 1
  %2968 = xor i64 456, %2952
  %2969 = xor i64 %2968, %2955
  %2970 = lshr i64 %2969, 4
  %2971 = trunc i64 %2970 to i8
  %2972 = and i8 %2971, 1
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2972, i8* %2973, align 1
  %2974 = icmp eq i64 %2955, 0
  %2975 = zext i1 %2974 to i8
  %2976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2975, i8* %2976, align 1
  %2977 = lshr i64 %2955, 63
  %2978 = trunc i64 %2977 to i8
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2978, i8* %2979, align 1
  %2980 = lshr i64 %2952, 63
  %2981 = xor i64 %2977, %2980
  %2982 = add i64 %2981, %2977
  %2983 = icmp eq i64 %2982, 2
  %2984 = zext i1 %2983 to i8
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2984, i8* %2985, align 1
  store %struct.Memory* %loadMem_44ed40, %struct.Memory** %MEMORY
  %loadMem_44ed47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2987 = getelementptr inbounds %struct.GPR, %struct.GPR* %2986, i32 0, i32 33
  %2988 = getelementptr inbounds %struct.Reg, %struct.Reg* %2987, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %2988 to i64*
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2990 = getelementptr inbounds %struct.GPR, %struct.GPR* %2989, i32 0, i32 7
  %2991 = getelementptr inbounds %struct.Reg, %struct.Reg* %2990, i32 0, i32 0
  %RDX.i820 = bitcast %union.anon* %2991 to i64*
  %2992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2993 = getelementptr inbounds %struct.GPR, %struct.GPR* %2992, i32 0, i32 15
  %2994 = getelementptr inbounds %struct.Reg, %struct.Reg* %2993, i32 0, i32 0
  %RBP.i821 = bitcast %union.anon* %2994 to i64*
  %2995 = load i64, i64* %RBP.i821
  %2996 = sub i64 %2995, 440
  %2997 = load i64, i64* %PC.i819
  %2998 = add i64 %2997, 7
  store i64 %2998, i64* %PC.i819
  %2999 = inttoptr i64 %2996 to i32*
  %3000 = load i32, i32* %2999
  %3001 = sext i32 %3000 to i64
  store i64 %3001, i64* %RDX.i820, align 8
  store %struct.Memory* %loadMem_44ed47, %struct.Memory** %MEMORY
  %loadMem_44ed4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3003 = getelementptr inbounds %struct.GPR, %struct.GPR* %3002, i32 0, i32 33
  %3004 = getelementptr inbounds %struct.Reg, %struct.Reg* %3003, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %3004 to i64*
  %3005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3006 = getelementptr inbounds %struct.GPR, %struct.GPR* %3005, i32 0, i32 7
  %3007 = getelementptr inbounds %struct.Reg, %struct.Reg* %3006, i32 0, i32 0
  %RDX.i818 = bitcast %union.anon* %3007 to i64*
  %3008 = load i64, i64* %RDX.i818
  %3009 = load i64, i64* %PC.i817
  %3010 = add i64 %3009, 4
  store i64 %3010, i64* %PC.i817
  %3011 = shl i64 %3008, 1
  %3012 = icmp slt i64 %3011, 0
  %3013 = shl i64 %3011, 1
  store i64 %3013, i64* %RDX.i818, align 8
  %3014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3015 = zext i1 %3012 to i8
  store i8 %3015, i8* %3014, align 1
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3017 = trunc i64 %3013 to i32
  %3018 = and i32 %3017, 254
  %3019 = call i32 @llvm.ctpop.i32(i32 %3018)
  %3020 = trunc i32 %3019 to i8
  %3021 = and i8 %3020, 1
  %3022 = xor i8 %3021, 1
  store i8 %3022, i8* %3016, align 1
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3023, align 1
  %3024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3025 = icmp eq i64 %3013, 0
  %3026 = zext i1 %3025 to i8
  store i8 %3026, i8* %3024, align 1
  %3027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3028 = lshr i64 %3013, 63
  %3029 = trunc i64 %3028 to i8
  store i8 %3029, i8* %3027, align 1
  %3030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3030, align 1
  store %struct.Memory* %loadMem_44ed4e, %struct.Memory** %MEMORY
  %loadMem_44ed52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3032 = getelementptr inbounds %struct.GPR, %struct.GPR* %3031, i32 0, i32 33
  %3033 = getelementptr inbounds %struct.Reg, %struct.Reg* %3032, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %3033 to i64*
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3035 = getelementptr inbounds %struct.GPR, %struct.GPR* %3034, i32 0, i32 5
  %3036 = getelementptr inbounds %struct.Reg, %struct.Reg* %3035, i32 0, i32 0
  %RCX.i815 = bitcast %union.anon* %3036 to i64*
  %3037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3038 = getelementptr inbounds %struct.GPR, %struct.GPR* %3037, i32 0, i32 7
  %3039 = getelementptr inbounds %struct.Reg, %struct.Reg* %3038, i32 0, i32 0
  %RDX.i816 = bitcast %union.anon* %3039 to i64*
  %3040 = load i64, i64* %RCX.i815
  %3041 = load i64, i64* %RDX.i816
  %3042 = load i64, i64* %PC.i814
  %3043 = add i64 %3042, 3
  store i64 %3043, i64* %PC.i814
  %3044 = add i64 %3041, %3040
  store i64 %3044, i64* %RCX.i815, align 8
  %3045 = icmp ult i64 %3044, %3040
  %3046 = icmp ult i64 %3044, %3041
  %3047 = or i1 %3045, %3046
  %3048 = zext i1 %3047 to i8
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3048, i8* %3049, align 1
  %3050 = trunc i64 %3044 to i32
  %3051 = and i32 %3050, 255
  %3052 = call i32 @llvm.ctpop.i32(i32 %3051)
  %3053 = trunc i32 %3052 to i8
  %3054 = and i8 %3053, 1
  %3055 = xor i8 %3054, 1
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3055, i8* %3056, align 1
  %3057 = xor i64 %3041, %3040
  %3058 = xor i64 %3057, %3044
  %3059 = lshr i64 %3058, 4
  %3060 = trunc i64 %3059 to i8
  %3061 = and i8 %3060, 1
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3061, i8* %3062, align 1
  %3063 = icmp eq i64 %3044, 0
  %3064 = zext i1 %3063 to i8
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3064, i8* %3065, align 1
  %3066 = lshr i64 %3044, 63
  %3067 = trunc i64 %3066 to i8
  %3068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3067, i8* %3068, align 1
  %3069 = lshr i64 %3040, 63
  %3070 = lshr i64 %3041, 63
  %3071 = xor i64 %3066, %3069
  %3072 = xor i64 %3066, %3070
  %3073 = add i64 %3071, %3072
  %3074 = icmp eq i64 %3073, 2
  %3075 = zext i1 %3074 to i8
  %3076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3075, i8* %3076, align 1
  store %struct.Memory* %loadMem_44ed52, %struct.Memory** %MEMORY
  %loadMem_44ed55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3078 = getelementptr inbounds %struct.GPR, %struct.GPR* %3077, i32 0, i32 33
  %3079 = getelementptr inbounds %struct.Reg, %struct.Reg* %3078, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %3079 to i64*
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3081 = getelementptr inbounds %struct.GPR, %struct.GPR* %3080, i32 0, i32 1
  %3082 = getelementptr inbounds %struct.Reg, %struct.Reg* %3081, i32 0, i32 0
  %RAX.i812 = bitcast %union.anon* %3082 to i64*
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3084 = getelementptr inbounds %struct.GPR, %struct.GPR* %3083, i32 0, i32 9
  %3085 = getelementptr inbounds %struct.Reg, %struct.Reg* %3084, i32 0, i32 0
  %RSI.i813 = bitcast %union.anon* %3085 to i64*
  %3086 = load i64, i64* %RAX.i812
  %3087 = load i64, i64* %PC.i811
  %3088 = add i64 %3087, 3
  store i64 %3088, i64* %PC.i811
  store i64 %3086, i64* %RSI.i813, align 8
  store %struct.Memory* %loadMem_44ed55, %struct.Memory** %MEMORY
  %loadMem_44ed58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3090 = getelementptr inbounds %struct.GPR, %struct.GPR* %3089, i32 0, i32 33
  %3091 = getelementptr inbounds %struct.Reg, %struct.Reg* %3090, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %3091 to i64*
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3093 = getelementptr inbounds %struct.GPR, %struct.GPR* %3092, i32 0, i32 5
  %3094 = getelementptr inbounds %struct.Reg, %struct.Reg* %3093, i32 0, i32 0
  %RCX.i809 = bitcast %union.anon* %3094 to i64*
  %3095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3096 = getelementptr inbounds %struct.GPR, %struct.GPR* %3095, i32 0, i32 7
  %3097 = getelementptr inbounds %struct.Reg, %struct.Reg* %3096, i32 0, i32 0
  %RDX.i810 = bitcast %union.anon* %3097 to i64*
  %3098 = load i64, i64* %RCX.i809
  %3099 = load i64, i64* %PC.i808
  %3100 = add i64 %3099, 3
  store i64 %3100, i64* %PC.i808
  store i64 %3098, i64* %RDX.i810, align 8
  store %struct.Memory* %loadMem_44ed58, %struct.Memory** %MEMORY
  %loadMem1_44ed5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3102 = getelementptr inbounds %struct.GPR, %struct.GPR* %3101, i32 0, i32 33
  %3103 = getelementptr inbounds %struct.Reg, %struct.Reg* %3102, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %3103 to i64*
  %3104 = load i64, i64* %PC.i807
  %3105 = add i64 %3104, -233323
  %3106 = load i64, i64* %PC.i807
  %3107 = add i64 %3106, 5
  %3108 = load i64, i64* %PC.i807
  %3109 = add i64 %3108, 5
  store i64 %3109, i64* %PC.i807
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3111 = load i64, i64* %3110, align 8
  %3112 = add i64 %3111, -8
  %3113 = inttoptr i64 %3112 to i64*
  store i64 %3107, i64* %3113
  store i64 %3112, i64* %3110, align 8
  %3114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3105, i64* %3114, align 8
  store %struct.Memory* %loadMem1_44ed5b, %struct.Memory** %MEMORY
  %loadMem2_44ed5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44ed5b = load i64, i64* %3
  %call2_44ed5b = call %struct.Memory* @sub_415df0.get_move_from_stack(%struct.State* %0, i64 %loadPC_44ed5b, %struct.Memory* %loadMem2_44ed5b)
  store %struct.Memory* %call2_44ed5b, %struct.Memory** %MEMORY
  %loadMem_44ed60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3116 = getelementptr inbounds %struct.GPR, %struct.GPR* %3115, i32 0, i32 33
  %3117 = getelementptr inbounds %struct.Reg, %struct.Reg* %3116, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %3117 to i64*
  %3118 = load i64, i64* %PC.i806
  %3119 = add i64 %3118, 55
  %3120 = load i64, i64* %PC.i806
  %3121 = add i64 %3120, 5
  store i64 %3121, i64* %PC.i806
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3119, i64* %3122, align 8
  store %struct.Memory* %loadMem_44ed60, %struct.Memory** %MEMORY
  br label %block_.L_44ed97

block_.L_44ed65:                                  ; preds = %block_44ed05
  %loadMem_44ed65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3124 = getelementptr inbounds %struct.GPR, %struct.GPR* %3123, i32 0, i32 33
  %3125 = getelementptr inbounds %struct.Reg, %struct.Reg* %3124, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %3125 to i64*
  %3126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3127 = getelementptr inbounds %struct.GPR, %struct.GPR* %3126, i32 0, i32 1
  %3128 = getelementptr inbounds %struct.Reg, %struct.Reg* %3127, i32 0, i32 0
  %RAX.i804 = bitcast %union.anon* %3128 to i64*
  %3129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3130 = getelementptr inbounds %struct.GPR, %struct.GPR* %3129, i32 0, i32 15
  %3131 = getelementptr inbounds %struct.Reg, %struct.Reg* %3130, i32 0, i32 0
  %RBP.i805 = bitcast %union.anon* %3131 to i64*
  %3132 = load i64, i64* %RBP.i805
  %3133 = sub i64 %3132, 456
  %3134 = load i64, i64* %PC.i803
  %3135 = add i64 %3134, 7
  store i64 %3135, i64* %PC.i803
  %3136 = inttoptr i64 %3133 to i64*
  %3137 = load i64, i64* %3136
  store i64 %3137, i64* %RAX.i804, align 8
  store %struct.Memory* %loadMem_44ed65, %struct.Memory** %MEMORY
  %loadMem_44ed6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3139 = getelementptr inbounds %struct.GPR, %struct.GPR* %3138, i32 0, i32 33
  %3140 = getelementptr inbounds %struct.Reg, %struct.Reg* %3139, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %3140 to i64*
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3142 = getelementptr inbounds %struct.GPR, %struct.GPR* %3141, i32 0, i32 5
  %3143 = getelementptr inbounds %struct.Reg, %struct.Reg* %3142, i32 0, i32 0
  %RCX.i801 = bitcast %union.anon* %3143 to i64*
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3145 = getelementptr inbounds %struct.GPR, %struct.GPR* %3144, i32 0, i32 15
  %3146 = getelementptr inbounds %struct.Reg, %struct.Reg* %3145, i32 0, i32 0
  %RBP.i802 = bitcast %union.anon* %3146 to i64*
  %3147 = load i64, i64* %RBP.i802
  %3148 = sub i64 %3147, 440
  %3149 = load i64, i64* %PC.i800
  %3150 = add i64 %3149, 7
  store i64 %3150, i64* %PC.i800
  %3151 = inttoptr i64 %3148 to i32*
  %3152 = load i32, i32* %3151
  %3153 = sext i32 %3152 to i64
  store i64 %3153, i64* %RCX.i801, align 8
  store %struct.Memory* %loadMem_44ed6c, %struct.Memory** %MEMORY
  %loadMem_44ed73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3155 = getelementptr inbounds %struct.GPR, %struct.GPR* %3154, i32 0, i32 33
  %3156 = getelementptr inbounds %struct.Reg, %struct.Reg* %3155, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %3156 to i64*
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3158 = getelementptr inbounds %struct.GPR, %struct.GPR* %3157, i32 0, i32 1
  %3159 = getelementptr inbounds %struct.Reg, %struct.Reg* %3158, i32 0, i32 0
  %RAX.i798 = bitcast %union.anon* %3159 to i64*
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3161 = getelementptr inbounds %struct.GPR, %struct.GPR* %3160, i32 0, i32 5
  %3162 = getelementptr inbounds %struct.Reg, %struct.Reg* %3161, i32 0, i32 0
  %RCX.i799 = bitcast %union.anon* %3162 to i64*
  %3163 = load i64, i64* %RAX.i798
  %3164 = load i64, i64* %RCX.i799
  %3165 = mul i64 %3164, 4
  %3166 = add i64 %3163, 436
  %3167 = add i64 %3166, %3165
  %3168 = load i64, i64* %PC.i797
  %3169 = add i64 %3168, 11
  store i64 %3169, i64* %PC.i797
  %3170 = inttoptr i64 %3167 to i32*
  store i32 0, i32* %3170
  store %struct.Memory* %loadMem_44ed73, %struct.Memory** %MEMORY
  %loadMem_44ed7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3172 = getelementptr inbounds %struct.GPR, %struct.GPR* %3171, i32 0, i32 33
  %3173 = getelementptr inbounds %struct.Reg, %struct.Reg* %3172, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %3173 to i64*
  %3174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3175 = getelementptr inbounds %struct.GPR, %struct.GPR* %3174, i32 0, i32 1
  %3176 = getelementptr inbounds %struct.Reg, %struct.Reg* %3175, i32 0, i32 0
  %RAX.i795 = bitcast %union.anon* %3176 to i64*
  %3177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3178 = getelementptr inbounds %struct.GPR, %struct.GPR* %3177, i32 0, i32 15
  %3179 = getelementptr inbounds %struct.Reg, %struct.Reg* %3178, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %3179 to i64*
  %3180 = load i64, i64* %RBP.i796
  %3181 = sub i64 %3180, 456
  %3182 = load i64, i64* %PC.i794
  %3183 = add i64 %3182, 7
  store i64 %3183, i64* %PC.i794
  %3184 = inttoptr i64 %3181 to i64*
  %3185 = load i64, i64* %3184
  store i64 %3185, i64* %RAX.i795, align 8
  store %struct.Memory* %loadMem_44ed7e, %struct.Memory** %MEMORY
  %loadMem_44ed85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3187 = getelementptr inbounds %struct.GPR, %struct.GPR* %3186, i32 0, i32 33
  %3188 = getelementptr inbounds %struct.Reg, %struct.Reg* %3187, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %3188 to i64*
  %3189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3190 = getelementptr inbounds %struct.GPR, %struct.GPR* %3189, i32 0, i32 5
  %3191 = getelementptr inbounds %struct.Reg, %struct.Reg* %3190, i32 0, i32 0
  %RCX.i792 = bitcast %union.anon* %3191 to i64*
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3193 = getelementptr inbounds %struct.GPR, %struct.GPR* %3192, i32 0, i32 15
  %3194 = getelementptr inbounds %struct.Reg, %struct.Reg* %3193, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %3194 to i64*
  %3195 = load i64, i64* %RBP.i793
  %3196 = sub i64 %3195, 440
  %3197 = load i64, i64* %PC.i791
  %3198 = add i64 %3197, 7
  store i64 %3198, i64* %PC.i791
  %3199 = inttoptr i64 %3196 to i32*
  %3200 = load i32, i32* %3199
  %3201 = sext i32 %3200 to i64
  store i64 %3201, i64* %RCX.i792, align 8
  store %struct.Memory* %loadMem_44ed85, %struct.Memory** %MEMORY
  %loadMem_44ed8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3203 = getelementptr inbounds %struct.GPR, %struct.GPR* %3202, i32 0, i32 33
  %3204 = getelementptr inbounds %struct.Reg, %struct.Reg* %3203, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %3204 to i64*
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3206 = getelementptr inbounds %struct.GPR, %struct.GPR* %3205, i32 0, i32 1
  %3207 = getelementptr inbounds %struct.Reg, %struct.Reg* %3206, i32 0, i32 0
  %RAX.i789 = bitcast %union.anon* %3207 to i64*
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3209 = getelementptr inbounds %struct.GPR, %struct.GPR* %3208, i32 0, i32 5
  %3210 = getelementptr inbounds %struct.Reg, %struct.Reg* %3209, i32 0, i32 0
  %RCX.i790 = bitcast %union.anon* %3210 to i64*
  %3211 = load i64, i64* %RAX.i789
  %3212 = load i64, i64* %RCX.i790
  %3213 = mul i64 %3212, 4
  %3214 = add i64 %3211, 456
  %3215 = add i64 %3214, %3213
  %3216 = load i64, i64* %PC.i788
  %3217 = add i64 %3216, 11
  store i64 %3217, i64* %PC.i788
  %3218 = inttoptr i64 %3215 to i32*
  store i32 0, i32* %3218
  store %struct.Memory* %loadMem_44ed8c, %struct.Memory** %MEMORY
  br label %block_.L_44ed97

block_.L_44ed97:                                  ; preds = %block_.L_44ed65, %block_44ed18
  %loadMem_44ed97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3220 = getelementptr inbounds %struct.GPR, %struct.GPR* %3219, i32 0, i32 33
  %3221 = getelementptr inbounds %struct.Reg, %struct.Reg* %3220, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %3221 to i64*
  %3222 = load i64, i64* %PC.i787
  %3223 = add i64 %3222, 5
  %3224 = load i64, i64* %PC.i787
  %3225 = add i64 %3224, 5
  store i64 %3225, i64* %PC.i787
  %3226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3223, i64* %3226, align 8
  store %struct.Memory* %loadMem_44ed97, %struct.Memory** %MEMORY
  br label %block_.L_44ed9c

block_.L_44ed9c:                                  ; preds = %block_.L_44ed97
  %loadMem_44ed9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3228 = getelementptr inbounds %struct.GPR, %struct.GPR* %3227, i32 0, i32 33
  %3229 = getelementptr inbounds %struct.Reg, %struct.Reg* %3228, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %3229 to i64*
  %3230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3231 = getelementptr inbounds %struct.GPR, %struct.GPR* %3230, i32 0, i32 1
  %3232 = getelementptr inbounds %struct.Reg, %struct.Reg* %3231, i32 0, i32 0
  %RAX.i785 = bitcast %union.anon* %3232 to i64*
  %3233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3234 = getelementptr inbounds %struct.GPR, %struct.GPR* %3233, i32 0, i32 15
  %3235 = getelementptr inbounds %struct.Reg, %struct.Reg* %3234, i32 0, i32 0
  %RBP.i786 = bitcast %union.anon* %3235 to i64*
  %3236 = load i64, i64* %RBP.i786
  %3237 = sub i64 %3236, 440
  %3238 = load i64, i64* %PC.i784
  %3239 = add i64 %3238, 6
  store i64 %3239, i64* %PC.i784
  %3240 = inttoptr i64 %3237 to i32*
  %3241 = load i32, i32* %3240
  %3242 = zext i32 %3241 to i64
  store i64 %3242, i64* %RAX.i785, align 8
  store %struct.Memory* %loadMem_44ed9c, %struct.Memory** %MEMORY
  %loadMem_44eda2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3244 = getelementptr inbounds %struct.GPR, %struct.GPR* %3243, i32 0, i32 33
  %3245 = getelementptr inbounds %struct.Reg, %struct.Reg* %3244, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %3245 to i64*
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3247 = getelementptr inbounds %struct.GPR, %struct.GPR* %3246, i32 0, i32 1
  %3248 = getelementptr inbounds %struct.Reg, %struct.Reg* %3247, i32 0, i32 0
  %RAX.i783 = bitcast %union.anon* %3248 to i64*
  %3249 = load i64, i64* %RAX.i783
  %3250 = load i64, i64* %PC.i782
  %3251 = add i64 %3250, 3
  store i64 %3251, i64* %PC.i782
  %3252 = trunc i64 %3249 to i32
  %3253 = add i32 1, %3252
  %3254 = zext i32 %3253 to i64
  store i64 %3254, i64* %RAX.i783, align 8
  %3255 = icmp ult i32 %3253, %3252
  %3256 = icmp ult i32 %3253, 1
  %3257 = or i1 %3255, %3256
  %3258 = zext i1 %3257 to i8
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3258, i8* %3259, align 1
  %3260 = and i32 %3253, 255
  %3261 = call i32 @llvm.ctpop.i32(i32 %3260)
  %3262 = trunc i32 %3261 to i8
  %3263 = and i8 %3262, 1
  %3264 = xor i8 %3263, 1
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3264, i8* %3265, align 1
  %3266 = xor i64 1, %3249
  %3267 = trunc i64 %3266 to i32
  %3268 = xor i32 %3267, %3253
  %3269 = lshr i32 %3268, 4
  %3270 = trunc i32 %3269 to i8
  %3271 = and i8 %3270, 1
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3271, i8* %3272, align 1
  %3273 = icmp eq i32 %3253, 0
  %3274 = zext i1 %3273 to i8
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3274, i8* %3275, align 1
  %3276 = lshr i32 %3253, 31
  %3277 = trunc i32 %3276 to i8
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3277, i8* %3278, align 1
  %3279 = lshr i32 %3252, 31
  %3280 = xor i32 %3276, %3279
  %3281 = add i32 %3280, %3276
  %3282 = icmp eq i32 %3281, 2
  %3283 = zext i1 %3282 to i8
  %3284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3283, i8* %3284, align 1
  store %struct.Memory* %loadMem_44eda2, %struct.Memory** %MEMORY
  %loadMem_44eda5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3286 = getelementptr inbounds %struct.GPR, %struct.GPR* %3285, i32 0, i32 33
  %3287 = getelementptr inbounds %struct.Reg, %struct.Reg* %3286, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %3287 to i64*
  %3288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3289 = getelementptr inbounds %struct.GPR, %struct.GPR* %3288, i32 0, i32 1
  %3290 = getelementptr inbounds %struct.Reg, %struct.Reg* %3289, i32 0, i32 0
  %EAX.i780 = bitcast %union.anon* %3290 to i32*
  %3291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3292 = getelementptr inbounds %struct.GPR, %struct.GPR* %3291, i32 0, i32 15
  %3293 = getelementptr inbounds %struct.Reg, %struct.Reg* %3292, i32 0, i32 0
  %RBP.i781 = bitcast %union.anon* %3293 to i64*
  %3294 = load i64, i64* %RBP.i781
  %3295 = sub i64 %3294, 440
  %3296 = load i32, i32* %EAX.i780
  %3297 = zext i32 %3296 to i64
  %3298 = load i64, i64* %PC.i779
  %3299 = add i64 %3298, 6
  store i64 %3299, i64* %PC.i779
  %3300 = inttoptr i64 %3295 to i32*
  store i32 %3296, i32* %3300
  store %struct.Memory* %loadMem_44eda5, %struct.Memory** %MEMORY
  %loadMem_44edab = load %struct.Memory*, %struct.Memory** %MEMORY
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3302 = getelementptr inbounds %struct.GPR, %struct.GPR* %3301, i32 0, i32 33
  %3303 = getelementptr inbounds %struct.Reg, %struct.Reg* %3302, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %3303 to i64*
  %3304 = load i64, i64* %PC.i778
  %3305 = add i64 %3304, -179
  %3306 = load i64, i64* %PC.i778
  %3307 = add i64 %3306, 5
  store i64 %3307, i64* %PC.i778
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3305, i64* %3308, align 8
  store %struct.Memory* %loadMem_44edab, %struct.Memory** %MEMORY
  br label %block_.L_44ecf8

block_.L_44edb0:                                  ; preds = %block_.L_44ecf8
  %loadMem_44edb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3310 = getelementptr inbounds %struct.GPR, %struct.GPR* %3309, i32 0, i32 33
  %3311 = getelementptr inbounds %struct.Reg, %struct.Reg* %3310, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %3311 to i64*
  %3312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3313 = getelementptr inbounds %struct.GPR, %struct.GPR* %3312, i32 0, i32 15
  %3314 = getelementptr inbounds %struct.Reg, %struct.Reg* %3313, i32 0, i32 0
  %RBP.i777 = bitcast %union.anon* %3314 to i64*
  %3315 = load i64, i64* %RBP.i777
  %3316 = sub i64 %3315, 436
  %3317 = load i64, i64* %PC.i776
  %3318 = add i64 %3317, 10
  store i64 %3318, i64* %PC.i776
  %3319 = inttoptr i64 %3316 to i32*
  store i32 21, i32* %3319
  store %struct.Memory* %loadMem_44edb0, %struct.Memory** %MEMORY
  br label %block_.L_44edba

block_.L_44edba:                                  ; preds = %block_44edca, %block_.L_44edb0
  %loadMem_44edba = load %struct.Memory*, %struct.Memory** %MEMORY
  %3320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3321 = getelementptr inbounds %struct.GPR, %struct.GPR* %3320, i32 0, i32 33
  %3322 = getelementptr inbounds %struct.Reg, %struct.Reg* %3321, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %3322 to i64*
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3324 = getelementptr inbounds %struct.GPR, %struct.GPR* %3323, i32 0, i32 15
  %3325 = getelementptr inbounds %struct.Reg, %struct.Reg* %3324, i32 0, i32 0
  %RBP.i775 = bitcast %union.anon* %3325 to i64*
  %3326 = load i64, i64* %RBP.i775
  %3327 = sub i64 %3326, 436
  %3328 = load i64, i64* %PC.i774
  %3329 = add i64 %3328, 10
  store i64 %3329, i64* %PC.i774
  %3330 = inttoptr i64 %3327 to i32*
  %3331 = load i32, i32* %3330
  %3332 = sub i32 %3331, 400
  %3333 = icmp ult i32 %3331, 400
  %3334 = zext i1 %3333 to i8
  %3335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3334, i8* %3335, align 1
  %3336 = and i32 %3332, 255
  %3337 = call i32 @llvm.ctpop.i32(i32 %3336)
  %3338 = trunc i32 %3337 to i8
  %3339 = and i8 %3338, 1
  %3340 = xor i8 %3339, 1
  %3341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3340, i8* %3341, align 1
  %3342 = xor i32 %3331, 400
  %3343 = xor i32 %3342, %3332
  %3344 = lshr i32 %3343, 4
  %3345 = trunc i32 %3344 to i8
  %3346 = and i8 %3345, 1
  %3347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3346, i8* %3347, align 1
  %3348 = icmp eq i32 %3332, 0
  %3349 = zext i1 %3348 to i8
  %3350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3349, i8* %3350, align 1
  %3351 = lshr i32 %3332, 31
  %3352 = trunc i32 %3351 to i8
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3352, i8* %3353, align 1
  %3354 = lshr i32 %3331, 31
  %3355 = xor i32 %3351, %3354
  %3356 = add i32 %3355, %3354
  %3357 = icmp eq i32 %3356, 2
  %3358 = zext i1 %3357 to i8
  %3359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3358, i8* %3359, align 1
  store %struct.Memory* %loadMem_44edba, %struct.Memory** %MEMORY
  %loadMem_44edc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3361 = getelementptr inbounds %struct.GPR, %struct.GPR* %3360, i32 0, i32 33
  %3362 = getelementptr inbounds %struct.Reg, %struct.Reg* %3361, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %3362 to i64*
  %3363 = load i64, i64* %PC.i773
  %3364 = add i64 %3363, 54
  %3365 = load i64, i64* %PC.i773
  %3366 = add i64 %3365, 6
  %3367 = load i64, i64* %PC.i773
  %3368 = add i64 %3367, 6
  store i64 %3368, i64* %PC.i773
  %3369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3370 = load i8, i8* %3369, align 1
  %3371 = icmp ne i8 %3370, 0
  %3372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3373 = load i8, i8* %3372, align 1
  %3374 = icmp ne i8 %3373, 0
  %3375 = xor i1 %3371, %3374
  %3376 = xor i1 %3375, true
  %3377 = zext i1 %3376 to i8
  store i8 %3377, i8* %BRANCH_TAKEN, align 1
  %3378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3379 = select i1 %3375, i64 %3366, i64 %3364
  store i64 %3379, i64* %3378, align 8
  store %struct.Memory* %loadMem_44edc4, %struct.Memory** %MEMORY
  %loadBr_44edc4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44edc4 = icmp eq i8 %loadBr_44edc4, 1
  br i1 %cmpBr_44edc4, label %block_.L_44edfa, label %block_44edca

block_44edca:                                     ; preds = %block_.L_44edba
  %loadMem_44edca = load %struct.Memory*, %struct.Memory** %MEMORY
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3381 = getelementptr inbounds %struct.GPR, %struct.GPR* %3380, i32 0, i32 33
  %3382 = getelementptr inbounds %struct.Reg, %struct.Reg* %3381, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %3382 to i64*
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3384 = getelementptr inbounds %struct.GPR, %struct.GPR* %3383, i32 0, i32 1
  %3385 = getelementptr inbounds %struct.Reg, %struct.Reg* %3384, i32 0, i32 0
  %RAX.i771 = bitcast %union.anon* %3385 to i64*
  %3386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3387 = getelementptr inbounds %struct.GPR, %struct.GPR* %3386, i32 0, i32 15
  %3388 = getelementptr inbounds %struct.Reg, %struct.Reg* %3387, i32 0, i32 0
  %RBP.i772 = bitcast %union.anon* %3388 to i64*
  %3389 = load i64, i64* %RBP.i772
  %3390 = sub i64 %3389, 436
  %3391 = load i64, i64* %PC.i770
  %3392 = add i64 %3391, 7
  store i64 %3392, i64* %PC.i770
  %3393 = inttoptr i64 %3390 to i32*
  %3394 = load i32, i32* %3393
  %3395 = sext i32 %3394 to i64
  store i64 %3395, i64* %RAX.i771, align 8
  store %struct.Memory* %loadMem_44edca, %struct.Memory** %MEMORY
  %loadMem_44edd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3397 = getelementptr inbounds %struct.GPR, %struct.GPR* %3396, i32 0, i32 33
  %3398 = getelementptr inbounds %struct.Reg, %struct.Reg* %3397, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %3398 to i64*
  %3399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3400 = getelementptr inbounds %struct.GPR, %struct.GPR* %3399, i32 0, i32 5
  %3401 = getelementptr inbounds %struct.Reg, %struct.Reg* %3400, i32 0, i32 0
  %3402 = bitcast %union.anon* %3401 to %struct.anon.2*
  %CL.i768 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3402, i32 0, i32 0
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3404 = getelementptr inbounds %struct.GPR, %struct.GPR* %3403, i32 0, i32 1
  %3405 = getelementptr inbounds %struct.Reg, %struct.Reg* %3404, i32 0, i32 0
  %RAX.i769 = bitcast %union.anon* %3405 to i64*
  %3406 = load i64, i64* %RAX.i769
  %3407 = add i64 %3406, 11554848
  %3408 = load i64, i64* %PC.i767
  %3409 = add i64 %3408, 7
  store i64 %3409, i64* %PC.i767
  %3410 = inttoptr i64 %3407 to i8*
  %3411 = load i8, i8* %3410
  store i8 %3411, i8* %CL.i768, align 1
  store %struct.Memory* %loadMem_44edd1, %struct.Memory** %MEMORY
  %loadMem_44edd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3413 = getelementptr inbounds %struct.GPR, %struct.GPR* %3412, i32 0, i32 33
  %3414 = getelementptr inbounds %struct.Reg, %struct.Reg* %3413, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %3414 to i64*
  %3415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3416 = getelementptr inbounds %struct.GPR, %struct.GPR* %3415, i32 0, i32 1
  %3417 = getelementptr inbounds %struct.Reg, %struct.Reg* %3416, i32 0, i32 0
  %RAX.i765 = bitcast %union.anon* %3417 to i64*
  %3418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3419 = getelementptr inbounds %struct.GPR, %struct.GPR* %3418, i32 0, i32 15
  %3420 = getelementptr inbounds %struct.Reg, %struct.Reg* %3419, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %3420 to i64*
  %3421 = load i64, i64* %RBP.i766
  %3422 = sub i64 %3421, 436
  %3423 = load i64, i64* %PC.i764
  %3424 = add i64 %3423, 7
  store i64 %3424, i64* %PC.i764
  %3425 = inttoptr i64 %3422 to i32*
  %3426 = load i32, i32* %3425
  %3427 = sext i32 %3426 to i64
  store i64 %3427, i64* %RAX.i765, align 8
  store %struct.Memory* %loadMem_44edd8, %struct.Memory** %MEMORY
  %loadMem_44eddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3429 = getelementptr inbounds %struct.GPR, %struct.GPR* %3428, i32 0, i32 33
  %3430 = getelementptr inbounds %struct.Reg, %struct.Reg* %3429, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %3430 to i64*
  %3431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3432 = getelementptr inbounds %struct.GPR, %struct.GPR* %3431, i32 0, i32 5
  %3433 = getelementptr inbounds %struct.Reg, %struct.Reg* %3432, i32 0, i32 0
  %3434 = bitcast %union.anon* %3433 to %struct.anon.2*
  %CL.i761 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3434, i32 0, i32 0
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3436 = getelementptr inbounds %struct.GPR, %struct.GPR* %3435, i32 0, i32 1
  %3437 = getelementptr inbounds %struct.Reg, %struct.Reg* %3436, i32 0, i32 0
  %RAX.i762 = bitcast %union.anon* %3437 to i64*
  %3438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3439 = getelementptr inbounds %struct.GPR, %struct.GPR* %3438, i32 0, i32 15
  %3440 = getelementptr inbounds %struct.Reg, %struct.Reg* %3439, i32 0, i32 0
  %RBP.i763 = bitcast %union.anon* %3440 to i64*
  %3441 = load i64, i64* %RBP.i763
  %3442 = load i64, i64* %RAX.i762
  %3443 = add i64 %3441, -432
  %3444 = add i64 %3443, %3442
  %3445 = load i8, i8* %CL.i761
  %3446 = zext i8 %3445 to i64
  %3447 = load i64, i64* %PC.i760
  %3448 = add i64 %3447, 7
  store i64 %3448, i64* %PC.i760
  %3449 = inttoptr i64 %3444 to i8*
  store i8 %3445, i8* %3449
  store %struct.Memory* %loadMem_44eddf, %struct.Memory** %MEMORY
  %loadMem_44ede6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3451 = getelementptr inbounds %struct.GPR, %struct.GPR* %3450, i32 0, i32 33
  %3452 = getelementptr inbounds %struct.Reg, %struct.Reg* %3451, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %3452 to i64*
  %3453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3454 = getelementptr inbounds %struct.GPR, %struct.GPR* %3453, i32 0, i32 1
  %3455 = getelementptr inbounds %struct.Reg, %struct.Reg* %3454, i32 0, i32 0
  %RAX.i758 = bitcast %union.anon* %3455 to i64*
  %3456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3457 = getelementptr inbounds %struct.GPR, %struct.GPR* %3456, i32 0, i32 15
  %3458 = getelementptr inbounds %struct.Reg, %struct.Reg* %3457, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %3458 to i64*
  %3459 = load i64, i64* %RBP.i759
  %3460 = sub i64 %3459, 436
  %3461 = load i64, i64* %PC.i757
  %3462 = add i64 %3461, 6
  store i64 %3462, i64* %PC.i757
  %3463 = inttoptr i64 %3460 to i32*
  %3464 = load i32, i32* %3463
  %3465 = zext i32 %3464 to i64
  store i64 %3465, i64* %RAX.i758, align 8
  store %struct.Memory* %loadMem_44ede6, %struct.Memory** %MEMORY
  %loadMem_44edec = load %struct.Memory*, %struct.Memory** %MEMORY
  %3466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3467 = getelementptr inbounds %struct.GPR, %struct.GPR* %3466, i32 0, i32 33
  %3468 = getelementptr inbounds %struct.Reg, %struct.Reg* %3467, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %3468 to i64*
  %3469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3470 = getelementptr inbounds %struct.GPR, %struct.GPR* %3469, i32 0, i32 1
  %3471 = getelementptr inbounds %struct.Reg, %struct.Reg* %3470, i32 0, i32 0
  %RAX.i756 = bitcast %union.anon* %3471 to i64*
  %3472 = load i64, i64* %RAX.i756
  %3473 = load i64, i64* %PC.i755
  %3474 = add i64 %3473, 3
  store i64 %3474, i64* %PC.i755
  %3475 = trunc i64 %3472 to i32
  %3476 = add i32 1, %3475
  %3477 = zext i32 %3476 to i64
  store i64 %3477, i64* %RAX.i756, align 8
  %3478 = icmp ult i32 %3476, %3475
  %3479 = icmp ult i32 %3476, 1
  %3480 = or i1 %3478, %3479
  %3481 = zext i1 %3480 to i8
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3481, i8* %3482, align 1
  %3483 = and i32 %3476, 255
  %3484 = call i32 @llvm.ctpop.i32(i32 %3483)
  %3485 = trunc i32 %3484 to i8
  %3486 = and i8 %3485, 1
  %3487 = xor i8 %3486, 1
  %3488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3487, i8* %3488, align 1
  %3489 = xor i64 1, %3472
  %3490 = trunc i64 %3489 to i32
  %3491 = xor i32 %3490, %3476
  %3492 = lshr i32 %3491, 4
  %3493 = trunc i32 %3492 to i8
  %3494 = and i8 %3493, 1
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3494, i8* %3495, align 1
  %3496 = icmp eq i32 %3476, 0
  %3497 = zext i1 %3496 to i8
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3497, i8* %3498, align 1
  %3499 = lshr i32 %3476, 31
  %3500 = trunc i32 %3499 to i8
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3500, i8* %3501, align 1
  %3502 = lshr i32 %3475, 31
  %3503 = xor i32 %3499, %3502
  %3504 = add i32 %3503, %3499
  %3505 = icmp eq i32 %3504, 2
  %3506 = zext i1 %3505 to i8
  %3507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3506, i8* %3507, align 1
  store %struct.Memory* %loadMem_44edec, %struct.Memory** %MEMORY
  %loadMem_44edef = load %struct.Memory*, %struct.Memory** %MEMORY
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3509 = getelementptr inbounds %struct.GPR, %struct.GPR* %3508, i32 0, i32 33
  %3510 = getelementptr inbounds %struct.Reg, %struct.Reg* %3509, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %3510 to i64*
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3512 = getelementptr inbounds %struct.GPR, %struct.GPR* %3511, i32 0, i32 1
  %3513 = getelementptr inbounds %struct.Reg, %struct.Reg* %3512, i32 0, i32 0
  %EAX.i753 = bitcast %union.anon* %3513 to i32*
  %3514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3515 = getelementptr inbounds %struct.GPR, %struct.GPR* %3514, i32 0, i32 15
  %3516 = getelementptr inbounds %struct.Reg, %struct.Reg* %3515, i32 0, i32 0
  %RBP.i754 = bitcast %union.anon* %3516 to i64*
  %3517 = load i64, i64* %RBP.i754
  %3518 = sub i64 %3517, 436
  %3519 = load i32, i32* %EAX.i753
  %3520 = zext i32 %3519 to i64
  %3521 = load i64, i64* %PC.i752
  %3522 = add i64 %3521, 6
  store i64 %3522, i64* %PC.i752
  %3523 = inttoptr i64 %3518 to i32*
  store i32 %3519, i32* %3523
  store %struct.Memory* %loadMem_44edef, %struct.Memory** %MEMORY
  %loadMem_44edf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3525 = getelementptr inbounds %struct.GPR, %struct.GPR* %3524, i32 0, i32 33
  %3526 = getelementptr inbounds %struct.Reg, %struct.Reg* %3525, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %3526 to i64*
  %3527 = load i64, i64* %PC.i751
  %3528 = add i64 %3527, -59
  %3529 = load i64, i64* %PC.i751
  %3530 = add i64 %3529, 5
  store i64 %3530, i64* %PC.i751
  %3531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3528, i64* %3531, align 8
  store %struct.Memory* %loadMem_44edf5, %struct.Memory** %MEMORY
  br label %block_.L_44edba

block_.L_44edfa:                                  ; preds = %block_.L_44edba
  %loadMem_44edfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3533 = getelementptr inbounds %struct.GPR, %struct.GPR* %3532, i32 0, i32 33
  %3534 = getelementptr inbounds %struct.Reg, %struct.Reg* %3533, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %3534 to i64*
  %3535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3536 = getelementptr inbounds %struct.GPR, %struct.GPR* %3535, i32 0, i32 7
  %3537 = getelementptr inbounds %struct.Reg, %struct.Reg* %3536, i32 0, i32 0
  %RDX.i750 = bitcast %union.anon* %3537 to i64*
  %3538 = load i64, i64* %PC.i749
  %3539 = add i64 %3538, 5
  store i64 %3539, i64* %PC.i749
  store i64 1, i64* %RDX.i750, align 8
  store %struct.Memory* %loadMem_44edfa, %struct.Memory** %MEMORY
  %loadMem_44edff = load %struct.Memory*, %struct.Memory** %MEMORY
  %3540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3541 = getelementptr inbounds %struct.GPR, %struct.GPR* %3540, i32 0, i32 33
  %3542 = getelementptr inbounds %struct.Reg, %struct.Reg* %3541, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %3542 to i64*
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3544 = getelementptr inbounds %struct.GPR, %struct.GPR* %3543, i32 0, i32 9
  %3545 = getelementptr inbounds %struct.Reg, %struct.Reg* %3544, i32 0, i32 0
  %RSI.i747 = bitcast %union.anon* %3545 to i64*
  %3546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3547 = getelementptr inbounds %struct.GPR, %struct.GPR* %3546, i32 0, i32 15
  %3548 = getelementptr inbounds %struct.Reg, %struct.Reg* %3547, i32 0, i32 0
  %RBP.i748 = bitcast %union.anon* %3548 to i64*
  %3549 = load i64, i64* %RBP.i748
  %3550 = sub i64 %3549, 432
  %3551 = load i64, i64* %PC.i746
  %3552 = add i64 %3551, 7
  store i64 %3552, i64* %PC.i746
  store i64 %3550, i64* %RSI.i747, align 8
  store %struct.Memory* %loadMem_44edff, %struct.Memory** %MEMORY
  %loadMem_44ee06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3554 = getelementptr inbounds %struct.GPR, %struct.GPR* %3553, i32 0, i32 33
  %3555 = getelementptr inbounds %struct.Reg, %struct.Reg* %3554, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %3555 to i64*
  %3556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3557 = getelementptr inbounds %struct.GPR, %struct.GPR* %3556, i32 0, i32 11
  %3558 = getelementptr inbounds %struct.Reg, %struct.Reg* %3557, i32 0, i32 0
  %RDI.i744 = bitcast %union.anon* %3558 to i64*
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3560 = getelementptr inbounds %struct.GPR, %struct.GPR* %3559, i32 0, i32 15
  %3561 = getelementptr inbounds %struct.Reg, %struct.Reg* %3560, i32 0, i32 0
  %RBP.i745 = bitcast %union.anon* %3561 to i64*
  %3562 = load i64, i64* %RBP.i745
  %3563 = sub i64 %3562, 8
  %3564 = load i64, i64* %PC.i743
  %3565 = add i64 %3564, 3
  store i64 %3565, i64* %PC.i743
  %3566 = inttoptr i64 %3563 to i32*
  %3567 = load i32, i32* %3566
  %3568 = zext i32 %3567 to i64
  store i64 %3568, i64* %RDI.i744, align 8
  store %struct.Memory* %loadMem_44ee06, %struct.Memory** %MEMORY
  %loadMem1_44ee09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3570 = getelementptr inbounds %struct.GPR, %struct.GPR* %3569, i32 0, i32 33
  %3571 = getelementptr inbounds %struct.Reg, %struct.Reg* %3570, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %3571 to i64*
  %3572 = load i64, i64* %PC.i742
  %3573 = add i64 %3572, -233817
  %3574 = load i64, i64* %PC.i742
  %3575 = add i64 %3574, 5
  %3576 = load i64, i64* %PC.i742
  %3577 = add i64 %3576, 5
  store i64 %3577, i64* %PC.i742
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3579 = load i64, i64* %3578, align 8
  %3580 = add i64 %3579, -8
  %3581 = inttoptr i64 %3580 to i64*
  store i64 %3575, i64* %3581
  store i64 %3580, i64* %3578, align 8
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3573, i64* %3582, align 8
  store %struct.Memory* %loadMem1_44ee09, %struct.Memory** %MEMORY
  %loadMem2_44ee09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44ee09 = load i64, i64* %3
  %call2_44ee09 = call %struct.Memory* @sub_415cb0.mark_string(%struct.State* %0, i64 %loadPC_44ee09, %struct.Memory* %loadMem2_44ee09)
  store %struct.Memory* %call2_44ee09, %struct.Memory** %MEMORY
  %loadMem_44ee0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3584 = getelementptr inbounds %struct.GPR, %struct.GPR* %3583, i32 0, i32 33
  %3585 = getelementptr inbounds %struct.Reg, %struct.Reg* %3584, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %3585 to i64*
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3587 = getelementptr inbounds %struct.GPR, %struct.GPR* %3586, i32 0, i32 15
  %3588 = getelementptr inbounds %struct.Reg, %struct.Reg* %3587, i32 0, i32 0
  %RBP.i741 = bitcast %union.anon* %3588 to i64*
  %3589 = load i64, i64* %RBP.i741
  %3590 = sub i64 %3589, 12
  %3591 = load i64, i64* %PC.i740
  %3592 = add i64 %3591, 4
  store i64 %3592, i64* %PC.i740
  %3593 = inttoptr i64 %3590 to i32*
  %3594 = load i32, i32* %3593
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3595, align 1
  %3596 = and i32 %3594, 255
  %3597 = call i32 @llvm.ctpop.i32(i32 %3596)
  %3598 = trunc i32 %3597 to i8
  %3599 = and i8 %3598, 1
  %3600 = xor i8 %3599, 1
  %3601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3600, i8* %3601, align 1
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3602, align 1
  %3603 = icmp eq i32 %3594, 0
  %3604 = zext i1 %3603 to i8
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3604, i8* %3605, align 1
  %3606 = lshr i32 %3594, 31
  %3607 = trunc i32 %3606 to i8
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3607, i8* %3608, align 1
  %3609 = lshr i32 %3594, 31
  %3610 = xor i32 %3606, %3609
  %3611 = add i32 %3610, %3609
  %3612 = icmp eq i32 %3611, 2
  %3613 = zext i1 %3612 to i8
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3613, i8* %3614, align 1
  store %struct.Memory* %loadMem_44ee0e, %struct.Memory** %MEMORY
  %loadMem_44ee12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3616 = getelementptr inbounds %struct.GPR, %struct.GPR* %3615, i32 0, i32 33
  %3617 = getelementptr inbounds %struct.Reg, %struct.Reg* %3616, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %3617 to i64*
  %3618 = load i64, i64* %PC.i739
  %3619 = add i64 %3618, 28
  %3620 = load i64, i64* %PC.i739
  %3621 = add i64 %3620, 6
  %3622 = load i64, i64* %PC.i739
  %3623 = add i64 %3622, 6
  store i64 %3623, i64* %PC.i739
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3625 = load i8, i8* %3624, align 1
  store i8 %3625, i8* %BRANCH_TAKEN, align 1
  %3626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3627 = icmp ne i8 %3625, 0
  %3628 = select i1 %3627, i64 %3619, i64 %3621
  store i64 %3628, i64* %3626, align 8
  store %struct.Memory* %loadMem_44ee12, %struct.Memory** %MEMORY
  %loadBr_44ee12 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ee12 = icmp eq i8 %loadBr_44ee12, 1
  br i1 %cmpBr_44ee12, label %block_.L_44ee2e, label %block_44ee18

block_44ee18:                                     ; preds = %block_.L_44edfa
  %loadMem_44ee18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3630 = getelementptr inbounds %struct.GPR, %struct.GPR* %3629, i32 0, i32 33
  %3631 = getelementptr inbounds %struct.Reg, %struct.Reg* %3630, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %3631 to i64*
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3633 = getelementptr inbounds %struct.GPR, %struct.GPR* %3632, i32 0, i32 15
  %3634 = getelementptr inbounds %struct.Reg, %struct.Reg* %3633, i32 0, i32 0
  %RBP.i738 = bitcast %union.anon* %3634 to i64*
  %3635 = load i64, i64* %RBP.i738
  %3636 = sub i64 %3635, 16
  %3637 = load i64, i64* %PC.i737
  %3638 = add i64 %3637, 4
  store i64 %3638, i64* %PC.i737
  %3639 = inttoptr i64 %3636 to i32*
  %3640 = load i32, i32* %3639
  %3641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3641, align 1
  %3642 = and i32 %3640, 255
  %3643 = call i32 @llvm.ctpop.i32(i32 %3642)
  %3644 = trunc i32 %3643 to i8
  %3645 = and i8 %3644, 1
  %3646 = xor i8 %3645, 1
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3646, i8* %3647, align 1
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3648, align 1
  %3649 = icmp eq i32 %3640, 0
  %3650 = zext i1 %3649 to i8
  %3651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3650, i8* %3651, align 1
  %3652 = lshr i32 %3640, 31
  %3653 = trunc i32 %3652 to i8
  %3654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3653, i8* %3654, align 1
  %3655 = lshr i32 %3640, 31
  %3656 = xor i32 %3652, %3655
  %3657 = add i32 %3656, %3655
  %3658 = icmp eq i32 %3657, 2
  %3659 = zext i1 %3658 to i8
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3659, i8* %3660, align 1
  store %struct.Memory* %loadMem_44ee18, %struct.Memory** %MEMORY
  %loadMem_44ee1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3662 = getelementptr inbounds %struct.GPR, %struct.GPR* %3661, i32 0, i32 33
  %3663 = getelementptr inbounds %struct.Reg, %struct.Reg* %3662, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %3663 to i64*
  %3664 = load i64, i64* %PC.i736
  %3665 = add i64 %3664, 18
  %3666 = load i64, i64* %PC.i736
  %3667 = add i64 %3666, 6
  %3668 = load i64, i64* %PC.i736
  %3669 = add i64 %3668, 6
  store i64 %3669, i64* %PC.i736
  %3670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3671 = load i8, i8* %3670, align 1
  store i8 %3671, i8* %BRANCH_TAKEN, align 1
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3673 = icmp ne i8 %3671, 0
  %3674 = select i1 %3673, i64 %3665, i64 %3667
  store i64 %3674, i64* %3672, align 8
  store %struct.Memory* %loadMem_44ee1c, %struct.Memory** %MEMORY
  %loadBr_44ee1c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ee1c = icmp eq i8 %loadBr_44ee1c, 1
  br i1 %cmpBr_44ee1c, label %block_.L_44ee2e, label %block_44ee22

block_44ee22:                                     ; preds = %block_44ee18
  %loadMem_44ee22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3676 = getelementptr inbounds %struct.GPR, %struct.GPR* %3675, i32 0, i32 33
  %3677 = getelementptr inbounds %struct.Reg, %struct.Reg* %3676, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %3677 to i64*
  %3678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3679 = getelementptr inbounds %struct.GPR, %struct.GPR* %3678, i32 0, i32 1
  %3680 = getelementptr inbounds %struct.Reg, %struct.Reg* %3679, i32 0, i32 0
  %RAX.i734 = bitcast %union.anon* %3680 to i64*
  %3681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3682 = getelementptr inbounds %struct.GPR, %struct.GPR* %3681, i32 0, i32 15
  %3683 = getelementptr inbounds %struct.Reg, %struct.Reg* %3682, i32 0, i32 0
  %RBP.i735 = bitcast %union.anon* %3683 to i64*
  %3684 = load i64, i64* %RBP.i735
  %3685 = sub i64 %3684, 16
  %3686 = load i64, i64* %PC.i733
  %3687 = add i64 %3686, 4
  store i64 %3687, i64* %PC.i733
  %3688 = inttoptr i64 %3685 to i32*
  %3689 = load i32, i32* %3688
  %3690 = sext i32 %3689 to i64
  store i64 %3690, i64* %RAX.i734, align 8
  store %struct.Memory* %loadMem_44ee22, %struct.Memory** %MEMORY
  %loadMem_44ee26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3692 = getelementptr inbounds %struct.GPR, %struct.GPR* %3691, i32 0, i32 33
  %3693 = getelementptr inbounds %struct.Reg, %struct.Reg* %3692, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %3693 to i64*
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3695 = getelementptr inbounds %struct.GPR, %struct.GPR* %3694, i32 0, i32 1
  %3696 = getelementptr inbounds %struct.Reg, %struct.Reg* %3695, i32 0, i32 0
  %RAX.i731 = bitcast %union.anon* %3696 to i64*
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3698 = getelementptr inbounds %struct.GPR, %struct.GPR* %3697, i32 0, i32 15
  %3699 = getelementptr inbounds %struct.Reg, %struct.Reg* %3698, i32 0, i32 0
  %RBP.i732 = bitcast %union.anon* %3699 to i64*
  %3700 = load i64, i64* %RBP.i732
  %3701 = load i64, i64* %RAX.i731
  %3702 = add i64 %3700, -432
  %3703 = add i64 %3702, %3701
  %3704 = load i64, i64* %PC.i730
  %3705 = add i64 %3704, 8
  store i64 %3705, i64* %PC.i730
  %3706 = inttoptr i64 %3703 to i8*
  store i8 1, i8* %3706
  store %struct.Memory* %loadMem_44ee26, %struct.Memory** %MEMORY
  br label %block_.L_44ee2e

block_.L_44ee2e:                                  ; preds = %block_44ee22, %block_44ee18, %block_.L_44edfa
  %loadMem_44ee2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3708 = getelementptr inbounds %struct.GPR, %struct.GPR* %3707, i32 0, i32 33
  %3709 = getelementptr inbounds %struct.Reg, %struct.Reg* %3708, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %3709 to i64*
  %3710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3711 = getelementptr inbounds %struct.GPR, %struct.GPR* %3710, i32 0, i32 15
  %3712 = getelementptr inbounds %struct.Reg, %struct.Reg* %3711, i32 0, i32 0
  %RBP.i729 = bitcast %union.anon* %3712 to i64*
  %3713 = load i64, i64* %RBP.i729
  %3714 = sub i64 %3713, 436
  %3715 = load i64, i64* %PC.i728
  %3716 = add i64 %3715, 10
  store i64 %3716, i64* %PC.i728
  %3717 = inttoptr i64 %3714 to i32*
  store i32 21, i32* %3717
  store %struct.Memory* %loadMem_44ee2e, %struct.Memory** %MEMORY
  br label %block_.L_44ee38

block_.L_44ee38:                                  ; preds = %block_.L_44efcf, %block_.L_44ee2e
  %loadMem_44ee38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3719 = getelementptr inbounds %struct.GPR, %struct.GPR* %3718, i32 0, i32 33
  %3720 = getelementptr inbounds %struct.Reg, %struct.Reg* %3719, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %3720 to i64*
  %3721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3722 = getelementptr inbounds %struct.GPR, %struct.GPR* %3721, i32 0, i32 15
  %3723 = getelementptr inbounds %struct.Reg, %struct.Reg* %3722, i32 0, i32 0
  %RBP.i727 = bitcast %union.anon* %3723 to i64*
  %3724 = load i64, i64* %RBP.i727
  %3725 = sub i64 %3724, 436
  %3726 = load i64, i64* %PC.i726
  %3727 = add i64 %3726, 10
  store i64 %3727, i64* %PC.i726
  %3728 = inttoptr i64 %3725 to i32*
  %3729 = load i32, i32* %3728
  %3730 = sub i32 %3729, 400
  %3731 = icmp ult i32 %3729, 400
  %3732 = zext i1 %3731 to i8
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3732, i8* %3733, align 1
  %3734 = and i32 %3730, 255
  %3735 = call i32 @llvm.ctpop.i32(i32 %3734)
  %3736 = trunc i32 %3735 to i8
  %3737 = and i8 %3736, 1
  %3738 = xor i8 %3737, 1
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3738, i8* %3739, align 1
  %3740 = xor i32 %3729, 400
  %3741 = xor i32 %3740, %3730
  %3742 = lshr i32 %3741, 4
  %3743 = trunc i32 %3742 to i8
  %3744 = and i8 %3743, 1
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3744, i8* %3745, align 1
  %3746 = icmp eq i32 %3730, 0
  %3747 = zext i1 %3746 to i8
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3747, i8* %3748, align 1
  %3749 = lshr i32 %3730, 31
  %3750 = trunc i32 %3749 to i8
  %3751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3750, i8* %3751, align 1
  %3752 = lshr i32 %3729, 31
  %3753 = xor i32 %3749, %3752
  %3754 = add i32 %3753, %3752
  %3755 = icmp eq i32 %3754, 2
  %3756 = zext i1 %3755 to i8
  %3757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3756, i8* %3757, align 1
  store %struct.Memory* %loadMem_44ee38, %struct.Memory** %MEMORY
  %loadMem_44ee42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3759 = getelementptr inbounds %struct.GPR, %struct.GPR* %3758, i32 0, i32 33
  %3760 = getelementptr inbounds %struct.Reg, %struct.Reg* %3759, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %3760 to i64*
  %3761 = load i64, i64* %PC.i725
  %3762 = add i64 %3761, 417
  %3763 = load i64, i64* %PC.i725
  %3764 = add i64 %3763, 6
  %3765 = load i64, i64* %PC.i725
  %3766 = add i64 %3765, 6
  store i64 %3766, i64* %PC.i725
  %3767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3768 = load i8, i8* %3767, align 1
  %3769 = icmp ne i8 %3768, 0
  %3770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3771 = load i8, i8* %3770, align 1
  %3772 = icmp ne i8 %3771, 0
  %3773 = xor i1 %3769, %3772
  %3774 = xor i1 %3773, true
  %3775 = zext i1 %3774 to i8
  store i8 %3775, i8* %BRANCH_TAKEN, align 1
  %3776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3777 = select i1 %3773, i64 %3764, i64 %3762
  store i64 %3777, i64* %3776, align 8
  store %struct.Memory* %loadMem_44ee42, %struct.Memory** %MEMORY
  %loadBr_44ee42 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ee42 = icmp eq i8 %loadBr_44ee42, 1
  br i1 %cmpBr_44ee42, label %block_.L_44efe3, label %block_44ee48

block_44ee48:                                     ; preds = %block_.L_44ee38
  %loadMem_44ee48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3779 = getelementptr inbounds %struct.GPR, %struct.GPR* %3778, i32 0, i32 33
  %3780 = getelementptr inbounds %struct.Reg, %struct.Reg* %3779, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %3780 to i64*
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3782 = getelementptr inbounds %struct.GPR, %struct.GPR* %3781, i32 0, i32 1
  %3783 = getelementptr inbounds %struct.Reg, %struct.Reg* %3782, i32 0, i32 0
  %RAX.i723 = bitcast %union.anon* %3783 to i64*
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3785 = getelementptr inbounds %struct.GPR, %struct.GPR* %3784, i32 0, i32 15
  %3786 = getelementptr inbounds %struct.Reg, %struct.Reg* %3785, i32 0, i32 0
  %RBP.i724 = bitcast %union.anon* %3786 to i64*
  %3787 = load i64, i64* %RBP.i724
  %3788 = sub i64 %3787, 436
  %3789 = load i64, i64* %PC.i722
  %3790 = add i64 %3789, 7
  store i64 %3790, i64* %PC.i722
  %3791 = inttoptr i64 %3788 to i32*
  %3792 = load i32, i32* %3791
  %3793 = sext i32 %3792 to i64
  store i64 %3793, i64* %RAX.i723, align 8
  store %struct.Memory* %loadMem_44ee48, %struct.Memory** %MEMORY
  %loadMem_44ee4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3795 = getelementptr inbounds %struct.GPR, %struct.GPR* %3794, i32 0, i32 33
  %3796 = getelementptr inbounds %struct.Reg, %struct.Reg* %3795, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %3796 to i64*
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3798 = getelementptr inbounds %struct.GPR, %struct.GPR* %3797, i32 0, i32 1
  %3799 = getelementptr inbounds %struct.Reg, %struct.Reg* %3798, i32 0, i32 0
  %RAX.i720 = bitcast %union.anon* %3799 to i64*
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3801 = getelementptr inbounds %struct.GPR, %struct.GPR* %3800, i32 0, i32 5
  %3802 = getelementptr inbounds %struct.Reg, %struct.Reg* %3801, i32 0, i32 0
  %RCX.i721 = bitcast %union.anon* %3802 to i64*
  %3803 = load i64, i64* %RAX.i720
  %3804 = add i64 %3803, 12099168
  %3805 = load i64, i64* %PC.i719
  %3806 = add i64 %3805, 8
  store i64 %3806, i64* %PC.i719
  %3807 = inttoptr i64 %3804 to i8*
  %3808 = load i8, i8* %3807
  %3809 = zext i8 %3808 to i64
  store i64 %3809, i64* %RCX.i721, align 8
  store %struct.Memory* %loadMem_44ee4f, %struct.Memory** %MEMORY
  %loadMem_44ee57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3811 = getelementptr inbounds %struct.GPR, %struct.GPR* %3810, i32 0, i32 33
  %3812 = getelementptr inbounds %struct.Reg, %struct.Reg* %3811, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %3812 to i64*
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3814 = getelementptr inbounds %struct.GPR, %struct.GPR* %3813, i32 0, i32 5
  %3815 = getelementptr inbounds %struct.Reg, %struct.Reg* %3814, i32 0, i32 0
  %ECX.i718 = bitcast %union.anon* %3815 to i32*
  %3816 = load i32, i32* %ECX.i718
  %3817 = zext i32 %3816 to i64
  %3818 = load i64, i64* %PC.i717
  %3819 = add i64 %3818, 3
  store i64 %3819, i64* %PC.i717
  %3820 = sub i32 %3816, 3
  %3821 = icmp ult i32 %3816, 3
  %3822 = zext i1 %3821 to i8
  %3823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3822, i8* %3823, align 1
  %3824 = and i32 %3820, 255
  %3825 = call i32 @llvm.ctpop.i32(i32 %3824)
  %3826 = trunc i32 %3825 to i8
  %3827 = and i8 %3826, 1
  %3828 = xor i8 %3827, 1
  %3829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3828, i8* %3829, align 1
  %3830 = xor i64 3, %3817
  %3831 = trunc i64 %3830 to i32
  %3832 = xor i32 %3831, %3820
  %3833 = lshr i32 %3832, 4
  %3834 = trunc i32 %3833 to i8
  %3835 = and i8 %3834, 1
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3835, i8* %3836, align 1
  %3837 = icmp eq i32 %3820, 0
  %3838 = zext i1 %3837 to i8
  %3839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3838, i8* %3839, align 1
  %3840 = lshr i32 %3820, 31
  %3841 = trunc i32 %3840 to i8
  %3842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3841, i8* %3842, align 1
  %3843 = lshr i32 %3816, 31
  %3844 = xor i32 %3840, %3843
  %3845 = add i32 %3844, %3843
  %3846 = icmp eq i32 %3845, 2
  %3847 = zext i1 %3846 to i8
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3847, i8* %3848, align 1
  store %struct.Memory* %loadMem_44ee57, %struct.Memory** %MEMORY
  %loadMem_44ee5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3850 = getelementptr inbounds %struct.GPR, %struct.GPR* %3849, i32 0, i32 33
  %3851 = getelementptr inbounds %struct.Reg, %struct.Reg* %3850, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %3851 to i64*
  %3852 = load i64, i64* %PC.i716
  %3853 = add i64 %3852, 11
  %3854 = load i64, i64* %PC.i716
  %3855 = add i64 %3854, 6
  %3856 = load i64, i64* %PC.i716
  %3857 = add i64 %3856, 6
  store i64 %3857, i64* %PC.i716
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3859 = load i8, i8* %3858, align 1
  %3860 = icmp eq i8 %3859, 0
  %3861 = zext i1 %3860 to i8
  store i8 %3861, i8* %BRANCH_TAKEN, align 1
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3863 = select i1 %3860, i64 %3853, i64 %3855
  store i64 %3863, i64* %3862, align 8
  store %struct.Memory* %loadMem_44ee5a, %struct.Memory** %MEMORY
  %loadBr_44ee5a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ee5a = icmp eq i8 %loadBr_44ee5a, 1
  br i1 %cmpBr_44ee5a, label %block_.L_44ee65, label %block_44ee60

block_44ee60:                                     ; preds = %block_44ee48
  %loadMem_44ee60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3865 = getelementptr inbounds %struct.GPR, %struct.GPR* %3864, i32 0, i32 33
  %3866 = getelementptr inbounds %struct.Reg, %struct.Reg* %3865, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %3866 to i64*
  %3867 = load i64, i64* %PC.i715
  %3868 = add i64 %3867, 367
  %3869 = load i64, i64* %PC.i715
  %3870 = add i64 %3869, 5
  store i64 %3870, i64* %PC.i715
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3868, i64* %3871, align 8
  store %struct.Memory* %loadMem_44ee60, %struct.Memory** %MEMORY
  br label %block_.L_44efcf

block_.L_44ee65:                                  ; preds = %block_44ee48
  %loadMem_44ee65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3873 = getelementptr inbounds %struct.GPR, %struct.GPR* %3872, i32 0, i32 33
  %3874 = getelementptr inbounds %struct.Reg, %struct.Reg* %3873, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %3874 to i64*
  %3875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3876 = getelementptr inbounds %struct.GPR, %struct.GPR* %3875, i32 0, i32 1
  %3877 = getelementptr inbounds %struct.Reg, %struct.Reg* %3876, i32 0, i32 0
  %RAX.i713 = bitcast %union.anon* %3877 to i64*
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3879 = getelementptr inbounds %struct.GPR, %struct.GPR* %3878, i32 0, i32 15
  %3880 = getelementptr inbounds %struct.Reg, %struct.Reg* %3879, i32 0, i32 0
  %RBP.i714 = bitcast %union.anon* %3880 to i64*
  %3881 = load i64, i64* %RBP.i714
  %3882 = sub i64 %3881, 436
  %3883 = load i64, i64* %PC.i712
  %3884 = add i64 %3883, 7
  store i64 %3884, i64* %PC.i712
  %3885 = inttoptr i64 %3882 to i32*
  %3886 = load i32, i32* %3885
  %3887 = sext i32 %3886 to i64
  store i64 %3887, i64* %RAX.i713, align 8
  store %struct.Memory* %loadMem_44ee65, %struct.Memory** %MEMORY
  %loadMem_44ee6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3889 = getelementptr inbounds %struct.GPR, %struct.GPR* %3888, i32 0, i32 33
  %3890 = getelementptr inbounds %struct.Reg, %struct.Reg* %3889, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %3890 to i64*
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3892 = getelementptr inbounds %struct.GPR, %struct.GPR* %3891, i32 0, i32 1
  %3893 = getelementptr inbounds %struct.Reg, %struct.Reg* %3892, i32 0, i32 0
  %RAX.i709 = bitcast %union.anon* %3893 to i64*
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3895 = getelementptr inbounds %struct.GPR, %struct.GPR* %3894, i32 0, i32 5
  %3896 = getelementptr inbounds %struct.Reg, %struct.Reg* %3895, i32 0, i32 0
  %RCX.i710 = bitcast %union.anon* %3896 to i64*
  %3897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3898 = getelementptr inbounds %struct.GPR, %struct.GPR* %3897, i32 0, i32 15
  %3899 = getelementptr inbounds %struct.Reg, %struct.Reg* %3898, i32 0, i32 0
  %RBP.i711 = bitcast %union.anon* %3899 to i64*
  %3900 = load i64, i64* %RBP.i711
  %3901 = load i64, i64* %RAX.i709
  %3902 = add i64 %3900, -432
  %3903 = add i64 %3902, %3901
  %3904 = load i64, i64* %PC.i708
  %3905 = add i64 %3904, 8
  store i64 %3905, i64* %PC.i708
  %3906 = inttoptr i64 %3903 to i8*
  %3907 = load i8, i8* %3906
  %3908 = sext i8 %3907 to i64
  %3909 = and i64 %3908, 4294967295
  store i64 %3909, i64* %RCX.i710, align 8
  store %struct.Memory* %loadMem_44ee6c, %struct.Memory** %MEMORY
  %loadMem_44ee74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3911 = getelementptr inbounds %struct.GPR, %struct.GPR* %3910, i32 0, i32 33
  %3912 = getelementptr inbounds %struct.Reg, %struct.Reg* %3911, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %3912 to i64*
  %3913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3914 = getelementptr inbounds %struct.GPR, %struct.GPR* %3913, i32 0, i32 5
  %3915 = getelementptr inbounds %struct.Reg, %struct.Reg* %3914, i32 0, i32 0
  %ECX.i707 = bitcast %union.anon* %3915 to i32*
  %3916 = load i32, i32* %ECX.i707
  %3917 = zext i32 %3916 to i64
  %3918 = load i64, i64* %PC.i706
  %3919 = add i64 %3918, 3
  store i64 %3919, i64* %PC.i706
  %3920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3920, align 1
  %3921 = and i32 %3916, 255
  %3922 = call i32 @llvm.ctpop.i32(i32 %3921)
  %3923 = trunc i32 %3922 to i8
  %3924 = and i8 %3923, 1
  %3925 = xor i8 %3924, 1
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3925, i8* %3926, align 1
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3927, align 1
  %3928 = icmp eq i32 %3916, 0
  %3929 = zext i1 %3928 to i8
  %3930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3929, i8* %3930, align 1
  %3931 = lshr i32 %3916, 31
  %3932 = trunc i32 %3931 to i8
  %3933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3932, i8* %3933, align 1
  %3934 = lshr i32 %3916, 31
  %3935 = xor i32 %3931, %3934
  %3936 = add i32 %3935, %3934
  %3937 = icmp eq i32 %3936, 2
  %3938 = zext i1 %3937 to i8
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3938, i8* %3939, align 1
  store %struct.Memory* %loadMem_44ee74, %struct.Memory** %MEMORY
  %loadMem_44ee77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3941 = getelementptr inbounds %struct.GPR, %struct.GPR* %3940, i32 0, i32 33
  %3942 = getelementptr inbounds %struct.Reg, %struct.Reg* %3941, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %3942 to i64*
  %3943 = load i64, i64* %PC.i705
  %3944 = add i64 %3943, 11
  %3945 = load i64, i64* %PC.i705
  %3946 = add i64 %3945, 6
  %3947 = load i64, i64* %PC.i705
  %3948 = add i64 %3947, 6
  store i64 %3948, i64* %PC.i705
  %3949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3950 = load i8, i8* %3949, align 1
  store i8 %3950, i8* %BRANCH_TAKEN, align 1
  %3951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3952 = icmp ne i8 %3950, 0
  %3953 = select i1 %3952, i64 %3944, i64 %3946
  store i64 %3953, i64* %3951, align 8
  store %struct.Memory* %loadMem_44ee77, %struct.Memory** %MEMORY
  %loadBr_44ee77 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ee77 = icmp eq i8 %loadBr_44ee77, 1
  br i1 %cmpBr_44ee77, label %block_.L_44ee82, label %block_44ee7d

block_44ee7d:                                     ; preds = %block_.L_44ee65
  %loadMem_44ee7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3955 = getelementptr inbounds %struct.GPR, %struct.GPR* %3954, i32 0, i32 33
  %3956 = getelementptr inbounds %struct.Reg, %struct.Reg* %3955, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %3956 to i64*
  %3957 = load i64, i64* %PC.i704
  %3958 = add i64 %3957, 338
  %3959 = load i64, i64* %PC.i704
  %3960 = add i64 %3959, 5
  store i64 %3960, i64* %PC.i704
  %3961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3958, i64* %3961, align 8
  store %struct.Memory* %loadMem_44ee7d, %struct.Memory** %MEMORY
  br label %block_.L_44efcf

block_.L_44ee82:                                  ; preds = %block_.L_44ee65
  %loadMem_44ee82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3963 = getelementptr inbounds %struct.GPR, %struct.GPR* %3962, i32 0, i32 33
  %3964 = getelementptr inbounds %struct.Reg, %struct.Reg* %3963, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %3964 to i64*
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3966 = getelementptr inbounds %struct.GPR, %struct.GPR* %3965, i32 0, i32 1
  %3967 = getelementptr inbounds %struct.Reg, %struct.Reg* %3966, i32 0, i32 0
  %RAX.i702 = bitcast %union.anon* %3967 to i64*
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3969 = getelementptr inbounds %struct.GPR, %struct.GPR* %3968, i32 0, i32 15
  %3970 = getelementptr inbounds %struct.Reg, %struct.Reg* %3969, i32 0, i32 0
  %RBP.i703 = bitcast %union.anon* %3970 to i64*
  %3971 = load i64, i64* %RBP.i703
  %3972 = sub i64 %3971, 436
  %3973 = load i64, i64* %PC.i701
  %3974 = add i64 %3973, 6
  store i64 %3974, i64* %PC.i701
  %3975 = inttoptr i64 %3972 to i32*
  %3976 = load i32, i32* %3975
  %3977 = zext i32 %3976 to i64
  store i64 %3977, i64* %RAX.i702, align 8
  store %struct.Memory* %loadMem_44ee82, %struct.Memory** %MEMORY
  %loadMem_44ee88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3979 = getelementptr inbounds %struct.GPR, %struct.GPR* %3978, i32 0, i32 33
  %3980 = getelementptr inbounds %struct.Reg, %struct.Reg* %3979, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %3980 to i64*
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3982 = getelementptr inbounds %struct.GPR, %struct.GPR* %3981, i32 0, i32 1
  %3983 = getelementptr inbounds %struct.Reg, %struct.Reg* %3982, i32 0, i32 0
  %RAX.i700 = bitcast %union.anon* %3983 to i64*
  %3984 = load i64, i64* %RAX.i700
  %3985 = load i64, i64* %PC.i699
  %3986 = add i64 %3985, 3
  store i64 %3986, i64* %PC.i699
  %3987 = trunc i64 %3984 to i32
  %3988 = add i32 20, %3987
  %3989 = zext i32 %3988 to i64
  store i64 %3989, i64* %RAX.i700, align 8
  %3990 = icmp ult i32 %3988, %3987
  %3991 = icmp ult i32 %3988, 20
  %3992 = or i1 %3990, %3991
  %3993 = zext i1 %3992 to i8
  %3994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3993, i8* %3994, align 1
  %3995 = and i32 %3988, 255
  %3996 = call i32 @llvm.ctpop.i32(i32 %3995)
  %3997 = trunc i32 %3996 to i8
  %3998 = and i8 %3997, 1
  %3999 = xor i8 %3998, 1
  %4000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3999, i8* %4000, align 1
  %4001 = xor i64 20, %3984
  %4002 = trunc i64 %4001 to i32
  %4003 = xor i32 %4002, %3988
  %4004 = lshr i32 %4003, 4
  %4005 = trunc i32 %4004 to i8
  %4006 = and i8 %4005, 1
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4006, i8* %4007, align 1
  %4008 = icmp eq i32 %3988, 0
  %4009 = zext i1 %4008 to i8
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4009, i8* %4010, align 1
  %4011 = lshr i32 %3988, 31
  %4012 = trunc i32 %4011 to i8
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4012, i8* %4013, align 1
  %4014 = lshr i32 %3987, 31
  %4015 = xor i32 %4011, %4014
  %4016 = add i32 %4015, %4011
  %4017 = icmp eq i32 %4016, 2
  %4018 = zext i1 %4017 to i8
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4018, i8* %4019, align 1
  store %struct.Memory* %loadMem_44ee88, %struct.Memory** %MEMORY
  %loadMem_44ee8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4021 = getelementptr inbounds %struct.GPR, %struct.GPR* %4020, i32 0, i32 33
  %4022 = getelementptr inbounds %struct.Reg, %struct.Reg* %4021, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %4022 to i64*
  %4023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4024 = getelementptr inbounds %struct.GPR, %struct.GPR* %4023, i32 0, i32 1
  %4025 = getelementptr inbounds %struct.Reg, %struct.Reg* %4024, i32 0, i32 0
  %EAX.i697 = bitcast %union.anon* %4025 to i32*
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4027 = getelementptr inbounds %struct.GPR, %struct.GPR* %4026, i32 0, i32 5
  %4028 = getelementptr inbounds %struct.Reg, %struct.Reg* %4027, i32 0, i32 0
  %RCX.i698 = bitcast %union.anon* %4028 to i64*
  %4029 = load i32, i32* %EAX.i697
  %4030 = zext i32 %4029 to i64
  %4031 = load i64, i64* %PC.i696
  %4032 = add i64 %4031, 3
  store i64 %4032, i64* %PC.i696
  %4033 = shl i64 %4030, 32
  %4034 = ashr exact i64 %4033, 32
  store i64 %4034, i64* %RCX.i698, align 8
  store %struct.Memory* %loadMem_44ee8b, %struct.Memory** %MEMORY
  %loadMem_44ee8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4036 = getelementptr inbounds %struct.GPR, %struct.GPR* %4035, i32 0, i32 33
  %4037 = getelementptr inbounds %struct.Reg, %struct.Reg* %4036, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %4037 to i64*
  %4038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4039 = getelementptr inbounds %struct.GPR, %struct.GPR* %4038, i32 0, i32 1
  %4040 = getelementptr inbounds %struct.Reg, %struct.Reg* %4039, i32 0, i32 0
  %RAX.i694 = bitcast %union.anon* %4040 to i64*
  %4041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4042 = getelementptr inbounds %struct.GPR, %struct.GPR* %4041, i32 0, i32 5
  %4043 = getelementptr inbounds %struct.Reg, %struct.Reg* %4042, i32 0, i32 0
  %RCX.i695 = bitcast %union.anon* %4043 to i64*
  %4044 = load i64, i64* %RCX.i695
  %4045 = add i64 %4044, 12099168
  %4046 = load i64, i64* %PC.i693
  %4047 = add i64 %4046, 8
  store i64 %4047, i64* %PC.i693
  %4048 = inttoptr i64 %4045 to i8*
  %4049 = load i8, i8* %4048
  %4050 = zext i8 %4049 to i64
  store i64 %4050, i64* %RAX.i694, align 8
  store %struct.Memory* %loadMem_44ee8e, %struct.Memory** %MEMORY
  %loadMem_44ee96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4052 = getelementptr inbounds %struct.GPR, %struct.GPR* %4051, i32 0, i32 33
  %4053 = getelementptr inbounds %struct.Reg, %struct.Reg* %4052, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %4053 to i64*
  %4054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4055 = getelementptr inbounds %struct.GPR, %struct.GPR* %4054, i32 0, i32 1
  %4056 = getelementptr inbounds %struct.Reg, %struct.Reg* %4055, i32 0, i32 0
  %EAX.i692 = bitcast %union.anon* %4056 to i32*
  %4057 = load i32, i32* %EAX.i692
  %4058 = zext i32 %4057 to i64
  %4059 = load i64, i64* %PC.i691
  %4060 = add i64 %4059, 3
  store i64 %4060, i64* %PC.i691
  %4061 = sub i32 %4057, 3
  %4062 = icmp ult i32 %4057, 3
  %4063 = zext i1 %4062 to i8
  %4064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4063, i8* %4064, align 1
  %4065 = and i32 %4061, 255
  %4066 = call i32 @llvm.ctpop.i32(i32 %4065)
  %4067 = trunc i32 %4066 to i8
  %4068 = and i8 %4067, 1
  %4069 = xor i8 %4068, 1
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4069, i8* %4070, align 1
  %4071 = xor i64 3, %4058
  %4072 = trunc i64 %4071 to i32
  %4073 = xor i32 %4072, %4061
  %4074 = lshr i32 %4073, 4
  %4075 = trunc i32 %4074 to i8
  %4076 = and i8 %4075, 1
  %4077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4076, i8* %4077, align 1
  %4078 = icmp eq i32 %4061, 0
  %4079 = zext i1 %4078 to i8
  %4080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4079, i8* %4080, align 1
  %4081 = lshr i32 %4061, 31
  %4082 = trunc i32 %4081 to i8
  %4083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4082, i8* %4083, align 1
  %4084 = lshr i32 %4057, 31
  %4085 = xor i32 %4081, %4084
  %4086 = add i32 %4085, %4084
  %4087 = icmp eq i32 %4086, 2
  %4088 = zext i1 %4087 to i8
  %4089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4088, i8* %4089, align 1
  store %struct.Memory* %loadMem_44ee96, %struct.Memory** %MEMORY
  %loadMem_44ee99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4091 = getelementptr inbounds %struct.GPR, %struct.GPR* %4090, i32 0, i32 33
  %4092 = getelementptr inbounds %struct.Reg, %struct.Reg* %4091, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %4092 to i64*
  %4093 = load i64, i64* %PC.i690
  %4094 = add i64 %4093, 35
  %4095 = load i64, i64* %PC.i690
  %4096 = add i64 %4095, 6
  %4097 = load i64, i64* %PC.i690
  %4098 = add i64 %4097, 6
  store i64 %4098, i64* %PC.i690
  %4099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4100 = load i8, i8* %4099, align 1
  store i8 %4100, i8* %BRANCH_TAKEN, align 1
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4102 = icmp ne i8 %4100, 0
  %4103 = select i1 %4102, i64 %4094, i64 %4096
  store i64 %4103, i64* %4101, align 8
  store %struct.Memory* %loadMem_44ee99, %struct.Memory** %MEMORY
  %loadBr_44ee99 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ee99 = icmp eq i8 %loadBr_44ee99, 1
  br i1 %cmpBr_44ee99, label %block_.L_44eebc, label %block_44ee9f

block_44ee9f:                                     ; preds = %block_.L_44ee82
  %loadMem_44ee9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4105 = getelementptr inbounds %struct.GPR, %struct.GPR* %4104, i32 0, i32 33
  %4106 = getelementptr inbounds %struct.Reg, %struct.Reg* %4105, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %4106 to i64*
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4108 = getelementptr inbounds %struct.GPR, %struct.GPR* %4107, i32 0, i32 1
  %4109 = getelementptr inbounds %struct.Reg, %struct.Reg* %4108, i32 0, i32 0
  %RAX.i688 = bitcast %union.anon* %4109 to i64*
  %4110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4111 = getelementptr inbounds %struct.GPR, %struct.GPR* %4110, i32 0, i32 15
  %4112 = getelementptr inbounds %struct.Reg, %struct.Reg* %4111, i32 0, i32 0
  %RBP.i689 = bitcast %union.anon* %4112 to i64*
  %4113 = load i64, i64* %RBP.i689
  %4114 = sub i64 %4113, 436
  %4115 = load i64, i64* %PC.i687
  %4116 = add i64 %4115, 6
  store i64 %4116, i64* %PC.i687
  %4117 = inttoptr i64 %4114 to i32*
  %4118 = load i32, i32* %4117
  %4119 = zext i32 %4118 to i64
  store i64 %4119, i64* %RAX.i688, align 8
  store %struct.Memory* %loadMem_44ee9f, %struct.Memory** %MEMORY
  %loadMem_44eea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4121 = getelementptr inbounds %struct.GPR, %struct.GPR* %4120, i32 0, i32 33
  %4122 = getelementptr inbounds %struct.Reg, %struct.Reg* %4121, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %4122 to i64*
  %4123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4124 = getelementptr inbounds %struct.GPR, %struct.GPR* %4123, i32 0, i32 1
  %4125 = getelementptr inbounds %struct.Reg, %struct.Reg* %4124, i32 0, i32 0
  %RAX.i686 = bitcast %union.anon* %4125 to i64*
  %4126 = load i64, i64* %RAX.i686
  %4127 = load i64, i64* %PC.i685
  %4128 = add i64 %4127, 3
  store i64 %4128, i64* %PC.i685
  %4129 = trunc i64 %4126 to i32
  %4130 = add i32 20, %4129
  %4131 = zext i32 %4130 to i64
  store i64 %4131, i64* %RAX.i686, align 8
  %4132 = icmp ult i32 %4130, %4129
  %4133 = icmp ult i32 %4130, 20
  %4134 = or i1 %4132, %4133
  %4135 = zext i1 %4134 to i8
  %4136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4135, i8* %4136, align 1
  %4137 = and i32 %4130, 255
  %4138 = call i32 @llvm.ctpop.i32(i32 %4137)
  %4139 = trunc i32 %4138 to i8
  %4140 = and i8 %4139, 1
  %4141 = xor i8 %4140, 1
  %4142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4141, i8* %4142, align 1
  %4143 = xor i64 20, %4126
  %4144 = trunc i64 %4143 to i32
  %4145 = xor i32 %4144, %4130
  %4146 = lshr i32 %4145, 4
  %4147 = trunc i32 %4146 to i8
  %4148 = and i8 %4147, 1
  %4149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4148, i8* %4149, align 1
  %4150 = icmp eq i32 %4130, 0
  %4151 = zext i1 %4150 to i8
  %4152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4151, i8* %4152, align 1
  %4153 = lshr i32 %4130, 31
  %4154 = trunc i32 %4153 to i8
  %4155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4154, i8* %4155, align 1
  %4156 = lshr i32 %4129, 31
  %4157 = xor i32 %4153, %4156
  %4158 = add i32 %4157, %4153
  %4159 = icmp eq i32 %4158, 2
  %4160 = zext i1 %4159 to i8
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4160, i8* %4161, align 1
  store %struct.Memory* %loadMem_44eea5, %struct.Memory** %MEMORY
  %loadMem_44eea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4163 = getelementptr inbounds %struct.GPR, %struct.GPR* %4162, i32 0, i32 33
  %4164 = getelementptr inbounds %struct.Reg, %struct.Reg* %4163, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %4164 to i64*
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4166 = getelementptr inbounds %struct.GPR, %struct.GPR* %4165, i32 0, i32 1
  %4167 = getelementptr inbounds %struct.Reg, %struct.Reg* %4166, i32 0, i32 0
  %EAX.i683 = bitcast %union.anon* %4167 to i32*
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4169 = getelementptr inbounds %struct.GPR, %struct.GPR* %4168, i32 0, i32 5
  %4170 = getelementptr inbounds %struct.Reg, %struct.Reg* %4169, i32 0, i32 0
  %RCX.i684 = bitcast %union.anon* %4170 to i64*
  %4171 = load i32, i32* %EAX.i683
  %4172 = zext i32 %4171 to i64
  %4173 = load i64, i64* %PC.i682
  %4174 = add i64 %4173, 3
  store i64 %4174, i64* %PC.i682
  %4175 = shl i64 %4172, 32
  %4176 = ashr exact i64 %4175, 32
  store i64 %4176, i64* %RCX.i684, align 8
  store %struct.Memory* %loadMem_44eea8, %struct.Memory** %MEMORY
  %loadMem_44eeab = load %struct.Memory*, %struct.Memory** %MEMORY
  %4177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4178 = getelementptr inbounds %struct.GPR, %struct.GPR* %4177, i32 0, i32 33
  %4179 = getelementptr inbounds %struct.Reg, %struct.Reg* %4178, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %4179 to i64*
  %4180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4181 = getelementptr inbounds %struct.GPR, %struct.GPR* %4180, i32 0, i32 1
  %4182 = getelementptr inbounds %struct.Reg, %struct.Reg* %4181, i32 0, i32 0
  %RAX.i679 = bitcast %union.anon* %4182 to i64*
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4184 = getelementptr inbounds %struct.GPR, %struct.GPR* %4183, i32 0, i32 5
  %4185 = getelementptr inbounds %struct.Reg, %struct.Reg* %4184, i32 0, i32 0
  %RCX.i680 = bitcast %union.anon* %4185 to i64*
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4187 = getelementptr inbounds %struct.GPR, %struct.GPR* %4186, i32 0, i32 15
  %4188 = getelementptr inbounds %struct.Reg, %struct.Reg* %4187, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %4188 to i64*
  %4189 = load i64, i64* %RBP.i681
  %4190 = load i64, i64* %RCX.i680
  %4191 = add i64 %4189, -432
  %4192 = add i64 %4191, %4190
  %4193 = load i64, i64* %PC.i678
  %4194 = add i64 %4193, 8
  store i64 %4194, i64* %PC.i678
  %4195 = inttoptr i64 %4192 to i8*
  %4196 = load i8, i8* %4195
  %4197 = sext i8 %4196 to i64
  %4198 = and i64 %4197, 4294967295
  store i64 %4198, i64* %RAX.i679, align 8
  store %struct.Memory* %loadMem_44eeab, %struct.Memory** %MEMORY
  %loadMem_44eeb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4200 = getelementptr inbounds %struct.GPR, %struct.GPR* %4199, i32 0, i32 33
  %4201 = getelementptr inbounds %struct.Reg, %struct.Reg* %4200, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %4201 to i64*
  %4202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4203 = getelementptr inbounds %struct.GPR, %struct.GPR* %4202, i32 0, i32 1
  %4204 = getelementptr inbounds %struct.Reg, %struct.Reg* %4203, i32 0, i32 0
  %EAX.i677 = bitcast %union.anon* %4204 to i32*
  %4205 = load i32, i32* %EAX.i677
  %4206 = zext i32 %4205 to i64
  %4207 = load i64, i64* %PC.i676
  %4208 = add i64 %4207, 3
  store i64 %4208, i64* %PC.i676
  %4209 = sub i32 %4205, 1
  %4210 = icmp ult i32 %4205, 1
  %4211 = zext i1 %4210 to i8
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4211, i8* %4212, align 1
  %4213 = and i32 %4209, 255
  %4214 = call i32 @llvm.ctpop.i32(i32 %4213)
  %4215 = trunc i32 %4214 to i8
  %4216 = and i8 %4215, 1
  %4217 = xor i8 %4216, 1
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4217, i8* %4218, align 1
  %4219 = xor i64 1, %4206
  %4220 = trunc i64 %4219 to i32
  %4221 = xor i32 %4220, %4209
  %4222 = lshr i32 %4221, 4
  %4223 = trunc i32 %4222 to i8
  %4224 = and i8 %4223, 1
  %4225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4224, i8* %4225, align 1
  %4226 = icmp eq i32 %4209, 0
  %4227 = zext i1 %4226 to i8
  %4228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4227, i8* %4228, align 1
  %4229 = lshr i32 %4209, 31
  %4230 = trunc i32 %4229 to i8
  %4231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4230, i8* %4231, align 1
  %4232 = lshr i32 %4205, 31
  %4233 = xor i32 %4229, %4232
  %4234 = add i32 %4233, %4232
  %4235 = icmp eq i32 %4234, 2
  %4236 = zext i1 %4235 to i8
  %4237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4236, i8* %4237, align 1
  store %struct.Memory* %loadMem_44eeb3, %struct.Memory** %MEMORY
  %loadMem_44eeb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4239 = getelementptr inbounds %struct.GPR, %struct.GPR* %4238, i32 0, i32 33
  %4240 = getelementptr inbounds %struct.Reg, %struct.Reg* %4239, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %4240 to i64*
  %4241 = load i64, i64* %PC.i675
  %4242 = add i64 %4241, 180
  %4243 = load i64, i64* %PC.i675
  %4244 = add i64 %4243, 6
  %4245 = load i64, i64* %PC.i675
  %4246 = add i64 %4245, 6
  store i64 %4246, i64* %PC.i675
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4248 = load i8, i8* %4247, align 1
  store i8 %4248, i8* %BRANCH_TAKEN, align 1
  %4249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4250 = icmp ne i8 %4248, 0
  %4251 = select i1 %4250, i64 %4242, i64 %4244
  store i64 %4251, i64* %4249, align 8
  store %struct.Memory* %loadMem_44eeb6, %struct.Memory** %MEMORY
  %loadBr_44eeb6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44eeb6 = icmp eq i8 %loadBr_44eeb6, 1
  br i1 %cmpBr_44eeb6, label %block_.L_44ef6a, label %block_.L_44eebc

block_.L_44eebc:                                  ; preds = %block_44ee9f, %block_.L_44ee82
  %loadMem_44eebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4253 = getelementptr inbounds %struct.GPR, %struct.GPR* %4252, i32 0, i32 33
  %4254 = getelementptr inbounds %struct.Reg, %struct.Reg* %4253, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %4254 to i64*
  %4255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4256 = getelementptr inbounds %struct.GPR, %struct.GPR* %4255, i32 0, i32 1
  %4257 = getelementptr inbounds %struct.Reg, %struct.Reg* %4256, i32 0, i32 0
  %RAX.i673 = bitcast %union.anon* %4257 to i64*
  %4258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4259 = getelementptr inbounds %struct.GPR, %struct.GPR* %4258, i32 0, i32 15
  %4260 = getelementptr inbounds %struct.Reg, %struct.Reg* %4259, i32 0, i32 0
  %RBP.i674 = bitcast %union.anon* %4260 to i64*
  %4261 = load i64, i64* %RBP.i674
  %4262 = sub i64 %4261, 436
  %4263 = load i64, i64* %PC.i672
  %4264 = add i64 %4263, 6
  store i64 %4264, i64* %PC.i672
  %4265 = inttoptr i64 %4262 to i32*
  %4266 = load i32, i32* %4265
  %4267 = zext i32 %4266 to i64
  store i64 %4267, i64* %RAX.i673, align 8
  store %struct.Memory* %loadMem_44eebc, %struct.Memory** %MEMORY
  %loadMem_44eec2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4269 = getelementptr inbounds %struct.GPR, %struct.GPR* %4268, i32 0, i32 33
  %4270 = getelementptr inbounds %struct.Reg, %struct.Reg* %4269, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %4270 to i64*
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4272 = getelementptr inbounds %struct.GPR, %struct.GPR* %4271, i32 0, i32 1
  %4273 = getelementptr inbounds %struct.Reg, %struct.Reg* %4272, i32 0, i32 0
  %RAX.i671 = bitcast %union.anon* %4273 to i64*
  %4274 = load i64, i64* %RAX.i671
  %4275 = load i64, i64* %PC.i670
  %4276 = add i64 %4275, 3
  store i64 %4276, i64* %PC.i670
  %4277 = trunc i64 %4274 to i32
  %4278 = sub i32 %4277, 1
  %4279 = zext i32 %4278 to i64
  store i64 %4279, i64* %RAX.i671, align 8
  %4280 = icmp ult i32 %4277, 1
  %4281 = zext i1 %4280 to i8
  %4282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4281, i8* %4282, align 1
  %4283 = and i32 %4278, 255
  %4284 = call i32 @llvm.ctpop.i32(i32 %4283)
  %4285 = trunc i32 %4284 to i8
  %4286 = and i8 %4285, 1
  %4287 = xor i8 %4286, 1
  %4288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4287, i8* %4288, align 1
  %4289 = xor i64 1, %4274
  %4290 = trunc i64 %4289 to i32
  %4291 = xor i32 %4290, %4278
  %4292 = lshr i32 %4291, 4
  %4293 = trunc i32 %4292 to i8
  %4294 = and i8 %4293, 1
  %4295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4294, i8* %4295, align 1
  %4296 = icmp eq i32 %4278, 0
  %4297 = zext i1 %4296 to i8
  %4298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4297, i8* %4298, align 1
  %4299 = lshr i32 %4278, 31
  %4300 = trunc i32 %4299 to i8
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4300, i8* %4301, align 1
  %4302 = lshr i32 %4277, 31
  %4303 = xor i32 %4299, %4302
  %4304 = add i32 %4303, %4302
  %4305 = icmp eq i32 %4304, 2
  %4306 = zext i1 %4305 to i8
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4306, i8* %4307, align 1
  store %struct.Memory* %loadMem_44eec2, %struct.Memory** %MEMORY
  %loadMem_44eec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4309 = getelementptr inbounds %struct.GPR, %struct.GPR* %4308, i32 0, i32 33
  %4310 = getelementptr inbounds %struct.Reg, %struct.Reg* %4309, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %4310 to i64*
  %4311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4312 = getelementptr inbounds %struct.GPR, %struct.GPR* %4311, i32 0, i32 1
  %4313 = getelementptr inbounds %struct.Reg, %struct.Reg* %4312, i32 0, i32 0
  %EAX.i668 = bitcast %union.anon* %4313 to i32*
  %4314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4315 = getelementptr inbounds %struct.GPR, %struct.GPR* %4314, i32 0, i32 5
  %4316 = getelementptr inbounds %struct.Reg, %struct.Reg* %4315, i32 0, i32 0
  %RCX.i669 = bitcast %union.anon* %4316 to i64*
  %4317 = load i32, i32* %EAX.i668
  %4318 = zext i32 %4317 to i64
  %4319 = load i64, i64* %PC.i667
  %4320 = add i64 %4319, 3
  store i64 %4320, i64* %PC.i667
  %4321 = shl i64 %4318, 32
  %4322 = ashr exact i64 %4321, 32
  store i64 %4322, i64* %RCX.i669, align 8
  store %struct.Memory* %loadMem_44eec5, %struct.Memory** %MEMORY
  %loadMem_44eec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4324 = getelementptr inbounds %struct.GPR, %struct.GPR* %4323, i32 0, i32 33
  %4325 = getelementptr inbounds %struct.Reg, %struct.Reg* %4324, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %4325 to i64*
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4327 = getelementptr inbounds %struct.GPR, %struct.GPR* %4326, i32 0, i32 1
  %4328 = getelementptr inbounds %struct.Reg, %struct.Reg* %4327, i32 0, i32 0
  %RAX.i665 = bitcast %union.anon* %4328 to i64*
  %4329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4330 = getelementptr inbounds %struct.GPR, %struct.GPR* %4329, i32 0, i32 5
  %4331 = getelementptr inbounds %struct.Reg, %struct.Reg* %4330, i32 0, i32 0
  %RCX.i666 = bitcast %union.anon* %4331 to i64*
  %4332 = load i64, i64* %RCX.i666
  %4333 = add i64 %4332, 12099168
  %4334 = load i64, i64* %PC.i664
  %4335 = add i64 %4334, 8
  store i64 %4335, i64* %PC.i664
  %4336 = inttoptr i64 %4333 to i8*
  %4337 = load i8, i8* %4336
  %4338 = zext i8 %4337 to i64
  store i64 %4338, i64* %RAX.i665, align 8
  store %struct.Memory* %loadMem_44eec8, %struct.Memory** %MEMORY
  %loadMem_44eed0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4340 = getelementptr inbounds %struct.GPR, %struct.GPR* %4339, i32 0, i32 33
  %4341 = getelementptr inbounds %struct.Reg, %struct.Reg* %4340, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %4341 to i64*
  %4342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4343 = getelementptr inbounds %struct.GPR, %struct.GPR* %4342, i32 0, i32 1
  %4344 = getelementptr inbounds %struct.Reg, %struct.Reg* %4343, i32 0, i32 0
  %EAX.i663 = bitcast %union.anon* %4344 to i32*
  %4345 = load i32, i32* %EAX.i663
  %4346 = zext i32 %4345 to i64
  %4347 = load i64, i64* %PC.i662
  %4348 = add i64 %4347, 3
  store i64 %4348, i64* %PC.i662
  %4349 = sub i32 %4345, 3
  %4350 = icmp ult i32 %4345, 3
  %4351 = zext i1 %4350 to i8
  %4352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4351, i8* %4352, align 1
  %4353 = and i32 %4349, 255
  %4354 = call i32 @llvm.ctpop.i32(i32 %4353)
  %4355 = trunc i32 %4354 to i8
  %4356 = and i8 %4355, 1
  %4357 = xor i8 %4356, 1
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4357, i8* %4358, align 1
  %4359 = xor i64 3, %4346
  %4360 = trunc i64 %4359 to i32
  %4361 = xor i32 %4360, %4349
  %4362 = lshr i32 %4361, 4
  %4363 = trunc i32 %4362 to i8
  %4364 = and i8 %4363, 1
  %4365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4364, i8* %4365, align 1
  %4366 = icmp eq i32 %4349, 0
  %4367 = zext i1 %4366 to i8
  %4368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4367, i8* %4368, align 1
  %4369 = lshr i32 %4349, 31
  %4370 = trunc i32 %4369 to i8
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4370, i8* %4371, align 1
  %4372 = lshr i32 %4345, 31
  %4373 = xor i32 %4369, %4372
  %4374 = add i32 %4373, %4372
  %4375 = icmp eq i32 %4374, 2
  %4376 = zext i1 %4375 to i8
  %4377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4376, i8* %4377, align 1
  store %struct.Memory* %loadMem_44eed0, %struct.Memory** %MEMORY
  %loadMem_44eed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4379 = getelementptr inbounds %struct.GPR, %struct.GPR* %4378, i32 0, i32 33
  %4380 = getelementptr inbounds %struct.Reg, %struct.Reg* %4379, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %4380 to i64*
  %4381 = load i64, i64* %PC.i661
  %4382 = add i64 %4381, 35
  %4383 = load i64, i64* %PC.i661
  %4384 = add i64 %4383, 6
  %4385 = load i64, i64* %PC.i661
  %4386 = add i64 %4385, 6
  store i64 %4386, i64* %PC.i661
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4388 = load i8, i8* %4387, align 1
  store i8 %4388, i8* %BRANCH_TAKEN, align 1
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4390 = icmp ne i8 %4388, 0
  %4391 = select i1 %4390, i64 %4382, i64 %4384
  store i64 %4391, i64* %4389, align 8
  store %struct.Memory* %loadMem_44eed3, %struct.Memory** %MEMORY
  %loadBr_44eed3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44eed3 = icmp eq i8 %loadBr_44eed3, 1
  br i1 %cmpBr_44eed3, label %block_.L_44eef6, label %block_44eed9

block_44eed9:                                     ; preds = %block_.L_44eebc
  %loadMem_44eed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4393 = getelementptr inbounds %struct.GPR, %struct.GPR* %4392, i32 0, i32 33
  %4394 = getelementptr inbounds %struct.Reg, %struct.Reg* %4393, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %4394 to i64*
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4396 = getelementptr inbounds %struct.GPR, %struct.GPR* %4395, i32 0, i32 1
  %4397 = getelementptr inbounds %struct.Reg, %struct.Reg* %4396, i32 0, i32 0
  %RAX.i659 = bitcast %union.anon* %4397 to i64*
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4399 = getelementptr inbounds %struct.GPR, %struct.GPR* %4398, i32 0, i32 15
  %4400 = getelementptr inbounds %struct.Reg, %struct.Reg* %4399, i32 0, i32 0
  %RBP.i660 = bitcast %union.anon* %4400 to i64*
  %4401 = load i64, i64* %RBP.i660
  %4402 = sub i64 %4401, 436
  %4403 = load i64, i64* %PC.i658
  %4404 = add i64 %4403, 6
  store i64 %4404, i64* %PC.i658
  %4405 = inttoptr i64 %4402 to i32*
  %4406 = load i32, i32* %4405
  %4407 = zext i32 %4406 to i64
  store i64 %4407, i64* %RAX.i659, align 8
  store %struct.Memory* %loadMem_44eed9, %struct.Memory** %MEMORY
  %loadMem_44eedf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4409 = getelementptr inbounds %struct.GPR, %struct.GPR* %4408, i32 0, i32 33
  %4410 = getelementptr inbounds %struct.Reg, %struct.Reg* %4409, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %4410 to i64*
  %4411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4412 = getelementptr inbounds %struct.GPR, %struct.GPR* %4411, i32 0, i32 1
  %4413 = getelementptr inbounds %struct.Reg, %struct.Reg* %4412, i32 0, i32 0
  %RAX.i657 = bitcast %union.anon* %4413 to i64*
  %4414 = load i64, i64* %RAX.i657
  %4415 = load i64, i64* %PC.i656
  %4416 = add i64 %4415, 3
  store i64 %4416, i64* %PC.i656
  %4417 = trunc i64 %4414 to i32
  %4418 = sub i32 %4417, 1
  %4419 = zext i32 %4418 to i64
  store i64 %4419, i64* %RAX.i657, align 8
  %4420 = icmp ult i32 %4417, 1
  %4421 = zext i1 %4420 to i8
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4421, i8* %4422, align 1
  %4423 = and i32 %4418, 255
  %4424 = call i32 @llvm.ctpop.i32(i32 %4423)
  %4425 = trunc i32 %4424 to i8
  %4426 = and i8 %4425, 1
  %4427 = xor i8 %4426, 1
  %4428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4427, i8* %4428, align 1
  %4429 = xor i64 1, %4414
  %4430 = trunc i64 %4429 to i32
  %4431 = xor i32 %4430, %4418
  %4432 = lshr i32 %4431, 4
  %4433 = trunc i32 %4432 to i8
  %4434 = and i8 %4433, 1
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4434, i8* %4435, align 1
  %4436 = icmp eq i32 %4418, 0
  %4437 = zext i1 %4436 to i8
  %4438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4437, i8* %4438, align 1
  %4439 = lshr i32 %4418, 31
  %4440 = trunc i32 %4439 to i8
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4440, i8* %4441, align 1
  %4442 = lshr i32 %4417, 31
  %4443 = xor i32 %4439, %4442
  %4444 = add i32 %4443, %4442
  %4445 = icmp eq i32 %4444, 2
  %4446 = zext i1 %4445 to i8
  %4447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4446, i8* %4447, align 1
  store %struct.Memory* %loadMem_44eedf, %struct.Memory** %MEMORY
  %loadMem_44eee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4449 = getelementptr inbounds %struct.GPR, %struct.GPR* %4448, i32 0, i32 33
  %4450 = getelementptr inbounds %struct.Reg, %struct.Reg* %4449, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %4450 to i64*
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4452 = getelementptr inbounds %struct.GPR, %struct.GPR* %4451, i32 0, i32 1
  %4453 = getelementptr inbounds %struct.Reg, %struct.Reg* %4452, i32 0, i32 0
  %EAX.i654 = bitcast %union.anon* %4453 to i32*
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4455 = getelementptr inbounds %struct.GPR, %struct.GPR* %4454, i32 0, i32 5
  %4456 = getelementptr inbounds %struct.Reg, %struct.Reg* %4455, i32 0, i32 0
  %RCX.i655 = bitcast %union.anon* %4456 to i64*
  %4457 = load i32, i32* %EAX.i654
  %4458 = zext i32 %4457 to i64
  %4459 = load i64, i64* %PC.i653
  %4460 = add i64 %4459, 3
  store i64 %4460, i64* %PC.i653
  %4461 = shl i64 %4458, 32
  %4462 = ashr exact i64 %4461, 32
  store i64 %4462, i64* %RCX.i655, align 8
  store %struct.Memory* %loadMem_44eee2, %struct.Memory** %MEMORY
  %loadMem_44eee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4464 = getelementptr inbounds %struct.GPR, %struct.GPR* %4463, i32 0, i32 33
  %4465 = getelementptr inbounds %struct.Reg, %struct.Reg* %4464, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %4465 to i64*
  %4466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4467 = getelementptr inbounds %struct.GPR, %struct.GPR* %4466, i32 0, i32 1
  %4468 = getelementptr inbounds %struct.Reg, %struct.Reg* %4467, i32 0, i32 0
  %RAX.i650 = bitcast %union.anon* %4468 to i64*
  %4469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4470 = getelementptr inbounds %struct.GPR, %struct.GPR* %4469, i32 0, i32 5
  %4471 = getelementptr inbounds %struct.Reg, %struct.Reg* %4470, i32 0, i32 0
  %RCX.i651 = bitcast %union.anon* %4471 to i64*
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4473 = getelementptr inbounds %struct.GPR, %struct.GPR* %4472, i32 0, i32 15
  %4474 = getelementptr inbounds %struct.Reg, %struct.Reg* %4473, i32 0, i32 0
  %RBP.i652 = bitcast %union.anon* %4474 to i64*
  %4475 = load i64, i64* %RBP.i652
  %4476 = load i64, i64* %RCX.i651
  %4477 = add i64 %4475, -432
  %4478 = add i64 %4477, %4476
  %4479 = load i64, i64* %PC.i649
  %4480 = add i64 %4479, 8
  store i64 %4480, i64* %PC.i649
  %4481 = inttoptr i64 %4478 to i8*
  %4482 = load i8, i8* %4481
  %4483 = sext i8 %4482 to i64
  %4484 = and i64 %4483, 4294967295
  store i64 %4484, i64* %RAX.i650, align 8
  store %struct.Memory* %loadMem_44eee5, %struct.Memory** %MEMORY
  %loadMem_44eeed = load %struct.Memory*, %struct.Memory** %MEMORY
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4486 = getelementptr inbounds %struct.GPR, %struct.GPR* %4485, i32 0, i32 33
  %4487 = getelementptr inbounds %struct.Reg, %struct.Reg* %4486, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %4487 to i64*
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4489 = getelementptr inbounds %struct.GPR, %struct.GPR* %4488, i32 0, i32 1
  %4490 = getelementptr inbounds %struct.Reg, %struct.Reg* %4489, i32 0, i32 0
  %EAX.i648 = bitcast %union.anon* %4490 to i32*
  %4491 = load i32, i32* %EAX.i648
  %4492 = zext i32 %4491 to i64
  %4493 = load i64, i64* %PC.i647
  %4494 = add i64 %4493, 3
  store i64 %4494, i64* %PC.i647
  %4495 = sub i32 %4491, 1
  %4496 = icmp ult i32 %4491, 1
  %4497 = zext i1 %4496 to i8
  %4498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4497, i8* %4498, align 1
  %4499 = and i32 %4495, 255
  %4500 = call i32 @llvm.ctpop.i32(i32 %4499)
  %4501 = trunc i32 %4500 to i8
  %4502 = and i8 %4501, 1
  %4503 = xor i8 %4502, 1
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4503, i8* %4504, align 1
  %4505 = xor i64 1, %4492
  %4506 = trunc i64 %4505 to i32
  %4507 = xor i32 %4506, %4495
  %4508 = lshr i32 %4507, 4
  %4509 = trunc i32 %4508 to i8
  %4510 = and i8 %4509, 1
  %4511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4510, i8* %4511, align 1
  %4512 = icmp eq i32 %4495, 0
  %4513 = zext i1 %4512 to i8
  %4514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4513, i8* %4514, align 1
  %4515 = lshr i32 %4495, 31
  %4516 = trunc i32 %4515 to i8
  %4517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4516, i8* %4517, align 1
  %4518 = lshr i32 %4491, 31
  %4519 = xor i32 %4515, %4518
  %4520 = add i32 %4519, %4518
  %4521 = icmp eq i32 %4520, 2
  %4522 = zext i1 %4521 to i8
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4522, i8* %4523, align 1
  store %struct.Memory* %loadMem_44eeed, %struct.Memory** %MEMORY
  %loadMem_44eef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4525 = getelementptr inbounds %struct.GPR, %struct.GPR* %4524, i32 0, i32 33
  %4526 = getelementptr inbounds %struct.Reg, %struct.Reg* %4525, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %4526 to i64*
  %4527 = load i64, i64* %PC.i646
  %4528 = add i64 %4527, 122
  %4529 = load i64, i64* %PC.i646
  %4530 = add i64 %4529, 6
  %4531 = load i64, i64* %PC.i646
  %4532 = add i64 %4531, 6
  store i64 %4532, i64* %PC.i646
  %4533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4534 = load i8, i8* %4533, align 1
  store i8 %4534, i8* %BRANCH_TAKEN, align 1
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4536 = icmp ne i8 %4534, 0
  %4537 = select i1 %4536, i64 %4528, i64 %4530
  store i64 %4537, i64* %4535, align 8
  store %struct.Memory* %loadMem_44eef0, %struct.Memory** %MEMORY
  %loadBr_44eef0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44eef0 = icmp eq i8 %loadBr_44eef0, 1
  br i1 %cmpBr_44eef0, label %block_.L_44ef6a, label %block_.L_44eef6

block_.L_44eef6:                                  ; preds = %block_44eed9, %block_.L_44eebc
  %loadMem_44eef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4539 = getelementptr inbounds %struct.GPR, %struct.GPR* %4538, i32 0, i32 33
  %4540 = getelementptr inbounds %struct.Reg, %struct.Reg* %4539, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %4540 to i64*
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4542 = getelementptr inbounds %struct.GPR, %struct.GPR* %4541, i32 0, i32 1
  %4543 = getelementptr inbounds %struct.Reg, %struct.Reg* %4542, i32 0, i32 0
  %RAX.i644 = bitcast %union.anon* %4543 to i64*
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4545 = getelementptr inbounds %struct.GPR, %struct.GPR* %4544, i32 0, i32 15
  %4546 = getelementptr inbounds %struct.Reg, %struct.Reg* %4545, i32 0, i32 0
  %RBP.i645 = bitcast %union.anon* %4546 to i64*
  %4547 = load i64, i64* %RBP.i645
  %4548 = sub i64 %4547, 436
  %4549 = load i64, i64* %PC.i643
  %4550 = add i64 %4549, 6
  store i64 %4550, i64* %PC.i643
  %4551 = inttoptr i64 %4548 to i32*
  %4552 = load i32, i32* %4551
  %4553 = zext i32 %4552 to i64
  store i64 %4553, i64* %RAX.i644, align 8
  store %struct.Memory* %loadMem_44eef6, %struct.Memory** %MEMORY
  %loadMem_44eefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4555 = getelementptr inbounds %struct.GPR, %struct.GPR* %4554, i32 0, i32 33
  %4556 = getelementptr inbounds %struct.Reg, %struct.Reg* %4555, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %4556 to i64*
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4558 = getelementptr inbounds %struct.GPR, %struct.GPR* %4557, i32 0, i32 1
  %4559 = getelementptr inbounds %struct.Reg, %struct.Reg* %4558, i32 0, i32 0
  %RAX.i642 = bitcast %union.anon* %4559 to i64*
  %4560 = load i64, i64* %RAX.i642
  %4561 = load i64, i64* %PC.i641
  %4562 = add i64 %4561, 3
  store i64 %4562, i64* %PC.i641
  %4563 = trunc i64 %4560 to i32
  %4564 = sub i32 %4563, 20
  %4565 = zext i32 %4564 to i64
  store i64 %4565, i64* %RAX.i642, align 8
  %4566 = icmp ult i32 %4563, 20
  %4567 = zext i1 %4566 to i8
  %4568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4567, i8* %4568, align 1
  %4569 = and i32 %4564, 255
  %4570 = call i32 @llvm.ctpop.i32(i32 %4569)
  %4571 = trunc i32 %4570 to i8
  %4572 = and i8 %4571, 1
  %4573 = xor i8 %4572, 1
  %4574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4573, i8* %4574, align 1
  %4575 = xor i64 20, %4560
  %4576 = trunc i64 %4575 to i32
  %4577 = xor i32 %4576, %4564
  %4578 = lshr i32 %4577, 4
  %4579 = trunc i32 %4578 to i8
  %4580 = and i8 %4579, 1
  %4581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4580, i8* %4581, align 1
  %4582 = icmp eq i32 %4564, 0
  %4583 = zext i1 %4582 to i8
  %4584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4583, i8* %4584, align 1
  %4585 = lshr i32 %4564, 31
  %4586 = trunc i32 %4585 to i8
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4586, i8* %4587, align 1
  %4588 = lshr i32 %4563, 31
  %4589 = xor i32 %4585, %4588
  %4590 = add i32 %4589, %4588
  %4591 = icmp eq i32 %4590, 2
  %4592 = zext i1 %4591 to i8
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4592, i8* %4593, align 1
  store %struct.Memory* %loadMem_44eefc, %struct.Memory** %MEMORY
  %loadMem_44eeff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4595 = getelementptr inbounds %struct.GPR, %struct.GPR* %4594, i32 0, i32 33
  %4596 = getelementptr inbounds %struct.Reg, %struct.Reg* %4595, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %4596 to i64*
  %4597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4598 = getelementptr inbounds %struct.GPR, %struct.GPR* %4597, i32 0, i32 1
  %4599 = getelementptr inbounds %struct.Reg, %struct.Reg* %4598, i32 0, i32 0
  %EAX.i639 = bitcast %union.anon* %4599 to i32*
  %4600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4601 = getelementptr inbounds %struct.GPR, %struct.GPR* %4600, i32 0, i32 5
  %4602 = getelementptr inbounds %struct.Reg, %struct.Reg* %4601, i32 0, i32 0
  %RCX.i640 = bitcast %union.anon* %4602 to i64*
  %4603 = load i32, i32* %EAX.i639
  %4604 = zext i32 %4603 to i64
  %4605 = load i64, i64* %PC.i638
  %4606 = add i64 %4605, 3
  store i64 %4606, i64* %PC.i638
  %4607 = shl i64 %4604, 32
  %4608 = ashr exact i64 %4607, 32
  store i64 %4608, i64* %RCX.i640, align 8
  store %struct.Memory* %loadMem_44eeff, %struct.Memory** %MEMORY
  %loadMem_44ef02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4610 = getelementptr inbounds %struct.GPR, %struct.GPR* %4609, i32 0, i32 33
  %4611 = getelementptr inbounds %struct.Reg, %struct.Reg* %4610, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %4611 to i64*
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4613 = getelementptr inbounds %struct.GPR, %struct.GPR* %4612, i32 0, i32 1
  %4614 = getelementptr inbounds %struct.Reg, %struct.Reg* %4613, i32 0, i32 0
  %RAX.i636 = bitcast %union.anon* %4614 to i64*
  %4615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4616 = getelementptr inbounds %struct.GPR, %struct.GPR* %4615, i32 0, i32 5
  %4617 = getelementptr inbounds %struct.Reg, %struct.Reg* %4616, i32 0, i32 0
  %RCX.i637 = bitcast %union.anon* %4617 to i64*
  %4618 = load i64, i64* %RCX.i637
  %4619 = add i64 %4618, 12099168
  %4620 = load i64, i64* %PC.i635
  %4621 = add i64 %4620, 8
  store i64 %4621, i64* %PC.i635
  %4622 = inttoptr i64 %4619 to i8*
  %4623 = load i8, i8* %4622
  %4624 = zext i8 %4623 to i64
  store i64 %4624, i64* %RAX.i636, align 8
  store %struct.Memory* %loadMem_44ef02, %struct.Memory** %MEMORY
  %loadMem_44ef0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4626 = getelementptr inbounds %struct.GPR, %struct.GPR* %4625, i32 0, i32 33
  %4627 = getelementptr inbounds %struct.Reg, %struct.Reg* %4626, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %4627 to i64*
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4629 = getelementptr inbounds %struct.GPR, %struct.GPR* %4628, i32 0, i32 1
  %4630 = getelementptr inbounds %struct.Reg, %struct.Reg* %4629, i32 0, i32 0
  %EAX.i634 = bitcast %union.anon* %4630 to i32*
  %4631 = load i32, i32* %EAX.i634
  %4632 = zext i32 %4631 to i64
  %4633 = load i64, i64* %PC.i633
  %4634 = add i64 %4633, 3
  store i64 %4634, i64* %PC.i633
  %4635 = sub i32 %4631, 3
  %4636 = icmp ult i32 %4631, 3
  %4637 = zext i1 %4636 to i8
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4637, i8* %4638, align 1
  %4639 = and i32 %4635, 255
  %4640 = call i32 @llvm.ctpop.i32(i32 %4639)
  %4641 = trunc i32 %4640 to i8
  %4642 = and i8 %4641, 1
  %4643 = xor i8 %4642, 1
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4643, i8* %4644, align 1
  %4645 = xor i64 3, %4632
  %4646 = trunc i64 %4645 to i32
  %4647 = xor i32 %4646, %4635
  %4648 = lshr i32 %4647, 4
  %4649 = trunc i32 %4648 to i8
  %4650 = and i8 %4649, 1
  %4651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4650, i8* %4651, align 1
  %4652 = icmp eq i32 %4635, 0
  %4653 = zext i1 %4652 to i8
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4653, i8* %4654, align 1
  %4655 = lshr i32 %4635, 31
  %4656 = trunc i32 %4655 to i8
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4656, i8* %4657, align 1
  %4658 = lshr i32 %4631, 31
  %4659 = xor i32 %4655, %4658
  %4660 = add i32 %4659, %4658
  %4661 = icmp eq i32 %4660, 2
  %4662 = zext i1 %4661 to i8
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4662, i8* %4663, align 1
  store %struct.Memory* %loadMem_44ef0a, %struct.Memory** %MEMORY
  %loadMem_44ef0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4665 = getelementptr inbounds %struct.GPR, %struct.GPR* %4664, i32 0, i32 33
  %4666 = getelementptr inbounds %struct.Reg, %struct.Reg* %4665, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %4666 to i64*
  %4667 = load i64, i64* %PC.i632
  %4668 = add i64 %4667, 35
  %4669 = load i64, i64* %PC.i632
  %4670 = add i64 %4669, 6
  %4671 = load i64, i64* %PC.i632
  %4672 = add i64 %4671, 6
  store i64 %4672, i64* %PC.i632
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4674 = load i8, i8* %4673, align 1
  store i8 %4674, i8* %BRANCH_TAKEN, align 1
  %4675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4676 = icmp ne i8 %4674, 0
  %4677 = select i1 %4676, i64 %4668, i64 %4670
  store i64 %4677, i64* %4675, align 8
  store %struct.Memory* %loadMem_44ef0d, %struct.Memory** %MEMORY
  %loadBr_44ef0d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ef0d = icmp eq i8 %loadBr_44ef0d, 1
  br i1 %cmpBr_44ef0d, label %block_.L_44ef30, label %block_44ef13

block_44ef13:                                     ; preds = %block_.L_44eef6
  %loadMem_44ef13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4679 = getelementptr inbounds %struct.GPR, %struct.GPR* %4678, i32 0, i32 33
  %4680 = getelementptr inbounds %struct.Reg, %struct.Reg* %4679, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %4680 to i64*
  %4681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4682 = getelementptr inbounds %struct.GPR, %struct.GPR* %4681, i32 0, i32 1
  %4683 = getelementptr inbounds %struct.Reg, %struct.Reg* %4682, i32 0, i32 0
  %RAX.i630 = bitcast %union.anon* %4683 to i64*
  %4684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4685 = getelementptr inbounds %struct.GPR, %struct.GPR* %4684, i32 0, i32 15
  %4686 = getelementptr inbounds %struct.Reg, %struct.Reg* %4685, i32 0, i32 0
  %RBP.i631 = bitcast %union.anon* %4686 to i64*
  %4687 = load i64, i64* %RBP.i631
  %4688 = sub i64 %4687, 436
  %4689 = load i64, i64* %PC.i629
  %4690 = add i64 %4689, 6
  store i64 %4690, i64* %PC.i629
  %4691 = inttoptr i64 %4688 to i32*
  %4692 = load i32, i32* %4691
  %4693 = zext i32 %4692 to i64
  store i64 %4693, i64* %RAX.i630, align 8
  store %struct.Memory* %loadMem_44ef13, %struct.Memory** %MEMORY
  %loadMem_44ef19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4695 = getelementptr inbounds %struct.GPR, %struct.GPR* %4694, i32 0, i32 33
  %4696 = getelementptr inbounds %struct.Reg, %struct.Reg* %4695, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %4696 to i64*
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4698 = getelementptr inbounds %struct.GPR, %struct.GPR* %4697, i32 0, i32 1
  %4699 = getelementptr inbounds %struct.Reg, %struct.Reg* %4698, i32 0, i32 0
  %RAX.i628 = bitcast %union.anon* %4699 to i64*
  %4700 = load i64, i64* %RAX.i628
  %4701 = load i64, i64* %PC.i627
  %4702 = add i64 %4701, 3
  store i64 %4702, i64* %PC.i627
  %4703 = trunc i64 %4700 to i32
  %4704 = sub i32 %4703, 20
  %4705 = zext i32 %4704 to i64
  store i64 %4705, i64* %RAX.i628, align 8
  %4706 = icmp ult i32 %4703, 20
  %4707 = zext i1 %4706 to i8
  %4708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4707, i8* %4708, align 1
  %4709 = and i32 %4704, 255
  %4710 = call i32 @llvm.ctpop.i32(i32 %4709)
  %4711 = trunc i32 %4710 to i8
  %4712 = and i8 %4711, 1
  %4713 = xor i8 %4712, 1
  %4714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4713, i8* %4714, align 1
  %4715 = xor i64 20, %4700
  %4716 = trunc i64 %4715 to i32
  %4717 = xor i32 %4716, %4704
  %4718 = lshr i32 %4717, 4
  %4719 = trunc i32 %4718 to i8
  %4720 = and i8 %4719, 1
  %4721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4720, i8* %4721, align 1
  %4722 = icmp eq i32 %4704, 0
  %4723 = zext i1 %4722 to i8
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4723, i8* %4724, align 1
  %4725 = lshr i32 %4704, 31
  %4726 = trunc i32 %4725 to i8
  %4727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4726, i8* %4727, align 1
  %4728 = lshr i32 %4703, 31
  %4729 = xor i32 %4725, %4728
  %4730 = add i32 %4729, %4728
  %4731 = icmp eq i32 %4730, 2
  %4732 = zext i1 %4731 to i8
  %4733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4732, i8* %4733, align 1
  store %struct.Memory* %loadMem_44ef19, %struct.Memory** %MEMORY
  %loadMem_44ef1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4735 = getelementptr inbounds %struct.GPR, %struct.GPR* %4734, i32 0, i32 33
  %4736 = getelementptr inbounds %struct.Reg, %struct.Reg* %4735, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %4736 to i64*
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4738 = getelementptr inbounds %struct.GPR, %struct.GPR* %4737, i32 0, i32 1
  %4739 = getelementptr inbounds %struct.Reg, %struct.Reg* %4738, i32 0, i32 0
  %EAX.i625 = bitcast %union.anon* %4739 to i32*
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4741 = getelementptr inbounds %struct.GPR, %struct.GPR* %4740, i32 0, i32 5
  %4742 = getelementptr inbounds %struct.Reg, %struct.Reg* %4741, i32 0, i32 0
  %RCX.i626 = bitcast %union.anon* %4742 to i64*
  %4743 = load i32, i32* %EAX.i625
  %4744 = zext i32 %4743 to i64
  %4745 = load i64, i64* %PC.i624
  %4746 = add i64 %4745, 3
  store i64 %4746, i64* %PC.i624
  %4747 = shl i64 %4744, 32
  %4748 = ashr exact i64 %4747, 32
  store i64 %4748, i64* %RCX.i626, align 8
  store %struct.Memory* %loadMem_44ef1c, %struct.Memory** %MEMORY
  %loadMem_44ef1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4750 = getelementptr inbounds %struct.GPR, %struct.GPR* %4749, i32 0, i32 33
  %4751 = getelementptr inbounds %struct.Reg, %struct.Reg* %4750, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %4751 to i64*
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4753 = getelementptr inbounds %struct.GPR, %struct.GPR* %4752, i32 0, i32 1
  %4754 = getelementptr inbounds %struct.Reg, %struct.Reg* %4753, i32 0, i32 0
  %RAX.i621 = bitcast %union.anon* %4754 to i64*
  %4755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4756 = getelementptr inbounds %struct.GPR, %struct.GPR* %4755, i32 0, i32 5
  %4757 = getelementptr inbounds %struct.Reg, %struct.Reg* %4756, i32 0, i32 0
  %RCX.i622 = bitcast %union.anon* %4757 to i64*
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4759 = getelementptr inbounds %struct.GPR, %struct.GPR* %4758, i32 0, i32 15
  %4760 = getelementptr inbounds %struct.Reg, %struct.Reg* %4759, i32 0, i32 0
  %RBP.i623 = bitcast %union.anon* %4760 to i64*
  %4761 = load i64, i64* %RBP.i623
  %4762 = load i64, i64* %RCX.i622
  %4763 = add i64 %4761, -432
  %4764 = add i64 %4763, %4762
  %4765 = load i64, i64* %PC.i620
  %4766 = add i64 %4765, 8
  store i64 %4766, i64* %PC.i620
  %4767 = inttoptr i64 %4764 to i8*
  %4768 = load i8, i8* %4767
  %4769 = sext i8 %4768 to i64
  %4770 = and i64 %4769, 4294967295
  store i64 %4770, i64* %RAX.i621, align 8
  store %struct.Memory* %loadMem_44ef1f, %struct.Memory** %MEMORY
  %loadMem_44ef27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4772 = getelementptr inbounds %struct.GPR, %struct.GPR* %4771, i32 0, i32 33
  %4773 = getelementptr inbounds %struct.Reg, %struct.Reg* %4772, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %4773 to i64*
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4775 = getelementptr inbounds %struct.GPR, %struct.GPR* %4774, i32 0, i32 1
  %4776 = getelementptr inbounds %struct.Reg, %struct.Reg* %4775, i32 0, i32 0
  %EAX.i619 = bitcast %union.anon* %4776 to i32*
  %4777 = load i32, i32* %EAX.i619
  %4778 = zext i32 %4777 to i64
  %4779 = load i64, i64* %PC.i618
  %4780 = add i64 %4779, 3
  store i64 %4780, i64* %PC.i618
  %4781 = sub i32 %4777, 1
  %4782 = icmp ult i32 %4777, 1
  %4783 = zext i1 %4782 to i8
  %4784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4783, i8* %4784, align 1
  %4785 = and i32 %4781, 255
  %4786 = call i32 @llvm.ctpop.i32(i32 %4785)
  %4787 = trunc i32 %4786 to i8
  %4788 = and i8 %4787, 1
  %4789 = xor i8 %4788, 1
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4789, i8* %4790, align 1
  %4791 = xor i64 1, %4778
  %4792 = trunc i64 %4791 to i32
  %4793 = xor i32 %4792, %4781
  %4794 = lshr i32 %4793, 4
  %4795 = trunc i32 %4794 to i8
  %4796 = and i8 %4795, 1
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4796, i8* %4797, align 1
  %4798 = icmp eq i32 %4781, 0
  %4799 = zext i1 %4798 to i8
  %4800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4799, i8* %4800, align 1
  %4801 = lshr i32 %4781, 31
  %4802 = trunc i32 %4801 to i8
  %4803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4802, i8* %4803, align 1
  %4804 = lshr i32 %4777, 31
  %4805 = xor i32 %4801, %4804
  %4806 = add i32 %4805, %4804
  %4807 = icmp eq i32 %4806, 2
  %4808 = zext i1 %4807 to i8
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4808, i8* %4809, align 1
  store %struct.Memory* %loadMem_44ef27, %struct.Memory** %MEMORY
  %loadMem_44ef2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4811 = getelementptr inbounds %struct.GPR, %struct.GPR* %4810, i32 0, i32 33
  %4812 = getelementptr inbounds %struct.Reg, %struct.Reg* %4811, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %4812 to i64*
  %4813 = load i64, i64* %PC.i617
  %4814 = add i64 %4813, 64
  %4815 = load i64, i64* %PC.i617
  %4816 = add i64 %4815, 6
  %4817 = load i64, i64* %PC.i617
  %4818 = add i64 %4817, 6
  store i64 %4818, i64* %PC.i617
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4820 = load i8, i8* %4819, align 1
  store i8 %4820, i8* %BRANCH_TAKEN, align 1
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4822 = icmp ne i8 %4820, 0
  %4823 = select i1 %4822, i64 %4814, i64 %4816
  store i64 %4823, i64* %4821, align 8
  store %struct.Memory* %loadMem_44ef2a, %struct.Memory** %MEMORY
  %loadBr_44ef2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ef2a = icmp eq i8 %loadBr_44ef2a, 1
  br i1 %cmpBr_44ef2a, label %block_.L_44ef6a, label %block_.L_44ef30

block_.L_44ef30:                                  ; preds = %block_44ef13, %block_.L_44eef6
  %loadMem_44ef30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4825 = getelementptr inbounds %struct.GPR, %struct.GPR* %4824, i32 0, i32 33
  %4826 = getelementptr inbounds %struct.Reg, %struct.Reg* %4825, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %4826 to i64*
  %4827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4828 = getelementptr inbounds %struct.GPR, %struct.GPR* %4827, i32 0, i32 1
  %4829 = getelementptr inbounds %struct.Reg, %struct.Reg* %4828, i32 0, i32 0
  %RAX.i615 = bitcast %union.anon* %4829 to i64*
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4831 = getelementptr inbounds %struct.GPR, %struct.GPR* %4830, i32 0, i32 15
  %4832 = getelementptr inbounds %struct.Reg, %struct.Reg* %4831, i32 0, i32 0
  %RBP.i616 = bitcast %union.anon* %4832 to i64*
  %4833 = load i64, i64* %RBP.i616
  %4834 = sub i64 %4833, 436
  %4835 = load i64, i64* %PC.i614
  %4836 = add i64 %4835, 6
  store i64 %4836, i64* %PC.i614
  %4837 = inttoptr i64 %4834 to i32*
  %4838 = load i32, i32* %4837
  %4839 = zext i32 %4838 to i64
  store i64 %4839, i64* %RAX.i615, align 8
  store %struct.Memory* %loadMem_44ef30, %struct.Memory** %MEMORY
  %loadMem_44ef36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4841 = getelementptr inbounds %struct.GPR, %struct.GPR* %4840, i32 0, i32 33
  %4842 = getelementptr inbounds %struct.Reg, %struct.Reg* %4841, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %4842 to i64*
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4844 = getelementptr inbounds %struct.GPR, %struct.GPR* %4843, i32 0, i32 1
  %4845 = getelementptr inbounds %struct.Reg, %struct.Reg* %4844, i32 0, i32 0
  %RAX.i613 = bitcast %union.anon* %4845 to i64*
  %4846 = load i64, i64* %RAX.i613
  %4847 = load i64, i64* %PC.i612
  %4848 = add i64 %4847, 3
  store i64 %4848, i64* %PC.i612
  %4849 = trunc i64 %4846 to i32
  %4850 = add i32 1, %4849
  %4851 = zext i32 %4850 to i64
  store i64 %4851, i64* %RAX.i613, align 8
  %4852 = icmp ult i32 %4850, %4849
  %4853 = icmp ult i32 %4850, 1
  %4854 = or i1 %4852, %4853
  %4855 = zext i1 %4854 to i8
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4855, i8* %4856, align 1
  %4857 = and i32 %4850, 255
  %4858 = call i32 @llvm.ctpop.i32(i32 %4857)
  %4859 = trunc i32 %4858 to i8
  %4860 = and i8 %4859, 1
  %4861 = xor i8 %4860, 1
  %4862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4861, i8* %4862, align 1
  %4863 = xor i64 1, %4846
  %4864 = trunc i64 %4863 to i32
  %4865 = xor i32 %4864, %4850
  %4866 = lshr i32 %4865, 4
  %4867 = trunc i32 %4866 to i8
  %4868 = and i8 %4867, 1
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4868, i8* %4869, align 1
  %4870 = icmp eq i32 %4850, 0
  %4871 = zext i1 %4870 to i8
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4871, i8* %4872, align 1
  %4873 = lshr i32 %4850, 31
  %4874 = trunc i32 %4873 to i8
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4874, i8* %4875, align 1
  %4876 = lshr i32 %4849, 31
  %4877 = xor i32 %4873, %4876
  %4878 = add i32 %4877, %4873
  %4879 = icmp eq i32 %4878, 2
  %4880 = zext i1 %4879 to i8
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4880, i8* %4881, align 1
  store %struct.Memory* %loadMem_44ef36, %struct.Memory** %MEMORY
  %loadMem_44ef39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4883 = getelementptr inbounds %struct.GPR, %struct.GPR* %4882, i32 0, i32 33
  %4884 = getelementptr inbounds %struct.Reg, %struct.Reg* %4883, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %4884 to i64*
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4886 = getelementptr inbounds %struct.GPR, %struct.GPR* %4885, i32 0, i32 1
  %4887 = getelementptr inbounds %struct.Reg, %struct.Reg* %4886, i32 0, i32 0
  %EAX.i610 = bitcast %union.anon* %4887 to i32*
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4889 = getelementptr inbounds %struct.GPR, %struct.GPR* %4888, i32 0, i32 5
  %4890 = getelementptr inbounds %struct.Reg, %struct.Reg* %4889, i32 0, i32 0
  %RCX.i611 = bitcast %union.anon* %4890 to i64*
  %4891 = load i32, i32* %EAX.i610
  %4892 = zext i32 %4891 to i64
  %4893 = load i64, i64* %PC.i609
  %4894 = add i64 %4893, 3
  store i64 %4894, i64* %PC.i609
  %4895 = shl i64 %4892, 32
  %4896 = ashr exact i64 %4895, 32
  store i64 %4896, i64* %RCX.i611, align 8
  store %struct.Memory* %loadMem_44ef39, %struct.Memory** %MEMORY
  %loadMem_44ef3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4898 = getelementptr inbounds %struct.GPR, %struct.GPR* %4897, i32 0, i32 33
  %4899 = getelementptr inbounds %struct.Reg, %struct.Reg* %4898, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %4899 to i64*
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4901 = getelementptr inbounds %struct.GPR, %struct.GPR* %4900, i32 0, i32 1
  %4902 = getelementptr inbounds %struct.Reg, %struct.Reg* %4901, i32 0, i32 0
  %RAX.i607 = bitcast %union.anon* %4902 to i64*
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4904 = getelementptr inbounds %struct.GPR, %struct.GPR* %4903, i32 0, i32 5
  %4905 = getelementptr inbounds %struct.Reg, %struct.Reg* %4904, i32 0, i32 0
  %RCX.i608 = bitcast %union.anon* %4905 to i64*
  %4906 = load i64, i64* %RCX.i608
  %4907 = add i64 %4906, 12099168
  %4908 = load i64, i64* %PC.i606
  %4909 = add i64 %4908, 8
  store i64 %4909, i64* %PC.i606
  %4910 = inttoptr i64 %4907 to i8*
  %4911 = load i8, i8* %4910
  %4912 = zext i8 %4911 to i64
  store i64 %4912, i64* %RAX.i607, align 8
  store %struct.Memory* %loadMem_44ef3c, %struct.Memory** %MEMORY
  %loadMem_44ef44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4914 = getelementptr inbounds %struct.GPR, %struct.GPR* %4913, i32 0, i32 33
  %4915 = getelementptr inbounds %struct.Reg, %struct.Reg* %4914, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %4915 to i64*
  %4916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4917 = getelementptr inbounds %struct.GPR, %struct.GPR* %4916, i32 0, i32 1
  %4918 = getelementptr inbounds %struct.Reg, %struct.Reg* %4917, i32 0, i32 0
  %EAX.i605 = bitcast %union.anon* %4918 to i32*
  %4919 = load i32, i32* %EAX.i605
  %4920 = zext i32 %4919 to i64
  %4921 = load i64, i64* %PC.i604
  %4922 = add i64 %4921, 3
  store i64 %4922, i64* %PC.i604
  %4923 = sub i32 %4919, 3
  %4924 = icmp ult i32 %4919, 3
  %4925 = zext i1 %4924 to i8
  %4926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4925, i8* %4926, align 1
  %4927 = and i32 %4923, 255
  %4928 = call i32 @llvm.ctpop.i32(i32 %4927)
  %4929 = trunc i32 %4928 to i8
  %4930 = and i8 %4929, 1
  %4931 = xor i8 %4930, 1
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4931, i8* %4932, align 1
  %4933 = xor i64 3, %4920
  %4934 = trunc i64 %4933 to i32
  %4935 = xor i32 %4934, %4923
  %4936 = lshr i32 %4935, 4
  %4937 = trunc i32 %4936 to i8
  %4938 = and i8 %4937, 1
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4938, i8* %4939, align 1
  %4940 = icmp eq i32 %4923, 0
  %4941 = zext i1 %4940 to i8
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4941, i8* %4942, align 1
  %4943 = lshr i32 %4923, 31
  %4944 = trunc i32 %4943 to i8
  %4945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4944, i8* %4945, align 1
  %4946 = lshr i32 %4919, 31
  %4947 = xor i32 %4943, %4946
  %4948 = add i32 %4947, %4946
  %4949 = icmp eq i32 %4948, 2
  %4950 = zext i1 %4949 to i8
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4950, i8* %4951, align 1
  store %struct.Memory* %loadMem_44ef44, %struct.Memory** %MEMORY
  %loadMem_44ef47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4953 = getelementptr inbounds %struct.GPR, %struct.GPR* %4952, i32 0, i32 33
  %4954 = getelementptr inbounds %struct.Reg, %struct.Reg* %4953, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %4954 to i64*
  %4955 = load i64, i64* %PC.i603
  %4956 = add i64 %4955, 131
  %4957 = load i64, i64* %PC.i603
  %4958 = add i64 %4957, 6
  %4959 = load i64, i64* %PC.i603
  %4960 = add i64 %4959, 6
  store i64 %4960, i64* %PC.i603
  %4961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4962 = load i8, i8* %4961, align 1
  store i8 %4962, i8* %BRANCH_TAKEN, align 1
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4964 = icmp ne i8 %4962, 0
  %4965 = select i1 %4964, i64 %4956, i64 %4958
  store i64 %4965, i64* %4963, align 8
  store %struct.Memory* %loadMem_44ef47, %struct.Memory** %MEMORY
  %loadBr_44ef47 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ef47 = icmp eq i8 %loadBr_44ef47, 1
  br i1 %cmpBr_44ef47, label %block_.L_44efca, label %block_44ef4d

block_44ef4d:                                     ; preds = %block_.L_44ef30
  %loadMem_44ef4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4967 = getelementptr inbounds %struct.GPR, %struct.GPR* %4966, i32 0, i32 33
  %4968 = getelementptr inbounds %struct.Reg, %struct.Reg* %4967, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %4968 to i64*
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4970 = getelementptr inbounds %struct.GPR, %struct.GPR* %4969, i32 0, i32 1
  %4971 = getelementptr inbounds %struct.Reg, %struct.Reg* %4970, i32 0, i32 0
  %RAX.i601 = bitcast %union.anon* %4971 to i64*
  %4972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4973 = getelementptr inbounds %struct.GPR, %struct.GPR* %4972, i32 0, i32 15
  %4974 = getelementptr inbounds %struct.Reg, %struct.Reg* %4973, i32 0, i32 0
  %RBP.i602 = bitcast %union.anon* %4974 to i64*
  %4975 = load i64, i64* %RBP.i602
  %4976 = sub i64 %4975, 436
  %4977 = load i64, i64* %PC.i600
  %4978 = add i64 %4977, 6
  store i64 %4978, i64* %PC.i600
  %4979 = inttoptr i64 %4976 to i32*
  %4980 = load i32, i32* %4979
  %4981 = zext i32 %4980 to i64
  store i64 %4981, i64* %RAX.i601, align 8
  store %struct.Memory* %loadMem_44ef4d, %struct.Memory** %MEMORY
  %loadMem_44ef53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4983 = getelementptr inbounds %struct.GPR, %struct.GPR* %4982, i32 0, i32 33
  %4984 = getelementptr inbounds %struct.Reg, %struct.Reg* %4983, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %4984 to i64*
  %4985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4986 = getelementptr inbounds %struct.GPR, %struct.GPR* %4985, i32 0, i32 1
  %4987 = getelementptr inbounds %struct.Reg, %struct.Reg* %4986, i32 0, i32 0
  %RAX.i599 = bitcast %union.anon* %4987 to i64*
  %4988 = load i64, i64* %RAX.i599
  %4989 = load i64, i64* %PC.i598
  %4990 = add i64 %4989, 3
  store i64 %4990, i64* %PC.i598
  %4991 = trunc i64 %4988 to i32
  %4992 = add i32 1, %4991
  %4993 = zext i32 %4992 to i64
  store i64 %4993, i64* %RAX.i599, align 8
  %4994 = icmp ult i32 %4992, %4991
  %4995 = icmp ult i32 %4992, 1
  %4996 = or i1 %4994, %4995
  %4997 = zext i1 %4996 to i8
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4997, i8* %4998, align 1
  %4999 = and i32 %4992, 255
  %5000 = call i32 @llvm.ctpop.i32(i32 %4999)
  %5001 = trunc i32 %5000 to i8
  %5002 = and i8 %5001, 1
  %5003 = xor i8 %5002, 1
  %5004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5003, i8* %5004, align 1
  %5005 = xor i64 1, %4988
  %5006 = trunc i64 %5005 to i32
  %5007 = xor i32 %5006, %4992
  %5008 = lshr i32 %5007, 4
  %5009 = trunc i32 %5008 to i8
  %5010 = and i8 %5009, 1
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5010, i8* %5011, align 1
  %5012 = icmp eq i32 %4992, 0
  %5013 = zext i1 %5012 to i8
  %5014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5013, i8* %5014, align 1
  %5015 = lshr i32 %4992, 31
  %5016 = trunc i32 %5015 to i8
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5016, i8* %5017, align 1
  %5018 = lshr i32 %4991, 31
  %5019 = xor i32 %5015, %5018
  %5020 = add i32 %5019, %5015
  %5021 = icmp eq i32 %5020, 2
  %5022 = zext i1 %5021 to i8
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5022, i8* %5023, align 1
  store %struct.Memory* %loadMem_44ef53, %struct.Memory** %MEMORY
  %loadMem_44ef56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5025 = getelementptr inbounds %struct.GPR, %struct.GPR* %5024, i32 0, i32 33
  %5026 = getelementptr inbounds %struct.Reg, %struct.Reg* %5025, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %5026 to i64*
  %5027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5028 = getelementptr inbounds %struct.GPR, %struct.GPR* %5027, i32 0, i32 1
  %5029 = getelementptr inbounds %struct.Reg, %struct.Reg* %5028, i32 0, i32 0
  %EAX.i596 = bitcast %union.anon* %5029 to i32*
  %5030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5031 = getelementptr inbounds %struct.GPR, %struct.GPR* %5030, i32 0, i32 5
  %5032 = getelementptr inbounds %struct.Reg, %struct.Reg* %5031, i32 0, i32 0
  %RCX.i597 = bitcast %union.anon* %5032 to i64*
  %5033 = load i32, i32* %EAX.i596
  %5034 = zext i32 %5033 to i64
  %5035 = load i64, i64* %PC.i595
  %5036 = add i64 %5035, 3
  store i64 %5036, i64* %PC.i595
  %5037 = shl i64 %5034, 32
  %5038 = ashr exact i64 %5037, 32
  store i64 %5038, i64* %RCX.i597, align 8
  store %struct.Memory* %loadMem_44ef56, %struct.Memory** %MEMORY
  %loadMem_44ef59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5040 = getelementptr inbounds %struct.GPR, %struct.GPR* %5039, i32 0, i32 33
  %5041 = getelementptr inbounds %struct.Reg, %struct.Reg* %5040, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %5041 to i64*
  %5042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5043 = getelementptr inbounds %struct.GPR, %struct.GPR* %5042, i32 0, i32 1
  %5044 = getelementptr inbounds %struct.Reg, %struct.Reg* %5043, i32 0, i32 0
  %RAX.i592 = bitcast %union.anon* %5044 to i64*
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5046 = getelementptr inbounds %struct.GPR, %struct.GPR* %5045, i32 0, i32 5
  %5047 = getelementptr inbounds %struct.Reg, %struct.Reg* %5046, i32 0, i32 0
  %RCX.i593 = bitcast %union.anon* %5047 to i64*
  %5048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5049 = getelementptr inbounds %struct.GPR, %struct.GPR* %5048, i32 0, i32 15
  %5050 = getelementptr inbounds %struct.Reg, %struct.Reg* %5049, i32 0, i32 0
  %RBP.i594 = bitcast %union.anon* %5050 to i64*
  %5051 = load i64, i64* %RBP.i594
  %5052 = load i64, i64* %RCX.i593
  %5053 = add i64 %5051, -432
  %5054 = add i64 %5053, %5052
  %5055 = load i64, i64* %PC.i591
  %5056 = add i64 %5055, 8
  store i64 %5056, i64* %PC.i591
  %5057 = inttoptr i64 %5054 to i8*
  %5058 = load i8, i8* %5057
  %5059 = sext i8 %5058 to i64
  %5060 = and i64 %5059, 4294967295
  store i64 %5060, i64* %RAX.i592, align 8
  store %struct.Memory* %loadMem_44ef59, %struct.Memory** %MEMORY
  %loadMem_44ef61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5062 = getelementptr inbounds %struct.GPR, %struct.GPR* %5061, i32 0, i32 33
  %5063 = getelementptr inbounds %struct.Reg, %struct.Reg* %5062, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %5063 to i64*
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5065 = getelementptr inbounds %struct.GPR, %struct.GPR* %5064, i32 0, i32 1
  %5066 = getelementptr inbounds %struct.Reg, %struct.Reg* %5065, i32 0, i32 0
  %EAX.i590 = bitcast %union.anon* %5066 to i32*
  %5067 = load i32, i32* %EAX.i590
  %5068 = zext i32 %5067 to i64
  %5069 = load i64, i64* %PC.i589
  %5070 = add i64 %5069, 3
  store i64 %5070, i64* %PC.i589
  %5071 = sub i32 %5067, 1
  %5072 = icmp ult i32 %5067, 1
  %5073 = zext i1 %5072 to i8
  %5074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5073, i8* %5074, align 1
  %5075 = and i32 %5071, 255
  %5076 = call i32 @llvm.ctpop.i32(i32 %5075)
  %5077 = trunc i32 %5076 to i8
  %5078 = and i8 %5077, 1
  %5079 = xor i8 %5078, 1
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5079, i8* %5080, align 1
  %5081 = xor i64 1, %5068
  %5082 = trunc i64 %5081 to i32
  %5083 = xor i32 %5082, %5071
  %5084 = lshr i32 %5083, 4
  %5085 = trunc i32 %5084 to i8
  %5086 = and i8 %5085, 1
  %5087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5086, i8* %5087, align 1
  %5088 = icmp eq i32 %5071, 0
  %5089 = zext i1 %5088 to i8
  %5090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5089, i8* %5090, align 1
  %5091 = lshr i32 %5071, 31
  %5092 = trunc i32 %5091 to i8
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5092, i8* %5093, align 1
  %5094 = lshr i32 %5067, 31
  %5095 = xor i32 %5091, %5094
  %5096 = add i32 %5095, %5094
  %5097 = icmp eq i32 %5096, 2
  %5098 = zext i1 %5097 to i8
  %5099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5098, i8* %5099, align 1
  store %struct.Memory* %loadMem_44ef61, %struct.Memory** %MEMORY
  %loadMem_44ef64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5101 = getelementptr inbounds %struct.GPR, %struct.GPR* %5100, i32 0, i32 33
  %5102 = getelementptr inbounds %struct.Reg, %struct.Reg* %5101, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %5102 to i64*
  %5103 = load i64, i64* %PC.i588
  %5104 = add i64 %5103, 102
  %5105 = load i64, i64* %PC.i588
  %5106 = add i64 %5105, 6
  %5107 = load i64, i64* %PC.i588
  %5108 = add i64 %5107, 6
  store i64 %5108, i64* %PC.i588
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5110 = load i8, i8* %5109, align 1
  %5111 = icmp eq i8 %5110, 0
  %5112 = zext i1 %5111 to i8
  store i8 %5112, i8* %BRANCH_TAKEN, align 1
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5114 = select i1 %5111, i64 %5104, i64 %5106
  store i64 %5114, i64* %5113, align 8
  store %struct.Memory* %loadMem_44ef64, %struct.Memory** %MEMORY
  %loadBr_44ef64 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ef64 = icmp eq i8 %loadBr_44ef64, 1
  br i1 %cmpBr_44ef64, label %block_.L_44efca, label %block_.L_44ef6a

block_.L_44ef6a:                                  ; preds = %block_44ef4d, %block_44ef13, %block_44eed9, %block_44ee9f
  %loadMem_44ef6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5116 = getelementptr inbounds %struct.GPR, %struct.GPR* %5115, i32 0, i32 33
  %5117 = getelementptr inbounds %struct.Reg, %struct.Reg* %5116, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %5117 to i64*
  %5118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5119 = getelementptr inbounds %struct.GPR, %struct.GPR* %5118, i32 0, i32 1
  %5120 = getelementptr inbounds %struct.Reg, %struct.Reg* %5119, i32 0, i32 0
  %RAX.i586 = bitcast %union.anon* %5120 to i64*
  %5121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5122 = getelementptr inbounds %struct.GPR, %struct.GPR* %5121, i32 0, i32 15
  %5123 = getelementptr inbounds %struct.Reg, %struct.Reg* %5122, i32 0, i32 0
  %RBP.i587 = bitcast %union.anon* %5123 to i64*
  %5124 = load i64, i64* %RBP.i587
  %5125 = sub i64 %5124, 436
  %5126 = load i64, i64* %PC.i585
  %5127 = add i64 %5126, 7
  store i64 %5127, i64* %PC.i585
  %5128 = inttoptr i64 %5125 to i32*
  %5129 = load i32, i32* %5128
  %5130 = sext i32 %5129 to i64
  store i64 %5130, i64* %RAX.i586, align 8
  store %struct.Memory* %loadMem_44ef6a, %struct.Memory** %MEMORY
  %loadMem_44ef71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5132 = getelementptr inbounds %struct.GPR, %struct.GPR* %5131, i32 0, i32 33
  %5133 = getelementptr inbounds %struct.Reg, %struct.Reg* %5132, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %5133 to i64*
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5135 = getelementptr inbounds %struct.GPR, %struct.GPR* %5134, i32 0, i32 1
  %5136 = getelementptr inbounds %struct.Reg, %struct.Reg* %5135, i32 0, i32 0
  %RAX.i583 = bitcast %union.anon* %5136 to i64*
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5138 = getelementptr inbounds %struct.GPR, %struct.GPR* %5137, i32 0, i32 5
  %5139 = getelementptr inbounds %struct.Reg, %struct.Reg* %5138, i32 0, i32 0
  %RCX.i584 = bitcast %union.anon* %5139 to i64*
  %5140 = load i64, i64* %RAX.i583
  %5141 = add i64 %5140, 12099168
  %5142 = load i64, i64* %PC.i582
  %5143 = add i64 %5142, 8
  store i64 %5143, i64* %PC.i582
  %5144 = inttoptr i64 %5141 to i8*
  %5145 = load i8, i8* %5144
  %5146 = zext i8 %5145 to i64
  store i64 %5146, i64* %RCX.i584, align 8
  store %struct.Memory* %loadMem_44ef71, %struct.Memory** %MEMORY
  %loadMem_44ef79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5148 = getelementptr inbounds %struct.GPR, %struct.GPR* %5147, i32 0, i32 33
  %5149 = getelementptr inbounds %struct.Reg, %struct.Reg* %5148, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %5149 to i64*
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5151 = getelementptr inbounds %struct.GPR, %struct.GPR* %5150, i32 0, i32 5
  %5152 = getelementptr inbounds %struct.Reg, %struct.Reg* %5151, i32 0, i32 0
  %ECX.i581 = bitcast %union.anon* %5152 to i32*
  %5153 = load i32, i32* %ECX.i581
  %5154 = zext i32 %5153 to i64
  %5155 = load i64, i64* %PC.i580
  %5156 = add i64 %5155, 3
  store i64 %5156, i64* %PC.i580
  %5157 = sub i32 %5153, 1
  %5158 = icmp ult i32 %5153, 1
  %5159 = zext i1 %5158 to i8
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5159, i8* %5160, align 1
  %5161 = and i32 %5157, 255
  %5162 = call i32 @llvm.ctpop.i32(i32 %5161)
  %5163 = trunc i32 %5162 to i8
  %5164 = and i8 %5163, 1
  %5165 = xor i8 %5164, 1
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5165, i8* %5166, align 1
  %5167 = xor i64 1, %5154
  %5168 = trunc i64 %5167 to i32
  %5169 = xor i32 %5168, %5157
  %5170 = lshr i32 %5169, 4
  %5171 = trunc i32 %5170 to i8
  %5172 = and i8 %5171, 1
  %5173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5172, i8* %5173, align 1
  %5174 = icmp eq i32 %5157, 0
  %5175 = zext i1 %5174 to i8
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5175, i8* %5176, align 1
  %5177 = lshr i32 %5157, 31
  %5178 = trunc i32 %5177 to i8
  %5179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5178, i8* %5179, align 1
  %5180 = lshr i32 %5153, 31
  %5181 = xor i32 %5177, %5180
  %5182 = add i32 %5181, %5180
  %5183 = icmp eq i32 %5182, 2
  %5184 = zext i1 %5183 to i8
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5184, i8* %5185, align 1
  store %struct.Memory* %loadMem_44ef79, %struct.Memory** %MEMORY
  %loadMem_44ef7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5187 = getelementptr inbounds %struct.GPR, %struct.GPR* %5186, i32 0, i32 33
  %5188 = getelementptr inbounds %struct.Reg, %struct.Reg* %5187, i32 0, i32 0
  %PC.i579 = bitcast %union.anon* %5188 to i64*
  %5189 = load i64, i64* %PC.i579
  %5190 = add i64 %5189, 30
  %5191 = load i64, i64* %PC.i579
  %5192 = add i64 %5191, 6
  %5193 = load i64, i64* %PC.i579
  %5194 = add i64 %5193, 6
  store i64 %5194, i64* %PC.i579
  %5195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5196 = load i8, i8* %5195, align 1
  store i8 %5196, i8* %BRANCH_TAKEN, align 1
  %5197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5198 = icmp ne i8 %5196, 0
  %5199 = select i1 %5198, i64 %5190, i64 %5192
  store i64 %5199, i64* %5197, align 8
  store %struct.Memory* %loadMem_44ef7c, %struct.Memory** %MEMORY
  %loadBr_44ef7c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ef7c = icmp eq i8 %loadBr_44ef7c, 1
  br i1 %cmpBr_44ef7c, label %block_.L_44ef9a, label %block_44ef82

block_44ef82:                                     ; preds = %block_.L_44ef6a
  %loadMem_44ef82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5201 = getelementptr inbounds %struct.GPR, %struct.GPR* %5200, i32 0, i32 33
  %5202 = getelementptr inbounds %struct.Reg, %struct.Reg* %5201, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %5202 to i64*
  %5203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5204 = getelementptr inbounds %struct.GPR, %struct.GPR* %5203, i32 0, i32 1
  %5205 = getelementptr inbounds %struct.Reg, %struct.Reg* %5204, i32 0, i32 0
  %RAX.i577 = bitcast %union.anon* %5205 to i64*
  %5206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5207 = getelementptr inbounds %struct.GPR, %struct.GPR* %5206, i32 0, i32 15
  %5208 = getelementptr inbounds %struct.Reg, %struct.Reg* %5207, i32 0, i32 0
  %RBP.i578 = bitcast %union.anon* %5208 to i64*
  %5209 = load i64, i64* %RBP.i578
  %5210 = sub i64 %5209, 436
  %5211 = load i64, i64* %PC.i576
  %5212 = add i64 %5211, 7
  store i64 %5212, i64* %PC.i576
  %5213 = inttoptr i64 %5210 to i32*
  %5214 = load i32, i32* %5213
  %5215 = sext i32 %5214 to i64
  store i64 %5215, i64* %RAX.i577, align 8
  store %struct.Memory* %loadMem_44ef82, %struct.Memory** %MEMORY
  %loadMem_44ef89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5217 = getelementptr inbounds %struct.GPR, %struct.GPR* %5216, i32 0, i32 33
  %5218 = getelementptr inbounds %struct.Reg, %struct.Reg* %5217, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %5218 to i64*
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5220 = getelementptr inbounds %struct.GPR, %struct.GPR* %5219, i32 0, i32 1
  %5221 = getelementptr inbounds %struct.Reg, %struct.Reg* %5220, i32 0, i32 0
  %RAX.i574 = bitcast %union.anon* %5221 to i64*
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5223 = getelementptr inbounds %struct.GPR, %struct.GPR* %5222, i32 0, i32 5
  %5224 = getelementptr inbounds %struct.Reg, %struct.Reg* %5223, i32 0, i32 0
  %RCX.i575 = bitcast %union.anon* %5224 to i64*
  %5225 = load i64, i64* %RAX.i574
  %5226 = add i64 %5225, 12099168
  %5227 = load i64, i64* %PC.i573
  %5228 = add i64 %5227, 8
  store i64 %5228, i64* %PC.i573
  %5229 = inttoptr i64 %5226 to i8*
  %5230 = load i8, i8* %5229
  %5231 = zext i8 %5230 to i64
  store i64 %5231, i64* %RCX.i575, align 8
  store %struct.Memory* %loadMem_44ef89, %struct.Memory** %MEMORY
  %loadMem_44ef91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5233 = getelementptr inbounds %struct.GPR, %struct.GPR* %5232, i32 0, i32 33
  %5234 = getelementptr inbounds %struct.Reg, %struct.Reg* %5233, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %5234 to i64*
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5236 = getelementptr inbounds %struct.GPR, %struct.GPR* %5235, i32 0, i32 5
  %5237 = getelementptr inbounds %struct.Reg, %struct.Reg* %5236, i32 0, i32 0
  %ECX.i572 = bitcast %union.anon* %5237 to i32*
  %5238 = load i32, i32* %ECX.i572
  %5239 = zext i32 %5238 to i64
  %5240 = load i64, i64* %PC.i571
  %5241 = add i64 %5240, 3
  store i64 %5241, i64* %PC.i571
  %5242 = sub i32 %5238, 2
  %5243 = icmp ult i32 %5238, 2
  %5244 = zext i1 %5243 to i8
  %5245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5244, i8* %5245, align 1
  %5246 = and i32 %5242, 255
  %5247 = call i32 @llvm.ctpop.i32(i32 %5246)
  %5248 = trunc i32 %5247 to i8
  %5249 = and i8 %5248, 1
  %5250 = xor i8 %5249, 1
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5250, i8* %5251, align 1
  %5252 = xor i64 2, %5239
  %5253 = trunc i64 %5252 to i32
  %5254 = xor i32 %5253, %5242
  %5255 = lshr i32 %5254, 4
  %5256 = trunc i32 %5255 to i8
  %5257 = and i8 %5256, 1
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5257, i8* %5258, align 1
  %5259 = icmp eq i32 %5242, 0
  %5260 = zext i1 %5259 to i8
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5260, i8* %5261, align 1
  %5262 = lshr i32 %5242, 31
  %5263 = trunc i32 %5262 to i8
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5263, i8* %5264, align 1
  %5265 = lshr i32 %5238, 31
  %5266 = xor i32 %5262, %5265
  %5267 = add i32 %5266, %5265
  %5268 = icmp eq i32 %5267, 2
  %5269 = zext i1 %5268 to i8
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5269, i8* %5270, align 1
  store %struct.Memory* %loadMem_44ef91, %struct.Memory** %MEMORY
  %loadMem_44ef94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5272 = getelementptr inbounds %struct.GPR, %struct.GPR* %5271, i32 0, i32 33
  %5273 = getelementptr inbounds %struct.Reg, %struct.Reg* %5272, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %5273 to i64*
  %5274 = load i64, i64* %PC.i570
  %5275 = add i64 %5274, 34
  %5276 = load i64, i64* %PC.i570
  %5277 = add i64 %5276, 6
  %5278 = load i64, i64* %PC.i570
  %5279 = add i64 %5278, 6
  store i64 %5279, i64* %PC.i570
  %5280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5281 = load i8, i8* %5280, align 1
  %5282 = icmp eq i8 %5281, 0
  %5283 = zext i1 %5282 to i8
  store i8 %5283, i8* %BRANCH_TAKEN, align 1
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5285 = select i1 %5282, i64 %5275, i64 %5277
  store i64 %5285, i64* %5284, align 8
  store %struct.Memory* %loadMem_44ef94, %struct.Memory** %MEMORY
  %loadBr_44ef94 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44ef94 = icmp eq i8 %loadBr_44ef94, 1
  br i1 %cmpBr_44ef94, label %block_.L_44efb6, label %block_.L_44ef9a

block_.L_44ef9a:                                  ; preds = %block_44ef82, %block_.L_44ef6a
  %loadMem_44ef9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5287 = getelementptr inbounds %struct.GPR, %struct.GPR* %5286, i32 0, i32 33
  %5288 = getelementptr inbounds %struct.Reg, %struct.Reg* %5287, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %5288 to i64*
  %5289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5290 = getelementptr inbounds %struct.GPR, %struct.GPR* %5289, i32 0, i32 7
  %5291 = getelementptr inbounds %struct.Reg, %struct.Reg* %5290, i32 0, i32 0
  %RDX.i569 = bitcast %union.anon* %5291 to i64*
  %5292 = load i64, i64* %PC.i568
  %5293 = add i64 %5292, 5
  store i64 %5293, i64* %PC.i568
  store i64 2, i64* %RDX.i569, align 8
  store %struct.Memory* %loadMem_44ef9a, %struct.Memory** %MEMORY
  %loadMem_44ef9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5295 = getelementptr inbounds %struct.GPR, %struct.GPR* %5294, i32 0, i32 33
  %5296 = getelementptr inbounds %struct.Reg, %struct.Reg* %5295, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %5296 to i64*
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5298 = getelementptr inbounds %struct.GPR, %struct.GPR* %5297, i32 0, i32 9
  %5299 = getelementptr inbounds %struct.Reg, %struct.Reg* %5298, i32 0, i32 0
  %RSI.i566 = bitcast %union.anon* %5299 to i64*
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5301 = getelementptr inbounds %struct.GPR, %struct.GPR* %5300, i32 0, i32 15
  %5302 = getelementptr inbounds %struct.Reg, %struct.Reg* %5301, i32 0, i32 0
  %RBP.i567 = bitcast %union.anon* %5302 to i64*
  %5303 = load i64, i64* %RBP.i567
  %5304 = sub i64 %5303, 432
  %5305 = load i64, i64* %PC.i565
  %5306 = add i64 %5305, 7
  store i64 %5306, i64* %PC.i565
  store i64 %5304, i64* %RSI.i566, align 8
  store %struct.Memory* %loadMem_44ef9f, %struct.Memory** %MEMORY
  %loadMem_44efa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5308 = getelementptr inbounds %struct.GPR, %struct.GPR* %5307, i32 0, i32 33
  %5309 = getelementptr inbounds %struct.Reg, %struct.Reg* %5308, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %5309 to i64*
  %5310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5311 = getelementptr inbounds %struct.GPR, %struct.GPR* %5310, i32 0, i32 11
  %5312 = getelementptr inbounds %struct.Reg, %struct.Reg* %5311, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %5312 to i64*
  %5313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5314 = getelementptr inbounds %struct.GPR, %struct.GPR* %5313, i32 0, i32 15
  %5315 = getelementptr inbounds %struct.Reg, %struct.Reg* %5314, i32 0, i32 0
  %RBP.i564 = bitcast %union.anon* %5315 to i64*
  %5316 = load i64, i64* %RBP.i564
  %5317 = sub i64 %5316, 436
  %5318 = load i64, i64* %PC.i563
  %5319 = add i64 %5318, 6
  store i64 %5319, i64* %PC.i563
  %5320 = inttoptr i64 %5317 to i32*
  %5321 = load i32, i32* %5320
  %5322 = zext i32 %5321 to i64
  store i64 %5322, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_44efa6, %struct.Memory** %MEMORY
  %loadMem1_44efac = load %struct.Memory*, %struct.Memory** %MEMORY
  %5323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5324 = getelementptr inbounds %struct.GPR, %struct.GPR* %5323, i32 0, i32 33
  %5325 = getelementptr inbounds %struct.Reg, %struct.Reg* %5324, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %5325 to i64*
  %5326 = load i64, i64* %PC.i562
  %5327 = add i64 %5326, -234236
  %5328 = load i64, i64* %PC.i562
  %5329 = add i64 %5328, 5
  %5330 = load i64, i64* %PC.i562
  %5331 = add i64 %5330, 5
  store i64 %5331, i64* %PC.i562
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5333 = load i64, i64* %5332, align 8
  %5334 = add i64 %5333, -8
  %5335 = inttoptr i64 %5334 to i64*
  store i64 %5329, i64* %5335
  store i64 %5334, i64* %5332, align 8
  %5336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5327, i64* %5336, align 8
  store %struct.Memory* %loadMem1_44efac, %struct.Memory** %MEMORY
  %loadMem2_44efac = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44efac = load i64, i64* %3
  %call2_44efac = call %struct.Memory* @sub_415cb0.mark_string(%struct.State* %0, i64 %loadPC_44efac, %struct.Memory* %loadMem2_44efac)
  store %struct.Memory* %call2_44efac, %struct.Memory** %MEMORY
  %loadMem_44efb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5338 = getelementptr inbounds %struct.GPR, %struct.GPR* %5337, i32 0, i32 33
  %5339 = getelementptr inbounds %struct.Reg, %struct.Reg* %5338, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %5339 to i64*
  %5340 = load i64, i64* %PC.i561
  %5341 = add i64 %5340, 20
  %5342 = load i64, i64* %PC.i561
  %5343 = add i64 %5342, 5
  store i64 %5343, i64* %PC.i561
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5341, i64* %5344, align 8
  store %struct.Memory* %loadMem_44efb1, %struct.Memory** %MEMORY
  br label %block_.L_44efc5

block_.L_44efb6:                                  ; preds = %block_44ef82
  %loadMem_44efb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5346 = getelementptr inbounds %struct.GPR, %struct.GPR* %5345, i32 0, i32 33
  %5347 = getelementptr inbounds %struct.Reg, %struct.Reg* %5346, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %5347 to i64*
  %5348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5349 = getelementptr inbounds %struct.GPR, %struct.GPR* %5348, i32 0, i32 1
  %5350 = getelementptr inbounds %struct.Reg, %struct.Reg* %5349, i32 0, i32 0
  %RAX.i559 = bitcast %union.anon* %5350 to i64*
  %5351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5352 = getelementptr inbounds %struct.GPR, %struct.GPR* %5351, i32 0, i32 15
  %5353 = getelementptr inbounds %struct.Reg, %struct.Reg* %5352, i32 0, i32 0
  %RBP.i560 = bitcast %union.anon* %5353 to i64*
  %5354 = load i64, i64* %RBP.i560
  %5355 = sub i64 %5354, 436
  %5356 = load i64, i64* %PC.i558
  %5357 = add i64 %5356, 7
  store i64 %5357, i64* %PC.i558
  %5358 = inttoptr i64 %5355 to i32*
  %5359 = load i32, i32* %5358
  %5360 = sext i32 %5359 to i64
  store i64 %5360, i64* %RAX.i559, align 8
  store %struct.Memory* %loadMem_44efb6, %struct.Memory** %MEMORY
  %loadMem_44efbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5362 = getelementptr inbounds %struct.GPR, %struct.GPR* %5361, i32 0, i32 33
  %5363 = getelementptr inbounds %struct.Reg, %struct.Reg* %5362, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %5363 to i64*
  %5364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5365 = getelementptr inbounds %struct.GPR, %struct.GPR* %5364, i32 0, i32 1
  %5366 = getelementptr inbounds %struct.Reg, %struct.Reg* %5365, i32 0, i32 0
  %RAX.i556 = bitcast %union.anon* %5366 to i64*
  %5367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5368 = getelementptr inbounds %struct.GPR, %struct.GPR* %5367, i32 0, i32 15
  %5369 = getelementptr inbounds %struct.Reg, %struct.Reg* %5368, i32 0, i32 0
  %RBP.i557 = bitcast %union.anon* %5369 to i64*
  %5370 = load i64, i64* %RBP.i557
  %5371 = load i64, i64* %RAX.i556
  %5372 = add i64 %5370, -432
  %5373 = add i64 %5372, %5371
  %5374 = load i64, i64* %PC.i555
  %5375 = add i64 %5374, 8
  store i64 %5375, i64* %PC.i555
  %5376 = inttoptr i64 %5373 to i8*
  store i8 2, i8* %5376
  store %struct.Memory* %loadMem_44efbd, %struct.Memory** %MEMORY
  br label %block_.L_44efc5

block_.L_44efc5:                                  ; preds = %block_.L_44efb6, %block_.L_44ef9a
  %loadMem_44efc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5378 = getelementptr inbounds %struct.GPR, %struct.GPR* %5377, i32 0, i32 33
  %5379 = getelementptr inbounds %struct.Reg, %struct.Reg* %5378, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %5379 to i64*
  %5380 = load i64, i64* %PC.i554
  %5381 = add i64 %5380, 5
  %5382 = load i64, i64* %PC.i554
  %5383 = add i64 %5382, 5
  store i64 %5383, i64* %PC.i554
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5381, i64* %5384, align 8
  store %struct.Memory* %loadMem_44efc5, %struct.Memory** %MEMORY
  br label %block_.L_44efca

block_.L_44efca:                                  ; preds = %block_.L_44efc5, %block_44ef4d, %block_.L_44ef30
  %loadMem_44efca = load %struct.Memory*, %struct.Memory** %MEMORY
  %5385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5386 = getelementptr inbounds %struct.GPR, %struct.GPR* %5385, i32 0, i32 33
  %5387 = getelementptr inbounds %struct.Reg, %struct.Reg* %5386, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %5387 to i64*
  %5388 = load i64, i64* %PC.i553
  %5389 = add i64 %5388, 5
  %5390 = load i64, i64* %PC.i553
  %5391 = add i64 %5390, 5
  store i64 %5391, i64* %PC.i553
  %5392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5389, i64* %5392, align 8
  store %struct.Memory* %loadMem_44efca, %struct.Memory** %MEMORY
  br label %block_.L_44efcf

block_.L_44efcf:                                  ; preds = %block_.L_44efca, %block_44ee7d, %block_44ee60
  %loadMem_44efcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5394 = getelementptr inbounds %struct.GPR, %struct.GPR* %5393, i32 0, i32 33
  %5395 = getelementptr inbounds %struct.Reg, %struct.Reg* %5394, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %5395 to i64*
  %5396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5397 = getelementptr inbounds %struct.GPR, %struct.GPR* %5396, i32 0, i32 1
  %5398 = getelementptr inbounds %struct.Reg, %struct.Reg* %5397, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %5398 to i64*
  %5399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5400 = getelementptr inbounds %struct.GPR, %struct.GPR* %5399, i32 0, i32 15
  %5401 = getelementptr inbounds %struct.Reg, %struct.Reg* %5400, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %5401 to i64*
  %5402 = load i64, i64* %RBP.i552
  %5403 = sub i64 %5402, 436
  %5404 = load i64, i64* %PC.i550
  %5405 = add i64 %5404, 6
  store i64 %5405, i64* %PC.i550
  %5406 = inttoptr i64 %5403 to i32*
  %5407 = load i32, i32* %5406
  %5408 = zext i32 %5407 to i64
  store i64 %5408, i64* %RAX.i551, align 8
  store %struct.Memory* %loadMem_44efcf, %struct.Memory** %MEMORY
  %loadMem_44efd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5410 = getelementptr inbounds %struct.GPR, %struct.GPR* %5409, i32 0, i32 33
  %5411 = getelementptr inbounds %struct.Reg, %struct.Reg* %5410, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %5411 to i64*
  %5412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5413 = getelementptr inbounds %struct.GPR, %struct.GPR* %5412, i32 0, i32 1
  %5414 = getelementptr inbounds %struct.Reg, %struct.Reg* %5413, i32 0, i32 0
  %RAX.i549 = bitcast %union.anon* %5414 to i64*
  %5415 = load i64, i64* %RAX.i549
  %5416 = load i64, i64* %PC.i548
  %5417 = add i64 %5416, 3
  store i64 %5417, i64* %PC.i548
  %5418 = trunc i64 %5415 to i32
  %5419 = add i32 1, %5418
  %5420 = zext i32 %5419 to i64
  store i64 %5420, i64* %RAX.i549, align 8
  %5421 = icmp ult i32 %5419, %5418
  %5422 = icmp ult i32 %5419, 1
  %5423 = or i1 %5421, %5422
  %5424 = zext i1 %5423 to i8
  %5425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5424, i8* %5425, align 1
  %5426 = and i32 %5419, 255
  %5427 = call i32 @llvm.ctpop.i32(i32 %5426)
  %5428 = trunc i32 %5427 to i8
  %5429 = and i8 %5428, 1
  %5430 = xor i8 %5429, 1
  %5431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5430, i8* %5431, align 1
  %5432 = xor i64 1, %5415
  %5433 = trunc i64 %5432 to i32
  %5434 = xor i32 %5433, %5419
  %5435 = lshr i32 %5434, 4
  %5436 = trunc i32 %5435 to i8
  %5437 = and i8 %5436, 1
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5437, i8* %5438, align 1
  %5439 = icmp eq i32 %5419, 0
  %5440 = zext i1 %5439 to i8
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5440, i8* %5441, align 1
  %5442 = lshr i32 %5419, 31
  %5443 = trunc i32 %5442 to i8
  %5444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5443, i8* %5444, align 1
  %5445 = lshr i32 %5418, 31
  %5446 = xor i32 %5442, %5445
  %5447 = add i32 %5446, %5442
  %5448 = icmp eq i32 %5447, 2
  %5449 = zext i1 %5448 to i8
  %5450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5449, i8* %5450, align 1
  store %struct.Memory* %loadMem_44efd5, %struct.Memory** %MEMORY
  %loadMem_44efd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5452 = getelementptr inbounds %struct.GPR, %struct.GPR* %5451, i32 0, i32 33
  %5453 = getelementptr inbounds %struct.Reg, %struct.Reg* %5452, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %5453 to i64*
  %5454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5455 = getelementptr inbounds %struct.GPR, %struct.GPR* %5454, i32 0, i32 1
  %5456 = getelementptr inbounds %struct.Reg, %struct.Reg* %5455, i32 0, i32 0
  %EAX.i546 = bitcast %union.anon* %5456 to i32*
  %5457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5458 = getelementptr inbounds %struct.GPR, %struct.GPR* %5457, i32 0, i32 15
  %5459 = getelementptr inbounds %struct.Reg, %struct.Reg* %5458, i32 0, i32 0
  %RBP.i547 = bitcast %union.anon* %5459 to i64*
  %5460 = load i64, i64* %RBP.i547
  %5461 = sub i64 %5460, 436
  %5462 = load i32, i32* %EAX.i546
  %5463 = zext i32 %5462 to i64
  %5464 = load i64, i64* %PC.i545
  %5465 = add i64 %5464, 6
  store i64 %5465, i64* %PC.i545
  %5466 = inttoptr i64 %5461 to i32*
  store i32 %5462, i32* %5466
  store %struct.Memory* %loadMem_44efd8, %struct.Memory** %MEMORY
  %loadMem_44efde = load %struct.Memory*, %struct.Memory** %MEMORY
  %5467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5468 = getelementptr inbounds %struct.GPR, %struct.GPR* %5467, i32 0, i32 33
  %5469 = getelementptr inbounds %struct.Reg, %struct.Reg* %5468, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %5469 to i64*
  %5470 = load i64, i64* %PC.i544
  %5471 = add i64 %5470, -422
  %5472 = load i64, i64* %PC.i544
  %5473 = add i64 %5472, 5
  store i64 %5473, i64* %PC.i544
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5471, i64* %5474, align 8
  store %struct.Memory* %loadMem_44efde, %struct.Memory** %MEMORY
  br label %block_.L_44ee38

block_.L_44efe3:                                  ; preds = %block_.L_44ee38
  %loadMem_44efe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5476 = getelementptr inbounds %struct.GPR, %struct.GPR* %5475, i32 0, i32 33
  %5477 = getelementptr inbounds %struct.Reg, %struct.Reg* %5476, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %5477 to i64*
  %5478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5479 = getelementptr inbounds %struct.GPR, %struct.GPR* %5478, i32 0, i32 15
  %5480 = getelementptr inbounds %struct.Reg, %struct.Reg* %5479, i32 0, i32 0
  %RBP.i543 = bitcast %union.anon* %5480 to i64*
  %5481 = load i64, i64* %RBP.i543
  %5482 = sub i64 %5481, 436
  %5483 = load i64, i64* %PC.i542
  %5484 = add i64 %5483, 10
  store i64 %5484, i64* %PC.i542
  %5485 = inttoptr i64 %5482 to i32*
  store i32 21, i32* %5485
  store %struct.Memory* %loadMem_44efe3, %struct.Memory** %MEMORY
  br label %block_.L_44efed

block_.L_44efed:                                  ; preds = %block_.L_44f083, %block_.L_44efe3
  %loadMem_44efed = load %struct.Memory*, %struct.Memory** %MEMORY
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5487 = getelementptr inbounds %struct.GPR, %struct.GPR* %5486, i32 0, i32 33
  %5488 = getelementptr inbounds %struct.Reg, %struct.Reg* %5487, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %5488 to i64*
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5490 = getelementptr inbounds %struct.GPR, %struct.GPR* %5489, i32 0, i32 15
  %5491 = getelementptr inbounds %struct.Reg, %struct.Reg* %5490, i32 0, i32 0
  %RBP.i541 = bitcast %union.anon* %5491 to i64*
  %5492 = load i64, i64* %RBP.i541
  %5493 = sub i64 %5492, 436
  %5494 = load i64, i64* %PC.i540
  %5495 = add i64 %5494, 10
  store i64 %5495, i64* %PC.i540
  %5496 = inttoptr i64 %5493 to i32*
  %5497 = load i32, i32* %5496
  %5498 = sub i32 %5497, 400
  %5499 = icmp ult i32 %5497, 400
  %5500 = zext i1 %5499 to i8
  %5501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5500, i8* %5501, align 1
  %5502 = and i32 %5498, 255
  %5503 = call i32 @llvm.ctpop.i32(i32 %5502)
  %5504 = trunc i32 %5503 to i8
  %5505 = and i8 %5504, 1
  %5506 = xor i8 %5505, 1
  %5507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5506, i8* %5507, align 1
  %5508 = xor i32 %5497, 400
  %5509 = xor i32 %5508, %5498
  %5510 = lshr i32 %5509, 4
  %5511 = trunc i32 %5510 to i8
  %5512 = and i8 %5511, 1
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5512, i8* %5513, align 1
  %5514 = icmp eq i32 %5498, 0
  %5515 = zext i1 %5514 to i8
  %5516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5515, i8* %5516, align 1
  %5517 = lshr i32 %5498, 31
  %5518 = trunc i32 %5517 to i8
  %5519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5518, i8* %5519, align 1
  %5520 = lshr i32 %5497, 31
  %5521 = xor i32 %5517, %5520
  %5522 = add i32 %5521, %5520
  %5523 = icmp eq i32 %5522, 2
  %5524 = zext i1 %5523 to i8
  %5525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5524, i8* %5525, align 1
  store %struct.Memory* %loadMem_44efed, %struct.Memory** %MEMORY
  %loadMem_44eff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5527 = getelementptr inbounds %struct.GPR, %struct.GPR* %5526, i32 0, i32 33
  %5528 = getelementptr inbounds %struct.Reg, %struct.Reg* %5527, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %5528 to i64*
  %5529 = load i64, i64* %PC.i539
  %5530 = add i64 %5529, 160
  %5531 = load i64, i64* %PC.i539
  %5532 = add i64 %5531, 6
  %5533 = load i64, i64* %PC.i539
  %5534 = add i64 %5533, 6
  store i64 %5534, i64* %PC.i539
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5536 = load i8, i8* %5535, align 1
  %5537 = icmp ne i8 %5536, 0
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5539 = load i8, i8* %5538, align 1
  %5540 = icmp ne i8 %5539, 0
  %5541 = xor i1 %5537, %5540
  %5542 = xor i1 %5541, true
  %5543 = zext i1 %5542 to i8
  store i8 %5543, i8* %BRANCH_TAKEN, align 1
  %5544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5545 = select i1 %5541, i64 %5532, i64 %5530
  store i64 %5545, i64* %5544, align 8
  store %struct.Memory* %loadMem_44eff7, %struct.Memory** %MEMORY
  %loadBr_44eff7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44eff7 = icmp eq i8 %loadBr_44eff7, 1
  br i1 %cmpBr_44eff7, label %block_.L_44f097, label %block_44effd

block_44effd:                                     ; preds = %block_.L_44efed
  %loadMem_44effd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5547 = getelementptr inbounds %struct.GPR, %struct.GPR* %5546, i32 0, i32 33
  %5548 = getelementptr inbounds %struct.Reg, %struct.Reg* %5547, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %5548 to i64*
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5550 = getelementptr inbounds %struct.GPR, %struct.GPR* %5549, i32 0, i32 1
  %5551 = getelementptr inbounds %struct.Reg, %struct.Reg* %5550, i32 0, i32 0
  %RAX.i537 = bitcast %union.anon* %5551 to i64*
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 15
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %RBP.i538 = bitcast %union.anon* %5554 to i64*
  %5555 = load i64, i64* %RBP.i538
  %5556 = sub i64 %5555, 436
  %5557 = load i64, i64* %PC.i536
  %5558 = add i64 %5557, 7
  store i64 %5558, i64* %PC.i536
  %5559 = inttoptr i64 %5556 to i32*
  %5560 = load i32, i32* %5559
  %5561 = sext i32 %5560 to i64
  store i64 %5561, i64* %RAX.i537, align 8
  store %struct.Memory* %loadMem_44effd, %struct.Memory** %MEMORY
  %loadMem_44f004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5563 = getelementptr inbounds %struct.GPR, %struct.GPR* %5562, i32 0, i32 33
  %5564 = getelementptr inbounds %struct.Reg, %struct.Reg* %5563, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %5564 to i64*
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5566 = getelementptr inbounds %struct.GPR, %struct.GPR* %5565, i32 0, i32 1
  %5567 = getelementptr inbounds %struct.Reg, %struct.Reg* %5566, i32 0, i32 0
  %RAX.i534 = bitcast %union.anon* %5567 to i64*
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5569 = getelementptr inbounds %struct.GPR, %struct.GPR* %5568, i32 0, i32 5
  %5570 = getelementptr inbounds %struct.Reg, %struct.Reg* %5569, i32 0, i32 0
  %RCX.i535 = bitcast %union.anon* %5570 to i64*
  %5571 = load i64, i64* %RAX.i534
  %5572 = add i64 %5571, 12099168
  %5573 = load i64, i64* %PC.i533
  %5574 = add i64 %5573, 8
  store i64 %5574, i64* %PC.i533
  %5575 = inttoptr i64 %5572 to i8*
  %5576 = load i8, i8* %5575
  %5577 = zext i8 %5576 to i64
  store i64 %5577, i64* %RCX.i535, align 8
  store %struct.Memory* %loadMem_44f004, %struct.Memory** %MEMORY
  %loadMem_44f00c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5579 = getelementptr inbounds %struct.GPR, %struct.GPR* %5578, i32 0, i32 33
  %5580 = getelementptr inbounds %struct.Reg, %struct.Reg* %5579, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %5580 to i64*
  %5581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5582 = getelementptr inbounds %struct.GPR, %struct.GPR* %5581, i32 0, i32 5
  %5583 = getelementptr inbounds %struct.Reg, %struct.Reg* %5582, i32 0, i32 0
  %ECX.i532 = bitcast %union.anon* %5583 to i32*
  %5584 = load i32, i32* %ECX.i532
  %5585 = zext i32 %5584 to i64
  %5586 = load i64, i64* %PC.i531
  %5587 = add i64 %5586, 3
  store i64 %5587, i64* %PC.i531
  %5588 = sub i32 %5584, 3
  %5589 = icmp ult i32 %5584, 3
  %5590 = zext i1 %5589 to i8
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5590, i8* %5591, align 1
  %5592 = and i32 %5588, 255
  %5593 = call i32 @llvm.ctpop.i32(i32 %5592)
  %5594 = trunc i32 %5593 to i8
  %5595 = and i8 %5594, 1
  %5596 = xor i8 %5595, 1
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5596, i8* %5597, align 1
  %5598 = xor i64 3, %5585
  %5599 = trunc i64 %5598 to i32
  %5600 = xor i32 %5599, %5588
  %5601 = lshr i32 %5600, 4
  %5602 = trunc i32 %5601 to i8
  %5603 = and i8 %5602, 1
  %5604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5603, i8* %5604, align 1
  %5605 = icmp eq i32 %5588, 0
  %5606 = zext i1 %5605 to i8
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5606, i8* %5607, align 1
  %5608 = lshr i32 %5588, 31
  %5609 = trunc i32 %5608 to i8
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5609, i8* %5610, align 1
  %5611 = lshr i32 %5584, 31
  %5612 = xor i32 %5608, %5611
  %5613 = add i32 %5612, %5611
  %5614 = icmp eq i32 %5613, 2
  %5615 = zext i1 %5614 to i8
  %5616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5615, i8* %5616, align 1
  store %struct.Memory* %loadMem_44f00c, %struct.Memory** %MEMORY
  %loadMem_44f00f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5618 = getelementptr inbounds %struct.GPR, %struct.GPR* %5617, i32 0, i32 33
  %5619 = getelementptr inbounds %struct.Reg, %struct.Reg* %5618, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %5619 to i64*
  %5620 = load i64, i64* %PC.i530
  %5621 = add i64 %5620, 11
  %5622 = load i64, i64* %PC.i530
  %5623 = add i64 %5622, 6
  %5624 = load i64, i64* %PC.i530
  %5625 = add i64 %5624, 6
  store i64 %5625, i64* %PC.i530
  %5626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5627 = load i8, i8* %5626, align 1
  %5628 = icmp eq i8 %5627, 0
  %5629 = zext i1 %5628 to i8
  store i8 %5629, i8* %BRANCH_TAKEN, align 1
  %5630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5631 = select i1 %5628, i64 %5621, i64 %5623
  store i64 %5631, i64* %5630, align 8
  store %struct.Memory* %loadMem_44f00f, %struct.Memory** %MEMORY
  %loadBr_44f00f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f00f = icmp eq i8 %loadBr_44f00f, 1
  br i1 %cmpBr_44f00f, label %block_.L_44f01a, label %block_44f015

block_44f015:                                     ; preds = %block_44effd
  %loadMem_44f015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5633 = getelementptr inbounds %struct.GPR, %struct.GPR* %5632, i32 0, i32 33
  %5634 = getelementptr inbounds %struct.Reg, %struct.Reg* %5633, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %5634 to i64*
  %5635 = load i64, i64* %PC.i529
  %5636 = add i64 %5635, 110
  %5637 = load i64, i64* %PC.i529
  %5638 = add i64 %5637, 5
  store i64 %5638, i64* %PC.i529
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5636, i64* %5639, align 8
  store %struct.Memory* %loadMem_44f015, %struct.Memory** %MEMORY
  br label %block_.L_44f083

block_.L_44f01a:                                  ; preds = %block_44effd
  %loadMem_44f01a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5641 = getelementptr inbounds %struct.GPR, %struct.GPR* %5640, i32 0, i32 33
  %5642 = getelementptr inbounds %struct.Reg, %struct.Reg* %5641, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %5642 to i64*
  %5643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5644 = getelementptr inbounds %struct.GPR, %struct.GPR* %5643, i32 0, i32 1
  %5645 = getelementptr inbounds %struct.Reg, %struct.Reg* %5644, i32 0, i32 0
  %RAX.i527 = bitcast %union.anon* %5645 to i64*
  %5646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5647 = getelementptr inbounds %struct.GPR, %struct.GPR* %5646, i32 0, i32 15
  %5648 = getelementptr inbounds %struct.Reg, %struct.Reg* %5647, i32 0, i32 0
  %RBP.i528 = bitcast %union.anon* %5648 to i64*
  %5649 = load i64, i64* %RBP.i528
  %5650 = sub i64 %5649, 436
  %5651 = load i64, i64* %PC.i526
  %5652 = add i64 %5651, 7
  store i64 %5652, i64* %PC.i526
  %5653 = inttoptr i64 %5650 to i32*
  %5654 = load i32, i32* %5653
  %5655 = sext i32 %5654 to i64
  store i64 %5655, i64* %RAX.i527, align 8
  store %struct.Memory* %loadMem_44f01a, %struct.Memory** %MEMORY
  %loadMem_44f021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5657 = getelementptr inbounds %struct.GPR, %struct.GPR* %5656, i32 0, i32 33
  %5658 = getelementptr inbounds %struct.Reg, %struct.Reg* %5657, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %5658 to i64*
  %5659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5660 = getelementptr inbounds %struct.GPR, %struct.GPR* %5659, i32 0, i32 1
  %5661 = getelementptr inbounds %struct.Reg, %struct.Reg* %5660, i32 0, i32 0
  %RAX.i524 = bitcast %union.anon* %5661 to i64*
  %5662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5663 = getelementptr inbounds %struct.GPR, %struct.GPR* %5662, i32 0, i32 5
  %5664 = getelementptr inbounds %struct.Reg, %struct.Reg* %5663, i32 0, i32 0
  %RCX.i525 = bitcast %union.anon* %5664 to i64*
  %5665 = load i64, i64* %RAX.i524
  %5666 = add i64 %5665, 12099168
  %5667 = load i64, i64* %PC.i523
  %5668 = add i64 %5667, 8
  store i64 %5668, i64* %PC.i523
  %5669 = inttoptr i64 %5666 to i8*
  %5670 = load i8, i8* %5669
  %5671 = zext i8 %5670 to i64
  store i64 %5671, i64* %RCX.i525, align 8
  store %struct.Memory* %loadMem_44f021, %struct.Memory** %MEMORY
  %loadMem_44f029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5673 = getelementptr inbounds %struct.GPR, %struct.GPR* %5672, i32 0, i32 33
  %5674 = getelementptr inbounds %struct.Reg, %struct.Reg* %5673, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %5674 to i64*
  %5675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5676 = getelementptr inbounds %struct.GPR, %struct.GPR* %5675, i32 0, i32 5
  %5677 = getelementptr inbounds %struct.Reg, %struct.Reg* %5676, i32 0, i32 0
  %ECX.i522 = bitcast %union.anon* %5677 to i32*
  %5678 = load i32, i32* %ECX.i522
  %5679 = zext i32 %5678 to i64
  %5680 = load i64, i64* %PC.i521
  %5681 = add i64 %5680, 3
  store i64 %5681, i64* %PC.i521
  %5682 = sub i32 %5678, 1
  %5683 = icmp ult i32 %5678, 1
  %5684 = zext i1 %5683 to i8
  %5685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5684, i8* %5685, align 1
  %5686 = and i32 %5682, 255
  %5687 = call i32 @llvm.ctpop.i32(i32 %5686)
  %5688 = trunc i32 %5687 to i8
  %5689 = and i8 %5688, 1
  %5690 = xor i8 %5689, 1
  %5691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5690, i8* %5691, align 1
  %5692 = xor i64 1, %5679
  %5693 = trunc i64 %5692 to i32
  %5694 = xor i32 %5693, %5682
  %5695 = lshr i32 %5694, 4
  %5696 = trunc i32 %5695 to i8
  %5697 = and i8 %5696, 1
  %5698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5697, i8* %5698, align 1
  %5699 = icmp eq i32 %5682, 0
  %5700 = zext i1 %5699 to i8
  %5701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5700, i8* %5701, align 1
  %5702 = lshr i32 %5682, 31
  %5703 = trunc i32 %5702 to i8
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5703, i8* %5704, align 1
  %5705 = lshr i32 %5678, 31
  %5706 = xor i32 %5702, %5705
  %5707 = add i32 %5706, %5705
  %5708 = icmp eq i32 %5707, 2
  %5709 = zext i1 %5708 to i8
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5709, i8* %5710, align 1
  store %struct.Memory* %loadMem_44f029, %struct.Memory** %MEMORY
  %loadMem_44f02c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5712 = getelementptr inbounds %struct.GPR, %struct.GPR* %5711, i32 0, i32 33
  %5713 = getelementptr inbounds %struct.Reg, %struct.Reg* %5712, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %5713 to i64*
  %5714 = load i64, i64* %PC.i520
  %5715 = add i64 %5714, 30
  %5716 = load i64, i64* %PC.i520
  %5717 = add i64 %5716, 6
  %5718 = load i64, i64* %PC.i520
  %5719 = add i64 %5718, 6
  store i64 %5719, i64* %PC.i520
  %5720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5721 = load i8, i8* %5720, align 1
  store i8 %5721, i8* %BRANCH_TAKEN, align 1
  %5722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5723 = icmp ne i8 %5721, 0
  %5724 = select i1 %5723, i64 %5715, i64 %5717
  store i64 %5724, i64* %5722, align 8
  store %struct.Memory* %loadMem_44f02c, %struct.Memory** %MEMORY
  %loadBr_44f02c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f02c = icmp eq i8 %loadBr_44f02c, 1
  br i1 %cmpBr_44f02c, label %block_.L_44f04a, label %block_44f032

block_44f032:                                     ; preds = %block_.L_44f01a
  %loadMem_44f032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5726 = getelementptr inbounds %struct.GPR, %struct.GPR* %5725, i32 0, i32 33
  %5727 = getelementptr inbounds %struct.Reg, %struct.Reg* %5726, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %5727 to i64*
  %5728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5729 = getelementptr inbounds %struct.GPR, %struct.GPR* %5728, i32 0, i32 1
  %5730 = getelementptr inbounds %struct.Reg, %struct.Reg* %5729, i32 0, i32 0
  %RAX.i518 = bitcast %union.anon* %5730 to i64*
  %5731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5732 = getelementptr inbounds %struct.GPR, %struct.GPR* %5731, i32 0, i32 15
  %5733 = getelementptr inbounds %struct.Reg, %struct.Reg* %5732, i32 0, i32 0
  %RBP.i519 = bitcast %union.anon* %5733 to i64*
  %5734 = load i64, i64* %RBP.i519
  %5735 = sub i64 %5734, 436
  %5736 = load i64, i64* %PC.i517
  %5737 = add i64 %5736, 7
  store i64 %5737, i64* %PC.i517
  %5738 = inttoptr i64 %5735 to i32*
  %5739 = load i32, i32* %5738
  %5740 = sext i32 %5739 to i64
  store i64 %5740, i64* %RAX.i518, align 8
  store %struct.Memory* %loadMem_44f032, %struct.Memory** %MEMORY
  %loadMem_44f039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5742 = getelementptr inbounds %struct.GPR, %struct.GPR* %5741, i32 0, i32 33
  %5743 = getelementptr inbounds %struct.Reg, %struct.Reg* %5742, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %5743 to i64*
  %5744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5745 = getelementptr inbounds %struct.GPR, %struct.GPR* %5744, i32 0, i32 1
  %5746 = getelementptr inbounds %struct.Reg, %struct.Reg* %5745, i32 0, i32 0
  %RAX.i515 = bitcast %union.anon* %5746 to i64*
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5748 = getelementptr inbounds %struct.GPR, %struct.GPR* %5747, i32 0, i32 5
  %5749 = getelementptr inbounds %struct.Reg, %struct.Reg* %5748, i32 0, i32 0
  %RCX.i516 = bitcast %union.anon* %5749 to i64*
  %5750 = load i64, i64* %RAX.i515
  %5751 = add i64 %5750, 12099168
  %5752 = load i64, i64* %PC.i514
  %5753 = add i64 %5752, 8
  store i64 %5753, i64* %PC.i514
  %5754 = inttoptr i64 %5751 to i8*
  %5755 = load i8, i8* %5754
  %5756 = zext i8 %5755 to i64
  store i64 %5756, i64* %RCX.i516, align 8
  store %struct.Memory* %loadMem_44f039, %struct.Memory** %MEMORY
  %loadMem_44f041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5758 = getelementptr inbounds %struct.GPR, %struct.GPR* %5757, i32 0, i32 33
  %5759 = getelementptr inbounds %struct.Reg, %struct.Reg* %5758, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %5759 to i64*
  %5760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5761 = getelementptr inbounds %struct.GPR, %struct.GPR* %5760, i32 0, i32 5
  %5762 = getelementptr inbounds %struct.Reg, %struct.Reg* %5761, i32 0, i32 0
  %ECX.i513 = bitcast %union.anon* %5762 to i32*
  %5763 = load i32, i32* %ECX.i513
  %5764 = zext i32 %5763 to i64
  %5765 = load i64, i64* %PC.i512
  %5766 = add i64 %5765, 3
  store i64 %5766, i64* %PC.i512
  %5767 = sub i32 %5763, 2
  %5768 = icmp ult i32 %5763, 2
  %5769 = zext i1 %5768 to i8
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5769, i8* %5770, align 1
  %5771 = and i32 %5767, 255
  %5772 = call i32 @llvm.ctpop.i32(i32 %5771)
  %5773 = trunc i32 %5772 to i8
  %5774 = and i8 %5773, 1
  %5775 = xor i8 %5774, 1
  %5776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5775, i8* %5776, align 1
  %5777 = xor i64 2, %5764
  %5778 = trunc i64 %5777 to i32
  %5779 = xor i32 %5778, %5767
  %5780 = lshr i32 %5779, 4
  %5781 = trunc i32 %5780 to i8
  %5782 = and i8 %5781, 1
  %5783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5782, i8* %5783, align 1
  %5784 = icmp eq i32 %5767, 0
  %5785 = zext i1 %5784 to i8
  %5786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5785, i8* %5786, align 1
  %5787 = lshr i32 %5767, 31
  %5788 = trunc i32 %5787 to i8
  %5789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5788, i8* %5789, align 1
  %5790 = lshr i32 %5763, 31
  %5791 = xor i32 %5787, %5790
  %5792 = add i32 %5791, %5790
  %5793 = icmp eq i32 %5792, 2
  %5794 = zext i1 %5793 to i8
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5794, i8* %5795, align 1
  store %struct.Memory* %loadMem_44f041, %struct.Memory** %MEMORY
  %loadMem_44f044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5797 = getelementptr inbounds %struct.GPR, %struct.GPR* %5796, i32 0, i32 33
  %5798 = getelementptr inbounds %struct.Reg, %struct.Reg* %5797, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %5798 to i64*
  %5799 = load i64, i64* %PC.i511
  %5800 = add i64 %5799, 58
  %5801 = load i64, i64* %PC.i511
  %5802 = add i64 %5801, 6
  %5803 = load i64, i64* %PC.i511
  %5804 = add i64 %5803, 6
  store i64 %5804, i64* %PC.i511
  %5805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5806 = load i8, i8* %5805, align 1
  %5807 = icmp eq i8 %5806, 0
  %5808 = zext i1 %5807 to i8
  store i8 %5808, i8* %BRANCH_TAKEN, align 1
  %5809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5810 = select i1 %5807, i64 %5800, i64 %5802
  store i64 %5810, i64* %5809, align 8
  store %struct.Memory* %loadMem_44f044, %struct.Memory** %MEMORY
  %loadBr_44f044 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f044 = icmp eq i8 %loadBr_44f044, 1
  br i1 %cmpBr_44f044, label %block_.L_44f07e, label %block_.L_44f04a

block_.L_44f04a:                                  ; preds = %block_44f032, %block_.L_44f01a
  %loadMem_44f04a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5812 = getelementptr inbounds %struct.GPR, %struct.GPR* %5811, i32 0, i32 33
  %5813 = getelementptr inbounds %struct.Reg, %struct.Reg* %5812, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %5813 to i64*
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5815 = getelementptr inbounds %struct.GPR, %struct.GPR* %5814, i32 0, i32 1
  %5816 = getelementptr inbounds %struct.Reg, %struct.Reg* %5815, i32 0, i32 0
  %RAX.i510 = bitcast %union.anon* %5816 to i64*
  %5817 = load i64, i64* %PC.i509
  %5818 = add i64 %5817, 10
  store i64 %5818, i64* %PC.i509
  store i64 ptrtoint (%G__0xb0eff0_type* @G__0xb0eff0 to i64), i64* %RAX.i510, align 8
  store %struct.Memory* %loadMem_44f04a, %struct.Memory** %MEMORY
  %loadMem_44f054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5820 = getelementptr inbounds %struct.GPR, %struct.GPR* %5819, i32 0, i32 33
  %5821 = getelementptr inbounds %struct.Reg, %struct.Reg* %5820, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %5821 to i64*
  %5822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5823 = getelementptr inbounds %struct.GPR, %struct.GPR* %5822, i32 0, i32 5
  %5824 = getelementptr inbounds %struct.Reg, %struct.Reg* %5823, i32 0, i32 0
  %RCX.i507 = bitcast %union.anon* %5824 to i64*
  %5825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5826 = getelementptr inbounds %struct.GPR, %struct.GPR* %5825, i32 0, i32 15
  %5827 = getelementptr inbounds %struct.Reg, %struct.Reg* %5826, i32 0, i32 0
  %RBP.i508 = bitcast %union.anon* %5827 to i64*
  %5828 = load i64, i64* %RBP.i508
  %5829 = sub i64 %5828, 436
  %5830 = load i64, i64* %PC.i506
  %5831 = add i64 %5830, 7
  store i64 %5831, i64* %PC.i506
  %5832 = inttoptr i64 %5829 to i32*
  %5833 = load i32, i32* %5832
  %5834 = sext i32 %5833 to i64
  store i64 %5834, i64* %RCX.i507, align 8
  store %struct.Memory* %loadMem_44f054, %struct.Memory** %MEMORY
  %loadMem_44f05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5836 = getelementptr inbounds %struct.GPR, %struct.GPR* %5835, i32 0, i32 33
  %5837 = getelementptr inbounds %struct.Reg, %struct.Reg* %5836, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %5837 to i64*
  %5838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5839 = getelementptr inbounds %struct.GPR, %struct.GPR* %5838, i32 0, i32 5
  %5840 = getelementptr inbounds %struct.Reg, %struct.Reg* %5839, i32 0, i32 0
  %RCX.i505 = bitcast %union.anon* %5840 to i64*
  %5841 = load i64, i64* %RCX.i505
  %5842 = load i64, i64* %PC.i504
  %5843 = add i64 %5842, 7
  store i64 %5843, i64* %PC.i504
  %5844 = sext i64 %5841 to i128
  %5845 = and i128 %5844, -18446744073709551616
  %5846 = zext i64 %5841 to i128
  %5847 = or i128 %5845, %5846
  %5848 = mul i128 380, %5847
  %5849 = trunc i128 %5848 to i64
  store i64 %5849, i64* %RCX.i505, align 8
  %5850 = sext i64 %5849 to i128
  %5851 = icmp ne i128 %5850, %5848
  %5852 = zext i1 %5851 to i8
  %5853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5852, i8* %5853, align 1
  %5854 = trunc i128 %5848 to i32
  %5855 = and i32 %5854, 255
  %5856 = call i32 @llvm.ctpop.i32(i32 %5855)
  %5857 = trunc i32 %5856 to i8
  %5858 = and i8 %5857, 1
  %5859 = xor i8 %5858, 1
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5859, i8* %5860, align 1
  %5861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5861, align 1
  %5862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5862, align 1
  %5863 = lshr i64 %5849, 63
  %5864 = trunc i64 %5863 to i8
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5864, i8* %5865, align 1
  %5866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5852, i8* %5866, align 1
  store %struct.Memory* %loadMem_44f05b, %struct.Memory** %MEMORY
  %loadMem_44f062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5868 = getelementptr inbounds %struct.GPR, %struct.GPR* %5867, i32 0, i32 33
  %5869 = getelementptr inbounds %struct.Reg, %struct.Reg* %5868, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %5869 to i64*
  %5870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5871 = getelementptr inbounds %struct.GPR, %struct.GPR* %5870, i32 0, i32 1
  %5872 = getelementptr inbounds %struct.Reg, %struct.Reg* %5871, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %5872 to i64*
  %5873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5874 = getelementptr inbounds %struct.GPR, %struct.GPR* %5873, i32 0, i32 5
  %5875 = getelementptr inbounds %struct.Reg, %struct.Reg* %5874, i32 0, i32 0
  %RCX.i503 = bitcast %union.anon* %5875 to i64*
  %5876 = load i64, i64* %RAX.i502
  %5877 = load i64, i64* %RCX.i503
  %5878 = load i64, i64* %PC.i501
  %5879 = add i64 %5878, 3
  store i64 %5879, i64* %PC.i501
  %5880 = add i64 %5877, %5876
  store i64 %5880, i64* %RAX.i502, align 8
  %5881 = icmp ult i64 %5880, %5876
  %5882 = icmp ult i64 %5880, %5877
  %5883 = or i1 %5881, %5882
  %5884 = zext i1 %5883 to i8
  %5885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5884, i8* %5885, align 1
  %5886 = trunc i64 %5880 to i32
  %5887 = and i32 %5886, 255
  %5888 = call i32 @llvm.ctpop.i32(i32 %5887)
  %5889 = trunc i32 %5888 to i8
  %5890 = and i8 %5889, 1
  %5891 = xor i8 %5890, 1
  %5892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5891, i8* %5892, align 1
  %5893 = xor i64 %5877, %5876
  %5894 = xor i64 %5893, %5880
  %5895 = lshr i64 %5894, 4
  %5896 = trunc i64 %5895 to i8
  %5897 = and i8 %5896, 1
  %5898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5897, i8* %5898, align 1
  %5899 = icmp eq i64 %5880, 0
  %5900 = zext i1 %5899 to i8
  %5901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5900, i8* %5901, align 1
  %5902 = lshr i64 %5880, 63
  %5903 = trunc i64 %5902 to i8
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5903, i8* %5904, align 1
  %5905 = lshr i64 %5876, 63
  %5906 = lshr i64 %5877, 63
  %5907 = xor i64 %5902, %5905
  %5908 = xor i64 %5902, %5906
  %5909 = add i64 %5907, %5908
  %5910 = icmp eq i64 %5909, 2
  %5911 = zext i1 %5910 to i8
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5911, i8* %5912, align 1
  store %struct.Memory* %loadMem_44f062, %struct.Memory** %MEMORY
  %loadMem_44f065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5914 = getelementptr inbounds %struct.GPR, %struct.GPR* %5913, i32 0, i32 33
  %5915 = getelementptr inbounds %struct.Reg, %struct.Reg* %5914, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %5915 to i64*
  %5916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5917 = getelementptr inbounds %struct.GPR, %struct.GPR* %5916, i32 0, i32 1
  %5918 = getelementptr inbounds %struct.Reg, %struct.Reg* %5917, i32 0, i32 0
  %RAX.i500 = bitcast %union.anon* %5918 to i64*
  %5919 = load i64, i64* %RAX.i500
  %5920 = add i64 %5919, 52
  %5921 = load i64, i64* %PC.i499
  %5922 = add i64 %5921, 4
  store i64 %5922, i64* %PC.i499
  %5923 = inttoptr i64 %5920 to i32*
  %5924 = load i32, i32* %5923
  %5925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5925, align 1
  %5926 = and i32 %5924, 255
  %5927 = call i32 @llvm.ctpop.i32(i32 %5926)
  %5928 = trunc i32 %5927 to i8
  %5929 = and i8 %5928, 1
  %5930 = xor i8 %5929, 1
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5930, i8* %5931, align 1
  %5932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5932, align 1
  %5933 = icmp eq i32 %5924, 0
  %5934 = zext i1 %5933 to i8
  %5935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5934, i8* %5935, align 1
  %5936 = lshr i32 %5924, 31
  %5937 = trunc i32 %5936 to i8
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5937, i8* %5938, align 1
  %5939 = lshr i32 %5924, 31
  %5940 = xor i32 %5936, %5939
  %5941 = add i32 %5940, %5939
  %5942 = icmp eq i32 %5941, 2
  %5943 = zext i1 %5942 to i8
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5943, i8* %5944, align 1
  store %struct.Memory* %loadMem_44f065, %struct.Memory** %MEMORY
  %loadMem_44f069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5946 = getelementptr inbounds %struct.GPR, %struct.GPR* %5945, i32 0, i32 33
  %5947 = getelementptr inbounds %struct.Reg, %struct.Reg* %5946, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %5947 to i64*
  %5948 = load i64, i64* %PC.i498
  %5949 = add i64 %5948, 21
  %5950 = load i64, i64* %PC.i498
  %5951 = add i64 %5950, 6
  %5952 = load i64, i64* %PC.i498
  %5953 = add i64 %5952, 6
  store i64 %5953, i64* %PC.i498
  %5954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5955 = load i8, i8* %5954, align 1
  store i8 %5955, i8* %BRANCH_TAKEN, align 1
  %5956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5957 = icmp ne i8 %5955, 0
  %5958 = select i1 %5957, i64 %5949, i64 %5951
  store i64 %5958, i64* %5956, align 8
  store %struct.Memory* %loadMem_44f069, %struct.Memory** %MEMORY
  %loadBr_44f069 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f069 = icmp eq i8 %loadBr_44f069, 1
  br i1 %cmpBr_44f069, label %block_.L_44f07e, label %block_44f06f

block_44f06f:                                     ; preds = %block_.L_44f04a
  %loadMem_44f06f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5960 = getelementptr inbounds %struct.GPR, %struct.GPR* %5959, i32 0, i32 33
  %5961 = getelementptr inbounds %struct.Reg, %struct.Reg* %5960, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %5961 to i64*
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5963 = getelementptr inbounds %struct.GPR, %struct.GPR* %5962, i32 0, i32 1
  %5964 = getelementptr inbounds %struct.Reg, %struct.Reg* %5963, i32 0, i32 0
  %RAX.i496 = bitcast %union.anon* %5964 to i64*
  %5965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5966 = getelementptr inbounds %struct.GPR, %struct.GPR* %5965, i32 0, i32 15
  %5967 = getelementptr inbounds %struct.Reg, %struct.Reg* %5966, i32 0, i32 0
  %RBP.i497 = bitcast %union.anon* %5967 to i64*
  %5968 = load i64, i64* %RBP.i497
  %5969 = sub i64 %5968, 436
  %5970 = load i64, i64* %PC.i495
  %5971 = add i64 %5970, 7
  store i64 %5971, i64* %PC.i495
  %5972 = inttoptr i64 %5969 to i32*
  %5973 = load i32, i32* %5972
  %5974 = sext i32 %5973 to i64
  store i64 %5974, i64* %RAX.i496, align 8
  store %struct.Memory* %loadMem_44f06f, %struct.Memory** %MEMORY
  %loadMem_44f076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5976 = getelementptr inbounds %struct.GPR, %struct.GPR* %5975, i32 0, i32 33
  %5977 = getelementptr inbounds %struct.Reg, %struct.Reg* %5976, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %5977 to i64*
  %5978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5979 = getelementptr inbounds %struct.GPR, %struct.GPR* %5978, i32 0, i32 1
  %5980 = getelementptr inbounds %struct.Reg, %struct.Reg* %5979, i32 0, i32 0
  %RAX.i493 = bitcast %union.anon* %5980 to i64*
  %5981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5982 = getelementptr inbounds %struct.GPR, %struct.GPR* %5981, i32 0, i32 15
  %5983 = getelementptr inbounds %struct.Reg, %struct.Reg* %5982, i32 0, i32 0
  %RBP.i494 = bitcast %union.anon* %5983 to i64*
  %5984 = load i64, i64* %RBP.i494
  %5985 = load i64, i64* %RAX.i493
  %5986 = add i64 %5984, -432
  %5987 = add i64 %5986, %5985
  %5988 = load i64, i64* %PC.i492
  %5989 = add i64 %5988, 8
  store i64 %5989, i64* %PC.i492
  %5990 = inttoptr i64 %5987 to i8*
  store i8 0, i8* %5990
  store %struct.Memory* %loadMem_44f076, %struct.Memory** %MEMORY
  br label %block_.L_44f07e

block_.L_44f07e:                                  ; preds = %block_44f06f, %block_.L_44f04a, %block_44f032
  %loadMem_44f07e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5992 = getelementptr inbounds %struct.GPR, %struct.GPR* %5991, i32 0, i32 33
  %5993 = getelementptr inbounds %struct.Reg, %struct.Reg* %5992, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %5993 to i64*
  %5994 = load i64, i64* %PC.i491
  %5995 = add i64 %5994, 5
  %5996 = load i64, i64* %PC.i491
  %5997 = add i64 %5996, 5
  store i64 %5997, i64* %PC.i491
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5995, i64* %5998, align 8
  store %struct.Memory* %loadMem_44f07e, %struct.Memory** %MEMORY
  br label %block_.L_44f083

block_.L_44f083:                                  ; preds = %block_.L_44f07e, %block_44f015
  %loadMem_44f083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6000 = getelementptr inbounds %struct.GPR, %struct.GPR* %5999, i32 0, i32 33
  %6001 = getelementptr inbounds %struct.Reg, %struct.Reg* %6000, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %6001 to i64*
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6003 = getelementptr inbounds %struct.GPR, %struct.GPR* %6002, i32 0, i32 1
  %6004 = getelementptr inbounds %struct.Reg, %struct.Reg* %6003, i32 0, i32 0
  %RAX.i489 = bitcast %union.anon* %6004 to i64*
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6006 = getelementptr inbounds %struct.GPR, %struct.GPR* %6005, i32 0, i32 15
  %6007 = getelementptr inbounds %struct.Reg, %struct.Reg* %6006, i32 0, i32 0
  %RBP.i490 = bitcast %union.anon* %6007 to i64*
  %6008 = load i64, i64* %RBP.i490
  %6009 = sub i64 %6008, 436
  %6010 = load i64, i64* %PC.i488
  %6011 = add i64 %6010, 6
  store i64 %6011, i64* %PC.i488
  %6012 = inttoptr i64 %6009 to i32*
  %6013 = load i32, i32* %6012
  %6014 = zext i32 %6013 to i64
  store i64 %6014, i64* %RAX.i489, align 8
  store %struct.Memory* %loadMem_44f083, %struct.Memory** %MEMORY
  %loadMem_44f089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6016 = getelementptr inbounds %struct.GPR, %struct.GPR* %6015, i32 0, i32 33
  %6017 = getelementptr inbounds %struct.Reg, %struct.Reg* %6016, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %6017 to i64*
  %6018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6019 = getelementptr inbounds %struct.GPR, %struct.GPR* %6018, i32 0, i32 1
  %6020 = getelementptr inbounds %struct.Reg, %struct.Reg* %6019, i32 0, i32 0
  %RAX.i487 = bitcast %union.anon* %6020 to i64*
  %6021 = load i64, i64* %RAX.i487
  %6022 = load i64, i64* %PC.i486
  %6023 = add i64 %6022, 3
  store i64 %6023, i64* %PC.i486
  %6024 = trunc i64 %6021 to i32
  %6025 = add i32 1, %6024
  %6026 = zext i32 %6025 to i64
  store i64 %6026, i64* %RAX.i487, align 8
  %6027 = icmp ult i32 %6025, %6024
  %6028 = icmp ult i32 %6025, 1
  %6029 = or i1 %6027, %6028
  %6030 = zext i1 %6029 to i8
  %6031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6030, i8* %6031, align 1
  %6032 = and i32 %6025, 255
  %6033 = call i32 @llvm.ctpop.i32(i32 %6032)
  %6034 = trunc i32 %6033 to i8
  %6035 = and i8 %6034, 1
  %6036 = xor i8 %6035, 1
  %6037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6036, i8* %6037, align 1
  %6038 = xor i64 1, %6021
  %6039 = trunc i64 %6038 to i32
  %6040 = xor i32 %6039, %6025
  %6041 = lshr i32 %6040, 4
  %6042 = trunc i32 %6041 to i8
  %6043 = and i8 %6042, 1
  %6044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6043, i8* %6044, align 1
  %6045 = icmp eq i32 %6025, 0
  %6046 = zext i1 %6045 to i8
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6046, i8* %6047, align 1
  %6048 = lshr i32 %6025, 31
  %6049 = trunc i32 %6048 to i8
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6049, i8* %6050, align 1
  %6051 = lshr i32 %6024, 31
  %6052 = xor i32 %6048, %6051
  %6053 = add i32 %6052, %6048
  %6054 = icmp eq i32 %6053, 2
  %6055 = zext i1 %6054 to i8
  %6056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6055, i8* %6056, align 1
  store %struct.Memory* %loadMem_44f089, %struct.Memory** %MEMORY
  %loadMem_44f08c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6058 = getelementptr inbounds %struct.GPR, %struct.GPR* %6057, i32 0, i32 33
  %6059 = getelementptr inbounds %struct.Reg, %struct.Reg* %6058, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %6059 to i64*
  %6060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6061 = getelementptr inbounds %struct.GPR, %struct.GPR* %6060, i32 0, i32 1
  %6062 = getelementptr inbounds %struct.Reg, %struct.Reg* %6061, i32 0, i32 0
  %EAX.i484 = bitcast %union.anon* %6062 to i32*
  %6063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6064 = getelementptr inbounds %struct.GPR, %struct.GPR* %6063, i32 0, i32 15
  %6065 = getelementptr inbounds %struct.Reg, %struct.Reg* %6064, i32 0, i32 0
  %RBP.i485 = bitcast %union.anon* %6065 to i64*
  %6066 = load i64, i64* %RBP.i485
  %6067 = sub i64 %6066, 436
  %6068 = load i32, i32* %EAX.i484
  %6069 = zext i32 %6068 to i64
  %6070 = load i64, i64* %PC.i483
  %6071 = add i64 %6070, 6
  store i64 %6071, i64* %PC.i483
  %6072 = inttoptr i64 %6067 to i32*
  store i32 %6068, i32* %6072
  store %struct.Memory* %loadMem_44f08c, %struct.Memory** %MEMORY
  %loadMem_44f092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6074 = getelementptr inbounds %struct.GPR, %struct.GPR* %6073, i32 0, i32 33
  %6075 = getelementptr inbounds %struct.Reg, %struct.Reg* %6074, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %6075 to i64*
  %6076 = load i64, i64* %PC.i482
  %6077 = add i64 %6076, -165
  %6078 = load i64, i64* %PC.i482
  %6079 = add i64 %6078, 5
  store i64 %6079, i64* %PC.i482
  %6080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6077, i64* %6080, align 8
  store %struct.Memory* %loadMem_44f092, %struct.Memory** %MEMORY
  br label %block_.L_44efed

block_.L_44f097:                                  ; preds = %block_.L_44efed
  %loadMem_44f097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6082 = getelementptr inbounds %struct.GPR, %struct.GPR* %6081, i32 0, i32 33
  %6083 = getelementptr inbounds %struct.Reg, %struct.Reg* %6082, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %6083 to i64*
  %6084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6085 = getelementptr inbounds %struct.GPR, %struct.GPR* %6084, i32 0, i32 15
  %6086 = getelementptr inbounds %struct.Reg, %struct.Reg* %6085, i32 0, i32 0
  %RBP.i481 = bitcast %union.anon* %6086 to i64*
  %6087 = load i64, i64* %RBP.i481
  %6088 = sub i64 %6087, 436
  %6089 = load i64, i64* %PC.i480
  %6090 = add i64 %6089, 10
  store i64 %6090, i64* %PC.i480
  %6091 = inttoptr i64 %6088 to i32*
  store i32 21, i32* %6091
  store %struct.Memory* %loadMem_44f097, %struct.Memory** %MEMORY
  br label %block_.L_44f0a1

block_.L_44f0a1:                                  ; preds = %block_.L_44f1fa, %block_.L_44f097
  %loadMem_44f0a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6093 = getelementptr inbounds %struct.GPR, %struct.GPR* %6092, i32 0, i32 33
  %6094 = getelementptr inbounds %struct.Reg, %struct.Reg* %6093, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %6094 to i64*
  %6095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6096 = getelementptr inbounds %struct.GPR, %struct.GPR* %6095, i32 0, i32 15
  %6097 = getelementptr inbounds %struct.Reg, %struct.Reg* %6096, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %6097 to i64*
  %6098 = load i64, i64* %RBP.i479
  %6099 = sub i64 %6098, 436
  %6100 = load i64, i64* %PC.i478
  %6101 = add i64 %6100, 10
  store i64 %6101, i64* %PC.i478
  %6102 = inttoptr i64 %6099 to i32*
  %6103 = load i32, i32* %6102
  %6104 = sub i32 %6103, 400
  %6105 = icmp ult i32 %6103, 400
  %6106 = zext i1 %6105 to i8
  %6107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6106, i8* %6107, align 1
  %6108 = and i32 %6104, 255
  %6109 = call i32 @llvm.ctpop.i32(i32 %6108)
  %6110 = trunc i32 %6109 to i8
  %6111 = and i8 %6110, 1
  %6112 = xor i8 %6111, 1
  %6113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6112, i8* %6113, align 1
  %6114 = xor i32 %6103, 400
  %6115 = xor i32 %6114, %6104
  %6116 = lshr i32 %6115, 4
  %6117 = trunc i32 %6116 to i8
  %6118 = and i8 %6117, 1
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6118, i8* %6119, align 1
  %6120 = icmp eq i32 %6104, 0
  %6121 = zext i1 %6120 to i8
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6121, i8* %6122, align 1
  %6123 = lshr i32 %6104, 31
  %6124 = trunc i32 %6123 to i8
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6124, i8* %6125, align 1
  %6126 = lshr i32 %6103, 31
  %6127 = xor i32 %6123, %6126
  %6128 = add i32 %6127, %6126
  %6129 = icmp eq i32 %6128, 2
  %6130 = zext i1 %6129 to i8
  %6131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6130, i8* %6131, align 1
  store %struct.Memory* %loadMem_44f0a1, %struct.Memory** %MEMORY
  %loadMem_44f0ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6133 = getelementptr inbounds %struct.GPR, %struct.GPR* %6132, i32 0, i32 33
  %6134 = getelementptr inbounds %struct.Reg, %struct.Reg* %6133, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %6134 to i64*
  %6135 = load i64, i64* %PC.i477
  %6136 = add i64 %6135, 355
  %6137 = load i64, i64* %PC.i477
  %6138 = add i64 %6137, 6
  %6139 = load i64, i64* %PC.i477
  %6140 = add i64 %6139, 6
  store i64 %6140, i64* %PC.i477
  %6141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6142 = load i8, i8* %6141, align 1
  %6143 = icmp ne i8 %6142, 0
  %6144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6145 = load i8, i8* %6144, align 1
  %6146 = icmp ne i8 %6145, 0
  %6147 = xor i1 %6143, %6146
  %6148 = xor i1 %6147, true
  %6149 = zext i1 %6148 to i8
  store i8 %6149, i8* %BRANCH_TAKEN, align 1
  %6150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6151 = select i1 %6147, i64 %6138, i64 %6136
  store i64 %6151, i64* %6150, align 8
  store %struct.Memory* %loadMem_44f0ab, %struct.Memory** %MEMORY
  %loadBr_44f0ab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f0ab = icmp eq i8 %loadBr_44f0ab, 1
  br i1 %cmpBr_44f0ab, label %block_.L_44f20e, label %block_44f0b1

block_44f0b1:                                     ; preds = %block_.L_44f0a1
  %loadMem_44f0b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6153 = getelementptr inbounds %struct.GPR, %struct.GPR* %6152, i32 0, i32 33
  %6154 = getelementptr inbounds %struct.Reg, %struct.Reg* %6153, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %6154 to i64*
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6156 = getelementptr inbounds %struct.GPR, %struct.GPR* %6155, i32 0, i32 1
  %6157 = getelementptr inbounds %struct.Reg, %struct.Reg* %6156, i32 0, i32 0
  %RAX.i475 = bitcast %union.anon* %6157 to i64*
  %6158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6159 = getelementptr inbounds %struct.GPR, %struct.GPR* %6158, i32 0, i32 15
  %6160 = getelementptr inbounds %struct.Reg, %struct.Reg* %6159, i32 0, i32 0
  %RBP.i476 = bitcast %union.anon* %6160 to i64*
  %6161 = load i64, i64* %RBP.i476
  %6162 = sub i64 %6161, 436
  %6163 = load i64, i64* %PC.i474
  %6164 = add i64 %6163, 7
  store i64 %6164, i64* %PC.i474
  %6165 = inttoptr i64 %6162 to i32*
  %6166 = load i32, i32* %6165
  %6167 = sext i32 %6166 to i64
  store i64 %6167, i64* %RAX.i475, align 8
  store %struct.Memory* %loadMem_44f0b1, %struct.Memory** %MEMORY
  %loadMem_44f0b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6169 = getelementptr inbounds %struct.GPR, %struct.GPR* %6168, i32 0, i32 33
  %6170 = getelementptr inbounds %struct.Reg, %struct.Reg* %6169, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %6170 to i64*
  %6171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6172 = getelementptr inbounds %struct.GPR, %struct.GPR* %6171, i32 0, i32 1
  %6173 = getelementptr inbounds %struct.Reg, %struct.Reg* %6172, i32 0, i32 0
  %RAX.i472 = bitcast %union.anon* %6173 to i64*
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6175 = getelementptr inbounds %struct.GPR, %struct.GPR* %6174, i32 0, i32 5
  %6176 = getelementptr inbounds %struct.Reg, %struct.Reg* %6175, i32 0, i32 0
  %RCX.i473 = bitcast %union.anon* %6176 to i64*
  %6177 = load i64, i64* %RAX.i472
  %6178 = add i64 %6177, 12099168
  %6179 = load i64, i64* %PC.i471
  %6180 = add i64 %6179, 8
  store i64 %6180, i64* %PC.i471
  %6181 = inttoptr i64 %6178 to i8*
  %6182 = load i8, i8* %6181
  %6183 = zext i8 %6182 to i64
  store i64 %6183, i64* %RCX.i473, align 8
  store %struct.Memory* %loadMem_44f0b8, %struct.Memory** %MEMORY
  %loadMem_44f0c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6185 = getelementptr inbounds %struct.GPR, %struct.GPR* %6184, i32 0, i32 33
  %6186 = getelementptr inbounds %struct.Reg, %struct.Reg* %6185, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %6186 to i64*
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6188 = getelementptr inbounds %struct.GPR, %struct.GPR* %6187, i32 0, i32 5
  %6189 = getelementptr inbounds %struct.Reg, %struct.Reg* %6188, i32 0, i32 0
  %ECX.i470 = bitcast %union.anon* %6189 to i32*
  %6190 = load i32, i32* %ECX.i470
  %6191 = zext i32 %6190 to i64
  %6192 = load i64, i64* %PC.i469
  %6193 = add i64 %6192, 3
  store i64 %6193, i64* %PC.i469
  %6194 = sub i32 %6190, 1
  %6195 = icmp ult i32 %6190, 1
  %6196 = zext i1 %6195 to i8
  %6197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6196, i8* %6197, align 1
  %6198 = and i32 %6194, 255
  %6199 = call i32 @llvm.ctpop.i32(i32 %6198)
  %6200 = trunc i32 %6199 to i8
  %6201 = and i8 %6200, 1
  %6202 = xor i8 %6201, 1
  %6203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6202, i8* %6203, align 1
  %6204 = xor i64 1, %6191
  %6205 = trunc i64 %6204 to i32
  %6206 = xor i32 %6205, %6194
  %6207 = lshr i32 %6206, 4
  %6208 = trunc i32 %6207 to i8
  %6209 = and i8 %6208, 1
  %6210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6209, i8* %6210, align 1
  %6211 = icmp eq i32 %6194, 0
  %6212 = zext i1 %6211 to i8
  %6213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6212, i8* %6213, align 1
  %6214 = lshr i32 %6194, 31
  %6215 = trunc i32 %6214 to i8
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6215, i8* %6216, align 1
  %6217 = lshr i32 %6190, 31
  %6218 = xor i32 %6214, %6217
  %6219 = add i32 %6218, %6217
  %6220 = icmp eq i32 %6219, 2
  %6221 = zext i1 %6220 to i8
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6221, i8* %6222, align 1
  store %struct.Memory* %loadMem_44f0c0, %struct.Memory** %MEMORY
  %loadMem_44f0c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6224 = getelementptr inbounds %struct.GPR, %struct.GPR* %6223, i32 0, i32 33
  %6225 = getelementptr inbounds %struct.Reg, %struct.Reg* %6224, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %6225 to i64*
  %6226 = load i64, i64* %PC.i468
  %6227 = add i64 %6226, 54
  %6228 = load i64, i64* %PC.i468
  %6229 = add i64 %6228, 6
  %6230 = load i64, i64* %PC.i468
  %6231 = add i64 %6230, 6
  store i64 %6231, i64* %PC.i468
  %6232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6233 = load i8, i8* %6232, align 1
  store i8 %6233, i8* %BRANCH_TAKEN, align 1
  %6234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6235 = icmp ne i8 %6233, 0
  %6236 = select i1 %6235, i64 %6227, i64 %6229
  store i64 %6236, i64* %6234, align 8
  store %struct.Memory* %loadMem_44f0c3, %struct.Memory** %MEMORY
  %loadBr_44f0c3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f0c3 = icmp eq i8 %loadBr_44f0c3, 1
  br i1 %cmpBr_44f0c3, label %block_.L_44f0f9, label %block_44f0c9

block_44f0c9:                                     ; preds = %block_44f0b1
  %loadMem_44f0c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6238 = getelementptr inbounds %struct.GPR, %struct.GPR* %6237, i32 0, i32 33
  %6239 = getelementptr inbounds %struct.Reg, %struct.Reg* %6238, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %6239 to i64*
  %6240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6241 = getelementptr inbounds %struct.GPR, %struct.GPR* %6240, i32 0, i32 1
  %6242 = getelementptr inbounds %struct.Reg, %struct.Reg* %6241, i32 0, i32 0
  %RAX.i466 = bitcast %union.anon* %6242 to i64*
  %6243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6244 = getelementptr inbounds %struct.GPR, %struct.GPR* %6243, i32 0, i32 15
  %6245 = getelementptr inbounds %struct.Reg, %struct.Reg* %6244, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %6245 to i64*
  %6246 = load i64, i64* %RBP.i467
  %6247 = sub i64 %6246, 436
  %6248 = load i64, i64* %PC.i465
  %6249 = add i64 %6248, 7
  store i64 %6249, i64* %PC.i465
  %6250 = inttoptr i64 %6247 to i32*
  %6251 = load i32, i32* %6250
  %6252 = sext i32 %6251 to i64
  store i64 %6252, i64* %RAX.i466, align 8
  store %struct.Memory* %loadMem_44f0c9, %struct.Memory** %MEMORY
  %loadMem_44f0d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6254 = getelementptr inbounds %struct.GPR, %struct.GPR* %6253, i32 0, i32 33
  %6255 = getelementptr inbounds %struct.Reg, %struct.Reg* %6254, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %6255 to i64*
  %6256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6257 = getelementptr inbounds %struct.GPR, %struct.GPR* %6256, i32 0, i32 1
  %6258 = getelementptr inbounds %struct.Reg, %struct.Reg* %6257, i32 0, i32 0
  %RAX.i463 = bitcast %union.anon* %6258 to i64*
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6260 = getelementptr inbounds %struct.GPR, %struct.GPR* %6259, i32 0, i32 5
  %6261 = getelementptr inbounds %struct.Reg, %struct.Reg* %6260, i32 0, i32 0
  %RCX.i464 = bitcast %union.anon* %6261 to i64*
  %6262 = load i64, i64* %RAX.i463
  %6263 = add i64 %6262, 12099168
  %6264 = load i64, i64* %PC.i462
  %6265 = add i64 %6264, 8
  store i64 %6265, i64* %PC.i462
  %6266 = inttoptr i64 %6263 to i8*
  %6267 = load i8, i8* %6266
  %6268 = zext i8 %6267 to i64
  store i64 %6268, i64* %RCX.i464, align 8
  store %struct.Memory* %loadMem_44f0d0, %struct.Memory** %MEMORY
  %loadMem_44f0d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6270 = getelementptr inbounds %struct.GPR, %struct.GPR* %6269, i32 0, i32 33
  %6271 = getelementptr inbounds %struct.Reg, %struct.Reg* %6270, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %6271 to i64*
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6273 = getelementptr inbounds %struct.GPR, %struct.GPR* %6272, i32 0, i32 5
  %6274 = getelementptr inbounds %struct.Reg, %struct.Reg* %6273, i32 0, i32 0
  %ECX.i461 = bitcast %union.anon* %6274 to i32*
  %6275 = load i32, i32* %ECX.i461
  %6276 = zext i32 %6275 to i64
  %6277 = load i64, i64* %PC.i460
  %6278 = add i64 %6277, 3
  store i64 %6278, i64* %PC.i460
  %6279 = sub i32 %6275, 2
  %6280 = icmp ult i32 %6275, 2
  %6281 = zext i1 %6280 to i8
  %6282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6281, i8* %6282, align 1
  %6283 = and i32 %6279, 255
  %6284 = call i32 @llvm.ctpop.i32(i32 %6283)
  %6285 = trunc i32 %6284 to i8
  %6286 = and i8 %6285, 1
  %6287 = xor i8 %6286, 1
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6287, i8* %6288, align 1
  %6289 = xor i64 2, %6276
  %6290 = trunc i64 %6289 to i32
  %6291 = xor i32 %6290, %6279
  %6292 = lshr i32 %6291, 4
  %6293 = trunc i32 %6292 to i8
  %6294 = and i8 %6293, 1
  %6295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6294, i8* %6295, align 1
  %6296 = icmp eq i32 %6279, 0
  %6297 = zext i1 %6296 to i8
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6297, i8* %6298, align 1
  %6299 = lshr i32 %6279, 31
  %6300 = trunc i32 %6299 to i8
  %6301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6300, i8* %6301, align 1
  %6302 = lshr i32 %6275, 31
  %6303 = xor i32 %6299, %6302
  %6304 = add i32 %6303, %6302
  %6305 = icmp eq i32 %6304, 2
  %6306 = zext i1 %6305 to i8
  %6307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6306, i8* %6307, align 1
  store %struct.Memory* %loadMem_44f0d8, %struct.Memory** %MEMORY
  %loadMem_44f0db = load %struct.Memory*, %struct.Memory** %MEMORY
  %6308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6309 = getelementptr inbounds %struct.GPR, %struct.GPR* %6308, i32 0, i32 33
  %6310 = getelementptr inbounds %struct.Reg, %struct.Reg* %6309, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %6310 to i64*
  %6311 = load i64, i64* %PC.i459
  %6312 = add i64 %6311, 30
  %6313 = load i64, i64* %PC.i459
  %6314 = add i64 %6313, 6
  %6315 = load i64, i64* %PC.i459
  %6316 = add i64 %6315, 6
  store i64 %6316, i64* %PC.i459
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6318 = load i8, i8* %6317, align 1
  store i8 %6318, i8* %BRANCH_TAKEN, align 1
  %6319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6320 = icmp ne i8 %6318, 0
  %6321 = select i1 %6320, i64 %6312, i64 %6314
  store i64 %6321, i64* %6319, align 8
  store %struct.Memory* %loadMem_44f0db, %struct.Memory** %MEMORY
  %loadBr_44f0db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f0db = icmp eq i8 %loadBr_44f0db, 1
  br i1 %cmpBr_44f0db, label %block_.L_44f0f9, label %block_44f0e1

block_44f0e1:                                     ; preds = %block_44f0c9
  %loadMem_44f0e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6323 = getelementptr inbounds %struct.GPR, %struct.GPR* %6322, i32 0, i32 33
  %6324 = getelementptr inbounds %struct.Reg, %struct.Reg* %6323, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %6324 to i64*
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6326 = getelementptr inbounds %struct.GPR, %struct.GPR* %6325, i32 0, i32 1
  %6327 = getelementptr inbounds %struct.Reg, %struct.Reg* %6326, i32 0, i32 0
  %RAX.i457 = bitcast %union.anon* %6327 to i64*
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6329 = getelementptr inbounds %struct.GPR, %struct.GPR* %6328, i32 0, i32 15
  %6330 = getelementptr inbounds %struct.Reg, %struct.Reg* %6329, i32 0, i32 0
  %RBP.i458 = bitcast %union.anon* %6330 to i64*
  %6331 = load i64, i64* %RBP.i458
  %6332 = sub i64 %6331, 436
  %6333 = load i64, i64* %PC.i456
  %6334 = add i64 %6333, 7
  store i64 %6334, i64* %PC.i456
  %6335 = inttoptr i64 %6332 to i32*
  %6336 = load i32, i32* %6335
  %6337 = sext i32 %6336 to i64
  store i64 %6337, i64* %RAX.i457, align 8
  store %struct.Memory* %loadMem_44f0e1, %struct.Memory** %MEMORY
  %loadMem_44f0e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6339 = getelementptr inbounds %struct.GPR, %struct.GPR* %6338, i32 0, i32 33
  %6340 = getelementptr inbounds %struct.Reg, %struct.Reg* %6339, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %6340 to i64*
  %6341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6342 = getelementptr inbounds %struct.GPR, %struct.GPR* %6341, i32 0, i32 1
  %6343 = getelementptr inbounds %struct.Reg, %struct.Reg* %6342, i32 0, i32 0
  %RAX.i453 = bitcast %union.anon* %6343 to i64*
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6345 = getelementptr inbounds %struct.GPR, %struct.GPR* %6344, i32 0, i32 5
  %6346 = getelementptr inbounds %struct.Reg, %struct.Reg* %6345, i32 0, i32 0
  %RCX.i454 = bitcast %union.anon* %6346 to i64*
  %6347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6348 = getelementptr inbounds %struct.GPR, %struct.GPR* %6347, i32 0, i32 15
  %6349 = getelementptr inbounds %struct.Reg, %struct.Reg* %6348, i32 0, i32 0
  %RBP.i455 = bitcast %union.anon* %6349 to i64*
  %6350 = load i64, i64* %RBP.i455
  %6351 = load i64, i64* %RAX.i453
  %6352 = add i64 %6350, -432
  %6353 = add i64 %6352, %6351
  %6354 = load i64, i64* %PC.i452
  %6355 = add i64 %6354, 8
  store i64 %6355, i64* %PC.i452
  %6356 = inttoptr i64 %6353 to i8*
  %6357 = load i8, i8* %6356
  %6358 = sext i8 %6357 to i64
  %6359 = and i64 %6358, 4294967295
  store i64 %6359, i64* %RCX.i454, align 8
  store %struct.Memory* %loadMem_44f0e8, %struct.Memory** %MEMORY
  %loadMem_44f0f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6361 = getelementptr inbounds %struct.GPR, %struct.GPR* %6360, i32 0, i32 33
  %6362 = getelementptr inbounds %struct.Reg, %struct.Reg* %6361, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %6362 to i64*
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6364 = getelementptr inbounds %struct.GPR, %struct.GPR* %6363, i32 0, i32 5
  %6365 = getelementptr inbounds %struct.Reg, %struct.Reg* %6364, i32 0, i32 0
  %ECX.i451 = bitcast %union.anon* %6365 to i32*
  %6366 = load i32, i32* %ECX.i451
  %6367 = zext i32 %6366 to i64
  %6368 = load i64, i64* %PC.i450
  %6369 = add i64 %6368, 3
  store i64 %6369, i64* %PC.i450
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6370, align 1
  %6371 = and i32 %6366, 255
  %6372 = call i32 @llvm.ctpop.i32(i32 %6371)
  %6373 = trunc i32 %6372 to i8
  %6374 = and i8 %6373, 1
  %6375 = xor i8 %6374, 1
  %6376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6375, i8* %6376, align 1
  %6377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6377, align 1
  %6378 = icmp eq i32 %6366, 0
  %6379 = zext i1 %6378 to i8
  %6380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6379, i8* %6380, align 1
  %6381 = lshr i32 %6366, 31
  %6382 = trunc i32 %6381 to i8
  %6383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6382, i8* %6383, align 1
  %6384 = lshr i32 %6366, 31
  %6385 = xor i32 %6381, %6384
  %6386 = add i32 %6385, %6384
  %6387 = icmp eq i32 %6386, 2
  %6388 = zext i1 %6387 to i8
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6388, i8* %6389, align 1
  store %struct.Memory* %loadMem_44f0f0, %struct.Memory** %MEMORY
  %loadMem_44f0f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6391 = getelementptr inbounds %struct.GPR, %struct.GPR* %6390, i32 0, i32 33
  %6392 = getelementptr inbounds %struct.Reg, %struct.Reg* %6391, i32 0, i32 0
  %PC.i449 = bitcast %union.anon* %6392 to i64*
  %6393 = load i64, i64* %PC.i449
  %6394 = add i64 %6393, 11
  %6395 = load i64, i64* %PC.i449
  %6396 = add i64 %6395, 6
  %6397 = load i64, i64* %PC.i449
  %6398 = add i64 %6397, 6
  store i64 %6398, i64* %PC.i449
  %6399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6400 = load i8, i8* %6399, align 1
  store i8 %6400, i8* %BRANCH_TAKEN, align 1
  %6401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6402 = icmp ne i8 %6400, 0
  %6403 = select i1 %6402, i64 %6394, i64 %6396
  store i64 %6403, i64* %6401, align 8
  store %struct.Memory* %loadMem_44f0f3, %struct.Memory** %MEMORY
  %loadBr_44f0f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f0f3 = icmp eq i8 %loadBr_44f0f3, 1
  br i1 %cmpBr_44f0f3, label %block_.L_44f0fe, label %block_.L_44f0f9

block_.L_44f0f9:                                  ; preds = %block_44f0e1, %block_44f0c9, %block_44f0b1
  %loadMem_44f0f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6405 = getelementptr inbounds %struct.GPR, %struct.GPR* %6404, i32 0, i32 33
  %6406 = getelementptr inbounds %struct.Reg, %struct.Reg* %6405, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %6406 to i64*
  %6407 = load i64, i64* %PC.i448
  %6408 = add i64 %6407, 257
  %6409 = load i64, i64* %PC.i448
  %6410 = add i64 %6409, 5
  store i64 %6410, i64* %PC.i448
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6408, i64* %6411, align 8
  store %struct.Memory* %loadMem_44f0f9, %struct.Memory** %MEMORY
  br label %block_.L_44f1fa

block_.L_44f0fe:                                  ; preds = %block_44f0e1
  %loadMem_44f0fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6413 = getelementptr inbounds %struct.GPR, %struct.GPR* %6412, i32 0, i32 33
  %6414 = getelementptr inbounds %struct.Reg, %struct.Reg* %6413, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %6414 to i64*
  %6415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6416 = getelementptr inbounds %struct.GPR, %struct.GPR* %6415, i32 0, i32 1
  %6417 = getelementptr inbounds %struct.Reg, %struct.Reg* %6416, i32 0, i32 0
  %RAX.i446 = bitcast %union.anon* %6417 to i64*
  %6418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6419 = getelementptr inbounds %struct.GPR, %struct.GPR* %6418, i32 0, i32 15
  %6420 = getelementptr inbounds %struct.Reg, %struct.Reg* %6419, i32 0, i32 0
  %RBP.i447 = bitcast %union.anon* %6420 to i64*
  %6421 = load i64, i64* %RBP.i447
  %6422 = sub i64 %6421, 436
  %6423 = load i64, i64* %PC.i445
  %6424 = add i64 %6423, 6
  store i64 %6424, i64* %PC.i445
  %6425 = inttoptr i64 %6422 to i32*
  %6426 = load i32, i32* %6425
  %6427 = zext i32 %6426 to i64
  store i64 %6427, i64* %RAX.i446, align 8
  store %struct.Memory* %loadMem_44f0fe, %struct.Memory** %MEMORY
  %loadMem_44f104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6429 = getelementptr inbounds %struct.GPR, %struct.GPR* %6428, i32 0, i32 33
  %6430 = getelementptr inbounds %struct.Reg, %struct.Reg* %6429, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %6430 to i64*
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6432 = getelementptr inbounds %struct.GPR, %struct.GPR* %6431, i32 0, i32 1
  %6433 = getelementptr inbounds %struct.Reg, %struct.Reg* %6432, i32 0, i32 0
  %RAX.i444 = bitcast %union.anon* %6433 to i64*
  %6434 = load i64, i64* %RAX.i444
  %6435 = load i64, i64* %PC.i443
  %6436 = add i64 %6435, 3
  store i64 %6436, i64* %PC.i443
  %6437 = trunc i64 %6434 to i32
  %6438 = add i32 20, %6437
  %6439 = zext i32 %6438 to i64
  store i64 %6439, i64* %RAX.i444, align 8
  %6440 = icmp ult i32 %6438, %6437
  %6441 = icmp ult i32 %6438, 20
  %6442 = or i1 %6440, %6441
  %6443 = zext i1 %6442 to i8
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6443, i8* %6444, align 1
  %6445 = and i32 %6438, 255
  %6446 = call i32 @llvm.ctpop.i32(i32 %6445)
  %6447 = trunc i32 %6446 to i8
  %6448 = and i8 %6447, 1
  %6449 = xor i8 %6448, 1
  %6450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6449, i8* %6450, align 1
  %6451 = xor i64 20, %6434
  %6452 = trunc i64 %6451 to i32
  %6453 = xor i32 %6452, %6438
  %6454 = lshr i32 %6453, 4
  %6455 = trunc i32 %6454 to i8
  %6456 = and i8 %6455, 1
  %6457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6456, i8* %6457, align 1
  %6458 = icmp eq i32 %6438, 0
  %6459 = zext i1 %6458 to i8
  %6460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6459, i8* %6460, align 1
  %6461 = lshr i32 %6438, 31
  %6462 = trunc i32 %6461 to i8
  %6463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6462, i8* %6463, align 1
  %6464 = lshr i32 %6437, 31
  %6465 = xor i32 %6461, %6464
  %6466 = add i32 %6465, %6461
  %6467 = icmp eq i32 %6466, 2
  %6468 = zext i1 %6467 to i8
  %6469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6468, i8* %6469, align 1
  store %struct.Memory* %loadMem_44f104, %struct.Memory** %MEMORY
  %loadMem_44f107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6471 = getelementptr inbounds %struct.GPR, %struct.GPR* %6470, i32 0, i32 33
  %6472 = getelementptr inbounds %struct.Reg, %struct.Reg* %6471, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %6472 to i64*
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6474 = getelementptr inbounds %struct.GPR, %struct.GPR* %6473, i32 0, i32 1
  %6475 = getelementptr inbounds %struct.Reg, %struct.Reg* %6474, i32 0, i32 0
  %EAX.i441 = bitcast %union.anon* %6475 to i32*
  %6476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6477 = getelementptr inbounds %struct.GPR, %struct.GPR* %6476, i32 0, i32 5
  %6478 = getelementptr inbounds %struct.Reg, %struct.Reg* %6477, i32 0, i32 0
  %RCX.i442 = bitcast %union.anon* %6478 to i64*
  %6479 = load i32, i32* %EAX.i441
  %6480 = zext i32 %6479 to i64
  %6481 = load i64, i64* %PC.i440
  %6482 = add i64 %6481, 3
  store i64 %6482, i64* %PC.i440
  %6483 = shl i64 %6480, 32
  %6484 = ashr exact i64 %6483, 32
  store i64 %6484, i64* %RCX.i442, align 8
  store %struct.Memory* %loadMem_44f107, %struct.Memory** %MEMORY
  %loadMem_44f10a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6486 = getelementptr inbounds %struct.GPR, %struct.GPR* %6485, i32 0, i32 33
  %6487 = getelementptr inbounds %struct.Reg, %struct.Reg* %6486, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %6487 to i64*
  %6488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6489 = getelementptr inbounds %struct.GPR, %struct.GPR* %6488, i32 0, i32 1
  %6490 = getelementptr inbounds %struct.Reg, %struct.Reg* %6489, i32 0, i32 0
  %RAX.i438 = bitcast %union.anon* %6490 to i64*
  %6491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6492 = getelementptr inbounds %struct.GPR, %struct.GPR* %6491, i32 0, i32 5
  %6493 = getelementptr inbounds %struct.Reg, %struct.Reg* %6492, i32 0, i32 0
  %RCX.i439 = bitcast %union.anon* %6493 to i64*
  %6494 = load i64, i64* %RCX.i439
  %6495 = add i64 %6494, 12099168
  %6496 = load i64, i64* %PC.i437
  %6497 = add i64 %6496, 8
  store i64 %6497, i64* %PC.i437
  %6498 = inttoptr i64 %6495 to i8*
  %6499 = load i8, i8* %6498
  %6500 = zext i8 %6499 to i64
  store i64 %6500, i64* %RAX.i438, align 8
  store %struct.Memory* %loadMem_44f10a, %struct.Memory** %MEMORY
  %loadMem_44f112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6502 = getelementptr inbounds %struct.GPR, %struct.GPR* %6501, i32 0, i32 33
  %6503 = getelementptr inbounds %struct.Reg, %struct.Reg* %6502, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %6503 to i64*
  %6504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6505 = getelementptr inbounds %struct.GPR, %struct.GPR* %6504, i32 0, i32 1
  %6506 = getelementptr inbounds %struct.Reg, %struct.Reg* %6505, i32 0, i32 0
  %EAX.i436 = bitcast %union.anon* %6506 to i32*
  %6507 = load i32, i32* %EAX.i436
  %6508 = zext i32 %6507 to i64
  %6509 = load i64, i64* %PC.i435
  %6510 = add i64 %6509, 3
  store i64 %6510, i64* %PC.i435
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6511, align 1
  %6512 = and i32 %6507, 255
  %6513 = call i32 @llvm.ctpop.i32(i32 %6512)
  %6514 = trunc i32 %6513 to i8
  %6515 = and i8 %6514, 1
  %6516 = xor i8 %6515, 1
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6516, i8* %6517, align 1
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6518, align 1
  %6519 = icmp eq i32 %6507, 0
  %6520 = zext i1 %6519 to i8
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6520, i8* %6521, align 1
  %6522 = lshr i32 %6507, 31
  %6523 = trunc i32 %6522 to i8
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6523, i8* %6524, align 1
  %6525 = lshr i32 %6507, 31
  %6526 = xor i32 %6522, %6525
  %6527 = add i32 %6526, %6525
  %6528 = icmp eq i32 %6527, 2
  %6529 = zext i1 %6528 to i8
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6529, i8* %6530, align 1
  store %struct.Memory* %loadMem_44f112, %struct.Memory** %MEMORY
  %loadMem_44f115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6532 = getelementptr inbounds %struct.GPR, %struct.GPR* %6531, i32 0, i32 33
  %6533 = getelementptr inbounds %struct.Reg, %struct.Reg* %6532, i32 0, i32 0
  %PC.i434 = bitcast %union.anon* %6533 to i64*
  %6534 = load i64, i64* %PC.i434
  %6535 = add i64 %6534, 35
  %6536 = load i64, i64* %PC.i434
  %6537 = add i64 %6536, 6
  %6538 = load i64, i64* %PC.i434
  %6539 = add i64 %6538, 6
  store i64 %6539, i64* %PC.i434
  %6540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6541 = load i8, i8* %6540, align 1
  %6542 = icmp eq i8 %6541, 0
  %6543 = zext i1 %6542 to i8
  store i8 %6543, i8* %BRANCH_TAKEN, align 1
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6545 = select i1 %6542, i64 %6535, i64 %6537
  store i64 %6545, i64* %6544, align 8
  store %struct.Memory* %loadMem_44f115, %struct.Memory** %MEMORY
  %loadBr_44f115 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f115 = icmp eq i8 %loadBr_44f115, 1
  br i1 %cmpBr_44f115, label %block_.L_44f138, label %block_44f11b

block_44f11b:                                     ; preds = %block_.L_44f0fe
  %loadMem_44f11b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6547 = getelementptr inbounds %struct.GPR, %struct.GPR* %6546, i32 0, i32 33
  %6548 = getelementptr inbounds %struct.Reg, %struct.Reg* %6547, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %6548 to i64*
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6550 = getelementptr inbounds %struct.GPR, %struct.GPR* %6549, i32 0, i32 1
  %6551 = getelementptr inbounds %struct.Reg, %struct.Reg* %6550, i32 0, i32 0
  %RAX.i432 = bitcast %union.anon* %6551 to i64*
  %6552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6553 = getelementptr inbounds %struct.GPR, %struct.GPR* %6552, i32 0, i32 15
  %6554 = getelementptr inbounds %struct.Reg, %struct.Reg* %6553, i32 0, i32 0
  %RBP.i433 = bitcast %union.anon* %6554 to i64*
  %6555 = load i64, i64* %RBP.i433
  %6556 = sub i64 %6555, 436
  %6557 = load i64, i64* %PC.i431
  %6558 = add i64 %6557, 6
  store i64 %6558, i64* %PC.i431
  %6559 = inttoptr i64 %6556 to i32*
  %6560 = load i32, i32* %6559
  %6561 = zext i32 %6560 to i64
  store i64 %6561, i64* %RAX.i432, align 8
  store %struct.Memory* %loadMem_44f11b, %struct.Memory** %MEMORY
  %loadMem_44f121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6563 = getelementptr inbounds %struct.GPR, %struct.GPR* %6562, i32 0, i32 33
  %6564 = getelementptr inbounds %struct.Reg, %struct.Reg* %6563, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %6564 to i64*
  %6565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6566 = getelementptr inbounds %struct.GPR, %struct.GPR* %6565, i32 0, i32 1
  %6567 = getelementptr inbounds %struct.Reg, %struct.Reg* %6566, i32 0, i32 0
  %RAX.i430 = bitcast %union.anon* %6567 to i64*
  %6568 = load i64, i64* %RAX.i430
  %6569 = load i64, i64* %PC.i429
  %6570 = add i64 %6569, 3
  store i64 %6570, i64* %PC.i429
  %6571 = trunc i64 %6568 to i32
  %6572 = add i32 20, %6571
  %6573 = zext i32 %6572 to i64
  store i64 %6573, i64* %RAX.i430, align 8
  %6574 = icmp ult i32 %6572, %6571
  %6575 = icmp ult i32 %6572, 20
  %6576 = or i1 %6574, %6575
  %6577 = zext i1 %6576 to i8
  %6578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6577, i8* %6578, align 1
  %6579 = and i32 %6572, 255
  %6580 = call i32 @llvm.ctpop.i32(i32 %6579)
  %6581 = trunc i32 %6580 to i8
  %6582 = and i8 %6581, 1
  %6583 = xor i8 %6582, 1
  %6584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6583, i8* %6584, align 1
  %6585 = xor i64 20, %6568
  %6586 = trunc i64 %6585 to i32
  %6587 = xor i32 %6586, %6572
  %6588 = lshr i32 %6587, 4
  %6589 = trunc i32 %6588 to i8
  %6590 = and i8 %6589, 1
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6590, i8* %6591, align 1
  %6592 = icmp eq i32 %6572, 0
  %6593 = zext i1 %6592 to i8
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6593, i8* %6594, align 1
  %6595 = lshr i32 %6572, 31
  %6596 = trunc i32 %6595 to i8
  %6597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6596, i8* %6597, align 1
  %6598 = lshr i32 %6571, 31
  %6599 = xor i32 %6595, %6598
  %6600 = add i32 %6599, %6595
  %6601 = icmp eq i32 %6600, 2
  %6602 = zext i1 %6601 to i8
  %6603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6602, i8* %6603, align 1
  store %struct.Memory* %loadMem_44f121, %struct.Memory** %MEMORY
  %loadMem_44f124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6605 = getelementptr inbounds %struct.GPR, %struct.GPR* %6604, i32 0, i32 33
  %6606 = getelementptr inbounds %struct.Reg, %struct.Reg* %6605, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %6606 to i64*
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6608 = getelementptr inbounds %struct.GPR, %struct.GPR* %6607, i32 0, i32 1
  %6609 = getelementptr inbounds %struct.Reg, %struct.Reg* %6608, i32 0, i32 0
  %EAX.i427 = bitcast %union.anon* %6609 to i32*
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6611 = getelementptr inbounds %struct.GPR, %struct.GPR* %6610, i32 0, i32 5
  %6612 = getelementptr inbounds %struct.Reg, %struct.Reg* %6611, i32 0, i32 0
  %RCX.i428 = bitcast %union.anon* %6612 to i64*
  %6613 = load i32, i32* %EAX.i427
  %6614 = zext i32 %6613 to i64
  %6615 = load i64, i64* %PC.i426
  %6616 = add i64 %6615, 3
  store i64 %6616, i64* %PC.i426
  %6617 = shl i64 %6614, 32
  %6618 = ashr exact i64 %6617, 32
  store i64 %6618, i64* %RCX.i428, align 8
  store %struct.Memory* %loadMem_44f124, %struct.Memory** %MEMORY
  %loadMem_44f127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 33
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %6621 to i64*
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6623 = getelementptr inbounds %struct.GPR, %struct.GPR* %6622, i32 0, i32 1
  %6624 = getelementptr inbounds %struct.Reg, %struct.Reg* %6623, i32 0, i32 0
  %RAX.i423 = bitcast %union.anon* %6624 to i64*
  %6625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6626 = getelementptr inbounds %struct.GPR, %struct.GPR* %6625, i32 0, i32 5
  %6627 = getelementptr inbounds %struct.Reg, %struct.Reg* %6626, i32 0, i32 0
  %RCX.i424 = bitcast %union.anon* %6627 to i64*
  %6628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6629 = getelementptr inbounds %struct.GPR, %struct.GPR* %6628, i32 0, i32 15
  %6630 = getelementptr inbounds %struct.Reg, %struct.Reg* %6629, i32 0, i32 0
  %RBP.i425 = bitcast %union.anon* %6630 to i64*
  %6631 = load i64, i64* %RBP.i425
  %6632 = load i64, i64* %RCX.i424
  %6633 = add i64 %6631, -432
  %6634 = add i64 %6633, %6632
  %6635 = load i64, i64* %PC.i422
  %6636 = add i64 %6635, 8
  store i64 %6636, i64* %PC.i422
  %6637 = inttoptr i64 %6634 to i8*
  %6638 = load i8, i8* %6637
  %6639 = sext i8 %6638 to i64
  %6640 = and i64 %6639, 4294967295
  store i64 %6640, i64* %RAX.i423, align 8
  store %struct.Memory* %loadMem_44f127, %struct.Memory** %MEMORY
  %loadMem_44f12f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6642 = getelementptr inbounds %struct.GPR, %struct.GPR* %6641, i32 0, i32 33
  %6643 = getelementptr inbounds %struct.Reg, %struct.Reg* %6642, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %6643 to i64*
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6645 = getelementptr inbounds %struct.GPR, %struct.GPR* %6644, i32 0, i32 1
  %6646 = getelementptr inbounds %struct.Reg, %struct.Reg* %6645, i32 0, i32 0
  %EAX.i421 = bitcast %union.anon* %6646 to i32*
  %6647 = load i32, i32* %EAX.i421
  %6648 = zext i32 %6647 to i64
  %6649 = load i64, i64* %PC.i420
  %6650 = add i64 %6649, 3
  store i64 %6650, i64* %PC.i420
  %6651 = sub i32 %6647, 2
  %6652 = icmp ult i32 %6647, 2
  %6653 = zext i1 %6652 to i8
  %6654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6653, i8* %6654, align 1
  %6655 = and i32 %6651, 255
  %6656 = call i32 @llvm.ctpop.i32(i32 %6655)
  %6657 = trunc i32 %6656 to i8
  %6658 = and i8 %6657, 1
  %6659 = xor i8 %6658, 1
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6659, i8* %6660, align 1
  %6661 = xor i64 2, %6648
  %6662 = trunc i64 %6661 to i32
  %6663 = xor i32 %6662, %6651
  %6664 = lshr i32 %6663, 4
  %6665 = trunc i32 %6664 to i8
  %6666 = and i8 %6665, 1
  %6667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6666, i8* %6667, align 1
  %6668 = icmp eq i32 %6651, 0
  %6669 = zext i1 %6668 to i8
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6669, i8* %6670, align 1
  %6671 = lshr i32 %6651, 31
  %6672 = trunc i32 %6671 to i8
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6672, i8* %6673, align 1
  %6674 = lshr i32 %6647, 31
  %6675 = xor i32 %6671, %6674
  %6676 = add i32 %6675, %6674
  %6677 = icmp eq i32 %6676, 2
  %6678 = zext i1 %6677 to i8
  %6679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6678, i8* %6679, align 1
  store %struct.Memory* %loadMem_44f12f, %struct.Memory** %MEMORY
  %loadMem_44f132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6681 = getelementptr inbounds %struct.GPR, %struct.GPR* %6680, i32 0, i32 33
  %6682 = getelementptr inbounds %struct.Reg, %struct.Reg* %6681, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %6682 to i64*
  %6683 = load i64, i64* %PC.i419
  %6684 = add i64 %6683, 180
  %6685 = load i64, i64* %PC.i419
  %6686 = add i64 %6685, 6
  %6687 = load i64, i64* %PC.i419
  %6688 = add i64 %6687, 6
  store i64 %6688, i64* %PC.i419
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6690 = load i8, i8* %6689, align 1
  store i8 %6690, i8* %BRANCH_TAKEN, align 1
  %6691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6692 = icmp ne i8 %6690, 0
  %6693 = select i1 %6692, i64 %6684, i64 %6686
  store i64 %6693, i64* %6691, align 8
  store %struct.Memory* %loadMem_44f132, %struct.Memory** %MEMORY
  %loadBr_44f132 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f132 = icmp eq i8 %loadBr_44f132, 1
  br i1 %cmpBr_44f132, label %block_.L_44f1e6, label %block_.L_44f138

block_.L_44f138:                                  ; preds = %block_44f11b, %block_.L_44f0fe
  %loadMem_44f138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6695 = getelementptr inbounds %struct.GPR, %struct.GPR* %6694, i32 0, i32 33
  %6696 = getelementptr inbounds %struct.Reg, %struct.Reg* %6695, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %6696 to i64*
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6698 = getelementptr inbounds %struct.GPR, %struct.GPR* %6697, i32 0, i32 1
  %6699 = getelementptr inbounds %struct.Reg, %struct.Reg* %6698, i32 0, i32 0
  %RAX.i417 = bitcast %union.anon* %6699 to i64*
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6701 = getelementptr inbounds %struct.GPR, %struct.GPR* %6700, i32 0, i32 15
  %6702 = getelementptr inbounds %struct.Reg, %struct.Reg* %6701, i32 0, i32 0
  %RBP.i418 = bitcast %union.anon* %6702 to i64*
  %6703 = load i64, i64* %RBP.i418
  %6704 = sub i64 %6703, 436
  %6705 = load i64, i64* %PC.i416
  %6706 = add i64 %6705, 6
  store i64 %6706, i64* %PC.i416
  %6707 = inttoptr i64 %6704 to i32*
  %6708 = load i32, i32* %6707
  %6709 = zext i32 %6708 to i64
  store i64 %6709, i64* %RAX.i417, align 8
  store %struct.Memory* %loadMem_44f138, %struct.Memory** %MEMORY
  %loadMem_44f13e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6711 = getelementptr inbounds %struct.GPR, %struct.GPR* %6710, i32 0, i32 33
  %6712 = getelementptr inbounds %struct.Reg, %struct.Reg* %6711, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %6712 to i64*
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 1
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %RAX.i415 = bitcast %union.anon* %6715 to i64*
  %6716 = load i64, i64* %RAX.i415
  %6717 = load i64, i64* %PC.i414
  %6718 = add i64 %6717, 3
  store i64 %6718, i64* %PC.i414
  %6719 = trunc i64 %6716 to i32
  %6720 = sub i32 %6719, 1
  %6721 = zext i32 %6720 to i64
  store i64 %6721, i64* %RAX.i415, align 8
  %6722 = icmp ult i32 %6719, 1
  %6723 = zext i1 %6722 to i8
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6723, i8* %6724, align 1
  %6725 = and i32 %6720, 255
  %6726 = call i32 @llvm.ctpop.i32(i32 %6725)
  %6727 = trunc i32 %6726 to i8
  %6728 = and i8 %6727, 1
  %6729 = xor i8 %6728, 1
  %6730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6729, i8* %6730, align 1
  %6731 = xor i64 1, %6716
  %6732 = trunc i64 %6731 to i32
  %6733 = xor i32 %6732, %6720
  %6734 = lshr i32 %6733, 4
  %6735 = trunc i32 %6734 to i8
  %6736 = and i8 %6735, 1
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6736, i8* %6737, align 1
  %6738 = icmp eq i32 %6720, 0
  %6739 = zext i1 %6738 to i8
  %6740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6739, i8* %6740, align 1
  %6741 = lshr i32 %6720, 31
  %6742 = trunc i32 %6741 to i8
  %6743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6742, i8* %6743, align 1
  %6744 = lshr i32 %6719, 31
  %6745 = xor i32 %6741, %6744
  %6746 = add i32 %6745, %6744
  %6747 = icmp eq i32 %6746, 2
  %6748 = zext i1 %6747 to i8
  %6749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6748, i8* %6749, align 1
  store %struct.Memory* %loadMem_44f13e, %struct.Memory** %MEMORY
  %loadMem_44f141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6751 = getelementptr inbounds %struct.GPR, %struct.GPR* %6750, i32 0, i32 33
  %6752 = getelementptr inbounds %struct.Reg, %struct.Reg* %6751, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %6752 to i64*
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6754 = getelementptr inbounds %struct.GPR, %struct.GPR* %6753, i32 0, i32 1
  %6755 = getelementptr inbounds %struct.Reg, %struct.Reg* %6754, i32 0, i32 0
  %EAX.i412 = bitcast %union.anon* %6755 to i32*
  %6756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6757 = getelementptr inbounds %struct.GPR, %struct.GPR* %6756, i32 0, i32 5
  %6758 = getelementptr inbounds %struct.Reg, %struct.Reg* %6757, i32 0, i32 0
  %RCX.i413 = bitcast %union.anon* %6758 to i64*
  %6759 = load i32, i32* %EAX.i412
  %6760 = zext i32 %6759 to i64
  %6761 = load i64, i64* %PC.i411
  %6762 = add i64 %6761, 3
  store i64 %6762, i64* %PC.i411
  %6763 = shl i64 %6760, 32
  %6764 = ashr exact i64 %6763, 32
  store i64 %6764, i64* %RCX.i413, align 8
  store %struct.Memory* %loadMem_44f141, %struct.Memory** %MEMORY
  %loadMem_44f144 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6766 = getelementptr inbounds %struct.GPR, %struct.GPR* %6765, i32 0, i32 33
  %6767 = getelementptr inbounds %struct.Reg, %struct.Reg* %6766, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %6767 to i64*
  %6768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6769 = getelementptr inbounds %struct.GPR, %struct.GPR* %6768, i32 0, i32 1
  %6770 = getelementptr inbounds %struct.Reg, %struct.Reg* %6769, i32 0, i32 0
  %RAX.i409 = bitcast %union.anon* %6770 to i64*
  %6771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6772 = getelementptr inbounds %struct.GPR, %struct.GPR* %6771, i32 0, i32 5
  %6773 = getelementptr inbounds %struct.Reg, %struct.Reg* %6772, i32 0, i32 0
  %RCX.i410 = bitcast %union.anon* %6773 to i64*
  %6774 = load i64, i64* %RCX.i410
  %6775 = add i64 %6774, 12099168
  %6776 = load i64, i64* %PC.i408
  %6777 = add i64 %6776, 8
  store i64 %6777, i64* %PC.i408
  %6778 = inttoptr i64 %6775 to i8*
  %6779 = load i8, i8* %6778
  %6780 = zext i8 %6779 to i64
  store i64 %6780, i64* %RAX.i409, align 8
  store %struct.Memory* %loadMem_44f144, %struct.Memory** %MEMORY
  %loadMem_44f14c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6782 = getelementptr inbounds %struct.GPR, %struct.GPR* %6781, i32 0, i32 33
  %6783 = getelementptr inbounds %struct.Reg, %struct.Reg* %6782, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %6783 to i64*
  %6784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6785 = getelementptr inbounds %struct.GPR, %struct.GPR* %6784, i32 0, i32 1
  %6786 = getelementptr inbounds %struct.Reg, %struct.Reg* %6785, i32 0, i32 0
  %EAX.i407 = bitcast %union.anon* %6786 to i32*
  %6787 = load i32, i32* %EAX.i407
  %6788 = zext i32 %6787 to i64
  %6789 = load i64, i64* %PC.i406
  %6790 = add i64 %6789, 3
  store i64 %6790, i64* %PC.i406
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6791, align 1
  %6792 = and i32 %6787, 255
  %6793 = call i32 @llvm.ctpop.i32(i32 %6792)
  %6794 = trunc i32 %6793 to i8
  %6795 = and i8 %6794, 1
  %6796 = xor i8 %6795, 1
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6796, i8* %6797, align 1
  %6798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6798, align 1
  %6799 = icmp eq i32 %6787, 0
  %6800 = zext i1 %6799 to i8
  %6801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6800, i8* %6801, align 1
  %6802 = lshr i32 %6787, 31
  %6803 = trunc i32 %6802 to i8
  %6804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6803, i8* %6804, align 1
  %6805 = lshr i32 %6787, 31
  %6806 = xor i32 %6802, %6805
  %6807 = add i32 %6806, %6805
  %6808 = icmp eq i32 %6807, 2
  %6809 = zext i1 %6808 to i8
  %6810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6809, i8* %6810, align 1
  store %struct.Memory* %loadMem_44f14c, %struct.Memory** %MEMORY
  %loadMem_44f14f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6812 = getelementptr inbounds %struct.GPR, %struct.GPR* %6811, i32 0, i32 33
  %6813 = getelementptr inbounds %struct.Reg, %struct.Reg* %6812, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %6813 to i64*
  %6814 = load i64, i64* %PC.i405
  %6815 = add i64 %6814, 35
  %6816 = load i64, i64* %PC.i405
  %6817 = add i64 %6816, 6
  %6818 = load i64, i64* %PC.i405
  %6819 = add i64 %6818, 6
  store i64 %6819, i64* %PC.i405
  %6820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6821 = load i8, i8* %6820, align 1
  %6822 = icmp eq i8 %6821, 0
  %6823 = zext i1 %6822 to i8
  store i8 %6823, i8* %BRANCH_TAKEN, align 1
  %6824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6825 = select i1 %6822, i64 %6815, i64 %6817
  store i64 %6825, i64* %6824, align 8
  store %struct.Memory* %loadMem_44f14f, %struct.Memory** %MEMORY
  %loadBr_44f14f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f14f = icmp eq i8 %loadBr_44f14f, 1
  br i1 %cmpBr_44f14f, label %block_.L_44f172, label %block_44f155

block_44f155:                                     ; preds = %block_.L_44f138
  %loadMem_44f155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6827 = getelementptr inbounds %struct.GPR, %struct.GPR* %6826, i32 0, i32 33
  %6828 = getelementptr inbounds %struct.Reg, %struct.Reg* %6827, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %6828 to i64*
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6830 = getelementptr inbounds %struct.GPR, %struct.GPR* %6829, i32 0, i32 1
  %6831 = getelementptr inbounds %struct.Reg, %struct.Reg* %6830, i32 0, i32 0
  %RAX.i403 = bitcast %union.anon* %6831 to i64*
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6833 = getelementptr inbounds %struct.GPR, %struct.GPR* %6832, i32 0, i32 15
  %6834 = getelementptr inbounds %struct.Reg, %struct.Reg* %6833, i32 0, i32 0
  %RBP.i404 = bitcast %union.anon* %6834 to i64*
  %6835 = load i64, i64* %RBP.i404
  %6836 = sub i64 %6835, 436
  %6837 = load i64, i64* %PC.i402
  %6838 = add i64 %6837, 6
  store i64 %6838, i64* %PC.i402
  %6839 = inttoptr i64 %6836 to i32*
  %6840 = load i32, i32* %6839
  %6841 = zext i32 %6840 to i64
  store i64 %6841, i64* %RAX.i403, align 8
  store %struct.Memory* %loadMem_44f155, %struct.Memory** %MEMORY
  %loadMem_44f15b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6843 = getelementptr inbounds %struct.GPR, %struct.GPR* %6842, i32 0, i32 33
  %6844 = getelementptr inbounds %struct.Reg, %struct.Reg* %6843, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %6844 to i64*
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 1
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %RAX.i401 = bitcast %union.anon* %6847 to i64*
  %6848 = load i64, i64* %RAX.i401
  %6849 = load i64, i64* %PC.i400
  %6850 = add i64 %6849, 3
  store i64 %6850, i64* %PC.i400
  %6851 = trunc i64 %6848 to i32
  %6852 = sub i32 %6851, 1
  %6853 = zext i32 %6852 to i64
  store i64 %6853, i64* %RAX.i401, align 8
  %6854 = icmp ult i32 %6851, 1
  %6855 = zext i1 %6854 to i8
  %6856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6855, i8* %6856, align 1
  %6857 = and i32 %6852, 255
  %6858 = call i32 @llvm.ctpop.i32(i32 %6857)
  %6859 = trunc i32 %6858 to i8
  %6860 = and i8 %6859, 1
  %6861 = xor i8 %6860, 1
  %6862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6861, i8* %6862, align 1
  %6863 = xor i64 1, %6848
  %6864 = trunc i64 %6863 to i32
  %6865 = xor i32 %6864, %6852
  %6866 = lshr i32 %6865, 4
  %6867 = trunc i32 %6866 to i8
  %6868 = and i8 %6867, 1
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6868, i8* %6869, align 1
  %6870 = icmp eq i32 %6852, 0
  %6871 = zext i1 %6870 to i8
  %6872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6871, i8* %6872, align 1
  %6873 = lshr i32 %6852, 31
  %6874 = trunc i32 %6873 to i8
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6874, i8* %6875, align 1
  %6876 = lshr i32 %6851, 31
  %6877 = xor i32 %6873, %6876
  %6878 = add i32 %6877, %6876
  %6879 = icmp eq i32 %6878, 2
  %6880 = zext i1 %6879 to i8
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6880, i8* %6881, align 1
  store %struct.Memory* %loadMem_44f15b, %struct.Memory** %MEMORY
  %loadMem_44f15e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6883 = getelementptr inbounds %struct.GPR, %struct.GPR* %6882, i32 0, i32 33
  %6884 = getelementptr inbounds %struct.Reg, %struct.Reg* %6883, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %6884 to i64*
  %6885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6886 = getelementptr inbounds %struct.GPR, %struct.GPR* %6885, i32 0, i32 1
  %6887 = getelementptr inbounds %struct.Reg, %struct.Reg* %6886, i32 0, i32 0
  %EAX.i398 = bitcast %union.anon* %6887 to i32*
  %6888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6889 = getelementptr inbounds %struct.GPR, %struct.GPR* %6888, i32 0, i32 5
  %6890 = getelementptr inbounds %struct.Reg, %struct.Reg* %6889, i32 0, i32 0
  %RCX.i399 = bitcast %union.anon* %6890 to i64*
  %6891 = load i32, i32* %EAX.i398
  %6892 = zext i32 %6891 to i64
  %6893 = load i64, i64* %PC.i397
  %6894 = add i64 %6893, 3
  store i64 %6894, i64* %PC.i397
  %6895 = shl i64 %6892, 32
  %6896 = ashr exact i64 %6895, 32
  store i64 %6896, i64* %RCX.i399, align 8
  store %struct.Memory* %loadMem_44f15e, %struct.Memory** %MEMORY
  %loadMem_44f161 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6898 = getelementptr inbounds %struct.GPR, %struct.GPR* %6897, i32 0, i32 33
  %6899 = getelementptr inbounds %struct.Reg, %struct.Reg* %6898, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %6899 to i64*
  %6900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6901 = getelementptr inbounds %struct.GPR, %struct.GPR* %6900, i32 0, i32 1
  %6902 = getelementptr inbounds %struct.Reg, %struct.Reg* %6901, i32 0, i32 0
  %RAX.i394 = bitcast %union.anon* %6902 to i64*
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6904 = getelementptr inbounds %struct.GPR, %struct.GPR* %6903, i32 0, i32 5
  %6905 = getelementptr inbounds %struct.Reg, %struct.Reg* %6904, i32 0, i32 0
  %RCX.i395 = bitcast %union.anon* %6905 to i64*
  %6906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6907 = getelementptr inbounds %struct.GPR, %struct.GPR* %6906, i32 0, i32 15
  %6908 = getelementptr inbounds %struct.Reg, %struct.Reg* %6907, i32 0, i32 0
  %RBP.i396 = bitcast %union.anon* %6908 to i64*
  %6909 = load i64, i64* %RBP.i396
  %6910 = load i64, i64* %RCX.i395
  %6911 = add i64 %6909, -432
  %6912 = add i64 %6911, %6910
  %6913 = load i64, i64* %PC.i393
  %6914 = add i64 %6913, 8
  store i64 %6914, i64* %PC.i393
  %6915 = inttoptr i64 %6912 to i8*
  %6916 = load i8, i8* %6915
  %6917 = sext i8 %6916 to i64
  %6918 = and i64 %6917, 4294967295
  store i64 %6918, i64* %RAX.i394, align 8
  store %struct.Memory* %loadMem_44f161, %struct.Memory** %MEMORY
  %loadMem_44f169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6920 = getelementptr inbounds %struct.GPR, %struct.GPR* %6919, i32 0, i32 33
  %6921 = getelementptr inbounds %struct.Reg, %struct.Reg* %6920, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %6921 to i64*
  %6922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6923 = getelementptr inbounds %struct.GPR, %struct.GPR* %6922, i32 0, i32 1
  %6924 = getelementptr inbounds %struct.Reg, %struct.Reg* %6923, i32 0, i32 0
  %EAX.i392 = bitcast %union.anon* %6924 to i32*
  %6925 = load i32, i32* %EAX.i392
  %6926 = zext i32 %6925 to i64
  %6927 = load i64, i64* %PC.i391
  %6928 = add i64 %6927, 3
  store i64 %6928, i64* %PC.i391
  %6929 = sub i32 %6925, 2
  %6930 = icmp ult i32 %6925, 2
  %6931 = zext i1 %6930 to i8
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6931, i8* %6932, align 1
  %6933 = and i32 %6929, 255
  %6934 = call i32 @llvm.ctpop.i32(i32 %6933)
  %6935 = trunc i32 %6934 to i8
  %6936 = and i8 %6935, 1
  %6937 = xor i8 %6936, 1
  %6938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6937, i8* %6938, align 1
  %6939 = xor i64 2, %6926
  %6940 = trunc i64 %6939 to i32
  %6941 = xor i32 %6940, %6929
  %6942 = lshr i32 %6941, 4
  %6943 = trunc i32 %6942 to i8
  %6944 = and i8 %6943, 1
  %6945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6944, i8* %6945, align 1
  %6946 = icmp eq i32 %6929, 0
  %6947 = zext i1 %6946 to i8
  %6948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6947, i8* %6948, align 1
  %6949 = lshr i32 %6929, 31
  %6950 = trunc i32 %6949 to i8
  %6951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6950, i8* %6951, align 1
  %6952 = lshr i32 %6925, 31
  %6953 = xor i32 %6949, %6952
  %6954 = add i32 %6953, %6952
  %6955 = icmp eq i32 %6954, 2
  %6956 = zext i1 %6955 to i8
  %6957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6956, i8* %6957, align 1
  store %struct.Memory* %loadMem_44f169, %struct.Memory** %MEMORY
  %loadMem_44f16c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6959 = getelementptr inbounds %struct.GPR, %struct.GPR* %6958, i32 0, i32 33
  %6960 = getelementptr inbounds %struct.Reg, %struct.Reg* %6959, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %6960 to i64*
  %6961 = load i64, i64* %PC.i390
  %6962 = add i64 %6961, 122
  %6963 = load i64, i64* %PC.i390
  %6964 = add i64 %6963, 6
  %6965 = load i64, i64* %PC.i390
  %6966 = add i64 %6965, 6
  store i64 %6966, i64* %PC.i390
  %6967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6968 = load i8, i8* %6967, align 1
  store i8 %6968, i8* %BRANCH_TAKEN, align 1
  %6969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6970 = icmp ne i8 %6968, 0
  %6971 = select i1 %6970, i64 %6962, i64 %6964
  store i64 %6971, i64* %6969, align 8
  store %struct.Memory* %loadMem_44f16c, %struct.Memory** %MEMORY
  %loadBr_44f16c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f16c = icmp eq i8 %loadBr_44f16c, 1
  br i1 %cmpBr_44f16c, label %block_.L_44f1e6, label %block_.L_44f172

block_.L_44f172:                                  ; preds = %block_44f155, %block_.L_44f138
  %loadMem_44f172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6973 = getelementptr inbounds %struct.GPR, %struct.GPR* %6972, i32 0, i32 33
  %6974 = getelementptr inbounds %struct.Reg, %struct.Reg* %6973, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %6974 to i64*
  %6975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6976 = getelementptr inbounds %struct.GPR, %struct.GPR* %6975, i32 0, i32 1
  %6977 = getelementptr inbounds %struct.Reg, %struct.Reg* %6976, i32 0, i32 0
  %RAX.i388 = bitcast %union.anon* %6977 to i64*
  %6978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6979 = getelementptr inbounds %struct.GPR, %struct.GPR* %6978, i32 0, i32 15
  %6980 = getelementptr inbounds %struct.Reg, %struct.Reg* %6979, i32 0, i32 0
  %RBP.i389 = bitcast %union.anon* %6980 to i64*
  %6981 = load i64, i64* %RBP.i389
  %6982 = sub i64 %6981, 436
  %6983 = load i64, i64* %PC.i387
  %6984 = add i64 %6983, 6
  store i64 %6984, i64* %PC.i387
  %6985 = inttoptr i64 %6982 to i32*
  %6986 = load i32, i32* %6985
  %6987 = zext i32 %6986 to i64
  store i64 %6987, i64* %RAX.i388, align 8
  store %struct.Memory* %loadMem_44f172, %struct.Memory** %MEMORY
  %loadMem_44f178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6989 = getelementptr inbounds %struct.GPR, %struct.GPR* %6988, i32 0, i32 33
  %6990 = getelementptr inbounds %struct.Reg, %struct.Reg* %6989, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %6990 to i64*
  %6991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6992 = getelementptr inbounds %struct.GPR, %struct.GPR* %6991, i32 0, i32 1
  %6993 = getelementptr inbounds %struct.Reg, %struct.Reg* %6992, i32 0, i32 0
  %RAX.i386 = bitcast %union.anon* %6993 to i64*
  %6994 = load i64, i64* %RAX.i386
  %6995 = load i64, i64* %PC.i385
  %6996 = add i64 %6995, 3
  store i64 %6996, i64* %PC.i385
  %6997 = trunc i64 %6994 to i32
  %6998 = sub i32 %6997, 20
  %6999 = zext i32 %6998 to i64
  store i64 %6999, i64* %RAX.i386, align 8
  %7000 = icmp ult i32 %6997, 20
  %7001 = zext i1 %7000 to i8
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7001, i8* %7002, align 1
  %7003 = and i32 %6998, 255
  %7004 = call i32 @llvm.ctpop.i32(i32 %7003)
  %7005 = trunc i32 %7004 to i8
  %7006 = and i8 %7005, 1
  %7007 = xor i8 %7006, 1
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7007, i8* %7008, align 1
  %7009 = xor i64 20, %6994
  %7010 = trunc i64 %7009 to i32
  %7011 = xor i32 %7010, %6998
  %7012 = lshr i32 %7011, 4
  %7013 = trunc i32 %7012 to i8
  %7014 = and i8 %7013, 1
  %7015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7014, i8* %7015, align 1
  %7016 = icmp eq i32 %6998, 0
  %7017 = zext i1 %7016 to i8
  %7018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7017, i8* %7018, align 1
  %7019 = lshr i32 %6998, 31
  %7020 = trunc i32 %7019 to i8
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7020, i8* %7021, align 1
  %7022 = lshr i32 %6997, 31
  %7023 = xor i32 %7019, %7022
  %7024 = add i32 %7023, %7022
  %7025 = icmp eq i32 %7024, 2
  %7026 = zext i1 %7025 to i8
  %7027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7026, i8* %7027, align 1
  store %struct.Memory* %loadMem_44f178, %struct.Memory** %MEMORY
  %loadMem_44f17b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7029 = getelementptr inbounds %struct.GPR, %struct.GPR* %7028, i32 0, i32 33
  %7030 = getelementptr inbounds %struct.Reg, %struct.Reg* %7029, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %7030 to i64*
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7032 = getelementptr inbounds %struct.GPR, %struct.GPR* %7031, i32 0, i32 1
  %7033 = getelementptr inbounds %struct.Reg, %struct.Reg* %7032, i32 0, i32 0
  %EAX.i383 = bitcast %union.anon* %7033 to i32*
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7035 = getelementptr inbounds %struct.GPR, %struct.GPR* %7034, i32 0, i32 5
  %7036 = getelementptr inbounds %struct.Reg, %struct.Reg* %7035, i32 0, i32 0
  %RCX.i384 = bitcast %union.anon* %7036 to i64*
  %7037 = load i32, i32* %EAX.i383
  %7038 = zext i32 %7037 to i64
  %7039 = load i64, i64* %PC.i382
  %7040 = add i64 %7039, 3
  store i64 %7040, i64* %PC.i382
  %7041 = shl i64 %7038, 32
  %7042 = ashr exact i64 %7041, 32
  store i64 %7042, i64* %RCX.i384, align 8
  store %struct.Memory* %loadMem_44f17b, %struct.Memory** %MEMORY
  %loadMem_44f17e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7044 = getelementptr inbounds %struct.GPR, %struct.GPR* %7043, i32 0, i32 33
  %7045 = getelementptr inbounds %struct.Reg, %struct.Reg* %7044, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %7045 to i64*
  %7046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7047 = getelementptr inbounds %struct.GPR, %struct.GPR* %7046, i32 0, i32 1
  %7048 = getelementptr inbounds %struct.Reg, %struct.Reg* %7047, i32 0, i32 0
  %RAX.i380 = bitcast %union.anon* %7048 to i64*
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7050 = getelementptr inbounds %struct.GPR, %struct.GPR* %7049, i32 0, i32 5
  %7051 = getelementptr inbounds %struct.Reg, %struct.Reg* %7050, i32 0, i32 0
  %RCX.i381 = bitcast %union.anon* %7051 to i64*
  %7052 = load i64, i64* %RCX.i381
  %7053 = add i64 %7052, 12099168
  %7054 = load i64, i64* %PC.i379
  %7055 = add i64 %7054, 8
  store i64 %7055, i64* %PC.i379
  %7056 = inttoptr i64 %7053 to i8*
  %7057 = load i8, i8* %7056
  %7058 = zext i8 %7057 to i64
  store i64 %7058, i64* %RAX.i380, align 8
  store %struct.Memory* %loadMem_44f17e, %struct.Memory** %MEMORY
  %loadMem_44f186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7060 = getelementptr inbounds %struct.GPR, %struct.GPR* %7059, i32 0, i32 33
  %7061 = getelementptr inbounds %struct.Reg, %struct.Reg* %7060, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %7061 to i64*
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7063 = getelementptr inbounds %struct.GPR, %struct.GPR* %7062, i32 0, i32 1
  %7064 = getelementptr inbounds %struct.Reg, %struct.Reg* %7063, i32 0, i32 0
  %EAX.i378 = bitcast %union.anon* %7064 to i32*
  %7065 = load i32, i32* %EAX.i378
  %7066 = zext i32 %7065 to i64
  %7067 = load i64, i64* %PC.i377
  %7068 = add i64 %7067, 3
  store i64 %7068, i64* %PC.i377
  %7069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7069, align 1
  %7070 = and i32 %7065, 255
  %7071 = call i32 @llvm.ctpop.i32(i32 %7070)
  %7072 = trunc i32 %7071 to i8
  %7073 = and i8 %7072, 1
  %7074 = xor i8 %7073, 1
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7074, i8* %7075, align 1
  %7076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7076, align 1
  %7077 = icmp eq i32 %7065, 0
  %7078 = zext i1 %7077 to i8
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7078, i8* %7079, align 1
  %7080 = lshr i32 %7065, 31
  %7081 = trunc i32 %7080 to i8
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7081, i8* %7082, align 1
  %7083 = lshr i32 %7065, 31
  %7084 = xor i32 %7080, %7083
  %7085 = add i32 %7084, %7083
  %7086 = icmp eq i32 %7085, 2
  %7087 = zext i1 %7086 to i8
  %7088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7087, i8* %7088, align 1
  store %struct.Memory* %loadMem_44f186, %struct.Memory** %MEMORY
  %loadMem_44f189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7090 = getelementptr inbounds %struct.GPR, %struct.GPR* %7089, i32 0, i32 33
  %7091 = getelementptr inbounds %struct.Reg, %struct.Reg* %7090, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %7091 to i64*
  %7092 = load i64, i64* %PC.i376
  %7093 = add i64 %7092, 35
  %7094 = load i64, i64* %PC.i376
  %7095 = add i64 %7094, 6
  %7096 = load i64, i64* %PC.i376
  %7097 = add i64 %7096, 6
  store i64 %7097, i64* %PC.i376
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7099 = load i8, i8* %7098, align 1
  %7100 = icmp eq i8 %7099, 0
  %7101 = zext i1 %7100 to i8
  store i8 %7101, i8* %BRANCH_TAKEN, align 1
  %7102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7103 = select i1 %7100, i64 %7093, i64 %7095
  store i64 %7103, i64* %7102, align 8
  store %struct.Memory* %loadMem_44f189, %struct.Memory** %MEMORY
  %loadBr_44f189 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f189 = icmp eq i8 %loadBr_44f189, 1
  br i1 %cmpBr_44f189, label %block_.L_44f1ac, label %block_44f18f

block_44f18f:                                     ; preds = %block_.L_44f172
  %loadMem_44f18f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7105 = getelementptr inbounds %struct.GPR, %struct.GPR* %7104, i32 0, i32 33
  %7106 = getelementptr inbounds %struct.Reg, %struct.Reg* %7105, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %7106 to i64*
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7108 = getelementptr inbounds %struct.GPR, %struct.GPR* %7107, i32 0, i32 1
  %7109 = getelementptr inbounds %struct.Reg, %struct.Reg* %7108, i32 0, i32 0
  %RAX.i374 = bitcast %union.anon* %7109 to i64*
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7111 = getelementptr inbounds %struct.GPR, %struct.GPR* %7110, i32 0, i32 15
  %7112 = getelementptr inbounds %struct.Reg, %struct.Reg* %7111, i32 0, i32 0
  %RBP.i375 = bitcast %union.anon* %7112 to i64*
  %7113 = load i64, i64* %RBP.i375
  %7114 = sub i64 %7113, 436
  %7115 = load i64, i64* %PC.i373
  %7116 = add i64 %7115, 6
  store i64 %7116, i64* %PC.i373
  %7117 = inttoptr i64 %7114 to i32*
  %7118 = load i32, i32* %7117
  %7119 = zext i32 %7118 to i64
  store i64 %7119, i64* %RAX.i374, align 8
  store %struct.Memory* %loadMem_44f18f, %struct.Memory** %MEMORY
  %loadMem_44f195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7121 = getelementptr inbounds %struct.GPR, %struct.GPR* %7120, i32 0, i32 33
  %7122 = getelementptr inbounds %struct.Reg, %struct.Reg* %7121, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %7122 to i64*
  %7123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7124 = getelementptr inbounds %struct.GPR, %struct.GPR* %7123, i32 0, i32 1
  %7125 = getelementptr inbounds %struct.Reg, %struct.Reg* %7124, i32 0, i32 0
  %RAX.i372 = bitcast %union.anon* %7125 to i64*
  %7126 = load i64, i64* %RAX.i372
  %7127 = load i64, i64* %PC.i371
  %7128 = add i64 %7127, 3
  store i64 %7128, i64* %PC.i371
  %7129 = trunc i64 %7126 to i32
  %7130 = sub i32 %7129, 20
  %7131 = zext i32 %7130 to i64
  store i64 %7131, i64* %RAX.i372, align 8
  %7132 = icmp ult i32 %7129, 20
  %7133 = zext i1 %7132 to i8
  %7134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7133, i8* %7134, align 1
  %7135 = and i32 %7130, 255
  %7136 = call i32 @llvm.ctpop.i32(i32 %7135)
  %7137 = trunc i32 %7136 to i8
  %7138 = and i8 %7137, 1
  %7139 = xor i8 %7138, 1
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7139, i8* %7140, align 1
  %7141 = xor i64 20, %7126
  %7142 = trunc i64 %7141 to i32
  %7143 = xor i32 %7142, %7130
  %7144 = lshr i32 %7143, 4
  %7145 = trunc i32 %7144 to i8
  %7146 = and i8 %7145, 1
  %7147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7146, i8* %7147, align 1
  %7148 = icmp eq i32 %7130, 0
  %7149 = zext i1 %7148 to i8
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7149, i8* %7150, align 1
  %7151 = lshr i32 %7130, 31
  %7152 = trunc i32 %7151 to i8
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7152, i8* %7153, align 1
  %7154 = lshr i32 %7129, 31
  %7155 = xor i32 %7151, %7154
  %7156 = add i32 %7155, %7154
  %7157 = icmp eq i32 %7156, 2
  %7158 = zext i1 %7157 to i8
  %7159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7158, i8* %7159, align 1
  store %struct.Memory* %loadMem_44f195, %struct.Memory** %MEMORY
  %loadMem_44f198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7161 = getelementptr inbounds %struct.GPR, %struct.GPR* %7160, i32 0, i32 33
  %7162 = getelementptr inbounds %struct.Reg, %struct.Reg* %7161, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %7162 to i64*
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7164 = getelementptr inbounds %struct.GPR, %struct.GPR* %7163, i32 0, i32 1
  %7165 = getelementptr inbounds %struct.Reg, %struct.Reg* %7164, i32 0, i32 0
  %EAX.i369 = bitcast %union.anon* %7165 to i32*
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7167 = getelementptr inbounds %struct.GPR, %struct.GPR* %7166, i32 0, i32 5
  %7168 = getelementptr inbounds %struct.Reg, %struct.Reg* %7167, i32 0, i32 0
  %RCX.i370 = bitcast %union.anon* %7168 to i64*
  %7169 = load i32, i32* %EAX.i369
  %7170 = zext i32 %7169 to i64
  %7171 = load i64, i64* %PC.i368
  %7172 = add i64 %7171, 3
  store i64 %7172, i64* %PC.i368
  %7173 = shl i64 %7170, 32
  %7174 = ashr exact i64 %7173, 32
  store i64 %7174, i64* %RCX.i370, align 8
  store %struct.Memory* %loadMem_44f198, %struct.Memory** %MEMORY
  %loadMem_44f19b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7176 = getelementptr inbounds %struct.GPR, %struct.GPR* %7175, i32 0, i32 33
  %7177 = getelementptr inbounds %struct.Reg, %struct.Reg* %7176, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %7177 to i64*
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7179 = getelementptr inbounds %struct.GPR, %struct.GPR* %7178, i32 0, i32 1
  %7180 = getelementptr inbounds %struct.Reg, %struct.Reg* %7179, i32 0, i32 0
  %RAX.i365 = bitcast %union.anon* %7180 to i64*
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7182 = getelementptr inbounds %struct.GPR, %struct.GPR* %7181, i32 0, i32 5
  %7183 = getelementptr inbounds %struct.Reg, %struct.Reg* %7182, i32 0, i32 0
  %RCX.i366 = bitcast %union.anon* %7183 to i64*
  %7184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7185 = getelementptr inbounds %struct.GPR, %struct.GPR* %7184, i32 0, i32 15
  %7186 = getelementptr inbounds %struct.Reg, %struct.Reg* %7185, i32 0, i32 0
  %RBP.i367 = bitcast %union.anon* %7186 to i64*
  %7187 = load i64, i64* %RBP.i367
  %7188 = load i64, i64* %RCX.i366
  %7189 = add i64 %7187, -432
  %7190 = add i64 %7189, %7188
  %7191 = load i64, i64* %PC.i364
  %7192 = add i64 %7191, 8
  store i64 %7192, i64* %PC.i364
  %7193 = inttoptr i64 %7190 to i8*
  %7194 = load i8, i8* %7193
  %7195 = sext i8 %7194 to i64
  %7196 = and i64 %7195, 4294967295
  store i64 %7196, i64* %RAX.i365, align 8
  store %struct.Memory* %loadMem_44f19b, %struct.Memory** %MEMORY
  %loadMem_44f1a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7198 = getelementptr inbounds %struct.GPR, %struct.GPR* %7197, i32 0, i32 33
  %7199 = getelementptr inbounds %struct.Reg, %struct.Reg* %7198, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %7199 to i64*
  %7200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7201 = getelementptr inbounds %struct.GPR, %struct.GPR* %7200, i32 0, i32 1
  %7202 = getelementptr inbounds %struct.Reg, %struct.Reg* %7201, i32 0, i32 0
  %EAX.i363 = bitcast %union.anon* %7202 to i32*
  %7203 = load i32, i32* %EAX.i363
  %7204 = zext i32 %7203 to i64
  %7205 = load i64, i64* %PC.i362
  %7206 = add i64 %7205, 3
  store i64 %7206, i64* %PC.i362
  %7207 = sub i32 %7203, 2
  %7208 = icmp ult i32 %7203, 2
  %7209 = zext i1 %7208 to i8
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7209, i8* %7210, align 1
  %7211 = and i32 %7207, 255
  %7212 = call i32 @llvm.ctpop.i32(i32 %7211)
  %7213 = trunc i32 %7212 to i8
  %7214 = and i8 %7213, 1
  %7215 = xor i8 %7214, 1
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7215, i8* %7216, align 1
  %7217 = xor i64 2, %7204
  %7218 = trunc i64 %7217 to i32
  %7219 = xor i32 %7218, %7207
  %7220 = lshr i32 %7219, 4
  %7221 = trunc i32 %7220 to i8
  %7222 = and i8 %7221, 1
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7222, i8* %7223, align 1
  %7224 = icmp eq i32 %7207, 0
  %7225 = zext i1 %7224 to i8
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7225, i8* %7226, align 1
  %7227 = lshr i32 %7207, 31
  %7228 = trunc i32 %7227 to i8
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7228, i8* %7229, align 1
  %7230 = lshr i32 %7203, 31
  %7231 = xor i32 %7227, %7230
  %7232 = add i32 %7231, %7230
  %7233 = icmp eq i32 %7232, 2
  %7234 = zext i1 %7233 to i8
  %7235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7234, i8* %7235, align 1
  store %struct.Memory* %loadMem_44f1a3, %struct.Memory** %MEMORY
  %loadMem_44f1a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7237 = getelementptr inbounds %struct.GPR, %struct.GPR* %7236, i32 0, i32 33
  %7238 = getelementptr inbounds %struct.Reg, %struct.Reg* %7237, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %7238 to i64*
  %7239 = load i64, i64* %PC.i361
  %7240 = add i64 %7239, 64
  %7241 = load i64, i64* %PC.i361
  %7242 = add i64 %7241, 6
  %7243 = load i64, i64* %PC.i361
  %7244 = add i64 %7243, 6
  store i64 %7244, i64* %PC.i361
  %7245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7246 = load i8, i8* %7245, align 1
  store i8 %7246, i8* %BRANCH_TAKEN, align 1
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7248 = icmp ne i8 %7246, 0
  %7249 = select i1 %7248, i64 %7240, i64 %7242
  store i64 %7249, i64* %7247, align 8
  store %struct.Memory* %loadMem_44f1a6, %struct.Memory** %MEMORY
  %loadBr_44f1a6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f1a6 = icmp eq i8 %loadBr_44f1a6, 1
  br i1 %cmpBr_44f1a6, label %block_.L_44f1e6, label %block_.L_44f1ac

block_.L_44f1ac:                                  ; preds = %block_44f18f, %block_.L_44f172
  %loadMem_44f1ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7251 = getelementptr inbounds %struct.GPR, %struct.GPR* %7250, i32 0, i32 33
  %7252 = getelementptr inbounds %struct.Reg, %struct.Reg* %7251, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %7252 to i64*
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7254 = getelementptr inbounds %struct.GPR, %struct.GPR* %7253, i32 0, i32 1
  %7255 = getelementptr inbounds %struct.Reg, %struct.Reg* %7254, i32 0, i32 0
  %RAX.i359 = bitcast %union.anon* %7255 to i64*
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7257 = getelementptr inbounds %struct.GPR, %struct.GPR* %7256, i32 0, i32 15
  %7258 = getelementptr inbounds %struct.Reg, %struct.Reg* %7257, i32 0, i32 0
  %RBP.i360 = bitcast %union.anon* %7258 to i64*
  %7259 = load i64, i64* %RBP.i360
  %7260 = sub i64 %7259, 436
  %7261 = load i64, i64* %PC.i358
  %7262 = add i64 %7261, 6
  store i64 %7262, i64* %PC.i358
  %7263 = inttoptr i64 %7260 to i32*
  %7264 = load i32, i32* %7263
  %7265 = zext i32 %7264 to i64
  store i64 %7265, i64* %RAX.i359, align 8
  store %struct.Memory* %loadMem_44f1ac, %struct.Memory** %MEMORY
  %loadMem_44f1b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7267 = getelementptr inbounds %struct.GPR, %struct.GPR* %7266, i32 0, i32 33
  %7268 = getelementptr inbounds %struct.Reg, %struct.Reg* %7267, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %7268 to i64*
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7270 = getelementptr inbounds %struct.GPR, %struct.GPR* %7269, i32 0, i32 1
  %7271 = getelementptr inbounds %struct.Reg, %struct.Reg* %7270, i32 0, i32 0
  %RAX.i357 = bitcast %union.anon* %7271 to i64*
  %7272 = load i64, i64* %RAX.i357
  %7273 = load i64, i64* %PC.i356
  %7274 = add i64 %7273, 3
  store i64 %7274, i64* %PC.i356
  %7275 = trunc i64 %7272 to i32
  %7276 = add i32 1, %7275
  %7277 = zext i32 %7276 to i64
  store i64 %7277, i64* %RAX.i357, align 8
  %7278 = icmp ult i32 %7276, %7275
  %7279 = icmp ult i32 %7276, 1
  %7280 = or i1 %7278, %7279
  %7281 = zext i1 %7280 to i8
  %7282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7281, i8* %7282, align 1
  %7283 = and i32 %7276, 255
  %7284 = call i32 @llvm.ctpop.i32(i32 %7283)
  %7285 = trunc i32 %7284 to i8
  %7286 = and i8 %7285, 1
  %7287 = xor i8 %7286, 1
  %7288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7287, i8* %7288, align 1
  %7289 = xor i64 1, %7272
  %7290 = trunc i64 %7289 to i32
  %7291 = xor i32 %7290, %7276
  %7292 = lshr i32 %7291, 4
  %7293 = trunc i32 %7292 to i8
  %7294 = and i8 %7293, 1
  %7295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7294, i8* %7295, align 1
  %7296 = icmp eq i32 %7276, 0
  %7297 = zext i1 %7296 to i8
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7297, i8* %7298, align 1
  %7299 = lshr i32 %7276, 31
  %7300 = trunc i32 %7299 to i8
  %7301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7300, i8* %7301, align 1
  %7302 = lshr i32 %7275, 31
  %7303 = xor i32 %7299, %7302
  %7304 = add i32 %7303, %7299
  %7305 = icmp eq i32 %7304, 2
  %7306 = zext i1 %7305 to i8
  %7307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7306, i8* %7307, align 1
  store %struct.Memory* %loadMem_44f1b2, %struct.Memory** %MEMORY
  %loadMem_44f1b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7309 = getelementptr inbounds %struct.GPR, %struct.GPR* %7308, i32 0, i32 33
  %7310 = getelementptr inbounds %struct.Reg, %struct.Reg* %7309, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %7310 to i64*
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7312 = getelementptr inbounds %struct.GPR, %struct.GPR* %7311, i32 0, i32 1
  %7313 = getelementptr inbounds %struct.Reg, %struct.Reg* %7312, i32 0, i32 0
  %EAX.i354 = bitcast %union.anon* %7313 to i32*
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7315 = getelementptr inbounds %struct.GPR, %struct.GPR* %7314, i32 0, i32 5
  %7316 = getelementptr inbounds %struct.Reg, %struct.Reg* %7315, i32 0, i32 0
  %RCX.i355 = bitcast %union.anon* %7316 to i64*
  %7317 = load i32, i32* %EAX.i354
  %7318 = zext i32 %7317 to i64
  %7319 = load i64, i64* %PC.i353
  %7320 = add i64 %7319, 3
  store i64 %7320, i64* %PC.i353
  %7321 = shl i64 %7318, 32
  %7322 = ashr exact i64 %7321, 32
  store i64 %7322, i64* %RCX.i355, align 8
  store %struct.Memory* %loadMem_44f1b5, %struct.Memory** %MEMORY
  %loadMem_44f1b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7324 = getelementptr inbounds %struct.GPR, %struct.GPR* %7323, i32 0, i32 33
  %7325 = getelementptr inbounds %struct.Reg, %struct.Reg* %7324, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %7325 to i64*
  %7326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7327 = getelementptr inbounds %struct.GPR, %struct.GPR* %7326, i32 0, i32 1
  %7328 = getelementptr inbounds %struct.Reg, %struct.Reg* %7327, i32 0, i32 0
  %RAX.i351 = bitcast %union.anon* %7328 to i64*
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7330 = getelementptr inbounds %struct.GPR, %struct.GPR* %7329, i32 0, i32 5
  %7331 = getelementptr inbounds %struct.Reg, %struct.Reg* %7330, i32 0, i32 0
  %RCX.i352 = bitcast %union.anon* %7331 to i64*
  %7332 = load i64, i64* %RCX.i352
  %7333 = add i64 %7332, 12099168
  %7334 = load i64, i64* %PC.i350
  %7335 = add i64 %7334, 8
  store i64 %7335, i64* %PC.i350
  %7336 = inttoptr i64 %7333 to i8*
  %7337 = load i8, i8* %7336
  %7338 = zext i8 %7337 to i64
  store i64 %7338, i64* %RAX.i351, align 8
  store %struct.Memory* %loadMem_44f1b8, %struct.Memory** %MEMORY
  %loadMem_44f1c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7340 = getelementptr inbounds %struct.GPR, %struct.GPR* %7339, i32 0, i32 33
  %7341 = getelementptr inbounds %struct.Reg, %struct.Reg* %7340, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %7341 to i64*
  %7342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7343 = getelementptr inbounds %struct.GPR, %struct.GPR* %7342, i32 0, i32 1
  %7344 = getelementptr inbounds %struct.Reg, %struct.Reg* %7343, i32 0, i32 0
  %EAX.i349 = bitcast %union.anon* %7344 to i32*
  %7345 = load i32, i32* %EAX.i349
  %7346 = zext i32 %7345 to i64
  %7347 = load i64, i64* %PC.i348
  %7348 = add i64 %7347, 3
  store i64 %7348, i64* %PC.i348
  %7349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7349, align 1
  %7350 = and i32 %7345, 255
  %7351 = call i32 @llvm.ctpop.i32(i32 %7350)
  %7352 = trunc i32 %7351 to i8
  %7353 = and i8 %7352, 1
  %7354 = xor i8 %7353, 1
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7354, i8* %7355, align 1
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7356, align 1
  %7357 = icmp eq i32 %7345, 0
  %7358 = zext i1 %7357 to i8
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7358, i8* %7359, align 1
  %7360 = lshr i32 %7345, 31
  %7361 = trunc i32 %7360 to i8
  %7362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7361, i8* %7362, align 1
  %7363 = lshr i32 %7345, 31
  %7364 = xor i32 %7360, %7363
  %7365 = add i32 %7364, %7363
  %7366 = icmp eq i32 %7365, 2
  %7367 = zext i1 %7366 to i8
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7367, i8* %7368, align 1
  store %struct.Memory* %loadMem_44f1c0, %struct.Memory** %MEMORY
  %loadMem_44f1c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7370 = getelementptr inbounds %struct.GPR, %struct.GPR* %7369, i32 0, i32 33
  %7371 = getelementptr inbounds %struct.Reg, %struct.Reg* %7370, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %7371 to i64*
  %7372 = load i64, i64* %PC.i347
  %7373 = add i64 %7372, 50
  %7374 = load i64, i64* %PC.i347
  %7375 = add i64 %7374, 6
  %7376 = load i64, i64* %PC.i347
  %7377 = add i64 %7376, 6
  store i64 %7377, i64* %PC.i347
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7379 = load i8, i8* %7378, align 1
  %7380 = icmp eq i8 %7379, 0
  %7381 = zext i1 %7380 to i8
  store i8 %7381, i8* %BRANCH_TAKEN, align 1
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7383 = select i1 %7380, i64 %7373, i64 %7375
  store i64 %7383, i64* %7382, align 8
  store %struct.Memory* %loadMem_44f1c3, %struct.Memory** %MEMORY
  %loadBr_44f1c3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f1c3 = icmp eq i8 %loadBr_44f1c3, 1
  br i1 %cmpBr_44f1c3, label %block_.L_44f1f5, label %block_44f1c9

block_44f1c9:                                     ; preds = %block_.L_44f1ac
  %loadMem_44f1c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7385 = getelementptr inbounds %struct.GPR, %struct.GPR* %7384, i32 0, i32 33
  %7386 = getelementptr inbounds %struct.Reg, %struct.Reg* %7385, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %7386 to i64*
  %7387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7388 = getelementptr inbounds %struct.GPR, %struct.GPR* %7387, i32 0, i32 1
  %7389 = getelementptr inbounds %struct.Reg, %struct.Reg* %7388, i32 0, i32 0
  %RAX.i345 = bitcast %union.anon* %7389 to i64*
  %7390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7391 = getelementptr inbounds %struct.GPR, %struct.GPR* %7390, i32 0, i32 15
  %7392 = getelementptr inbounds %struct.Reg, %struct.Reg* %7391, i32 0, i32 0
  %RBP.i346 = bitcast %union.anon* %7392 to i64*
  %7393 = load i64, i64* %RBP.i346
  %7394 = sub i64 %7393, 436
  %7395 = load i64, i64* %PC.i344
  %7396 = add i64 %7395, 6
  store i64 %7396, i64* %PC.i344
  %7397 = inttoptr i64 %7394 to i32*
  %7398 = load i32, i32* %7397
  %7399 = zext i32 %7398 to i64
  store i64 %7399, i64* %RAX.i345, align 8
  store %struct.Memory* %loadMem_44f1c9, %struct.Memory** %MEMORY
  %loadMem_44f1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 33
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %7402 to i64*
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7404 = getelementptr inbounds %struct.GPR, %struct.GPR* %7403, i32 0, i32 1
  %7405 = getelementptr inbounds %struct.Reg, %struct.Reg* %7404, i32 0, i32 0
  %RAX.i343 = bitcast %union.anon* %7405 to i64*
  %7406 = load i64, i64* %RAX.i343
  %7407 = load i64, i64* %PC.i342
  %7408 = add i64 %7407, 3
  store i64 %7408, i64* %PC.i342
  %7409 = trunc i64 %7406 to i32
  %7410 = add i32 1, %7409
  %7411 = zext i32 %7410 to i64
  store i64 %7411, i64* %RAX.i343, align 8
  %7412 = icmp ult i32 %7410, %7409
  %7413 = icmp ult i32 %7410, 1
  %7414 = or i1 %7412, %7413
  %7415 = zext i1 %7414 to i8
  %7416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7415, i8* %7416, align 1
  %7417 = and i32 %7410, 255
  %7418 = call i32 @llvm.ctpop.i32(i32 %7417)
  %7419 = trunc i32 %7418 to i8
  %7420 = and i8 %7419, 1
  %7421 = xor i8 %7420, 1
  %7422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7421, i8* %7422, align 1
  %7423 = xor i64 1, %7406
  %7424 = trunc i64 %7423 to i32
  %7425 = xor i32 %7424, %7410
  %7426 = lshr i32 %7425, 4
  %7427 = trunc i32 %7426 to i8
  %7428 = and i8 %7427, 1
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7428, i8* %7429, align 1
  %7430 = icmp eq i32 %7410, 0
  %7431 = zext i1 %7430 to i8
  %7432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7431, i8* %7432, align 1
  %7433 = lshr i32 %7410, 31
  %7434 = trunc i32 %7433 to i8
  %7435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7434, i8* %7435, align 1
  %7436 = lshr i32 %7409, 31
  %7437 = xor i32 %7433, %7436
  %7438 = add i32 %7437, %7433
  %7439 = icmp eq i32 %7438, 2
  %7440 = zext i1 %7439 to i8
  %7441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7440, i8* %7441, align 1
  store %struct.Memory* %loadMem_44f1cf, %struct.Memory** %MEMORY
  %loadMem_44f1d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7443 = getelementptr inbounds %struct.GPR, %struct.GPR* %7442, i32 0, i32 33
  %7444 = getelementptr inbounds %struct.Reg, %struct.Reg* %7443, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %7444 to i64*
  %7445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7446 = getelementptr inbounds %struct.GPR, %struct.GPR* %7445, i32 0, i32 1
  %7447 = getelementptr inbounds %struct.Reg, %struct.Reg* %7446, i32 0, i32 0
  %EAX.i340 = bitcast %union.anon* %7447 to i32*
  %7448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7449 = getelementptr inbounds %struct.GPR, %struct.GPR* %7448, i32 0, i32 5
  %7450 = getelementptr inbounds %struct.Reg, %struct.Reg* %7449, i32 0, i32 0
  %RCX.i341 = bitcast %union.anon* %7450 to i64*
  %7451 = load i32, i32* %EAX.i340
  %7452 = zext i32 %7451 to i64
  %7453 = load i64, i64* %PC.i339
  %7454 = add i64 %7453, 3
  store i64 %7454, i64* %PC.i339
  %7455 = shl i64 %7452, 32
  %7456 = ashr exact i64 %7455, 32
  store i64 %7456, i64* %RCX.i341, align 8
  store %struct.Memory* %loadMem_44f1d2, %struct.Memory** %MEMORY
  %loadMem_44f1d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7458 = getelementptr inbounds %struct.GPR, %struct.GPR* %7457, i32 0, i32 33
  %7459 = getelementptr inbounds %struct.Reg, %struct.Reg* %7458, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %7459 to i64*
  %7460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7461 = getelementptr inbounds %struct.GPR, %struct.GPR* %7460, i32 0, i32 1
  %7462 = getelementptr inbounds %struct.Reg, %struct.Reg* %7461, i32 0, i32 0
  %RAX.i336 = bitcast %union.anon* %7462 to i64*
  %7463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7464 = getelementptr inbounds %struct.GPR, %struct.GPR* %7463, i32 0, i32 5
  %7465 = getelementptr inbounds %struct.Reg, %struct.Reg* %7464, i32 0, i32 0
  %RCX.i337 = bitcast %union.anon* %7465 to i64*
  %7466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7467 = getelementptr inbounds %struct.GPR, %struct.GPR* %7466, i32 0, i32 15
  %7468 = getelementptr inbounds %struct.Reg, %struct.Reg* %7467, i32 0, i32 0
  %RBP.i338 = bitcast %union.anon* %7468 to i64*
  %7469 = load i64, i64* %RBP.i338
  %7470 = load i64, i64* %RCX.i337
  %7471 = add i64 %7469, -432
  %7472 = add i64 %7471, %7470
  %7473 = load i64, i64* %PC.i335
  %7474 = add i64 %7473, 8
  store i64 %7474, i64* %PC.i335
  %7475 = inttoptr i64 %7472 to i8*
  %7476 = load i8, i8* %7475
  %7477 = sext i8 %7476 to i64
  %7478 = and i64 %7477, 4294967295
  store i64 %7478, i64* %RAX.i336, align 8
  store %struct.Memory* %loadMem_44f1d5, %struct.Memory** %MEMORY
  %loadMem_44f1dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7480 = getelementptr inbounds %struct.GPR, %struct.GPR* %7479, i32 0, i32 33
  %7481 = getelementptr inbounds %struct.Reg, %struct.Reg* %7480, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %7481 to i64*
  %7482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7483 = getelementptr inbounds %struct.GPR, %struct.GPR* %7482, i32 0, i32 1
  %7484 = getelementptr inbounds %struct.Reg, %struct.Reg* %7483, i32 0, i32 0
  %EAX.i334 = bitcast %union.anon* %7484 to i32*
  %7485 = load i32, i32* %EAX.i334
  %7486 = zext i32 %7485 to i64
  %7487 = load i64, i64* %PC.i333
  %7488 = add i64 %7487, 3
  store i64 %7488, i64* %PC.i333
  %7489 = sub i32 %7485, 2
  %7490 = icmp ult i32 %7485, 2
  %7491 = zext i1 %7490 to i8
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7491, i8* %7492, align 1
  %7493 = and i32 %7489, 255
  %7494 = call i32 @llvm.ctpop.i32(i32 %7493)
  %7495 = trunc i32 %7494 to i8
  %7496 = and i8 %7495, 1
  %7497 = xor i8 %7496, 1
  %7498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7497, i8* %7498, align 1
  %7499 = xor i64 2, %7486
  %7500 = trunc i64 %7499 to i32
  %7501 = xor i32 %7500, %7489
  %7502 = lshr i32 %7501, 4
  %7503 = trunc i32 %7502 to i8
  %7504 = and i8 %7503, 1
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7504, i8* %7505, align 1
  %7506 = icmp eq i32 %7489, 0
  %7507 = zext i1 %7506 to i8
  %7508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7507, i8* %7508, align 1
  %7509 = lshr i32 %7489, 31
  %7510 = trunc i32 %7509 to i8
  %7511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7510, i8* %7511, align 1
  %7512 = lshr i32 %7485, 31
  %7513 = xor i32 %7509, %7512
  %7514 = add i32 %7513, %7512
  %7515 = icmp eq i32 %7514, 2
  %7516 = zext i1 %7515 to i8
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7516, i8* %7517, align 1
  store %struct.Memory* %loadMem_44f1dd, %struct.Memory** %MEMORY
  %loadMem_44f1e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7519 = getelementptr inbounds %struct.GPR, %struct.GPR* %7518, i32 0, i32 33
  %7520 = getelementptr inbounds %struct.Reg, %struct.Reg* %7519, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %7520 to i64*
  %7521 = load i64, i64* %PC.i332
  %7522 = add i64 %7521, 21
  %7523 = load i64, i64* %PC.i332
  %7524 = add i64 %7523, 6
  %7525 = load i64, i64* %PC.i332
  %7526 = add i64 %7525, 6
  store i64 %7526, i64* %PC.i332
  %7527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7528 = load i8, i8* %7527, align 1
  %7529 = icmp eq i8 %7528, 0
  %7530 = zext i1 %7529 to i8
  store i8 %7530, i8* %BRANCH_TAKEN, align 1
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7532 = select i1 %7529, i64 %7522, i64 %7524
  store i64 %7532, i64* %7531, align 8
  store %struct.Memory* %loadMem_44f1e0, %struct.Memory** %MEMORY
  %loadBr_44f1e0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f1e0 = icmp eq i8 %loadBr_44f1e0, 1
  br i1 %cmpBr_44f1e0, label %block_.L_44f1f5, label %block_.L_44f1e6

block_.L_44f1e6:                                  ; preds = %block_44f1c9, %block_44f18f, %block_44f155, %block_44f11b
  %loadMem_44f1e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7534 = getelementptr inbounds %struct.GPR, %struct.GPR* %7533, i32 0, i32 33
  %7535 = getelementptr inbounds %struct.Reg, %struct.Reg* %7534, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %7535 to i64*
  %7536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7537 = getelementptr inbounds %struct.GPR, %struct.GPR* %7536, i32 0, i32 1
  %7538 = getelementptr inbounds %struct.Reg, %struct.Reg* %7537, i32 0, i32 0
  %RAX.i330 = bitcast %union.anon* %7538 to i64*
  %7539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7540 = getelementptr inbounds %struct.GPR, %struct.GPR* %7539, i32 0, i32 15
  %7541 = getelementptr inbounds %struct.Reg, %struct.Reg* %7540, i32 0, i32 0
  %RBP.i331 = bitcast %union.anon* %7541 to i64*
  %7542 = load i64, i64* %RBP.i331
  %7543 = sub i64 %7542, 436
  %7544 = load i64, i64* %PC.i329
  %7545 = add i64 %7544, 7
  store i64 %7545, i64* %PC.i329
  %7546 = inttoptr i64 %7543 to i32*
  %7547 = load i32, i32* %7546
  %7548 = sext i32 %7547 to i64
  store i64 %7548, i64* %RAX.i330, align 8
  store %struct.Memory* %loadMem_44f1e6, %struct.Memory** %MEMORY
  %loadMem_44f1ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %7549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7550 = getelementptr inbounds %struct.GPR, %struct.GPR* %7549, i32 0, i32 33
  %7551 = getelementptr inbounds %struct.Reg, %struct.Reg* %7550, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %7551 to i64*
  %7552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7553 = getelementptr inbounds %struct.GPR, %struct.GPR* %7552, i32 0, i32 1
  %7554 = getelementptr inbounds %struct.Reg, %struct.Reg* %7553, i32 0, i32 0
  %RAX.i327 = bitcast %union.anon* %7554 to i64*
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7556 = getelementptr inbounds %struct.GPR, %struct.GPR* %7555, i32 0, i32 15
  %7557 = getelementptr inbounds %struct.Reg, %struct.Reg* %7556, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %7557 to i64*
  %7558 = load i64, i64* %RBP.i328
  %7559 = load i64, i64* %RAX.i327
  %7560 = add i64 %7558, -432
  %7561 = add i64 %7560, %7559
  %7562 = load i64, i64* %PC.i326
  %7563 = add i64 %7562, 8
  store i64 %7563, i64* %PC.i326
  %7564 = inttoptr i64 %7561 to i8*
  store i8 3, i8* %7564
  store %struct.Memory* %loadMem_44f1ed, %struct.Memory** %MEMORY
  br label %block_.L_44f1f5

block_.L_44f1f5:                                  ; preds = %block_.L_44f1e6, %block_44f1c9, %block_.L_44f1ac
  %loadMem_44f1f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7566 = getelementptr inbounds %struct.GPR, %struct.GPR* %7565, i32 0, i32 33
  %7567 = getelementptr inbounds %struct.Reg, %struct.Reg* %7566, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %7567 to i64*
  %7568 = load i64, i64* %PC.i325
  %7569 = add i64 %7568, 5
  %7570 = load i64, i64* %PC.i325
  %7571 = add i64 %7570, 5
  store i64 %7571, i64* %PC.i325
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7569, i64* %7572, align 8
  store %struct.Memory* %loadMem_44f1f5, %struct.Memory** %MEMORY
  br label %block_.L_44f1fa

block_.L_44f1fa:                                  ; preds = %block_.L_44f1f5, %block_.L_44f0f9
  %loadMem_44f1fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7574 = getelementptr inbounds %struct.GPR, %struct.GPR* %7573, i32 0, i32 33
  %7575 = getelementptr inbounds %struct.Reg, %struct.Reg* %7574, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %7575 to i64*
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7577 = getelementptr inbounds %struct.GPR, %struct.GPR* %7576, i32 0, i32 1
  %7578 = getelementptr inbounds %struct.Reg, %struct.Reg* %7577, i32 0, i32 0
  %RAX.i323 = bitcast %union.anon* %7578 to i64*
  %7579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7580 = getelementptr inbounds %struct.GPR, %struct.GPR* %7579, i32 0, i32 15
  %7581 = getelementptr inbounds %struct.Reg, %struct.Reg* %7580, i32 0, i32 0
  %RBP.i324 = bitcast %union.anon* %7581 to i64*
  %7582 = load i64, i64* %RBP.i324
  %7583 = sub i64 %7582, 436
  %7584 = load i64, i64* %PC.i322
  %7585 = add i64 %7584, 6
  store i64 %7585, i64* %PC.i322
  %7586 = inttoptr i64 %7583 to i32*
  %7587 = load i32, i32* %7586
  %7588 = zext i32 %7587 to i64
  store i64 %7588, i64* %RAX.i323, align 8
  store %struct.Memory* %loadMem_44f1fa, %struct.Memory** %MEMORY
  %loadMem_44f200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7590 = getelementptr inbounds %struct.GPR, %struct.GPR* %7589, i32 0, i32 33
  %7591 = getelementptr inbounds %struct.Reg, %struct.Reg* %7590, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %7591 to i64*
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7593 = getelementptr inbounds %struct.GPR, %struct.GPR* %7592, i32 0, i32 1
  %7594 = getelementptr inbounds %struct.Reg, %struct.Reg* %7593, i32 0, i32 0
  %RAX.i321 = bitcast %union.anon* %7594 to i64*
  %7595 = load i64, i64* %RAX.i321
  %7596 = load i64, i64* %PC.i320
  %7597 = add i64 %7596, 3
  store i64 %7597, i64* %PC.i320
  %7598 = trunc i64 %7595 to i32
  %7599 = add i32 1, %7598
  %7600 = zext i32 %7599 to i64
  store i64 %7600, i64* %RAX.i321, align 8
  %7601 = icmp ult i32 %7599, %7598
  %7602 = icmp ult i32 %7599, 1
  %7603 = or i1 %7601, %7602
  %7604 = zext i1 %7603 to i8
  %7605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7604, i8* %7605, align 1
  %7606 = and i32 %7599, 255
  %7607 = call i32 @llvm.ctpop.i32(i32 %7606)
  %7608 = trunc i32 %7607 to i8
  %7609 = and i8 %7608, 1
  %7610 = xor i8 %7609, 1
  %7611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7610, i8* %7611, align 1
  %7612 = xor i64 1, %7595
  %7613 = trunc i64 %7612 to i32
  %7614 = xor i32 %7613, %7599
  %7615 = lshr i32 %7614, 4
  %7616 = trunc i32 %7615 to i8
  %7617 = and i8 %7616, 1
  %7618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7617, i8* %7618, align 1
  %7619 = icmp eq i32 %7599, 0
  %7620 = zext i1 %7619 to i8
  %7621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7620, i8* %7621, align 1
  %7622 = lshr i32 %7599, 31
  %7623 = trunc i32 %7622 to i8
  %7624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7623, i8* %7624, align 1
  %7625 = lshr i32 %7598, 31
  %7626 = xor i32 %7622, %7625
  %7627 = add i32 %7626, %7622
  %7628 = icmp eq i32 %7627, 2
  %7629 = zext i1 %7628 to i8
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7629, i8* %7630, align 1
  store %struct.Memory* %loadMem_44f200, %struct.Memory** %MEMORY
  %loadMem_44f203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7632 = getelementptr inbounds %struct.GPR, %struct.GPR* %7631, i32 0, i32 33
  %7633 = getelementptr inbounds %struct.Reg, %struct.Reg* %7632, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %7633 to i64*
  %7634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7635 = getelementptr inbounds %struct.GPR, %struct.GPR* %7634, i32 0, i32 1
  %7636 = getelementptr inbounds %struct.Reg, %struct.Reg* %7635, i32 0, i32 0
  %EAX.i318 = bitcast %union.anon* %7636 to i32*
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7638 = getelementptr inbounds %struct.GPR, %struct.GPR* %7637, i32 0, i32 15
  %7639 = getelementptr inbounds %struct.Reg, %struct.Reg* %7638, i32 0, i32 0
  %RBP.i319 = bitcast %union.anon* %7639 to i64*
  %7640 = load i64, i64* %RBP.i319
  %7641 = sub i64 %7640, 436
  %7642 = load i32, i32* %EAX.i318
  %7643 = zext i32 %7642 to i64
  %7644 = load i64, i64* %PC.i317
  %7645 = add i64 %7644, 6
  store i64 %7645, i64* %PC.i317
  %7646 = inttoptr i64 %7641 to i32*
  store i32 %7642, i32* %7646
  store %struct.Memory* %loadMem_44f203, %struct.Memory** %MEMORY
  %loadMem_44f209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7648 = getelementptr inbounds %struct.GPR, %struct.GPR* %7647, i32 0, i32 33
  %7649 = getelementptr inbounds %struct.Reg, %struct.Reg* %7648, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %7649 to i64*
  %7650 = load i64, i64* %PC.i316
  %7651 = add i64 %7650, -360
  %7652 = load i64, i64* %PC.i316
  %7653 = add i64 %7652, 5
  store i64 %7653, i64* %PC.i316
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7651, i64* %7654, align 8
  store %struct.Memory* %loadMem_44f209, %struct.Memory** %MEMORY
  br label %block_.L_44f0a1

block_.L_44f20e:                                  ; preds = %block_.L_44f0a1
  %loadMem_44f20e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7656 = getelementptr inbounds %struct.GPR, %struct.GPR* %7655, i32 0, i32 33
  %7657 = getelementptr inbounds %struct.Reg, %struct.Reg* %7656, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %7657 to i64*
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7659 = getelementptr inbounds %struct.GPR, %struct.GPR* %7658, i32 0, i32 15
  %7660 = getelementptr inbounds %struct.Reg, %struct.Reg* %7659, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %7660 to i64*
  %7661 = load i64, i64* %RBP.i315
  %7662 = sub i64 %7661, 436
  %7663 = load i64, i64* %PC.i314
  %7664 = add i64 %7663, 10
  store i64 %7664, i64* %PC.i314
  %7665 = inttoptr i64 %7662 to i32*
  store i32 21, i32* %7665
  store %struct.Memory* %loadMem_44f20e, %struct.Memory** %MEMORY
  br label %block_.L_44f218

block_.L_44f218:                                  ; preds = %block_.L_44f3d2, %block_.L_44f20e
  %loadMem_44f218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7667 = getelementptr inbounds %struct.GPR, %struct.GPR* %7666, i32 0, i32 33
  %7668 = getelementptr inbounds %struct.Reg, %struct.Reg* %7667, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %7668 to i64*
  %7669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7670 = getelementptr inbounds %struct.GPR, %struct.GPR* %7669, i32 0, i32 15
  %7671 = getelementptr inbounds %struct.Reg, %struct.Reg* %7670, i32 0, i32 0
  %RBP.i313 = bitcast %union.anon* %7671 to i64*
  %7672 = load i64, i64* %RBP.i313
  %7673 = sub i64 %7672, 436
  %7674 = load i64, i64* %PC.i312
  %7675 = add i64 %7674, 10
  store i64 %7675, i64* %PC.i312
  %7676 = inttoptr i64 %7673 to i32*
  %7677 = load i32, i32* %7676
  %7678 = sub i32 %7677, 400
  %7679 = icmp ult i32 %7677, 400
  %7680 = zext i1 %7679 to i8
  %7681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7680, i8* %7681, align 1
  %7682 = and i32 %7678, 255
  %7683 = call i32 @llvm.ctpop.i32(i32 %7682)
  %7684 = trunc i32 %7683 to i8
  %7685 = and i8 %7684, 1
  %7686 = xor i8 %7685, 1
  %7687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7686, i8* %7687, align 1
  %7688 = xor i32 %7677, 400
  %7689 = xor i32 %7688, %7678
  %7690 = lshr i32 %7689, 4
  %7691 = trunc i32 %7690 to i8
  %7692 = and i8 %7691, 1
  %7693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7692, i8* %7693, align 1
  %7694 = icmp eq i32 %7678, 0
  %7695 = zext i1 %7694 to i8
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7695, i8* %7696, align 1
  %7697 = lshr i32 %7678, 31
  %7698 = trunc i32 %7697 to i8
  %7699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7698, i8* %7699, align 1
  %7700 = lshr i32 %7677, 31
  %7701 = xor i32 %7697, %7700
  %7702 = add i32 %7701, %7700
  %7703 = icmp eq i32 %7702, 2
  %7704 = zext i1 %7703 to i8
  %7705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7704, i8* %7705, align 1
  store %struct.Memory* %loadMem_44f218, %struct.Memory** %MEMORY
  %loadMem_44f222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7707 = getelementptr inbounds %struct.GPR, %struct.GPR* %7706, i32 0, i32 33
  %7708 = getelementptr inbounds %struct.Reg, %struct.Reg* %7707, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %7708 to i64*
  %7709 = load i64, i64* %PC.i311
  %7710 = add i64 %7709, 452
  %7711 = load i64, i64* %PC.i311
  %7712 = add i64 %7711, 6
  %7713 = load i64, i64* %PC.i311
  %7714 = add i64 %7713, 6
  store i64 %7714, i64* %PC.i311
  %7715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7716 = load i8, i8* %7715, align 1
  %7717 = icmp ne i8 %7716, 0
  %7718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7719 = load i8, i8* %7718, align 1
  %7720 = icmp ne i8 %7719, 0
  %7721 = xor i1 %7717, %7720
  %7722 = xor i1 %7721, true
  %7723 = zext i1 %7722 to i8
  store i8 %7723, i8* %BRANCH_TAKEN, align 1
  %7724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7725 = select i1 %7721, i64 %7712, i64 %7710
  store i64 %7725, i64* %7724, align 8
  store %struct.Memory* %loadMem_44f222, %struct.Memory** %MEMORY
  %loadBr_44f222 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f222 = icmp eq i8 %loadBr_44f222, 1
  br i1 %cmpBr_44f222, label %block_.L_44f3e6, label %block_44f228

block_44f228:                                     ; preds = %block_.L_44f218
  %loadMem_44f228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7727 = getelementptr inbounds %struct.GPR, %struct.GPR* %7726, i32 0, i32 33
  %7728 = getelementptr inbounds %struct.Reg, %struct.Reg* %7727, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %7728 to i64*
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7730 = getelementptr inbounds %struct.GPR, %struct.GPR* %7729, i32 0, i32 1
  %7731 = getelementptr inbounds %struct.Reg, %struct.Reg* %7730, i32 0, i32 0
  %RAX.i309 = bitcast %union.anon* %7731 to i64*
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7733 = getelementptr inbounds %struct.GPR, %struct.GPR* %7732, i32 0, i32 15
  %7734 = getelementptr inbounds %struct.Reg, %struct.Reg* %7733, i32 0, i32 0
  %RBP.i310 = bitcast %union.anon* %7734 to i64*
  %7735 = load i64, i64* %RBP.i310
  %7736 = sub i64 %7735, 436
  %7737 = load i64, i64* %PC.i308
  %7738 = add i64 %7737, 7
  store i64 %7738, i64* %PC.i308
  %7739 = inttoptr i64 %7736 to i32*
  %7740 = load i32, i32* %7739
  %7741 = sext i32 %7740 to i64
  store i64 %7741, i64* %RAX.i309, align 8
  store %struct.Memory* %loadMem_44f228, %struct.Memory** %MEMORY
  %loadMem_44f22f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7743 = getelementptr inbounds %struct.GPR, %struct.GPR* %7742, i32 0, i32 33
  %7744 = getelementptr inbounds %struct.Reg, %struct.Reg* %7743, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %7744 to i64*
  %7745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7746 = getelementptr inbounds %struct.GPR, %struct.GPR* %7745, i32 0, i32 1
  %7747 = getelementptr inbounds %struct.Reg, %struct.Reg* %7746, i32 0, i32 0
  %RAX.i306 = bitcast %union.anon* %7747 to i64*
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7749 = getelementptr inbounds %struct.GPR, %struct.GPR* %7748, i32 0, i32 5
  %7750 = getelementptr inbounds %struct.Reg, %struct.Reg* %7749, i32 0, i32 0
  %RCX.i307 = bitcast %union.anon* %7750 to i64*
  %7751 = load i64, i64* %RAX.i306
  %7752 = add i64 %7751, 12099168
  %7753 = load i64, i64* %PC.i305
  %7754 = add i64 %7753, 8
  store i64 %7754, i64* %PC.i305
  %7755 = inttoptr i64 %7752 to i8*
  %7756 = load i8, i8* %7755
  %7757 = zext i8 %7756 to i64
  store i64 %7757, i64* %RCX.i307, align 8
  store %struct.Memory* %loadMem_44f22f, %struct.Memory** %MEMORY
  %loadMem_44f237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7759 = getelementptr inbounds %struct.GPR, %struct.GPR* %7758, i32 0, i32 33
  %7760 = getelementptr inbounds %struct.Reg, %struct.Reg* %7759, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %7760 to i64*
  %7761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7762 = getelementptr inbounds %struct.GPR, %struct.GPR* %7761, i32 0, i32 5
  %7763 = getelementptr inbounds %struct.Reg, %struct.Reg* %7762, i32 0, i32 0
  %ECX.i304 = bitcast %union.anon* %7763 to i32*
  %7764 = load i32, i32* %ECX.i304
  %7765 = zext i32 %7764 to i64
  %7766 = load i64, i64* %PC.i303
  %7767 = add i64 %7766, 3
  store i64 %7767, i64* %PC.i303
  %7768 = sub i32 %7764, 3
  %7769 = icmp ult i32 %7764, 3
  %7770 = zext i1 %7769 to i8
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7770, i8* %7771, align 1
  %7772 = and i32 %7768, 255
  %7773 = call i32 @llvm.ctpop.i32(i32 %7772)
  %7774 = trunc i32 %7773 to i8
  %7775 = and i8 %7774, 1
  %7776 = xor i8 %7775, 1
  %7777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7776, i8* %7777, align 1
  %7778 = xor i64 3, %7765
  %7779 = trunc i64 %7778 to i32
  %7780 = xor i32 %7779, %7768
  %7781 = lshr i32 %7780, 4
  %7782 = trunc i32 %7781 to i8
  %7783 = and i8 %7782, 1
  %7784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7783, i8* %7784, align 1
  %7785 = icmp eq i32 %7768, 0
  %7786 = zext i1 %7785 to i8
  %7787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7786, i8* %7787, align 1
  %7788 = lshr i32 %7768, 31
  %7789 = trunc i32 %7788 to i8
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7789, i8* %7790, align 1
  %7791 = lshr i32 %7764, 31
  %7792 = xor i32 %7788, %7791
  %7793 = add i32 %7792, %7791
  %7794 = icmp eq i32 %7793, 2
  %7795 = zext i1 %7794 to i8
  %7796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7795, i8* %7796, align 1
  store %struct.Memory* %loadMem_44f237, %struct.Memory** %MEMORY
  %loadMem_44f23a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7798 = getelementptr inbounds %struct.GPR, %struct.GPR* %7797, i32 0, i32 33
  %7799 = getelementptr inbounds %struct.Reg, %struct.Reg* %7798, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %7799 to i64*
  %7800 = load i64, i64* %PC.i302
  %7801 = add i64 %7800, 11
  %7802 = load i64, i64* %PC.i302
  %7803 = add i64 %7802, 6
  %7804 = load i64, i64* %PC.i302
  %7805 = add i64 %7804, 6
  store i64 %7805, i64* %PC.i302
  %7806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7807 = load i8, i8* %7806, align 1
  %7808 = icmp eq i8 %7807, 0
  %7809 = zext i1 %7808 to i8
  store i8 %7809, i8* %BRANCH_TAKEN, align 1
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7811 = select i1 %7808, i64 %7801, i64 %7803
  store i64 %7811, i64* %7810, align 8
  store %struct.Memory* %loadMem_44f23a, %struct.Memory** %MEMORY
  %loadBr_44f23a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f23a = icmp eq i8 %loadBr_44f23a, 1
  br i1 %cmpBr_44f23a, label %block_.L_44f245, label %block_44f240

block_44f240:                                     ; preds = %block_44f228
  %loadMem_44f240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7813 = getelementptr inbounds %struct.GPR, %struct.GPR* %7812, i32 0, i32 33
  %7814 = getelementptr inbounds %struct.Reg, %struct.Reg* %7813, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %7814 to i64*
  %7815 = load i64, i64* %PC.i301
  %7816 = add i64 %7815, 402
  %7817 = load i64, i64* %PC.i301
  %7818 = add i64 %7817, 5
  store i64 %7818, i64* %PC.i301
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7816, i64* %7819, align 8
  store %struct.Memory* %loadMem_44f240, %struct.Memory** %MEMORY
  br label %block_.L_44f3d2

block_.L_44f245:                                  ; preds = %block_44f228
  %loadMem_44f245 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7821 = getelementptr inbounds %struct.GPR, %struct.GPR* %7820, i32 0, i32 33
  %7822 = getelementptr inbounds %struct.Reg, %struct.Reg* %7821, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %7822 to i64*
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7824 = getelementptr inbounds %struct.GPR, %struct.GPR* %7823, i32 0, i32 1
  %7825 = getelementptr inbounds %struct.Reg, %struct.Reg* %7824, i32 0, i32 0
  %RAX.i299 = bitcast %union.anon* %7825 to i64*
  %7826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7827 = getelementptr inbounds %struct.GPR, %struct.GPR* %7826, i32 0, i32 15
  %7828 = getelementptr inbounds %struct.Reg, %struct.Reg* %7827, i32 0, i32 0
  %RBP.i300 = bitcast %union.anon* %7828 to i64*
  %7829 = load i64, i64* %RBP.i300
  %7830 = sub i64 %7829, 436
  %7831 = load i64, i64* %PC.i298
  %7832 = add i64 %7831, 7
  store i64 %7832, i64* %PC.i298
  %7833 = inttoptr i64 %7830 to i32*
  %7834 = load i32, i32* %7833
  %7835 = sext i32 %7834 to i64
  store i64 %7835, i64* %RAX.i299, align 8
  store %struct.Memory* %loadMem_44f245, %struct.Memory** %MEMORY
  %loadMem_44f24c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7837 = getelementptr inbounds %struct.GPR, %struct.GPR* %7836, i32 0, i32 33
  %7838 = getelementptr inbounds %struct.Reg, %struct.Reg* %7837, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %7838 to i64*
  %7839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7840 = getelementptr inbounds %struct.GPR, %struct.GPR* %7839, i32 0, i32 1
  %7841 = getelementptr inbounds %struct.Reg, %struct.Reg* %7840, i32 0, i32 0
  %RAX.i295 = bitcast %union.anon* %7841 to i64*
  %7842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7843 = getelementptr inbounds %struct.GPR, %struct.GPR* %7842, i32 0, i32 5
  %7844 = getelementptr inbounds %struct.Reg, %struct.Reg* %7843, i32 0, i32 0
  %RCX.i296 = bitcast %union.anon* %7844 to i64*
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7846 = getelementptr inbounds %struct.GPR, %struct.GPR* %7845, i32 0, i32 15
  %7847 = getelementptr inbounds %struct.Reg, %struct.Reg* %7846, i32 0, i32 0
  %RBP.i297 = bitcast %union.anon* %7847 to i64*
  %7848 = load i64, i64* %RBP.i297
  %7849 = load i64, i64* %RAX.i295
  %7850 = add i64 %7848, -432
  %7851 = add i64 %7850, %7849
  %7852 = load i64, i64* %PC.i294
  %7853 = add i64 %7852, 8
  store i64 %7853, i64* %PC.i294
  %7854 = inttoptr i64 %7851 to i8*
  %7855 = load i8, i8* %7854
  %7856 = sext i8 %7855 to i64
  %7857 = and i64 %7856, 4294967295
  store i64 %7857, i64* %RCX.i296, align 8
  store %struct.Memory* %loadMem_44f24c, %struct.Memory** %MEMORY
  %loadMem_44f254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7859 = getelementptr inbounds %struct.GPR, %struct.GPR* %7858, i32 0, i32 33
  %7860 = getelementptr inbounds %struct.Reg, %struct.Reg* %7859, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %7860 to i64*
  %7861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7862 = getelementptr inbounds %struct.GPR, %struct.GPR* %7861, i32 0, i32 5
  %7863 = getelementptr inbounds %struct.Reg, %struct.Reg* %7862, i32 0, i32 0
  %ECX.i293 = bitcast %union.anon* %7863 to i32*
  %7864 = load i32, i32* %ECX.i293
  %7865 = zext i32 %7864 to i64
  %7866 = load i64, i64* %PC.i292
  %7867 = add i64 %7866, 3
  store i64 %7867, i64* %PC.i292
  %7868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7868, align 1
  %7869 = and i32 %7864, 255
  %7870 = call i32 @llvm.ctpop.i32(i32 %7869)
  %7871 = trunc i32 %7870 to i8
  %7872 = and i8 %7871, 1
  %7873 = xor i8 %7872, 1
  %7874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7873, i8* %7874, align 1
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7875, align 1
  %7876 = icmp eq i32 %7864, 0
  %7877 = zext i1 %7876 to i8
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7877, i8* %7878, align 1
  %7879 = lshr i32 %7864, 31
  %7880 = trunc i32 %7879 to i8
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7880, i8* %7881, align 1
  %7882 = lshr i32 %7864, 31
  %7883 = xor i32 %7879, %7882
  %7884 = add i32 %7883, %7882
  %7885 = icmp eq i32 %7884, 2
  %7886 = zext i1 %7885 to i8
  %7887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7886, i8* %7887, align 1
  store %struct.Memory* %loadMem_44f254, %struct.Memory** %MEMORY
  %loadMem_44f257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7889 = getelementptr inbounds %struct.GPR, %struct.GPR* %7888, i32 0, i32 33
  %7890 = getelementptr inbounds %struct.Reg, %struct.Reg* %7889, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %7890 to i64*
  %7891 = load i64, i64* %PC.i291
  %7892 = add i64 %7891, 11
  %7893 = load i64, i64* %PC.i291
  %7894 = add i64 %7893, 6
  %7895 = load i64, i64* %PC.i291
  %7896 = add i64 %7895, 6
  store i64 %7896, i64* %PC.i291
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7898 = load i8, i8* %7897, align 1
  store i8 %7898, i8* %BRANCH_TAKEN, align 1
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7900 = icmp ne i8 %7898, 0
  %7901 = select i1 %7900, i64 %7892, i64 %7894
  store i64 %7901, i64* %7899, align 8
  store %struct.Memory* %loadMem_44f257, %struct.Memory** %MEMORY
  %loadBr_44f257 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f257 = icmp eq i8 %loadBr_44f257, 1
  br i1 %cmpBr_44f257, label %block_.L_44f262, label %block_44f25d

block_44f25d:                                     ; preds = %block_.L_44f245
  %loadMem_44f25d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 33
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %7904 to i64*
  %7905 = load i64, i64* %PC.i290
  %7906 = add i64 %7905, 373
  %7907 = load i64, i64* %PC.i290
  %7908 = add i64 %7907, 5
  store i64 %7908, i64* %PC.i290
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7906, i64* %7909, align 8
  store %struct.Memory* %loadMem_44f25d, %struct.Memory** %MEMORY
  br label %block_.L_44f3d2

block_.L_44f262:                                  ; preds = %block_.L_44f245
  %loadMem_44f262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7911 = getelementptr inbounds %struct.GPR, %struct.GPR* %7910, i32 0, i32 33
  %7912 = getelementptr inbounds %struct.Reg, %struct.Reg* %7911, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %7912 to i64*
  %7913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7914 = getelementptr inbounds %struct.GPR, %struct.GPR* %7913, i32 0, i32 1
  %7915 = getelementptr inbounds %struct.Reg, %struct.Reg* %7914, i32 0, i32 0
  %RAX.i288 = bitcast %union.anon* %7915 to i64*
  %7916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7917 = getelementptr inbounds %struct.GPR, %struct.GPR* %7916, i32 0, i32 15
  %7918 = getelementptr inbounds %struct.Reg, %struct.Reg* %7917, i32 0, i32 0
  %RBP.i289 = bitcast %union.anon* %7918 to i64*
  %7919 = load i64, i64* %RBP.i289
  %7920 = sub i64 %7919, 436
  %7921 = load i64, i64* %PC.i287
  %7922 = add i64 %7921, 6
  store i64 %7922, i64* %PC.i287
  %7923 = inttoptr i64 %7920 to i32*
  %7924 = load i32, i32* %7923
  %7925 = zext i32 %7924 to i64
  store i64 %7925, i64* %RAX.i288, align 8
  store %struct.Memory* %loadMem_44f262, %struct.Memory** %MEMORY
  %loadMem_44f268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 33
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %7928 to i64*
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7930 = getelementptr inbounds %struct.GPR, %struct.GPR* %7929, i32 0, i32 1
  %7931 = getelementptr inbounds %struct.Reg, %struct.Reg* %7930, i32 0, i32 0
  %RAX.i286 = bitcast %union.anon* %7931 to i64*
  %7932 = load i64, i64* %RAX.i286
  %7933 = load i64, i64* %PC.i285
  %7934 = add i64 %7933, 3
  store i64 %7934, i64* %PC.i285
  %7935 = trunc i64 %7932 to i32
  %7936 = add i32 20, %7935
  %7937 = zext i32 %7936 to i64
  store i64 %7937, i64* %RAX.i286, align 8
  %7938 = icmp ult i32 %7936, %7935
  %7939 = icmp ult i32 %7936, 20
  %7940 = or i1 %7938, %7939
  %7941 = zext i1 %7940 to i8
  %7942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7941, i8* %7942, align 1
  %7943 = and i32 %7936, 255
  %7944 = call i32 @llvm.ctpop.i32(i32 %7943)
  %7945 = trunc i32 %7944 to i8
  %7946 = and i8 %7945, 1
  %7947 = xor i8 %7946, 1
  %7948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7947, i8* %7948, align 1
  %7949 = xor i64 20, %7932
  %7950 = trunc i64 %7949 to i32
  %7951 = xor i32 %7950, %7936
  %7952 = lshr i32 %7951, 4
  %7953 = trunc i32 %7952 to i8
  %7954 = and i8 %7953, 1
  %7955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7954, i8* %7955, align 1
  %7956 = icmp eq i32 %7936, 0
  %7957 = zext i1 %7956 to i8
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7957, i8* %7958, align 1
  %7959 = lshr i32 %7936, 31
  %7960 = trunc i32 %7959 to i8
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7960, i8* %7961, align 1
  %7962 = lshr i32 %7935, 31
  %7963 = xor i32 %7959, %7962
  %7964 = add i32 %7963, %7959
  %7965 = icmp eq i32 %7964, 2
  %7966 = zext i1 %7965 to i8
  %7967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7966, i8* %7967, align 1
  store %struct.Memory* %loadMem_44f268, %struct.Memory** %MEMORY
  %loadMem_44f26b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7969 = getelementptr inbounds %struct.GPR, %struct.GPR* %7968, i32 0, i32 33
  %7970 = getelementptr inbounds %struct.Reg, %struct.Reg* %7969, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %7970 to i64*
  %7971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7972 = getelementptr inbounds %struct.GPR, %struct.GPR* %7971, i32 0, i32 1
  %7973 = getelementptr inbounds %struct.Reg, %struct.Reg* %7972, i32 0, i32 0
  %EAX.i283 = bitcast %union.anon* %7973 to i32*
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7975 = getelementptr inbounds %struct.GPR, %struct.GPR* %7974, i32 0, i32 5
  %7976 = getelementptr inbounds %struct.Reg, %struct.Reg* %7975, i32 0, i32 0
  %RCX.i284 = bitcast %union.anon* %7976 to i64*
  %7977 = load i32, i32* %EAX.i283
  %7978 = zext i32 %7977 to i64
  %7979 = load i64, i64* %PC.i282
  %7980 = add i64 %7979, 3
  store i64 %7980, i64* %PC.i282
  %7981 = shl i64 %7978, 32
  %7982 = ashr exact i64 %7981, 32
  store i64 %7982, i64* %RCX.i284, align 8
  store %struct.Memory* %loadMem_44f26b, %struct.Memory** %MEMORY
  %loadMem_44f26e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7984 = getelementptr inbounds %struct.GPR, %struct.GPR* %7983, i32 0, i32 33
  %7985 = getelementptr inbounds %struct.Reg, %struct.Reg* %7984, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %7985 to i64*
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7987 = getelementptr inbounds %struct.GPR, %struct.GPR* %7986, i32 0, i32 1
  %7988 = getelementptr inbounds %struct.Reg, %struct.Reg* %7987, i32 0, i32 0
  %RAX.i280 = bitcast %union.anon* %7988 to i64*
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7990 = getelementptr inbounds %struct.GPR, %struct.GPR* %7989, i32 0, i32 5
  %7991 = getelementptr inbounds %struct.Reg, %struct.Reg* %7990, i32 0, i32 0
  %RCX.i281 = bitcast %union.anon* %7991 to i64*
  %7992 = load i64, i64* %RCX.i281
  %7993 = add i64 %7992, 12099168
  %7994 = load i64, i64* %PC.i279
  %7995 = add i64 %7994, 8
  store i64 %7995, i64* %PC.i279
  %7996 = inttoptr i64 %7993 to i8*
  %7997 = load i8, i8* %7996
  %7998 = zext i8 %7997 to i64
  store i64 %7998, i64* %RAX.i280, align 8
  store %struct.Memory* %loadMem_44f26e, %struct.Memory** %MEMORY
  %loadMem_44f276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8000 = getelementptr inbounds %struct.GPR, %struct.GPR* %7999, i32 0, i32 33
  %8001 = getelementptr inbounds %struct.Reg, %struct.Reg* %8000, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %8001 to i64*
  %8002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8003 = getelementptr inbounds %struct.GPR, %struct.GPR* %8002, i32 0, i32 1
  %8004 = getelementptr inbounds %struct.Reg, %struct.Reg* %8003, i32 0, i32 0
  %EAX.i278 = bitcast %union.anon* %8004 to i32*
  %8005 = load i32, i32* %EAX.i278
  %8006 = zext i32 %8005 to i64
  %8007 = load i64, i64* %PC.i277
  %8008 = add i64 %8007, 3
  store i64 %8008, i64* %PC.i277
  %8009 = sub i32 %8005, 3
  %8010 = icmp ult i32 %8005, 3
  %8011 = zext i1 %8010 to i8
  %8012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8011, i8* %8012, align 1
  %8013 = and i32 %8009, 255
  %8014 = call i32 @llvm.ctpop.i32(i32 %8013)
  %8015 = trunc i32 %8014 to i8
  %8016 = and i8 %8015, 1
  %8017 = xor i8 %8016, 1
  %8018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8017, i8* %8018, align 1
  %8019 = xor i64 3, %8006
  %8020 = trunc i64 %8019 to i32
  %8021 = xor i32 %8020, %8009
  %8022 = lshr i32 %8021, 4
  %8023 = trunc i32 %8022 to i8
  %8024 = and i8 %8023, 1
  %8025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8024, i8* %8025, align 1
  %8026 = icmp eq i32 %8009, 0
  %8027 = zext i1 %8026 to i8
  %8028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8027, i8* %8028, align 1
  %8029 = lshr i32 %8009, 31
  %8030 = trunc i32 %8029 to i8
  %8031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8030, i8* %8031, align 1
  %8032 = lshr i32 %8005, 31
  %8033 = xor i32 %8029, %8032
  %8034 = add i32 %8033, %8032
  %8035 = icmp eq i32 %8034, 2
  %8036 = zext i1 %8035 to i8
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8036, i8* %8037, align 1
  store %struct.Memory* %loadMem_44f276, %struct.Memory** %MEMORY
  %loadMem_44f279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8039 = getelementptr inbounds %struct.GPR, %struct.GPR* %8038, i32 0, i32 33
  %8040 = getelementptr inbounds %struct.Reg, %struct.Reg* %8039, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %8040 to i64*
  %8041 = load i64, i64* %PC.i276
  %8042 = add i64 %8041, 64
  %8043 = load i64, i64* %PC.i276
  %8044 = add i64 %8043, 6
  %8045 = load i64, i64* %PC.i276
  %8046 = add i64 %8045, 6
  store i64 %8046, i64* %PC.i276
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8048 = load i8, i8* %8047, align 1
  store i8 %8048, i8* %BRANCH_TAKEN, align 1
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8050 = icmp ne i8 %8048, 0
  %8051 = select i1 %8050, i64 %8042, i64 %8044
  store i64 %8051, i64* %8049, align 8
  store %struct.Memory* %loadMem_44f279, %struct.Memory** %MEMORY
  %loadBr_44f279 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f279 = icmp eq i8 %loadBr_44f279, 1
  br i1 %cmpBr_44f279, label %block_.L_44f2b9, label %block_44f27f

block_44f27f:                                     ; preds = %block_.L_44f262
  %loadMem_44f27f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8053 = getelementptr inbounds %struct.GPR, %struct.GPR* %8052, i32 0, i32 33
  %8054 = getelementptr inbounds %struct.Reg, %struct.Reg* %8053, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %8054 to i64*
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8056 = getelementptr inbounds %struct.GPR, %struct.GPR* %8055, i32 0, i32 1
  %8057 = getelementptr inbounds %struct.Reg, %struct.Reg* %8056, i32 0, i32 0
  %RAX.i274 = bitcast %union.anon* %8057 to i64*
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8059 = getelementptr inbounds %struct.GPR, %struct.GPR* %8058, i32 0, i32 15
  %8060 = getelementptr inbounds %struct.Reg, %struct.Reg* %8059, i32 0, i32 0
  %RBP.i275 = bitcast %union.anon* %8060 to i64*
  %8061 = load i64, i64* %RBP.i275
  %8062 = sub i64 %8061, 436
  %8063 = load i64, i64* %PC.i273
  %8064 = add i64 %8063, 6
  store i64 %8064, i64* %PC.i273
  %8065 = inttoptr i64 %8062 to i32*
  %8066 = load i32, i32* %8065
  %8067 = zext i32 %8066 to i64
  store i64 %8067, i64* %RAX.i274, align 8
  store %struct.Memory* %loadMem_44f27f, %struct.Memory** %MEMORY
  %loadMem_44f285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8069 = getelementptr inbounds %struct.GPR, %struct.GPR* %8068, i32 0, i32 33
  %8070 = getelementptr inbounds %struct.Reg, %struct.Reg* %8069, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %8070 to i64*
  %8071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8072 = getelementptr inbounds %struct.GPR, %struct.GPR* %8071, i32 0, i32 1
  %8073 = getelementptr inbounds %struct.Reg, %struct.Reg* %8072, i32 0, i32 0
  %RAX.i272 = bitcast %union.anon* %8073 to i64*
  %8074 = load i64, i64* %RAX.i272
  %8075 = load i64, i64* %PC.i271
  %8076 = add i64 %8075, 3
  store i64 %8076, i64* %PC.i271
  %8077 = trunc i64 %8074 to i32
  %8078 = add i32 20, %8077
  %8079 = zext i32 %8078 to i64
  store i64 %8079, i64* %RAX.i272, align 8
  %8080 = icmp ult i32 %8078, %8077
  %8081 = icmp ult i32 %8078, 20
  %8082 = or i1 %8080, %8081
  %8083 = zext i1 %8082 to i8
  %8084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8083, i8* %8084, align 1
  %8085 = and i32 %8078, 255
  %8086 = call i32 @llvm.ctpop.i32(i32 %8085)
  %8087 = trunc i32 %8086 to i8
  %8088 = and i8 %8087, 1
  %8089 = xor i8 %8088, 1
  %8090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8089, i8* %8090, align 1
  %8091 = xor i64 20, %8074
  %8092 = trunc i64 %8091 to i32
  %8093 = xor i32 %8092, %8078
  %8094 = lshr i32 %8093, 4
  %8095 = trunc i32 %8094 to i8
  %8096 = and i8 %8095, 1
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8096, i8* %8097, align 1
  %8098 = icmp eq i32 %8078, 0
  %8099 = zext i1 %8098 to i8
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8099, i8* %8100, align 1
  %8101 = lshr i32 %8078, 31
  %8102 = trunc i32 %8101 to i8
  %8103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8102, i8* %8103, align 1
  %8104 = lshr i32 %8077, 31
  %8105 = xor i32 %8101, %8104
  %8106 = add i32 %8105, %8101
  %8107 = icmp eq i32 %8106, 2
  %8108 = zext i1 %8107 to i8
  %8109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8108, i8* %8109, align 1
  store %struct.Memory* %loadMem_44f285, %struct.Memory** %MEMORY
  %loadMem_44f288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8111 = getelementptr inbounds %struct.GPR, %struct.GPR* %8110, i32 0, i32 33
  %8112 = getelementptr inbounds %struct.Reg, %struct.Reg* %8111, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %8112 to i64*
  %8113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8114 = getelementptr inbounds %struct.GPR, %struct.GPR* %8113, i32 0, i32 1
  %8115 = getelementptr inbounds %struct.Reg, %struct.Reg* %8114, i32 0, i32 0
  %EAX.i269 = bitcast %union.anon* %8115 to i32*
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8117 = getelementptr inbounds %struct.GPR, %struct.GPR* %8116, i32 0, i32 5
  %8118 = getelementptr inbounds %struct.Reg, %struct.Reg* %8117, i32 0, i32 0
  %RCX.i270 = bitcast %union.anon* %8118 to i64*
  %8119 = load i32, i32* %EAX.i269
  %8120 = zext i32 %8119 to i64
  %8121 = load i64, i64* %PC.i268
  %8122 = add i64 %8121, 3
  store i64 %8122, i64* %PC.i268
  %8123 = shl i64 %8120, 32
  %8124 = ashr exact i64 %8123, 32
  store i64 %8124, i64* %RCX.i270, align 8
  store %struct.Memory* %loadMem_44f288, %struct.Memory** %MEMORY
  %loadMem_44f28b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8126 = getelementptr inbounds %struct.GPR, %struct.GPR* %8125, i32 0, i32 33
  %8127 = getelementptr inbounds %struct.Reg, %struct.Reg* %8126, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %8127 to i64*
  %8128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8129 = getelementptr inbounds %struct.GPR, %struct.GPR* %8128, i32 0, i32 1
  %8130 = getelementptr inbounds %struct.Reg, %struct.Reg* %8129, i32 0, i32 0
  %RAX.i265 = bitcast %union.anon* %8130 to i64*
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8132 = getelementptr inbounds %struct.GPR, %struct.GPR* %8131, i32 0, i32 5
  %8133 = getelementptr inbounds %struct.Reg, %struct.Reg* %8132, i32 0, i32 0
  %RCX.i266 = bitcast %union.anon* %8133 to i64*
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8135 = getelementptr inbounds %struct.GPR, %struct.GPR* %8134, i32 0, i32 15
  %8136 = getelementptr inbounds %struct.Reg, %struct.Reg* %8135, i32 0, i32 0
  %RBP.i267 = bitcast %union.anon* %8136 to i64*
  %8137 = load i64, i64* %RBP.i267
  %8138 = load i64, i64* %RCX.i266
  %8139 = add i64 %8137, -432
  %8140 = add i64 %8139, %8138
  %8141 = load i64, i64* %PC.i264
  %8142 = add i64 %8141, 8
  store i64 %8142, i64* %PC.i264
  %8143 = inttoptr i64 %8140 to i8*
  %8144 = load i8, i8* %8143
  %8145 = sext i8 %8144 to i64
  %8146 = and i64 %8145, 4294967295
  store i64 %8146, i64* %RAX.i265, align 8
  store %struct.Memory* %loadMem_44f28b, %struct.Memory** %MEMORY
  %loadMem_44f293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8148 = getelementptr inbounds %struct.GPR, %struct.GPR* %8147, i32 0, i32 33
  %8149 = getelementptr inbounds %struct.Reg, %struct.Reg* %8148, i32 0, i32 0
  %PC.i262 = bitcast %union.anon* %8149 to i64*
  %8150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8151 = getelementptr inbounds %struct.GPR, %struct.GPR* %8150, i32 0, i32 1
  %8152 = getelementptr inbounds %struct.Reg, %struct.Reg* %8151, i32 0, i32 0
  %EAX.i263 = bitcast %union.anon* %8152 to i32*
  %8153 = load i32, i32* %EAX.i263
  %8154 = zext i32 %8153 to i64
  %8155 = load i64, i64* %PC.i262
  %8156 = add i64 %8155, 3
  store i64 %8156, i64* %PC.i262
  %8157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8157, align 1
  %8158 = and i32 %8153, 255
  %8159 = call i32 @llvm.ctpop.i32(i32 %8158)
  %8160 = trunc i32 %8159 to i8
  %8161 = and i8 %8160, 1
  %8162 = xor i8 %8161, 1
  %8163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8162, i8* %8163, align 1
  %8164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8164, align 1
  %8165 = icmp eq i32 %8153, 0
  %8166 = zext i1 %8165 to i8
  %8167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8166, i8* %8167, align 1
  %8168 = lshr i32 %8153, 31
  %8169 = trunc i32 %8168 to i8
  %8170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8169, i8* %8170, align 1
  %8171 = lshr i32 %8153, 31
  %8172 = xor i32 %8168, %8171
  %8173 = add i32 %8172, %8171
  %8174 = icmp eq i32 %8173, 2
  %8175 = zext i1 %8174 to i8
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8175, i8* %8176, align 1
  store %struct.Memory* %loadMem_44f293, %struct.Memory** %MEMORY
  %loadMem_44f296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8178 = getelementptr inbounds %struct.GPR, %struct.GPR* %8177, i32 0, i32 33
  %8179 = getelementptr inbounds %struct.Reg, %struct.Reg* %8178, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %8179 to i64*
  %8180 = load i64, i64* %PC.i261
  %8181 = add i64 %8180, 35
  %8182 = load i64, i64* %PC.i261
  %8183 = add i64 %8182, 6
  %8184 = load i64, i64* %PC.i261
  %8185 = add i64 %8184, 6
  store i64 %8185, i64* %PC.i261
  %8186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8187 = load i8, i8* %8186, align 1
  %8188 = icmp ne i8 %8187, 0
  %8189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8190 = load i8, i8* %8189, align 1
  %8191 = icmp ne i8 %8190, 0
  %8192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8193 = load i8, i8* %8192, align 1
  %8194 = icmp ne i8 %8193, 0
  %8195 = xor i1 %8191, %8194
  %8196 = or i1 %8188, %8195
  %8197 = zext i1 %8196 to i8
  store i8 %8197, i8* %BRANCH_TAKEN, align 1
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8199 = select i1 %8196, i64 %8181, i64 %8183
  store i64 %8199, i64* %8198, align 8
  store %struct.Memory* %loadMem_44f296, %struct.Memory** %MEMORY
  %loadBr_44f296 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f296 = icmp eq i8 %loadBr_44f296, 1
  br i1 %cmpBr_44f296, label %block_.L_44f2b9, label %block_44f29c

block_44f29c:                                     ; preds = %block_44f27f
  %loadMem_44f29c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8201 = getelementptr inbounds %struct.GPR, %struct.GPR* %8200, i32 0, i32 33
  %8202 = getelementptr inbounds %struct.Reg, %struct.Reg* %8201, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %8202 to i64*
  %8203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8204 = getelementptr inbounds %struct.GPR, %struct.GPR* %8203, i32 0, i32 1
  %8205 = getelementptr inbounds %struct.Reg, %struct.Reg* %8204, i32 0, i32 0
  %RAX.i259 = bitcast %union.anon* %8205 to i64*
  %8206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8207 = getelementptr inbounds %struct.GPR, %struct.GPR* %8206, i32 0, i32 15
  %8208 = getelementptr inbounds %struct.Reg, %struct.Reg* %8207, i32 0, i32 0
  %RBP.i260 = bitcast %union.anon* %8208 to i64*
  %8209 = load i64, i64* %RBP.i260
  %8210 = sub i64 %8209, 436
  %8211 = load i64, i64* %PC.i258
  %8212 = add i64 %8211, 6
  store i64 %8212, i64* %PC.i258
  %8213 = inttoptr i64 %8210 to i32*
  %8214 = load i32, i32* %8213
  %8215 = zext i32 %8214 to i64
  store i64 %8215, i64* %RAX.i259, align 8
  store %struct.Memory* %loadMem_44f29c, %struct.Memory** %MEMORY
  %loadMem_44f2a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8217 = getelementptr inbounds %struct.GPR, %struct.GPR* %8216, i32 0, i32 33
  %8218 = getelementptr inbounds %struct.Reg, %struct.Reg* %8217, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %8218 to i64*
  %8219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8220 = getelementptr inbounds %struct.GPR, %struct.GPR* %8219, i32 0, i32 1
  %8221 = getelementptr inbounds %struct.Reg, %struct.Reg* %8220, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %8221 to i64*
  %8222 = load i64, i64* %RAX.i257
  %8223 = load i64, i64* %PC.i256
  %8224 = add i64 %8223, 3
  store i64 %8224, i64* %PC.i256
  %8225 = trunc i64 %8222 to i32
  %8226 = add i32 20, %8225
  %8227 = zext i32 %8226 to i64
  store i64 %8227, i64* %RAX.i257, align 8
  %8228 = icmp ult i32 %8226, %8225
  %8229 = icmp ult i32 %8226, 20
  %8230 = or i1 %8228, %8229
  %8231 = zext i1 %8230 to i8
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8231, i8* %8232, align 1
  %8233 = and i32 %8226, 255
  %8234 = call i32 @llvm.ctpop.i32(i32 %8233)
  %8235 = trunc i32 %8234 to i8
  %8236 = and i8 %8235, 1
  %8237 = xor i8 %8236, 1
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8237, i8* %8238, align 1
  %8239 = xor i64 20, %8222
  %8240 = trunc i64 %8239 to i32
  %8241 = xor i32 %8240, %8226
  %8242 = lshr i32 %8241, 4
  %8243 = trunc i32 %8242 to i8
  %8244 = and i8 %8243, 1
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8244, i8* %8245, align 1
  %8246 = icmp eq i32 %8226, 0
  %8247 = zext i1 %8246 to i8
  %8248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8247, i8* %8248, align 1
  %8249 = lshr i32 %8226, 31
  %8250 = trunc i32 %8249 to i8
  %8251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8250, i8* %8251, align 1
  %8252 = lshr i32 %8225, 31
  %8253 = xor i32 %8249, %8252
  %8254 = add i32 %8253, %8249
  %8255 = icmp eq i32 %8254, 2
  %8256 = zext i1 %8255 to i8
  %8257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8256, i8* %8257, align 1
  store %struct.Memory* %loadMem_44f2a2, %struct.Memory** %MEMORY
  %loadMem_44f2a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8259 = getelementptr inbounds %struct.GPR, %struct.GPR* %8258, i32 0, i32 33
  %8260 = getelementptr inbounds %struct.Reg, %struct.Reg* %8259, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %8260 to i64*
  %8261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8262 = getelementptr inbounds %struct.GPR, %struct.GPR* %8261, i32 0, i32 1
  %8263 = getelementptr inbounds %struct.Reg, %struct.Reg* %8262, i32 0, i32 0
  %EAX.i254 = bitcast %union.anon* %8263 to i32*
  %8264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8265 = getelementptr inbounds %struct.GPR, %struct.GPR* %8264, i32 0, i32 5
  %8266 = getelementptr inbounds %struct.Reg, %struct.Reg* %8265, i32 0, i32 0
  %RCX.i255 = bitcast %union.anon* %8266 to i64*
  %8267 = load i32, i32* %EAX.i254
  %8268 = zext i32 %8267 to i64
  %8269 = load i64, i64* %PC.i253
  %8270 = add i64 %8269, 3
  store i64 %8270, i64* %PC.i253
  %8271 = shl i64 %8268, 32
  %8272 = ashr exact i64 %8271, 32
  store i64 %8272, i64* %RCX.i255, align 8
  store %struct.Memory* %loadMem_44f2a5, %struct.Memory** %MEMORY
  %loadMem_44f2a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8274 = getelementptr inbounds %struct.GPR, %struct.GPR* %8273, i32 0, i32 33
  %8275 = getelementptr inbounds %struct.Reg, %struct.Reg* %8274, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %8275 to i64*
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8277 = getelementptr inbounds %struct.GPR, %struct.GPR* %8276, i32 0, i32 1
  %8278 = getelementptr inbounds %struct.Reg, %struct.Reg* %8277, i32 0, i32 0
  %RAX.i250 = bitcast %union.anon* %8278 to i64*
  %8279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8280 = getelementptr inbounds %struct.GPR, %struct.GPR* %8279, i32 0, i32 5
  %8281 = getelementptr inbounds %struct.Reg, %struct.Reg* %8280, i32 0, i32 0
  %RCX.i251 = bitcast %union.anon* %8281 to i64*
  %8282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8283 = getelementptr inbounds %struct.GPR, %struct.GPR* %8282, i32 0, i32 15
  %8284 = getelementptr inbounds %struct.Reg, %struct.Reg* %8283, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %8284 to i64*
  %8285 = load i64, i64* %RBP.i252
  %8286 = load i64, i64* %RCX.i251
  %8287 = add i64 %8285, -432
  %8288 = add i64 %8287, %8286
  %8289 = load i64, i64* %PC.i249
  %8290 = add i64 %8289, 8
  store i64 %8290, i64* %PC.i249
  %8291 = inttoptr i64 %8288 to i8*
  %8292 = load i8, i8* %8291
  %8293 = sext i8 %8292 to i64
  %8294 = and i64 %8293, 4294967295
  store i64 %8294, i64* %RAX.i250, align 8
  store %struct.Memory* %loadMem_44f2a8, %struct.Memory** %MEMORY
  %loadMem_44f2b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8296 = getelementptr inbounds %struct.GPR, %struct.GPR* %8295, i32 0, i32 33
  %8297 = getelementptr inbounds %struct.Reg, %struct.Reg* %8296, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %8297 to i64*
  %8298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8299 = getelementptr inbounds %struct.GPR, %struct.GPR* %8298, i32 0, i32 1
  %8300 = getelementptr inbounds %struct.Reg, %struct.Reg* %8299, i32 0, i32 0
  %EAX.i248 = bitcast %union.anon* %8300 to i32*
  %8301 = load i32, i32* %EAX.i248
  %8302 = zext i32 %8301 to i64
  %8303 = load i64, i64* %PC.i247
  %8304 = add i64 %8303, 3
  store i64 %8304, i64* %PC.i247
  %8305 = sub i32 %8301, 4
  %8306 = icmp ult i32 %8301, 4
  %8307 = zext i1 %8306 to i8
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8307, i8* %8308, align 1
  %8309 = and i32 %8305, 255
  %8310 = call i32 @llvm.ctpop.i32(i32 %8309)
  %8311 = trunc i32 %8310 to i8
  %8312 = and i8 %8311, 1
  %8313 = xor i8 %8312, 1
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8313, i8* %8314, align 1
  %8315 = xor i64 4, %8302
  %8316 = trunc i64 %8315 to i32
  %8317 = xor i32 %8316, %8305
  %8318 = lshr i32 %8317, 4
  %8319 = trunc i32 %8318 to i8
  %8320 = and i8 %8319, 1
  %8321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8320, i8* %8321, align 1
  %8322 = icmp eq i32 %8305, 0
  %8323 = zext i1 %8322 to i8
  %8324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8323, i8* %8324, align 1
  %8325 = lshr i32 %8305, 31
  %8326 = trunc i32 %8325 to i8
  %8327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8326, i8* %8327, align 1
  %8328 = lshr i32 %8301, 31
  %8329 = xor i32 %8325, %8328
  %8330 = add i32 %8329, %8328
  %8331 = icmp eq i32 %8330, 2
  %8332 = zext i1 %8331 to i8
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8332, i8* %8333, align 1
  store %struct.Memory* %loadMem_44f2b0, %struct.Memory** %MEMORY
  %loadMem_44f2b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8335 = getelementptr inbounds %struct.GPR, %struct.GPR* %8334, i32 0, i32 33
  %8336 = getelementptr inbounds %struct.Reg, %struct.Reg* %8335, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %8336 to i64*
  %8337 = load i64, i64* %PC.i246
  %8338 = add i64 %8337, 267
  %8339 = load i64, i64* %PC.i246
  %8340 = add i64 %8339, 6
  %8341 = load i64, i64* %PC.i246
  %8342 = add i64 %8341, 6
  store i64 %8342, i64* %PC.i246
  %8343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8344 = load i8, i8* %8343, align 1
  %8345 = icmp ne i8 %8344, 0
  %8346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8347 = load i8, i8* %8346, align 1
  %8348 = icmp ne i8 %8347, 0
  %8349 = xor i1 %8345, %8348
  %8350 = zext i1 %8349 to i8
  store i8 %8350, i8* %BRANCH_TAKEN, align 1
  %8351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8352 = select i1 %8349, i64 %8338, i64 %8340
  store i64 %8352, i64* %8351, align 8
  store %struct.Memory* %loadMem_44f2b3, %struct.Memory** %MEMORY
  %loadBr_44f2b3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f2b3 = icmp eq i8 %loadBr_44f2b3, 1
  br i1 %cmpBr_44f2b3, label %block_.L_44f3be, label %block_.L_44f2b9

block_.L_44f2b9:                                  ; preds = %block_44f29c, %block_44f27f, %block_.L_44f262
  %loadMem_44f2b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8354 = getelementptr inbounds %struct.GPR, %struct.GPR* %8353, i32 0, i32 33
  %8355 = getelementptr inbounds %struct.Reg, %struct.Reg* %8354, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %8355 to i64*
  %8356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8357 = getelementptr inbounds %struct.GPR, %struct.GPR* %8356, i32 0, i32 1
  %8358 = getelementptr inbounds %struct.Reg, %struct.Reg* %8357, i32 0, i32 0
  %RAX.i244 = bitcast %union.anon* %8358 to i64*
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8360 = getelementptr inbounds %struct.GPR, %struct.GPR* %8359, i32 0, i32 15
  %8361 = getelementptr inbounds %struct.Reg, %struct.Reg* %8360, i32 0, i32 0
  %RBP.i245 = bitcast %union.anon* %8361 to i64*
  %8362 = load i64, i64* %RBP.i245
  %8363 = sub i64 %8362, 436
  %8364 = load i64, i64* %PC.i243
  %8365 = add i64 %8364, 6
  store i64 %8365, i64* %PC.i243
  %8366 = inttoptr i64 %8363 to i32*
  %8367 = load i32, i32* %8366
  %8368 = zext i32 %8367 to i64
  store i64 %8368, i64* %RAX.i244, align 8
  store %struct.Memory* %loadMem_44f2b9, %struct.Memory** %MEMORY
  %loadMem_44f2bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8370 = getelementptr inbounds %struct.GPR, %struct.GPR* %8369, i32 0, i32 33
  %8371 = getelementptr inbounds %struct.Reg, %struct.Reg* %8370, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %8371 to i64*
  %8372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8373 = getelementptr inbounds %struct.GPR, %struct.GPR* %8372, i32 0, i32 1
  %8374 = getelementptr inbounds %struct.Reg, %struct.Reg* %8373, i32 0, i32 0
  %RAX.i242 = bitcast %union.anon* %8374 to i64*
  %8375 = load i64, i64* %RAX.i242
  %8376 = load i64, i64* %PC.i241
  %8377 = add i64 %8376, 3
  store i64 %8377, i64* %PC.i241
  %8378 = trunc i64 %8375 to i32
  %8379 = sub i32 %8378, 1
  %8380 = zext i32 %8379 to i64
  store i64 %8380, i64* %RAX.i242, align 8
  %8381 = icmp ult i32 %8378, 1
  %8382 = zext i1 %8381 to i8
  %8383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8382, i8* %8383, align 1
  %8384 = and i32 %8379, 255
  %8385 = call i32 @llvm.ctpop.i32(i32 %8384)
  %8386 = trunc i32 %8385 to i8
  %8387 = and i8 %8386, 1
  %8388 = xor i8 %8387, 1
  %8389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8388, i8* %8389, align 1
  %8390 = xor i64 1, %8375
  %8391 = trunc i64 %8390 to i32
  %8392 = xor i32 %8391, %8379
  %8393 = lshr i32 %8392, 4
  %8394 = trunc i32 %8393 to i8
  %8395 = and i8 %8394, 1
  %8396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8395, i8* %8396, align 1
  %8397 = icmp eq i32 %8379, 0
  %8398 = zext i1 %8397 to i8
  %8399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8398, i8* %8399, align 1
  %8400 = lshr i32 %8379, 31
  %8401 = trunc i32 %8400 to i8
  %8402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8401, i8* %8402, align 1
  %8403 = lshr i32 %8378, 31
  %8404 = xor i32 %8400, %8403
  %8405 = add i32 %8404, %8403
  %8406 = icmp eq i32 %8405, 2
  %8407 = zext i1 %8406 to i8
  %8408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8407, i8* %8408, align 1
  store %struct.Memory* %loadMem_44f2bf, %struct.Memory** %MEMORY
  %loadMem_44f2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8410 = getelementptr inbounds %struct.GPR, %struct.GPR* %8409, i32 0, i32 33
  %8411 = getelementptr inbounds %struct.Reg, %struct.Reg* %8410, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %8411 to i64*
  %8412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8413 = getelementptr inbounds %struct.GPR, %struct.GPR* %8412, i32 0, i32 1
  %8414 = getelementptr inbounds %struct.Reg, %struct.Reg* %8413, i32 0, i32 0
  %EAX.i239 = bitcast %union.anon* %8414 to i32*
  %8415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8416 = getelementptr inbounds %struct.GPR, %struct.GPR* %8415, i32 0, i32 5
  %8417 = getelementptr inbounds %struct.Reg, %struct.Reg* %8416, i32 0, i32 0
  %RCX.i240 = bitcast %union.anon* %8417 to i64*
  %8418 = load i32, i32* %EAX.i239
  %8419 = zext i32 %8418 to i64
  %8420 = load i64, i64* %PC.i238
  %8421 = add i64 %8420, 3
  store i64 %8421, i64* %PC.i238
  %8422 = shl i64 %8419, 32
  %8423 = ashr exact i64 %8422, 32
  store i64 %8423, i64* %RCX.i240, align 8
  store %struct.Memory* %loadMem_44f2c2, %struct.Memory** %MEMORY
  %loadMem_44f2c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8425 = getelementptr inbounds %struct.GPR, %struct.GPR* %8424, i32 0, i32 33
  %8426 = getelementptr inbounds %struct.Reg, %struct.Reg* %8425, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %8426 to i64*
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8428 = getelementptr inbounds %struct.GPR, %struct.GPR* %8427, i32 0, i32 1
  %8429 = getelementptr inbounds %struct.Reg, %struct.Reg* %8428, i32 0, i32 0
  %RAX.i236 = bitcast %union.anon* %8429 to i64*
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8431 = getelementptr inbounds %struct.GPR, %struct.GPR* %8430, i32 0, i32 5
  %8432 = getelementptr inbounds %struct.Reg, %struct.Reg* %8431, i32 0, i32 0
  %RCX.i237 = bitcast %union.anon* %8432 to i64*
  %8433 = load i64, i64* %RCX.i237
  %8434 = add i64 %8433, 12099168
  %8435 = load i64, i64* %PC.i235
  %8436 = add i64 %8435, 8
  store i64 %8436, i64* %PC.i235
  %8437 = inttoptr i64 %8434 to i8*
  %8438 = load i8, i8* %8437
  %8439 = zext i8 %8438 to i64
  store i64 %8439, i64* %RAX.i236, align 8
  store %struct.Memory* %loadMem_44f2c5, %struct.Memory** %MEMORY
  %loadMem_44f2cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8441 = getelementptr inbounds %struct.GPR, %struct.GPR* %8440, i32 0, i32 33
  %8442 = getelementptr inbounds %struct.Reg, %struct.Reg* %8441, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %8442 to i64*
  %8443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8444 = getelementptr inbounds %struct.GPR, %struct.GPR* %8443, i32 0, i32 1
  %8445 = getelementptr inbounds %struct.Reg, %struct.Reg* %8444, i32 0, i32 0
  %EAX.i234 = bitcast %union.anon* %8445 to i32*
  %8446 = load i32, i32* %EAX.i234
  %8447 = zext i32 %8446 to i64
  %8448 = load i64, i64* %PC.i233
  %8449 = add i64 %8448, 3
  store i64 %8449, i64* %PC.i233
  %8450 = sub i32 %8446, 3
  %8451 = icmp ult i32 %8446, 3
  %8452 = zext i1 %8451 to i8
  %8453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8452, i8* %8453, align 1
  %8454 = and i32 %8450, 255
  %8455 = call i32 @llvm.ctpop.i32(i32 %8454)
  %8456 = trunc i32 %8455 to i8
  %8457 = and i8 %8456, 1
  %8458 = xor i8 %8457, 1
  %8459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8458, i8* %8459, align 1
  %8460 = xor i64 3, %8447
  %8461 = trunc i64 %8460 to i32
  %8462 = xor i32 %8461, %8450
  %8463 = lshr i32 %8462, 4
  %8464 = trunc i32 %8463 to i8
  %8465 = and i8 %8464, 1
  %8466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8465, i8* %8466, align 1
  %8467 = icmp eq i32 %8450, 0
  %8468 = zext i1 %8467 to i8
  %8469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8468, i8* %8469, align 1
  %8470 = lshr i32 %8450, 31
  %8471 = trunc i32 %8470 to i8
  %8472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8471, i8* %8472, align 1
  %8473 = lshr i32 %8446, 31
  %8474 = xor i32 %8470, %8473
  %8475 = add i32 %8474, %8473
  %8476 = icmp eq i32 %8475, 2
  %8477 = zext i1 %8476 to i8
  %8478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8477, i8* %8478, align 1
  store %struct.Memory* %loadMem_44f2cd, %struct.Memory** %MEMORY
  %loadMem_44f2d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8480 = getelementptr inbounds %struct.GPR, %struct.GPR* %8479, i32 0, i32 33
  %8481 = getelementptr inbounds %struct.Reg, %struct.Reg* %8480, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %8481 to i64*
  %8482 = load i64, i64* %PC.i232
  %8483 = add i64 %8482, 64
  %8484 = load i64, i64* %PC.i232
  %8485 = add i64 %8484, 6
  %8486 = load i64, i64* %PC.i232
  %8487 = add i64 %8486, 6
  store i64 %8487, i64* %PC.i232
  %8488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8489 = load i8, i8* %8488, align 1
  store i8 %8489, i8* %BRANCH_TAKEN, align 1
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8491 = icmp ne i8 %8489, 0
  %8492 = select i1 %8491, i64 %8483, i64 %8485
  store i64 %8492, i64* %8490, align 8
  store %struct.Memory* %loadMem_44f2d0, %struct.Memory** %MEMORY
  %loadBr_44f2d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f2d0 = icmp eq i8 %loadBr_44f2d0, 1
  br i1 %cmpBr_44f2d0, label %block_.L_44f310, label %block_44f2d6

block_44f2d6:                                     ; preds = %block_.L_44f2b9
  %loadMem_44f2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8494 = getelementptr inbounds %struct.GPR, %struct.GPR* %8493, i32 0, i32 33
  %8495 = getelementptr inbounds %struct.Reg, %struct.Reg* %8494, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %8495 to i64*
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8497 = getelementptr inbounds %struct.GPR, %struct.GPR* %8496, i32 0, i32 1
  %8498 = getelementptr inbounds %struct.Reg, %struct.Reg* %8497, i32 0, i32 0
  %RAX.i230 = bitcast %union.anon* %8498 to i64*
  %8499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8500 = getelementptr inbounds %struct.GPR, %struct.GPR* %8499, i32 0, i32 15
  %8501 = getelementptr inbounds %struct.Reg, %struct.Reg* %8500, i32 0, i32 0
  %RBP.i231 = bitcast %union.anon* %8501 to i64*
  %8502 = load i64, i64* %RBP.i231
  %8503 = sub i64 %8502, 436
  %8504 = load i64, i64* %PC.i229
  %8505 = add i64 %8504, 6
  store i64 %8505, i64* %PC.i229
  %8506 = inttoptr i64 %8503 to i32*
  %8507 = load i32, i32* %8506
  %8508 = zext i32 %8507 to i64
  store i64 %8508, i64* %RAX.i230, align 8
  store %struct.Memory* %loadMem_44f2d6, %struct.Memory** %MEMORY
  %loadMem_44f2dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8510 = getelementptr inbounds %struct.GPR, %struct.GPR* %8509, i32 0, i32 33
  %8511 = getelementptr inbounds %struct.Reg, %struct.Reg* %8510, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %8511 to i64*
  %8512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8513 = getelementptr inbounds %struct.GPR, %struct.GPR* %8512, i32 0, i32 1
  %8514 = getelementptr inbounds %struct.Reg, %struct.Reg* %8513, i32 0, i32 0
  %RAX.i228 = bitcast %union.anon* %8514 to i64*
  %8515 = load i64, i64* %RAX.i228
  %8516 = load i64, i64* %PC.i227
  %8517 = add i64 %8516, 3
  store i64 %8517, i64* %PC.i227
  %8518 = trunc i64 %8515 to i32
  %8519 = sub i32 %8518, 1
  %8520 = zext i32 %8519 to i64
  store i64 %8520, i64* %RAX.i228, align 8
  %8521 = icmp ult i32 %8518, 1
  %8522 = zext i1 %8521 to i8
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8522, i8* %8523, align 1
  %8524 = and i32 %8519, 255
  %8525 = call i32 @llvm.ctpop.i32(i32 %8524)
  %8526 = trunc i32 %8525 to i8
  %8527 = and i8 %8526, 1
  %8528 = xor i8 %8527, 1
  %8529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8528, i8* %8529, align 1
  %8530 = xor i64 1, %8515
  %8531 = trunc i64 %8530 to i32
  %8532 = xor i32 %8531, %8519
  %8533 = lshr i32 %8532, 4
  %8534 = trunc i32 %8533 to i8
  %8535 = and i8 %8534, 1
  %8536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8535, i8* %8536, align 1
  %8537 = icmp eq i32 %8519, 0
  %8538 = zext i1 %8537 to i8
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8538, i8* %8539, align 1
  %8540 = lshr i32 %8519, 31
  %8541 = trunc i32 %8540 to i8
  %8542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8541, i8* %8542, align 1
  %8543 = lshr i32 %8518, 31
  %8544 = xor i32 %8540, %8543
  %8545 = add i32 %8544, %8543
  %8546 = icmp eq i32 %8545, 2
  %8547 = zext i1 %8546 to i8
  %8548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8547, i8* %8548, align 1
  store %struct.Memory* %loadMem_44f2dc, %struct.Memory** %MEMORY
  %loadMem_44f2df = load %struct.Memory*, %struct.Memory** %MEMORY
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8550 = getelementptr inbounds %struct.GPR, %struct.GPR* %8549, i32 0, i32 33
  %8551 = getelementptr inbounds %struct.Reg, %struct.Reg* %8550, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %8551 to i64*
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8553 = getelementptr inbounds %struct.GPR, %struct.GPR* %8552, i32 0, i32 1
  %8554 = getelementptr inbounds %struct.Reg, %struct.Reg* %8553, i32 0, i32 0
  %EAX.i225 = bitcast %union.anon* %8554 to i32*
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8556 = getelementptr inbounds %struct.GPR, %struct.GPR* %8555, i32 0, i32 5
  %8557 = getelementptr inbounds %struct.Reg, %struct.Reg* %8556, i32 0, i32 0
  %RCX.i226 = bitcast %union.anon* %8557 to i64*
  %8558 = load i32, i32* %EAX.i225
  %8559 = zext i32 %8558 to i64
  %8560 = load i64, i64* %PC.i224
  %8561 = add i64 %8560, 3
  store i64 %8561, i64* %PC.i224
  %8562 = shl i64 %8559, 32
  %8563 = ashr exact i64 %8562, 32
  store i64 %8563, i64* %RCX.i226, align 8
  store %struct.Memory* %loadMem_44f2df, %struct.Memory** %MEMORY
  %loadMem_44f2e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8565 = getelementptr inbounds %struct.GPR, %struct.GPR* %8564, i32 0, i32 33
  %8566 = getelementptr inbounds %struct.Reg, %struct.Reg* %8565, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %8566 to i64*
  %8567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8568 = getelementptr inbounds %struct.GPR, %struct.GPR* %8567, i32 0, i32 1
  %8569 = getelementptr inbounds %struct.Reg, %struct.Reg* %8568, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %8569 to i64*
  %8570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8571 = getelementptr inbounds %struct.GPR, %struct.GPR* %8570, i32 0, i32 5
  %8572 = getelementptr inbounds %struct.Reg, %struct.Reg* %8571, i32 0, i32 0
  %RCX.i222 = bitcast %union.anon* %8572 to i64*
  %8573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8574 = getelementptr inbounds %struct.GPR, %struct.GPR* %8573, i32 0, i32 15
  %8575 = getelementptr inbounds %struct.Reg, %struct.Reg* %8574, i32 0, i32 0
  %RBP.i223 = bitcast %union.anon* %8575 to i64*
  %8576 = load i64, i64* %RBP.i223
  %8577 = load i64, i64* %RCX.i222
  %8578 = add i64 %8576, -432
  %8579 = add i64 %8578, %8577
  %8580 = load i64, i64* %PC.i220
  %8581 = add i64 %8580, 8
  store i64 %8581, i64* %PC.i220
  %8582 = inttoptr i64 %8579 to i8*
  %8583 = load i8, i8* %8582
  %8584 = sext i8 %8583 to i64
  %8585 = and i64 %8584, 4294967295
  store i64 %8585, i64* %RAX.i221, align 8
  store %struct.Memory* %loadMem_44f2e2, %struct.Memory** %MEMORY
  %loadMem_44f2ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %8586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8587 = getelementptr inbounds %struct.GPR, %struct.GPR* %8586, i32 0, i32 33
  %8588 = getelementptr inbounds %struct.Reg, %struct.Reg* %8587, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %8588 to i64*
  %8589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8590 = getelementptr inbounds %struct.GPR, %struct.GPR* %8589, i32 0, i32 1
  %8591 = getelementptr inbounds %struct.Reg, %struct.Reg* %8590, i32 0, i32 0
  %EAX.i219 = bitcast %union.anon* %8591 to i32*
  %8592 = load i32, i32* %EAX.i219
  %8593 = zext i32 %8592 to i64
  %8594 = load i64, i64* %PC.i218
  %8595 = add i64 %8594, 3
  store i64 %8595, i64* %PC.i218
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8596, align 1
  %8597 = and i32 %8592, 255
  %8598 = call i32 @llvm.ctpop.i32(i32 %8597)
  %8599 = trunc i32 %8598 to i8
  %8600 = and i8 %8599, 1
  %8601 = xor i8 %8600, 1
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8601, i8* %8602, align 1
  %8603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8603, align 1
  %8604 = icmp eq i32 %8592, 0
  %8605 = zext i1 %8604 to i8
  %8606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8605, i8* %8606, align 1
  %8607 = lshr i32 %8592, 31
  %8608 = trunc i32 %8607 to i8
  %8609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8608, i8* %8609, align 1
  %8610 = lshr i32 %8592, 31
  %8611 = xor i32 %8607, %8610
  %8612 = add i32 %8611, %8610
  %8613 = icmp eq i32 %8612, 2
  %8614 = zext i1 %8613 to i8
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8614, i8* %8615, align 1
  store %struct.Memory* %loadMem_44f2ea, %struct.Memory** %MEMORY
  %loadMem_44f2ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8617 = getelementptr inbounds %struct.GPR, %struct.GPR* %8616, i32 0, i32 33
  %8618 = getelementptr inbounds %struct.Reg, %struct.Reg* %8617, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %8618 to i64*
  %8619 = load i64, i64* %PC.i217
  %8620 = add i64 %8619, 35
  %8621 = load i64, i64* %PC.i217
  %8622 = add i64 %8621, 6
  %8623 = load i64, i64* %PC.i217
  %8624 = add i64 %8623, 6
  store i64 %8624, i64* %PC.i217
  %8625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8626 = load i8, i8* %8625, align 1
  %8627 = icmp ne i8 %8626, 0
  %8628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8629 = load i8, i8* %8628, align 1
  %8630 = icmp ne i8 %8629, 0
  %8631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8632 = load i8, i8* %8631, align 1
  %8633 = icmp ne i8 %8632, 0
  %8634 = xor i1 %8630, %8633
  %8635 = or i1 %8627, %8634
  %8636 = zext i1 %8635 to i8
  store i8 %8636, i8* %BRANCH_TAKEN, align 1
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8638 = select i1 %8635, i64 %8620, i64 %8622
  store i64 %8638, i64* %8637, align 8
  store %struct.Memory* %loadMem_44f2ed, %struct.Memory** %MEMORY
  %loadBr_44f2ed = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f2ed = icmp eq i8 %loadBr_44f2ed, 1
  br i1 %cmpBr_44f2ed, label %block_.L_44f310, label %block_44f2f3

block_44f2f3:                                     ; preds = %block_44f2d6
  %loadMem_44f2f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8640 = getelementptr inbounds %struct.GPR, %struct.GPR* %8639, i32 0, i32 33
  %8641 = getelementptr inbounds %struct.Reg, %struct.Reg* %8640, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %8641 to i64*
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8643 = getelementptr inbounds %struct.GPR, %struct.GPR* %8642, i32 0, i32 1
  %8644 = getelementptr inbounds %struct.Reg, %struct.Reg* %8643, i32 0, i32 0
  %RAX.i215 = bitcast %union.anon* %8644 to i64*
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8646 = getelementptr inbounds %struct.GPR, %struct.GPR* %8645, i32 0, i32 15
  %8647 = getelementptr inbounds %struct.Reg, %struct.Reg* %8646, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %8647 to i64*
  %8648 = load i64, i64* %RBP.i216
  %8649 = sub i64 %8648, 436
  %8650 = load i64, i64* %PC.i214
  %8651 = add i64 %8650, 6
  store i64 %8651, i64* %PC.i214
  %8652 = inttoptr i64 %8649 to i32*
  %8653 = load i32, i32* %8652
  %8654 = zext i32 %8653 to i64
  store i64 %8654, i64* %RAX.i215, align 8
  store %struct.Memory* %loadMem_44f2f3, %struct.Memory** %MEMORY
  %loadMem_44f2f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8656 = getelementptr inbounds %struct.GPR, %struct.GPR* %8655, i32 0, i32 33
  %8657 = getelementptr inbounds %struct.Reg, %struct.Reg* %8656, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %8657 to i64*
  %8658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8659 = getelementptr inbounds %struct.GPR, %struct.GPR* %8658, i32 0, i32 1
  %8660 = getelementptr inbounds %struct.Reg, %struct.Reg* %8659, i32 0, i32 0
  %RAX.i213 = bitcast %union.anon* %8660 to i64*
  %8661 = load i64, i64* %RAX.i213
  %8662 = load i64, i64* %PC.i212
  %8663 = add i64 %8662, 3
  store i64 %8663, i64* %PC.i212
  %8664 = trunc i64 %8661 to i32
  %8665 = sub i32 %8664, 1
  %8666 = zext i32 %8665 to i64
  store i64 %8666, i64* %RAX.i213, align 8
  %8667 = icmp ult i32 %8664, 1
  %8668 = zext i1 %8667 to i8
  %8669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8668, i8* %8669, align 1
  %8670 = and i32 %8665, 255
  %8671 = call i32 @llvm.ctpop.i32(i32 %8670)
  %8672 = trunc i32 %8671 to i8
  %8673 = and i8 %8672, 1
  %8674 = xor i8 %8673, 1
  %8675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8674, i8* %8675, align 1
  %8676 = xor i64 1, %8661
  %8677 = trunc i64 %8676 to i32
  %8678 = xor i32 %8677, %8665
  %8679 = lshr i32 %8678, 4
  %8680 = trunc i32 %8679 to i8
  %8681 = and i8 %8680, 1
  %8682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8681, i8* %8682, align 1
  %8683 = icmp eq i32 %8665, 0
  %8684 = zext i1 %8683 to i8
  %8685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8684, i8* %8685, align 1
  %8686 = lshr i32 %8665, 31
  %8687 = trunc i32 %8686 to i8
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8687, i8* %8688, align 1
  %8689 = lshr i32 %8664, 31
  %8690 = xor i32 %8686, %8689
  %8691 = add i32 %8690, %8689
  %8692 = icmp eq i32 %8691, 2
  %8693 = zext i1 %8692 to i8
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8693, i8* %8694, align 1
  store %struct.Memory* %loadMem_44f2f9, %struct.Memory** %MEMORY
  %loadMem_44f2fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8696 = getelementptr inbounds %struct.GPR, %struct.GPR* %8695, i32 0, i32 33
  %8697 = getelementptr inbounds %struct.Reg, %struct.Reg* %8696, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %8697 to i64*
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8699 = getelementptr inbounds %struct.GPR, %struct.GPR* %8698, i32 0, i32 1
  %8700 = getelementptr inbounds %struct.Reg, %struct.Reg* %8699, i32 0, i32 0
  %EAX.i210 = bitcast %union.anon* %8700 to i32*
  %8701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8702 = getelementptr inbounds %struct.GPR, %struct.GPR* %8701, i32 0, i32 5
  %8703 = getelementptr inbounds %struct.Reg, %struct.Reg* %8702, i32 0, i32 0
  %RCX.i211 = bitcast %union.anon* %8703 to i64*
  %8704 = load i32, i32* %EAX.i210
  %8705 = zext i32 %8704 to i64
  %8706 = load i64, i64* %PC.i209
  %8707 = add i64 %8706, 3
  store i64 %8707, i64* %PC.i209
  %8708 = shl i64 %8705, 32
  %8709 = ashr exact i64 %8708, 32
  store i64 %8709, i64* %RCX.i211, align 8
  store %struct.Memory* %loadMem_44f2fc, %struct.Memory** %MEMORY
  %loadMem_44f2ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8711 = getelementptr inbounds %struct.GPR, %struct.GPR* %8710, i32 0, i32 33
  %8712 = getelementptr inbounds %struct.Reg, %struct.Reg* %8711, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %8712 to i64*
  %8713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8714 = getelementptr inbounds %struct.GPR, %struct.GPR* %8713, i32 0, i32 1
  %8715 = getelementptr inbounds %struct.Reg, %struct.Reg* %8714, i32 0, i32 0
  %RAX.i206 = bitcast %union.anon* %8715 to i64*
  %8716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8717 = getelementptr inbounds %struct.GPR, %struct.GPR* %8716, i32 0, i32 5
  %8718 = getelementptr inbounds %struct.Reg, %struct.Reg* %8717, i32 0, i32 0
  %RCX.i207 = bitcast %union.anon* %8718 to i64*
  %8719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8720 = getelementptr inbounds %struct.GPR, %struct.GPR* %8719, i32 0, i32 15
  %8721 = getelementptr inbounds %struct.Reg, %struct.Reg* %8720, i32 0, i32 0
  %RBP.i208 = bitcast %union.anon* %8721 to i64*
  %8722 = load i64, i64* %RBP.i208
  %8723 = load i64, i64* %RCX.i207
  %8724 = add i64 %8722, -432
  %8725 = add i64 %8724, %8723
  %8726 = load i64, i64* %PC.i205
  %8727 = add i64 %8726, 8
  store i64 %8727, i64* %PC.i205
  %8728 = inttoptr i64 %8725 to i8*
  %8729 = load i8, i8* %8728
  %8730 = sext i8 %8729 to i64
  %8731 = and i64 %8730, 4294967295
  store i64 %8731, i64* %RAX.i206, align 8
  store %struct.Memory* %loadMem_44f2ff, %struct.Memory** %MEMORY
  %loadMem_44f307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8733 = getelementptr inbounds %struct.GPR, %struct.GPR* %8732, i32 0, i32 33
  %8734 = getelementptr inbounds %struct.Reg, %struct.Reg* %8733, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %8734 to i64*
  %8735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8736 = getelementptr inbounds %struct.GPR, %struct.GPR* %8735, i32 0, i32 1
  %8737 = getelementptr inbounds %struct.Reg, %struct.Reg* %8736, i32 0, i32 0
  %EAX.i204 = bitcast %union.anon* %8737 to i32*
  %8738 = load i32, i32* %EAX.i204
  %8739 = zext i32 %8738 to i64
  %8740 = load i64, i64* %PC.i203
  %8741 = add i64 %8740, 3
  store i64 %8741, i64* %PC.i203
  %8742 = sub i32 %8738, 4
  %8743 = icmp ult i32 %8738, 4
  %8744 = zext i1 %8743 to i8
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8744, i8* %8745, align 1
  %8746 = and i32 %8742, 255
  %8747 = call i32 @llvm.ctpop.i32(i32 %8746)
  %8748 = trunc i32 %8747 to i8
  %8749 = and i8 %8748, 1
  %8750 = xor i8 %8749, 1
  %8751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8750, i8* %8751, align 1
  %8752 = xor i64 4, %8739
  %8753 = trunc i64 %8752 to i32
  %8754 = xor i32 %8753, %8742
  %8755 = lshr i32 %8754, 4
  %8756 = trunc i32 %8755 to i8
  %8757 = and i8 %8756, 1
  %8758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8757, i8* %8758, align 1
  %8759 = icmp eq i32 %8742, 0
  %8760 = zext i1 %8759 to i8
  %8761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8760, i8* %8761, align 1
  %8762 = lshr i32 %8742, 31
  %8763 = trunc i32 %8762 to i8
  %8764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8763, i8* %8764, align 1
  %8765 = lshr i32 %8738, 31
  %8766 = xor i32 %8762, %8765
  %8767 = add i32 %8766, %8765
  %8768 = icmp eq i32 %8767, 2
  %8769 = zext i1 %8768 to i8
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8769, i8* %8770, align 1
  store %struct.Memory* %loadMem_44f307, %struct.Memory** %MEMORY
  %loadMem_44f30a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8772 = getelementptr inbounds %struct.GPR, %struct.GPR* %8771, i32 0, i32 33
  %8773 = getelementptr inbounds %struct.Reg, %struct.Reg* %8772, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %8773 to i64*
  %8774 = load i64, i64* %PC.i202
  %8775 = add i64 %8774, 180
  %8776 = load i64, i64* %PC.i202
  %8777 = add i64 %8776, 6
  %8778 = load i64, i64* %PC.i202
  %8779 = add i64 %8778, 6
  store i64 %8779, i64* %PC.i202
  %8780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8781 = load i8, i8* %8780, align 1
  %8782 = icmp ne i8 %8781, 0
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8784 = load i8, i8* %8783, align 1
  %8785 = icmp ne i8 %8784, 0
  %8786 = xor i1 %8782, %8785
  %8787 = zext i1 %8786 to i8
  store i8 %8787, i8* %BRANCH_TAKEN, align 1
  %8788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8789 = select i1 %8786, i64 %8775, i64 %8777
  store i64 %8789, i64* %8788, align 8
  store %struct.Memory* %loadMem_44f30a, %struct.Memory** %MEMORY
  %loadBr_44f30a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f30a = icmp eq i8 %loadBr_44f30a, 1
  br i1 %cmpBr_44f30a, label %block_.L_44f3be, label %block_.L_44f310

block_.L_44f310:                                  ; preds = %block_44f2f3, %block_44f2d6, %block_.L_44f2b9
  %loadMem_44f310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8791 = getelementptr inbounds %struct.GPR, %struct.GPR* %8790, i32 0, i32 33
  %8792 = getelementptr inbounds %struct.Reg, %struct.Reg* %8791, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %8792 to i64*
  %8793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8794 = getelementptr inbounds %struct.GPR, %struct.GPR* %8793, i32 0, i32 1
  %8795 = getelementptr inbounds %struct.Reg, %struct.Reg* %8794, i32 0, i32 0
  %RAX.i200 = bitcast %union.anon* %8795 to i64*
  %8796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8797 = getelementptr inbounds %struct.GPR, %struct.GPR* %8796, i32 0, i32 15
  %8798 = getelementptr inbounds %struct.Reg, %struct.Reg* %8797, i32 0, i32 0
  %RBP.i201 = bitcast %union.anon* %8798 to i64*
  %8799 = load i64, i64* %RBP.i201
  %8800 = sub i64 %8799, 436
  %8801 = load i64, i64* %PC.i199
  %8802 = add i64 %8801, 6
  store i64 %8802, i64* %PC.i199
  %8803 = inttoptr i64 %8800 to i32*
  %8804 = load i32, i32* %8803
  %8805 = zext i32 %8804 to i64
  store i64 %8805, i64* %RAX.i200, align 8
  store %struct.Memory* %loadMem_44f310, %struct.Memory** %MEMORY
  %loadMem_44f316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8807 = getelementptr inbounds %struct.GPR, %struct.GPR* %8806, i32 0, i32 33
  %8808 = getelementptr inbounds %struct.Reg, %struct.Reg* %8807, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %8808 to i64*
  %8809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8810 = getelementptr inbounds %struct.GPR, %struct.GPR* %8809, i32 0, i32 1
  %8811 = getelementptr inbounds %struct.Reg, %struct.Reg* %8810, i32 0, i32 0
  %RAX.i198 = bitcast %union.anon* %8811 to i64*
  %8812 = load i64, i64* %RAX.i198
  %8813 = load i64, i64* %PC.i197
  %8814 = add i64 %8813, 3
  store i64 %8814, i64* %PC.i197
  %8815 = trunc i64 %8812 to i32
  %8816 = sub i32 %8815, 20
  %8817 = zext i32 %8816 to i64
  store i64 %8817, i64* %RAX.i198, align 8
  %8818 = icmp ult i32 %8815, 20
  %8819 = zext i1 %8818 to i8
  %8820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8819, i8* %8820, align 1
  %8821 = and i32 %8816, 255
  %8822 = call i32 @llvm.ctpop.i32(i32 %8821)
  %8823 = trunc i32 %8822 to i8
  %8824 = and i8 %8823, 1
  %8825 = xor i8 %8824, 1
  %8826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8825, i8* %8826, align 1
  %8827 = xor i64 20, %8812
  %8828 = trunc i64 %8827 to i32
  %8829 = xor i32 %8828, %8816
  %8830 = lshr i32 %8829, 4
  %8831 = trunc i32 %8830 to i8
  %8832 = and i8 %8831, 1
  %8833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8832, i8* %8833, align 1
  %8834 = icmp eq i32 %8816, 0
  %8835 = zext i1 %8834 to i8
  %8836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8835, i8* %8836, align 1
  %8837 = lshr i32 %8816, 31
  %8838 = trunc i32 %8837 to i8
  %8839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8838, i8* %8839, align 1
  %8840 = lshr i32 %8815, 31
  %8841 = xor i32 %8837, %8840
  %8842 = add i32 %8841, %8840
  %8843 = icmp eq i32 %8842, 2
  %8844 = zext i1 %8843 to i8
  %8845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8844, i8* %8845, align 1
  store %struct.Memory* %loadMem_44f316, %struct.Memory** %MEMORY
  %loadMem_44f319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8847 = getelementptr inbounds %struct.GPR, %struct.GPR* %8846, i32 0, i32 33
  %8848 = getelementptr inbounds %struct.Reg, %struct.Reg* %8847, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %8848 to i64*
  %8849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8850 = getelementptr inbounds %struct.GPR, %struct.GPR* %8849, i32 0, i32 1
  %8851 = getelementptr inbounds %struct.Reg, %struct.Reg* %8850, i32 0, i32 0
  %EAX.i195 = bitcast %union.anon* %8851 to i32*
  %8852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8853 = getelementptr inbounds %struct.GPR, %struct.GPR* %8852, i32 0, i32 5
  %8854 = getelementptr inbounds %struct.Reg, %struct.Reg* %8853, i32 0, i32 0
  %RCX.i196 = bitcast %union.anon* %8854 to i64*
  %8855 = load i32, i32* %EAX.i195
  %8856 = zext i32 %8855 to i64
  %8857 = load i64, i64* %PC.i194
  %8858 = add i64 %8857, 3
  store i64 %8858, i64* %PC.i194
  %8859 = shl i64 %8856, 32
  %8860 = ashr exact i64 %8859, 32
  store i64 %8860, i64* %RCX.i196, align 8
  store %struct.Memory* %loadMem_44f319, %struct.Memory** %MEMORY
  %loadMem_44f31c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8862 = getelementptr inbounds %struct.GPR, %struct.GPR* %8861, i32 0, i32 33
  %8863 = getelementptr inbounds %struct.Reg, %struct.Reg* %8862, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %8863 to i64*
  %8864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8865 = getelementptr inbounds %struct.GPR, %struct.GPR* %8864, i32 0, i32 1
  %8866 = getelementptr inbounds %struct.Reg, %struct.Reg* %8865, i32 0, i32 0
  %RAX.i192 = bitcast %union.anon* %8866 to i64*
  %8867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8868 = getelementptr inbounds %struct.GPR, %struct.GPR* %8867, i32 0, i32 5
  %8869 = getelementptr inbounds %struct.Reg, %struct.Reg* %8868, i32 0, i32 0
  %RCX.i193 = bitcast %union.anon* %8869 to i64*
  %8870 = load i64, i64* %RCX.i193
  %8871 = add i64 %8870, 12099168
  %8872 = load i64, i64* %PC.i191
  %8873 = add i64 %8872, 8
  store i64 %8873, i64* %PC.i191
  %8874 = inttoptr i64 %8871 to i8*
  %8875 = load i8, i8* %8874
  %8876 = zext i8 %8875 to i64
  store i64 %8876, i64* %RAX.i192, align 8
  store %struct.Memory* %loadMem_44f31c, %struct.Memory** %MEMORY
  %loadMem_44f324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8878 = getelementptr inbounds %struct.GPR, %struct.GPR* %8877, i32 0, i32 33
  %8879 = getelementptr inbounds %struct.Reg, %struct.Reg* %8878, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %8879 to i64*
  %8880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8881 = getelementptr inbounds %struct.GPR, %struct.GPR* %8880, i32 0, i32 1
  %8882 = getelementptr inbounds %struct.Reg, %struct.Reg* %8881, i32 0, i32 0
  %EAX.i190 = bitcast %union.anon* %8882 to i32*
  %8883 = load i32, i32* %EAX.i190
  %8884 = zext i32 %8883 to i64
  %8885 = load i64, i64* %PC.i189
  %8886 = add i64 %8885, 3
  store i64 %8886, i64* %PC.i189
  %8887 = sub i32 %8883, 3
  %8888 = icmp ult i32 %8883, 3
  %8889 = zext i1 %8888 to i8
  %8890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8889, i8* %8890, align 1
  %8891 = and i32 %8887, 255
  %8892 = call i32 @llvm.ctpop.i32(i32 %8891)
  %8893 = trunc i32 %8892 to i8
  %8894 = and i8 %8893, 1
  %8895 = xor i8 %8894, 1
  %8896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8895, i8* %8896, align 1
  %8897 = xor i64 3, %8884
  %8898 = trunc i64 %8897 to i32
  %8899 = xor i32 %8898, %8887
  %8900 = lshr i32 %8899, 4
  %8901 = trunc i32 %8900 to i8
  %8902 = and i8 %8901, 1
  %8903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8902, i8* %8903, align 1
  %8904 = icmp eq i32 %8887, 0
  %8905 = zext i1 %8904 to i8
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8905, i8* %8906, align 1
  %8907 = lshr i32 %8887, 31
  %8908 = trunc i32 %8907 to i8
  %8909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8908, i8* %8909, align 1
  %8910 = lshr i32 %8883, 31
  %8911 = xor i32 %8907, %8910
  %8912 = add i32 %8911, %8910
  %8913 = icmp eq i32 %8912, 2
  %8914 = zext i1 %8913 to i8
  %8915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8914, i8* %8915, align 1
  store %struct.Memory* %loadMem_44f324, %struct.Memory** %MEMORY
  %loadMem_44f327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8917 = getelementptr inbounds %struct.GPR, %struct.GPR* %8916, i32 0, i32 33
  %8918 = getelementptr inbounds %struct.Reg, %struct.Reg* %8917, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %8918 to i64*
  %8919 = load i64, i64* %PC.i188
  %8920 = add i64 %8919, 64
  %8921 = load i64, i64* %PC.i188
  %8922 = add i64 %8921, 6
  %8923 = load i64, i64* %PC.i188
  %8924 = add i64 %8923, 6
  store i64 %8924, i64* %PC.i188
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8926 = load i8, i8* %8925, align 1
  store i8 %8926, i8* %BRANCH_TAKEN, align 1
  %8927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8928 = icmp ne i8 %8926, 0
  %8929 = select i1 %8928, i64 %8920, i64 %8922
  store i64 %8929, i64* %8927, align 8
  store %struct.Memory* %loadMem_44f327, %struct.Memory** %MEMORY
  %loadBr_44f327 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f327 = icmp eq i8 %loadBr_44f327, 1
  br i1 %cmpBr_44f327, label %block_.L_44f367, label %block_44f32d

block_44f32d:                                     ; preds = %block_.L_44f310
  %loadMem_44f32d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8931 = getelementptr inbounds %struct.GPR, %struct.GPR* %8930, i32 0, i32 33
  %8932 = getelementptr inbounds %struct.Reg, %struct.Reg* %8931, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %8932 to i64*
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8934 = getelementptr inbounds %struct.GPR, %struct.GPR* %8933, i32 0, i32 1
  %8935 = getelementptr inbounds %struct.Reg, %struct.Reg* %8934, i32 0, i32 0
  %RAX.i186 = bitcast %union.anon* %8935 to i64*
  %8936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8937 = getelementptr inbounds %struct.GPR, %struct.GPR* %8936, i32 0, i32 15
  %8938 = getelementptr inbounds %struct.Reg, %struct.Reg* %8937, i32 0, i32 0
  %RBP.i187 = bitcast %union.anon* %8938 to i64*
  %8939 = load i64, i64* %RBP.i187
  %8940 = sub i64 %8939, 436
  %8941 = load i64, i64* %PC.i185
  %8942 = add i64 %8941, 6
  store i64 %8942, i64* %PC.i185
  %8943 = inttoptr i64 %8940 to i32*
  %8944 = load i32, i32* %8943
  %8945 = zext i32 %8944 to i64
  store i64 %8945, i64* %RAX.i186, align 8
  store %struct.Memory* %loadMem_44f32d, %struct.Memory** %MEMORY
  %loadMem_44f333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8947 = getelementptr inbounds %struct.GPR, %struct.GPR* %8946, i32 0, i32 33
  %8948 = getelementptr inbounds %struct.Reg, %struct.Reg* %8947, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %8948 to i64*
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8950 = getelementptr inbounds %struct.GPR, %struct.GPR* %8949, i32 0, i32 1
  %8951 = getelementptr inbounds %struct.Reg, %struct.Reg* %8950, i32 0, i32 0
  %RAX.i184 = bitcast %union.anon* %8951 to i64*
  %8952 = load i64, i64* %RAX.i184
  %8953 = load i64, i64* %PC.i183
  %8954 = add i64 %8953, 3
  store i64 %8954, i64* %PC.i183
  %8955 = trunc i64 %8952 to i32
  %8956 = sub i32 %8955, 20
  %8957 = zext i32 %8956 to i64
  store i64 %8957, i64* %RAX.i184, align 8
  %8958 = icmp ult i32 %8955, 20
  %8959 = zext i1 %8958 to i8
  %8960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8959, i8* %8960, align 1
  %8961 = and i32 %8956, 255
  %8962 = call i32 @llvm.ctpop.i32(i32 %8961)
  %8963 = trunc i32 %8962 to i8
  %8964 = and i8 %8963, 1
  %8965 = xor i8 %8964, 1
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8965, i8* %8966, align 1
  %8967 = xor i64 20, %8952
  %8968 = trunc i64 %8967 to i32
  %8969 = xor i32 %8968, %8956
  %8970 = lshr i32 %8969, 4
  %8971 = trunc i32 %8970 to i8
  %8972 = and i8 %8971, 1
  %8973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8972, i8* %8973, align 1
  %8974 = icmp eq i32 %8956, 0
  %8975 = zext i1 %8974 to i8
  %8976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8975, i8* %8976, align 1
  %8977 = lshr i32 %8956, 31
  %8978 = trunc i32 %8977 to i8
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8978, i8* %8979, align 1
  %8980 = lshr i32 %8955, 31
  %8981 = xor i32 %8977, %8980
  %8982 = add i32 %8981, %8980
  %8983 = icmp eq i32 %8982, 2
  %8984 = zext i1 %8983 to i8
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8984, i8* %8985, align 1
  store %struct.Memory* %loadMem_44f333, %struct.Memory** %MEMORY
  %loadMem_44f336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8987 = getelementptr inbounds %struct.GPR, %struct.GPR* %8986, i32 0, i32 33
  %8988 = getelementptr inbounds %struct.Reg, %struct.Reg* %8987, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %8988 to i64*
  %8989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8990 = getelementptr inbounds %struct.GPR, %struct.GPR* %8989, i32 0, i32 1
  %8991 = getelementptr inbounds %struct.Reg, %struct.Reg* %8990, i32 0, i32 0
  %EAX.i181 = bitcast %union.anon* %8991 to i32*
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8993 = getelementptr inbounds %struct.GPR, %struct.GPR* %8992, i32 0, i32 5
  %8994 = getelementptr inbounds %struct.Reg, %struct.Reg* %8993, i32 0, i32 0
  %RCX.i182 = bitcast %union.anon* %8994 to i64*
  %8995 = load i32, i32* %EAX.i181
  %8996 = zext i32 %8995 to i64
  %8997 = load i64, i64* %PC.i180
  %8998 = add i64 %8997, 3
  store i64 %8998, i64* %PC.i180
  %8999 = shl i64 %8996, 32
  %9000 = ashr exact i64 %8999, 32
  store i64 %9000, i64* %RCX.i182, align 8
  store %struct.Memory* %loadMem_44f336, %struct.Memory** %MEMORY
  %loadMem_44f339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9002 = getelementptr inbounds %struct.GPR, %struct.GPR* %9001, i32 0, i32 33
  %9003 = getelementptr inbounds %struct.Reg, %struct.Reg* %9002, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %9003 to i64*
  %9004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9005 = getelementptr inbounds %struct.GPR, %struct.GPR* %9004, i32 0, i32 1
  %9006 = getelementptr inbounds %struct.Reg, %struct.Reg* %9005, i32 0, i32 0
  %RAX.i177 = bitcast %union.anon* %9006 to i64*
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9008 = getelementptr inbounds %struct.GPR, %struct.GPR* %9007, i32 0, i32 5
  %9009 = getelementptr inbounds %struct.Reg, %struct.Reg* %9008, i32 0, i32 0
  %RCX.i178 = bitcast %union.anon* %9009 to i64*
  %9010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9011 = getelementptr inbounds %struct.GPR, %struct.GPR* %9010, i32 0, i32 15
  %9012 = getelementptr inbounds %struct.Reg, %struct.Reg* %9011, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %9012 to i64*
  %9013 = load i64, i64* %RBP.i179
  %9014 = load i64, i64* %RCX.i178
  %9015 = add i64 %9013, -432
  %9016 = add i64 %9015, %9014
  %9017 = load i64, i64* %PC.i176
  %9018 = add i64 %9017, 8
  store i64 %9018, i64* %PC.i176
  %9019 = inttoptr i64 %9016 to i8*
  %9020 = load i8, i8* %9019
  %9021 = sext i8 %9020 to i64
  %9022 = and i64 %9021, 4294967295
  store i64 %9022, i64* %RAX.i177, align 8
  store %struct.Memory* %loadMem_44f339, %struct.Memory** %MEMORY
  %loadMem_44f341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9024 = getelementptr inbounds %struct.GPR, %struct.GPR* %9023, i32 0, i32 33
  %9025 = getelementptr inbounds %struct.Reg, %struct.Reg* %9024, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %9025 to i64*
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 1
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %EAX.i175 = bitcast %union.anon* %9028 to i32*
  %9029 = load i32, i32* %EAX.i175
  %9030 = zext i32 %9029 to i64
  %9031 = load i64, i64* %PC.i174
  %9032 = add i64 %9031, 3
  store i64 %9032, i64* %PC.i174
  %9033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9033, align 1
  %9034 = and i32 %9029, 255
  %9035 = call i32 @llvm.ctpop.i32(i32 %9034)
  %9036 = trunc i32 %9035 to i8
  %9037 = and i8 %9036, 1
  %9038 = xor i8 %9037, 1
  %9039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9038, i8* %9039, align 1
  %9040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9040, align 1
  %9041 = icmp eq i32 %9029, 0
  %9042 = zext i1 %9041 to i8
  %9043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9042, i8* %9043, align 1
  %9044 = lshr i32 %9029, 31
  %9045 = trunc i32 %9044 to i8
  %9046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9045, i8* %9046, align 1
  %9047 = lshr i32 %9029, 31
  %9048 = xor i32 %9044, %9047
  %9049 = add i32 %9048, %9047
  %9050 = icmp eq i32 %9049, 2
  %9051 = zext i1 %9050 to i8
  %9052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9051, i8* %9052, align 1
  store %struct.Memory* %loadMem_44f341, %struct.Memory** %MEMORY
  %loadMem_44f344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9054 = getelementptr inbounds %struct.GPR, %struct.GPR* %9053, i32 0, i32 33
  %9055 = getelementptr inbounds %struct.Reg, %struct.Reg* %9054, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %9055 to i64*
  %9056 = load i64, i64* %PC.i173
  %9057 = add i64 %9056, 35
  %9058 = load i64, i64* %PC.i173
  %9059 = add i64 %9058, 6
  %9060 = load i64, i64* %PC.i173
  %9061 = add i64 %9060, 6
  store i64 %9061, i64* %PC.i173
  %9062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9063 = load i8, i8* %9062, align 1
  %9064 = icmp ne i8 %9063, 0
  %9065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9066 = load i8, i8* %9065, align 1
  %9067 = icmp ne i8 %9066, 0
  %9068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9069 = load i8, i8* %9068, align 1
  %9070 = icmp ne i8 %9069, 0
  %9071 = xor i1 %9067, %9070
  %9072 = or i1 %9064, %9071
  %9073 = zext i1 %9072 to i8
  store i8 %9073, i8* %BRANCH_TAKEN, align 1
  %9074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9075 = select i1 %9072, i64 %9057, i64 %9059
  store i64 %9075, i64* %9074, align 8
  store %struct.Memory* %loadMem_44f344, %struct.Memory** %MEMORY
  %loadBr_44f344 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f344 = icmp eq i8 %loadBr_44f344, 1
  br i1 %cmpBr_44f344, label %block_.L_44f367, label %block_44f34a

block_44f34a:                                     ; preds = %block_44f32d
  %loadMem_44f34a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9077 = getelementptr inbounds %struct.GPR, %struct.GPR* %9076, i32 0, i32 33
  %9078 = getelementptr inbounds %struct.Reg, %struct.Reg* %9077, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %9078 to i64*
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9080 = getelementptr inbounds %struct.GPR, %struct.GPR* %9079, i32 0, i32 1
  %9081 = getelementptr inbounds %struct.Reg, %struct.Reg* %9080, i32 0, i32 0
  %RAX.i171 = bitcast %union.anon* %9081 to i64*
  %9082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9083 = getelementptr inbounds %struct.GPR, %struct.GPR* %9082, i32 0, i32 15
  %9084 = getelementptr inbounds %struct.Reg, %struct.Reg* %9083, i32 0, i32 0
  %RBP.i172 = bitcast %union.anon* %9084 to i64*
  %9085 = load i64, i64* %RBP.i172
  %9086 = sub i64 %9085, 436
  %9087 = load i64, i64* %PC.i170
  %9088 = add i64 %9087, 6
  store i64 %9088, i64* %PC.i170
  %9089 = inttoptr i64 %9086 to i32*
  %9090 = load i32, i32* %9089
  %9091 = zext i32 %9090 to i64
  store i64 %9091, i64* %RAX.i171, align 8
  store %struct.Memory* %loadMem_44f34a, %struct.Memory** %MEMORY
  %loadMem_44f350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9093 = getelementptr inbounds %struct.GPR, %struct.GPR* %9092, i32 0, i32 33
  %9094 = getelementptr inbounds %struct.Reg, %struct.Reg* %9093, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %9094 to i64*
  %9095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9096 = getelementptr inbounds %struct.GPR, %struct.GPR* %9095, i32 0, i32 1
  %9097 = getelementptr inbounds %struct.Reg, %struct.Reg* %9096, i32 0, i32 0
  %RAX.i169 = bitcast %union.anon* %9097 to i64*
  %9098 = load i64, i64* %RAX.i169
  %9099 = load i64, i64* %PC.i168
  %9100 = add i64 %9099, 3
  store i64 %9100, i64* %PC.i168
  %9101 = trunc i64 %9098 to i32
  %9102 = sub i32 %9101, 20
  %9103 = zext i32 %9102 to i64
  store i64 %9103, i64* %RAX.i169, align 8
  %9104 = icmp ult i32 %9101, 20
  %9105 = zext i1 %9104 to i8
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9105, i8* %9106, align 1
  %9107 = and i32 %9102, 255
  %9108 = call i32 @llvm.ctpop.i32(i32 %9107)
  %9109 = trunc i32 %9108 to i8
  %9110 = and i8 %9109, 1
  %9111 = xor i8 %9110, 1
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9111, i8* %9112, align 1
  %9113 = xor i64 20, %9098
  %9114 = trunc i64 %9113 to i32
  %9115 = xor i32 %9114, %9102
  %9116 = lshr i32 %9115, 4
  %9117 = trunc i32 %9116 to i8
  %9118 = and i8 %9117, 1
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9118, i8* %9119, align 1
  %9120 = icmp eq i32 %9102, 0
  %9121 = zext i1 %9120 to i8
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9121, i8* %9122, align 1
  %9123 = lshr i32 %9102, 31
  %9124 = trunc i32 %9123 to i8
  %9125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9124, i8* %9125, align 1
  %9126 = lshr i32 %9101, 31
  %9127 = xor i32 %9123, %9126
  %9128 = add i32 %9127, %9126
  %9129 = icmp eq i32 %9128, 2
  %9130 = zext i1 %9129 to i8
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9130, i8* %9131, align 1
  store %struct.Memory* %loadMem_44f350, %struct.Memory** %MEMORY
  %loadMem_44f353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9133 = getelementptr inbounds %struct.GPR, %struct.GPR* %9132, i32 0, i32 33
  %9134 = getelementptr inbounds %struct.Reg, %struct.Reg* %9133, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %9134 to i64*
  %9135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9136 = getelementptr inbounds %struct.GPR, %struct.GPR* %9135, i32 0, i32 1
  %9137 = getelementptr inbounds %struct.Reg, %struct.Reg* %9136, i32 0, i32 0
  %EAX.i166 = bitcast %union.anon* %9137 to i32*
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9139 = getelementptr inbounds %struct.GPR, %struct.GPR* %9138, i32 0, i32 5
  %9140 = getelementptr inbounds %struct.Reg, %struct.Reg* %9139, i32 0, i32 0
  %RCX.i167 = bitcast %union.anon* %9140 to i64*
  %9141 = load i32, i32* %EAX.i166
  %9142 = zext i32 %9141 to i64
  %9143 = load i64, i64* %PC.i165
  %9144 = add i64 %9143, 3
  store i64 %9144, i64* %PC.i165
  %9145 = shl i64 %9142, 32
  %9146 = ashr exact i64 %9145, 32
  store i64 %9146, i64* %RCX.i167, align 8
  store %struct.Memory* %loadMem_44f353, %struct.Memory** %MEMORY
  %loadMem_44f356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9148 = getelementptr inbounds %struct.GPR, %struct.GPR* %9147, i32 0, i32 33
  %9149 = getelementptr inbounds %struct.Reg, %struct.Reg* %9148, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %9149 to i64*
  %9150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9151 = getelementptr inbounds %struct.GPR, %struct.GPR* %9150, i32 0, i32 1
  %9152 = getelementptr inbounds %struct.Reg, %struct.Reg* %9151, i32 0, i32 0
  %RAX.i162 = bitcast %union.anon* %9152 to i64*
  %9153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9154 = getelementptr inbounds %struct.GPR, %struct.GPR* %9153, i32 0, i32 5
  %9155 = getelementptr inbounds %struct.Reg, %struct.Reg* %9154, i32 0, i32 0
  %RCX.i163 = bitcast %union.anon* %9155 to i64*
  %9156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9157 = getelementptr inbounds %struct.GPR, %struct.GPR* %9156, i32 0, i32 15
  %9158 = getelementptr inbounds %struct.Reg, %struct.Reg* %9157, i32 0, i32 0
  %RBP.i164 = bitcast %union.anon* %9158 to i64*
  %9159 = load i64, i64* %RBP.i164
  %9160 = load i64, i64* %RCX.i163
  %9161 = add i64 %9159, -432
  %9162 = add i64 %9161, %9160
  %9163 = load i64, i64* %PC.i161
  %9164 = add i64 %9163, 8
  store i64 %9164, i64* %PC.i161
  %9165 = inttoptr i64 %9162 to i8*
  %9166 = load i8, i8* %9165
  %9167 = sext i8 %9166 to i64
  %9168 = and i64 %9167, 4294967295
  store i64 %9168, i64* %RAX.i162, align 8
  store %struct.Memory* %loadMem_44f356, %struct.Memory** %MEMORY
  %loadMem_44f35e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9170 = getelementptr inbounds %struct.GPR, %struct.GPR* %9169, i32 0, i32 33
  %9171 = getelementptr inbounds %struct.Reg, %struct.Reg* %9170, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %9171 to i64*
  %9172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9173 = getelementptr inbounds %struct.GPR, %struct.GPR* %9172, i32 0, i32 1
  %9174 = getelementptr inbounds %struct.Reg, %struct.Reg* %9173, i32 0, i32 0
  %EAX.i160 = bitcast %union.anon* %9174 to i32*
  %9175 = load i32, i32* %EAX.i160
  %9176 = zext i32 %9175 to i64
  %9177 = load i64, i64* %PC.i159
  %9178 = add i64 %9177, 3
  store i64 %9178, i64* %PC.i159
  %9179 = sub i32 %9175, 4
  %9180 = icmp ult i32 %9175, 4
  %9181 = zext i1 %9180 to i8
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9181, i8* %9182, align 1
  %9183 = and i32 %9179, 255
  %9184 = call i32 @llvm.ctpop.i32(i32 %9183)
  %9185 = trunc i32 %9184 to i8
  %9186 = and i8 %9185, 1
  %9187 = xor i8 %9186, 1
  %9188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9187, i8* %9188, align 1
  %9189 = xor i64 4, %9176
  %9190 = trunc i64 %9189 to i32
  %9191 = xor i32 %9190, %9179
  %9192 = lshr i32 %9191, 4
  %9193 = trunc i32 %9192 to i8
  %9194 = and i8 %9193, 1
  %9195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9194, i8* %9195, align 1
  %9196 = icmp eq i32 %9179, 0
  %9197 = zext i1 %9196 to i8
  %9198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9197, i8* %9198, align 1
  %9199 = lshr i32 %9179, 31
  %9200 = trunc i32 %9199 to i8
  %9201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9200, i8* %9201, align 1
  %9202 = lshr i32 %9175, 31
  %9203 = xor i32 %9199, %9202
  %9204 = add i32 %9203, %9202
  %9205 = icmp eq i32 %9204, 2
  %9206 = zext i1 %9205 to i8
  %9207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9206, i8* %9207, align 1
  store %struct.Memory* %loadMem_44f35e, %struct.Memory** %MEMORY
  %loadMem_44f361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9209 = getelementptr inbounds %struct.GPR, %struct.GPR* %9208, i32 0, i32 33
  %9210 = getelementptr inbounds %struct.Reg, %struct.Reg* %9209, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %9210 to i64*
  %9211 = load i64, i64* %PC.i158
  %9212 = add i64 %9211, 93
  %9213 = load i64, i64* %PC.i158
  %9214 = add i64 %9213, 6
  %9215 = load i64, i64* %PC.i158
  %9216 = add i64 %9215, 6
  store i64 %9216, i64* %PC.i158
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9218 = load i8, i8* %9217, align 1
  %9219 = icmp ne i8 %9218, 0
  %9220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9221 = load i8, i8* %9220, align 1
  %9222 = icmp ne i8 %9221, 0
  %9223 = xor i1 %9219, %9222
  %9224 = zext i1 %9223 to i8
  store i8 %9224, i8* %BRANCH_TAKEN, align 1
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9226 = select i1 %9223, i64 %9212, i64 %9214
  store i64 %9226, i64* %9225, align 8
  store %struct.Memory* %loadMem_44f361, %struct.Memory** %MEMORY
  %loadBr_44f361 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f361 = icmp eq i8 %loadBr_44f361, 1
  br i1 %cmpBr_44f361, label %block_.L_44f3be, label %block_.L_44f367

block_.L_44f367:                                  ; preds = %block_44f34a, %block_44f32d, %block_.L_44f310
  %loadMem_44f367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9228 = getelementptr inbounds %struct.GPR, %struct.GPR* %9227, i32 0, i32 33
  %9229 = getelementptr inbounds %struct.Reg, %struct.Reg* %9228, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %9229 to i64*
  %9230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9231 = getelementptr inbounds %struct.GPR, %struct.GPR* %9230, i32 0, i32 1
  %9232 = getelementptr inbounds %struct.Reg, %struct.Reg* %9231, i32 0, i32 0
  %RAX.i156 = bitcast %union.anon* %9232 to i64*
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9234 = getelementptr inbounds %struct.GPR, %struct.GPR* %9233, i32 0, i32 15
  %9235 = getelementptr inbounds %struct.Reg, %struct.Reg* %9234, i32 0, i32 0
  %RBP.i157 = bitcast %union.anon* %9235 to i64*
  %9236 = load i64, i64* %RBP.i157
  %9237 = sub i64 %9236, 436
  %9238 = load i64, i64* %PC.i155
  %9239 = add i64 %9238, 6
  store i64 %9239, i64* %PC.i155
  %9240 = inttoptr i64 %9237 to i32*
  %9241 = load i32, i32* %9240
  %9242 = zext i32 %9241 to i64
  store i64 %9242, i64* %RAX.i156, align 8
  store %struct.Memory* %loadMem_44f367, %struct.Memory** %MEMORY
  %loadMem_44f36d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9244 = getelementptr inbounds %struct.GPR, %struct.GPR* %9243, i32 0, i32 33
  %9245 = getelementptr inbounds %struct.Reg, %struct.Reg* %9244, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %9245 to i64*
  %9246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9247 = getelementptr inbounds %struct.GPR, %struct.GPR* %9246, i32 0, i32 1
  %9248 = getelementptr inbounds %struct.Reg, %struct.Reg* %9247, i32 0, i32 0
  %RAX.i154 = bitcast %union.anon* %9248 to i64*
  %9249 = load i64, i64* %RAX.i154
  %9250 = load i64, i64* %PC.i153
  %9251 = add i64 %9250, 3
  store i64 %9251, i64* %PC.i153
  %9252 = trunc i64 %9249 to i32
  %9253 = add i32 1, %9252
  %9254 = zext i32 %9253 to i64
  store i64 %9254, i64* %RAX.i154, align 8
  %9255 = icmp ult i32 %9253, %9252
  %9256 = icmp ult i32 %9253, 1
  %9257 = or i1 %9255, %9256
  %9258 = zext i1 %9257 to i8
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9258, i8* %9259, align 1
  %9260 = and i32 %9253, 255
  %9261 = call i32 @llvm.ctpop.i32(i32 %9260)
  %9262 = trunc i32 %9261 to i8
  %9263 = and i8 %9262, 1
  %9264 = xor i8 %9263, 1
  %9265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9264, i8* %9265, align 1
  %9266 = xor i64 1, %9249
  %9267 = trunc i64 %9266 to i32
  %9268 = xor i32 %9267, %9253
  %9269 = lshr i32 %9268, 4
  %9270 = trunc i32 %9269 to i8
  %9271 = and i8 %9270, 1
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9271, i8* %9272, align 1
  %9273 = icmp eq i32 %9253, 0
  %9274 = zext i1 %9273 to i8
  %9275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9274, i8* %9275, align 1
  %9276 = lshr i32 %9253, 31
  %9277 = trunc i32 %9276 to i8
  %9278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9277, i8* %9278, align 1
  %9279 = lshr i32 %9252, 31
  %9280 = xor i32 %9276, %9279
  %9281 = add i32 %9280, %9276
  %9282 = icmp eq i32 %9281, 2
  %9283 = zext i1 %9282 to i8
  %9284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9283, i8* %9284, align 1
  store %struct.Memory* %loadMem_44f36d, %struct.Memory** %MEMORY
  %loadMem_44f370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9286 = getelementptr inbounds %struct.GPR, %struct.GPR* %9285, i32 0, i32 33
  %9287 = getelementptr inbounds %struct.Reg, %struct.Reg* %9286, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %9287 to i64*
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9289 = getelementptr inbounds %struct.GPR, %struct.GPR* %9288, i32 0, i32 1
  %9290 = getelementptr inbounds %struct.Reg, %struct.Reg* %9289, i32 0, i32 0
  %EAX.i151 = bitcast %union.anon* %9290 to i32*
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9292 = getelementptr inbounds %struct.GPR, %struct.GPR* %9291, i32 0, i32 5
  %9293 = getelementptr inbounds %struct.Reg, %struct.Reg* %9292, i32 0, i32 0
  %RCX.i152 = bitcast %union.anon* %9293 to i64*
  %9294 = load i32, i32* %EAX.i151
  %9295 = zext i32 %9294 to i64
  %9296 = load i64, i64* %PC.i150
  %9297 = add i64 %9296, 3
  store i64 %9297, i64* %PC.i150
  %9298 = shl i64 %9295, 32
  %9299 = ashr exact i64 %9298, 32
  store i64 %9299, i64* %RCX.i152, align 8
  store %struct.Memory* %loadMem_44f370, %struct.Memory** %MEMORY
  %loadMem_44f373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9301 = getelementptr inbounds %struct.GPR, %struct.GPR* %9300, i32 0, i32 33
  %9302 = getelementptr inbounds %struct.Reg, %struct.Reg* %9301, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %9302 to i64*
  %9303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9304 = getelementptr inbounds %struct.GPR, %struct.GPR* %9303, i32 0, i32 1
  %9305 = getelementptr inbounds %struct.Reg, %struct.Reg* %9304, i32 0, i32 0
  %RAX.i148 = bitcast %union.anon* %9305 to i64*
  %9306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9307 = getelementptr inbounds %struct.GPR, %struct.GPR* %9306, i32 0, i32 5
  %9308 = getelementptr inbounds %struct.Reg, %struct.Reg* %9307, i32 0, i32 0
  %RCX.i149 = bitcast %union.anon* %9308 to i64*
  %9309 = load i64, i64* %RCX.i149
  %9310 = add i64 %9309, 12099168
  %9311 = load i64, i64* %PC.i147
  %9312 = add i64 %9311, 8
  store i64 %9312, i64* %PC.i147
  %9313 = inttoptr i64 %9310 to i8*
  %9314 = load i8, i8* %9313
  %9315 = zext i8 %9314 to i64
  store i64 %9315, i64* %RAX.i148, align 8
  store %struct.Memory* %loadMem_44f373, %struct.Memory** %MEMORY
  %loadMem_44f37b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9317 = getelementptr inbounds %struct.GPR, %struct.GPR* %9316, i32 0, i32 33
  %9318 = getelementptr inbounds %struct.Reg, %struct.Reg* %9317, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %9318 to i64*
  %9319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9320 = getelementptr inbounds %struct.GPR, %struct.GPR* %9319, i32 0, i32 1
  %9321 = getelementptr inbounds %struct.Reg, %struct.Reg* %9320, i32 0, i32 0
  %EAX.i146 = bitcast %union.anon* %9321 to i32*
  %9322 = load i32, i32* %EAX.i146
  %9323 = zext i32 %9322 to i64
  %9324 = load i64, i64* %PC.i145
  %9325 = add i64 %9324, 3
  store i64 %9325, i64* %PC.i145
  %9326 = sub i32 %9322, 3
  %9327 = icmp ult i32 %9322, 3
  %9328 = zext i1 %9327 to i8
  %9329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9328, i8* %9329, align 1
  %9330 = and i32 %9326, 255
  %9331 = call i32 @llvm.ctpop.i32(i32 %9330)
  %9332 = trunc i32 %9331 to i8
  %9333 = and i8 %9332, 1
  %9334 = xor i8 %9333, 1
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9334, i8* %9335, align 1
  %9336 = xor i64 3, %9323
  %9337 = trunc i64 %9336 to i32
  %9338 = xor i32 %9337, %9326
  %9339 = lshr i32 %9338, 4
  %9340 = trunc i32 %9339 to i8
  %9341 = and i8 %9340, 1
  %9342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9341, i8* %9342, align 1
  %9343 = icmp eq i32 %9326, 0
  %9344 = zext i1 %9343 to i8
  %9345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9344, i8* %9345, align 1
  %9346 = lshr i32 %9326, 31
  %9347 = trunc i32 %9346 to i8
  %9348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9347, i8* %9348, align 1
  %9349 = lshr i32 %9322, 31
  %9350 = xor i32 %9346, %9349
  %9351 = add i32 %9350, %9349
  %9352 = icmp eq i32 %9351, 2
  %9353 = zext i1 %9352 to i8
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9353, i8* %9354, align 1
  store %struct.Memory* %loadMem_44f37b, %struct.Memory** %MEMORY
  %loadMem_44f37e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9356 = getelementptr inbounds %struct.GPR, %struct.GPR* %9355, i32 0, i32 33
  %9357 = getelementptr inbounds %struct.Reg, %struct.Reg* %9356, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %9357 to i64*
  %9358 = load i64, i64* %PC.i144
  %9359 = add i64 %9358, 79
  %9360 = load i64, i64* %PC.i144
  %9361 = add i64 %9360, 6
  %9362 = load i64, i64* %PC.i144
  %9363 = add i64 %9362, 6
  store i64 %9363, i64* %PC.i144
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9365 = load i8, i8* %9364, align 1
  store i8 %9365, i8* %BRANCH_TAKEN, align 1
  %9366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9367 = icmp ne i8 %9365, 0
  %9368 = select i1 %9367, i64 %9359, i64 %9361
  store i64 %9368, i64* %9366, align 8
  store %struct.Memory* %loadMem_44f37e, %struct.Memory** %MEMORY
  %loadBr_44f37e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f37e = icmp eq i8 %loadBr_44f37e, 1
  br i1 %cmpBr_44f37e, label %block_.L_44f3cd, label %block_44f384

block_44f384:                                     ; preds = %block_.L_44f367
  %loadMem_44f384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9370 = getelementptr inbounds %struct.GPR, %struct.GPR* %9369, i32 0, i32 33
  %9371 = getelementptr inbounds %struct.Reg, %struct.Reg* %9370, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %9371 to i64*
  %9372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9373 = getelementptr inbounds %struct.GPR, %struct.GPR* %9372, i32 0, i32 1
  %9374 = getelementptr inbounds %struct.Reg, %struct.Reg* %9373, i32 0, i32 0
  %RAX.i142 = bitcast %union.anon* %9374 to i64*
  %9375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9376 = getelementptr inbounds %struct.GPR, %struct.GPR* %9375, i32 0, i32 15
  %9377 = getelementptr inbounds %struct.Reg, %struct.Reg* %9376, i32 0, i32 0
  %RBP.i143 = bitcast %union.anon* %9377 to i64*
  %9378 = load i64, i64* %RBP.i143
  %9379 = sub i64 %9378, 436
  %9380 = load i64, i64* %PC.i141
  %9381 = add i64 %9380, 6
  store i64 %9381, i64* %PC.i141
  %9382 = inttoptr i64 %9379 to i32*
  %9383 = load i32, i32* %9382
  %9384 = zext i32 %9383 to i64
  store i64 %9384, i64* %RAX.i142, align 8
  store %struct.Memory* %loadMem_44f384, %struct.Memory** %MEMORY
  %loadMem_44f38a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9386 = getelementptr inbounds %struct.GPR, %struct.GPR* %9385, i32 0, i32 33
  %9387 = getelementptr inbounds %struct.Reg, %struct.Reg* %9386, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %9387 to i64*
  %9388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9389 = getelementptr inbounds %struct.GPR, %struct.GPR* %9388, i32 0, i32 1
  %9390 = getelementptr inbounds %struct.Reg, %struct.Reg* %9389, i32 0, i32 0
  %RAX.i140 = bitcast %union.anon* %9390 to i64*
  %9391 = load i64, i64* %RAX.i140
  %9392 = load i64, i64* %PC.i139
  %9393 = add i64 %9392, 3
  store i64 %9393, i64* %PC.i139
  %9394 = trunc i64 %9391 to i32
  %9395 = add i32 1, %9394
  %9396 = zext i32 %9395 to i64
  store i64 %9396, i64* %RAX.i140, align 8
  %9397 = icmp ult i32 %9395, %9394
  %9398 = icmp ult i32 %9395, 1
  %9399 = or i1 %9397, %9398
  %9400 = zext i1 %9399 to i8
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9400, i8* %9401, align 1
  %9402 = and i32 %9395, 255
  %9403 = call i32 @llvm.ctpop.i32(i32 %9402)
  %9404 = trunc i32 %9403 to i8
  %9405 = and i8 %9404, 1
  %9406 = xor i8 %9405, 1
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9406, i8* %9407, align 1
  %9408 = xor i64 1, %9391
  %9409 = trunc i64 %9408 to i32
  %9410 = xor i32 %9409, %9395
  %9411 = lshr i32 %9410, 4
  %9412 = trunc i32 %9411 to i8
  %9413 = and i8 %9412, 1
  %9414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9413, i8* %9414, align 1
  %9415 = icmp eq i32 %9395, 0
  %9416 = zext i1 %9415 to i8
  %9417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9416, i8* %9417, align 1
  %9418 = lshr i32 %9395, 31
  %9419 = trunc i32 %9418 to i8
  %9420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9419, i8* %9420, align 1
  %9421 = lshr i32 %9394, 31
  %9422 = xor i32 %9418, %9421
  %9423 = add i32 %9422, %9418
  %9424 = icmp eq i32 %9423, 2
  %9425 = zext i1 %9424 to i8
  %9426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9425, i8* %9426, align 1
  store %struct.Memory* %loadMem_44f38a, %struct.Memory** %MEMORY
  %loadMem_44f38d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9428 = getelementptr inbounds %struct.GPR, %struct.GPR* %9427, i32 0, i32 33
  %9429 = getelementptr inbounds %struct.Reg, %struct.Reg* %9428, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %9429 to i64*
  %9430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9431 = getelementptr inbounds %struct.GPR, %struct.GPR* %9430, i32 0, i32 1
  %9432 = getelementptr inbounds %struct.Reg, %struct.Reg* %9431, i32 0, i32 0
  %EAX.i137 = bitcast %union.anon* %9432 to i32*
  %9433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9434 = getelementptr inbounds %struct.GPR, %struct.GPR* %9433, i32 0, i32 5
  %9435 = getelementptr inbounds %struct.Reg, %struct.Reg* %9434, i32 0, i32 0
  %RCX.i138 = bitcast %union.anon* %9435 to i64*
  %9436 = load i32, i32* %EAX.i137
  %9437 = zext i32 %9436 to i64
  %9438 = load i64, i64* %PC.i136
  %9439 = add i64 %9438, 3
  store i64 %9439, i64* %PC.i136
  %9440 = shl i64 %9437, 32
  %9441 = ashr exact i64 %9440, 32
  store i64 %9441, i64* %RCX.i138, align 8
  store %struct.Memory* %loadMem_44f38d, %struct.Memory** %MEMORY
  %loadMem_44f390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9443 = getelementptr inbounds %struct.GPR, %struct.GPR* %9442, i32 0, i32 33
  %9444 = getelementptr inbounds %struct.Reg, %struct.Reg* %9443, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %9444 to i64*
  %9445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9446 = getelementptr inbounds %struct.GPR, %struct.GPR* %9445, i32 0, i32 1
  %9447 = getelementptr inbounds %struct.Reg, %struct.Reg* %9446, i32 0, i32 0
  %RAX.i133 = bitcast %union.anon* %9447 to i64*
  %9448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9449 = getelementptr inbounds %struct.GPR, %struct.GPR* %9448, i32 0, i32 5
  %9450 = getelementptr inbounds %struct.Reg, %struct.Reg* %9449, i32 0, i32 0
  %RCX.i134 = bitcast %union.anon* %9450 to i64*
  %9451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9452 = getelementptr inbounds %struct.GPR, %struct.GPR* %9451, i32 0, i32 15
  %9453 = getelementptr inbounds %struct.Reg, %struct.Reg* %9452, i32 0, i32 0
  %RBP.i135 = bitcast %union.anon* %9453 to i64*
  %9454 = load i64, i64* %RBP.i135
  %9455 = load i64, i64* %RCX.i134
  %9456 = add i64 %9454, -432
  %9457 = add i64 %9456, %9455
  %9458 = load i64, i64* %PC.i132
  %9459 = add i64 %9458, 8
  store i64 %9459, i64* %PC.i132
  %9460 = inttoptr i64 %9457 to i8*
  %9461 = load i8, i8* %9460
  %9462 = sext i8 %9461 to i64
  %9463 = and i64 %9462, 4294967295
  store i64 %9463, i64* %RAX.i133, align 8
  store %struct.Memory* %loadMem_44f390, %struct.Memory** %MEMORY
  %loadMem_44f398 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9465 = getelementptr inbounds %struct.GPR, %struct.GPR* %9464, i32 0, i32 33
  %9466 = getelementptr inbounds %struct.Reg, %struct.Reg* %9465, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %9466 to i64*
  %9467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9468 = getelementptr inbounds %struct.GPR, %struct.GPR* %9467, i32 0, i32 1
  %9469 = getelementptr inbounds %struct.Reg, %struct.Reg* %9468, i32 0, i32 0
  %EAX.i131 = bitcast %union.anon* %9469 to i32*
  %9470 = load i32, i32* %EAX.i131
  %9471 = zext i32 %9470 to i64
  %9472 = load i64, i64* %PC.i130
  %9473 = add i64 %9472, 3
  store i64 %9473, i64* %PC.i130
  %9474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9474, align 1
  %9475 = and i32 %9470, 255
  %9476 = call i32 @llvm.ctpop.i32(i32 %9475)
  %9477 = trunc i32 %9476 to i8
  %9478 = and i8 %9477, 1
  %9479 = xor i8 %9478, 1
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9479, i8* %9480, align 1
  %9481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9481, align 1
  %9482 = icmp eq i32 %9470, 0
  %9483 = zext i1 %9482 to i8
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9483, i8* %9484, align 1
  %9485 = lshr i32 %9470, 31
  %9486 = trunc i32 %9485 to i8
  %9487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9486, i8* %9487, align 1
  %9488 = lshr i32 %9470, 31
  %9489 = xor i32 %9485, %9488
  %9490 = add i32 %9489, %9488
  %9491 = icmp eq i32 %9490, 2
  %9492 = zext i1 %9491 to i8
  %9493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9492, i8* %9493, align 1
  store %struct.Memory* %loadMem_44f398, %struct.Memory** %MEMORY
  %loadMem_44f39b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9495 = getelementptr inbounds %struct.GPR, %struct.GPR* %9494, i32 0, i32 33
  %9496 = getelementptr inbounds %struct.Reg, %struct.Reg* %9495, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %9496 to i64*
  %9497 = load i64, i64* %PC.i129
  %9498 = add i64 %9497, 50
  %9499 = load i64, i64* %PC.i129
  %9500 = add i64 %9499, 6
  %9501 = load i64, i64* %PC.i129
  %9502 = add i64 %9501, 6
  store i64 %9502, i64* %PC.i129
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9504 = load i8, i8* %9503, align 1
  %9505 = icmp ne i8 %9504, 0
  %9506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9507 = load i8, i8* %9506, align 1
  %9508 = icmp ne i8 %9507, 0
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9510 = load i8, i8* %9509, align 1
  %9511 = icmp ne i8 %9510, 0
  %9512 = xor i1 %9508, %9511
  %9513 = or i1 %9505, %9512
  %9514 = zext i1 %9513 to i8
  store i8 %9514, i8* %BRANCH_TAKEN, align 1
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9516 = select i1 %9513, i64 %9498, i64 %9500
  store i64 %9516, i64* %9515, align 8
  store %struct.Memory* %loadMem_44f39b, %struct.Memory** %MEMORY
  %loadBr_44f39b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f39b = icmp eq i8 %loadBr_44f39b, 1
  br i1 %cmpBr_44f39b, label %block_.L_44f3cd, label %block_44f3a1

block_44f3a1:                                     ; preds = %block_44f384
  %loadMem_44f3a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9518 = getelementptr inbounds %struct.GPR, %struct.GPR* %9517, i32 0, i32 33
  %9519 = getelementptr inbounds %struct.Reg, %struct.Reg* %9518, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %9519 to i64*
  %9520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9521 = getelementptr inbounds %struct.GPR, %struct.GPR* %9520, i32 0, i32 1
  %9522 = getelementptr inbounds %struct.Reg, %struct.Reg* %9521, i32 0, i32 0
  %RAX.i127 = bitcast %union.anon* %9522 to i64*
  %9523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9524 = getelementptr inbounds %struct.GPR, %struct.GPR* %9523, i32 0, i32 15
  %9525 = getelementptr inbounds %struct.Reg, %struct.Reg* %9524, i32 0, i32 0
  %RBP.i128 = bitcast %union.anon* %9525 to i64*
  %9526 = load i64, i64* %RBP.i128
  %9527 = sub i64 %9526, 436
  %9528 = load i64, i64* %PC.i126
  %9529 = add i64 %9528, 6
  store i64 %9529, i64* %PC.i126
  %9530 = inttoptr i64 %9527 to i32*
  %9531 = load i32, i32* %9530
  %9532 = zext i32 %9531 to i64
  store i64 %9532, i64* %RAX.i127, align 8
  store %struct.Memory* %loadMem_44f3a1, %struct.Memory** %MEMORY
  %loadMem_44f3a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9534 = getelementptr inbounds %struct.GPR, %struct.GPR* %9533, i32 0, i32 33
  %9535 = getelementptr inbounds %struct.Reg, %struct.Reg* %9534, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %9535 to i64*
  %9536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9537 = getelementptr inbounds %struct.GPR, %struct.GPR* %9536, i32 0, i32 1
  %9538 = getelementptr inbounds %struct.Reg, %struct.Reg* %9537, i32 0, i32 0
  %RAX.i125 = bitcast %union.anon* %9538 to i64*
  %9539 = load i64, i64* %RAX.i125
  %9540 = load i64, i64* %PC.i124
  %9541 = add i64 %9540, 3
  store i64 %9541, i64* %PC.i124
  %9542 = trunc i64 %9539 to i32
  %9543 = add i32 1, %9542
  %9544 = zext i32 %9543 to i64
  store i64 %9544, i64* %RAX.i125, align 8
  %9545 = icmp ult i32 %9543, %9542
  %9546 = icmp ult i32 %9543, 1
  %9547 = or i1 %9545, %9546
  %9548 = zext i1 %9547 to i8
  %9549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9548, i8* %9549, align 1
  %9550 = and i32 %9543, 255
  %9551 = call i32 @llvm.ctpop.i32(i32 %9550)
  %9552 = trunc i32 %9551 to i8
  %9553 = and i8 %9552, 1
  %9554 = xor i8 %9553, 1
  %9555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9554, i8* %9555, align 1
  %9556 = xor i64 1, %9539
  %9557 = trunc i64 %9556 to i32
  %9558 = xor i32 %9557, %9543
  %9559 = lshr i32 %9558, 4
  %9560 = trunc i32 %9559 to i8
  %9561 = and i8 %9560, 1
  %9562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9561, i8* %9562, align 1
  %9563 = icmp eq i32 %9543, 0
  %9564 = zext i1 %9563 to i8
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9564, i8* %9565, align 1
  %9566 = lshr i32 %9543, 31
  %9567 = trunc i32 %9566 to i8
  %9568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9567, i8* %9568, align 1
  %9569 = lshr i32 %9542, 31
  %9570 = xor i32 %9566, %9569
  %9571 = add i32 %9570, %9566
  %9572 = icmp eq i32 %9571, 2
  %9573 = zext i1 %9572 to i8
  %9574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9573, i8* %9574, align 1
  store %struct.Memory* %loadMem_44f3a7, %struct.Memory** %MEMORY
  %loadMem_44f3aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9576 = getelementptr inbounds %struct.GPR, %struct.GPR* %9575, i32 0, i32 33
  %9577 = getelementptr inbounds %struct.Reg, %struct.Reg* %9576, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %9577 to i64*
  %9578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9579 = getelementptr inbounds %struct.GPR, %struct.GPR* %9578, i32 0, i32 1
  %9580 = getelementptr inbounds %struct.Reg, %struct.Reg* %9579, i32 0, i32 0
  %EAX.i122 = bitcast %union.anon* %9580 to i32*
  %9581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9582 = getelementptr inbounds %struct.GPR, %struct.GPR* %9581, i32 0, i32 5
  %9583 = getelementptr inbounds %struct.Reg, %struct.Reg* %9582, i32 0, i32 0
  %RCX.i123 = bitcast %union.anon* %9583 to i64*
  %9584 = load i32, i32* %EAX.i122
  %9585 = zext i32 %9584 to i64
  %9586 = load i64, i64* %PC.i121
  %9587 = add i64 %9586, 3
  store i64 %9587, i64* %PC.i121
  %9588 = shl i64 %9585, 32
  %9589 = ashr exact i64 %9588, 32
  store i64 %9589, i64* %RCX.i123, align 8
  store %struct.Memory* %loadMem_44f3aa, %struct.Memory** %MEMORY
  %loadMem_44f3ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %9590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9591 = getelementptr inbounds %struct.GPR, %struct.GPR* %9590, i32 0, i32 33
  %9592 = getelementptr inbounds %struct.Reg, %struct.Reg* %9591, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %9592 to i64*
  %9593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9594 = getelementptr inbounds %struct.GPR, %struct.GPR* %9593, i32 0, i32 1
  %9595 = getelementptr inbounds %struct.Reg, %struct.Reg* %9594, i32 0, i32 0
  %RAX.i118 = bitcast %union.anon* %9595 to i64*
  %9596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9597 = getelementptr inbounds %struct.GPR, %struct.GPR* %9596, i32 0, i32 5
  %9598 = getelementptr inbounds %struct.Reg, %struct.Reg* %9597, i32 0, i32 0
  %RCX.i119 = bitcast %union.anon* %9598 to i64*
  %9599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9600 = getelementptr inbounds %struct.GPR, %struct.GPR* %9599, i32 0, i32 15
  %9601 = getelementptr inbounds %struct.Reg, %struct.Reg* %9600, i32 0, i32 0
  %RBP.i120 = bitcast %union.anon* %9601 to i64*
  %9602 = load i64, i64* %RBP.i120
  %9603 = load i64, i64* %RCX.i119
  %9604 = add i64 %9602, -432
  %9605 = add i64 %9604, %9603
  %9606 = load i64, i64* %PC.i117
  %9607 = add i64 %9606, 8
  store i64 %9607, i64* %PC.i117
  %9608 = inttoptr i64 %9605 to i8*
  %9609 = load i8, i8* %9608
  %9610 = sext i8 %9609 to i64
  %9611 = and i64 %9610, 4294967295
  store i64 %9611, i64* %RAX.i118, align 8
  store %struct.Memory* %loadMem_44f3ad, %struct.Memory** %MEMORY
  %loadMem_44f3b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9613 = getelementptr inbounds %struct.GPR, %struct.GPR* %9612, i32 0, i32 33
  %9614 = getelementptr inbounds %struct.Reg, %struct.Reg* %9613, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %9614 to i64*
  %9615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9616 = getelementptr inbounds %struct.GPR, %struct.GPR* %9615, i32 0, i32 1
  %9617 = getelementptr inbounds %struct.Reg, %struct.Reg* %9616, i32 0, i32 0
  %EAX.i116 = bitcast %union.anon* %9617 to i32*
  %9618 = load i32, i32* %EAX.i116
  %9619 = zext i32 %9618 to i64
  %9620 = load i64, i64* %PC.i115
  %9621 = add i64 %9620, 3
  store i64 %9621, i64* %PC.i115
  %9622 = sub i32 %9618, 4
  %9623 = icmp ult i32 %9618, 4
  %9624 = zext i1 %9623 to i8
  %9625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9624, i8* %9625, align 1
  %9626 = and i32 %9622, 255
  %9627 = call i32 @llvm.ctpop.i32(i32 %9626)
  %9628 = trunc i32 %9627 to i8
  %9629 = and i8 %9628, 1
  %9630 = xor i8 %9629, 1
  %9631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9630, i8* %9631, align 1
  %9632 = xor i64 4, %9619
  %9633 = trunc i64 %9632 to i32
  %9634 = xor i32 %9633, %9622
  %9635 = lshr i32 %9634, 4
  %9636 = trunc i32 %9635 to i8
  %9637 = and i8 %9636, 1
  %9638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9637, i8* %9638, align 1
  %9639 = icmp eq i32 %9622, 0
  %9640 = zext i1 %9639 to i8
  %9641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9640, i8* %9641, align 1
  %9642 = lshr i32 %9622, 31
  %9643 = trunc i32 %9642 to i8
  %9644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9643, i8* %9644, align 1
  %9645 = lshr i32 %9618, 31
  %9646 = xor i32 %9642, %9645
  %9647 = add i32 %9646, %9645
  %9648 = icmp eq i32 %9647, 2
  %9649 = zext i1 %9648 to i8
  %9650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9649, i8* %9650, align 1
  store %struct.Memory* %loadMem_44f3b5, %struct.Memory** %MEMORY
  %loadMem_44f3b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9652 = getelementptr inbounds %struct.GPR, %struct.GPR* %9651, i32 0, i32 33
  %9653 = getelementptr inbounds %struct.Reg, %struct.Reg* %9652, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %9653 to i64*
  %9654 = load i64, i64* %PC.i114
  %9655 = add i64 %9654, 21
  %9656 = load i64, i64* %PC.i114
  %9657 = add i64 %9656, 6
  %9658 = load i64, i64* %PC.i114
  %9659 = add i64 %9658, 6
  store i64 %9659, i64* %PC.i114
  %9660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9661 = load i8, i8* %9660, align 1
  %9662 = icmp ne i8 %9661, 0
  %9663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9664 = load i8, i8* %9663, align 1
  %9665 = icmp ne i8 %9664, 0
  %9666 = xor i1 %9662, %9665
  %9667 = xor i1 %9666, true
  %9668 = zext i1 %9667 to i8
  store i8 %9668, i8* %BRANCH_TAKEN, align 1
  %9669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9670 = select i1 %9666, i64 %9657, i64 %9655
  store i64 %9670, i64* %9669, align 8
  store %struct.Memory* %loadMem_44f3b8, %struct.Memory** %MEMORY
  %loadBr_44f3b8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f3b8 = icmp eq i8 %loadBr_44f3b8, 1
  br i1 %cmpBr_44f3b8, label %block_.L_44f3cd, label %block_.L_44f3be

block_.L_44f3be:                                  ; preds = %block_44f3a1, %block_44f34a, %block_44f2f3, %block_44f29c
  %loadMem_44f3be = load %struct.Memory*, %struct.Memory** %MEMORY
  %9671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9672 = getelementptr inbounds %struct.GPR, %struct.GPR* %9671, i32 0, i32 33
  %9673 = getelementptr inbounds %struct.Reg, %struct.Reg* %9672, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %9673 to i64*
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9675 = getelementptr inbounds %struct.GPR, %struct.GPR* %9674, i32 0, i32 1
  %9676 = getelementptr inbounds %struct.Reg, %struct.Reg* %9675, i32 0, i32 0
  %RAX.i112 = bitcast %union.anon* %9676 to i64*
  %9677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9678 = getelementptr inbounds %struct.GPR, %struct.GPR* %9677, i32 0, i32 15
  %9679 = getelementptr inbounds %struct.Reg, %struct.Reg* %9678, i32 0, i32 0
  %RBP.i113 = bitcast %union.anon* %9679 to i64*
  %9680 = load i64, i64* %RBP.i113
  %9681 = sub i64 %9680, 436
  %9682 = load i64, i64* %PC.i111
  %9683 = add i64 %9682, 7
  store i64 %9683, i64* %PC.i111
  %9684 = inttoptr i64 %9681 to i32*
  %9685 = load i32, i32* %9684
  %9686 = sext i32 %9685 to i64
  store i64 %9686, i64* %RAX.i112, align 8
  store %struct.Memory* %loadMem_44f3be, %struct.Memory** %MEMORY
  %loadMem_44f3c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9688 = getelementptr inbounds %struct.GPR, %struct.GPR* %9687, i32 0, i32 33
  %9689 = getelementptr inbounds %struct.Reg, %struct.Reg* %9688, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %9689 to i64*
  %9690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9691 = getelementptr inbounds %struct.GPR, %struct.GPR* %9690, i32 0, i32 1
  %9692 = getelementptr inbounds %struct.Reg, %struct.Reg* %9691, i32 0, i32 0
  %RAX.i109 = bitcast %union.anon* %9692 to i64*
  %9693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9694 = getelementptr inbounds %struct.GPR, %struct.GPR* %9693, i32 0, i32 15
  %9695 = getelementptr inbounds %struct.Reg, %struct.Reg* %9694, i32 0, i32 0
  %RBP.i110 = bitcast %union.anon* %9695 to i64*
  %9696 = load i64, i64* %RBP.i110
  %9697 = load i64, i64* %RAX.i109
  %9698 = add i64 %9696, -432
  %9699 = add i64 %9698, %9697
  %9700 = load i64, i64* %PC.i108
  %9701 = add i64 %9700, 8
  store i64 %9701, i64* %PC.i108
  %9702 = inttoptr i64 %9699 to i8*
  store i8 4, i8* %9702
  store %struct.Memory* %loadMem_44f3c5, %struct.Memory** %MEMORY
  br label %block_.L_44f3cd

block_.L_44f3cd:                                  ; preds = %block_.L_44f3be, %block_44f3a1, %block_44f384, %block_.L_44f367
  %loadMem_44f3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9704 = getelementptr inbounds %struct.GPR, %struct.GPR* %9703, i32 0, i32 33
  %9705 = getelementptr inbounds %struct.Reg, %struct.Reg* %9704, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %9705 to i64*
  %9706 = load i64, i64* %PC.i107
  %9707 = add i64 %9706, 5
  %9708 = load i64, i64* %PC.i107
  %9709 = add i64 %9708, 5
  store i64 %9709, i64* %PC.i107
  %9710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9707, i64* %9710, align 8
  store %struct.Memory* %loadMem_44f3cd, %struct.Memory** %MEMORY
  br label %block_.L_44f3d2

block_.L_44f3d2:                                  ; preds = %block_.L_44f3cd, %block_44f25d, %block_44f240
  %loadMem_44f3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9712 = getelementptr inbounds %struct.GPR, %struct.GPR* %9711, i32 0, i32 33
  %9713 = getelementptr inbounds %struct.Reg, %struct.Reg* %9712, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %9713 to i64*
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9715 = getelementptr inbounds %struct.GPR, %struct.GPR* %9714, i32 0, i32 1
  %9716 = getelementptr inbounds %struct.Reg, %struct.Reg* %9715, i32 0, i32 0
  %RAX.i105 = bitcast %union.anon* %9716 to i64*
  %9717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9718 = getelementptr inbounds %struct.GPR, %struct.GPR* %9717, i32 0, i32 15
  %9719 = getelementptr inbounds %struct.Reg, %struct.Reg* %9718, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %9719 to i64*
  %9720 = load i64, i64* %RBP.i106
  %9721 = sub i64 %9720, 436
  %9722 = load i64, i64* %PC.i104
  %9723 = add i64 %9722, 6
  store i64 %9723, i64* %PC.i104
  %9724 = inttoptr i64 %9721 to i32*
  %9725 = load i32, i32* %9724
  %9726 = zext i32 %9725 to i64
  store i64 %9726, i64* %RAX.i105, align 8
  store %struct.Memory* %loadMem_44f3d2, %struct.Memory** %MEMORY
  %loadMem_44f3d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9728 = getelementptr inbounds %struct.GPR, %struct.GPR* %9727, i32 0, i32 33
  %9729 = getelementptr inbounds %struct.Reg, %struct.Reg* %9728, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %9729 to i64*
  %9730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9731 = getelementptr inbounds %struct.GPR, %struct.GPR* %9730, i32 0, i32 1
  %9732 = getelementptr inbounds %struct.Reg, %struct.Reg* %9731, i32 0, i32 0
  %RAX.i103 = bitcast %union.anon* %9732 to i64*
  %9733 = load i64, i64* %RAX.i103
  %9734 = load i64, i64* %PC.i102
  %9735 = add i64 %9734, 3
  store i64 %9735, i64* %PC.i102
  %9736 = trunc i64 %9733 to i32
  %9737 = add i32 1, %9736
  %9738 = zext i32 %9737 to i64
  store i64 %9738, i64* %RAX.i103, align 8
  %9739 = icmp ult i32 %9737, %9736
  %9740 = icmp ult i32 %9737, 1
  %9741 = or i1 %9739, %9740
  %9742 = zext i1 %9741 to i8
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9742, i8* %9743, align 1
  %9744 = and i32 %9737, 255
  %9745 = call i32 @llvm.ctpop.i32(i32 %9744)
  %9746 = trunc i32 %9745 to i8
  %9747 = and i8 %9746, 1
  %9748 = xor i8 %9747, 1
  %9749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9748, i8* %9749, align 1
  %9750 = xor i64 1, %9733
  %9751 = trunc i64 %9750 to i32
  %9752 = xor i32 %9751, %9737
  %9753 = lshr i32 %9752, 4
  %9754 = trunc i32 %9753 to i8
  %9755 = and i8 %9754, 1
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9755, i8* %9756, align 1
  %9757 = icmp eq i32 %9737, 0
  %9758 = zext i1 %9757 to i8
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9758, i8* %9759, align 1
  %9760 = lshr i32 %9737, 31
  %9761 = trunc i32 %9760 to i8
  %9762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9761, i8* %9762, align 1
  %9763 = lshr i32 %9736, 31
  %9764 = xor i32 %9760, %9763
  %9765 = add i32 %9764, %9760
  %9766 = icmp eq i32 %9765, 2
  %9767 = zext i1 %9766 to i8
  %9768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9767, i8* %9768, align 1
  store %struct.Memory* %loadMem_44f3d8, %struct.Memory** %MEMORY
  %loadMem_44f3db = load %struct.Memory*, %struct.Memory** %MEMORY
  %9769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9770 = getelementptr inbounds %struct.GPR, %struct.GPR* %9769, i32 0, i32 33
  %9771 = getelementptr inbounds %struct.Reg, %struct.Reg* %9770, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %9771 to i64*
  %9772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9773 = getelementptr inbounds %struct.GPR, %struct.GPR* %9772, i32 0, i32 1
  %9774 = getelementptr inbounds %struct.Reg, %struct.Reg* %9773, i32 0, i32 0
  %EAX.i100 = bitcast %union.anon* %9774 to i32*
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9776 = getelementptr inbounds %struct.GPR, %struct.GPR* %9775, i32 0, i32 15
  %9777 = getelementptr inbounds %struct.Reg, %struct.Reg* %9776, i32 0, i32 0
  %RBP.i101 = bitcast %union.anon* %9777 to i64*
  %9778 = load i64, i64* %RBP.i101
  %9779 = sub i64 %9778, 436
  %9780 = load i32, i32* %EAX.i100
  %9781 = zext i32 %9780 to i64
  %9782 = load i64, i64* %PC.i99
  %9783 = add i64 %9782, 6
  store i64 %9783, i64* %PC.i99
  %9784 = inttoptr i64 %9779 to i32*
  store i32 %9780, i32* %9784
  store %struct.Memory* %loadMem_44f3db, %struct.Memory** %MEMORY
  %loadMem_44f3e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9786 = getelementptr inbounds %struct.GPR, %struct.GPR* %9785, i32 0, i32 33
  %9787 = getelementptr inbounds %struct.Reg, %struct.Reg* %9786, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %9787 to i64*
  %9788 = load i64, i64* %PC.i98
  %9789 = add i64 %9788, -457
  %9790 = load i64, i64* %PC.i98
  %9791 = add i64 %9790, 5
  store i64 %9791, i64* %PC.i98
  %9792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9789, i64* %9792, align 8
  store %struct.Memory* %loadMem_44f3e1, %struct.Memory** %MEMORY
  br label %block_.L_44f218

block_.L_44f3e6:                                  ; preds = %block_.L_44f218
  %loadMem_44f3e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9794 = getelementptr inbounds %struct.GPR, %struct.GPR* %9793, i32 0, i32 33
  %9795 = getelementptr inbounds %struct.Reg, %struct.Reg* %9794, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %9795 to i64*
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9797 = getelementptr inbounds %struct.GPR, %struct.GPR* %9796, i32 0, i32 15
  %9798 = getelementptr inbounds %struct.Reg, %struct.Reg* %9797, i32 0, i32 0
  %RBP.i97 = bitcast %union.anon* %9798 to i64*
  %9799 = load i64, i64* %RBP.i97
  %9800 = sub i64 %9799, 440
  %9801 = load i64, i64* %PC.i96
  %9802 = add i64 %9801, 10
  store i64 %9802, i64* %PC.i96
  %9803 = inttoptr i64 %9800 to i32*
  store i32 0, i32* %9803
  store %struct.Memory* %loadMem_44f3e6, %struct.Memory** %MEMORY
  br label %block_.L_44f3f0

block_.L_44f3f0:                                  ; preds = %block_44f403, %block_.L_44f3e6
  %loadMem_44f3f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9805 = getelementptr inbounds %struct.GPR, %struct.GPR* %9804, i32 0, i32 33
  %9806 = getelementptr inbounds %struct.Reg, %struct.Reg* %9805, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %9806 to i64*
  %9807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9808 = getelementptr inbounds %struct.GPR, %struct.GPR* %9807, i32 0, i32 1
  %9809 = getelementptr inbounds %struct.Reg, %struct.Reg* %9808, i32 0, i32 0
  %RAX.i94 = bitcast %union.anon* %9809 to i64*
  %9810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9811 = getelementptr inbounds %struct.GPR, %struct.GPR* %9810, i32 0, i32 15
  %9812 = getelementptr inbounds %struct.Reg, %struct.Reg* %9811, i32 0, i32 0
  %RBP.i95 = bitcast %union.anon* %9812 to i64*
  %9813 = load i64, i64* %RBP.i95
  %9814 = sub i64 %9813, 440
  %9815 = load i64, i64* %PC.i93
  %9816 = add i64 %9815, 6
  store i64 %9816, i64* %PC.i93
  %9817 = inttoptr i64 %9814 to i32*
  %9818 = load i32, i32* %9817
  %9819 = zext i32 %9818 to i64
  store i64 %9819, i64* %RAX.i94, align 8
  store %struct.Memory* %loadMem_44f3f0, %struct.Memory** %MEMORY
  %loadMem_44f3f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9821 = getelementptr inbounds %struct.GPR, %struct.GPR* %9820, i32 0, i32 33
  %9822 = getelementptr inbounds %struct.Reg, %struct.Reg* %9821, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %9822 to i64*
  %9823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9824 = getelementptr inbounds %struct.GPR, %struct.GPR* %9823, i32 0, i32 1
  %9825 = getelementptr inbounds %struct.Reg, %struct.Reg* %9824, i32 0, i32 0
  %EAX.i92 = bitcast %union.anon* %9825 to i32*
  %9826 = load i32, i32* %EAX.i92
  %9827 = zext i32 %9826 to i64
  %9828 = load i64, i64* %PC.i91
  %9829 = add i64 %9828, 7
  store i64 %9829, i64* %PC.i91
  %9830 = load i32, i32* bitcast (%G_0xb54ce4_type* @G_0xb54ce4 to i32*)
  %9831 = sub i32 %9826, %9830
  %9832 = icmp ult i32 %9826, %9830
  %9833 = zext i1 %9832 to i8
  %9834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9833, i8* %9834, align 1
  %9835 = and i32 %9831, 255
  %9836 = call i32 @llvm.ctpop.i32(i32 %9835)
  %9837 = trunc i32 %9836 to i8
  %9838 = and i8 %9837, 1
  %9839 = xor i8 %9838, 1
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9839, i8* %9840, align 1
  %9841 = xor i32 %9830, %9826
  %9842 = xor i32 %9841, %9831
  %9843 = lshr i32 %9842, 4
  %9844 = trunc i32 %9843 to i8
  %9845 = and i8 %9844, 1
  %9846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9845, i8* %9846, align 1
  %9847 = icmp eq i32 %9831, 0
  %9848 = zext i1 %9847 to i8
  %9849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9848, i8* %9849, align 1
  %9850 = lshr i32 %9831, 31
  %9851 = trunc i32 %9850 to i8
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9851, i8* %9852, align 1
  %9853 = lshr i32 %9826, 31
  %9854 = lshr i32 %9830, 31
  %9855 = xor i32 %9854, %9853
  %9856 = xor i32 %9850, %9853
  %9857 = add i32 %9856, %9855
  %9858 = icmp eq i32 %9857, 2
  %9859 = zext i1 %9858 to i8
  %9860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9859, i8* %9860, align 1
  store %struct.Memory* %loadMem_44f3f6, %struct.Memory** %MEMORY
  %loadMem_44f3fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9862 = getelementptr inbounds %struct.GPR, %struct.GPR* %9861, i32 0, i32 33
  %9863 = getelementptr inbounds %struct.Reg, %struct.Reg* %9862, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %9863 to i64*
  %9864 = load i64, i64* %PC.i90
  %9865 = add i64 %9864, 56
  %9866 = load i64, i64* %PC.i90
  %9867 = add i64 %9866, 6
  %9868 = load i64, i64* %PC.i90
  %9869 = add i64 %9868, 6
  store i64 %9869, i64* %PC.i90
  %9870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9871 = load i8, i8* %9870, align 1
  %9872 = icmp ne i8 %9871, 0
  %9873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9874 = load i8, i8* %9873, align 1
  %9875 = icmp ne i8 %9874, 0
  %9876 = xor i1 %9872, %9875
  %9877 = xor i1 %9876, true
  %9878 = zext i1 %9877 to i8
  store i8 %9878, i8* %BRANCH_TAKEN, align 1
  %9879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9880 = select i1 %9876, i64 %9867, i64 %9865
  store i64 %9880, i64* %9879, align 8
  store %struct.Memory* %loadMem_44f3fd, %struct.Memory** %MEMORY
  %loadBr_44f3fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f3fd = icmp eq i8 %loadBr_44f3fd, 1
  br i1 %cmpBr_44f3fd, label %block_.L_44f435, label %block_44f403

block_44f403:                                     ; preds = %block_.L_44f3f0
  %loadMem_44f403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9882 = getelementptr inbounds %struct.GPR, %struct.GPR* %9881, i32 0, i32 33
  %9883 = getelementptr inbounds %struct.Reg, %struct.Reg* %9882, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %9883 to i64*
  %9884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9885 = getelementptr inbounds %struct.GPR, %struct.GPR* %9884, i32 0, i32 1
  %9886 = getelementptr inbounds %struct.Reg, %struct.Reg* %9885, i32 0, i32 0
  %RAX.i88 = bitcast %union.anon* %9886 to i64*
  %9887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9888 = getelementptr inbounds %struct.GPR, %struct.GPR* %9887, i32 0, i32 15
  %9889 = getelementptr inbounds %struct.Reg, %struct.Reg* %9888, i32 0, i32 0
  %RBP.i89 = bitcast %union.anon* %9889 to i64*
  %9890 = load i64, i64* %RBP.i89
  %9891 = sub i64 %9890, 456
  %9892 = load i64, i64* %PC.i87
  %9893 = add i64 %9892, 7
  store i64 %9893, i64* %PC.i87
  %9894 = inttoptr i64 %9891 to i64*
  %9895 = load i64, i64* %9894
  store i64 %9895, i64* %RAX.i88, align 8
  store %struct.Memory* %loadMem_44f403, %struct.Memory** %MEMORY
  %loadMem_44f40a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9897 = getelementptr inbounds %struct.GPR, %struct.GPR* %9896, i32 0, i32 33
  %9898 = getelementptr inbounds %struct.Reg, %struct.Reg* %9897, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %9898 to i64*
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9900 = getelementptr inbounds %struct.GPR, %struct.GPR* %9899, i32 0, i32 5
  %9901 = getelementptr inbounds %struct.Reg, %struct.Reg* %9900, i32 0, i32 0
  %RCX.i85 = bitcast %union.anon* %9901 to i64*
  %9902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9903 = getelementptr inbounds %struct.GPR, %struct.GPR* %9902, i32 0, i32 15
  %9904 = getelementptr inbounds %struct.Reg, %struct.Reg* %9903, i32 0, i32 0
  %RBP.i86 = bitcast %union.anon* %9904 to i64*
  %9905 = load i64, i64* %RBP.i86
  %9906 = sub i64 %9905, 440
  %9907 = load i64, i64* %PC.i84
  %9908 = add i64 %9907, 7
  store i64 %9908, i64* %PC.i84
  %9909 = inttoptr i64 %9906 to i32*
  %9910 = load i32, i32* %9909
  %9911 = sext i32 %9910 to i64
  store i64 %9911, i64* %RCX.i85, align 8
  store %struct.Memory* %loadMem_44f40a, %struct.Memory** %MEMORY
  %loadMem_44f411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9913 = getelementptr inbounds %struct.GPR, %struct.GPR* %9912, i32 0, i32 33
  %9914 = getelementptr inbounds %struct.Reg, %struct.Reg* %9913, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %9914 to i64*
  %9915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9916 = getelementptr inbounds %struct.GPR, %struct.GPR* %9915, i32 0, i32 1
  %9917 = getelementptr inbounds %struct.Reg, %struct.Reg* %9916, i32 0, i32 0
  %RAX.i82 = bitcast %union.anon* %9917 to i64*
  %9918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9919 = getelementptr inbounds %struct.GPR, %struct.GPR* %9918, i32 0, i32 5
  %9920 = getelementptr inbounds %struct.Reg, %struct.Reg* %9919, i32 0, i32 0
  %RCX.i83 = bitcast %union.anon* %9920 to i64*
  %9921 = load i64, i64* %RAX.i82
  %9922 = load i64, i64* %RCX.i83
  %9923 = mul i64 %9922, 4
  %9924 = add i64 %9921, 436
  %9925 = add i64 %9924, %9923
  %9926 = load i64, i64* %PC.i81
  %9927 = add i64 %9926, 8
  store i64 %9927, i64* %PC.i81
  %9928 = inttoptr i64 %9925 to i32*
  %9929 = load i32, i32* %9928
  %9930 = sext i32 %9929 to i64
  store i64 %9930, i64* %RAX.i82, align 8
  store %struct.Memory* %loadMem_44f411, %struct.Memory** %MEMORY
  %loadMem_44f419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9932 = getelementptr inbounds %struct.GPR, %struct.GPR* %9931, i32 0, i32 33
  %9933 = getelementptr inbounds %struct.Reg, %struct.Reg* %9932, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %9933 to i64*
  %9934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9935 = getelementptr inbounds %struct.GPR, %struct.GPR* %9934, i32 0, i32 1
  %9936 = getelementptr inbounds %struct.Reg, %struct.Reg* %9935, i32 0, i32 0
  %RAX.i79 = bitcast %union.anon* %9936 to i64*
  %9937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9938 = getelementptr inbounds %struct.GPR, %struct.GPR* %9937, i32 0, i32 15
  %9939 = getelementptr inbounds %struct.Reg, %struct.Reg* %9938, i32 0, i32 0
  %RBP.i80 = bitcast %union.anon* %9939 to i64*
  %9940 = load i64, i64* %RBP.i80
  %9941 = load i64, i64* %RAX.i79
  %9942 = add i64 %9940, -432
  %9943 = add i64 %9942, %9941
  %9944 = load i64, i64* %PC.i78
  %9945 = add i64 %9944, 8
  store i64 %9945, i64* %PC.i78
  %9946 = inttoptr i64 %9943 to i8*
  store i8 5, i8* %9946
  store %struct.Memory* %loadMem_44f419, %struct.Memory** %MEMORY
  %loadMem_44f421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9948 = getelementptr inbounds %struct.GPR, %struct.GPR* %9947, i32 0, i32 33
  %9949 = getelementptr inbounds %struct.Reg, %struct.Reg* %9948, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %9949 to i64*
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9951 = getelementptr inbounds %struct.GPR, %struct.GPR* %9950, i32 0, i32 1
  %9952 = getelementptr inbounds %struct.Reg, %struct.Reg* %9951, i32 0, i32 0
  %RAX.i76 = bitcast %union.anon* %9952 to i64*
  %9953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9954 = getelementptr inbounds %struct.GPR, %struct.GPR* %9953, i32 0, i32 15
  %9955 = getelementptr inbounds %struct.Reg, %struct.Reg* %9954, i32 0, i32 0
  %RBP.i77 = bitcast %union.anon* %9955 to i64*
  %9956 = load i64, i64* %RBP.i77
  %9957 = sub i64 %9956, 440
  %9958 = load i64, i64* %PC.i75
  %9959 = add i64 %9958, 6
  store i64 %9959, i64* %PC.i75
  %9960 = inttoptr i64 %9957 to i32*
  %9961 = load i32, i32* %9960
  %9962 = zext i32 %9961 to i64
  store i64 %9962, i64* %RAX.i76, align 8
  store %struct.Memory* %loadMem_44f421, %struct.Memory** %MEMORY
  %loadMem_44f427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9964 = getelementptr inbounds %struct.GPR, %struct.GPR* %9963, i32 0, i32 33
  %9965 = getelementptr inbounds %struct.Reg, %struct.Reg* %9964, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %9965 to i64*
  %9966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9967 = getelementptr inbounds %struct.GPR, %struct.GPR* %9966, i32 0, i32 1
  %9968 = getelementptr inbounds %struct.Reg, %struct.Reg* %9967, i32 0, i32 0
  %RAX.i74 = bitcast %union.anon* %9968 to i64*
  %9969 = load i64, i64* %RAX.i74
  %9970 = load i64, i64* %PC.i73
  %9971 = add i64 %9970, 3
  store i64 %9971, i64* %PC.i73
  %9972 = trunc i64 %9969 to i32
  %9973 = add i32 1, %9972
  %9974 = zext i32 %9973 to i64
  store i64 %9974, i64* %RAX.i74, align 8
  %9975 = icmp ult i32 %9973, %9972
  %9976 = icmp ult i32 %9973, 1
  %9977 = or i1 %9975, %9976
  %9978 = zext i1 %9977 to i8
  %9979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9978, i8* %9979, align 1
  %9980 = and i32 %9973, 255
  %9981 = call i32 @llvm.ctpop.i32(i32 %9980)
  %9982 = trunc i32 %9981 to i8
  %9983 = and i8 %9982, 1
  %9984 = xor i8 %9983, 1
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9984, i8* %9985, align 1
  %9986 = xor i64 1, %9969
  %9987 = trunc i64 %9986 to i32
  %9988 = xor i32 %9987, %9973
  %9989 = lshr i32 %9988, 4
  %9990 = trunc i32 %9989 to i8
  %9991 = and i8 %9990, 1
  %9992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9991, i8* %9992, align 1
  %9993 = icmp eq i32 %9973, 0
  %9994 = zext i1 %9993 to i8
  %9995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9994, i8* %9995, align 1
  %9996 = lshr i32 %9973, 31
  %9997 = trunc i32 %9996 to i8
  %9998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9997, i8* %9998, align 1
  %9999 = lshr i32 %9972, 31
  %10000 = xor i32 %9996, %9999
  %10001 = add i32 %10000, %9996
  %10002 = icmp eq i32 %10001, 2
  %10003 = zext i1 %10002 to i8
  %10004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10003, i8* %10004, align 1
  store %struct.Memory* %loadMem_44f427, %struct.Memory** %MEMORY
  %loadMem_44f42a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10006 = getelementptr inbounds %struct.GPR, %struct.GPR* %10005, i32 0, i32 33
  %10007 = getelementptr inbounds %struct.Reg, %struct.Reg* %10006, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %10007 to i64*
  %10008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10009 = getelementptr inbounds %struct.GPR, %struct.GPR* %10008, i32 0, i32 1
  %10010 = getelementptr inbounds %struct.Reg, %struct.Reg* %10009, i32 0, i32 0
  %EAX.i71 = bitcast %union.anon* %10010 to i32*
  %10011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10012 = getelementptr inbounds %struct.GPR, %struct.GPR* %10011, i32 0, i32 15
  %10013 = getelementptr inbounds %struct.Reg, %struct.Reg* %10012, i32 0, i32 0
  %RBP.i72 = bitcast %union.anon* %10013 to i64*
  %10014 = load i64, i64* %RBP.i72
  %10015 = sub i64 %10014, 440
  %10016 = load i32, i32* %EAX.i71
  %10017 = zext i32 %10016 to i64
  %10018 = load i64, i64* %PC.i70
  %10019 = add i64 %10018, 6
  store i64 %10019, i64* %PC.i70
  %10020 = inttoptr i64 %10015 to i32*
  store i32 %10016, i32* %10020
  store %struct.Memory* %loadMem_44f42a, %struct.Memory** %MEMORY
  %loadMem_44f430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10022 = getelementptr inbounds %struct.GPR, %struct.GPR* %10021, i32 0, i32 33
  %10023 = getelementptr inbounds %struct.Reg, %struct.Reg* %10022, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %10023 to i64*
  %10024 = load i64, i64* %PC.i69
  %10025 = add i64 %10024, -64
  %10026 = load i64, i64* %PC.i69
  %10027 = add i64 %10026, 5
  store i64 %10027, i64* %PC.i69
  %10028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10025, i64* %10028, align 8
  store %struct.Memory* %loadMem_44f430, %struct.Memory** %MEMORY
  br label %block_.L_44f3f0

block_.L_44f435:                                  ; preds = %block_.L_44f3f0
  %loadMem_44f435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10030 = getelementptr inbounds %struct.GPR, %struct.GPR* %10029, i32 0, i32 33
  %10031 = getelementptr inbounds %struct.Reg, %struct.Reg* %10030, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %10031 to i64*
  %10032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10033 = getelementptr inbounds %struct.GPR, %struct.GPR* %10032, i32 0, i32 15
  %10034 = getelementptr inbounds %struct.Reg, %struct.Reg* %10033, i32 0, i32 0
  %RBP.i68 = bitcast %union.anon* %10034 to i64*
  %10035 = load i64, i64* %RBP.i68
  %10036 = sub i64 %10035, 436
  %10037 = load i64, i64* %PC.i67
  %10038 = add i64 %10037, 10
  store i64 %10038, i64* %PC.i67
  %10039 = inttoptr i64 %10036 to i32*
  store i32 21, i32* %10039
  store %struct.Memory* %loadMem_44f435, %struct.Memory** %MEMORY
  br label %block_.L_44f43f

block_.L_44f43f:                                  ; preds = %block_.L_44f4c8, %block_.L_44f435
  %loadMem_44f43f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10041 = getelementptr inbounds %struct.GPR, %struct.GPR* %10040, i32 0, i32 33
  %10042 = getelementptr inbounds %struct.Reg, %struct.Reg* %10041, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %10042 to i64*
  %10043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10044 = getelementptr inbounds %struct.GPR, %struct.GPR* %10043, i32 0, i32 15
  %10045 = getelementptr inbounds %struct.Reg, %struct.Reg* %10044, i32 0, i32 0
  %RBP.i66 = bitcast %union.anon* %10045 to i64*
  %10046 = load i64, i64* %RBP.i66
  %10047 = sub i64 %10046, 436
  %10048 = load i64, i64* %PC.i65
  %10049 = add i64 %10048, 10
  store i64 %10049, i64* %PC.i65
  %10050 = inttoptr i64 %10047 to i32*
  %10051 = load i32, i32* %10050
  %10052 = sub i32 %10051, 400
  %10053 = icmp ult i32 %10051, 400
  %10054 = zext i1 %10053 to i8
  %10055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10054, i8* %10055, align 1
  %10056 = and i32 %10052, 255
  %10057 = call i32 @llvm.ctpop.i32(i32 %10056)
  %10058 = trunc i32 %10057 to i8
  %10059 = and i8 %10058, 1
  %10060 = xor i8 %10059, 1
  %10061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10060, i8* %10061, align 1
  %10062 = xor i32 %10051, 400
  %10063 = xor i32 %10062, %10052
  %10064 = lshr i32 %10063, 4
  %10065 = trunc i32 %10064 to i8
  %10066 = and i8 %10065, 1
  %10067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10066, i8* %10067, align 1
  %10068 = icmp eq i32 %10052, 0
  %10069 = zext i1 %10068 to i8
  %10070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10069, i8* %10070, align 1
  %10071 = lshr i32 %10052, 31
  %10072 = trunc i32 %10071 to i8
  %10073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10072, i8* %10073, align 1
  %10074 = lshr i32 %10051, 31
  %10075 = xor i32 %10071, %10074
  %10076 = add i32 %10075, %10074
  %10077 = icmp eq i32 %10076, 2
  %10078 = zext i1 %10077 to i8
  %10079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10078, i8* %10079, align 1
  store %struct.Memory* %loadMem_44f43f, %struct.Memory** %MEMORY
  %loadMem_44f449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10081 = getelementptr inbounds %struct.GPR, %struct.GPR* %10080, i32 0, i32 33
  %10082 = getelementptr inbounds %struct.Reg, %struct.Reg* %10081, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %10082 to i64*
  %10083 = load i64, i64* %PC.i64
  %10084 = add i64 %10083, 147
  %10085 = load i64, i64* %PC.i64
  %10086 = add i64 %10085, 6
  %10087 = load i64, i64* %PC.i64
  %10088 = add i64 %10087, 6
  store i64 %10088, i64* %PC.i64
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10090 = load i8, i8* %10089, align 1
  %10091 = icmp ne i8 %10090, 0
  %10092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10093 = load i8, i8* %10092, align 1
  %10094 = icmp ne i8 %10093, 0
  %10095 = xor i1 %10091, %10094
  %10096 = xor i1 %10095, true
  %10097 = zext i1 %10096 to i8
  store i8 %10097, i8* %BRANCH_TAKEN, align 1
  %10098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10099 = select i1 %10095, i64 %10086, i64 %10084
  store i64 %10099, i64* %10098, align 8
  store %struct.Memory* %loadMem_44f449, %struct.Memory** %MEMORY
  %loadBr_44f449 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f449 = icmp eq i8 %loadBr_44f449, 1
  br i1 %cmpBr_44f449, label %block_.L_44f4dc, label %block_44f44f

block_44f44f:                                     ; preds = %block_.L_44f43f
  %loadMem_44f44f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10101 = getelementptr inbounds %struct.GPR, %struct.GPR* %10100, i32 0, i32 33
  %10102 = getelementptr inbounds %struct.Reg, %struct.Reg* %10101, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %10102 to i64*
  %10103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10104 = getelementptr inbounds %struct.GPR, %struct.GPR* %10103, i32 0, i32 1
  %10105 = getelementptr inbounds %struct.Reg, %struct.Reg* %10104, i32 0, i32 0
  %RAX.i62 = bitcast %union.anon* %10105 to i64*
  %10106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10107 = getelementptr inbounds %struct.GPR, %struct.GPR* %10106, i32 0, i32 15
  %10108 = getelementptr inbounds %struct.Reg, %struct.Reg* %10107, i32 0, i32 0
  %RBP.i63 = bitcast %union.anon* %10108 to i64*
  %10109 = load i64, i64* %RBP.i63
  %10110 = sub i64 %10109, 436
  %10111 = load i64, i64* %PC.i61
  %10112 = add i64 %10111, 7
  store i64 %10112, i64* %PC.i61
  %10113 = inttoptr i64 %10110 to i32*
  %10114 = load i32, i32* %10113
  %10115 = sext i32 %10114 to i64
  store i64 %10115, i64* %RAX.i62, align 8
  store %struct.Memory* %loadMem_44f44f, %struct.Memory** %MEMORY
  %loadMem_44f456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10117 = getelementptr inbounds %struct.GPR, %struct.GPR* %10116, i32 0, i32 33
  %10118 = getelementptr inbounds %struct.Reg, %struct.Reg* %10117, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %10118 to i64*
  %10119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10120 = getelementptr inbounds %struct.GPR, %struct.GPR* %10119, i32 0, i32 1
  %10121 = getelementptr inbounds %struct.Reg, %struct.Reg* %10120, i32 0, i32 0
  %RAX.i59 = bitcast %union.anon* %10121 to i64*
  %10122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10123 = getelementptr inbounds %struct.GPR, %struct.GPR* %10122, i32 0, i32 5
  %10124 = getelementptr inbounds %struct.Reg, %struct.Reg* %10123, i32 0, i32 0
  %RCX.i60 = bitcast %union.anon* %10124 to i64*
  %10125 = load i64, i64* %RAX.i59
  %10126 = add i64 %10125, 12099168
  %10127 = load i64, i64* %PC.i58
  %10128 = add i64 %10127, 8
  store i64 %10128, i64* %PC.i58
  %10129 = inttoptr i64 %10126 to i8*
  %10130 = load i8, i8* %10129
  %10131 = zext i8 %10130 to i64
  store i64 %10131, i64* %RCX.i60, align 8
  store %struct.Memory* %loadMem_44f456, %struct.Memory** %MEMORY
  %loadMem_44f45e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10133 = getelementptr inbounds %struct.GPR, %struct.GPR* %10132, i32 0, i32 33
  %10134 = getelementptr inbounds %struct.Reg, %struct.Reg* %10133, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %10134 to i64*
  %10135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10136 = getelementptr inbounds %struct.GPR, %struct.GPR* %10135, i32 0, i32 5
  %10137 = getelementptr inbounds %struct.Reg, %struct.Reg* %10136, i32 0, i32 0
  %ECX.i57 = bitcast %union.anon* %10137 to i32*
  %10138 = load i32, i32* %ECX.i57
  %10139 = zext i32 %10138 to i64
  %10140 = load i64, i64* %PC.i56
  %10141 = add i64 %10140, 3
  store i64 %10141, i64* %PC.i56
  %10142 = sub i32 %10138, 3
  %10143 = icmp ult i32 %10138, 3
  %10144 = zext i1 %10143 to i8
  %10145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10144, i8* %10145, align 1
  %10146 = and i32 %10142, 255
  %10147 = call i32 @llvm.ctpop.i32(i32 %10146)
  %10148 = trunc i32 %10147 to i8
  %10149 = and i8 %10148, 1
  %10150 = xor i8 %10149, 1
  %10151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10150, i8* %10151, align 1
  %10152 = xor i64 3, %10139
  %10153 = trunc i64 %10152 to i32
  %10154 = xor i32 %10153, %10142
  %10155 = lshr i32 %10154, 4
  %10156 = trunc i32 %10155 to i8
  %10157 = and i8 %10156, 1
  %10158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10157, i8* %10158, align 1
  %10159 = icmp eq i32 %10142, 0
  %10160 = zext i1 %10159 to i8
  %10161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10160, i8* %10161, align 1
  %10162 = lshr i32 %10142, 31
  %10163 = trunc i32 %10162 to i8
  %10164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10163, i8* %10164, align 1
  %10165 = lshr i32 %10138, 31
  %10166 = xor i32 %10162, %10165
  %10167 = add i32 %10166, %10165
  %10168 = icmp eq i32 %10167, 2
  %10169 = zext i1 %10168 to i8
  %10170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10169, i8* %10170, align 1
  store %struct.Memory* %loadMem_44f45e, %struct.Memory** %MEMORY
  %loadMem_44f461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10172 = getelementptr inbounds %struct.GPR, %struct.GPR* %10171, i32 0, i32 33
  %10173 = getelementptr inbounds %struct.Reg, %struct.Reg* %10172, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %10173 to i64*
  %10174 = load i64, i64* %PC.i55
  %10175 = add i64 %10174, 11
  %10176 = load i64, i64* %PC.i55
  %10177 = add i64 %10176, 6
  %10178 = load i64, i64* %PC.i55
  %10179 = add i64 %10178, 6
  store i64 %10179, i64* %PC.i55
  %10180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10181 = load i8, i8* %10180, align 1
  %10182 = icmp eq i8 %10181, 0
  %10183 = zext i1 %10182 to i8
  store i8 %10183, i8* %BRANCH_TAKEN, align 1
  %10184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10185 = select i1 %10182, i64 %10175, i64 %10177
  store i64 %10185, i64* %10184, align 8
  store %struct.Memory* %loadMem_44f461, %struct.Memory** %MEMORY
  %loadBr_44f461 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f461 = icmp eq i8 %loadBr_44f461, 1
  br i1 %cmpBr_44f461, label %block_.L_44f46c, label %block_44f467

block_44f467:                                     ; preds = %block_44f44f
  %loadMem_44f467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10187 = getelementptr inbounds %struct.GPR, %struct.GPR* %10186, i32 0, i32 33
  %10188 = getelementptr inbounds %struct.Reg, %struct.Reg* %10187, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %10188 to i64*
  %10189 = load i64, i64* %PC.i54
  %10190 = add i64 %10189, 97
  %10191 = load i64, i64* %PC.i54
  %10192 = add i64 %10191, 5
  store i64 %10192, i64* %PC.i54
  %10193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10190, i64* %10193, align 8
  store %struct.Memory* %loadMem_44f467, %struct.Memory** %MEMORY
  br label %block_.L_44f4c8

block_.L_44f46c:                                  ; preds = %block_44f44f
  %loadMem_44f46c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10195 = getelementptr inbounds %struct.GPR, %struct.GPR* %10194, i32 0, i32 33
  %10196 = getelementptr inbounds %struct.Reg, %struct.Reg* %10195, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %10196 to i64*
  %10197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10198 = getelementptr inbounds %struct.GPR, %struct.GPR* %10197, i32 0, i32 1
  %10199 = getelementptr inbounds %struct.Reg, %struct.Reg* %10198, i32 0, i32 0
  %RAX.i52 = bitcast %union.anon* %10199 to i64*
  %10200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10201 = getelementptr inbounds %struct.GPR, %struct.GPR* %10200, i32 0, i32 15
  %10202 = getelementptr inbounds %struct.Reg, %struct.Reg* %10201, i32 0, i32 0
  %RBP.i53 = bitcast %union.anon* %10202 to i64*
  %10203 = load i64, i64* %RBP.i53
  %10204 = sub i64 %10203, 436
  %10205 = load i64, i64* %PC.i51
  %10206 = add i64 %10205, 7
  store i64 %10206, i64* %PC.i51
  %10207 = inttoptr i64 %10204 to i32*
  %10208 = load i32, i32* %10207
  %10209 = sext i32 %10208 to i64
  store i64 %10209, i64* %RAX.i52, align 8
  store %struct.Memory* %loadMem_44f46c, %struct.Memory** %MEMORY
  %loadMem_44f473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10211 = getelementptr inbounds %struct.GPR, %struct.GPR* %10210, i32 0, i32 33
  %10212 = getelementptr inbounds %struct.Reg, %struct.Reg* %10211, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %10212 to i64*
  %10213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10214 = getelementptr inbounds %struct.GPR, %struct.GPR* %10213, i32 0, i32 1
  %10215 = getelementptr inbounds %struct.Reg, %struct.Reg* %10214, i32 0, i32 0
  %RAX.i48 = bitcast %union.anon* %10215 to i64*
  %10216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10217 = getelementptr inbounds %struct.GPR, %struct.GPR* %10216, i32 0, i32 5
  %10218 = getelementptr inbounds %struct.Reg, %struct.Reg* %10217, i32 0, i32 0
  %RCX.i49 = bitcast %union.anon* %10218 to i64*
  %10219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10220 = getelementptr inbounds %struct.GPR, %struct.GPR* %10219, i32 0, i32 15
  %10221 = getelementptr inbounds %struct.Reg, %struct.Reg* %10220, i32 0, i32 0
  %RBP.i50 = bitcast %union.anon* %10221 to i64*
  %10222 = load i64, i64* %RBP.i50
  %10223 = load i64, i64* %RAX.i48
  %10224 = add i64 %10222, -432
  %10225 = add i64 %10224, %10223
  %10226 = load i64, i64* %PC.i47
  %10227 = add i64 %10226, 8
  store i64 %10227, i64* %PC.i47
  %10228 = inttoptr i64 %10225 to i8*
  %10229 = load i8, i8* %10228
  %10230 = sext i8 %10229 to i64
  %10231 = and i64 %10230, 4294967295
  store i64 %10231, i64* %RCX.i49, align 8
  store %struct.Memory* %loadMem_44f473, %struct.Memory** %MEMORY
  %loadMem_44f47b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10233 = getelementptr inbounds %struct.GPR, %struct.GPR* %10232, i32 0, i32 33
  %10234 = getelementptr inbounds %struct.Reg, %struct.Reg* %10233, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %10234 to i64*
  %10235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10236 = getelementptr inbounds %struct.GPR, %struct.GPR* %10235, i32 0, i32 5
  %10237 = getelementptr inbounds %struct.Reg, %struct.Reg* %10236, i32 0, i32 0
  %ECX.i46 = bitcast %union.anon* %10237 to i32*
  %10238 = load i32, i32* %ECX.i46
  %10239 = zext i32 %10238 to i64
  %10240 = load i64, i64* %PC.i45
  %10241 = add i64 %10240, 3
  store i64 %10241, i64* %PC.i45
  %10242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10242, align 1
  %10243 = and i32 %10238, 255
  %10244 = call i32 @llvm.ctpop.i32(i32 %10243)
  %10245 = trunc i32 %10244 to i8
  %10246 = and i8 %10245, 1
  %10247 = xor i8 %10246, 1
  %10248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10247, i8* %10248, align 1
  %10249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10249, align 1
  %10250 = icmp eq i32 %10238, 0
  %10251 = zext i1 %10250 to i8
  %10252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10251, i8* %10252, align 1
  %10253 = lshr i32 %10238, 31
  %10254 = trunc i32 %10253 to i8
  %10255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10254, i8* %10255, align 1
  %10256 = lshr i32 %10238, 31
  %10257 = xor i32 %10253, %10256
  %10258 = add i32 %10257, %10256
  %10259 = icmp eq i32 %10258, 2
  %10260 = zext i1 %10259 to i8
  %10261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10260, i8* %10261, align 1
  store %struct.Memory* %loadMem_44f47b, %struct.Memory** %MEMORY
  %loadMem_44f47e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10263 = getelementptr inbounds %struct.GPR, %struct.GPR* %10262, i32 0, i32 33
  %10264 = getelementptr inbounds %struct.Reg, %struct.Reg* %10263, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %10264 to i64*
  %10265 = load i64, i64* %PC.i44
  %10266 = add i64 %10265, 32
  %10267 = load i64, i64* %PC.i44
  %10268 = add i64 %10267, 6
  %10269 = load i64, i64* %PC.i44
  %10270 = add i64 %10269, 6
  store i64 %10270, i64* %PC.i44
  %10271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10272 = load i8, i8* %10271, align 1
  store i8 %10272, i8* %BRANCH_TAKEN, align 1
  %10273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10274 = icmp ne i8 %10272, 0
  %10275 = select i1 %10274, i64 %10266, i64 %10268
  store i64 %10275, i64* %10273, align 8
  store %struct.Memory* %loadMem_44f47e, %struct.Memory** %MEMORY
  %loadBr_44f47e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44f47e = icmp eq i8 %loadBr_44f47e, 1
  br i1 %cmpBr_44f47e, label %block_.L_44f49e, label %block_44f484

block_44f484:                                     ; preds = %block_.L_44f46c
  %loadMem_44f484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10277 = getelementptr inbounds %struct.GPR, %struct.GPR* %10276, i32 0, i32 33
  %10278 = getelementptr inbounds %struct.Reg, %struct.Reg* %10277, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %10278 to i64*
  %10279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10280 = getelementptr inbounds %struct.GPR, %struct.GPR* %10279, i32 0, i32 1
  %10281 = getelementptr inbounds %struct.Reg, %struct.Reg* %10280, i32 0, i32 0
  %RAX.i42 = bitcast %union.anon* %10281 to i64*
  %10282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10283 = getelementptr inbounds %struct.GPR, %struct.GPR* %10282, i32 0, i32 15
  %10284 = getelementptr inbounds %struct.Reg, %struct.Reg* %10283, i32 0, i32 0
  %RBP.i43 = bitcast %union.anon* %10284 to i64*
  %10285 = load i64, i64* %RBP.i43
  %10286 = sub i64 %10285, 436
  %10287 = load i64, i64* %PC.i41
  %10288 = add i64 %10287, 7
  store i64 %10288, i64* %PC.i41
  %10289 = inttoptr i64 %10286 to i32*
  %10290 = load i32, i32* %10289
  %10291 = sext i32 %10290 to i64
  store i64 %10291, i64* %RAX.i42, align 8
  store %struct.Memory* %loadMem_44f484, %struct.Memory** %MEMORY
  %loadMem_44f48b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10293 = getelementptr inbounds %struct.GPR, %struct.GPR* %10292, i32 0, i32 33
  %10294 = getelementptr inbounds %struct.Reg, %struct.Reg* %10293, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %10294 to i64*
  %10295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10296 = getelementptr inbounds %struct.GPR, %struct.GPR* %10295, i32 0, i32 1
  %10297 = getelementptr inbounds %struct.Reg, %struct.Reg* %10296, i32 0, i32 0
  %RAX.i40 = bitcast %union.anon* %10297 to i64*
  %10298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10299 = getelementptr inbounds %struct.GPR, %struct.GPR* %10298, i32 0, i32 5
  %10300 = getelementptr inbounds %struct.Reg, %struct.Reg* %10299, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %10300 to i64*
  %10301 = load i64, i64* %RAX.i40
  %10302 = add i64 %10301, 12099168
  %10303 = load i64, i64* %PC.i39
  %10304 = add i64 %10303, 8
  store i64 %10304, i64* %PC.i39
  %10305 = inttoptr i64 %10302 to i8*
  %10306 = load i8, i8* %10305
  %10307 = zext i8 %10306 to i64
  store i64 %10307, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_44f48b, %struct.Memory** %MEMORY
  %loadMem_44f493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10309 = getelementptr inbounds %struct.GPR, %struct.GPR* %10308, i32 0, i32 33
  %10310 = getelementptr inbounds %struct.Reg, %struct.Reg* %10309, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %10310 to i64*
  %10311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10312 = getelementptr inbounds %struct.GPR, %struct.GPR* %10311, i32 0, i32 5
  %10313 = getelementptr inbounds %struct.Reg, %struct.Reg* %10312, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %10313 to i32*
  %10314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10315 = getelementptr inbounds %struct.GPR, %struct.GPR* %10314, i32 0, i32 15
  %10316 = getelementptr inbounds %struct.Reg, %struct.Reg* %10315, i32 0, i32 0
  %RBP.i38 = bitcast %union.anon* %10316 to i64*
  %10317 = load i64, i64* %RBP.i38
  %10318 = sub i64 %10317, 492
  %10319 = load i32, i32* %ECX.i
  %10320 = zext i32 %10319 to i64
  %10321 = load i64, i64* %PC.i37
  %10322 = add i64 %10321, 6
  store i64 %10322, i64* %PC.i37
  %10323 = inttoptr i64 %10318 to i32*
  store i32 %10319, i32* %10323
  store %struct.Memory* %loadMem_44f493, %struct.Memory** %MEMORY
  %loadMem_44f499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10325 = getelementptr inbounds %struct.GPR, %struct.GPR* %10324, i32 0, i32 33
  %10326 = getelementptr inbounds %struct.Reg, %struct.Reg* %10325, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %10326 to i64*
  %10327 = load i64, i64* %PC.i36
  %10328 = add i64 %10327, 21
  %10329 = load i64, i64* %PC.i36
  %10330 = add i64 %10329, 5
  store i64 %10330, i64* %PC.i36
  %10331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10328, i64* %10331, align 8
  store %struct.Memory* %loadMem_44f499, %struct.Memory** %MEMORY
  br label %block_.L_44f4ae

block_.L_44f49e:                                  ; preds = %block_.L_44f46c
  %loadMem_44f49e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10333 = getelementptr inbounds %struct.GPR, %struct.GPR* %10332, i32 0, i32 33
  %10334 = getelementptr inbounds %struct.Reg, %struct.Reg* %10333, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %10334 to i64*
  %10335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10336 = getelementptr inbounds %struct.GPR, %struct.GPR* %10335, i32 0, i32 1
  %10337 = getelementptr inbounds %struct.Reg, %struct.Reg* %10336, i32 0, i32 0
  %RAX.i35 = bitcast %union.anon* %10337 to i64*
  %10338 = load i64, i64* %PC.i34
  %10339 = add i64 %10338, 5
  store i64 %10339, i64* %PC.i34
  store i64 3, i64* %RAX.i35, align 8
  store %struct.Memory* %loadMem_44f49e, %struct.Memory** %MEMORY
  %loadMem_44f4a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10341 = getelementptr inbounds %struct.GPR, %struct.GPR* %10340, i32 0, i32 33
  %10342 = getelementptr inbounds %struct.Reg, %struct.Reg* %10341, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %10342 to i64*
  %10343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10344 = getelementptr inbounds %struct.GPR, %struct.GPR* %10343, i32 0, i32 1
  %10345 = getelementptr inbounds %struct.Reg, %struct.Reg* %10344, i32 0, i32 0
  %EAX.i32 = bitcast %union.anon* %10345 to i32*
  %10346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10347 = getelementptr inbounds %struct.GPR, %struct.GPR* %10346, i32 0, i32 15
  %10348 = getelementptr inbounds %struct.Reg, %struct.Reg* %10347, i32 0, i32 0
  %RBP.i33 = bitcast %union.anon* %10348 to i64*
  %10349 = load i64, i64* %RBP.i33
  %10350 = sub i64 %10349, 492
  %10351 = load i32, i32* %EAX.i32
  %10352 = zext i32 %10351 to i64
  %10353 = load i64, i64* %PC.i31
  %10354 = add i64 %10353, 6
  store i64 %10354, i64* %PC.i31
  %10355 = inttoptr i64 %10350 to i32*
  store i32 %10351, i32* %10355
  store %struct.Memory* %loadMem_44f4a3, %struct.Memory** %MEMORY
  %loadMem_44f4a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10357 = getelementptr inbounds %struct.GPR, %struct.GPR* %10356, i32 0, i32 33
  %10358 = getelementptr inbounds %struct.Reg, %struct.Reg* %10357, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %10358 to i64*
  %10359 = load i64, i64* %PC.i30
  %10360 = add i64 %10359, 5
  %10361 = load i64, i64* %PC.i30
  %10362 = add i64 %10361, 5
  store i64 %10362, i64* %PC.i30
  %10363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10360, i64* %10363, align 8
  store %struct.Memory* %loadMem_44f4a9, %struct.Memory** %MEMORY
  br label %block_.L_44f4ae

block_.L_44f4ae:                                  ; preds = %block_.L_44f49e, %block_44f484
  %loadMem_44f4ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %10364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10365 = getelementptr inbounds %struct.GPR, %struct.GPR* %10364, i32 0, i32 33
  %10366 = getelementptr inbounds %struct.Reg, %struct.Reg* %10365, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %10366 to i64*
  %10367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10368 = getelementptr inbounds %struct.GPR, %struct.GPR* %10367, i32 0, i32 1
  %10369 = getelementptr inbounds %struct.Reg, %struct.Reg* %10368, i32 0, i32 0
  %RAX.i28 = bitcast %union.anon* %10369 to i64*
  %10370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10371 = getelementptr inbounds %struct.GPR, %struct.GPR* %10370, i32 0, i32 15
  %10372 = getelementptr inbounds %struct.Reg, %struct.Reg* %10371, i32 0, i32 0
  %RBP.i29 = bitcast %union.anon* %10372 to i64*
  %10373 = load i64, i64* %RBP.i29
  %10374 = sub i64 %10373, 492
  %10375 = load i64, i64* %PC.i27
  %10376 = add i64 %10375, 6
  store i64 %10376, i64* %PC.i27
  %10377 = inttoptr i64 %10374 to i32*
  %10378 = load i32, i32* %10377
  %10379 = zext i32 %10378 to i64
  store i64 %10379, i64* %RAX.i28, align 8
  store %struct.Memory* %loadMem_44f4ae, %struct.Memory** %MEMORY
  %loadMem_44f4b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10381 = getelementptr inbounds %struct.GPR, %struct.GPR* %10380, i32 0, i32 33
  %10382 = getelementptr inbounds %struct.Reg, %struct.Reg* %10381, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %10382 to i64*
  %10383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10384 = getelementptr inbounds %struct.GPR, %struct.GPR* %10383, i32 0, i32 1
  %10385 = getelementptr inbounds %struct.Reg, %struct.Reg* %10384, i32 0, i32 0
  %10386 = bitcast %union.anon* %10385 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10386, i32 0, i32 0
  %10387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10388 = getelementptr inbounds %struct.GPR, %struct.GPR* %10387, i32 0, i32 5
  %10389 = getelementptr inbounds %struct.Reg, %struct.Reg* %10388, i32 0, i32 0
  %10390 = bitcast %union.anon* %10389 to %struct.anon.2*
  %CL.i26 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10390, i32 0, i32 0
  %10391 = load i8, i8* %AL.i
  %10392 = zext i8 %10391 to i64
  %10393 = load i64, i64* %PC.i25
  %10394 = add i64 %10393, 2
  store i64 %10394, i64* %PC.i25
  store i8 %10391, i8* %CL.i26, align 1
  store %struct.Memory* %loadMem_44f4b4, %struct.Memory** %MEMORY
  %loadMem_44f4b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10396 = getelementptr inbounds %struct.GPR, %struct.GPR* %10395, i32 0, i32 33
  %10397 = getelementptr inbounds %struct.Reg, %struct.Reg* %10396, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %10397 to i64*
  %10398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10399 = getelementptr inbounds %struct.GPR, %struct.GPR* %10398, i32 0, i32 7
  %10400 = getelementptr inbounds %struct.Reg, %struct.Reg* %10399, i32 0, i32 0
  %RDX.i23 = bitcast %union.anon* %10400 to i64*
  %10401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10402 = getelementptr inbounds %struct.GPR, %struct.GPR* %10401, i32 0, i32 15
  %10403 = getelementptr inbounds %struct.Reg, %struct.Reg* %10402, i32 0, i32 0
  %RBP.i24 = bitcast %union.anon* %10403 to i64*
  %10404 = load i64, i64* %RBP.i24
  %10405 = sub i64 %10404, 456
  %10406 = load i64, i64* %PC.i22
  %10407 = add i64 %10406, 7
  store i64 %10407, i64* %PC.i22
  %10408 = inttoptr i64 %10405 to i64*
  %10409 = load i64, i64* %10408
  store i64 %10409, i64* %RDX.i23, align 8
  store %struct.Memory* %loadMem_44f4b6, %struct.Memory** %MEMORY
  %loadMem_44f4bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10411 = getelementptr inbounds %struct.GPR, %struct.GPR* %10410, i32 0, i32 33
  %10412 = getelementptr inbounds %struct.Reg, %struct.Reg* %10411, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %10412 to i64*
  %10413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10414 = getelementptr inbounds %struct.GPR, %struct.GPR* %10413, i32 0, i32 9
  %10415 = getelementptr inbounds %struct.Reg, %struct.Reg* %10414, i32 0, i32 0
  %RSI.i20 = bitcast %union.anon* %10415 to i64*
  %10416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10417 = getelementptr inbounds %struct.GPR, %struct.GPR* %10416, i32 0, i32 15
  %10418 = getelementptr inbounds %struct.Reg, %struct.Reg* %10417, i32 0, i32 0
  %RBP.i21 = bitcast %union.anon* %10418 to i64*
  %10419 = load i64, i64* %RBP.i21
  %10420 = sub i64 %10419, 436
  %10421 = load i64, i64* %PC.i19
  %10422 = add i64 %10421, 7
  store i64 %10422, i64* %PC.i19
  %10423 = inttoptr i64 %10420 to i32*
  %10424 = load i32, i32* %10423
  %10425 = sext i32 %10424 to i64
  store i64 %10425, i64* %RSI.i20, align 8
  store %struct.Memory* %loadMem_44f4bd, %struct.Memory** %MEMORY
  %loadMem_44f4c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10427 = getelementptr inbounds %struct.GPR, %struct.GPR* %10426, i32 0, i32 33
  %10428 = getelementptr inbounds %struct.Reg, %struct.Reg* %10427, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %10428 to i64*
  %10429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10430 = getelementptr inbounds %struct.GPR, %struct.GPR* %10429, i32 0, i32 5
  %10431 = getelementptr inbounds %struct.Reg, %struct.Reg* %10430, i32 0, i32 0
  %10432 = bitcast %union.anon* %10431 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10432, i32 0, i32 0
  %10433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10434 = getelementptr inbounds %struct.GPR, %struct.GPR* %10433, i32 0, i32 7
  %10435 = getelementptr inbounds %struct.Reg, %struct.Reg* %10434, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %10435 to i64*
  %10436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10437 = getelementptr inbounds %struct.GPR, %struct.GPR* %10436, i32 0, i32 9
  %10438 = getelementptr inbounds %struct.Reg, %struct.Reg* %10437, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %10438 to i64*
  %10439 = load i64, i64* %RDX.i
  %10440 = load i64, i64* %RSI.i
  %10441 = add i64 %10439, 4
  %10442 = add i64 %10441, %10440
  %10443 = load i8, i8* %CL.i
  %10444 = zext i8 %10443 to i64
  %10445 = load i64, i64* %PC.i18
  %10446 = add i64 %10445, 4
  store i64 %10446, i64* %PC.i18
  %10447 = inttoptr i64 %10442 to i8*
  store i8 %10443, i8* %10447
  store %struct.Memory* %loadMem_44f4c4, %struct.Memory** %MEMORY
  br label %block_.L_44f4c8

block_.L_44f4c8:                                  ; preds = %block_.L_44f4ae, %block_44f467
  %loadMem_44f4c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10449 = getelementptr inbounds %struct.GPR, %struct.GPR* %10448, i32 0, i32 33
  %10450 = getelementptr inbounds %struct.Reg, %struct.Reg* %10449, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %10450 to i64*
  %10451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10452 = getelementptr inbounds %struct.GPR, %struct.GPR* %10451, i32 0, i32 1
  %10453 = getelementptr inbounds %struct.Reg, %struct.Reg* %10452, i32 0, i32 0
  %RAX.i16 = bitcast %union.anon* %10453 to i64*
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10455 = getelementptr inbounds %struct.GPR, %struct.GPR* %10454, i32 0, i32 15
  %10456 = getelementptr inbounds %struct.Reg, %struct.Reg* %10455, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %10456 to i64*
  %10457 = load i64, i64* %RBP.i17
  %10458 = sub i64 %10457, 436
  %10459 = load i64, i64* %PC.i15
  %10460 = add i64 %10459, 6
  store i64 %10460, i64* %PC.i15
  %10461 = inttoptr i64 %10458 to i32*
  %10462 = load i32, i32* %10461
  %10463 = zext i32 %10462 to i64
  store i64 %10463, i64* %RAX.i16, align 8
  store %struct.Memory* %loadMem_44f4c8, %struct.Memory** %MEMORY
  %loadMem_44f4ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %10464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10465 = getelementptr inbounds %struct.GPR, %struct.GPR* %10464, i32 0, i32 33
  %10466 = getelementptr inbounds %struct.Reg, %struct.Reg* %10465, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %10466 to i64*
  %10467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10468 = getelementptr inbounds %struct.GPR, %struct.GPR* %10467, i32 0, i32 1
  %10469 = getelementptr inbounds %struct.Reg, %struct.Reg* %10468, i32 0, i32 0
  %RAX.i14 = bitcast %union.anon* %10469 to i64*
  %10470 = load i64, i64* %RAX.i14
  %10471 = load i64, i64* %PC.i13
  %10472 = add i64 %10471, 3
  store i64 %10472, i64* %PC.i13
  %10473 = trunc i64 %10470 to i32
  %10474 = add i32 1, %10473
  %10475 = zext i32 %10474 to i64
  store i64 %10475, i64* %RAX.i14, align 8
  %10476 = icmp ult i32 %10474, %10473
  %10477 = icmp ult i32 %10474, 1
  %10478 = or i1 %10476, %10477
  %10479 = zext i1 %10478 to i8
  %10480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10479, i8* %10480, align 1
  %10481 = and i32 %10474, 255
  %10482 = call i32 @llvm.ctpop.i32(i32 %10481)
  %10483 = trunc i32 %10482 to i8
  %10484 = and i8 %10483, 1
  %10485 = xor i8 %10484, 1
  %10486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10485, i8* %10486, align 1
  %10487 = xor i64 1, %10470
  %10488 = trunc i64 %10487 to i32
  %10489 = xor i32 %10488, %10474
  %10490 = lshr i32 %10489, 4
  %10491 = trunc i32 %10490 to i8
  %10492 = and i8 %10491, 1
  %10493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10492, i8* %10493, align 1
  %10494 = icmp eq i32 %10474, 0
  %10495 = zext i1 %10494 to i8
  %10496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10495, i8* %10496, align 1
  %10497 = lshr i32 %10474, 31
  %10498 = trunc i32 %10497 to i8
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10498, i8* %10499, align 1
  %10500 = lshr i32 %10473, 31
  %10501 = xor i32 %10497, %10500
  %10502 = add i32 %10501, %10497
  %10503 = icmp eq i32 %10502, 2
  %10504 = zext i1 %10503 to i8
  %10505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10504, i8* %10505, align 1
  store %struct.Memory* %loadMem_44f4ce, %struct.Memory** %MEMORY
  %loadMem_44f4d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10507 = getelementptr inbounds %struct.GPR, %struct.GPR* %10506, i32 0, i32 33
  %10508 = getelementptr inbounds %struct.Reg, %struct.Reg* %10507, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %10508 to i64*
  %10509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10510 = getelementptr inbounds %struct.GPR, %struct.GPR* %10509, i32 0, i32 1
  %10511 = getelementptr inbounds %struct.Reg, %struct.Reg* %10510, i32 0, i32 0
  %EAX.i11 = bitcast %union.anon* %10511 to i32*
  %10512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10513 = getelementptr inbounds %struct.GPR, %struct.GPR* %10512, i32 0, i32 15
  %10514 = getelementptr inbounds %struct.Reg, %struct.Reg* %10513, i32 0, i32 0
  %RBP.i12 = bitcast %union.anon* %10514 to i64*
  %10515 = load i64, i64* %RBP.i12
  %10516 = sub i64 %10515, 436
  %10517 = load i32, i32* %EAX.i11
  %10518 = zext i32 %10517 to i64
  %10519 = load i64, i64* %PC.i10
  %10520 = add i64 %10519, 6
  store i64 %10520, i64* %PC.i10
  %10521 = inttoptr i64 %10516 to i32*
  store i32 %10517, i32* %10521
  store %struct.Memory* %loadMem_44f4d1, %struct.Memory** %MEMORY
  %loadMem_44f4d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10523 = getelementptr inbounds %struct.GPR, %struct.GPR* %10522, i32 0, i32 33
  %10524 = getelementptr inbounds %struct.Reg, %struct.Reg* %10523, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %10524 to i64*
  %10525 = load i64, i64* %PC.i9
  %10526 = add i64 %10525, -152
  %10527 = load i64, i64* %PC.i9
  %10528 = add i64 %10527, 5
  store i64 %10528, i64* %PC.i9
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10526, i64* %10529, align 8
  store %struct.Memory* %loadMem_44f4d7, %struct.Memory** %MEMORY
  br label %block_.L_44f43f

block_.L_44f4dc:                                  ; preds = %block_.L_44f43f
  %loadMem_44f4dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10531 = getelementptr inbounds %struct.GPR, %struct.GPR* %10530, i32 0, i32 33
  %10532 = getelementptr inbounds %struct.Reg, %struct.Reg* %10531, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %10532 to i64*
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10534 = getelementptr inbounds %struct.GPR, %struct.GPR* %10533, i32 0, i32 1
  %10535 = getelementptr inbounds %struct.Reg, %struct.Reg* %10534, i32 0, i32 0
  %RAX.i8 = bitcast %union.anon* %10535 to i64*
  %10536 = load i64, i64* %PC.i7
  %10537 = add i64 %10536, 7
  store i64 %10537, i64* %PC.i7
  %10538 = load i32, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  %10539 = zext i32 %10538 to i64
  store i64 %10539, i64* %RAX.i8, align 8
  store %struct.Memory* %loadMem_44f4dc, %struct.Memory** %MEMORY
  %loadMem_44f4e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10541 = getelementptr inbounds %struct.GPR, %struct.GPR* %10540, i32 0, i32 33
  %10542 = getelementptr inbounds %struct.Reg, %struct.Reg* %10541, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %10542 to i64*
  %10543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10544 = getelementptr inbounds %struct.GPR, %struct.GPR* %10543, i32 0, i32 1
  %10545 = getelementptr inbounds %struct.Reg, %struct.Reg* %10544, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %10545 to i64*
  %10546 = load i64, i64* %RAX.i
  %10547 = load i64, i64* %PC.i6
  %10548 = add i64 %10547, 3
  store i64 %10548, i64* %PC.i6
  %10549 = trunc i64 %10546 to i32
  %10550 = add i32 1, %10549
  %10551 = zext i32 %10550 to i64
  store i64 %10551, i64* %RAX.i, align 8
  %10552 = icmp ult i32 %10550, %10549
  %10553 = icmp ult i32 %10550, 1
  %10554 = or i1 %10552, %10553
  %10555 = zext i1 %10554 to i8
  %10556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10555, i8* %10556, align 1
  %10557 = and i32 %10550, 255
  %10558 = call i32 @llvm.ctpop.i32(i32 %10557)
  %10559 = trunc i32 %10558 to i8
  %10560 = and i8 %10559, 1
  %10561 = xor i8 %10560, 1
  %10562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10561, i8* %10562, align 1
  %10563 = xor i64 1, %10546
  %10564 = trunc i64 %10563 to i32
  %10565 = xor i32 %10564, %10550
  %10566 = lshr i32 %10565, 4
  %10567 = trunc i32 %10566 to i8
  %10568 = and i8 %10567, 1
  %10569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10568, i8* %10569, align 1
  %10570 = icmp eq i32 %10550, 0
  %10571 = zext i1 %10570 to i8
  %10572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10571, i8* %10572, align 1
  %10573 = lshr i32 %10550, 31
  %10574 = trunc i32 %10573 to i8
  %10575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10574, i8* %10575, align 1
  %10576 = lshr i32 %10549, 31
  %10577 = xor i32 %10573, %10576
  %10578 = add i32 %10577, %10573
  %10579 = icmp eq i32 %10578, 2
  %10580 = zext i1 %10579 to i8
  %10581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10580, i8* %10581, align 1
  store %struct.Memory* %loadMem_44f4e3, %struct.Memory** %MEMORY
  %loadMem_44f4e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10583 = getelementptr inbounds %struct.GPR, %struct.GPR* %10582, i32 0, i32 33
  %10584 = getelementptr inbounds %struct.Reg, %struct.Reg* %10583, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %10584 to i64*
  %10585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10586 = getelementptr inbounds %struct.GPR, %struct.GPR* %10585, i32 0, i32 1
  %10587 = getelementptr inbounds %struct.Reg, %struct.Reg* %10586, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %10587 to i32*
  %10588 = load i32, i32* %EAX.i
  %10589 = zext i32 %10588 to i64
  %10590 = load i64, i64* %PC.i5
  %10591 = add i64 %10590, 7
  store i64 %10591, i64* %PC.i5
  store i32 %10588, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  store %struct.Memory* %loadMem_44f4e6, %struct.Memory** %MEMORY
  br label %block_.L_44f4ed

block_.L_44f4ed:                                  ; preds = %block_.L_44f4dc, %block_.L_44ec1f, %block_44eae1
  %loadMem_44f4ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %10592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10593 = getelementptr inbounds %struct.GPR, %struct.GPR* %10592, i32 0, i32 33
  %10594 = getelementptr inbounds %struct.Reg, %struct.Reg* %10593, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %10594 to i64*
  %10595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10596 = getelementptr inbounds %struct.GPR, %struct.GPR* %10595, i32 0, i32 13
  %10597 = getelementptr inbounds %struct.Reg, %struct.Reg* %10596, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %10597 to i64*
  %10598 = load i64, i64* %RSP.i
  %10599 = load i64, i64* %PC.i4
  %10600 = add i64 %10599, 7
  store i64 %10600, i64* %PC.i4
  %10601 = add i64 496, %10598
  store i64 %10601, i64* %RSP.i, align 8
  %10602 = icmp ult i64 %10601, %10598
  %10603 = icmp ult i64 %10601, 496
  %10604 = or i1 %10602, %10603
  %10605 = zext i1 %10604 to i8
  %10606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10605, i8* %10606, align 1
  %10607 = trunc i64 %10601 to i32
  %10608 = and i32 %10607, 255
  %10609 = call i32 @llvm.ctpop.i32(i32 %10608)
  %10610 = trunc i32 %10609 to i8
  %10611 = and i8 %10610, 1
  %10612 = xor i8 %10611, 1
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10612, i8* %10613, align 1
  %10614 = xor i64 496, %10598
  %10615 = xor i64 %10614, %10601
  %10616 = lshr i64 %10615, 4
  %10617 = trunc i64 %10616 to i8
  %10618 = and i8 %10617, 1
  %10619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10618, i8* %10619, align 1
  %10620 = icmp eq i64 %10601, 0
  %10621 = zext i1 %10620 to i8
  %10622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10621, i8* %10622, align 1
  %10623 = lshr i64 %10601, 63
  %10624 = trunc i64 %10623 to i8
  %10625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10624, i8* %10625, align 1
  %10626 = lshr i64 %10598, 63
  %10627 = xor i64 %10623, %10626
  %10628 = add i64 %10627, %10623
  %10629 = icmp eq i64 %10628, 2
  %10630 = zext i1 %10629 to i8
  %10631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10630, i8* %10631, align 1
  store %struct.Memory* %loadMem_44f4ed, %struct.Memory** %MEMORY
  %loadMem_44f4f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10633 = getelementptr inbounds %struct.GPR, %struct.GPR* %10632, i32 0, i32 33
  %10634 = getelementptr inbounds %struct.Reg, %struct.Reg* %10633, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %10634 to i64*
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10636 = getelementptr inbounds %struct.GPR, %struct.GPR* %10635, i32 0, i32 15
  %10637 = getelementptr inbounds %struct.Reg, %struct.Reg* %10636, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %10637 to i64*
  %10638 = load i64, i64* %PC.i2
  %10639 = add i64 %10638, 1
  store i64 %10639, i64* %PC.i2
  %10640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10641 = load i64, i64* %10640, align 8
  %10642 = add i64 %10641, 8
  %10643 = inttoptr i64 %10641 to i64*
  %10644 = load i64, i64* %10643
  store i64 %10644, i64* %RBP.i3, align 8
  store i64 %10642, i64* %10640, align 8
  store %struct.Memory* %loadMem_44f4f4, %struct.Memory** %MEMORY
  %loadMem_44f4f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10646 = getelementptr inbounds %struct.GPR, %struct.GPR* %10645, i32 0, i32 33
  %10647 = getelementptr inbounds %struct.Reg, %struct.Reg* %10646, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %10647 to i64*
  %10648 = load i64, i64* %PC.i1
  %10649 = add i64 %10648, 1
  store i64 %10649, i64* %PC.i1
  %10650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10652 = load i64, i64* %10651, align 8
  %10653 = inttoptr i64 %10652 to i64*
  %10654 = load i64, i64* %10653
  store i64 %10654, i64* %10650, align 8
  %10655 = add i64 %10652, 8
  store i64 %10655, i64* %10651, align 8
  store %struct.Memory* %loadMem_44f4f5, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_44f4f5
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x1f0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 496
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 496
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 496, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1bc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44ea5d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44ea62(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ead3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57eec5___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57eec5_type* @G__0x57eec5 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x171___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 369, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x57f043___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x57f043_type* @G__0x57f043 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 20, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1d4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 468
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x1e0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1d4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 468
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1e4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x1e0__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x1e8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r9___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1e4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1e8__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 488
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abortgo(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__0xb54ce4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0xb54ce4_type* @G_0xb54ce4 to i32*)
  %9 = sub i32 %8, 5
  %10 = icmp ult i32 %8, 5
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 5
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_44eae6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44f4ed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x64__0xac5d28(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  %9 = sub i32 %8, 100
  %10 = icmp ult i32 %8, 100
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 100
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44ec29(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x1cc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 460
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1d0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x1b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 436
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1b4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0xac5d28___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44eba0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xac5d30___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xac5d30_type* @G__0xac5d30 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1b4__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x1dc___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 476, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x19c__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 412
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x1d0__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 464
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44eb87(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x1d0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1b4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x1cc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44eb8c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44eb14(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0x1cc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 460
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, -1
  %16 = icmp ult i32 %14, -1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, -1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %37, 1
  %39 = xor i32 %34, %37
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44ec1f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1cc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xac5d28___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44ec09(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1dc___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 476, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xac5d30___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xac5d30_type* @G__0xac5d30 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1cc__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x1dc___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 476, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xac5d28___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0xac5d28(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ec24(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ec29(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xac5d28___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xac5d28_type* @G_0xac5d28 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x1c8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7ae438___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7ae438_type* @G_0x7ae438 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x1c8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xafdfb0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xafdfb0_type* @G_0xafdfb0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x194__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 404
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x198__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 408
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1bc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x19c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 412
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xb8b854___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0xb8b854_type* @G_0xb8b854 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0xb54ce4___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0xb54ce4_type* @G_0xb54ce4 to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RDX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x1a0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 416
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x1a4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 420
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x1a8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 424
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x1ac__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 428
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x1b0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 432
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 440
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__MINUS0x1b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 440
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44edb0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1b8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0xb54ce4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0xb54ce4_type* @G_0xb54ce4 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44ed65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1b8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x1b4___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 436, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 436
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 436, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1b8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x2___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 1
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x1c8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x1c8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 456, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 456
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 456, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1b8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x2___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 1
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.get_move_from_stack(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ed97(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x1b4__rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 436
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  store i32 0, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x1c8__rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 456
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  store i32 0, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ed9c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1b8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ecf8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x15__MINUS0x1b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 436
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 21, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x190__MINUS0x1b4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 436
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 400
  %16 = icmp ult i32 %14, 400
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 400
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44edfa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1b4__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_0xb05020___rax_1____cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 11554848
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x1b0__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 15
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RBP = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = add i64 %16, -432
  %19 = add i64 %18, %17
  %20 = load i8, i8* %CL
  %21 = zext i8 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i8*
  store i8 %20, i8* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44edba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x1b0__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.mark_string(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44ee2e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1__MINUS0x1b0__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -432
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 1, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44efe3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44ee65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44efcf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_MINUS0x1b0__rbp__rax_1____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = add i64 %15, -432
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 8
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i8*
  %22 = load i8, i8* %21
  %23 = sext i8 %22 to i64
  %24 = and i64 %23, 4294967295
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44ee82(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44eebc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_MINUS0x1b0__rbp__rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = add i64 %15, -432
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 8
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i8*
  %22 = load i8, i8* %21
  %23 = sext i8 %22 to i64
  %24 = and i64 %23, 4294967295
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1
  %14 = icmp ult i32 %9, 1
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44ef6a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44eef6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44ef30(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44efca(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44efca(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1
  %14 = icmp ult i32 %9, 1
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44ef9a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 2
  %14 = icmp ult i32 %9, 2
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 2, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44efb6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1b4__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44efc5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x2__MINUS0x1b0__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -432
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 2, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44efca(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44ee38(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44f097(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44f01a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44f083(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44f04a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44f07e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xb0eff0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xb0eff0_type* @G__0xb0eff0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x17c___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 380, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x34__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44f07e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0__MINUS0x1b0__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -432
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 0, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44efed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44f20e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44f0f9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44f0fe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44f1fa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44f138(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 2
  %14 = icmp ult i32 %9, 2
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 2, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44f1e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44f172(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44f1ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44f1f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x3__MINUS0x1b0__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -432
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 3, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44f0a1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44f3e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44f245(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44f3d2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44f262(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44f2b9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_44f2b9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 4
  %14 = icmp ult i32 %9, 4
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 4, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_44f3be(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44f310(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_44f310(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44f367(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_44f367(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44f3cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_44f3cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44f3cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x4__MINUS0x1b0__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -432
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 4, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44f218(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44f435(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x1b4__rax__rcx_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 436
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x5__MINUS0x1b0__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -432
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 5, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44f3f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44f4dc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44f46c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44f4c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_44f49e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1ec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44f4ae(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1ec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x1c8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1b4__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__0x4__rdx__rsi_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 9
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RSI = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = add i64 %16, 4
  %19 = add i64 %18, %17
  %20 = load i8, i8* %CL
  %21 = zext i8 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i8*
  store i8 %20, i8* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44f43f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x1f0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 496, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 496
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 496, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
